"".gigantic.get_a STEXT dupok size=116 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_a(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	94
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	101
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	24(AX), AX
	0x003f 00063 (<autogenerated>:1)	PCDATA	$0, $0
	0x003f 00063 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0043 00067 (<autogenerated>:1)	CALL	AX
	0x0045 00069 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004a 00074 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x004f 00079 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0054 00084 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x0059 00089 (<autogenerated>:1)	ADDQ	$32, SP
	0x005d 00093 (<autogenerated>:1)	RET
	0x005e 00094 (<autogenerated>:1)	NOP
	0x005e 00094 (<autogenerated>:1)	PCDATA	$1, $-1
	0x005e 00094 (<autogenerated>:1)	PCDATA	$0, $-1
	0x005e 00094 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0063 00099 (<autogenerated>:1)	JMP	0
	0x0065 00101 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006a 00106 (<autogenerated>:1)	CMPQ	(BX), DI
	0x006d 00109 (<autogenerated>:1)	JNE	38
	0x006f 00111 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0072 00114 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 4f 48  eH..%....H;a.vOH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 3f 48 c7 44 24 38 00 00 00 00 48   H..u?H.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 40 18 48  .D$(..H.L$0H.@.H
	0x0040 89 0c 24 ff d0 48 8b 44 24 08 48 89 44 24 10 48  ..$..H.D$.H.D$.H
	0x0050 89 44 24 38 48 8b 6c 24 18 48 83 c4 20 c3 e8 00  .D$8H.l$.H.. ...
	0x0060 00 00 00 eb 9b 48 8d 7c 24 28 48 39 3b 75 b7 48  .....H.|$(H9;u.H
	0x0070 89 23 eb b2                                      .#..
	rel 5+4 t=16 TLS+0
	rel 67+0 t=11 +0
	rel 95+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_aa STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_aa(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	32(AX), AX
	0x003f 00063 (<autogenerated>:1)	PCDATA	$0, $0
	0x003f 00063 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0043 00067 (<autogenerated>:1)	CALL	AX
	0x0045 00069 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004b 00075 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0051 00081 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 0f 57 c0 f2 0f 11 44 24 38 48   H..uB.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 40 20 48  .D$(..H.L$0H.@ H
	0x0040 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f 11 44 24  ..$.....D$....D$
	0x0050 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48 83 c4 20  ....D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 67+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_b STEXT dupok size=116 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_b(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	94
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	101
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	40(AX), AX
	0x003f 00063 (<autogenerated>:1)	PCDATA	$0, $0
	0x003f 00063 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0043 00067 (<autogenerated>:1)	CALL	AX
	0x0045 00069 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004a 00074 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x004f 00079 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0054 00084 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x0059 00089 (<autogenerated>:1)	ADDQ	$32, SP
	0x005d 00093 (<autogenerated>:1)	RET
	0x005e 00094 (<autogenerated>:1)	NOP
	0x005e 00094 (<autogenerated>:1)	PCDATA	$1, $-1
	0x005e 00094 (<autogenerated>:1)	PCDATA	$0, $-1
	0x005e 00094 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0063 00099 (<autogenerated>:1)	JMP	0
	0x0065 00101 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006a 00106 (<autogenerated>:1)	CMPQ	(BX), DI
	0x006d 00109 (<autogenerated>:1)	JNE	38
	0x006f 00111 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0072 00114 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 4f 48  eH..%....H;a.vOH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 3f 48 c7 44 24 38 00 00 00 00 48   H..u?H.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 40 28 48  .D$(..H.L$0H.@(H
	0x0040 89 0c 24 ff d0 48 8b 44 24 08 48 89 44 24 10 48  ..$..H.D$.H.D$.H
	0x0050 89 44 24 38 48 8b 6c 24 18 48 83 c4 20 c3 e8 00  .D$8H.l$.H.. ...
	0x0060 00 00 00 eb 9b 48 8d 7c 24 28 48 39 3b 75 b7 48  .....H.|$(H9;u.H
	0x0070 89 23 eb b2                                      .#..
	rel 5+4 t=16 TLS+0
	rel 67+0 t=11 +0
	rel 95+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_bb STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_bb(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	48(AX), AX
	0x003f 00063 (<autogenerated>:1)	PCDATA	$0, $0
	0x003f 00063 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0043 00067 (<autogenerated>:1)	CALL	AX
	0x0045 00069 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004b 00075 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0051 00081 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 0f 57 c0 f2 0f 11 44 24 38 48   H..uB.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 40 30 48  .D$(..H.L$0H.@0H
	0x0040 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f 11 44 24  ..$.....D$....D$
	0x0050 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48 83 c4 20  ....D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 67+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_c STEXT dupok size=116 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_c(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	94
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	101
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	56(AX), AX
	0x003f 00063 (<autogenerated>:1)	PCDATA	$0, $0
	0x003f 00063 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0043 00067 (<autogenerated>:1)	CALL	AX
	0x0045 00069 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004a 00074 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x004f 00079 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0054 00084 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x0059 00089 (<autogenerated>:1)	ADDQ	$32, SP
	0x005d 00093 (<autogenerated>:1)	RET
	0x005e 00094 (<autogenerated>:1)	NOP
	0x005e 00094 (<autogenerated>:1)	PCDATA	$1, $-1
	0x005e 00094 (<autogenerated>:1)	PCDATA	$0, $-1
	0x005e 00094 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0063 00099 (<autogenerated>:1)	JMP	0
	0x0065 00101 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006a 00106 (<autogenerated>:1)	CMPQ	(BX), DI
	0x006d 00109 (<autogenerated>:1)	JNE	38
	0x006f 00111 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0072 00114 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 4f 48  eH..%....H;a.vOH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 3f 48 c7 44 24 38 00 00 00 00 48   H..u?H.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 40 38 48  .D$(..H.L$0H.@8H
	0x0040 89 0c 24 ff d0 48 8b 44 24 08 48 89 44 24 10 48  ..$..H.D$.H.D$.H
	0x0050 89 44 24 38 48 8b 6c 24 18 48 83 c4 20 c3 e8 00  .D$8H.l$.H.. ...
	0x0060 00 00 00 eb 9b 48 8d 7c 24 28 48 39 3b 75 b7 48  .....H.|$(H9;u.H
	0x0070 89 23 eb b2                                      .#..
	rel 5+4 t=16 TLS+0
	rel 67+0 t=11 +0
	rel 95+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_cc STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_cc(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	64(AX), AX
	0x003f 00063 (<autogenerated>:1)	PCDATA	$0, $0
	0x003f 00063 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0043 00067 (<autogenerated>:1)	CALL	AX
	0x0045 00069 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004b 00075 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0051 00081 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 0f 57 c0 f2 0f 11 44 24 38 48   H..uB.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 40 40 48  .D$(..H.L$0H.@@H
	0x0040 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f 11 44 24  ..$.....D$....D$
	0x0050 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48 83 c4 20  ....D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 67+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_d STEXT dupok size=116 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_d(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	94
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	101
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	72(AX), AX
	0x003f 00063 (<autogenerated>:1)	PCDATA	$0, $0
	0x003f 00063 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0043 00067 (<autogenerated>:1)	CALL	AX
	0x0045 00069 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004a 00074 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x004f 00079 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0054 00084 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x0059 00089 (<autogenerated>:1)	ADDQ	$32, SP
	0x005d 00093 (<autogenerated>:1)	RET
	0x005e 00094 (<autogenerated>:1)	NOP
	0x005e 00094 (<autogenerated>:1)	PCDATA	$1, $-1
	0x005e 00094 (<autogenerated>:1)	PCDATA	$0, $-1
	0x005e 00094 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0063 00099 (<autogenerated>:1)	JMP	0
	0x0065 00101 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006a 00106 (<autogenerated>:1)	CMPQ	(BX), DI
	0x006d 00109 (<autogenerated>:1)	JNE	38
	0x006f 00111 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0072 00114 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 4f 48  eH..%....H;a.vOH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 3f 48 c7 44 24 38 00 00 00 00 48   H..u?H.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 40 48 48  .D$(..H.L$0H.@HH
	0x0040 89 0c 24 ff d0 48 8b 44 24 08 48 89 44 24 10 48  ..$..H.D$.H.D$.H
	0x0050 89 44 24 38 48 8b 6c 24 18 48 83 c4 20 c3 e8 00  .D$8H.l$.H.. ...
	0x0060 00 00 00 eb 9b 48 8d 7c 24 28 48 39 3b 75 b7 48  .....H.|$(H9;u.H
	0x0070 89 23 eb b2                                      .#..
	rel 5+4 t=16 TLS+0
	rel 67+0 t=11 +0
	rel 95+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_dd STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_dd(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	80(AX), AX
	0x003f 00063 (<autogenerated>:1)	PCDATA	$0, $0
	0x003f 00063 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0043 00067 (<autogenerated>:1)	CALL	AX
	0x0045 00069 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004b 00075 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0051 00081 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 0f 57 c0 f2 0f 11 44 24 38 48   H..uB.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 40 50 48  .D$(..H.L$0H.@PH
	0x0040 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f 11 44 24  ..$.....D$....D$
	0x0050 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48 83 c4 20  ....D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 67+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_e STEXT dupok size=116 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_e(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	94
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	101
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	88(AX), AX
	0x003f 00063 (<autogenerated>:1)	PCDATA	$0, $0
	0x003f 00063 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0043 00067 (<autogenerated>:1)	CALL	AX
	0x0045 00069 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004a 00074 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x004f 00079 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0054 00084 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x0059 00089 (<autogenerated>:1)	ADDQ	$32, SP
	0x005d 00093 (<autogenerated>:1)	RET
	0x005e 00094 (<autogenerated>:1)	NOP
	0x005e 00094 (<autogenerated>:1)	PCDATA	$1, $-1
	0x005e 00094 (<autogenerated>:1)	PCDATA	$0, $-1
	0x005e 00094 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0063 00099 (<autogenerated>:1)	JMP	0
	0x0065 00101 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006a 00106 (<autogenerated>:1)	CMPQ	(BX), DI
	0x006d 00109 (<autogenerated>:1)	JNE	38
	0x006f 00111 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0072 00114 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 4f 48  eH..%....H;a.vOH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 3f 48 c7 44 24 38 00 00 00 00 48   H..u?H.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 40 58 48  .D$(..H.L$0H.@XH
	0x0040 89 0c 24 ff d0 48 8b 44 24 08 48 89 44 24 10 48  ..$..H.D$.H.D$.H
	0x0050 89 44 24 38 48 8b 6c 24 18 48 83 c4 20 c3 e8 00  .D$8H.l$.H.. ...
	0x0060 00 00 00 eb 9b 48 8d 7c 24 28 48 39 3b 75 b7 48  .....H.|$(H9;u.H
	0x0070 89 23 eb b2                                      .#..
	rel 5+4 t=16 TLS+0
	rel 67+0 t=11 +0
	rel 95+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_ee STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_ee(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	96(AX), AX
	0x003f 00063 (<autogenerated>:1)	PCDATA	$0, $0
	0x003f 00063 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0043 00067 (<autogenerated>:1)	CALL	AX
	0x0045 00069 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004b 00075 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0051 00081 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 0f 57 c0 f2 0f 11 44 24 38 48   H..uB.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 40 60 48  .D$(..H.L$0H.@`H
	0x0040 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f 11 44 24  ..$.....D$....D$
	0x0050 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48 83 c4 20  ....D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 67+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_f STEXT dupok size=116 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_f(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	94
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	101
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	104(AX), AX
	0x003f 00063 (<autogenerated>:1)	PCDATA	$0, $0
	0x003f 00063 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0043 00067 (<autogenerated>:1)	CALL	AX
	0x0045 00069 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004a 00074 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x004f 00079 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0054 00084 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x0059 00089 (<autogenerated>:1)	ADDQ	$32, SP
	0x005d 00093 (<autogenerated>:1)	RET
	0x005e 00094 (<autogenerated>:1)	NOP
	0x005e 00094 (<autogenerated>:1)	PCDATA	$1, $-1
	0x005e 00094 (<autogenerated>:1)	PCDATA	$0, $-1
	0x005e 00094 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0063 00099 (<autogenerated>:1)	JMP	0
	0x0065 00101 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006a 00106 (<autogenerated>:1)	CMPQ	(BX), DI
	0x006d 00109 (<autogenerated>:1)	JNE	38
	0x006f 00111 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0072 00114 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 4f 48  eH..%....H;a.vOH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 3f 48 c7 44 24 38 00 00 00 00 48   H..u?H.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 40 68 48  .D$(..H.L$0H.@hH
	0x0040 89 0c 24 ff d0 48 8b 44 24 08 48 89 44 24 10 48  ..$..H.D$.H.D$.H
	0x0050 89 44 24 38 48 8b 6c 24 18 48 83 c4 20 c3 e8 00  .D$8H.l$.H.. ...
	0x0060 00 00 00 eb 9b 48 8d 7c 24 28 48 39 3b 75 b7 48  .....H.|$(H9;u.H
	0x0070 89 23 eb b2                                      .#..
	rel 5+4 t=16 TLS+0
	rel 67+0 t=11 +0
	rel 95+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_ff STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_ff(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	112(AX), AX
	0x003f 00063 (<autogenerated>:1)	PCDATA	$0, $0
	0x003f 00063 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0043 00067 (<autogenerated>:1)	CALL	AX
	0x0045 00069 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004b 00075 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0051 00081 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 0f 57 c0 f2 0f 11 44 24 38 48   H..uB.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 40 70 48  .D$(..H.L$0H.@pH
	0x0040 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f 11 44 24  ..$.....D$....D$
	0x0050 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48 83 c4 20  ....D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 67+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_g STEXT dupok size=116 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_g(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	94
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	101
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	120(AX), AX
	0x003f 00063 (<autogenerated>:1)	PCDATA	$0, $0
	0x003f 00063 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0043 00067 (<autogenerated>:1)	CALL	AX
	0x0045 00069 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004a 00074 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x004f 00079 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0054 00084 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x0059 00089 (<autogenerated>:1)	ADDQ	$32, SP
	0x005d 00093 (<autogenerated>:1)	RET
	0x005e 00094 (<autogenerated>:1)	NOP
	0x005e 00094 (<autogenerated>:1)	PCDATA	$1, $-1
	0x005e 00094 (<autogenerated>:1)	PCDATA	$0, $-1
	0x005e 00094 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0063 00099 (<autogenerated>:1)	JMP	0
	0x0065 00101 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006a 00106 (<autogenerated>:1)	CMPQ	(BX), DI
	0x006d 00109 (<autogenerated>:1)	JNE	38
	0x006f 00111 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0072 00114 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 4f 48  eH..%....H;a.vOH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 3f 48 c7 44 24 38 00 00 00 00 48   H..u?H.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 40 78 48  .D$(..H.L$0H.@xH
	0x0040 89 0c 24 ff d0 48 8b 44 24 08 48 89 44 24 10 48  ..$..H.D$.H.D$.H
	0x0050 89 44 24 38 48 8b 6c 24 18 48 83 c4 20 c3 e8 00  .D$8H.l$.H.. ...
	0x0060 00 00 00 eb 9b 48 8d 7c 24 28 48 39 3b 75 b7 48  .....H.|$(H9;u.H
	0x0070 89 23 eb b2                                      .#..
	rel 5+4 t=16 TLS+0
	rel 67+0 t=11 +0
	rel 95+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_gg STEXT dupok size=122 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_gg(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	100
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	107
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	128(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004e 00078 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0054 00084 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x005a 00090 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005f 00095 (<autogenerated>:1)	ADDQ	$32, SP
	0x0063 00099 (<autogenerated>:1)	RET
	0x0064 00100 (<autogenerated>:1)	NOP
	0x0064 00100 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0064 00100 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0064 00100 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0069 00105 (<autogenerated>:1)	JMP	0
	0x006b 00107 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x0070 00112 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0073 00115 (<autogenerated>:1)	JNE	38
	0x0075 00117 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0078 00120 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 55 48  eH..%....H;a.vUH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 45 0f 57 c0 f2 0f 11 44 24 38 48   H..uE.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 80 00  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f  ..H..$.....D$...
	0x0050 11 44 24 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48  .D$....D$8H.l$.H
	0x0060 83 c4 20 c3 e8 00 00 00 00 eb 95 48 8d 7c 24 28  .. ........H.|$(
	0x0070 48 39 3b 75 b1 48 89 23 eb ac                    H9;u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 101+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_h STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_h(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	136(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004d 00077 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x0052 00082 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 48 c7 44 24 38 00 00 00 00 48   H..uBH.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 88 00  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89 44  ..H..$..H.D$.H.D
	0x0050 24 10 48 89 44 24 38 48 8b 6c 24 18 48 83 c4 20  $.H.D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_hh STEXT dupok size=122 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_hh(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	100
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	107
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	144(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004e 00078 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0054 00084 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x005a 00090 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005f 00095 (<autogenerated>:1)	ADDQ	$32, SP
	0x0063 00099 (<autogenerated>:1)	RET
	0x0064 00100 (<autogenerated>:1)	NOP
	0x0064 00100 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0064 00100 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0064 00100 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0069 00105 (<autogenerated>:1)	JMP	0
	0x006b 00107 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x0070 00112 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0073 00115 (<autogenerated>:1)	JNE	38
	0x0075 00117 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0078 00120 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 55 48  eH..%....H;a.vUH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 45 0f 57 c0 f2 0f 11 44 24 38 48   H..uE.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 90 00  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f  ..H..$.....D$...
	0x0050 11 44 24 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48  .D$....D$8H.l$.H
	0x0060 83 c4 20 c3 e8 00 00 00 00 eb 95 48 8d 7c 24 28  .. ........H.|$(
	0x0070 48 39 3b 75 b1 48 89 23 eb ac                    H9;u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 101+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_i STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_i(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	152(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004d 00077 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x0052 00082 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 48 c7 44 24 38 00 00 00 00 48   H..uBH.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 98 00  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89 44  ..H..$..H.D$.H.D
	0x0050 24 10 48 89 44 24 38 48 8b 6c 24 18 48 83 c4 20  $.H.D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_ii STEXT dupok size=122 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_ii(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	100
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	107
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	160(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004e 00078 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0054 00084 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x005a 00090 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005f 00095 (<autogenerated>:1)	ADDQ	$32, SP
	0x0063 00099 (<autogenerated>:1)	RET
	0x0064 00100 (<autogenerated>:1)	NOP
	0x0064 00100 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0064 00100 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0064 00100 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0069 00105 (<autogenerated>:1)	JMP	0
	0x006b 00107 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x0070 00112 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0073 00115 (<autogenerated>:1)	JNE	38
	0x0075 00117 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0078 00120 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 55 48  eH..%....H;a.vUH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 45 0f 57 c0 f2 0f 11 44 24 38 48   H..uE.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 a0 00  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f  ..H..$.....D$...
	0x0050 11 44 24 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48  .D$....D$8H.l$.H
	0x0060 83 c4 20 c3 e8 00 00 00 00 eb 95 48 8d 7c 24 28  .. ........H.|$(
	0x0070 48 39 3b 75 b1 48 89 23 eb ac                    H9;u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 101+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_j STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_j(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	168(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004d 00077 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x0052 00082 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 48 c7 44 24 38 00 00 00 00 48   H..uBH.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 a8 00  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89 44  ..H..$..H.D$.H.D
	0x0050 24 10 48 89 44 24 38 48 8b 6c 24 18 48 83 c4 20  $.H.D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_jj STEXT dupok size=122 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_jj(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	100
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	107
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	176(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004e 00078 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0054 00084 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x005a 00090 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005f 00095 (<autogenerated>:1)	ADDQ	$32, SP
	0x0063 00099 (<autogenerated>:1)	RET
	0x0064 00100 (<autogenerated>:1)	NOP
	0x0064 00100 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0064 00100 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0064 00100 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0069 00105 (<autogenerated>:1)	JMP	0
	0x006b 00107 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x0070 00112 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0073 00115 (<autogenerated>:1)	JNE	38
	0x0075 00117 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0078 00120 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 55 48  eH..%....H;a.vUH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 45 0f 57 c0 f2 0f 11 44 24 38 48   H..uE.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 b0 00  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f  ..H..$.....D$...
	0x0050 11 44 24 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48  .D$....D$8H.l$.H
	0x0060 83 c4 20 c3 e8 00 00 00 00 eb 95 48 8d 7c 24 28  .. ........H.|$(
	0x0070 48 39 3b 75 b1 48 89 23 eb ac                    H9;u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 101+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_k STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_k(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	184(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004d 00077 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x0052 00082 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 48 c7 44 24 38 00 00 00 00 48   H..uBH.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 b8 00  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89 44  ..H..$..H.D$.H.D
	0x0050 24 10 48 89 44 24 38 48 8b 6c 24 18 48 83 c4 20  $.H.D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_kk STEXT dupok size=122 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_kk(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	100
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	107
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	192(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004e 00078 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0054 00084 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x005a 00090 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005f 00095 (<autogenerated>:1)	ADDQ	$32, SP
	0x0063 00099 (<autogenerated>:1)	RET
	0x0064 00100 (<autogenerated>:1)	NOP
	0x0064 00100 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0064 00100 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0064 00100 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0069 00105 (<autogenerated>:1)	JMP	0
	0x006b 00107 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x0070 00112 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0073 00115 (<autogenerated>:1)	JNE	38
	0x0075 00117 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0078 00120 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 55 48  eH..%....H;a.vUH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 45 0f 57 c0 f2 0f 11 44 24 38 48   H..uE.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 c0 00  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f  ..H..$.....D$...
	0x0050 11 44 24 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48  .D$....D$8H.l$.H
	0x0060 83 c4 20 c3 e8 00 00 00 00 eb 95 48 8d 7c 24 28  .. ........H.|$(
	0x0070 48 39 3b 75 b1 48 89 23 eb ac                    H9;u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 101+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_l STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_l(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	200(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004d 00077 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x0052 00082 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 48 c7 44 24 38 00 00 00 00 48   H..uBH.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 c8 00  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89 44  ..H..$..H.D$.H.D
	0x0050 24 10 48 89 44 24 38 48 8b 6c 24 18 48 83 c4 20  $.H.D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_ll STEXT dupok size=122 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_ll(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	100
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	107
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	208(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004e 00078 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0054 00084 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x005a 00090 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005f 00095 (<autogenerated>:1)	ADDQ	$32, SP
	0x0063 00099 (<autogenerated>:1)	RET
	0x0064 00100 (<autogenerated>:1)	NOP
	0x0064 00100 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0064 00100 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0064 00100 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0069 00105 (<autogenerated>:1)	JMP	0
	0x006b 00107 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x0070 00112 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0073 00115 (<autogenerated>:1)	JNE	38
	0x0075 00117 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0078 00120 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 55 48  eH..%....H;a.vUH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 45 0f 57 c0 f2 0f 11 44 24 38 48   H..uE.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 d0 00  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f  ..H..$.....D$...
	0x0050 11 44 24 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48  .D$....D$8H.l$.H
	0x0060 83 c4 20 c3 e8 00 00 00 00 eb 95 48 8d 7c 24 28  .. ........H.|$(
	0x0070 48 39 3b 75 b1 48 89 23 eb ac                    H9;u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 101+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_m STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_m(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	216(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004d 00077 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x0052 00082 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 48 c7 44 24 38 00 00 00 00 48   H..uBH.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 d8 00  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89 44  ..H..$..H.D$.H.D
	0x0050 24 10 48 89 44 24 38 48 8b 6c 24 18 48 83 c4 20  $.H.D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_mm STEXT dupok size=122 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_mm(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	100
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	107
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	224(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004e 00078 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0054 00084 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x005a 00090 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005f 00095 (<autogenerated>:1)	ADDQ	$32, SP
	0x0063 00099 (<autogenerated>:1)	RET
	0x0064 00100 (<autogenerated>:1)	NOP
	0x0064 00100 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0064 00100 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0064 00100 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0069 00105 (<autogenerated>:1)	JMP	0
	0x006b 00107 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x0070 00112 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0073 00115 (<autogenerated>:1)	JNE	38
	0x0075 00117 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0078 00120 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 55 48  eH..%....H;a.vUH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 45 0f 57 c0 f2 0f 11 44 24 38 48   H..uE.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 e0 00  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f  ..H..$.....D$...
	0x0050 11 44 24 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48  .D$....D$8H.l$.H
	0x0060 83 c4 20 c3 e8 00 00 00 00 eb 95 48 8d 7c 24 28  .. ........H.|$(
	0x0070 48 39 3b 75 b1 48 89 23 eb ac                    H9;u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 101+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_n STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_n(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	232(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004d 00077 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x0052 00082 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 48 c7 44 24 38 00 00 00 00 48   H..uBH.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 e8 00  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89 44  ..H..$..H.D$.H.D
	0x0050 24 10 48 89 44 24 38 48 8b 6c 24 18 48 83 c4 20  $.H.D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_nn STEXT dupok size=122 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_nn(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	100
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	107
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	240(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004e 00078 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0054 00084 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x005a 00090 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005f 00095 (<autogenerated>:1)	ADDQ	$32, SP
	0x0063 00099 (<autogenerated>:1)	RET
	0x0064 00100 (<autogenerated>:1)	NOP
	0x0064 00100 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0064 00100 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0064 00100 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0069 00105 (<autogenerated>:1)	JMP	0
	0x006b 00107 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x0070 00112 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0073 00115 (<autogenerated>:1)	JNE	38
	0x0075 00117 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0078 00120 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 55 48  eH..%....H;a.vUH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 45 0f 57 c0 f2 0f 11 44 24 38 48   H..uE.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 f0 00  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f  ..H..$.....D$...
	0x0050 11 44 24 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48  .D$....D$8H.l$.H
	0x0060 83 c4 20 c3 e8 00 00 00 00 eb 95 48 8d 7c 24 28  .. ........H.|$(
	0x0070 48 39 3b 75 b1 48 89 23 eb ac                    H9;u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 101+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_o STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_o(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	248(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004d 00077 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x0052 00082 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 48 c7 44 24 38 00 00 00 00 48   H..uBH.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 f8 00  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89 44  ..H..$..H.D$.H.D
	0x0050 24 10 48 89 44 24 38 48 8b 6c 24 18 48 83 c4 20  $.H.D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_oo STEXT dupok size=122 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_oo(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	100
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	107
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	256(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004e 00078 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0054 00084 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x005a 00090 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005f 00095 (<autogenerated>:1)	ADDQ	$32, SP
	0x0063 00099 (<autogenerated>:1)	RET
	0x0064 00100 (<autogenerated>:1)	NOP
	0x0064 00100 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0064 00100 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0064 00100 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0069 00105 (<autogenerated>:1)	JMP	0
	0x006b 00107 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x0070 00112 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0073 00115 (<autogenerated>:1)	JNE	38
	0x0075 00117 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0078 00120 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 55 48  eH..%....H;a.vUH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 45 0f 57 c0 f2 0f 11 44 24 38 48   H..uE.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 00 01  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f  ..H..$.....D$...
	0x0050 11 44 24 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48  .D$....D$8H.l$.H
	0x0060 83 c4 20 c3 e8 00 00 00 00 eb 95 48 8d 7c 24 28  .. ........H.|$(
	0x0070 48 39 3b 75 b1 48 89 23 eb ac                    H9;u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 101+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_p STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_p(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	264(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004d 00077 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x0052 00082 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 48 c7 44 24 38 00 00 00 00 48   H..uBH.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 08 01  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89 44  ..H..$..H.D$.H.D
	0x0050 24 10 48 89 44 24 38 48 8b 6c 24 18 48 83 c4 20  $.H.D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_pp STEXT dupok size=122 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_pp(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	100
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	107
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	272(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004e 00078 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0054 00084 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x005a 00090 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005f 00095 (<autogenerated>:1)	ADDQ	$32, SP
	0x0063 00099 (<autogenerated>:1)	RET
	0x0064 00100 (<autogenerated>:1)	NOP
	0x0064 00100 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0064 00100 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0064 00100 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0069 00105 (<autogenerated>:1)	JMP	0
	0x006b 00107 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x0070 00112 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0073 00115 (<autogenerated>:1)	JNE	38
	0x0075 00117 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0078 00120 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 55 48  eH..%....H;a.vUH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 45 0f 57 c0 f2 0f 11 44 24 38 48   H..uE.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 10 01  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f  ..H..$.....D$...
	0x0050 11 44 24 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48  .D$....D$8H.l$.H
	0x0060 83 c4 20 c3 e8 00 00 00 00 eb 95 48 8d 7c 24 28  .. ........H.|$(
	0x0070 48 39 3b 75 b1 48 89 23 eb ac                    H9;u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 101+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_q STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_q(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	280(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004d 00077 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x0052 00082 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 48 c7 44 24 38 00 00 00 00 48   H..uBH.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 18 01  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89 44  ..H..$..H.D$.H.D
	0x0050 24 10 48 89 44 24 38 48 8b 6c 24 18 48 83 c4 20  $.H.D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_qq STEXT dupok size=122 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_qq(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	100
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	107
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	288(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004e 00078 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0054 00084 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x005a 00090 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005f 00095 (<autogenerated>:1)	ADDQ	$32, SP
	0x0063 00099 (<autogenerated>:1)	RET
	0x0064 00100 (<autogenerated>:1)	NOP
	0x0064 00100 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0064 00100 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0064 00100 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0069 00105 (<autogenerated>:1)	JMP	0
	0x006b 00107 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x0070 00112 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0073 00115 (<autogenerated>:1)	JNE	38
	0x0075 00117 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0078 00120 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 55 48  eH..%....H;a.vUH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 45 0f 57 c0 f2 0f 11 44 24 38 48   H..uE.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 20 01  .D$(..H.L$0H.. .
	0x0040 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f  ..H..$.....D$...
	0x0050 11 44 24 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48  .D$....D$8H.l$.H
	0x0060 83 c4 20 c3 e8 00 00 00 00 eb 95 48 8d 7c 24 28  .. ........H.|$(
	0x0070 48 39 3b 75 b1 48 89 23 eb ac                    H9;u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 101+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_r STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_r(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	296(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004d 00077 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x0052 00082 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 48 c7 44 24 38 00 00 00 00 48   H..uBH.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 28 01  .D$(..H.L$0H..(.
	0x0040 00 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89 44  ..H..$..H.D$.H.D
	0x0050 24 10 48 89 44 24 38 48 8b 6c 24 18 48 83 c4 20  $.H.D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_rr STEXT dupok size=122 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_rr(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	100
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	107
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	304(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004e 00078 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0054 00084 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x005a 00090 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005f 00095 (<autogenerated>:1)	ADDQ	$32, SP
	0x0063 00099 (<autogenerated>:1)	RET
	0x0064 00100 (<autogenerated>:1)	NOP
	0x0064 00100 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0064 00100 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0064 00100 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0069 00105 (<autogenerated>:1)	JMP	0
	0x006b 00107 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x0070 00112 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0073 00115 (<autogenerated>:1)	JNE	38
	0x0075 00117 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0078 00120 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 55 48  eH..%....H;a.vUH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 45 0f 57 c0 f2 0f 11 44 24 38 48   H..uE.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 30 01  .D$(..H.L$0H..0.
	0x0040 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f  ..H..$.....D$...
	0x0050 11 44 24 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48  .D$....D$8H.l$.H
	0x0060 83 c4 20 c3 e8 00 00 00 00 eb 95 48 8d 7c 24 28  .. ........H.|$(
	0x0070 48 39 3b 75 b1 48 89 23 eb ac                    H9;u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 101+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_s STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_s(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	312(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004d 00077 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x0052 00082 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 48 c7 44 24 38 00 00 00 00 48   H..uBH.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 38 01  .D$(..H.L$0H..8.
	0x0040 00 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89 44  ..H..$..H.D$.H.D
	0x0050 24 10 48 89 44 24 38 48 8b 6c 24 18 48 83 c4 20  $.H.D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_ss STEXT dupok size=122 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_ss(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	100
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	107
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	320(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004e 00078 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0054 00084 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x005a 00090 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005f 00095 (<autogenerated>:1)	ADDQ	$32, SP
	0x0063 00099 (<autogenerated>:1)	RET
	0x0064 00100 (<autogenerated>:1)	NOP
	0x0064 00100 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0064 00100 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0064 00100 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0069 00105 (<autogenerated>:1)	JMP	0
	0x006b 00107 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x0070 00112 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0073 00115 (<autogenerated>:1)	JNE	38
	0x0075 00117 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0078 00120 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 55 48  eH..%....H;a.vUH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 45 0f 57 c0 f2 0f 11 44 24 38 48   H..uE.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 40 01  .D$(..H.L$0H..@.
	0x0040 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f  ..H..$.....D$...
	0x0050 11 44 24 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48  .D$....D$8H.l$.H
	0x0060 83 c4 20 c3 e8 00 00 00 00 eb 95 48 8d 7c 24 28  .. ........H.|$(
	0x0070 48 39 3b 75 b1 48 89 23 eb ac                    H9;u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 101+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_t STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_t(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	328(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004d 00077 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x0052 00082 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 48 c7 44 24 38 00 00 00 00 48   H..uBH.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 48 01  .D$(..H.L$0H..H.
	0x0040 00 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89 44  ..H..$..H.D$.H.D
	0x0050 24 10 48 89 44 24 38 48 8b 6c 24 18 48 83 c4 20  $.H.D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_tt STEXT dupok size=122 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_tt(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	100
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	107
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	336(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004e 00078 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0054 00084 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x005a 00090 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005f 00095 (<autogenerated>:1)	ADDQ	$32, SP
	0x0063 00099 (<autogenerated>:1)	RET
	0x0064 00100 (<autogenerated>:1)	NOP
	0x0064 00100 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0064 00100 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0064 00100 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0069 00105 (<autogenerated>:1)	JMP	0
	0x006b 00107 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x0070 00112 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0073 00115 (<autogenerated>:1)	JNE	38
	0x0075 00117 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0078 00120 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 55 48  eH..%....H;a.vUH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 45 0f 57 c0 f2 0f 11 44 24 38 48   H..uE.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 50 01  .D$(..H.L$0H..P.
	0x0040 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f  ..H..$.....D$...
	0x0050 11 44 24 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48  .D$....D$8H.l$.H
	0x0060 83 c4 20 c3 e8 00 00 00 00 eb 95 48 8d 7c 24 28  .. ........H.|$(
	0x0070 48 39 3b 75 b1 48 89 23 eb ac                    H9;u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 101+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_u STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_u(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	344(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004d 00077 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x0052 00082 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 48 c7 44 24 38 00 00 00 00 48   H..uBH.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 58 01  .D$(..H.L$0H..X.
	0x0040 00 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89 44  ..H..$..H.D$.H.D
	0x0050 24 10 48 89 44 24 38 48 8b 6c 24 18 48 83 c4 20  $.H.D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_uu STEXT dupok size=122 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_uu(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	100
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	107
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	352(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004e 00078 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0054 00084 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x005a 00090 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005f 00095 (<autogenerated>:1)	ADDQ	$32, SP
	0x0063 00099 (<autogenerated>:1)	RET
	0x0064 00100 (<autogenerated>:1)	NOP
	0x0064 00100 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0064 00100 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0064 00100 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0069 00105 (<autogenerated>:1)	JMP	0
	0x006b 00107 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x0070 00112 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0073 00115 (<autogenerated>:1)	JNE	38
	0x0075 00117 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0078 00120 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 55 48  eH..%....H;a.vUH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 45 0f 57 c0 f2 0f 11 44 24 38 48   H..uE.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 60 01  .D$(..H.L$0H..`.
	0x0040 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f  ..H..$.....D$...
	0x0050 11 44 24 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48  .D$....D$8H.l$.H
	0x0060 83 c4 20 c3 e8 00 00 00 00 eb 95 48 8d 7c 24 28  .. ........H.|$(
	0x0070 48 39 3b 75 b1 48 89 23 eb ac                    H9;u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 101+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_v STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_v(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	360(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004d 00077 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x0052 00082 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 48 c7 44 24 38 00 00 00 00 48   H..uBH.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 68 01  .D$(..H.L$0H..h.
	0x0040 00 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89 44  ..H..$..H.D$.H.D
	0x0050 24 10 48 89 44 24 38 48 8b 6c 24 18 48 83 c4 20  $.H.D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_vv STEXT dupok size=122 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_vv(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	100
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	107
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	368(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004e 00078 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0054 00084 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x005a 00090 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005f 00095 (<autogenerated>:1)	ADDQ	$32, SP
	0x0063 00099 (<autogenerated>:1)	RET
	0x0064 00100 (<autogenerated>:1)	NOP
	0x0064 00100 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0064 00100 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0064 00100 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0069 00105 (<autogenerated>:1)	JMP	0
	0x006b 00107 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x0070 00112 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0073 00115 (<autogenerated>:1)	JNE	38
	0x0075 00117 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0078 00120 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 55 48  eH..%....H;a.vUH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 45 0f 57 c0 f2 0f 11 44 24 38 48   H..uE.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 70 01  .D$(..H.L$0H..p.
	0x0040 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f  ..H..$.....D$...
	0x0050 11 44 24 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48  .D$....D$8H.l$.H
	0x0060 83 c4 20 c3 e8 00 00 00 00 eb 95 48 8d 7c 24 28  .. ........H.|$(
	0x0070 48 39 3b 75 b1 48 89 23 eb ac                    H9;u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 101+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_w STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_w(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	376(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004d 00077 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x0052 00082 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 48 c7 44 24 38 00 00 00 00 48   H..uBH.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 78 01  .D$(..H.L$0H..x.
	0x0040 00 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89 44  ..H..$..H.D$.H.D
	0x0050 24 10 48 89 44 24 38 48 8b 6c 24 18 48 83 c4 20  $.H.D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_ww STEXT dupok size=122 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_ww(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	100
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	107
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	384(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004e 00078 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0054 00084 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x005a 00090 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005f 00095 (<autogenerated>:1)	ADDQ	$32, SP
	0x0063 00099 (<autogenerated>:1)	RET
	0x0064 00100 (<autogenerated>:1)	NOP
	0x0064 00100 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0064 00100 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0064 00100 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0069 00105 (<autogenerated>:1)	JMP	0
	0x006b 00107 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x0070 00112 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0073 00115 (<autogenerated>:1)	JNE	38
	0x0075 00117 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0078 00120 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 55 48  eH..%....H;a.vUH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 45 0f 57 c0 f2 0f 11 44 24 38 48   H..uE.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 80 01  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f  ..H..$.....D$...
	0x0050 11 44 24 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48  .D$....D$8H.l$.H
	0x0060 83 c4 20 c3 e8 00 00 00 00 eb 95 48 8d 7c 24 28  .. ........H.|$(
	0x0070 48 39 3b 75 b1 48 89 23 eb ac                    H9;u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 101+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_x STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_x(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	392(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004d 00077 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x0052 00082 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 48 c7 44 24 38 00 00 00 00 48   H..uBH.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 88 01  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89 44  ..H..$..H.D$.H.D
	0x0050 24 10 48 89 44 24 38 48 8b 6c 24 18 48 83 c4 20  $.H.D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_xx STEXT dupok size=122 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_xx(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	100
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	107
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	400(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004e 00078 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0054 00084 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x005a 00090 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005f 00095 (<autogenerated>:1)	ADDQ	$32, SP
	0x0063 00099 (<autogenerated>:1)	RET
	0x0064 00100 (<autogenerated>:1)	NOP
	0x0064 00100 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0064 00100 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0064 00100 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0069 00105 (<autogenerated>:1)	JMP	0
	0x006b 00107 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x0070 00112 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0073 00115 (<autogenerated>:1)	JNE	38
	0x0075 00117 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0078 00120 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 55 48  eH..%....H;a.vUH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 45 0f 57 c0 f2 0f 11 44 24 38 48   H..uE.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 90 01  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f  ..H..$.....D$...
	0x0050 11 44 24 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48  .D$....D$8H.l$.H
	0x0060 83 c4 20 c3 e8 00 00 00 00 eb 95 48 8d 7c 24 28  .. ........H.|$(
	0x0070 48 39 3b 75 b1 48 89 23 eb ac                    H9;u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 101+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_y STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_y(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	408(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004d 00077 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x0052 00082 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 48 c7 44 24 38 00 00 00 00 48   H..uBH.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 98 01  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89 44  ..H..$..H.D$.H.D
	0x0050 24 10 48 89 44 24 38 48 8b 6c 24 18 48 83 c4 20  $.H.D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_yy STEXT dupok size=122 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_yy(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	100
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	107
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	416(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004e 00078 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0054 00084 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x005a 00090 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005f 00095 (<autogenerated>:1)	ADDQ	$32, SP
	0x0063 00099 (<autogenerated>:1)	RET
	0x0064 00100 (<autogenerated>:1)	NOP
	0x0064 00100 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0064 00100 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0064 00100 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0069 00105 (<autogenerated>:1)	JMP	0
	0x006b 00107 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x0070 00112 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0073 00115 (<autogenerated>:1)	JNE	38
	0x0075 00117 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0078 00120 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 55 48  eH..%....H;a.vUH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 45 0f 57 c0 f2 0f 11 44 24 38 48   H..uE.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 a0 01  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f  ..H..$.....D$...
	0x0050 11 44 24 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48  .D$....D$8H.l$.H
	0x0060 83 c4 20 c3 e8 00 00 00 00 eb 95 48 8d 7c 24 28  .. ........H.|$(
	0x0070 48 39 3b 75 b1 48 89 23 eb ac                    H9;u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 101+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_z STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_z(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	424(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004d 00077 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x0052 00082 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 48 c7 44 24 38 00 00 00 00 48   H..uBH.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 a8 01  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89 44  ..H..$..H.D$.H.D
	0x0050 24 10 48 89 44 24 38 48 8b 6c 24 18 48 83 c4 20  $.H.D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".gigantic.get_zz STEXT dupok size=122 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".gigantic.get_zz(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	100
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	107
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	432(AX), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0046 00070 (<autogenerated>:1)	CALL	AX
	0x0048 00072 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004e 00078 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0054 00084 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x005a 00090 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005f 00095 (<autogenerated>:1)	ADDQ	$32, SP
	0x0063 00099 (<autogenerated>:1)	RET
	0x0064 00100 (<autogenerated>:1)	NOP
	0x0064 00100 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0064 00100 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0064 00100 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0069 00105 (<autogenerated>:1)	JMP	0
	0x006b 00107 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x0070 00112 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0073 00115 (<autogenerated>:1)	JNE	38
	0x0075 00117 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0078 00120 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 55 48  eH..%....H;a.vUH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 45 0f 57 c0 f2 0f 11 44 24 38 48   H..uE.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 80 b0 01  .D$(..H.L$0H....
	0x0040 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f  ..H..$.....D$...
	0x0050 11 44 24 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48  .D$....D$8H.l$.H
	0x0060 83 c4 20 c3 e8 00 00 00 00 eb 95 48 8d 7c 24 28  .. ........H.|$(
	0x0070 48 39 3b 75 b1 48 89 23 eb ac                    H9;u.H.#..
	rel 5+4 t=16 TLS+0
	rel 70+0 t=11 +0
	rel 101+4 t=8 runtime.morestack_noctxt+0
"".obj.GetF STEXT dupok size=119 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".obj.GetF(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	97
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	104
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	24(AX), AX
	0x003f 00063 (<autogenerated>:1)	PCDATA	$0, $0
	0x003f 00063 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0043 00067 (<autogenerated>:1)	CALL	AX
	0x0045 00069 (<autogenerated>:1)	MOVSD	8(SP), X0
	0x004b 00075 (<autogenerated>:1)	MOVSD	X0, ""..autotmp_2+16(SP)
	0x0051 00081 (<autogenerated>:1)	MOVSD	X0, "".~r0+56(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x005c 00092 (<autogenerated>:1)	ADDQ	$32, SP
	0x0060 00096 (<autogenerated>:1)	RET
	0x0061 00097 (<autogenerated>:1)	NOP
	0x0061 00097 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0061 00097 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0061 00097 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0066 00102 (<autogenerated>:1)	JMP	0
	0x0068 00104 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006d 00109 (<autogenerated>:1)	CMPQ	(BX), DI
	0x0070 00112 (<autogenerated>:1)	JNE	38
	0x0072 00114 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0075 00117 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 52 48  eH..%....H;a.vRH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 42 0f 57 c0 f2 0f 11 44 24 38 48   H..uB.W....D$8H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 40 18 48  .D$(..H.L$0H.@.H
	0x0040 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f 11 44 24  ..$.....D$....D$
	0x0050 10 f2 0f 11 44 24 38 48 8b 6c 24 18 48 83 c4 20  ....D$8H.l$.H.. 
	0x0060 c3 e8 00 00 00 00 eb 98 48 8d 7c 24 28 48 39 3b  ........H.|$(H9;
	0x0070 75 b4 48 89 23 eb af                             u.H.#..
	rel 5+4 t=16 TLS+0
	rel 67+0 t=11 +0
	rel 98+4 t=8 runtime.morestack_noctxt+0
"".obj.GetI STEXT dupok size=116 args=0x18 locals=0x20
	0x0000 00000 (<autogenerated>:1)	TEXT	"".obj.GetI(SB), DUPOK|WRAPPER|ABIInternal, $32-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	94
	0x000f 00015 (<autogenerated>:1)	SUBQ	$32, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 24(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	24(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	101
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·09cf9819fc716118c209c2d2155a3632(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, "".~r0+56(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	""..this+40(SP), AX
	0x0034 00052 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0036 00054 (<autogenerated>:1)	PCDATA	$0, $1
	0x0036 00054 (<autogenerated>:1)	PCDATA	$1, $1
	0x0036 00054 (<autogenerated>:1)	MOVQ	""..this+48(SP), CX
	0x003b 00059 (<autogenerated>:1)	MOVQ	32(AX), AX
	0x003f 00063 (<autogenerated>:1)	PCDATA	$0, $0
	0x003f 00063 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0043 00067 (<autogenerated>:1)	CALL	AX
	0x0045 00069 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x004a 00074 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+16(SP)
	0x004f 00079 (<autogenerated>:1)	MOVQ	AX, "".~r0+56(SP)
	0x0054 00084 (<autogenerated>:1)	MOVQ	24(SP), BP
	0x0059 00089 (<autogenerated>:1)	ADDQ	$32, SP
	0x005d 00093 (<autogenerated>:1)	RET
	0x005e 00094 (<autogenerated>:1)	NOP
	0x005e 00094 (<autogenerated>:1)	PCDATA	$1, $-1
	0x005e 00094 (<autogenerated>:1)	PCDATA	$0, $-1
	0x005e 00094 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0063 00099 (<autogenerated>:1)	JMP	0
	0x0065 00101 (<autogenerated>:1)	LEAQ	40(SP), DI
	0x006a 00106 (<autogenerated>:1)	CMPQ	(BX), DI
	0x006d 00109 (<autogenerated>:1)	JNE	38
	0x006f 00111 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0072 00114 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 4f 48  eH..%....H;a.vOH
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8b 59  .. H.l$.H.l$.H.Y
	0x0020 20 48 85 db 75 3f 48 c7 44 24 38 00 00 00 00 48   H..u?H.D$8....H
	0x0030 8b 44 24 28 84 00 48 8b 4c 24 30 48 8b 40 20 48  .D$(..H.L$0H.@ H
	0x0040 89 0c 24 ff d0 48 8b 44 24 08 48 89 44 24 10 48  ..$..H.D$.H.D$.H
	0x0050 89 44 24 38 48 8b 6c 24 18 48 83 c4 20 c3 e8 00  .D$8H.l$.H.. ...
	0x0060 00 00 00 eb 9b 48 8d 7c 24 28 48 39 3b 75 b7 48  .....H.|$(H9;u.H
	0x0070 89 23 eb b2                                      .#..
	rel 5+4 t=16 TLS+0
	rel 67+0 t=11 +0
	rel 95+4 t=8 runtime.morestack_noctxt+0
go.builtin.error.Error STEXT dupok size=130 args=0x20 locals=0x30
	0x0000 00000 (<autogenerated>:1)	TEXT	go.builtin.error.Error(SB), DUPOK|WRAPPER|ABIInternal, $48-32
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	108
	0x000f 00015 (<autogenerated>:1)	SUBQ	$48, SP
	0x0013 00019 (<autogenerated>:1)	MOVQ	BP, 40(SP)
	0x0018 00024 (<autogenerated>:1)	LEAQ	40(SP), BP
	0x001d 00029 (<autogenerated>:1)	MOVQ	32(CX), BX
	0x0021 00033 (<autogenerated>:1)	TESTQ	BX, BX
	0x0024 00036 (<autogenerated>:1)	JNE	115
	0x0026 00038 (<autogenerated>:1)	NOP
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$0, gclocals·e0f6dd6ffe13df6eefebd78fb394216d(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$1, gclocals·d8b28f51bb91e05d264803f0f600a200(SB)
	0x0026 00038 (<autogenerated>:1)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $0
	0x0026 00038 (<autogenerated>:1)	PCDATA	$1, $0
	0x0026 00038 (<autogenerated>:1)	XORPS	X0, X0
	0x0029 00041 (<autogenerated>:1)	MOVUPS	X0, "".~r0+72(SP)
	0x002e 00046 (<autogenerated>:1)	MOVQ	""..this+56(SP), AX
	0x0033 00051 (<autogenerated>:1)	TESTB	AL, (AX)
	0x0035 00053 (<autogenerated>:1)	MOVQ	24(AX), AX
	0x0039 00057 (<autogenerated>:1)	PCDATA	$0, $1
	0x0039 00057 (<autogenerated>:1)	PCDATA	$1, $1
	0x0039 00057 (<autogenerated>:1)	MOVQ	""..this+64(SP), CX
	0x003e 00062 (<autogenerated>:1)	PCDATA	$0, $0
	0x003e 00062 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0042 00066 (<autogenerated>:1)	CALL	AX
	0x0044 00068 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0049 00073 (<autogenerated>:1)	PCDATA	$0, $1
	0x0049 00073 (<autogenerated>:1)	MOVQ	8(SP), CX
	0x004e 00078 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_2+24(SP)
	0x0053 00083 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_2+32(SP)
	0x0058 00088 (<autogenerated>:1)	PCDATA	$0, $0
	0x0058 00088 (<autogenerated>:1)	PCDATA	$1, $2
	0x0058 00088 (<autogenerated>:1)	MOVQ	CX, "".~r0+72(SP)
	0x005d 00093 (<autogenerated>:1)	MOVQ	AX, "".~r0+80(SP)
	0x0062 00098 (<autogenerated>:1)	MOVQ	40(SP), BP
	0x0067 00103 (<autogenerated>:1)	ADDQ	$48, SP
	0x006b 00107 (<autogenerated>:1)	RET
	0x006c 00108 (<autogenerated>:1)	NOP
	0x006c 00108 (<autogenerated>:1)	PCDATA	$1, $-1
	0x006c 00108 (<autogenerated>:1)	PCDATA	$0, $-1
	0x006c 00108 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0071 00113 (<autogenerated>:1)	JMP	0
	0x0073 00115 (<autogenerated>:1)	LEAQ	56(SP), DI
	0x0078 00120 (<autogenerated>:1)	CMPQ	(BX), DI
	0x007b 00123 (<autogenerated>:1)	JNE	38
	0x007d 00125 (<autogenerated>:1)	MOVQ	SP, (BX)
	0x0080 00128 (<autogenerated>:1)	JMP	38
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 5d 48  eH..%....H;a.v]H
	0x0010 83 ec 30 48 89 6c 24 28 48 8d 6c 24 28 48 8b 59  ..0H.l$(H.l$(H.Y
	0x0020 20 48 85 db 75 4d 0f 57 c0 0f 11 44 24 48 48 8b   H..uM.W...D$HH.
	0x0030 44 24 38 84 00 48 8b 40 18 48 8b 4c 24 40 48 89  D$8..H.@.H.L$@H.
	0x0040 0c 24 ff d0 48 8b 44 24 10 48 8b 4c 24 08 48 89  .$..H.D$.H.L$.H.
	0x0050 4c 24 18 48 89 44 24 20 48 89 4c 24 48 48 89 44  L$.H.D$ H.L$HH.D
	0x0060 24 50 48 8b 6c 24 28 48 83 c4 30 c3 e8 00 00 00  $PH.l$(H..0.....
	0x0070 00 eb 8d 48 8d 7c 24 38 48 39 3b 75 a9 48 89 23  ...H.|$8H9;u.H.#
	0x0080 eb a4                                            ..
	rel 5+4 t=16 TLS+0
	rel 66+0 t=11 +0
	rel 109+4 t=8 runtime.morestack_noctxt+0
os.(*File).close STEXT dupok nosplit size=28 args=0x18 locals=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	os.(*File).close(SB), DUPOK|NOSPLIT|ABIInternal, $0-24
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$0, gclocals·e6397a44f8e1b6e77d0f200b4fba5269(SB)
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (<autogenerated>:1)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (<autogenerated>:1)	PCDATA	$0, $0
	0x0000 00000 (<autogenerated>:1)	PCDATA	$1, $0
	0x0000 00000 (<autogenerated>:1)	XORPS	X0, X0
	0x0003 00003 (<autogenerated>:1)	MOVUPS	X0, "".~r0+16(SP)
	0x0008 00008 (<autogenerated>:1)	PCDATA	$0, $1
	0x0008 00008 (<autogenerated>:1)	PCDATA	$1, $1
	0x0008 00008 (<autogenerated>:1)	MOVQ	""..this+8(SP), AX
	0x000d 00013 (<autogenerated>:1)	TESTB	AL, (AX)
	0x000f 00015 (<autogenerated>:1)	MOVQ	(AX), AX
	0x0012 00018 (<autogenerated>:1)	PCDATA	$0, $0
	0x0012 00018 (<autogenerated>:1)	PCDATA	$1, $0
	0x0012 00018 (<autogenerated>:1)	MOVQ	AX, ""..this+8(SP)
	0x0017 00023 (<autogenerated>:1)	JMP	os.(*file).close(SB)
	0x0000 0f 57 c0 0f 11 44 24 10 48 8b 44 24 08 84 00 48  .W...D$.H.D$...H
	0x0010 8b 00 48 89 44 24 08 e9 00 00 00 00              ..H.D$......
	rel 24+4 t=8 os.(*file).close+0
"".BenchmarkGigaObject_Calc STEXT size=542 args=0x8 locals=0x3e0
	0x0000 00000 (pointer_vs_value/code/benchmark_access_test.go:5)	TEXT	"".BenchmarkGigaObject_Calc(SB), ABIInternal, $992-8
	0x0000 00000 (pointer_vs_value/code/benchmark_access_test.go:5)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_access_test.go:5)	LEAQ	-864(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_access_test.go:5)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_access_test.go:5)	JLS	532
	0x001b 00027 (pointer_vs_value/code/benchmark_access_test.go:5)	SUBQ	$992, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_access_test.go:5)	MOVQ	BP, 984(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_access_test.go:5)	LEAQ	984(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_access_test.go:5)	FUNCDATA	$0, gclocals·69a9291448fa273f79569cb593f615b2(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_access_test.go:5)	FUNCDATA	$1, gclocals·c753f437677afcc953b27443e88e9be4(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_access_test.go:5)	FUNCDATA	$2, gclocals·4fe7a0c8fa0ed5970e514f86b26cf9ae(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_access_test.go:5)	FUNCDATA	$3, "".BenchmarkGigaObject_Calc.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_access_test.go:7)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_access_test.go:7)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_access_test.go:7)	CALL	"".createGiga(SB)
	0x0037 00055 (pointer_vs_value/code/benchmark_access_test.go:7)	PCDATA	$0, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_access_test.go:7)	LEAQ	"".o+472(SP), DI
	0x003f 00063 (pointer_vs_value/code/benchmark_access_test.go:7)	MOVQ	SP, SI
	0x0042 00066 (pointer_vs_value/code/benchmark_access_test.go:7)	PCDATA	$0, $0
	0x0042 00066 (pointer_vs_value/code/benchmark_access_test.go:7)	DUFFCOPY	$532
	0x0055 00085 (pointer_vs_value/code/benchmark_access_test.go:9)	MOVQ	$0, "".i+440(SP)
	0x0061 00097 (pointer_vs_value/code/benchmark_access_test.go:9)	PCDATA	$0, $-2
	0x0061 00097 (pointer_vs_value/code/benchmark_access_test.go:9)	PCDATA	$1, $-2
	0x0061 00097 (pointer_vs_value/code/benchmark_access_test.go:9)	JMP	99
	0x0063 00099 (pointer_vs_value/code/benchmark_access_test.go:9)	PCDATA	$0, $2
	0x0063 00099 (pointer_vs_value/code/benchmark_access_test.go:9)	PCDATA	$1, $0
	0x0063 00099 (pointer_vs_value/code/benchmark_access_test.go:9)	MOVQ	"".b+1000(SP), AX
	0x006b 00107 (pointer_vs_value/code/benchmark_access_test.go:9)	TESTB	AL, (AX)
	0x006d 00109 (pointer_vs_value/code/benchmark_access_test.go:9)	PCDATA	$0, $0
	0x006d 00109 (pointer_vs_value/code/benchmark_access_test.go:9)	MOVQ	264(AX), AX
	0x0074 00116 (pointer_vs_value/code/benchmark_access_test.go:9)	CMPQ	"".i+440(SP), AX
	0x007c 00124 (pointer_vs_value/code/benchmark_access_test.go:9)	JLT	131
	0x007e 00126 (pointer_vs_value/code/benchmark_access_test.go:9)	JMP	516
	0x0083 00131 (pointer_vs_value/code/benchmark_access_test.go:10)	XORPS	X0, X0
	0x0086 00134 (pointer_vs_value/code/benchmark_access_test.go:10)	MOVUPS	X0, ""..autotmp_8+928(SP)
	0x008e 00142 (pointer_vs_value/code/benchmark_access_test.go:10)	MOVQ	SP, DI
	0x0091 00145 (pointer_vs_value/code/benchmark_access_test.go:10)	PCDATA	$0, $3
	0x0091 00145 (pointer_vs_value/code/benchmark_access_test.go:10)	LEAQ	"".o+472(SP), SI
	0x0099 00153 (pointer_vs_value/code/benchmark_access_test.go:10)	PCDATA	$0, $0
	0x0099 00153 (pointer_vs_value/code/benchmark_access_test.go:10)	DUFFCOPY	$532
	0x00ac 00172 (pointer_vs_value/code/benchmark_access_test.go:10)	CALL	"".calcGiga(SB)
	0x00b1 00177 (pointer_vs_value/code/benchmark_access_test.go:10)	MOVSD	416(SP), X0
	0x00ba 00186 (pointer_vs_value/code/benchmark_access_test.go:10)	MOVSD	X0, ""..autotmp_7+456(SP)
	0x00c3 00195 (pointer_vs_value/code/benchmark_access_test.go:10)	MOVQ	424(SP), AX
	0x00cb 00203 (pointer_vs_value/code/benchmark_access_test.go:10)	PCDATA	$0, $4
	0x00cb 00203 (pointer_vs_value/code/benchmark_access_test.go:10)	MOVQ	432(SP), CX
	0x00d3 00211 (pointer_vs_value/code/benchmark_access_test.go:10)	PCDATA	$1, $1
	0x00d3 00211 (pointer_vs_value/code/benchmark_access_test.go:10)	MOVQ	AX, ""..autotmp_8+928(SP)
	0x00db 00219 (pointer_vs_value/code/benchmark_access_test.go:10)	PCDATA	$0, $0
	0x00db 00219 (pointer_vs_value/code/benchmark_access_test.go:10)	MOVQ	CX, ""..autotmp_8+936(SP)
	0x00e3 00227 (pointer_vs_value/code/benchmark_access_test.go:10)	MOVSD	""..autotmp_7+456(SP), X0
	0x00ec 00236 (pointer_vs_value/code/benchmark_access_test.go:10)	MOVSD	X0, ""..autotmp_3+464(SP)
	0x00f5 00245 (pointer_vs_value/code/benchmark_access_test.go:10)	MOVQ	""..autotmp_8+928(SP), AX
	0x00fd 00253 (pointer_vs_value/code/benchmark_access_test.go:10)	PCDATA	$0, $4
	0x00fd 00253 (pointer_vs_value/code/benchmark_access_test.go:10)	PCDATA	$1, $0
	0x00fd 00253 (pointer_vs_value/code/benchmark_access_test.go:10)	MOVQ	""..autotmp_8+936(SP), CX
	0x0105 00261 (pointer_vs_value/code/benchmark_access_test.go:10)	PCDATA	$1, $2
	0x0105 00261 (pointer_vs_value/code/benchmark_access_test.go:10)	MOVQ	AX, ""..autotmp_4+944(SP)
	0x010d 00269 (pointer_vs_value/code/benchmark_access_test.go:10)	PCDATA	$0, $0
	0x010d 00269 (pointer_vs_value/code/benchmark_access_test.go:10)	MOVQ	CX, ""..autotmp_4+952(SP)
	0x0115 00277 (pointer_vs_value/code/benchmark_access_test.go:10)	MOVSD	""..autotmp_3+464(SP), X0
	0x011e 00286 (pointer_vs_value/code/benchmark_access_test.go:10)	MOVSD	X0, "".f+448(SP)
	0x0127 00295 (pointer_vs_value/code/benchmark_access_test.go:10)	MOVQ	""..autotmp_4+944(SP), AX
	0x012f 00303 (pointer_vs_value/code/benchmark_access_test.go:10)	PCDATA	$0, $4
	0x012f 00303 (pointer_vs_value/code/benchmark_access_test.go:10)	PCDATA	$1, $0
	0x012f 00303 (pointer_vs_value/code/benchmark_access_test.go:10)	MOVQ	""..autotmp_4+952(SP), CX
	0x0137 00311 (pointer_vs_value/code/benchmark_access_test.go:10)	MOVQ	AX, "".err+896(SP)
	0x013f 00319 (pointer_vs_value/code/benchmark_access_test.go:10)	PCDATA	$0, $0
	0x013f 00319 (pointer_vs_value/code/benchmark_access_test.go:10)	MOVQ	CX, "".err+904(SP)
	0x0147 00327 (<unknown line number>)	NOP
	0x0147 00327 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	AX, AX
	0x014a 00330 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	337
	0x014c 00332 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	514
	0x0151 00337 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $3
	0x0151 00337 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X0, X0
	0x0154 00340 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X0, ""..autotmp_9+912(SP)
	0x015c 00348 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $2
	0x015c 00348 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $0
	0x015c 00348 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_9+912(SP), AX
	0x0164 00356 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_11+888(SP)
	0x016c 00364 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x016e 00366 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $5
	0x016e 00366 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), CX
	0x0175 00373 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $2
	0x0175 00373 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_9+912(SP)
	0x017d 00381 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $6
	0x017d 00381 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_0(SB), DX
	0x0184 00388 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $2
	0x0184 00388 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	DX, ""..autotmp_9+920(SP)
	0x018c 00396 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x018e 00398 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	400
	0x0190 00400 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_10+960(SP)
	0x0198 00408 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_10+968(SP)
	0x01a4 00420 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_10+976(SP)
	0x01b0 00432 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x01b0 00432 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, (SP)
	0x01b4 00436 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x01bd 00445 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x01c6 00454 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x01cb 00459 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	461
	0x01cd 00461 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x01d5 00469 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+448(SP), X0
	0x01de 00478 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x01e6 00486 (pointer_vs_value/code/benchmark_access_test.go:10)	JMP	488
	0x01e8 00488 (pointer_vs_value/code/benchmark_access_test.go:9)	PCDATA	$0, $-2
	0x01e8 00488 (pointer_vs_value/code/benchmark_access_test.go:9)	PCDATA	$1, $-2
	0x01e8 00488 (pointer_vs_value/code/benchmark_access_test.go:9)	JMP	490
	0x01ea 00490 (pointer_vs_value/code/benchmark_access_test.go:9)	PCDATA	$0, $0
	0x01ea 00490 (pointer_vs_value/code/benchmark_access_test.go:9)	PCDATA	$1, $0
	0x01ea 00490 (pointer_vs_value/code/benchmark_access_test.go:9)	MOVQ	"".i+440(SP), AX
	0x01f2 00498 (pointer_vs_value/code/benchmark_access_test.go:9)	INCQ	AX
	0x01f5 00501 (pointer_vs_value/code/benchmark_access_test.go:9)	MOVQ	AX, "".i+440(SP)
	0x01fd 00509 (pointer_vs_value/code/benchmark_access_test.go:9)	JMP	99
	0x0202 00514 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x0202 00514 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x0202 00514 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	461
	0x0204 00516 (<unknown line number>)	MOVQ	984(SP), BP
	0x020c 00524 (<unknown line number>)	ADDQ	$992, SP
	0x0213 00531 (<unknown line number>)	RET
	0x0214 00532 (<unknown line number>)	NOP
	0x0214 00532 (pointer_vs_value/code/benchmark_access_test.go:5)	PCDATA	$1, $-1
	0x0214 00532 (pointer_vs_value/code/benchmark_access_test.go:5)	PCDATA	$0, $-1
	0x0214 00532 (pointer_vs_value/code/benchmark_access_test.go:5)	CALL	runtime.morestack_noctxt(SB)
	0x0219 00537 (pointer_vs_value/code/benchmark_access_test.go:5)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 a0 fc ff  eH..%....H..$...
	0x0010 ff 48 3b 41 10 0f 86 f9 01 00 00 48 81 ec e0 03  .H;A.......H....
	0x0020 00 00 48 89 ac 24 d8 03 00 00 48 8d ac 24 d8 03  ..H..$....H..$..
	0x0030 00 00 e8 00 00 00 00 48 8d bc 24 d8 01 00 00 48  .......H..$....H
	0x0040 89 e6 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00  ..H.l$.H.l$.....
	0x0050 00 48 8b 6d 00 48 c7 84 24 b8 01 00 00 00 00 00  .H.m.H..$.......
	0x0060 00 eb 00 48 8b 84 24 e8 03 00 00 84 00 48 8b 80  ...H..$......H..
	0x0070 08 01 00 00 48 39 84 24 b8 01 00 00 7c 05 e9 81  ....H9.$....|...
	0x0080 01 00 00 0f 57 c0 0f 11 84 24 a0 03 00 00 48 89  ....W....$....H.
	0x0090 e7 48 8d b4 24 d8 01 00 00 48 89 6c 24 f0 48 8d  .H..$....H.l$.H.
	0x00a0 6c 24 f0 e8 00 00 00 00 48 8b 6d 00 e8 00 00 00  l$......H.m.....
	0x00b0 00 f2 0f 10 84 24 a0 01 00 00 f2 0f 11 84 24 c8  .....$........$.
	0x00c0 01 00 00 48 8b 84 24 a8 01 00 00 48 8b 8c 24 b0  ...H..$....H..$.
	0x00d0 01 00 00 48 89 84 24 a0 03 00 00 48 89 8c 24 a8  ...H..$....H..$.
	0x00e0 03 00 00 f2 0f 10 84 24 c8 01 00 00 f2 0f 11 84  .......$........
	0x00f0 24 d0 01 00 00 48 8b 84 24 a0 03 00 00 48 8b 8c  $....H..$....H..
	0x0100 24 a8 03 00 00 48 89 84 24 b0 03 00 00 48 89 8c  $....H..$....H..
	0x0110 24 b8 03 00 00 f2 0f 10 84 24 d0 01 00 00 f2 0f  $........$......
	0x0120 11 84 24 c0 01 00 00 48 8b 84 24 b0 03 00 00 48  ..$....H..$....H
	0x0130 8b 8c 24 b8 03 00 00 48 89 84 24 80 03 00 00 48  ..$....H..$....H
	0x0140 89 8c 24 88 03 00 00 48 85 c0 75 05 e9 b1 00 00  ..$....H..u.....
	0x0150 00 0f 57 c0 0f 11 84 24 90 03 00 00 48 8d 84 24  ..W....$....H..$
	0x0160 90 03 00 00 48 89 84 24 78 03 00 00 84 00 48 8d  ....H..$x.....H.
	0x0170 0d 00 00 00 00 48 89 8c 24 90 03 00 00 48 8d 15  .....H..$....H..
	0x0180 00 00 00 00 48 89 94 24 98 03 00 00 84 00 eb 00  ....H..$........
	0x0190 48 89 84 24 c0 03 00 00 48 c7 84 24 c8 03 00 00  H..$....H..$....
	0x01a0 01 00 00 00 48 c7 84 24 d0 03 00 00 01 00 00 00  ....H..$........
	0x01b0 48 89 04 24 48 c7 44 24 08 01 00 00 00 48 c7 44  H..$H.D$.....H.D
	0x01c0 24 10 01 00 00 00 e8 00 00 00 00 eb 00 f2 0f 10  $...............
	0x01d0 05 00 00 00 00 f2 0f 58 84 24 c0 01 00 00 f2 0f  .......X.$......
	0x01e0 11 05 00 00 00 00 eb 00 eb 00 48 8b 84 24 b8 01  ..........H..$..
	0x01f0 00 00 48 ff c0 48 89 84 24 b8 01 00 00 e9 61 fe  ..H..H..$.....a.
	0x0200 ff ff eb c9 48 8b ac 24 d8 03 00 00 48 81 c4 e0  ....H..$....H...
	0x0210 03 00 00 c3 e8 00 00 00 00 e9 e2 fd ff ff        ..............
	rel 5+4 t=16 TLS+0
	rel 51+4 t=8 "".createGiga+0
	rel 77+4 t=8 runtime.duffcopy+532
	rel 164+4 t=8 runtime.duffcopy+532
	rel 173+4 t=8 "".calcGiga+0
	rel 369+4 t=15 type.string+0
	rel 384+4 t=15 ""..stmp_0+0
	rel 455+4 t=8 log.Fatal+0
	rel 465+4 t=15 "".F+0
	rel 482+4 t=15 "".F+0
	rel 533+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkGigaPObject_Calc STEXT size=515 args=0x8 locals=0x3c8
	0x0000 00000 (pointer_vs_value/code/benchmark_access_test.go:14)	TEXT	"".BenchmarkGigaPObject_Calc(SB), ABIInternal, $968-8
	0x0000 00000 (pointer_vs_value/code/benchmark_access_test.go:14)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_access_test.go:14)	LEAQ	-840(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_access_test.go:14)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_access_test.go:14)	JLS	505
	0x001b 00027 (pointer_vs_value/code/benchmark_access_test.go:14)	SUBQ	$968, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_access_test.go:14)	MOVQ	BP, 960(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_access_test.go:14)	LEAQ	960(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_access_test.go:14)	FUNCDATA	$0, gclocals·69a9291448fa273f79569cb593f615b2(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_access_test.go:14)	FUNCDATA	$1, gclocals·c753f437677afcc953b27443e88e9be4(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_access_test.go:14)	FUNCDATA	$2, gclocals·00eaa93355c8765c23fb807114083c27(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_access_test.go:14)	FUNCDATA	$3, "".BenchmarkGigaPObject_Calc.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_access_test.go:16)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_access_test.go:16)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_access_test.go:16)	CALL	"".createGiga(SB)
	0x0037 00055 (pointer_vs_value/code/benchmark_access_test.go:16)	PCDATA	$0, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_access_test.go:16)	LEAQ	"".o+448(SP), DI
	0x003f 00063 (pointer_vs_value/code/benchmark_access_test.go:16)	MOVQ	SP, SI
	0x0042 00066 (pointer_vs_value/code/benchmark_access_test.go:16)	PCDATA	$0, $0
	0x0042 00066 (pointer_vs_value/code/benchmark_access_test.go:16)	DUFFCOPY	$532
	0x0055 00085 (pointer_vs_value/code/benchmark_access_test.go:18)	MOVQ	$0, "".i+416(SP)
	0x0061 00097 (pointer_vs_value/code/benchmark_access_test.go:18)	PCDATA	$0, $-2
	0x0061 00097 (pointer_vs_value/code/benchmark_access_test.go:18)	PCDATA	$1, $-2
	0x0061 00097 (pointer_vs_value/code/benchmark_access_test.go:18)	JMP	99
	0x0063 00099 (pointer_vs_value/code/benchmark_access_test.go:18)	PCDATA	$0, $2
	0x0063 00099 (pointer_vs_value/code/benchmark_access_test.go:18)	PCDATA	$1, $0
	0x0063 00099 (pointer_vs_value/code/benchmark_access_test.go:18)	MOVQ	"".b+976(SP), AX
	0x006b 00107 (pointer_vs_value/code/benchmark_access_test.go:18)	TESTB	AL, (AX)
	0x006d 00109 (pointer_vs_value/code/benchmark_access_test.go:18)	PCDATA	$0, $0
	0x006d 00109 (pointer_vs_value/code/benchmark_access_test.go:18)	MOVQ	264(AX), AX
	0x0074 00116 (pointer_vs_value/code/benchmark_access_test.go:18)	CMPQ	"".i+416(SP), AX
	0x007c 00124 (pointer_vs_value/code/benchmark_access_test.go:18)	JLT	131
	0x007e 00126 (pointer_vs_value/code/benchmark_access_test.go:18)	JMP	489
	0x0083 00131 (pointer_vs_value/code/benchmark_access_test.go:19)	XORPS	X0, X0
	0x0086 00134 (pointer_vs_value/code/benchmark_access_test.go:19)	MOVUPS	X0, ""..autotmp_8+904(SP)
	0x008e 00142 (pointer_vs_value/code/benchmark_access_test.go:19)	PCDATA	$0, $2
	0x008e 00142 (pointer_vs_value/code/benchmark_access_test.go:19)	LEAQ	"".o+448(SP), AX
	0x0096 00150 (pointer_vs_value/code/benchmark_access_test.go:19)	PCDATA	$0, $0
	0x0096 00150 (pointer_vs_value/code/benchmark_access_test.go:19)	MOVQ	AX, (SP)
	0x009a 00154 (pointer_vs_value/code/benchmark_access_test.go:19)	CALL	"".calcGigaP(SB)
	0x009f 00159 (pointer_vs_value/code/benchmark_access_test.go:19)	MOVSD	8(SP), X0
	0x00a5 00165 (pointer_vs_value/code/benchmark_access_test.go:19)	MOVSD	X0, ""..autotmp_7+432(SP)
	0x00ae 00174 (pointer_vs_value/code/benchmark_access_test.go:19)	MOVQ	16(SP), AX
	0x00b3 00179 (pointer_vs_value/code/benchmark_access_test.go:19)	PCDATA	$0, $3
	0x00b3 00179 (pointer_vs_value/code/benchmark_access_test.go:19)	MOVQ	24(SP), CX
	0x00b8 00184 (pointer_vs_value/code/benchmark_access_test.go:19)	PCDATA	$1, $1
	0x00b8 00184 (pointer_vs_value/code/benchmark_access_test.go:19)	MOVQ	AX, ""..autotmp_8+904(SP)
	0x00c0 00192 (pointer_vs_value/code/benchmark_access_test.go:19)	PCDATA	$0, $0
	0x00c0 00192 (pointer_vs_value/code/benchmark_access_test.go:19)	MOVQ	CX, ""..autotmp_8+912(SP)
	0x00c8 00200 (pointer_vs_value/code/benchmark_access_test.go:19)	MOVSD	""..autotmp_7+432(SP), X0
	0x00d1 00209 (pointer_vs_value/code/benchmark_access_test.go:19)	MOVSD	X0, ""..autotmp_3+440(SP)
	0x00da 00218 (pointer_vs_value/code/benchmark_access_test.go:19)	MOVQ	""..autotmp_8+904(SP), AX
	0x00e2 00226 (pointer_vs_value/code/benchmark_access_test.go:19)	PCDATA	$0, $3
	0x00e2 00226 (pointer_vs_value/code/benchmark_access_test.go:19)	PCDATA	$1, $0
	0x00e2 00226 (pointer_vs_value/code/benchmark_access_test.go:19)	MOVQ	""..autotmp_8+912(SP), CX
	0x00ea 00234 (pointer_vs_value/code/benchmark_access_test.go:19)	PCDATA	$1, $2
	0x00ea 00234 (pointer_vs_value/code/benchmark_access_test.go:19)	MOVQ	AX, ""..autotmp_4+920(SP)
	0x00f2 00242 (pointer_vs_value/code/benchmark_access_test.go:19)	PCDATA	$0, $0
	0x00f2 00242 (pointer_vs_value/code/benchmark_access_test.go:19)	MOVQ	CX, ""..autotmp_4+928(SP)
	0x00fa 00250 (pointer_vs_value/code/benchmark_access_test.go:19)	MOVSD	""..autotmp_3+440(SP), X0
	0x0103 00259 (pointer_vs_value/code/benchmark_access_test.go:19)	MOVSD	X0, "".f+424(SP)
	0x010c 00268 (pointer_vs_value/code/benchmark_access_test.go:19)	MOVQ	""..autotmp_4+920(SP), AX
	0x0114 00276 (pointer_vs_value/code/benchmark_access_test.go:19)	PCDATA	$0, $3
	0x0114 00276 (pointer_vs_value/code/benchmark_access_test.go:19)	PCDATA	$1, $0
	0x0114 00276 (pointer_vs_value/code/benchmark_access_test.go:19)	MOVQ	""..autotmp_4+928(SP), CX
	0x011c 00284 (pointer_vs_value/code/benchmark_access_test.go:19)	MOVQ	AX, "".err+872(SP)
	0x0124 00292 (pointer_vs_value/code/benchmark_access_test.go:19)	PCDATA	$0, $0
	0x0124 00292 (pointer_vs_value/code/benchmark_access_test.go:19)	MOVQ	CX, "".err+880(SP)
	0x012c 00300 (<unknown line number>)	NOP
	0x012c 00300 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	AX, AX
	0x012f 00303 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	310
	0x0131 00305 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	487
	0x0136 00310 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $3
	0x0136 00310 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X0, X0
	0x0139 00313 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X0, ""..autotmp_9+888(SP)
	0x0141 00321 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $2
	0x0141 00321 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $0
	0x0141 00321 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_9+888(SP), AX
	0x0149 00329 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_11+864(SP)
	0x0151 00337 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x0153 00339 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x0153 00339 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), CX
	0x015a 00346 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $2
	0x015a 00346 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_9+888(SP)
	0x0162 00354 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $5
	0x0162 00354 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_1(SB), DX
	0x0169 00361 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $2
	0x0169 00361 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	DX, ""..autotmp_9+896(SP)
	0x0171 00369 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x0173 00371 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	373
	0x0175 00373 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_10+936(SP)
	0x017d 00381 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_10+944(SP)
	0x0189 00393 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_10+952(SP)
	0x0195 00405 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x0195 00405 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, (SP)
	0x0199 00409 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x01a2 00418 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x01ab 00427 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x01b0 00432 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	434
	0x01b2 00434 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x01ba 00442 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+424(SP), X0
	0x01c3 00451 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x01cb 00459 (pointer_vs_value/code/benchmark_access_test.go:19)	JMP	461
	0x01cd 00461 (pointer_vs_value/code/benchmark_access_test.go:18)	PCDATA	$0, $-2
	0x01cd 00461 (pointer_vs_value/code/benchmark_access_test.go:18)	PCDATA	$1, $-2
	0x01cd 00461 (pointer_vs_value/code/benchmark_access_test.go:18)	JMP	463
	0x01cf 00463 (pointer_vs_value/code/benchmark_access_test.go:18)	PCDATA	$0, $0
	0x01cf 00463 (pointer_vs_value/code/benchmark_access_test.go:18)	PCDATA	$1, $0
	0x01cf 00463 (pointer_vs_value/code/benchmark_access_test.go:18)	MOVQ	"".i+416(SP), AX
	0x01d7 00471 (pointer_vs_value/code/benchmark_access_test.go:18)	INCQ	AX
	0x01da 00474 (pointer_vs_value/code/benchmark_access_test.go:18)	MOVQ	AX, "".i+416(SP)
	0x01e2 00482 (pointer_vs_value/code/benchmark_access_test.go:18)	JMP	99
	0x01e7 00487 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x01e7 00487 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x01e7 00487 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	434
	0x01e9 00489 (<unknown line number>)	MOVQ	960(SP), BP
	0x01f1 00497 (<unknown line number>)	ADDQ	$968, SP
	0x01f8 00504 (<unknown line number>)	RET
	0x01f9 00505 (<unknown line number>)	NOP
	0x01f9 00505 (pointer_vs_value/code/benchmark_access_test.go:14)	PCDATA	$1, $-1
	0x01f9 00505 (pointer_vs_value/code/benchmark_access_test.go:14)	PCDATA	$0, $-1
	0x01f9 00505 (pointer_vs_value/code/benchmark_access_test.go:14)	CALL	runtime.morestack_noctxt(SB)
	0x01fe 00510 (pointer_vs_value/code/benchmark_access_test.go:14)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 b8 fc ff  eH..%....H..$...
	0x0010 ff 48 3b 41 10 0f 86 de 01 00 00 48 81 ec c8 03  .H;A.......H....
	0x0020 00 00 48 89 ac 24 c0 03 00 00 48 8d ac 24 c0 03  ..H..$....H..$..
	0x0030 00 00 e8 00 00 00 00 48 8d bc 24 c0 01 00 00 48  .......H..$....H
	0x0040 89 e6 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00  ..H.l$.H.l$.....
	0x0050 00 48 8b 6d 00 48 c7 84 24 a0 01 00 00 00 00 00  .H.m.H..$.......
	0x0060 00 eb 00 48 8b 84 24 d0 03 00 00 84 00 48 8b 80  ...H..$......H..
	0x0070 08 01 00 00 48 39 84 24 a0 01 00 00 7c 05 e9 66  ....H9.$....|..f
	0x0080 01 00 00 0f 57 c0 0f 11 84 24 88 03 00 00 48 8d  ....W....$....H.
	0x0090 84 24 c0 01 00 00 48 89 04 24 e8 00 00 00 00 f2  .$....H..$......
	0x00a0 0f 10 44 24 08 f2 0f 11 84 24 b0 01 00 00 48 8b  ..D$.....$....H.
	0x00b0 44 24 10 48 8b 4c 24 18 48 89 84 24 88 03 00 00  D$.H.L$.H..$....
	0x00c0 48 89 8c 24 90 03 00 00 f2 0f 10 84 24 b0 01 00  H..$........$...
	0x00d0 00 f2 0f 11 84 24 b8 01 00 00 48 8b 84 24 88 03  .....$....H..$..
	0x00e0 00 00 48 8b 8c 24 90 03 00 00 48 89 84 24 98 03  ..H..$....H..$..
	0x00f0 00 00 48 89 8c 24 a0 03 00 00 f2 0f 10 84 24 b8  ..H..$........$.
	0x0100 01 00 00 f2 0f 11 84 24 a8 01 00 00 48 8b 84 24  .......$....H..$
	0x0110 98 03 00 00 48 8b 8c 24 a0 03 00 00 48 89 84 24  ....H..$....H..$
	0x0120 68 03 00 00 48 89 8c 24 70 03 00 00 48 85 c0 75  h...H..$p...H..u
	0x0130 05 e9 b1 00 00 00 0f 57 c0 0f 11 84 24 78 03 00  .......W....$x..
	0x0140 00 48 8d 84 24 78 03 00 00 48 89 84 24 60 03 00  .H..$x...H..$`..
	0x0150 00 84 00 48 8d 0d 00 00 00 00 48 89 8c 24 78 03  ...H......H..$x.
	0x0160 00 00 48 8d 15 00 00 00 00 48 89 94 24 80 03 00  ..H......H..$...
	0x0170 00 84 00 eb 00 48 89 84 24 a8 03 00 00 48 c7 84  .....H..$....H..
	0x0180 24 b0 03 00 00 01 00 00 00 48 c7 84 24 b8 03 00  $........H..$...
	0x0190 00 01 00 00 00 48 89 04 24 48 c7 44 24 08 01 00  .....H..$H.D$...
	0x01a0 00 00 48 c7 44 24 10 01 00 00 00 e8 00 00 00 00  ..H.D$..........
	0x01b0 eb 00 f2 0f 10 05 00 00 00 00 f2 0f 58 84 24 a8  ............X.$.
	0x01c0 01 00 00 f2 0f 11 05 00 00 00 00 eb 00 eb 00 48  ...............H
	0x01d0 8b 84 24 a0 01 00 00 48 ff c0 48 89 84 24 a0 01  ..$....H..H..$..
	0x01e0 00 00 e9 7c fe ff ff eb c9 48 8b ac 24 c0 03 00  ...|.....H..$...
	0x01f0 00 48 81 c4 c8 03 00 00 c3 e8 00 00 00 00 e9 fd  .H..............
	0x0200 fd ff ff                                         ...
	rel 5+4 t=16 TLS+0
	rel 51+4 t=8 "".createGiga+0
	rel 77+4 t=8 runtime.duffcopy+532
	rel 155+4 t=8 "".calcGigaP+0
	rel 342+4 t=15 type.string+0
	rel 357+4 t=15 ""..stmp_1+0
	rel 428+4 t=8 log.Fatal+0
	rel 438+4 t=15 "".F+0
	rel 455+4 t=15 "".F+0
	rel 506+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkGigaIfcObject_Calc STEXT size=572 args=0x8 locals=0x238
	0x0000 00000 (pointer_vs_value/code/benchmark_access_test.go:23)	TEXT	"".BenchmarkGigaIfcObject_Calc(SB), ABIInternal, $568-8
	0x0000 00000 (pointer_vs_value/code/benchmark_access_test.go:23)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_access_test.go:23)	LEAQ	-440(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_access_test.go:23)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_access_test.go:23)	JLS	562
	0x001b 00027 (pointer_vs_value/code/benchmark_access_test.go:23)	SUBQ	$568, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_access_test.go:23)	MOVQ	BP, 560(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_access_test.go:23)	LEAQ	560(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_access_test.go:23)	FUNCDATA	$0, gclocals·73de87619823f6747f37fd4c152f5b42(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_access_test.go:23)	FUNCDATA	$1, gclocals·5656cec2d04c5a84ade886586cb39011(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_access_test.go:23)	FUNCDATA	$2, gclocals·437d171b9e6f84c40356e01ae02b710f(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_access_test.go:23)	FUNCDATA	$3, "".BenchmarkGigaIfcObject_Calc.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_access_test.go:25)	PCDATA	$0, $1
	0x0032 00050 (pointer_vs_value/code/benchmark_access_test.go:25)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_access_test.go:25)	LEAQ	type."".giga(SB), AX
	0x0039 00057 (pointer_vs_value/code/benchmark_access_test.go:25)	PCDATA	$0, $0
	0x0039 00057 (pointer_vs_value/code/benchmark_access_test.go:25)	MOVQ	AX, (SP)
	0x003d 00061 (pointer_vs_value/code/benchmark_access_test.go:25)	CALL	runtime.newobject(SB)
	0x0042 00066 (pointer_vs_value/code/benchmark_access_test.go:25)	PCDATA	$0, $1
	0x0042 00066 (pointer_vs_value/code/benchmark_access_test.go:25)	MOVQ	8(SP), AX
	0x0047 00071 (pointer_vs_value/code/benchmark_access_test.go:25)	PCDATA	$0, $0
	0x0047 00071 (pointer_vs_value/code/benchmark_access_test.go:25)	PCDATA	$1, $1
	0x0047 00071 (pointer_vs_value/code/benchmark_access_test.go:25)	MOVQ	AX, "".&o+464(SP)
	0x004f 00079 (pointer_vs_value/code/benchmark_access_test.go:25)	CALL	"".createGiga(SB)
	0x0054 00084 (pointer_vs_value/code/benchmark_access_test.go:25)	PCDATA	$0, $2
	0x0054 00084 (pointer_vs_value/code/benchmark_access_test.go:25)	MOVQ	"".&o+464(SP), DI
	0x005c 00092 (pointer_vs_value/code/benchmark_access_test.go:25)	MOVQ	SP, SI
	0x005f 00095 (pointer_vs_value/code/benchmark_access_test.go:25)	PCDATA	$0, $0
	0x005f 00095 (pointer_vs_value/code/benchmark_access_test.go:25)	DUFFCOPY	$532
	0x0072 00114 (pointer_vs_value/code/benchmark_access_test.go:27)	MOVQ	$0, "".i+416(SP)
	0x007e 00126 (pointer_vs_value/code/benchmark_access_test.go:27)	JMP	128
	0x0080 00128 (pointer_vs_value/code/benchmark_access_test.go:27)	PCDATA	$0, $1
	0x0080 00128 (pointer_vs_value/code/benchmark_access_test.go:27)	MOVQ	"".b+576(SP), AX
	0x0088 00136 (pointer_vs_value/code/benchmark_access_test.go:27)	TESTB	AL, (AX)
	0x008a 00138 (pointer_vs_value/code/benchmark_access_test.go:27)	PCDATA	$0, $0
	0x008a 00138 (pointer_vs_value/code/benchmark_access_test.go:27)	MOVQ	264(AX), AX
	0x0091 00145 (pointer_vs_value/code/benchmark_access_test.go:27)	CMPQ	"".i+416(SP), AX
	0x0099 00153 (pointer_vs_value/code/benchmark_access_test.go:27)	JLT	160
	0x009b 00155 (pointer_vs_value/code/benchmark_access_test.go:27)	JMP	546
	0x00a0 00160 (pointer_vs_value/code/benchmark_access_test.go:28)	PCDATA	$0, $1
	0x00a0 00160 (pointer_vs_value/code/benchmark_access_test.go:28)	MOVQ	"".&o+464(SP), AX
	0x00a8 00168 (pointer_vs_value/code/benchmark_access_test.go:28)	PCDATA	$0, $0
	0x00a8 00168 (pointer_vs_value/code/benchmark_access_test.go:28)	PCDATA	$1, $2
	0x00a8 00168 (pointer_vs_value/code/benchmark_access_test.go:28)	MOVQ	AX, ""..autotmp_8+448(SP)
	0x00b0 00176 (pointer_vs_value/code/benchmark_access_test.go:28)	XORPS	X0, X0
	0x00b3 00179 (pointer_vs_value/code/benchmark_access_test.go:28)	MOVUPS	X0, ""..autotmp_10+520(SP)
	0x00bb 00187 (pointer_vs_value/code/benchmark_access_test.go:28)	PCDATA	$0, $1
	0x00bb 00187 (pointer_vs_value/code/benchmark_access_test.go:28)	PCDATA	$1, $1
	0x00bb 00187 (pointer_vs_value/code/benchmark_access_test.go:28)	MOVQ	""..autotmp_8+448(SP), AX
	0x00c3 00195 (pointer_vs_value/code/benchmark_access_test.go:28)	PCDATA	$0, $3
	0x00c3 00195 (pointer_vs_value/code/benchmark_access_test.go:28)	LEAQ	go.itab.*"".giga,"".gigantic(SB), CX
	0x00ca 00202 (pointer_vs_value/code/benchmark_access_test.go:28)	PCDATA	$0, $1
	0x00ca 00202 (pointer_vs_value/code/benchmark_access_test.go:28)	MOVQ	CX, (SP)
	0x00ce 00206 (pointer_vs_value/code/benchmark_access_test.go:28)	PCDATA	$0, $0
	0x00ce 00206 (pointer_vs_value/code/benchmark_access_test.go:28)	MOVQ	AX, 8(SP)
	0x00d3 00211 (pointer_vs_value/code/benchmark_access_test.go:28)	CALL	"".calcGigaWithInterface(SB)
	0x00d8 00216 (pointer_vs_value/code/benchmark_access_test.go:28)	MOVSD	16(SP), X0
	0x00de 00222 (pointer_vs_value/code/benchmark_access_test.go:28)	MOVSD	X0, ""..autotmp_9+432(SP)
	0x00e7 00231 (pointer_vs_value/code/benchmark_access_test.go:28)	PCDATA	$0, $1
	0x00e7 00231 (pointer_vs_value/code/benchmark_access_test.go:28)	MOVQ	32(SP), AX
	0x00ec 00236 (pointer_vs_value/code/benchmark_access_test.go:28)	MOVQ	24(SP), CX
	0x00f1 00241 (pointer_vs_value/code/benchmark_access_test.go:28)	PCDATA	$1, $3
	0x00f1 00241 (pointer_vs_value/code/benchmark_access_test.go:28)	MOVQ	CX, ""..autotmp_10+520(SP)
	0x00f9 00249 (pointer_vs_value/code/benchmark_access_test.go:28)	PCDATA	$0, $0
	0x00f9 00249 (pointer_vs_value/code/benchmark_access_test.go:28)	MOVQ	AX, ""..autotmp_10+528(SP)
	0x0101 00257 (pointer_vs_value/code/benchmark_access_test.go:28)	MOVSD	""..autotmp_9+432(SP), X0
	0x010a 00266 (pointer_vs_value/code/benchmark_access_test.go:28)	MOVSD	X0, ""..autotmp_3+440(SP)
	0x0113 00275 (pointer_vs_value/code/benchmark_access_test.go:28)	PCDATA	$0, $1
	0x0113 00275 (pointer_vs_value/code/benchmark_access_test.go:28)	MOVQ	""..autotmp_10+528(SP), AX
	0x011b 00283 (pointer_vs_value/code/benchmark_access_test.go:28)	PCDATA	$1, $1
	0x011b 00283 (pointer_vs_value/code/benchmark_access_test.go:28)	MOVQ	""..autotmp_10+520(SP), CX
	0x0123 00291 (pointer_vs_value/code/benchmark_access_test.go:28)	PCDATA	$1, $4
	0x0123 00291 (pointer_vs_value/code/benchmark_access_test.go:28)	MOVQ	CX, ""..autotmp_4+488(SP)
	0x012b 00299 (pointer_vs_value/code/benchmark_access_test.go:28)	PCDATA	$0, $0
	0x012b 00299 (pointer_vs_value/code/benchmark_access_test.go:28)	MOVQ	AX, ""..autotmp_4+496(SP)
	0x0133 00307 (pointer_vs_value/code/benchmark_access_test.go:28)	MOVSD	""..autotmp_3+440(SP), X0
	0x013c 00316 (pointer_vs_value/code/benchmark_access_test.go:28)	MOVSD	X0, "".f+424(SP)
	0x0145 00325 (pointer_vs_value/code/benchmark_access_test.go:28)	PCDATA	$0, $1
	0x0145 00325 (pointer_vs_value/code/benchmark_access_test.go:28)	MOVQ	""..autotmp_4+496(SP), AX
	0x014d 00333 (pointer_vs_value/code/benchmark_access_test.go:28)	PCDATA	$1, $1
	0x014d 00333 (pointer_vs_value/code/benchmark_access_test.go:28)	MOVQ	""..autotmp_4+488(SP), CX
	0x0155 00341 (pointer_vs_value/code/benchmark_access_test.go:28)	MOVQ	CX, "".err+472(SP)
	0x015d 00349 (pointer_vs_value/code/benchmark_access_test.go:28)	PCDATA	$0, $0
	0x015d 00349 (pointer_vs_value/code/benchmark_access_test.go:28)	MOVQ	AX, "".err+480(SP)
	0x0165 00357 (<unknown line number>)	NOP
	0x0165 00357 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	CX, CX
	0x0168 00360 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	367
	0x016a 00362 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	544
	0x016f 00367 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $5
	0x016f 00367 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X0, X0
	0x0172 00370 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X0, ""..autotmp_11+504(SP)
	0x017a 00378 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x017a 00378 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x017a 00378 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_11+504(SP), AX
	0x0182 00386 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_13+456(SP)
	0x018a 00394 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x018c 00396 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x018c 00396 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), CX
	0x0193 00403 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x0193 00403 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_11+504(SP)
	0x019b 00411 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x019b 00411 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_2(SB), DX
	0x01a2 00418 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x01a2 00418 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	DX, ""..autotmp_11+512(SP)
	0x01aa 00426 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x01ac 00428 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	430
	0x01ae 00430 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_12+536(SP)
	0x01b6 00438 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_12+544(SP)
	0x01c2 00450 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_12+552(SP)
	0x01ce 00462 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x01ce 00462 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, (SP)
	0x01d2 00466 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x01db 00475 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x01e4 00484 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x01e9 00489 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	491
	0x01eb 00491 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x01f3 00499 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+424(SP), X0
	0x01fc 00508 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x0204 00516 (pointer_vs_value/code/benchmark_access_test.go:28)	JMP	518
	0x0206 00518 (pointer_vs_value/code/benchmark_access_test.go:27)	PCDATA	$0, $-2
	0x0206 00518 (pointer_vs_value/code/benchmark_access_test.go:27)	PCDATA	$1, $-2
	0x0206 00518 (pointer_vs_value/code/benchmark_access_test.go:27)	JMP	520
	0x0208 00520 (pointer_vs_value/code/benchmark_access_test.go:27)	PCDATA	$0, $0
	0x0208 00520 (pointer_vs_value/code/benchmark_access_test.go:27)	PCDATA	$1, $1
	0x0208 00520 (pointer_vs_value/code/benchmark_access_test.go:27)	MOVQ	"".i+416(SP), AX
	0x0210 00528 (pointer_vs_value/code/benchmark_access_test.go:27)	INCQ	AX
	0x0213 00531 (pointer_vs_value/code/benchmark_access_test.go:27)	MOVQ	AX, "".i+416(SP)
	0x021b 00539 (pointer_vs_value/code/benchmark_access_test.go:27)	JMP	128
	0x0220 00544 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x0220 00544 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x0220 00544 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	491
	0x0222 00546 (<unknown line number>)	MOVQ	560(SP), BP
	0x022a 00554 (<unknown line number>)	ADDQ	$568, SP
	0x0231 00561 (<unknown line number>)	RET
	0x0232 00562 (<unknown line number>)	NOP
	0x0232 00562 (pointer_vs_value/code/benchmark_access_test.go:23)	PCDATA	$1, $-1
	0x0232 00562 (pointer_vs_value/code/benchmark_access_test.go:23)	PCDATA	$0, $-1
	0x0232 00562 (pointer_vs_value/code/benchmark_access_test.go:23)	CALL	runtime.morestack_noctxt(SB)
	0x0237 00567 (pointer_vs_value/code/benchmark_access_test.go:23)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 48 fe ff  eH..%....H..$H..
	0x0010 ff 48 3b 41 10 0f 86 17 02 00 00 48 81 ec 38 02  .H;A.......H..8.
	0x0020 00 00 48 89 ac 24 30 02 00 00 48 8d ac 24 30 02  ..H..$0...H..$0.
	0x0030 00 00 48 8d 05 00 00 00 00 48 89 04 24 e8 00 00  ..H......H..$...
	0x0040 00 00 48 8b 44 24 08 48 89 84 24 d0 01 00 00 e8  ..H.D$.H..$.....
	0x0050 00 00 00 00 48 8b bc 24 d0 01 00 00 48 89 e6 48  ....H..$....H..H
	0x0060 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00 00 48 8b  .l$.H.l$......H.
	0x0070 6d 00 48 c7 84 24 a0 01 00 00 00 00 00 00 eb 00  m.H..$..........
	0x0080 48 8b 84 24 40 02 00 00 84 00 48 8b 80 08 01 00  H..$@.....H.....
	0x0090 00 48 39 84 24 a0 01 00 00 7c 05 e9 82 01 00 00  .H9.$....|......
	0x00a0 48 8b 84 24 d0 01 00 00 48 89 84 24 c0 01 00 00  H..$....H..$....
	0x00b0 0f 57 c0 0f 11 84 24 08 02 00 00 48 8b 84 24 c0  .W....$....H..$.
	0x00c0 01 00 00 48 8d 0d 00 00 00 00 48 89 0c 24 48 89  ...H......H..$H.
	0x00d0 44 24 08 e8 00 00 00 00 f2 0f 10 44 24 10 f2 0f  D$.........D$...
	0x00e0 11 84 24 b0 01 00 00 48 8b 44 24 20 48 8b 4c 24  ..$....H.D$ H.L$
	0x00f0 18 48 89 8c 24 08 02 00 00 48 89 84 24 10 02 00  .H..$....H..$...
	0x0100 00 f2 0f 10 84 24 b0 01 00 00 f2 0f 11 84 24 b8  .....$........$.
	0x0110 01 00 00 48 8b 84 24 10 02 00 00 48 8b 8c 24 08  ...H..$....H..$.
	0x0120 02 00 00 48 89 8c 24 e8 01 00 00 48 89 84 24 f0  ...H..$....H..$.
	0x0130 01 00 00 f2 0f 10 84 24 b8 01 00 00 f2 0f 11 84  .......$........
	0x0140 24 a8 01 00 00 48 8b 84 24 f0 01 00 00 48 8b 8c  $....H..$....H..
	0x0150 24 e8 01 00 00 48 89 8c 24 d8 01 00 00 48 89 84  $....H..$....H..
	0x0160 24 e0 01 00 00 48 85 c9 75 05 e9 b1 00 00 00 0f  $....H..u.......
	0x0170 57 c0 0f 11 84 24 f8 01 00 00 48 8d 84 24 f8 01  W....$....H..$..
	0x0180 00 00 48 89 84 24 c8 01 00 00 84 00 48 8d 0d 00  ..H..$......H...
	0x0190 00 00 00 48 89 8c 24 f8 01 00 00 48 8d 15 00 00  ...H..$....H....
	0x01a0 00 00 48 89 94 24 00 02 00 00 84 00 eb 00 48 89  ..H..$........H.
	0x01b0 84 24 18 02 00 00 48 c7 84 24 20 02 00 00 01 00  .$....H..$ .....
	0x01c0 00 00 48 c7 84 24 28 02 00 00 01 00 00 00 48 89  ..H..$(.......H.
	0x01d0 04 24 48 c7 44 24 08 01 00 00 00 48 c7 44 24 10  .$H.D$.....H.D$.
	0x01e0 01 00 00 00 e8 00 00 00 00 eb 00 f2 0f 10 05 00  ................
	0x01f0 00 00 00 f2 0f 58 84 24 a8 01 00 00 f2 0f 11 05  .....X.$........
	0x0200 00 00 00 00 eb 00 eb 00 48 8b 84 24 a0 01 00 00  ........H..$....
	0x0210 48 ff c0 48 89 84 24 a0 01 00 00 e9 60 fe ff ff  H..H..$.....`...
	0x0220 eb c9 48 8b ac 24 30 02 00 00 48 81 c4 38 02 00  ..H..$0...H..8..
	0x0230 00 c3 e8 00 00 00 00 e9 c4 fd ff ff              ............
	rel 5+4 t=16 TLS+0
	rel 53+4 t=15 type."".giga+0
	rel 62+4 t=8 runtime.newobject+0
	rel 80+4 t=8 "".createGiga+0
	rel 106+4 t=8 runtime.duffcopy+532
	rel 198+4 t=15 go.itab.*"".giga,"".gigantic+0
	rel 212+4 t=8 "".calcGigaWithInterface+0
	rel 399+4 t=15 type.string+0
	rel 414+4 t=15 ""..stmp_2+0
	rel 485+4 t=8 log.Fatal+0
	rel 495+4 t=15 "".F+0
	rel 512+4 t=15 "".F+0
	rel 563+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkMicro_Calc STEXT size=753 args=0x8 locals=0x130
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:10)	TEXT	"".BenchmarkMicro_Calc(SB), ABIInternal, $304-8
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:10)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_invocation_test.go:10)	LEAQ	-176(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_invocation_test.go:10)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_invocation_test.go:10)	JLS	743
	0x001b 00027 (pointer_vs_value/code/benchmark_invocation_test.go:10)	SUBQ	$304, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_invocation_test.go:10)	MOVQ	BP, 296(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_invocation_test.go:10)	LEAQ	296(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:10)	FUNCDATA	$0, gclocals·280f5f1a80fa13c3d75c87f7c396d461(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:10)	FUNCDATA	$1, gclocals·2fba0d18e3c0524a612c61a89e5a5d1d(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:10)	FUNCDATA	$2, gclocals·c1ff80de5d851c57919e6de5599e7aaf(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:10)	FUNCDATA	$3, "".BenchmarkMicro_Calc.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:12)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:12)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:12)	CALL	"".createMicro(SB)
	0x0037 00055 (pointer_vs_value/code/benchmark_invocation_test.go:12)	MOVSD	8(SP), X0
	0x003d 00061 (pointer_vs_value/code/benchmark_invocation_test.go:12)	MOVQ	(SP), AX
	0x0041 00065 (pointer_vs_value/code/benchmark_invocation_test.go:12)	MOVQ	AX, "".o+88(SP)
	0x0046 00070 (pointer_vs_value/code/benchmark_invocation_test.go:12)	MOVSD	X0, "".o+96(SP)
	0x004c 00076 (pointer_vs_value/code/benchmark_invocation_test.go:14)	MOVQ	$0, "".i+32(SP)
	0x0055 00085 (pointer_vs_value/code/benchmark_invocation_test.go:14)	PCDATA	$0, $-2
	0x0055 00085 (pointer_vs_value/code/benchmark_invocation_test.go:14)	PCDATA	$1, $-2
	0x0055 00085 (pointer_vs_value/code/benchmark_invocation_test.go:14)	JMP	87
	0x0057 00087 (pointer_vs_value/code/benchmark_invocation_test.go:14)	PCDATA	$0, $1
	0x0057 00087 (pointer_vs_value/code/benchmark_invocation_test.go:14)	PCDATA	$1, $0
	0x0057 00087 (pointer_vs_value/code/benchmark_invocation_test.go:14)	MOVQ	"".b+312(SP), AX
	0x005f 00095 (pointer_vs_value/code/benchmark_invocation_test.go:14)	TESTB	AL, (AX)
	0x0061 00097 (pointer_vs_value/code/benchmark_invocation_test.go:14)	PCDATA	$0, $0
	0x0061 00097 (pointer_vs_value/code/benchmark_invocation_test.go:14)	MOVQ	264(AX), AX
	0x0068 00104 (pointer_vs_value/code/benchmark_invocation_test.go:14)	CMPQ	"".i+32(SP), AX
	0x006d 00109 (pointer_vs_value/code/benchmark_invocation_test.go:14)	JLT	116
	0x006f 00111 (pointer_vs_value/code/benchmark_invocation_test.go:14)	JMP	727
	0x0074 00116 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVQ	"".o+88(SP), AX
	0x0079 00121 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVSD	"".o+96(SP), X0
	0x007f 00127 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVQ	AX, "".o+72(SP)
	0x0084 00132 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVSD	X0, "".o+80(SP)
	0x008a 00138 (pointer_vs_value/code/benchmark_invocation_test.go:15)	XORPS	X0, X0
	0x008d 00141 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVSD	X0, "".~r1+24(SP)
	0x0093 00147 (pointer_vs_value/code/benchmark_invocation_test.go:15)	XORPS	X1, X1
	0x0096 00150 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVUPS	X1, "".~r2+128(SP)
	0x009e 00158 (<unknown line number>)	NOP
	0x009e 00158 (pointer_vs_value/code/func.go:8)	MOVSD	"".o+80(SP), X1
	0x00a4 00164 (pointer_vs_value/code/func.go:8)	UCOMISD	X0, X1
	0x00a8 00168 (pointer_vs_value/code/func.go:8)	JNE	666
	0x00ae 00174 (pointer_vs_value/code/func.go:8)	JPC	181
	0x00b0 00176 (pointer_vs_value/code/func.go:8)	JMP	666
	0x00b5 00181 (pointer_vs_value/code/func.go:9)	PCDATA	$0, $1
	0x00b5 00181 (pointer_vs_value/code/func.go:9)	PCDATA	$1, $1
	0x00b5 00181 (pointer_vs_value/code/func.go:9)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x00bc 00188 (pointer_vs_value/code/func.go:9)	PCDATA	$0, $0
	0x00bc 00188 (pointer_vs_value/code/func.go:9)	MOVQ	AX, errors.text+160(SP)
	0x00c4 00196 (pointer_vs_value/code/func.go:9)	MOVQ	$22, errors.text+168(SP)
	0x00d0 00208 (pointer_vs_value/code/func.go:9)	XORPS	X1, X1
	0x00d3 00211 (pointer_vs_value/code/func.go:9)	MOVUPS	X1, "".~R0+144(SP)
	0x00db 00219 (<unknown line number>)	NOP
	0x00db 00219 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $2
	0x00db 00219 ($GOROOT/src/errors/errors.go:59)	XORPS	X1, X1
	0x00de 00222 ($GOROOT/src/errors/errors.go:59)	MOVUPS	X1, ""..autotmp_15+240(SP)
	0x00e6 00230 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $2
	0x00e6 00230 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $1
	0x00e6 00230 ($GOROOT/src/errors/errors.go:59)	LEAQ	""..autotmp_15+240(SP), CX
	0x00ee 00238 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_14+112(SP)
	0x00f3 00243 ($GOROOT/src/errors/errors.go:59)	TESTB	AL, (CX)
	0x00f5 00245 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+168(SP), DX
	0x00fd 00253 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x00fd 00253 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $0
	0x00fd 00253 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+160(SP), BX
	0x0105 00261 ($GOROOT/src/errors/errors.go:59)	MOVQ	DX, ""..autotmp_15+248(SP)
	0x010d 00269 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $2
	0x010d 00269 ($GOROOT/src/errors/errors.go:59)	MOVQ	BX, ""..autotmp_15+240(SP)
	0x0115 00277 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_12+120(SP)
	0x011a 00282 (pointer_vs_value/code/func.go:9)	PCDATA	$0, $4
	0x011a 00282 (pointer_vs_value/code/func.go:9)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x0121 00289 (pointer_vs_value/code/func.go:9)	MOVQ	DX, ""..autotmp_16+224(SP)
	0x0129 00297 (pointer_vs_value/code/func.go:9)	MOVQ	CX, ""..autotmp_16+232(SP)
	0x0131 00305 (pointer_vs_value/code/func.go:9)	PCDATA	$0, $2
	0x0131 00305 (pointer_vs_value/code/func.go:9)	PCDATA	$1, $3
	0x0131 00305 (pointer_vs_value/code/func.go:9)	MOVQ	DX, "".~R0+144(SP)
	0x0139 00313 (pointer_vs_value/code/func.go:9)	PCDATA	$0, $0
	0x0139 00313 (pointer_vs_value/code/func.go:9)	MOVQ	CX, "".~R0+152(SP)
	0x0141 00321 (pointer_vs_value/code/func.go:9)	JMP	323
	0x0143 00323 (pointer_vs_value/code/benchmark_invocation_test.go:15)	PCDATA	$0, $2
	0x0143 00323 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVQ	"".~R0+152(SP), CX
	0x014b 00331 (pointer_vs_value/code/benchmark_invocation_test.go:15)	PCDATA	$1, $0
	0x014b 00331 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVQ	"".~R0+144(SP), BX
	0x0153 00339 (pointer_vs_value/code/benchmark_invocation_test.go:15)	PCDATA	$1, $4
	0x0153 00339 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVQ	BX, ""..autotmp_17+208(SP)
	0x015b 00347 (pointer_vs_value/code/benchmark_invocation_test.go:15)	PCDATA	$0, $0
	0x015b 00347 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVQ	CX, ""..autotmp_17+216(SP)
	0x0163 00355 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVSD	X0, "".~r1+24(SP)
	0x0169 00361 (pointer_vs_value/code/benchmark_invocation_test.go:15)	PCDATA	$0, $2
	0x0169 00361 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVQ	""..autotmp_17+216(SP), CX
	0x0171 00369 (pointer_vs_value/code/benchmark_invocation_test.go:15)	PCDATA	$1, $0
	0x0171 00369 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVQ	""..autotmp_17+208(SP), BX
	0x0179 00377 (pointer_vs_value/code/benchmark_invocation_test.go:15)	PCDATA	$1, $5
	0x0179 00377 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVQ	BX, "".~r2+128(SP)
	0x0181 00385 (pointer_vs_value/code/benchmark_invocation_test.go:15)	PCDATA	$0, $0
	0x0181 00385 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVQ	CX, "".~r2+136(SP)
	0x0189 00393 (pointer_vs_value/code/benchmark_invocation_test.go:15)	JMP	395
	0x018b 00395 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVSD	"".~r1+24(SP), X1
	0x0191 00401 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVSD	X1, ""..autotmp_19+56(SP)
	0x0197 00407 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVSD	X1, ""..autotmp_3+48(SP)
	0x019d 00413 (pointer_vs_value/code/benchmark_invocation_test.go:15)	PCDATA	$0, $2
	0x019d 00413 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVQ	"".~r2+136(SP), CX
	0x01a5 00421 (pointer_vs_value/code/benchmark_invocation_test.go:15)	PCDATA	$1, $0
	0x01a5 00421 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVQ	"".~r2+128(SP), BX
	0x01ad 00429 (pointer_vs_value/code/benchmark_invocation_test.go:15)	PCDATA	$1, $6
	0x01ad 00429 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVQ	BX, ""..autotmp_4+192(SP)
	0x01b5 00437 (pointer_vs_value/code/benchmark_invocation_test.go:15)	PCDATA	$0, $0
	0x01b5 00437 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVQ	CX, ""..autotmp_4+200(SP)
	0x01bd 00445 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVSD	""..autotmp_3+48(SP), X1
	0x01c3 00451 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVSD	X1, "".f+40(SP)
	0x01c9 00457 (pointer_vs_value/code/benchmark_invocation_test.go:15)	PCDATA	$0, $2
	0x01c9 00457 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVQ	""..autotmp_4+200(SP), CX
	0x01d1 00465 (pointer_vs_value/code/benchmark_invocation_test.go:15)	PCDATA	$1, $0
	0x01d1 00465 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVQ	""..autotmp_4+192(SP), BX
	0x01d9 00473 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVQ	BX, "".err+176(SP)
	0x01e1 00481 (pointer_vs_value/code/benchmark_invocation_test.go:15)	PCDATA	$0, $0
	0x01e1 00481 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVQ	CX, "".err+184(SP)
	0x01e9 00489 (<unknown line number>)	NOP
	0x01e9 00489 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	BX, BX
	0x01ec 00492 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	499
	0x01ee 00494 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	664
	0x01f3 00499 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $7
	0x01f3 00499 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X1, X1
	0x01f6 00502 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X1, ""..autotmp_13+256(SP)
	0x01fe 00510 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $2
	0x01fe 00510 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $0
	0x01fe 00510 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_13+256(SP), CX
	0x0206 00518 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_21+104(SP)
	0x020b 00523 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x020d 00525 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x020d 00525 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), BX
	0x0214 00532 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $2
	0x0214 00532 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	BX, ""..autotmp_13+256(SP)
	0x021c 00540 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $5
	0x021c 00540 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_3(SB), SI
	0x0223 00547 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $2
	0x0223 00547 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	SI, ""..autotmp_13+264(SP)
	0x022b 00555 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x022d 00557 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	559
	0x022f 00559 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_20+272(SP)
	0x0237 00567 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_20+280(SP)
	0x0243 00579 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_20+288(SP)
	0x024f 00591 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x024f 00591 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, (SP)
	0x0253 00595 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x025c 00604 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x0265 00613 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x026a 00618 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	620
	0x026c 00620 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x0274 00628 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+40(SP), X0
	0x027a 00634 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x0282 00642 (pointer_vs_value/code/benchmark_invocation_test.go:15)	JMP	644
	0x0284 00644 (pointer_vs_value/code/benchmark_invocation_test.go:14)	PCDATA	$0, $-2
	0x0284 00644 (pointer_vs_value/code/benchmark_invocation_test.go:14)	PCDATA	$1, $-2
	0x0284 00644 (pointer_vs_value/code/benchmark_invocation_test.go:14)	JMP	646
	0x0286 00646 (pointer_vs_value/code/benchmark_invocation_test.go:14)	PCDATA	$0, $0
	0x0286 00646 (pointer_vs_value/code/benchmark_invocation_test.go:14)	PCDATA	$1, $0
	0x0286 00646 (pointer_vs_value/code/benchmark_invocation_test.go:14)	MOVQ	"".i+32(SP), AX
	0x028b 00651 (pointer_vs_value/code/benchmark_invocation_test.go:14)	INCQ	AX
	0x028e 00654 (pointer_vs_value/code/benchmark_invocation_test.go:14)	MOVQ	AX, "".i+32(SP)
	0x0293 00659 (pointer_vs_value/code/benchmark_invocation_test.go:14)	JMP	87
	0x0298 00664 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x0298 00664 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x0298 00664 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	620
	0x029a 00666 (pointer_vs_value/code/func.go:11)	PCDATA	$0, $0
	0x029a 00666 (pointer_vs_value/code/func.go:11)	PCDATA	$1, $0
	0x029a 00666 (pointer_vs_value/code/func.go:11)	MOVQ	"".o+72(SP), CX
	0x029f 00671 (pointer_vs_value/code/func.go:11)	XORPS	X1, X1
	0x02a2 00674 (pointer_vs_value/code/func.go:11)	CVTSQ2SD	CX, X1
	0x02a7 00679 (pointer_vs_value/code/func.go:11)	DIVSD	"".o+80(SP), X1
	0x02ad 00685 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVSD	X1, ""..autotmp_18+64(SP)
	0x02b3 00691 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVSD	X1, "".~r1+24(SP)
	0x02b9 00697 (pointer_vs_value/code/benchmark_invocation_test.go:15)	PCDATA	$1, $5
	0x02b9 00697 (pointer_vs_value/code/benchmark_invocation_test.go:15)	XORPS	X1, X1
	0x02bc 00700 (pointer_vs_value/code/benchmark_invocation_test.go:15)	MOVUPS	X1, "".~r2+128(SP)
	0x02c4 00708 (pointer_vs_value/code/benchmark_invocation_test.go:15)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x02cb 00715 (pointer_vs_value/code/benchmark_invocation_test.go:15)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x02d2 00722 (pointer_vs_value/code/benchmark_invocation_test.go:15)	JMP	395
	0x02d7 00727 (<unknown line number>)	PCDATA	$0, $-2
	0x02d7 00727 (<unknown line number>)	PCDATA	$1, $-2
	0x02d7 00727 (<unknown line number>)	MOVQ	296(SP), BP
	0x02df 00735 (<unknown line number>)	ADDQ	$304, SP
	0x02e6 00742 (<unknown line number>)	RET
	0x02e7 00743 (<unknown line number>)	NOP
	0x02e7 00743 (pointer_vs_value/code/benchmark_invocation_test.go:10)	PCDATA	$1, $-1
	0x02e7 00743 (pointer_vs_value/code/benchmark_invocation_test.go:10)	PCDATA	$0, $-1
	0x02e7 00743 (pointer_vs_value/code/benchmark_invocation_test.go:10)	CALL	runtime.morestack_noctxt(SB)
	0x02ec 00748 (pointer_vs_value/code/benchmark_invocation_test.go:10)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 50 ff ff  eH..%....H..$P..
	0x0010 ff 48 3b 41 10 0f 86 cc 02 00 00 48 81 ec 30 01  .H;A.......H..0.
	0x0020 00 00 48 89 ac 24 28 01 00 00 48 8d ac 24 28 01  ..H..$(...H..$(.
	0x0030 00 00 e8 00 00 00 00 f2 0f 10 44 24 08 48 8b 04  ..........D$.H..
	0x0040 24 48 89 44 24 58 f2 0f 11 44 24 60 48 c7 44 24  $H.D$X...D$`H.D$
	0x0050 20 00 00 00 00 eb 00 48 8b 84 24 38 01 00 00 84   ......H..$8....
	0x0060 00 48 8b 80 08 01 00 00 48 39 44 24 20 7c 05 e9  .H......H9D$ |..
	0x0070 63 02 00 00 48 8b 44 24 58 f2 0f 10 44 24 60 48  c...H.D$X...D$`H
	0x0080 89 44 24 48 f2 0f 11 44 24 50 0f 57 c0 f2 0f 11  .D$H...D$P.W....
	0x0090 44 24 18 0f 57 c9 0f 11 8c 24 80 00 00 00 f2 0f  D$..W....$......
	0x00a0 10 4c 24 50 66 0f 2e c8 0f 85 ec 01 00 00 7b 05  .L$Pf.........{.
	0x00b0 e9 e5 01 00 00 48 8d 05 00 00 00 00 48 89 84 24  .....H......H..$
	0x00c0 a0 00 00 00 48 c7 84 24 a8 00 00 00 16 00 00 00  ....H..$........
	0x00d0 0f 57 c9 0f 11 8c 24 90 00 00 00 0f 57 c9 0f 11  .W....$.....W...
	0x00e0 8c 24 f0 00 00 00 48 8d 8c 24 f0 00 00 00 48 89  .$....H..$....H.
	0x00f0 4c 24 70 84 01 48 8b 94 24 a8 00 00 00 48 8b 9c  L$p..H..$....H..
	0x0100 24 a0 00 00 00 48 89 94 24 f8 00 00 00 48 89 9c  $....H..$....H..
	0x0110 24 f0 00 00 00 48 89 4c 24 78 48 8d 15 00 00 00  $....H.L$xH.....
	0x0120 00 48 89 94 24 e0 00 00 00 48 89 8c 24 e8 00 00  .H..$....H..$...
	0x0130 00 48 89 94 24 90 00 00 00 48 89 8c 24 98 00 00  .H..$....H..$...
	0x0140 00 eb 00 48 8b 8c 24 98 00 00 00 48 8b 9c 24 90  ...H..$....H..$.
	0x0150 00 00 00 48 89 9c 24 d0 00 00 00 48 89 8c 24 d8  ...H..$....H..$.
	0x0160 00 00 00 f2 0f 11 44 24 18 48 8b 8c 24 d8 00 00  ......D$.H..$...
	0x0170 00 48 8b 9c 24 d0 00 00 00 48 89 9c 24 80 00 00  .H..$....H..$...
	0x0180 00 48 89 8c 24 88 00 00 00 eb 00 f2 0f 10 4c 24  .H..$.........L$
	0x0190 18 f2 0f 11 4c 24 38 f2 0f 11 4c 24 30 48 8b 8c  ....L$8...L$0H..
	0x01a0 24 88 00 00 00 48 8b 9c 24 80 00 00 00 48 89 9c  $....H..$....H..
	0x01b0 24 c0 00 00 00 48 89 8c 24 c8 00 00 00 f2 0f 10  $....H..$.......
	0x01c0 4c 24 30 f2 0f 11 4c 24 28 48 8b 8c 24 c8 00 00  L$0...L$(H..$...
	0x01d0 00 48 8b 9c 24 c0 00 00 00 48 89 9c 24 b0 00 00  .H..$....H..$...
	0x01e0 00 48 89 8c 24 b8 00 00 00 48 85 db 75 05 e9 a5  .H..$....H..u...
	0x01f0 00 00 00 0f 57 c9 0f 11 8c 24 00 01 00 00 48 8d  ....W....$....H.
	0x0200 8c 24 00 01 00 00 48 89 4c 24 68 84 01 48 8d 1d  .$....H.L$h..H..
	0x0210 00 00 00 00 48 89 9c 24 00 01 00 00 48 8d 35 00  ....H..$....H.5.
	0x0220 00 00 00 48 89 b4 24 08 01 00 00 84 01 eb 00 48  ...H..$........H
	0x0230 89 8c 24 10 01 00 00 48 c7 84 24 18 01 00 00 01  ..$....H..$.....
	0x0240 00 00 00 48 c7 84 24 20 01 00 00 01 00 00 00 48  ...H..$ .......H
	0x0250 89 0c 24 48 c7 44 24 08 01 00 00 00 48 c7 44 24  ..$H.D$.....H.D$
	0x0260 10 01 00 00 00 e8 00 00 00 00 eb 00 f2 0f 10 05  ................
	0x0270 00 00 00 00 f2 0f 58 44 24 28 f2 0f 11 05 00 00  ......XD$(......
	0x0280 00 00 eb 00 eb 00 48 8b 44 24 20 48 ff c0 48 89  ......H.D$ H..H.
	0x0290 44 24 20 e9 bf fd ff ff eb d2 48 8b 4c 24 48 0f  D$ .......H.L$H.
	0x02a0 57 c9 f2 48 0f 2a c9 f2 0f 5e 4c 24 50 f2 0f 11  W..H.*...^L$P...
	0x02b0 4c 24 40 f2 0f 11 4c 24 18 0f 57 c9 0f 11 8c 24  L$@...L$..W....$
	0x02c0 80 00 00 00 48 8d 05 00 00 00 00 48 8d 15 00 00  ....H......H....
	0x02d0 00 00 e9 b4 fe ff ff 48 8b ac 24 28 01 00 00 48  .......H..$(...H
	0x02e0 81 c4 30 01 00 00 c3 e8 00 00 00 00 e9 0f fd ff  ..0.............
	0x02f0 ff                                               .
	rel 5+4 t=16 TLS+0
	rel 51+4 t=8 "".createMicro+0
	rel 184+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 285+4 t=15 go.itab.*errors.errorString,error+0
	rel 528+4 t=15 type.string+0
	rel 543+4 t=15 ""..stmp_3+0
	rel 614+4 t=8 log.Fatal+0
	rel 624+4 t=15 "".F+0
	rel 638+4 t=15 "".F+0
	rel 711+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 718+4 t=15 go.itab.*errors.errorString,error+0
	rel 744+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkMicroP_Calc STEXT size=763 args=0x8 locals=0x130
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:19)	TEXT	"".BenchmarkMicroP_Calc(SB), ABIInternal, $304-8
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:19)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_invocation_test.go:19)	LEAQ	-176(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_invocation_test.go:19)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_invocation_test.go:19)	JLS	753
	0x001b 00027 (pointer_vs_value/code/benchmark_invocation_test.go:19)	SUBQ	$304, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_invocation_test.go:19)	MOVQ	BP, 296(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_invocation_test.go:19)	LEAQ	296(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:19)	FUNCDATA	$0, gclocals·bb2ddec3984c001925e1824edd6d6bcf(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:19)	FUNCDATA	$1, gclocals·3add79447fae350bd519a2cf4ce3d6d4(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:19)	FUNCDATA	$2, gclocals·461fb64e646d1cd7131d277febeb23b5(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:19)	FUNCDATA	$3, "".BenchmarkMicroP_Calc.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:21)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:21)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:21)	CALL	"".createMicro(SB)
	0x0037 00055 (pointer_vs_value/code/benchmark_invocation_test.go:21)	MOVSD	8(SP), X0
	0x003d 00061 (pointer_vs_value/code/benchmark_invocation_test.go:21)	MOVQ	(SP), AX
	0x0041 00065 (pointer_vs_value/code/benchmark_invocation_test.go:21)	MOVQ	AX, "".o+72(SP)
	0x0046 00070 (pointer_vs_value/code/benchmark_invocation_test.go:21)	MOVSD	X0, "".o+80(SP)
	0x004c 00076 (pointer_vs_value/code/benchmark_invocation_test.go:23)	MOVQ	$0, "".i+32(SP)
	0x0055 00085 (pointer_vs_value/code/benchmark_invocation_test.go:23)	PCDATA	$0, $-2
	0x0055 00085 (pointer_vs_value/code/benchmark_invocation_test.go:23)	PCDATA	$1, $-2
	0x0055 00085 (pointer_vs_value/code/benchmark_invocation_test.go:23)	JMP	87
	0x0057 00087 (pointer_vs_value/code/benchmark_invocation_test.go:23)	PCDATA	$0, $1
	0x0057 00087 (pointer_vs_value/code/benchmark_invocation_test.go:23)	PCDATA	$1, $0
	0x0057 00087 (pointer_vs_value/code/benchmark_invocation_test.go:23)	MOVQ	"".b+312(SP), AX
	0x005f 00095 (pointer_vs_value/code/benchmark_invocation_test.go:23)	TESTB	AL, (AX)
	0x0061 00097 (pointer_vs_value/code/benchmark_invocation_test.go:23)	PCDATA	$0, $0
	0x0061 00097 (pointer_vs_value/code/benchmark_invocation_test.go:23)	MOVQ	264(AX), AX
	0x0068 00104 (pointer_vs_value/code/benchmark_invocation_test.go:23)	CMPQ	"".i+32(SP), AX
	0x006d 00109 (pointer_vs_value/code/benchmark_invocation_test.go:23)	JLT	116
	0x006f 00111 (pointer_vs_value/code/benchmark_invocation_test.go:23)	JMP	737
	0x0074 00116 (pointer_vs_value/code/benchmark_invocation_test.go:24)	PCDATA	$0, $1
	0x0074 00116 (pointer_vs_value/code/benchmark_invocation_test.go:24)	LEAQ	"".o+72(SP), AX
	0x0079 00121 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVQ	AX, ""..autotmp_14+112(SP)
	0x007e 00126 (pointer_vs_value/code/benchmark_invocation_test.go:24)	PCDATA	$0, $0
	0x007e 00126 (pointer_vs_value/code/benchmark_invocation_test.go:24)	PCDATA	$1, $1
	0x007e 00126 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVQ	AX, "".o+88(SP)
	0x0083 00131 (pointer_vs_value/code/benchmark_invocation_test.go:24)	XORPS	X0, X0
	0x0086 00134 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVSD	X0, "".~r1+24(SP)
	0x008c 00140 (pointer_vs_value/code/benchmark_invocation_test.go:24)	XORPS	X1, X1
	0x008f 00143 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVUPS	X1, "".~r2+128(SP)
	0x0097 00151 (pointer_vs_value/code/func.go:52)	PCDATA	$0, $1
	0x0097 00151 (pointer_vs_value/code/func.go:52)	MOVQ	"".o+88(SP), AX
	0x009c 00156 (pointer_vs_value/code/func.go:52)	TESTB	AL, (AX)
	0x009e 00158 (<unknown line number>)	NOP
	0x009e 00158 (pointer_vs_value/code/func.go:52)	PCDATA	$0, $0
	0x009e 00158 (pointer_vs_value/code/func.go:52)	MOVSD	8(AX), X1
	0x00a3 00163 (pointer_vs_value/code/func.go:52)	UCOMISD	X0, X1
	0x00a7 00167 (pointer_vs_value/code/func.go:52)	JNE	665
	0x00ad 00173 (pointer_vs_value/code/func.go:52)	JPC	180
	0x00af 00175 (pointer_vs_value/code/func.go:52)	JMP	665
	0x00b4 00180 (pointer_vs_value/code/func.go:53)	PCDATA	$0, $1
	0x00b4 00180 (pointer_vs_value/code/func.go:53)	PCDATA	$1, $2
	0x00b4 00180 (pointer_vs_value/code/func.go:53)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x00bb 00187 (pointer_vs_value/code/func.go:53)	PCDATA	$0, $0
	0x00bb 00187 (pointer_vs_value/code/func.go:53)	MOVQ	AX, errors.text+160(SP)
	0x00c3 00195 (pointer_vs_value/code/func.go:53)	MOVQ	$22, errors.text+168(SP)
	0x00cf 00207 (pointer_vs_value/code/func.go:53)	XORPS	X1, X1
	0x00d2 00210 (pointer_vs_value/code/func.go:53)	MOVUPS	X1, "".~R0+144(SP)
	0x00da 00218 (<unknown line number>)	NOP
	0x00da 00218 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x00da 00218 ($GOROOT/src/errors/errors.go:59)	XORPS	X1, X1
	0x00dd 00221 ($GOROOT/src/errors/errors.go:59)	MOVUPS	X1, ""..autotmp_16+240(SP)
	0x00e5 00229 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $2
	0x00e5 00229 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $2
	0x00e5 00229 ($GOROOT/src/errors/errors.go:59)	LEAQ	""..autotmp_16+240(SP), CX
	0x00ed 00237 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_15+104(SP)
	0x00f2 00242 ($GOROOT/src/errors/errors.go:59)	TESTB	AL, (CX)
	0x00f4 00244 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+168(SP), DX
	0x00fc 00252 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x00fc 00252 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $0
	0x00fc 00252 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+160(SP), BX
	0x0104 00260 ($GOROOT/src/errors/errors.go:59)	MOVQ	DX, ""..autotmp_16+248(SP)
	0x010c 00268 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $2
	0x010c 00268 ($GOROOT/src/errors/errors.go:59)	MOVQ	BX, ""..autotmp_16+240(SP)
	0x0114 00276 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_12+120(SP)
	0x0119 00281 (pointer_vs_value/code/func.go:53)	PCDATA	$0, $4
	0x0119 00281 (pointer_vs_value/code/func.go:53)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x0120 00288 (pointer_vs_value/code/func.go:53)	MOVQ	DX, ""..autotmp_17+224(SP)
	0x0128 00296 (pointer_vs_value/code/func.go:53)	MOVQ	CX, ""..autotmp_17+232(SP)
	0x0130 00304 (pointer_vs_value/code/func.go:53)	PCDATA	$0, $2
	0x0130 00304 (pointer_vs_value/code/func.go:53)	PCDATA	$1, $4
	0x0130 00304 (pointer_vs_value/code/func.go:53)	MOVQ	DX, "".~R0+144(SP)
	0x0138 00312 (pointer_vs_value/code/func.go:53)	PCDATA	$0, $0
	0x0138 00312 (pointer_vs_value/code/func.go:53)	MOVQ	CX, "".~R0+152(SP)
	0x0140 00320 (pointer_vs_value/code/func.go:53)	JMP	322
	0x0142 00322 (pointer_vs_value/code/benchmark_invocation_test.go:24)	PCDATA	$0, $2
	0x0142 00322 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVQ	"".~R0+152(SP), CX
	0x014a 00330 (pointer_vs_value/code/benchmark_invocation_test.go:24)	PCDATA	$1, $0
	0x014a 00330 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVQ	"".~R0+144(SP), BX
	0x0152 00338 (pointer_vs_value/code/benchmark_invocation_test.go:24)	PCDATA	$1, $5
	0x0152 00338 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVQ	BX, ""..autotmp_18+208(SP)
	0x015a 00346 (pointer_vs_value/code/benchmark_invocation_test.go:24)	PCDATA	$0, $0
	0x015a 00346 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVQ	CX, ""..autotmp_18+216(SP)
	0x0162 00354 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVSD	X0, "".~r1+24(SP)
	0x0168 00360 (pointer_vs_value/code/benchmark_invocation_test.go:24)	PCDATA	$0, $2
	0x0168 00360 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVQ	""..autotmp_18+216(SP), CX
	0x0170 00368 (pointer_vs_value/code/benchmark_invocation_test.go:24)	PCDATA	$1, $0
	0x0170 00368 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVQ	""..autotmp_18+208(SP), BX
	0x0178 00376 (pointer_vs_value/code/benchmark_invocation_test.go:24)	PCDATA	$1, $6
	0x0178 00376 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVQ	BX, "".~r2+128(SP)
	0x0180 00384 (pointer_vs_value/code/benchmark_invocation_test.go:24)	PCDATA	$0, $0
	0x0180 00384 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVQ	CX, "".~r2+136(SP)
	0x0188 00392 (pointer_vs_value/code/benchmark_invocation_test.go:24)	JMP	394
	0x018a 00394 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVSD	"".~r1+24(SP), X1
	0x0190 00400 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVSD	X1, ""..autotmp_20+56(SP)
	0x0196 00406 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVSD	X1, ""..autotmp_3+48(SP)
	0x019c 00412 (pointer_vs_value/code/benchmark_invocation_test.go:24)	PCDATA	$0, $2
	0x019c 00412 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVQ	"".~r2+136(SP), CX
	0x01a4 00420 (pointer_vs_value/code/benchmark_invocation_test.go:24)	PCDATA	$1, $0
	0x01a4 00420 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVQ	"".~r2+128(SP), BX
	0x01ac 00428 (pointer_vs_value/code/benchmark_invocation_test.go:24)	PCDATA	$1, $7
	0x01ac 00428 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVQ	BX, ""..autotmp_4+192(SP)
	0x01b4 00436 (pointer_vs_value/code/benchmark_invocation_test.go:24)	PCDATA	$0, $0
	0x01b4 00436 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVQ	CX, ""..autotmp_4+200(SP)
	0x01bc 00444 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVSD	""..autotmp_3+48(SP), X1
	0x01c2 00450 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVSD	X1, "".f+40(SP)
	0x01c8 00456 (pointer_vs_value/code/benchmark_invocation_test.go:24)	PCDATA	$0, $2
	0x01c8 00456 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVQ	""..autotmp_4+200(SP), CX
	0x01d0 00464 (pointer_vs_value/code/benchmark_invocation_test.go:24)	PCDATA	$1, $0
	0x01d0 00464 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVQ	""..autotmp_4+192(SP), BX
	0x01d8 00472 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVQ	BX, "".err+176(SP)
	0x01e0 00480 (pointer_vs_value/code/benchmark_invocation_test.go:24)	PCDATA	$0, $0
	0x01e0 00480 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVQ	CX, "".err+184(SP)
	0x01e8 00488 (<unknown line number>)	NOP
	0x01e8 00488 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	BX, BX
	0x01eb 00491 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	498
	0x01ed 00493 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	663
	0x01f2 00498 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $8
	0x01f2 00498 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X1, X1
	0x01f5 00501 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X1, ""..autotmp_13+256(SP)
	0x01fd 00509 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $2
	0x01fd 00509 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $0
	0x01fd 00509 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_13+256(SP), CX
	0x0205 00517 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_22+96(SP)
	0x020a 00522 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x020c 00524 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x020c 00524 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), BX
	0x0213 00531 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $2
	0x0213 00531 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	BX, ""..autotmp_13+256(SP)
	0x021b 00539 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $5
	0x021b 00539 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_4(SB), SI
	0x0222 00546 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $2
	0x0222 00546 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	SI, ""..autotmp_13+264(SP)
	0x022a 00554 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x022c 00556 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	558
	0x022e 00558 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_21+272(SP)
	0x0236 00566 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_21+280(SP)
	0x0242 00578 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_21+288(SP)
	0x024e 00590 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x024e 00590 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, (SP)
	0x0252 00594 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x025b 00603 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x0264 00612 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x0269 00617 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	619
	0x026b 00619 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x0273 00627 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+40(SP), X0
	0x0279 00633 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x0281 00641 (pointer_vs_value/code/benchmark_invocation_test.go:24)	JMP	643
	0x0283 00643 (pointer_vs_value/code/benchmark_invocation_test.go:23)	PCDATA	$0, $-2
	0x0283 00643 (pointer_vs_value/code/benchmark_invocation_test.go:23)	PCDATA	$1, $-2
	0x0283 00643 (pointer_vs_value/code/benchmark_invocation_test.go:23)	JMP	645
	0x0285 00645 (pointer_vs_value/code/benchmark_invocation_test.go:23)	PCDATA	$0, $0
	0x0285 00645 (pointer_vs_value/code/benchmark_invocation_test.go:23)	PCDATA	$1, $0
	0x0285 00645 (pointer_vs_value/code/benchmark_invocation_test.go:23)	MOVQ	"".i+32(SP), AX
	0x028a 00650 (pointer_vs_value/code/benchmark_invocation_test.go:23)	INCQ	AX
	0x028d 00653 (pointer_vs_value/code/benchmark_invocation_test.go:23)	MOVQ	AX, "".i+32(SP)
	0x0292 00658 (pointer_vs_value/code/benchmark_invocation_test.go:23)	JMP	87
	0x0297 00663 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x0297 00663 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x0297 00663 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	619
	0x0299 00665 (pointer_vs_value/code/func.go:55)	PCDATA	$0, $2
	0x0299 00665 (pointer_vs_value/code/func.go:55)	PCDATA	$1, $1
	0x0299 00665 (pointer_vs_value/code/func.go:55)	MOVQ	"".o+88(SP), CX
	0x029e 00670 (pointer_vs_value/code/func.go:55)	TESTB	AL, (CX)
	0x02a0 00672 (pointer_vs_value/code/func.go:55)	PCDATA	$0, $3
	0x02a0 00672 (pointer_vs_value/code/func.go:55)	PCDATA	$1, $0
	0x02a0 00672 (pointer_vs_value/code/func.go:55)	MOVQ	"".o+88(SP), BX
	0x02a5 00677 (pointer_vs_value/code/func.go:55)	TESTB	AL, (BX)
	0x02a7 00679 (pointer_vs_value/code/func.go:55)	PCDATA	$0, $6
	0x02a7 00679 (pointer_vs_value/code/func.go:55)	MOVQ	(CX), CX
	0x02aa 00682 (pointer_vs_value/code/func.go:55)	XORPS	X1, X1
	0x02ad 00685 (pointer_vs_value/code/func.go:55)	CVTSQ2SD	CX, X1
	0x02b2 00690 (pointer_vs_value/code/func.go:55)	PCDATA	$0, $0
	0x02b2 00690 (pointer_vs_value/code/func.go:55)	DIVSD	8(BX), X1
	0x02b7 00695 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVSD	X1, ""..autotmp_19+64(SP)
	0x02bd 00701 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVSD	X1, "".~r1+24(SP)
	0x02c3 00707 (pointer_vs_value/code/benchmark_invocation_test.go:24)	PCDATA	$1, $6
	0x02c3 00707 (pointer_vs_value/code/benchmark_invocation_test.go:24)	XORPS	X1, X1
	0x02c6 00710 (pointer_vs_value/code/benchmark_invocation_test.go:24)	MOVUPS	X1, "".~r2+128(SP)
	0x02ce 00718 (pointer_vs_value/code/benchmark_invocation_test.go:24)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x02d5 00725 (pointer_vs_value/code/benchmark_invocation_test.go:24)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x02dc 00732 (pointer_vs_value/code/benchmark_invocation_test.go:24)	JMP	394
	0x02e1 00737 (<unknown line number>)	PCDATA	$0, $-2
	0x02e1 00737 (<unknown line number>)	PCDATA	$1, $-2
	0x02e1 00737 (<unknown line number>)	MOVQ	296(SP), BP
	0x02e9 00745 (<unknown line number>)	ADDQ	$304, SP
	0x02f0 00752 (<unknown line number>)	RET
	0x02f1 00753 (<unknown line number>)	NOP
	0x02f1 00753 (pointer_vs_value/code/benchmark_invocation_test.go:19)	PCDATA	$1, $-1
	0x02f1 00753 (pointer_vs_value/code/benchmark_invocation_test.go:19)	PCDATA	$0, $-1
	0x02f1 00753 (pointer_vs_value/code/benchmark_invocation_test.go:19)	CALL	runtime.morestack_noctxt(SB)
	0x02f6 00758 (pointer_vs_value/code/benchmark_invocation_test.go:19)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 50 ff ff  eH..%....H..$P..
	0x0010 ff 48 3b 41 10 0f 86 d6 02 00 00 48 81 ec 30 01  .H;A.......H..0.
	0x0020 00 00 48 89 ac 24 28 01 00 00 48 8d ac 24 28 01  ..H..$(...H..$(.
	0x0030 00 00 e8 00 00 00 00 f2 0f 10 44 24 08 48 8b 04  ..........D$.H..
	0x0040 24 48 89 44 24 48 f2 0f 11 44 24 50 48 c7 44 24  $H.D$H...D$PH.D$
	0x0050 20 00 00 00 00 eb 00 48 8b 84 24 38 01 00 00 84   ......H..$8....
	0x0060 00 48 8b 80 08 01 00 00 48 39 44 24 20 7c 05 e9  .H......H9D$ |..
	0x0070 6d 02 00 00 48 8d 44 24 48 48 89 44 24 70 48 89  m...H.D$HH.D$pH.
	0x0080 44 24 58 0f 57 c0 f2 0f 11 44 24 18 0f 57 c9 0f  D$X.W....D$..W..
	0x0090 11 8c 24 80 00 00 00 48 8b 44 24 58 84 00 f2 0f  ..$....H.D$X....
	0x00a0 10 48 08 66 0f 2e c8 0f 85 ec 01 00 00 7b 05 e9  .H.f.........{..
	0x00b0 e5 01 00 00 48 8d 05 00 00 00 00 48 89 84 24 a0  ....H......H..$.
	0x00c0 00 00 00 48 c7 84 24 a8 00 00 00 16 00 00 00 0f  ...H..$.........
	0x00d0 57 c9 0f 11 8c 24 90 00 00 00 0f 57 c9 0f 11 8c  W....$.....W....
	0x00e0 24 f0 00 00 00 48 8d 8c 24 f0 00 00 00 48 89 4c  $....H..$....H.L
	0x00f0 24 68 84 01 48 8b 94 24 a8 00 00 00 48 8b 9c 24  $h..H..$....H..$
	0x0100 a0 00 00 00 48 89 94 24 f8 00 00 00 48 89 9c 24  ....H..$....H..$
	0x0110 f0 00 00 00 48 89 4c 24 78 48 8d 15 00 00 00 00  ....H.L$xH......
	0x0120 48 89 94 24 e0 00 00 00 48 89 8c 24 e8 00 00 00  H..$....H..$....
	0x0130 48 89 94 24 90 00 00 00 48 89 8c 24 98 00 00 00  H..$....H..$....
	0x0140 eb 00 48 8b 8c 24 98 00 00 00 48 8b 9c 24 90 00  ..H..$....H..$..
	0x0150 00 00 48 89 9c 24 d0 00 00 00 48 89 8c 24 d8 00  ..H..$....H..$..
	0x0160 00 00 f2 0f 11 44 24 18 48 8b 8c 24 d8 00 00 00  .....D$.H..$....
	0x0170 48 8b 9c 24 d0 00 00 00 48 89 9c 24 80 00 00 00  H..$....H..$....
	0x0180 48 89 8c 24 88 00 00 00 eb 00 f2 0f 10 4c 24 18  H..$.........L$.
	0x0190 f2 0f 11 4c 24 38 f2 0f 11 4c 24 30 48 8b 8c 24  ...L$8...L$0H..$
	0x01a0 88 00 00 00 48 8b 9c 24 80 00 00 00 48 89 9c 24  ....H..$....H..$
	0x01b0 c0 00 00 00 48 89 8c 24 c8 00 00 00 f2 0f 10 4c  ....H..$.......L
	0x01c0 24 30 f2 0f 11 4c 24 28 48 8b 8c 24 c8 00 00 00  $0...L$(H..$....
	0x01d0 48 8b 9c 24 c0 00 00 00 48 89 9c 24 b0 00 00 00  H..$....H..$....
	0x01e0 48 89 8c 24 b8 00 00 00 48 85 db 75 05 e9 a5 00  H..$....H..u....
	0x01f0 00 00 0f 57 c9 0f 11 8c 24 00 01 00 00 48 8d 8c  ...W....$....H..
	0x0200 24 00 01 00 00 48 89 4c 24 60 84 01 48 8d 1d 00  $....H.L$`..H...
	0x0210 00 00 00 48 89 9c 24 00 01 00 00 48 8d 35 00 00  ...H..$....H.5..
	0x0220 00 00 48 89 b4 24 08 01 00 00 84 01 eb 00 48 89  ..H..$........H.
	0x0230 8c 24 10 01 00 00 48 c7 84 24 18 01 00 00 01 00  .$....H..$......
	0x0240 00 00 48 c7 84 24 20 01 00 00 01 00 00 00 48 89  ..H..$ .......H.
	0x0250 0c 24 48 c7 44 24 08 01 00 00 00 48 c7 44 24 10  .$H.D$.....H.D$.
	0x0260 01 00 00 00 e8 00 00 00 00 eb 00 f2 0f 10 05 00  ................
	0x0270 00 00 00 f2 0f 58 44 24 28 f2 0f 11 05 00 00 00  .....XD$(.......
	0x0280 00 eb 00 eb 00 48 8b 44 24 20 48 ff c0 48 89 44  .....H.D$ H..H.D
	0x0290 24 20 e9 c0 fd ff ff eb d2 48 8b 4c 24 58 84 01  $ .......H.L$X..
	0x02a0 48 8b 5c 24 58 84 03 48 8b 09 0f 57 c9 f2 48 0f  H.\$X..H...W..H.
	0x02b0 2a c9 f2 0f 5e 4b 08 f2 0f 11 4c 24 40 f2 0f 11  *...^K....L$@...
	0x02c0 4c 24 18 0f 57 c9 0f 11 8c 24 80 00 00 00 48 8d  L$..W....$....H.
	0x02d0 05 00 00 00 00 48 8d 15 00 00 00 00 e9 a9 fe ff  .....H..........
	0x02e0 ff 48 8b ac 24 28 01 00 00 48 81 c4 30 01 00 00  .H..$(...H..0...
	0x02f0 c3 e8 00 00 00 00 e9 05 fd ff ff                 ...........
	rel 5+4 t=16 TLS+0
	rel 51+4 t=8 "".createMicro+0
	rel 183+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 284+4 t=15 go.itab.*errors.errorString,error+0
	rel 527+4 t=15 type.string+0
	rel 542+4 t=15 ""..stmp_4+0
	rel 613+4 t=8 log.Fatal+0
	rel 623+4 t=15 "".F+0
	rel 637+4 t=15 "".F+0
	rel 721+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 728+4 t=15 go.itab.*errors.errorString,error+0
	rel 754+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkMicroIfc_Calc STEXT size=499 args=0x8 locals=0xc0
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:28)	TEXT	"".BenchmarkMicroIfc_Calc(SB), ABIInternal, $192-8
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:28)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_invocation_test.go:28)	LEAQ	-64(SP), AX
	0x000e 00014 (pointer_vs_value/code/benchmark_invocation_test.go:28)	CMPQ	AX, 16(CX)
	0x0012 00018 (pointer_vs_value/code/benchmark_invocation_test.go:28)	JLS	489
	0x0018 00024 (pointer_vs_value/code/benchmark_invocation_test.go:28)	SUBQ	$192, SP
	0x001f 00031 (pointer_vs_value/code/benchmark_invocation_test.go:28)	MOVQ	BP, 184(SP)
	0x0027 00039 (pointer_vs_value/code/benchmark_invocation_test.go:28)	LEAQ	184(SP), BP
	0x002f 00047 (pointer_vs_value/code/benchmark_invocation_test.go:28)	FUNCDATA	$0, gclocals·73de87619823f6747f37fd4c152f5b42(SB)
	0x002f 00047 (pointer_vs_value/code/benchmark_invocation_test.go:28)	FUNCDATA	$1, gclocals·5656cec2d04c5a84ade886586cb39011(SB)
	0x002f 00047 (pointer_vs_value/code/benchmark_invocation_test.go:28)	FUNCDATA	$2, gclocals·39c35ed93fc31b84b0c48f70fc1139f4(SB)
	0x002f 00047 (pointer_vs_value/code/benchmark_invocation_test.go:28)	FUNCDATA	$3, "".BenchmarkMicroIfc_Calc.stkobj(SB)
	0x002f 00047 (pointer_vs_value/code/benchmark_invocation_test.go:30)	PCDATA	$0, $1
	0x002f 00047 (pointer_vs_value/code/benchmark_invocation_test.go:30)	PCDATA	$1, $0
	0x002f 00047 (pointer_vs_value/code/benchmark_invocation_test.go:30)	LEAQ	type."".micro(SB), AX
	0x0036 00054 (pointer_vs_value/code/benchmark_invocation_test.go:30)	PCDATA	$0, $0
	0x0036 00054 (pointer_vs_value/code/benchmark_invocation_test.go:30)	MOVQ	AX, (SP)
	0x003a 00058 (pointer_vs_value/code/benchmark_invocation_test.go:30)	CALL	runtime.newobject(SB)
	0x003f 00063 (pointer_vs_value/code/benchmark_invocation_test.go:30)	PCDATA	$0, $1
	0x003f 00063 (pointer_vs_value/code/benchmark_invocation_test.go:30)	MOVQ	8(SP), AX
	0x0044 00068 (pointer_vs_value/code/benchmark_invocation_test.go:30)	PCDATA	$0, $0
	0x0044 00068 (pointer_vs_value/code/benchmark_invocation_test.go:30)	PCDATA	$1, $1
	0x0044 00068 (pointer_vs_value/code/benchmark_invocation_test.go:30)	MOVQ	AX, "".&o+88(SP)
	0x0049 00073 (pointer_vs_value/code/benchmark_invocation_test.go:30)	CALL	"".createMicro(SB)
	0x004e 00078 (pointer_vs_value/code/benchmark_invocation_test.go:30)	PCDATA	$0, $1
	0x004e 00078 (pointer_vs_value/code/benchmark_invocation_test.go:30)	MOVQ	"".&o+88(SP), AX
	0x0053 00083 (pointer_vs_value/code/benchmark_invocation_test.go:30)	MOVSD	8(SP), X0
	0x0059 00089 (pointer_vs_value/code/benchmark_invocation_test.go:30)	MOVQ	(SP), CX
	0x005d 00093 (pointer_vs_value/code/benchmark_invocation_test.go:30)	MOVQ	CX, (AX)
	0x0060 00096 (pointer_vs_value/code/benchmark_invocation_test.go:30)	PCDATA	$0, $0
	0x0060 00096 (pointer_vs_value/code/benchmark_invocation_test.go:30)	MOVSD	X0, 8(AX)
	0x0065 00101 (pointer_vs_value/code/benchmark_invocation_test.go:32)	MOVQ	$0, "".i+40(SP)
	0x006e 00110 (pointer_vs_value/code/benchmark_invocation_test.go:32)	JMP	112
	0x0070 00112 (pointer_vs_value/code/benchmark_invocation_test.go:32)	PCDATA	$0, $1
	0x0070 00112 (pointer_vs_value/code/benchmark_invocation_test.go:32)	MOVQ	"".b+200(SP), AX
	0x0078 00120 (pointer_vs_value/code/benchmark_invocation_test.go:32)	TESTB	AL, (AX)
	0x007a 00122 (pointer_vs_value/code/benchmark_invocation_test.go:32)	PCDATA	$0, $0
	0x007a 00122 (pointer_vs_value/code/benchmark_invocation_test.go:32)	MOVQ	264(AX), AX
	0x0081 00129 (pointer_vs_value/code/benchmark_invocation_test.go:32)	CMPQ	"".i+40(SP), AX
	0x0086 00134 (pointer_vs_value/code/benchmark_invocation_test.go:32)	JLT	141
	0x0088 00136 (pointer_vs_value/code/benchmark_invocation_test.go:32)	JMP	473
	0x008d 00141 (pointer_vs_value/code/benchmark_invocation_test.go:33)	PCDATA	$0, $1
	0x008d 00141 (pointer_vs_value/code/benchmark_invocation_test.go:33)	MOVQ	"".&o+88(SP), AX
	0x0092 00146 (pointer_vs_value/code/benchmark_invocation_test.go:33)	PCDATA	$0, $0
	0x0092 00146 (pointer_vs_value/code/benchmark_invocation_test.go:33)	PCDATA	$1, $2
	0x0092 00146 (pointer_vs_value/code/benchmark_invocation_test.go:33)	MOVQ	AX, ""..autotmp_8+72(SP)
	0x0097 00151 (pointer_vs_value/code/benchmark_invocation_test.go:33)	XORPS	X0, X0
	0x009a 00154 (pointer_vs_value/code/benchmark_invocation_test.go:33)	MOVUPS	X0, ""..autotmp_10+144(SP)
	0x00a2 00162 (pointer_vs_value/code/benchmark_invocation_test.go:33)	PCDATA	$0, $1
	0x00a2 00162 (pointer_vs_value/code/benchmark_invocation_test.go:33)	PCDATA	$1, $1
	0x00a2 00162 (pointer_vs_value/code/benchmark_invocation_test.go:33)	MOVQ	""..autotmp_8+72(SP), AX
	0x00a7 00167 (pointer_vs_value/code/benchmark_invocation_test.go:33)	PCDATA	$0, $2
	0x00a7 00167 (pointer_vs_value/code/benchmark_invocation_test.go:33)	LEAQ	go.itab.*"".micro,"".obj(SB), CX
	0x00ae 00174 (pointer_vs_value/code/benchmark_invocation_test.go:33)	PCDATA	$0, $1
	0x00ae 00174 (pointer_vs_value/code/benchmark_invocation_test.go:33)	MOVQ	CX, (SP)
	0x00b2 00178 (pointer_vs_value/code/benchmark_invocation_test.go:33)	PCDATA	$0, $0
	0x00b2 00178 (pointer_vs_value/code/benchmark_invocation_test.go:33)	MOVQ	AX, 8(SP)
	0x00b7 00183 (pointer_vs_value/code/benchmark_invocation_test.go:33)	CALL	"".calcIfc(SB)
	0x00bc 00188 (pointer_vs_value/code/benchmark_invocation_test.go:33)	MOVSD	16(SP), X0
	0x00c2 00194 (pointer_vs_value/code/benchmark_invocation_test.go:33)	MOVSD	X0, ""..autotmp_9+56(SP)
	0x00c8 00200 (pointer_vs_value/code/benchmark_invocation_test.go:33)	PCDATA	$0, $1
	0x00c8 00200 (pointer_vs_value/code/benchmark_invocation_test.go:33)	MOVQ	32(SP), AX
	0x00cd 00205 (pointer_vs_value/code/benchmark_invocation_test.go:33)	MOVQ	24(SP), CX
	0x00d2 00210 (pointer_vs_value/code/benchmark_invocation_test.go:33)	PCDATA	$1, $3
	0x00d2 00210 (pointer_vs_value/code/benchmark_invocation_test.go:33)	MOVQ	CX, ""..autotmp_10+144(SP)
	0x00da 00218 (pointer_vs_value/code/benchmark_invocation_test.go:33)	PCDATA	$0, $0
	0x00da 00218 (pointer_vs_value/code/benchmark_invocation_test.go:33)	MOVQ	AX, ""..autotmp_10+152(SP)
	0x00e2 00226 (pointer_vs_value/code/benchmark_invocation_test.go:33)	MOVSD	""..autotmp_9+56(SP), X0
	0x00e8 00232 (pointer_vs_value/code/benchmark_invocation_test.go:33)	MOVSD	X0, ""..autotmp_3+64(SP)
	0x00ee 00238 (pointer_vs_value/code/benchmark_invocation_test.go:33)	MOVQ	""..autotmp_10+144(SP), AX
	0x00f6 00246 (pointer_vs_value/code/benchmark_invocation_test.go:33)	PCDATA	$0, $3
	0x00f6 00246 (pointer_vs_value/code/benchmark_invocation_test.go:33)	PCDATA	$1, $1
	0x00f6 00246 (pointer_vs_value/code/benchmark_invocation_test.go:33)	MOVQ	""..autotmp_10+152(SP), CX
	0x00fe 00254 (pointer_vs_value/code/benchmark_invocation_test.go:33)	PCDATA	$1, $4
	0x00fe 00254 (pointer_vs_value/code/benchmark_invocation_test.go:33)	MOVQ	AX, ""..autotmp_4+112(SP)
	0x0103 00259 (pointer_vs_value/code/benchmark_invocation_test.go:33)	PCDATA	$0, $0
	0x0103 00259 (pointer_vs_value/code/benchmark_invocation_test.go:33)	MOVQ	CX, ""..autotmp_4+120(SP)
	0x0108 00264 (pointer_vs_value/code/benchmark_invocation_test.go:33)	MOVSD	""..autotmp_3+64(SP), X0
	0x010e 00270 (pointer_vs_value/code/benchmark_invocation_test.go:33)	MOVSD	X0, "".f+48(SP)
	0x0114 00276 (pointer_vs_value/code/benchmark_invocation_test.go:33)	MOVQ	""..autotmp_4+112(SP), AX
	0x0119 00281 (pointer_vs_value/code/benchmark_invocation_test.go:33)	PCDATA	$0, $3
	0x0119 00281 (pointer_vs_value/code/benchmark_invocation_test.go:33)	PCDATA	$1, $1
	0x0119 00281 (pointer_vs_value/code/benchmark_invocation_test.go:33)	MOVQ	""..autotmp_4+120(SP), CX
	0x011e 00286 (pointer_vs_value/code/benchmark_invocation_test.go:33)	MOVQ	AX, "".err+96(SP)
	0x0123 00291 (pointer_vs_value/code/benchmark_invocation_test.go:33)	PCDATA	$0, $0
	0x0123 00291 (pointer_vs_value/code/benchmark_invocation_test.go:33)	MOVQ	CX, "".err+104(SP)
	0x0128 00296 (<unknown line number>)	NOP
	0x0128 00296 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	AX, AX
	0x012b 00299 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	306
	0x012d 00301 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	471
	0x0132 00306 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $5
	0x0132 00306 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X0, X0
	0x0135 00309 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X0, ""..autotmp_11+128(SP)
	0x013d 00317 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x013d 00317 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x013d 00317 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_11+128(SP), AX
	0x0145 00325 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_13+80(SP)
	0x014a 00330 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x014c 00332 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $2
	0x014c 00332 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), CX
	0x0153 00339 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x0153 00339 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_11+128(SP)
	0x015b 00347 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x015b 00347 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_5(SB), DX
	0x0162 00354 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x0162 00354 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	DX, ""..autotmp_11+136(SP)
	0x016a 00362 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x016c 00364 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	366
	0x016e 00366 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_12+160(SP)
	0x0176 00374 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_12+168(SP)
	0x0182 00386 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_12+176(SP)
	0x018e 00398 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x018e 00398 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, (SP)
	0x0192 00402 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x019b 00411 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x01a4 00420 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x01a9 00425 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	427
	0x01ab 00427 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x01b3 00435 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+48(SP), X0
	0x01b9 00441 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x01c1 00449 (pointer_vs_value/code/benchmark_invocation_test.go:33)	JMP	451
	0x01c3 00451 (pointer_vs_value/code/benchmark_invocation_test.go:32)	PCDATA	$0, $-2
	0x01c3 00451 (pointer_vs_value/code/benchmark_invocation_test.go:32)	PCDATA	$1, $-2
	0x01c3 00451 (pointer_vs_value/code/benchmark_invocation_test.go:32)	JMP	453
	0x01c5 00453 (pointer_vs_value/code/benchmark_invocation_test.go:32)	PCDATA	$0, $0
	0x01c5 00453 (pointer_vs_value/code/benchmark_invocation_test.go:32)	PCDATA	$1, $1
	0x01c5 00453 (pointer_vs_value/code/benchmark_invocation_test.go:32)	MOVQ	"".i+40(SP), AX
	0x01ca 00458 (pointer_vs_value/code/benchmark_invocation_test.go:32)	INCQ	AX
	0x01cd 00461 (pointer_vs_value/code/benchmark_invocation_test.go:32)	MOVQ	AX, "".i+40(SP)
	0x01d2 00466 (pointer_vs_value/code/benchmark_invocation_test.go:32)	JMP	112
	0x01d7 00471 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x01d7 00471 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x01d7 00471 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	427
	0x01d9 00473 (<unknown line number>)	MOVQ	184(SP), BP
	0x01e1 00481 (<unknown line number>)	ADDQ	$192, SP
	0x01e8 00488 (<unknown line number>)	RET
	0x01e9 00489 (<unknown line number>)	NOP
	0x01e9 00489 (pointer_vs_value/code/benchmark_invocation_test.go:28)	PCDATA	$1, $-1
	0x01e9 00489 (pointer_vs_value/code/benchmark_invocation_test.go:28)	PCDATA	$0, $-1
	0x01e9 00489 (pointer_vs_value/code/benchmark_invocation_test.go:28)	CALL	runtime.morestack_noctxt(SB)
	0x01ee 00494 (pointer_vs_value/code/benchmark_invocation_test.go:28)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 44 24 c0 48 3b  eH..%....H.D$.H;
	0x0010 41 10 0f 86 d1 01 00 00 48 81 ec c0 00 00 00 48  A.......H......H
	0x0020 89 ac 24 b8 00 00 00 48 8d ac 24 b8 00 00 00 48  ..$....H..$....H
	0x0030 8d 05 00 00 00 00 48 89 04 24 e8 00 00 00 00 48  ......H..$.....H
	0x0040 8b 44 24 08 48 89 44 24 58 e8 00 00 00 00 48 8b  .D$.H.D$X.....H.
	0x0050 44 24 58 f2 0f 10 44 24 08 48 8b 0c 24 48 89 08  D$X...D$.H..$H..
	0x0060 f2 0f 11 40 08 48 c7 44 24 28 00 00 00 00 eb 00  ...@.H.D$(......
	0x0070 48 8b 84 24 c8 00 00 00 84 00 48 8b 80 08 01 00  H..$......H.....
	0x0080 00 48 39 44 24 28 7c 05 e9 4c 01 00 00 48 8b 44  .H9D$(|..L...H.D
	0x0090 24 58 48 89 44 24 48 0f 57 c0 0f 11 84 24 90 00  $XH.D$H.W....$..
	0x00a0 00 00 48 8b 44 24 48 48 8d 0d 00 00 00 00 48 89  ..H.D$HH......H.
	0x00b0 0c 24 48 89 44 24 08 e8 00 00 00 00 f2 0f 10 44  .$H.D$.........D
	0x00c0 24 10 f2 0f 11 44 24 38 48 8b 44 24 20 48 8b 4c  $....D$8H.D$ H.L
	0x00d0 24 18 48 89 8c 24 90 00 00 00 48 89 84 24 98 00  $.H..$....H..$..
	0x00e0 00 00 f2 0f 10 44 24 38 f2 0f 11 44 24 40 48 8b  .....D$8...D$@H.
	0x00f0 84 24 90 00 00 00 48 8b 8c 24 98 00 00 00 48 89  .$....H..$....H.
	0x0100 44 24 70 48 89 4c 24 78 f2 0f 10 44 24 40 f2 0f  D$pH.L$x...D$@..
	0x0110 11 44 24 30 48 8b 44 24 70 48 8b 4c 24 78 48 89  .D$0H.D$pH.L$xH.
	0x0120 44 24 60 48 89 4c 24 68 48 85 c0 75 05 e9 a5 00  D$`H.L$hH..u....
	0x0130 00 00 0f 57 c0 0f 11 84 24 80 00 00 00 48 8d 84  ...W....$....H..
	0x0140 24 80 00 00 00 48 89 44 24 50 84 00 48 8d 0d 00  $....H.D$P..H...
	0x0150 00 00 00 48 89 8c 24 80 00 00 00 48 8d 15 00 00  ...H..$....H....
	0x0160 00 00 48 89 94 24 88 00 00 00 84 00 eb 00 48 89  ..H..$........H.
	0x0170 84 24 a0 00 00 00 48 c7 84 24 a8 00 00 00 01 00  .$....H..$......
	0x0180 00 00 48 c7 84 24 b0 00 00 00 01 00 00 00 48 89  ..H..$........H.
	0x0190 04 24 48 c7 44 24 08 01 00 00 00 48 c7 44 24 10  .$H.D$.....H.D$.
	0x01a0 01 00 00 00 e8 00 00 00 00 eb 00 f2 0f 10 05 00  ................
	0x01b0 00 00 00 f2 0f 58 44 24 30 f2 0f 11 05 00 00 00  .....XD$0.......
	0x01c0 00 eb 00 eb 00 48 8b 44 24 28 48 ff c0 48 89 44  .....H.D$(H..H.D
	0x01d0 24 28 e9 99 fe ff ff eb d2 48 8b ac 24 b8 00 00  $(.......H..$...
	0x01e0 00 48 81 c4 c0 00 00 00 c3 e8 00 00 00 00 e9 0d  .H..............
	0x01f0 fe ff ff                                         ...
	rel 5+4 t=16 TLS+0
	rel 50+4 t=15 type."".micro+0
	rel 59+4 t=8 runtime.newobject+0
	rel 74+4 t=8 "".createMicro+0
	rel 170+4 t=15 go.itab.*"".micro,"".obj+0
	rel 184+4 t=8 "".calcIfc+0
	rel 335+4 t=15 type.string+0
	rel 350+4 t=15 ""..stmp_5+0
	rel 421+4 t=8 log.Fatal+0
	rel 431+4 t=15 "".F+0
	rel 445+4 t=15 "".F+0
	rel 490+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkTiny_Calc STEXT size=811 args=0x8 locals=0x158
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:37)	TEXT	"".BenchmarkTiny_Calc(SB), ABIInternal, $344-8
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:37)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_invocation_test.go:37)	LEAQ	-216(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_invocation_test.go:37)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_invocation_test.go:37)	JLS	801
	0x001b 00027 (pointer_vs_value/code/benchmark_invocation_test.go:37)	SUBQ	$344, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_invocation_test.go:37)	MOVQ	BP, 336(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_invocation_test.go:37)	LEAQ	336(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:37)	FUNCDATA	$0, gclocals·d1d75e5bd153dd111cd8f1bc3c181073(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:37)	FUNCDATA	$1, gclocals·d6f6fd27c9283ce6ba802f34513e6a21(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:37)	FUNCDATA	$2, gclocals·bb9a4421951f5635946b6e69c264fd07(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:37)	FUNCDATA	$3, "".BenchmarkTiny_Calc.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:39)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:39)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:39)	CALL	"".createTiny(SB)
	0x0037 00055 (pointer_vs_value/code/benchmark_invocation_test.go:39)	MOVSD	8(SP), X0
	0x003d 00061 (pointer_vs_value/code/benchmark_invocation_test.go:39)	MOVQ	(SP), AX
	0x0041 00065 (pointer_vs_value/code/benchmark_invocation_test.go:39)	PCDATA	$0, $1
	0x0041 00065 (pointer_vs_value/code/benchmark_invocation_test.go:39)	MOVQ	16(SP), CX
	0x0046 00070 (pointer_vs_value/code/benchmark_invocation_test.go:39)	MOVQ	24(SP), DX
	0x004b 00075 (pointer_vs_value/code/benchmark_invocation_test.go:39)	PCDATA	$1, $1
	0x004b 00075 (pointer_vs_value/code/benchmark_invocation_test.go:39)	MOVQ	AX, "".o+304(SP)
	0x0053 00083 (pointer_vs_value/code/benchmark_invocation_test.go:39)	MOVSD	X0, "".o+312(SP)
	0x005c 00092 (pointer_vs_value/code/benchmark_invocation_test.go:39)	PCDATA	$0, $0
	0x005c 00092 (pointer_vs_value/code/benchmark_invocation_test.go:39)	MOVQ	CX, "".o+320(SP)
	0x0064 00100 (pointer_vs_value/code/benchmark_invocation_test.go:39)	MOVQ	DX, "".o+328(SP)
	0x006c 00108 (pointer_vs_value/code/benchmark_invocation_test.go:41)	MOVQ	$0, "".i+40(SP)
	0x0075 00117 (pointer_vs_value/code/benchmark_invocation_test.go:41)	PCDATA	$0, $-2
	0x0075 00117 (pointer_vs_value/code/benchmark_invocation_test.go:41)	PCDATA	$1, $-2
	0x0075 00117 (pointer_vs_value/code/benchmark_invocation_test.go:41)	JMP	119
	0x0077 00119 (pointer_vs_value/code/benchmark_invocation_test.go:41)	PCDATA	$0, $2
	0x0077 00119 (pointer_vs_value/code/benchmark_invocation_test.go:41)	PCDATA	$1, $1
	0x0077 00119 (pointer_vs_value/code/benchmark_invocation_test.go:41)	MOVQ	"".b+352(SP), AX
	0x007f 00127 (pointer_vs_value/code/benchmark_invocation_test.go:41)	TESTB	AL, (AX)
	0x0081 00129 (pointer_vs_value/code/benchmark_invocation_test.go:41)	PCDATA	$0, $0
	0x0081 00129 (pointer_vs_value/code/benchmark_invocation_test.go:41)	MOVQ	264(AX), AX
	0x0088 00136 (pointer_vs_value/code/benchmark_invocation_test.go:41)	CMPQ	"".i+40(SP), AX
	0x008d 00141 (pointer_vs_value/code/benchmark_invocation_test.go:41)	JLT	148
	0x008f 00143 (pointer_vs_value/code/benchmark_invocation_test.go:41)	JMP	785
	0x0094 00148 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVQ	"".o+328(SP), AX
	0x009c 00156 (pointer_vs_value/code/benchmark_invocation_test.go:42)	PCDATA	$0, $1
	0x009c 00156 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVQ	"".o+320(SP), CX
	0x00a4 00164 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVQ	"".o+304(SP), DX
	0x00ac 00172 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVSD	"".o+312(SP), X0
	0x00b5 00181 (pointer_vs_value/code/benchmark_invocation_test.go:42)	PCDATA	$1, $2
	0x00b5 00181 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVQ	DX, "".o+272(SP)
	0x00bd 00189 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVSD	X0, "".o+280(SP)
	0x00c6 00198 (pointer_vs_value/code/benchmark_invocation_test.go:42)	PCDATA	$0, $0
	0x00c6 00198 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVQ	CX, "".o+288(SP)
	0x00ce 00206 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVQ	AX, "".o+296(SP)
	0x00d6 00214 (pointer_vs_value/code/benchmark_invocation_test.go:42)	XORPS	X0, X0
	0x00d9 00217 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVSD	X0, "".~r1+32(SP)
	0x00df 00223 (pointer_vs_value/code/benchmark_invocation_test.go:42)	XORPS	X1, X1
	0x00e2 00226 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVUPS	X1, "".~r2+104(SP)
	0x00e7 00231 (<unknown line number>)	NOP
	0x00e7 00231 (pointer_vs_value/code/func.go:15)	MOVSD	"".o+280(SP), X1
	0x00f0 00240 (pointer_vs_value/code/func.go:15)	UCOMISD	X0, X1
	0x00f4 00244 (pointer_vs_value/code/func.go:15)	JNE	721
	0x00fa 00250 (pointer_vs_value/code/func.go:15)	JPC	257
	0x00fc 00252 (pointer_vs_value/code/func.go:15)	JMP	721
	0x0101 00257 (pointer_vs_value/code/func.go:16)	PCDATA	$0, $2
	0x0101 00257 (pointer_vs_value/code/func.go:16)	PCDATA	$1, $3
	0x0101 00257 (pointer_vs_value/code/func.go:16)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x0108 00264 (pointer_vs_value/code/func.go:16)	PCDATA	$0, $0
	0x0108 00264 (pointer_vs_value/code/func.go:16)	MOVQ	AX, errors.text+136(SP)
	0x0110 00272 (pointer_vs_value/code/func.go:16)	MOVQ	$22, errors.text+144(SP)
	0x011c 00284 (pointer_vs_value/code/func.go:16)	XORPS	X1, X1
	0x011f 00287 (pointer_vs_value/code/func.go:16)	MOVUPS	X1, "".~R0+120(SP)
	0x0124 00292 (<unknown line number>)	NOP
	0x0124 00292 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x0124 00292 ($GOROOT/src/errors/errors.go:59)	XORPS	X1, X1
	0x0127 00295 ($GOROOT/src/errors/errors.go:59)	MOVUPS	X1, ""..autotmp_15+216(SP)
	0x012f 00303 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x012f 00303 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x012f 00303 ($GOROOT/src/errors/errors.go:59)	LEAQ	""..autotmp_15+216(SP), CX
	0x0137 00311 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_14+88(SP)
	0x013c 00316 ($GOROOT/src/errors/errors.go:59)	TESTB	AL, (CX)
	0x013e 00318 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x013e 00318 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+136(SP), DX
	0x0146 00326 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $1
	0x0146 00326 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+144(SP), BX
	0x014e 00334 ($GOROOT/src/errors/errors.go:59)	MOVQ	BX, ""..autotmp_15+224(SP)
	0x0156 00342 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x0156 00342 ($GOROOT/src/errors/errors.go:59)	MOVQ	DX, ""..autotmp_15+216(SP)
	0x015e 00350 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_12+96(SP)
	0x0163 00355 (pointer_vs_value/code/func.go:16)	PCDATA	$0, $3
	0x0163 00355 (pointer_vs_value/code/func.go:16)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x016a 00362 (pointer_vs_value/code/func.go:16)	MOVQ	DX, ""..autotmp_16+200(SP)
	0x0172 00370 (pointer_vs_value/code/func.go:16)	MOVQ	CX, ""..autotmp_16+208(SP)
	0x017a 00378 (pointer_vs_value/code/func.go:16)	PCDATA	$0, $1
	0x017a 00378 (pointer_vs_value/code/func.go:16)	PCDATA	$1, $5
	0x017a 00378 (pointer_vs_value/code/func.go:16)	MOVQ	DX, "".~R0+120(SP)
	0x017f 00383 (pointer_vs_value/code/func.go:16)	PCDATA	$0, $0
	0x017f 00383 (pointer_vs_value/code/func.go:16)	MOVQ	CX, "".~R0+128(SP)
	0x0187 00391 (pointer_vs_value/code/func.go:16)	JMP	393
	0x0189 00393 (pointer_vs_value/code/benchmark_invocation_test.go:42)	PCDATA	$0, $1
	0x0189 00393 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVQ	"".~R0+128(SP), CX
	0x0191 00401 (pointer_vs_value/code/benchmark_invocation_test.go:42)	PCDATA	$1, $1
	0x0191 00401 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVQ	"".~R0+120(SP), BX
	0x0196 00406 (pointer_vs_value/code/benchmark_invocation_test.go:42)	PCDATA	$1, $6
	0x0196 00406 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVQ	BX, ""..autotmp_17+184(SP)
	0x019e 00414 (pointer_vs_value/code/benchmark_invocation_test.go:42)	PCDATA	$0, $0
	0x019e 00414 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVQ	CX, ""..autotmp_17+192(SP)
	0x01a6 00422 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVSD	X0, "".~r1+32(SP)
	0x01ac 00428 (pointer_vs_value/code/benchmark_invocation_test.go:42)	PCDATA	$0, $1
	0x01ac 00428 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVQ	""..autotmp_17+192(SP), CX
	0x01b4 00436 (pointer_vs_value/code/benchmark_invocation_test.go:42)	PCDATA	$1, $1
	0x01b4 00436 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVQ	""..autotmp_17+184(SP), BX
	0x01bc 00444 (pointer_vs_value/code/benchmark_invocation_test.go:42)	PCDATA	$1, $7
	0x01bc 00444 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVQ	BX, "".~r2+104(SP)
	0x01c1 00449 (pointer_vs_value/code/benchmark_invocation_test.go:42)	PCDATA	$0, $0
	0x01c1 00449 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVQ	CX, "".~r2+112(SP)
	0x01c6 00454 (pointer_vs_value/code/benchmark_invocation_test.go:42)	JMP	456
	0x01c8 00456 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVSD	"".~r1+32(SP), X1
	0x01ce 00462 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVSD	X1, ""..autotmp_19+64(SP)
	0x01d4 00468 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVSD	X1, ""..autotmp_3+56(SP)
	0x01da 00474 (pointer_vs_value/code/benchmark_invocation_test.go:42)	PCDATA	$0, $1
	0x01da 00474 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVQ	"".~r2+112(SP), CX
	0x01df 00479 (pointer_vs_value/code/benchmark_invocation_test.go:42)	PCDATA	$1, $1
	0x01df 00479 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVQ	"".~r2+104(SP), BX
	0x01e4 00484 (pointer_vs_value/code/benchmark_invocation_test.go:42)	PCDATA	$1, $8
	0x01e4 00484 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVQ	BX, ""..autotmp_4+168(SP)
	0x01ec 00492 (pointer_vs_value/code/benchmark_invocation_test.go:42)	PCDATA	$0, $0
	0x01ec 00492 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVQ	CX, ""..autotmp_4+176(SP)
	0x01f4 00500 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVSD	""..autotmp_3+56(SP), X1
	0x01fa 00506 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVSD	X1, "".f+48(SP)
	0x0200 00512 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVQ	""..autotmp_4+168(SP), CX
	0x0208 00520 (pointer_vs_value/code/benchmark_invocation_test.go:42)	PCDATA	$0, $4
	0x0208 00520 (pointer_vs_value/code/benchmark_invocation_test.go:42)	PCDATA	$1, $1
	0x0208 00520 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVQ	""..autotmp_4+176(SP), BX
	0x0210 00528 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVQ	CX, "".err+152(SP)
	0x0218 00536 (pointer_vs_value/code/benchmark_invocation_test.go:42)	PCDATA	$0, $0
	0x0218 00536 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVQ	BX, "".err+160(SP)
	0x0220 00544 (<unknown line number>)	NOP
	0x0220 00544 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	CX, CX
	0x0223 00547 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	554
	0x0225 00549 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	719
	0x022a 00554 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $9
	0x022a 00554 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X1, X1
	0x022d 00557 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X1, ""..autotmp_13+232(SP)
	0x0235 00565 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x0235 00565 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x0235 00565 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_13+232(SP), CX
	0x023d 00573 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_21+80(SP)
	0x0242 00578 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x0244 00580 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $5
	0x0244 00580 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), BX
	0x024b 00587 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x024b 00587 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	BX, ""..autotmp_13+232(SP)
	0x0253 00595 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $6
	0x0253 00595 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_6(SB), SI
	0x025a 00602 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x025a 00602 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	SI, ""..autotmp_13+240(SP)
	0x0262 00610 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x0264 00612 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	614
	0x0266 00614 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_20+248(SP)
	0x026e 00622 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_20+256(SP)
	0x027a 00634 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_20+264(SP)
	0x0286 00646 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x0286 00646 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, (SP)
	0x028a 00650 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x0293 00659 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x029c 00668 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x02a1 00673 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	675
	0x02a3 00675 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x02ab 00683 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+48(SP), X0
	0x02b1 00689 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x02b9 00697 (pointer_vs_value/code/benchmark_invocation_test.go:42)	JMP	699
	0x02bb 00699 (pointer_vs_value/code/benchmark_invocation_test.go:41)	PCDATA	$0, $-2
	0x02bb 00699 (pointer_vs_value/code/benchmark_invocation_test.go:41)	PCDATA	$1, $-2
	0x02bb 00699 (pointer_vs_value/code/benchmark_invocation_test.go:41)	JMP	701
	0x02bd 00701 (pointer_vs_value/code/benchmark_invocation_test.go:41)	PCDATA	$0, $0
	0x02bd 00701 (pointer_vs_value/code/benchmark_invocation_test.go:41)	PCDATA	$1, $1
	0x02bd 00701 (pointer_vs_value/code/benchmark_invocation_test.go:41)	MOVQ	"".i+40(SP), AX
	0x02c2 00706 (pointer_vs_value/code/benchmark_invocation_test.go:41)	INCQ	AX
	0x02c5 00709 (pointer_vs_value/code/benchmark_invocation_test.go:41)	MOVQ	AX, "".i+40(SP)
	0x02ca 00714 (pointer_vs_value/code/benchmark_invocation_test.go:41)	JMP	119
	0x02cf 00719 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x02cf 00719 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x02cf 00719 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	675
	0x02d1 00721 (pointer_vs_value/code/func.go:18)	PCDATA	$0, $0
	0x02d1 00721 (pointer_vs_value/code/func.go:18)	PCDATA	$1, $2
	0x02d1 00721 (pointer_vs_value/code/func.go:18)	MOVQ	"".o+272(SP), CX
	0x02d9 00729 (pointer_vs_value/code/func.go:18)	XORPS	X1, X1
	0x02dc 00732 (pointer_vs_value/code/func.go:18)	CVTSQ2SD	CX, X1
	0x02e1 00737 (pointer_vs_value/code/func.go:18)	PCDATA	$1, $1
	0x02e1 00737 (pointer_vs_value/code/func.go:18)	DIVSD	"".o+280(SP), X1
	0x02ea 00746 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVSD	X1, ""..autotmp_18+72(SP)
	0x02f0 00752 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVSD	X1, "".~r1+32(SP)
	0x02f6 00758 (pointer_vs_value/code/benchmark_invocation_test.go:42)	PCDATA	$1, $7
	0x02f6 00758 (pointer_vs_value/code/benchmark_invocation_test.go:42)	XORPS	X1, X1
	0x02f9 00761 (pointer_vs_value/code/benchmark_invocation_test.go:42)	MOVUPS	X1, "".~r2+104(SP)
	0x02fe 00766 (pointer_vs_value/code/benchmark_invocation_test.go:42)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x0305 00773 (pointer_vs_value/code/benchmark_invocation_test.go:42)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x030c 00780 (pointer_vs_value/code/benchmark_invocation_test.go:42)	JMP	456
	0x0311 00785 (<unknown line number>)	PCDATA	$0, $-2
	0x0311 00785 (<unknown line number>)	PCDATA	$1, $-2
	0x0311 00785 (<unknown line number>)	MOVQ	336(SP), BP
	0x0319 00793 (<unknown line number>)	ADDQ	$344, SP
	0x0320 00800 (<unknown line number>)	RET
	0x0321 00801 (<unknown line number>)	NOP
	0x0321 00801 (pointer_vs_value/code/benchmark_invocation_test.go:37)	PCDATA	$1, $-1
	0x0321 00801 (pointer_vs_value/code/benchmark_invocation_test.go:37)	PCDATA	$0, $-1
	0x0321 00801 (pointer_vs_value/code/benchmark_invocation_test.go:37)	CALL	runtime.morestack_noctxt(SB)
	0x0326 00806 (pointer_vs_value/code/benchmark_invocation_test.go:37)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 28 ff ff  eH..%....H..$(..
	0x0010 ff 48 3b 41 10 0f 86 06 03 00 00 48 81 ec 58 01  .H;A.......H..X.
	0x0020 00 00 48 89 ac 24 50 01 00 00 48 8d ac 24 50 01  ..H..$P...H..$P.
	0x0030 00 00 e8 00 00 00 00 f2 0f 10 44 24 08 48 8b 04  ..........D$.H..
	0x0040 24 48 8b 4c 24 10 48 8b 54 24 18 48 89 84 24 30  $H.L$.H.T$.H..$0
	0x0050 01 00 00 f2 0f 11 84 24 38 01 00 00 48 89 8c 24  .......$8...H..$
	0x0060 40 01 00 00 48 89 94 24 48 01 00 00 48 c7 44 24  @...H..$H...H.D$
	0x0070 28 00 00 00 00 eb 00 48 8b 84 24 60 01 00 00 84  (......H..$`....
	0x0080 00 48 8b 80 08 01 00 00 48 39 44 24 28 7c 05 e9  .H......H9D$(|..
	0x0090 7d 02 00 00 48 8b 84 24 48 01 00 00 48 8b 8c 24  }...H..$H...H..$
	0x00a0 40 01 00 00 48 8b 94 24 30 01 00 00 f2 0f 10 84  @...H..$0.......
	0x00b0 24 38 01 00 00 48 89 94 24 10 01 00 00 f2 0f 11  $8...H..$.......
	0x00c0 84 24 18 01 00 00 48 89 8c 24 20 01 00 00 48 89  .$....H..$ ...H.
	0x00d0 84 24 28 01 00 00 0f 57 c0 f2 0f 11 44 24 20 0f  .$(....W....D$ .
	0x00e0 57 c9 0f 11 4c 24 68 f2 0f 10 8c 24 18 01 00 00  W...L$h....$....
	0x00f0 66 0f 2e c8 0f 85 d7 01 00 00 7b 05 e9 d0 01 00  f.........{.....
	0x0100 00 48 8d 05 00 00 00 00 48 89 84 24 88 00 00 00  .H......H..$....
	0x0110 48 c7 84 24 90 00 00 00 16 00 00 00 0f 57 c9 0f  H..$.........W..
	0x0120 11 4c 24 78 0f 57 c9 0f 11 8c 24 d8 00 00 00 48  .L$x.W....$....H
	0x0130 8d 8c 24 d8 00 00 00 48 89 4c 24 58 84 01 48 8b  ..$....H.L$X..H.
	0x0140 94 24 88 00 00 00 48 8b 9c 24 90 00 00 00 48 89  .$....H..$....H.
	0x0150 9c 24 e0 00 00 00 48 89 94 24 d8 00 00 00 48 89  .$....H..$....H.
	0x0160 4c 24 60 48 8d 15 00 00 00 00 48 89 94 24 c8 00  L$`H......H..$..
	0x0170 00 00 48 89 8c 24 d0 00 00 00 48 89 54 24 78 48  ..H..$....H.T$xH
	0x0180 89 8c 24 80 00 00 00 eb 00 48 8b 8c 24 80 00 00  ..$......H..$...
	0x0190 00 48 8b 5c 24 78 48 89 9c 24 b8 00 00 00 48 89  .H.\$xH..$....H.
	0x01a0 8c 24 c0 00 00 00 f2 0f 11 44 24 20 48 8b 8c 24  .$.......D$ H..$
	0x01b0 c0 00 00 00 48 8b 9c 24 b8 00 00 00 48 89 5c 24  ....H..$....H.\$
	0x01c0 68 48 89 4c 24 70 eb 00 f2 0f 10 4c 24 20 f2 0f  hH.L$p.....L$ ..
	0x01d0 11 4c 24 40 f2 0f 11 4c 24 38 48 8b 4c 24 70 48  .L$@...L$8H.L$pH
	0x01e0 8b 5c 24 68 48 89 9c 24 a8 00 00 00 48 89 8c 24  .\$hH..$....H..$
	0x01f0 b0 00 00 00 f2 0f 10 4c 24 38 f2 0f 11 4c 24 30  .......L$8...L$0
	0x0200 48 8b 8c 24 a8 00 00 00 48 8b 9c 24 b0 00 00 00  H..$....H..$....
	0x0210 48 89 8c 24 98 00 00 00 48 89 9c 24 a0 00 00 00  H..$....H..$....
	0x0220 48 85 c9 75 05 e9 a5 00 00 00 0f 57 c9 0f 11 8c  H..u.......W....
	0x0230 24 e8 00 00 00 48 8d 8c 24 e8 00 00 00 48 89 4c  $....H..$....H.L
	0x0240 24 50 84 01 48 8d 1d 00 00 00 00 48 89 9c 24 e8  $P..H......H..$.
	0x0250 00 00 00 48 8d 35 00 00 00 00 48 89 b4 24 f0 00  ...H.5....H..$..
	0x0260 00 00 84 01 eb 00 48 89 8c 24 f8 00 00 00 48 c7  ......H..$....H.
	0x0270 84 24 00 01 00 00 01 00 00 00 48 c7 84 24 08 01  .$........H..$..
	0x0280 00 00 01 00 00 00 48 89 0c 24 48 c7 44 24 08 01  ......H..$H.D$..
	0x0290 00 00 00 48 c7 44 24 10 01 00 00 00 e8 00 00 00  ...H.D$.........
	0x02a0 00 eb 00 f2 0f 10 05 00 00 00 00 f2 0f 58 44 24  .............XD$
	0x02b0 30 f2 0f 11 05 00 00 00 00 eb 00 eb 00 48 8b 44  0............H.D
	0x02c0 24 28 48 ff c0 48 89 44 24 28 e9 a8 fd ff ff eb  $(H..H.D$(......
	0x02d0 d2 48 8b 8c 24 10 01 00 00 0f 57 c9 f2 48 0f 2a  .H..$.....W..H.*
	0x02e0 c9 f2 0f 5e 8c 24 18 01 00 00 f2 0f 11 4c 24 48  ...^.$.......L$H
	0x02f0 f2 0f 11 4c 24 20 0f 57 c9 0f 11 4c 24 68 48 8d  ...L$ .W...L$hH.
	0x0300 05 00 00 00 00 48 8d 15 00 00 00 00 e9 b7 fe ff  .....H..........
	0x0310 ff 48 8b ac 24 50 01 00 00 48 81 c4 58 01 00 00  .H..$P...H..X...
	0x0320 c3 e8 00 00 00 00 e9 d5 fc ff ff                 ...........
	rel 5+4 t=16 TLS+0
	rel 51+4 t=8 "".createTiny+0
	rel 260+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 358+4 t=15 go.itab.*errors.errorString,error+0
	rel 583+4 t=15 type.string+0
	rel 598+4 t=15 ""..stmp_6+0
	rel 669+4 t=8 log.Fatal+0
	rel 679+4 t=15 "".F+0
	rel 693+4 t=15 "".F+0
	rel 769+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 776+4 t=15 go.itab.*errors.errorString,error+0
	rel 802+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkTinyP_Calc STEXT size=786 args=0x8 locals=0x148
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:46)	TEXT	"".BenchmarkTinyP_Calc(SB), ABIInternal, $328-8
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:46)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_invocation_test.go:46)	LEAQ	-200(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_invocation_test.go:46)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_invocation_test.go:46)	JLS	776
	0x001b 00027 (pointer_vs_value/code/benchmark_invocation_test.go:46)	SUBQ	$328, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_invocation_test.go:46)	MOVQ	BP, 320(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_invocation_test.go:46)	LEAQ	320(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:46)	FUNCDATA	$0, gclocals·d1d75e5bd153dd111cd8f1bc3c181073(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:46)	FUNCDATA	$1, gclocals·2b79edb639adb9b9ade62f47577a91f4(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:46)	FUNCDATA	$2, gclocals·dcace91251e98d8716c43fb4823d77dd(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:46)	FUNCDATA	$3, "".BenchmarkTinyP_Calc.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:48)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:48)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:48)	CALL	"".createTiny(SB)
	0x0037 00055 (pointer_vs_value/code/benchmark_invocation_test.go:48)	MOVSD	8(SP), X0
	0x003d 00061 (pointer_vs_value/code/benchmark_invocation_test.go:48)	MOVQ	(SP), AX
	0x0041 00065 (pointer_vs_value/code/benchmark_invocation_test.go:48)	PCDATA	$0, $1
	0x0041 00065 (pointer_vs_value/code/benchmark_invocation_test.go:48)	MOVQ	16(SP), CX
	0x0046 00070 (pointer_vs_value/code/benchmark_invocation_test.go:48)	MOVQ	24(SP), DX
	0x004b 00075 (pointer_vs_value/code/benchmark_invocation_test.go:48)	PCDATA	$1, $1
	0x004b 00075 (pointer_vs_value/code/benchmark_invocation_test.go:48)	MOVQ	AX, "".o+288(SP)
	0x0053 00083 (pointer_vs_value/code/benchmark_invocation_test.go:48)	MOVSD	X0, "".o+296(SP)
	0x005c 00092 (pointer_vs_value/code/benchmark_invocation_test.go:48)	PCDATA	$0, $0
	0x005c 00092 (pointer_vs_value/code/benchmark_invocation_test.go:48)	MOVQ	CX, "".o+304(SP)
	0x0064 00100 (pointer_vs_value/code/benchmark_invocation_test.go:48)	MOVQ	DX, "".o+312(SP)
	0x006c 00108 (pointer_vs_value/code/benchmark_invocation_test.go:50)	MOVQ	$0, "".i+40(SP)
	0x0075 00117 (pointer_vs_value/code/benchmark_invocation_test.go:50)	PCDATA	$0, $-2
	0x0075 00117 (pointer_vs_value/code/benchmark_invocation_test.go:50)	PCDATA	$1, $-2
	0x0075 00117 (pointer_vs_value/code/benchmark_invocation_test.go:50)	JMP	119
	0x0077 00119 (pointer_vs_value/code/benchmark_invocation_test.go:50)	PCDATA	$0, $2
	0x0077 00119 (pointer_vs_value/code/benchmark_invocation_test.go:50)	PCDATA	$1, $1
	0x0077 00119 (pointer_vs_value/code/benchmark_invocation_test.go:50)	MOVQ	"".b+336(SP), AX
	0x007f 00127 (pointer_vs_value/code/benchmark_invocation_test.go:50)	TESTB	AL, (AX)
	0x0081 00129 (pointer_vs_value/code/benchmark_invocation_test.go:50)	PCDATA	$0, $0
	0x0081 00129 (pointer_vs_value/code/benchmark_invocation_test.go:50)	MOVQ	264(AX), AX
	0x0088 00136 (pointer_vs_value/code/benchmark_invocation_test.go:50)	CMPQ	"".i+40(SP), AX
	0x008d 00141 (pointer_vs_value/code/benchmark_invocation_test.go:50)	JLT	148
	0x008f 00143 (pointer_vs_value/code/benchmark_invocation_test.go:50)	JMP	760
	0x0094 00148 (pointer_vs_value/code/benchmark_invocation_test.go:51)	PCDATA	$0, $2
	0x0094 00148 (pointer_vs_value/code/benchmark_invocation_test.go:51)	LEAQ	"".o+288(SP), AX
	0x009c 00156 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVQ	AX, ""..autotmp_14+104(SP)
	0x00a1 00161 (pointer_vs_value/code/benchmark_invocation_test.go:51)	PCDATA	$0, $0
	0x00a1 00161 (pointer_vs_value/code/benchmark_invocation_test.go:51)	PCDATA	$1, $2
	0x00a1 00161 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVQ	AX, "".o+80(SP)
	0x00a6 00166 (pointer_vs_value/code/benchmark_invocation_test.go:51)	XORPS	X0, X0
	0x00a9 00169 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVSD	X0, "".~r1+32(SP)
	0x00af 00175 (pointer_vs_value/code/benchmark_invocation_test.go:51)	XORPS	X1, X1
	0x00b2 00178 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVUPS	X1, "".~r2+120(SP)
	0x00b7 00183 (pointer_vs_value/code/func.go:59)	PCDATA	$0, $2
	0x00b7 00183 (pointer_vs_value/code/func.go:59)	MOVQ	"".o+80(SP), AX
	0x00bc 00188 (pointer_vs_value/code/func.go:59)	TESTB	AL, (AX)
	0x00be 00190 (<unknown line number>)	NOP
	0x00be 00190 (pointer_vs_value/code/func.go:59)	PCDATA	$0, $0
	0x00be 00190 (pointer_vs_value/code/func.go:59)	MOVSD	8(AX), X1
	0x00c3 00195 (pointer_vs_value/code/func.go:59)	UCOMISD	X0, X1
	0x00c7 00199 (pointer_vs_value/code/func.go:59)	JNE	691
	0x00cd 00205 (pointer_vs_value/code/func.go:59)	JPC	212
	0x00cf 00207 (pointer_vs_value/code/func.go:59)	JMP	691
	0x00d4 00212 (pointer_vs_value/code/func.go:60)	PCDATA	$0, $2
	0x00d4 00212 (pointer_vs_value/code/func.go:60)	PCDATA	$1, $3
	0x00d4 00212 (pointer_vs_value/code/func.go:60)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x00db 00219 (pointer_vs_value/code/func.go:60)	PCDATA	$0, $0
	0x00db 00219 (pointer_vs_value/code/func.go:60)	MOVQ	AX, errors.text+152(SP)
	0x00e3 00227 (pointer_vs_value/code/func.go:60)	MOVQ	$22, errors.text+160(SP)
	0x00ef 00239 (pointer_vs_value/code/func.go:60)	XORPS	X1, X1
	0x00f2 00242 (pointer_vs_value/code/func.go:60)	MOVUPS	X1, "".~R0+136(SP)
	0x00fa 00250 (<unknown line number>)	NOP
	0x00fa 00250 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x00fa 00250 ($GOROOT/src/errors/errors.go:59)	XORPS	X1, X1
	0x00fd 00253 ($GOROOT/src/errors/errors.go:59)	MOVUPS	X1, ""..autotmp_16+232(SP)
	0x0105 00261 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x0105 00261 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x0105 00261 ($GOROOT/src/errors/errors.go:59)	LEAQ	""..autotmp_16+232(SP), CX
	0x010d 00269 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_15+96(SP)
	0x0112 00274 ($GOROOT/src/errors/errors.go:59)	TESTB	AL, (CX)
	0x0114 00276 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+160(SP), DX
	0x011c 00284 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x011c 00284 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $1
	0x011c 00284 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+152(SP), BX
	0x0124 00292 ($GOROOT/src/errors/errors.go:59)	MOVQ	DX, ""..autotmp_16+240(SP)
	0x012c 00300 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x012c 00300 ($GOROOT/src/errors/errors.go:59)	MOVQ	BX, ""..autotmp_16+232(SP)
	0x0134 00308 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_12+112(SP)
	0x0139 00313 (pointer_vs_value/code/func.go:60)	PCDATA	$0, $4
	0x0139 00313 (pointer_vs_value/code/func.go:60)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x0140 00320 (pointer_vs_value/code/func.go:60)	MOVQ	DX, ""..autotmp_17+216(SP)
	0x0148 00328 (pointer_vs_value/code/func.go:60)	MOVQ	CX, ""..autotmp_17+224(SP)
	0x0150 00336 (pointer_vs_value/code/func.go:60)	PCDATA	$0, $1
	0x0150 00336 (pointer_vs_value/code/func.go:60)	PCDATA	$1, $5
	0x0150 00336 (pointer_vs_value/code/func.go:60)	MOVQ	DX, "".~R0+136(SP)
	0x0158 00344 (pointer_vs_value/code/func.go:60)	PCDATA	$0, $0
	0x0158 00344 (pointer_vs_value/code/func.go:60)	MOVQ	CX, "".~R0+144(SP)
	0x0160 00352 (pointer_vs_value/code/func.go:60)	JMP	354
	0x0162 00354 (pointer_vs_value/code/benchmark_invocation_test.go:51)	PCDATA	$0, $1
	0x0162 00354 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVQ	"".~R0+144(SP), CX
	0x016a 00362 (pointer_vs_value/code/benchmark_invocation_test.go:51)	PCDATA	$1, $1
	0x016a 00362 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVQ	"".~R0+136(SP), BX
	0x0172 00370 (pointer_vs_value/code/benchmark_invocation_test.go:51)	PCDATA	$1, $6
	0x0172 00370 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVQ	BX, ""..autotmp_18+200(SP)
	0x017a 00378 (pointer_vs_value/code/benchmark_invocation_test.go:51)	PCDATA	$0, $0
	0x017a 00378 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVQ	CX, ""..autotmp_18+208(SP)
	0x0182 00386 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVSD	X0, "".~r1+32(SP)
	0x0188 00392 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVQ	""..autotmp_18+200(SP), CX
	0x0190 00400 (pointer_vs_value/code/benchmark_invocation_test.go:51)	PCDATA	$0, $5
	0x0190 00400 (pointer_vs_value/code/benchmark_invocation_test.go:51)	PCDATA	$1, $1
	0x0190 00400 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVQ	""..autotmp_18+208(SP), BX
	0x0198 00408 (pointer_vs_value/code/benchmark_invocation_test.go:51)	PCDATA	$1, $7
	0x0198 00408 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVQ	CX, "".~r2+120(SP)
	0x019d 00413 (pointer_vs_value/code/benchmark_invocation_test.go:51)	PCDATA	$0, $0
	0x019d 00413 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVQ	BX, "".~r2+128(SP)
	0x01a5 00421 (pointer_vs_value/code/benchmark_invocation_test.go:51)	JMP	423
	0x01a7 00423 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVSD	"".~r1+32(SP), X1
	0x01ad 00429 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVSD	X1, ""..autotmp_20+64(SP)
	0x01b3 00435 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVSD	X1, ""..autotmp_3+56(SP)
	0x01b9 00441 (pointer_vs_value/code/benchmark_invocation_test.go:51)	PCDATA	$0, $1
	0x01b9 00441 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVQ	"".~r2+128(SP), CX
	0x01c1 00449 (pointer_vs_value/code/benchmark_invocation_test.go:51)	PCDATA	$1, $1
	0x01c1 00449 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVQ	"".~r2+120(SP), BX
	0x01c6 00454 (pointer_vs_value/code/benchmark_invocation_test.go:51)	PCDATA	$1, $8
	0x01c6 00454 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVQ	BX, ""..autotmp_4+184(SP)
	0x01ce 00462 (pointer_vs_value/code/benchmark_invocation_test.go:51)	PCDATA	$0, $0
	0x01ce 00462 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVQ	CX, ""..autotmp_4+192(SP)
	0x01d6 00470 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVSD	""..autotmp_3+56(SP), X1
	0x01dc 00476 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVSD	X1, "".f+48(SP)
	0x01e2 00482 (pointer_vs_value/code/benchmark_invocation_test.go:51)	PCDATA	$0, $1
	0x01e2 00482 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVQ	""..autotmp_4+192(SP), CX
	0x01ea 00490 (pointer_vs_value/code/benchmark_invocation_test.go:51)	PCDATA	$1, $1
	0x01ea 00490 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVQ	""..autotmp_4+184(SP), BX
	0x01f2 00498 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVQ	BX, "".err+168(SP)
	0x01fa 00506 (pointer_vs_value/code/benchmark_invocation_test.go:51)	PCDATA	$0, $0
	0x01fa 00506 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVQ	CX, "".err+176(SP)
	0x0202 00514 (<unknown line number>)	NOP
	0x0202 00514 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	BX, BX
	0x0205 00517 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	524
	0x0207 00519 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	689
	0x020c 00524 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $9
	0x020c 00524 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X1, X1
	0x020f 00527 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X1, ""..autotmp_13+248(SP)
	0x0217 00535 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x0217 00535 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x0217 00535 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_13+248(SP), CX
	0x021f 00543 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_22+88(SP)
	0x0224 00548 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x0226 00550 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x0226 00550 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), BX
	0x022d 00557 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x022d 00557 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	BX, ""..autotmp_13+248(SP)
	0x0235 00565 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $6
	0x0235 00565 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_7(SB), SI
	0x023c 00572 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x023c 00572 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	SI, ""..autotmp_13+256(SP)
	0x0244 00580 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x0246 00582 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	584
	0x0248 00584 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_21+264(SP)
	0x0250 00592 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_21+272(SP)
	0x025c 00604 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_21+280(SP)
	0x0268 00616 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x0268 00616 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, (SP)
	0x026c 00620 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x0275 00629 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x027e 00638 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x0283 00643 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	645
	0x0285 00645 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x028d 00653 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+48(SP), X0
	0x0293 00659 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x029b 00667 (pointer_vs_value/code/benchmark_invocation_test.go:51)	JMP	669
	0x029d 00669 (pointer_vs_value/code/benchmark_invocation_test.go:50)	PCDATA	$0, $-2
	0x029d 00669 (pointer_vs_value/code/benchmark_invocation_test.go:50)	PCDATA	$1, $-2
	0x029d 00669 (pointer_vs_value/code/benchmark_invocation_test.go:50)	JMP	671
	0x029f 00671 (pointer_vs_value/code/benchmark_invocation_test.go:50)	PCDATA	$0, $0
	0x029f 00671 (pointer_vs_value/code/benchmark_invocation_test.go:50)	PCDATA	$1, $1
	0x029f 00671 (pointer_vs_value/code/benchmark_invocation_test.go:50)	MOVQ	"".i+40(SP), AX
	0x02a4 00676 (pointer_vs_value/code/benchmark_invocation_test.go:50)	INCQ	AX
	0x02a7 00679 (pointer_vs_value/code/benchmark_invocation_test.go:50)	MOVQ	AX, "".i+40(SP)
	0x02ac 00684 (pointer_vs_value/code/benchmark_invocation_test.go:50)	JMP	119
	0x02b1 00689 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x02b1 00689 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x02b1 00689 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	645
	0x02b3 00691 (pointer_vs_value/code/func.go:62)	PCDATA	$0, $1
	0x02b3 00691 (pointer_vs_value/code/func.go:62)	PCDATA	$1, $2
	0x02b3 00691 (pointer_vs_value/code/func.go:62)	MOVQ	"".o+80(SP), CX
	0x02b8 00696 (pointer_vs_value/code/func.go:62)	TESTB	AL, (CX)
	0x02ba 00698 (pointer_vs_value/code/func.go:62)	PCDATA	$0, $3
	0x02ba 00698 (pointer_vs_value/code/func.go:62)	PCDATA	$1, $1
	0x02ba 00698 (pointer_vs_value/code/func.go:62)	MOVQ	"".o+80(SP), BX
	0x02bf 00703 (pointer_vs_value/code/func.go:62)	TESTB	AL, (BX)
	0x02c1 00705 (pointer_vs_value/code/func.go:62)	PCDATA	$0, $5
	0x02c1 00705 (pointer_vs_value/code/func.go:62)	MOVQ	(CX), CX
	0x02c4 00708 (pointer_vs_value/code/func.go:62)	XORPS	X1, X1
	0x02c7 00711 (pointer_vs_value/code/func.go:62)	CVTSQ2SD	CX, X1
	0x02cc 00716 (pointer_vs_value/code/func.go:62)	PCDATA	$0, $0
	0x02cc 00716 (pointer_vs_value/code/func.go:62)	DIVSD	8(BX), X1
	0x02d1 00721 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVSD	X1, ""..autotmp_19+72(SP)
	0x02d7 00727 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVSD	X1, "".~r1+32(SP)
	0x02dd 00733 (pointer_vs_value/code/benchmark_invocation_test.go:51)	PCDATA	$1, $7
	0x02dd 00733 (pointer_vs_value/code/benchmark_invocation_test.go:51)	XORPS	X1, X1
	0x02e0 00736 (pointer_vs_value/code/benchmark_invocation_test.go:51)	MOVUPS	X1, "".~r2+120(SP)
	0x02e5 00741 (pointer_vs_value/code/benchmark_invocation_test.go:51)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x02ec 00748 (pointer_vs_value/code/benchmark_invocation_test.go:51)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x02f3 00755 (pointer_vs_value/code/benchmark_invocation_test.go:51)	JMP	423
	0x02f8 00760 (<unknown line number>)	PCDATA	$0, $-2
	0x02f8 00760 (<unknown line number>)	PCDATA	$1, $-2
	0x02f8 00760 (<unknown line number>)	MOVQ	320(SP), BP
	0x0300 00768 (<unknown line number>)	ADDQ	$328, SP
	0x0307 00775 (<unknown line number>)	RET
	0x0308 00776 (<unknown line number>)	NOP
	0x0308 00776 (pointer_vs_value/code/benchmark_invocation_test.go:46)	PCDATA	$1, $-1
	0x0308 00776 (pointer_vs_value/code/benchmark_invocation_test.go:46)	PCDATA	$0, $-1
	0x0308 00776 (pointer_vs_value/code/benchmark_invocation_test.go:46)	CALL	runtime.morestack_noctxt(SB)
	0x030d 00781 (pointer_vs_value/code/benchmark_invocation_test.go:46)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 38 ff ff  eH..%....H..$8..
	0x0010 ff 48 3b 41 10 0f 86 ed 02 00 00 48 81 ec 48 01  .H;A.......H..H.
	0x0020 00 00 48 89 ac 24 40 01 00 00 48 8d ac 24 40 01  ..H..$@...H..$@.
	0x0030 00 00 e8 00 00 00 00 f2 0f 10 44 24 08 48 8b 04  ..........D$.H..
	0x0040 24 48 8b 4c 24 10 48 8b 54 24 18 48 89 84 24 20  $H.L$.H.T$.H..$ 
	0x0050 01 00 00 f2 0f 11 84 24 28 01 00 00 48 89 8c 24  .......$(...H..$
	0x0060 30 01 00 00 48 89 94 24 38 01 00 00 48 c7 44 24  0...H..$8...H.D$
	0x0070 28 00 00 00 00 eb 00 48 8b 84 24 50 01 00 00 84  (......H..$P....
	0x0080 00 48 8b 80 08 01 00 00 48 39 44 24 28 7c 05 e9  .H......H9D$(|..
	0x0090 64 02 00 00 48 8d 84 24 20 01 00 00 48 89 44 24  d...H..$ ...H.D$
	0x00a0 68 48 89 44 24 50 0f 57 c0 f2 0f 11 44 24 20 0f  hH.D$P.W....D$ .
	0x00b0 57 c9 0f 11 4c 24 78 48 8b 44 24 50 84 00 f2 0f  W...L$xH.D$P....
	0x00c0 10 48 08 66 0f 2e c8 0f 85 e6 01 00 00 7b 05 e9  .H.f.........{..
	0x00d0 df 01 00 00 48 8d 05 00 00 00 00 48 89 84 24 98  ....H......H..$.
	0x00e0 00 00 00 48 c7 84 24 a0 00 00 00 16 00 00 00 0f  ...H..$.........
	0x00f0 57 c9 0f 11 8c 24 88 00 00 00 0f 57 c9 0f 11 8c  W....$.....W....
	0x0100 24 e8 00 00 00 48 8d 8c 24 e8 00 00 00 48 89 4c  $....H..$....H.L
	0x0110 24 60 84 01 48 8b 94 24 a0 00 00 00 48 8b 9c 24  $`..H..$....H..$
	0x0120 98 00 00 00 48 89 94 24 f0 00 00 00 48 89 9c 24  ....H..$....H..$
	0x0130 e8 00 00 00 48 89 4c 24 70 48 8d 15 00 00 00 00  ....H.L$pH......
	0x0140 48 89 94 24 d8 00 00 00 48 89 8c 24 e0 00 00 00  H..$....H..$....
	0x0150 48 89 94 24 88 00 00 00 48 89 8c 24 90 00 00 00  H..$....H..$....
	0x0160 eb 00 48 8b 8c 24 90 00 00 00 48 8b 9c 24 88 00  ..H..$....H..$..
	0x0170 00 00 48 89 9c 24 c8 00 00 00 48 89 8c 24 d0 00  ..H..$....H..$..
	0x0180 00 00 f2 0f 11 44 24 20 48 8b 8c 24 c8 00 00 00  .....D$ H..$....
	0x0190 48 8b 9c 24 d0 00 00 00 48 89 4c 24 78 48 89 9c  H..$....H.L$xH..
	0x01a0 24 80 00 00 00 eb 00 f2 0f 10 4c 24 20 f2 0f 11  $.........L$ ...
	0x01b0 4c 24 40 f2 0f 11 4c 24 38 48 8b 8c 24 80 00 00  L$@...L$8H..$...
	0x01c0 00 48 8b 5c 24 78 48 89 9c 24 b8 00 00 00 48 89  .H.\$xH..$....H.
	0x01d0 8c 24 c0 00 00 00 f2 0f 10 4c 24 38 f2 0f 11 4c  .$.......L$8...L
	0x01e0 24 30 48 8b 8c 24 c0 00 00 00 48 8b 9c 24 b8 00  $0H..$....H..$..
	0x01f0 00 00 48 89 9c 24 a8 00 00 00 48 89 8c 24 b0 00  ..H..$....H..$..
	0x0200 00 00 48 85 db 75 05 e9 a5 00 00 00 0f 57 c9 0f  ..H..u.......W..
	0x0210 11 8c 24 f8 00 00 00 48 8d 8c 24 f8 00 00 00 48  ..$....H..$....H
	0x0220 89 4c 24 58 84 01 48 8d 1d 00 00 00 00 48 89 9c  .L$X..H......H..
	0x0230 24 f8 00 00 00 48 8d 35 00 00 00 00 48 89 b4 24  $....H.5....H..$
	0x0240 00 01 00 00 84 01 eb 00 48 89 8c 24 08 01 00 00  ........H..$....
	0x0250 48 c7 84 24 10 01 00 00 01 00 00 00 48 c7 84 24  H..$........H..$
	0x0260 18 01 00 00 01 00 00 00 48 89 0c 24 48 c7 44 24  ........H..$H.D$
	0x0270 08 01 00 00 00 48 c7 44 24 10 01 00 00 00 e8 00  .....H.D$.......
	0x0280 00 00 00 eb 00 f2 0f 10 05 00 00 00 00 f2 0f 58  ...............X
	0x0290 44 24 30 f2 0f 11 05 00 00 00 00 eb 00 eb 00 48  D$0............H
	0x02a0 8b 44 24 28 48 ff c0 48 89 44 24 28 e9 c6 fd ff  .D$(H..H.D$(....
	0x02b0 ff eb d2 48 8b 4c 24 50 84 01 48 8b 5c 24 50 84  ...H.L$P..H.\$P.
	0x02c0 03 48 8b 09 0f 57 c9 f2 48 0f 2a c9 f2 0f 5e 4b  .H...W..H.*...^K
	0x02d0 08 f2 0f 11 4c 24 48 f2 0f 11 4c 24 20 0f 57 c9  ....L$H...L$ .W.
	0x02e0 0f 11 4c 24 78 48 8d 05 00 00 00 00 48 8d 15 00  ..L$xH......H...
	0x02f0 00 00 00 e9 af fe ff ff 48 8b ac 24 40 01 00 00  ........H..$@...
	0x0300 48 81 c4 48 01 00 00 c3 e8 00 00 00 00 e9 ee fc  H..H............
	0x0310 ff ff                                            ..
	rel 5+4 t=16 TLS+0
	rel 51+4 t=8 "".createTiny+0
	rel 215+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 316+4 t=15 go.itab.*errors.errorString,error+0
	rel 553+4 t=15 type.string+0
	rel 568+4 t=15 ""..stmp_7+0
	rel 639+4 t=8 log.Fatal+0
	rel 649+4 t=15 "".F+0
	rel 663+4 t=15 "".F+0
	rel 744+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 751+4 t=15 go.itab.*errors.errorString,error+0
	rel 777+4 t=8 runtime.morestack_noctxt+0
type..hash."".tiny STEXT dupok size=201 args=0x18 locals=0x40
	0x0000 00000 (<autogenerated>:1)	TEXT	type..hash."".tiny(SB), DUPOK|ABIInternal, $64-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	191
	0x0013 00019 (<autogenerated>:1)	SUBQ	$64, SP
	0x0017 00023 (<autogenerated>:1)	MOVQ	BP, 56(SP)
	0x001c 00028 (<autogenerated>:1)	LEAQ	56(SP), BP
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$1, gclocals·15b76348caca8a511afecadf603e9401(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0021 00033 (<autogenerated>:1)	PCDATA	$0, $0
	0x0021 00033 (<autogenerated>:1)	PCDATA	$1, $0
	0x0021 00033 (<autogenerated>:1)	MOVQ	$0, "".~r2+88(SP)
	0x002a 00042 (<autogenerated>:1)	PCDATA	$0, $1
	0x002a 00042 (<autogenerated>:1)	MOVQ	"".p+72(SP), AX
	0x002f 00047 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_3+48(SP)
	0x0034 00052 (<autogenerated>:1)	PCDATA	$0, $0
	0x0034 00052 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0038 00056 (<autogenerated>:1)	MOVQ	"".h+80(SP), AX
	0x003d 00061 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0042 00066 (<autogenerated>:1)	MOVQ	$8, 16(SP)
	0x004b 00075 (<autogenerated>:1)	CALL	runtime.memhash(SB)
	0x0050 00080 (<autogenerated>:1)	MOVQ	24(SP), AX
	0x0055 00085 (<autogenerated>:1)	MOVQ	AX, "".h+80(SP)
	0x005a 00090 (<autogenerated>:1)	PCDATA	$0, $1
	0x005a 00090 (<autogenerated>:1)	MOVQ	"".p+72(SP), AX
	0x005f 00095 (<autogenerated>:1)	ADDQ	$8, AX
	0x0063 00099 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_4+40(SP)
	0x0068 00104 (<autogenerated>:1)	PCDATA	$0, $0
	0x0068 00104 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x006c 00108 (<autogenerated>:1)	MOVQ	"".h+80(SP), AX
	0x0071 00113 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0076 00118 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x007b 00123 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0080 00128 (<autogenerated>:1)	MOVQ	AX, "".h+80(SP)
	0x0085 00133 (<autogenerated>:1)	PCDATA	$0, $1
	0x0085 00133 (<autogenerated>:1)	PCDATA	$1, $1
	0x0085 00133 (<autogenerated>:1)	MOVQ	"".p+72(SP), AX
	0x008a 00138 (<autogenerated>:1)	ADDQ	$16, AX
	0x008e 00142 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_5+32(SP)
	0x0093 00147 (<autogenerated>:1)	PCDATA	$0, $0
	0x0093 00147 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0097 00151 (<autogenerated>:1)	MOVQ	"".h+80(SP), AX
	0x009c 00156 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x00a1 00161 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x00a6 00166 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x00ab 00171 (<autogenerated>:1)	MOVQ	AX, "".h+80(SP)
	0x00b0 00176 (<autogenerated>:1)	MOVQ	AX, "".~r2+88(SP)
	0x00b5 00181 (<autogenerated>:1)	MOVQ	56(SP), BP
	0x00ba 00186 (<autogenerated>:1)	ADDQ	$64, SP
	0x00be 00190 (<autogenerated>:1)	RET
	0x00bf 00191 (<autogenerated>:1)	NOP
	0x00bf 00191 (<autogenerated>:1)	PCDATA	$1, $-1
	0x00bf 00191 (<autogenerated>:1)	PCDATA	$0, $-1
	0x00bf 00191 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x00c4 00196 (<autogenerated>:1)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 ac  eH..%....H;a....
	0x0010 00 00 00 48 83 ec 40 48 89 6c 24 38 48 8d 6c 24  ...H..@H.l$8H.l$
	0x0020 38 48 c7 44 24 58 00 00 00 00 48 8b 44 24 48 48  8H.D$X....H.D$HH
	0x0030 89 44 24 30 48 89 04 24 48 8b 44 24 50 48 89 44  .D$0H..$H.D$PH.D
	0x0040 24 08 48 c7 44 24 10 08 00 00 00 e8 00 00 00 00  $.H.D$..........
	0x0050 48 8b 44 24 18 48 89 44 24 50 48 8b 44 24 48 48  H.D$.H.D$PH.D$HH
	0x0060 83 c0 08 48 89 44 24 28 48 89 04 24 48 8b 44 24  ...H.D$(H..$H.D$
	0x0070 50 48 89 44 24 08 e8 00 00 00 00 48 8b 44 24 10  PH.D$......H.D$.
	0x0080 48 89 44 24 50 48 8b 44 24 48 48 83 c0 10 48 89  H.D$PH.D$HH...H.
	0x0090 44 24 20 48 89 04 24 48 8b 44 24 50 48 89 44 24  D$ H..$H.D$PH.D$
	0x00a0 08 e8 00 00 00 00 48 8b 44 24 10 48 89 44 24 50  ......H.D$.H.D$P
	0x00b0 48 89 44 24 58 48 8b 6c 24 38 48 83 c4 40 c3 e8  H.D$XH.l$8H..@..
	0x00c0 00 00 00 00 e9 37 ff ff ff                       .....7...
	rel 5+4 t=16 TLS+0
	rel 76+4 t=8 runtime.memhash+0
	rel 119+4 t=8 runtime.f64hash+0
	rel 162+4 t=8 runtime.strhash+0
	rel 192+4 t=8 runtime.morestack_noctxt+0
type..eq."".tiny STEXT dupok size=261 args=0x18 locals=0x50
	0x0000 00000 (<autogenerated>:1)	TEXT	type..eq."".tiny(SB), DUPOK|ABIInternal, $80-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	251
	0x0013 00019 (<autogenerated>:1)	SUBQ	$80, SP
	0x0017 00023 (<autogenerated>:1)	MOVQ	BP, 72(SP)
	0x001c 00028 (<autogenerated>:1)	LEAQ	72(SP), BP
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$0, gclocals·98b3fe0fe486cb80582d9e40e05ed306(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$1, gclocals·c43b6553139b2dad5540cd03018f0ff6(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$2, gclocals·bfec7e55b3f043d1941c093912808913(SB)
	0x0021 00033 (<autogenerated>:1)	PCDATA	$0, $0
	0x0021 00033 (<autogenerated>:1)	PCDATA	$1, $0
	0x0021 00033 (<autogenerated>:1)	MOVB	$0, "".~r2+104(SP)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $1
	0x0026 00038 (<autogenerated>:1)	MOVQ	"".p+88(SP), AX
	0x002b 00043 (<autogenerated>:1)	PCDATA	$0, $2
	0x002b 00043 (<autogenerated>:1)	MOVQ	"".q+96(SP), CX
	0x0030 00048 (<autogenerated>:1)	PCDATA	$0, $1
	0x0030 00048 (<autogenerated>:1)	MOVQ	(CX), CX
	0x0033 00051 (<autogenerated>:1)	PCDATA	$0, $0
	0x0033 00051 (<autogenerated>:1)	CMPQ	(AX), CX
	0x0036 00054 (<autogenerated>:1)	SETEQ	AL
	0x0039 00057 (<autogenerated>:1)	MOVB	AL, ""..autotmp_4+38(SP)
	0x003d 00061 (<autogenerated>:1)	JEQ	68
	0x003f 00063 (<autogenerated>:1)	JMP	246
	0x0044 00068 (<autogenerated>:1)	PCDATA	$0, $1
	0x0044 00068 (<autogenerated>:1)	MOVQ	"".p+88(SP), AX
	0x0049 00073 (<autogenerated>:1)	PCDATA	$0, $0
	0x0049 00073 (<autogenerated>:1)	MOVSD	8(AX), X0
	0x004e 00078 (<autogenerated>:1)	PCDATA	$0, $1
	0x004e 00078 (<autogenerated>:1)	MOVQ	"".q+96(SP), AX
	0x0053 00083 (<autogenerated>:1)	PCDATA	$0, $0
	0x0053 00083 (<autogenerated>:1)	MOVSD	8(AX), X1
	0x0058 00088 (<autogenerated>:1)	UCOMISD	X1, X0
	0x005c 00092 (<autogenerated>:1)	SETEQ	CL
	0x005f 00095 (<autogenerated>:1)	SETPC	AL
	0x0062 00098 (<autogenerated>:1)	ANDL	AX, CX
	0x0064 00100 (<autogenerated>:1)	MOVB	CL, ""..autotmp_4+38(SP)
	0x0068 00104 (<autogenerated>:1)	JMP	106
	0x006a 00106 (<autogenerated>:1)	MOVBLZX	""..autotmp_4+38(SP), AX
	0x006f 00111 (<autogenerated>:1)	MOVB	AL, ""..autotmp_3+39(SP)
	0x0073 00115 (<autogenerated>:1)	TESTB	AL, AL
	0x0075 00117 (<autogenerated>:1)	JNE	121
	0x0077 00119 (<autogenerated>:1)	JMP	244
	0x0079 00121 (<autogenerated>:1)	PCDATA	$0, $1
	0x0079 00121 (<autogenerated>:1)	PCDATA	$1, $1
	0x0079 00121 (<autogenerated>:1)	MOVQ	"".p+88(SP), AX
	0x007e 00126 (<autogenerated>:1)	MOVQ	24(AX), CX
	0x0082 00130 (<autogenerated>:1)	MOVQ	16(AX), AX
	0x0086 00134 (<autogenerated>:1)	PCDATA	$0, $0
	0x0086 00134 (<autogenerated>:1)	PCDATA	$1, $2
	0x0086 00134 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_5+56(SP)
	0x008b 00139 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_5+64(SP)
	0x0090 00144 (<autogenerated>:1)	PCDATA	$0, $1
	0x0090 00144 (<autogenerated>:1)	PCDATA	$1, $3
	0x0090 00144 (<autogenerated>:1)	MOVQ	"".q+96(SP), AX
	0x0095 00149 (<autogenerated>:1)	MOVQ	24(AX), CX
	0x0099 00153 (<autogenerated>:1)	MOVQ	16(AX), AX
	0x009d 00157 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_6+40(SP)
	0x00a2 00162 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_6+48(SP)
	0x00a7 00167 (<autogenerated>:1)	CMPQ	""..autotmp_5+64(SP), CX
	0x00ac 00172 (<autogenerated>:1)	SETEQ	CL
	0x00af 00175 (<autogenerated>:1)	JEQ	179
	0x00b1 00177 (<autogenerated>:1)	JMP	240
	0x00b3 00179 (<autogenerated>:1)	PCDATA	$0, $2
	0x00b3 00179 (<autogenerated>:1)	MOVQ	""..autotmp_5+56(SP), CX
	0x00b8 00184 (<autogenerated>:1)	PCDATA	$0, $1
	0x00b8 00184 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x00bc 00188 (<autogenerated>:1)	PCDATA	$0, $0
	0x00bc 00188 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x00c1 00193 (<autogenerated>:1)	PCDATA	$1, $4
	0x00c1 00193 (<autogenerated>:1)	MOVQ	""..autotmp_5+64(SP), AX
	0x00c6 00198 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x00cb 00203 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x00d0 00208 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x00d5 00213 (<autogenerated>:1)	JMP	215
	0x00d7 00215 (<autogenerated>:1)	MOVB	AL, ""..autotmp_3+39(SP)
	0x00db 00219 (<autogenerated>:1)	JMP	221
	0x00dd 00221 (<autogenerated>:1)	MOVBLZX	""..autotmp_3+39(SP), AX
	0x00e2 00226 (<autogenerated>:1)	MOVB	AL, "".~r2+104(SP)
	0x00e6 00230 (<autogenerated>:1)	MOVQ	72(SP), BP
	0x00eb 00235 (<autogenerated>:1)	ADDQ	$80, SP
	0x00ef 00239 (<autogenerated>:1)	RET
	0x00f0 00240 (<autogenerated>:1)	MOVL	CX, AX
	0x00f2 00242 (<autogenerated>:1)	JMP	215
	0x00f4 00244 (<autogenerated>:1)	PCDATA	$0, $-2
	0x00f4 00244 (<autogenerated>:1)	PCDATA	$1, $-2
	0x00f4 00244 (<autogenerated>:1)	JMP	221
	0x00f6 00246 (<autogenerated>:1)	JMP	106
	0x00fb 00251 (<autogenerated>:1)	NOP
	0x00fb 00251 (<autogenerated>:1)	PCDATA	$1, $-1
	0x00fb 00251 (<autogenerated>:1)	PCDATA	$0, $-1
	0x00fb 00251 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0100 00256 (<autogenerated>:1)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 e8  eH..%....H;a....
	0x0010 00 00 00 48 83 ec 50 48 89 6c 24 48 48 8d 6c 24  ...H..PH.l$HH.l$
	0x0020 48 c6 44 24 68 00 48 8b 44 24 58 48 8b 4c 24 60  H.D$h.H.D$XH.L$`
	0x0030 48 8b 09 48 39 08 0f 94 c0 88 44 24 26 74 05 e9  H..H9.....D$&t..
	0x0040 b2 00 00 00 48 8b 44 24 58 f2 0f 10 40 08 48 8b  ....H.D$X...@.H.
	0x0050 44 24 60 f2 0f 10 48 08 66 0f 2e c1 0f 94 c1 0f  D$`...H.f.......
	0x0060 9b c0 21 c1 88 4c 24 26 eb 00 0f b6 44 24 26 88  ..!..L$&....D$&.
	0x0070 44 24 27 84 c0 75 02 eb 7b 48 8b 44 24 58 48 8b  D$'..u..{H.D$XH.
	0x0080 48 18 48 8b 40 10 48 89 44 24 38 48 89 4c 24 40  H.H.@.H.D$8H.L$@
	0x0090 48 8b 44 24 60 48 8b 48 18 48 8b 40 10 48 89 44  H.D$`H.H.H.@.H.D
	0x00a0 24 28 48 89 4c 24 30 48 39 4c 24 40 0f 94 c1 74  $(H.L$0H9L$@...t
	0x00b0 02 eb 3d 48 8b 4c 24 38 48 89 0c 24 48 89 44 24  ..=H.L$8H..$H.D$
	0x00c0 08 48 8b 44 24 40 48 89 44 24 10 e8 00 00 00 00  .H.D$@H.D$......
	0x00d0 0f b6 44 24 18 eb 00 88 44 24 27 eb 00 0f b6 44  ..D$....D$'....D
	0x00e0 24 27 88 44 24 68 48 8b 6c 24 48 48 83 c4 50 c3  $'.D$hH.l$HH..P.
	0x00f0 89 c8 eb e3 eb e7 e9 6f ff ff ff e8 00 00 00 00  .......o........
	0x0100 e9 fb fe ff ff                                   .....
	rel 5+4 t=16 TLS+0
	rel 204+4 t=8 runtime.memequal+0
	rel 252+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkTinyIfc_Calc STEXT size=550 args=0x8 locals=0xc0
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:55)	TEXT	"".BenchmarkTinyIfc_Calc(SB), ABIInternal, $192-8
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:55)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_invocation_test.go:55)	LEAQ	-64(SP), AX
	0x000e 00014 (pointer_vs_value/code/benchmark_invocation_test.go:55)	CMPQ	AX, 16(CX)
	0x0012 00018 (pointer_vs_value/code/benchmark_invocation_test.go:55)	JLS	540
	0x0018 00024 (pointer_vs_value/code/benchmark_invocation_test.go:55)	SUBQ	$192, SP
	0x001f 00031 (pointer_vs_value/code/benchmark_invocation_test.go:55)	MOVQ	BP, 184(SP)
	0x0027 00039 (pointer_vs_value/code/benchmark_invocation_test.go:55)	LEAQ	184(SP), BP
	0x002f 00047 (pointer_vs_value/code/benchmark_invocation_test.go:55)	FUNCDATA	$0, gclocals·73de87619823f6747f37fd4c152f5b42(SB)
	0x002f 00047 (pointer_vs_value/code/benchmark_invocation_test.go:55)	FUNCDATA	$1, gclocals·5656cec2d04c5a84ade886586cb39011(SB)
	0x002f 00047 (pointer_vs_value/code/benchmark_invocation_test.go:55)	FUNCDATA	$2, gclocals·ac54cb40544120234c399b823c9a65b5(SB)
	0x002f 00047 (pointer_vs_value/code/benchmark_invocation_test.go:55)	FUNCDATA	$3, "".BenchmarkTinyIfc_Calc.stkobj(SB)
	0x002f 00047 (pointer_vs_value/code/benchmark_invocation_test.go:57)	PCDATA	$0, $1
	0x002f 00047 (pointer_vs_value/code/benchmark_invocation_test.go:57)	PCDATA	$1, $0
	0x002f 00047 (pointer_vs_value/code/benchmark_invocation_test.go:57)	LEAQ	type."".tiny(SB), AX
	0x0036 00054 (pointer_vs_value/code/benchmark_invocation_test.go:57)	PCDATA	$0, $0
	0x0036 00054 (pointer_vs_value/code/benchmark_invocation_test.go:57)	MOVQ	AX, (SP)
	0x003a 00058 (pointer_vs_value/code/benchmark_invocation_test.go:57)	CALL	runtime.newobject(SB)
	0x003f 00063 (pointer_vs_value/code/benchmark_invocation_test.go:57)	PCDATA	$0, $1
	0x003f 00063 (pointer_vs_value/code/benchmark_invocation_test.go:57)	MOVQ	8(SP), AX
	0x0044 00068 (pointer_vs_value/code/benchmark_invocation_test.go:57)	PCDATA	$0, $0
	0x0044 00068 (pointer_vs_value/code/benchmark_invocation_test.go:57)	PCDATA	$1, $1
	0x0044 00068 (pointer_vs_value/code/benchmark_invocation_test.go:57)	MOVQ	AX, "".&o+88(SP)
	0x0049 00073 (pointer_vs_value/code/benchmark_invocation_test.go:57)	CALL	"".createTiny(SB)
	0x004e 00078 (pointer_vs_value/code/benchmark_invocation_test.go:57)	PCDATA	$0, $1
	0x004e 00078 (pointer_vs_value/code/benchmark_invocation_test.go:57)	MOVQ	"".&o+88(SP), AX
	0x0053 00083 (pointer_vs_value/code/benchmark_invocation_test.go:57)	MOVSD	8(SP), X0
	0x0059 00089 (pointer_vs_value/code/benchmark_invocation_test.go:57)	MOVQ	(SP), CX
	0x005d 00093 (pointer_vs_value/code/benchmark_invocation_test.go:57)	PCDATA	$0, $2
	0x005d 00093 (pointer_vs_value/code/benchmark_invocation_test.go:57)	MOVQ	16(SP), DX
	0x0062 00098 (pointer_vs_value/code/benchmark_invocation_test.go:57)	MOVQ	24(SP), BX
	0x0067 00103 (pointer_vs_value/code/benchmark_invocation_test.go:57)	MOVQ	CX, (AX)
	0x006a 00106 (pointer_vs_value/code/benchmark_invocation_test.go:57)	MOVSD	X0, 8(AX)
	0x006f 00111 (pointer_vs_value/code/benchmark_invocation_test.go:57)	MOVQ	BX, 24(AX)
	0x0073 00115 (pointer_vs_value/code/benchmark_invocation_test.go:57)	PCDATA	$0, $3
	0x0073 00115 (pointer_vs_value/code/benchmark_invocation_test.go:57)	LEAQ	16(AX), DI
	0x0077 00119 (pointer_vs_value/code/benchmark_invocation_test.go:57)	PCDATA	$0, $-2
	0x0077 00119 (pointer_vs_value/code/benchmark_invocation_test.go:57)	PCDATA	$1, $-2
	0x0077 00119 (pointer_vs_value/code/benchmark_invocation_test.go:57)	CMPL	runtime.writeBarrier(SB), $0
	0x007e 00126 (pointer_vs_value/code/benchmark_invocation_test.go:57)	JEQ	133
	0x0080 00128 (pointer_vs_value/code/benchmark_invocation_test.go:57)	JMP	527
	0x0085 00133 (pointer_vs_value/code/benchmark_invocation_test.go:57)	MOVQ	DX, 16(AX)
	0x0089 00137 (pointer_vs_value/code/benchmark_invocation_test.go:57)	JMP	139
	0x008b 00139 (pointer_vs_value/code/benchmark_invocation_test.go:59)	PCDATA	$0, $0
	0x008b 00139 (pointer_vs_value/code/benchmark_invocation_test.go:59)	PCDATA	$1, $1
	0x008b 00139 (pointer_vs_value/code/benchmark_invocation_test.go:59)	MOVQ	$0, "".i+40(SP)
	0x0094 00148 (pointer_vs_value/code/benchmark_invocation_test.go:59)	JMP	150
	0x0096 00150 (pointer_vs_value/code/benchmark_invocation_test.go:59)	PCDATA	$0, $1
	0x0096 00150 (pointer_vs_value/code/benchmark_invocation_test.go:59)	MOVQ	"".b+200(SP), AX
	0x009e 00158 (pointer_vs_value/code/benchmark_invocation_test.go:59)	TESTB	AL, (AX)
	0x00a0 00160 (pointer_vs_value/code/benchmark_invocation_test.go:59)	PCDATA	$0, $0
	0x00a0 00160 (pointer_vs_value/code/benchmark_invocation_test.go:59)	MOVQ	264(AX), AX
	0x00a7 00167 (pointer_vs_value/code/benchmark_invocation_test.go:59)	CMPQ	"".i+40(SP), AX
	0x00ac 00172 (pointer_vs_value/code/benchmark_invocation_test.go:59)	JLT	179
	0x00ae 00174 (pointer_vs_value/code/benchmark_invocation_test.go:59)	JMP	511
	0x00b3 00179 (pointer_vs_value/code/benchmark_invocation_test.go:60)	PCDATA	$0, $1
	0x00b3 00179 (pointer_vs_value/code/benchmark_invocation_test.go:60)	MOVQ	"".&o+88(SP), AX
	0x00b8 00184 (pointer_vs_value/code/benchmark_invocation_test.go:60)	PCDATA	$0, $0
	0x00b8 00184 (pointer_vs_value/code/benchmark_invocation_test.go:60)	PCDATA	$1, $2
	0x00b8 00184 (pointer_vs_value/code/benchmark_invocation_test.go:60)	MOVQ	AX, ""..autotmp_8+72(SP)
	0x00bd 00189 (pointer_vs_value/code/benchmark_invocation_test.go:60)	XORPS	X0, X0
	0x00c0 00192 (pointer_vs_value/code/benchmark_invocation_test.go:60)	MOVUPS	X0, ""..autotmp_10+144(SP)
	0x00c8 00200 (pointer_vs_value/code/benchmark_invocation_test.go:60)	PCDATA	$0, $1
	0x00c8 00200 (pointer_vs_value/code/benchmark_invocation_test.go:60)	PCDATA	$1, $1
	0x00c8 00200 (pointer_vs_value/code/benchmark_invocation_test.go:60)	MOVQ	""..autotmp_8+72(SP), AX
	0x00cd 00205 (pointer_vs_value/code/benchmark_invocation_test.go:60)	PCDATA	$0, $4
	0x00cd 00205 (pointer_vs_value/code/benchmark_invocation_test.go:60)	LEAQ	go.itab.*"".tiny,"".obj(SB), CX
	0x00d4 00212 (pointer_vs_value/code/benchmark_invocation_test.go:60)	PCDATA	$0, $1
	0x00d4 00212 (pointer_vs_value/code/benchmark_invocation_test.go:60)	MOVQ	CX, (SP)
	0x00d8 00216 (pointer_vs_value/code/benchmark_invocation_test.go:60)	PCDATA	$0, $0
	0x00d8 00216 (pointer_vs_value/code/benchmark_invocation_test.go:60)	MOVQ	AX, 8(SP)
	0x00dd 00221 (pointer_vs_value/code/benchmark_invocation_test.go:60)	CALL	"".calcIfc(SB)
	0x00e2 00226 (pointer_vs_value/code/benchmark_invocation_test.go:60)	MOVSD	16(SP), X0
	0x00e8 00232 (pointer_vs_value/code/benchmark_invocation_test.go:60)	MOVSD	X0, ""..autotmp_9+56(SP)
	0x00ee 00238 (pointer_vs_value/code/benchmark_invocation_test.go:60)	MOVQ	24(SP), AX
	0x00f3 00243 (pointer_vs_value/code/benchmark_invocation_test.go:60)	PCDATA	$0, $5
	0x00f3 00243 (pointer_vs_value/code/benchmark_invocation_test.go:60)	MOVQ	32(SP), CX
	0x00f8 00248 (pointer_vs_value/code/benchmark_invocation_test.go:60)	PCDATA	$1, $3
	0x00f8 00248 (pointer_vs_value/code/benchmark_invocation_test.go:60)	MOVQ	AX, ""..autotmp_10+144(SP)
	0x0100 00256 (pointer_vs_value/code/benchmark_invocation_test.go:60)	PCDATA	$0, $0
	0x0100 00256 (pointer_vs_value/code/benchmark_invocation_test.go:60)	MOVQ	CX, ""..autotmp_10+152(SP)
	0x0108 00264 (pointer_vs_value/code/benchmark_invocation_test.go:60)	MOVSD	""..autotmp_9+56(SP), X0
	0x010e 00270 (pointer_vs_value/code/benchmark_invocation_test.go:60)	MOVSD	X0, ""..autotmp_3+64(SP)
	0x0114 00276 (pointer_vs_value/code/benchmark_invocation_test.go:60)	PCDATA	$0, $1
	0x0114 00276 (pointer_vs_value/code/benchmark_invocation_test.go:60)	MOVQ	""..autotmp_10+152(SP), AX
	0x011c 00284 (pointer_vs_value/code/benchmark_invocation_test.go:60)	PCDATA	$1, $1
	0x011c 00284 (pointer_vs_value/code/benchmark_invocation_test.go:60)	MOVQ	""..autotmp_10+144(SP), CX
	0x0124 00292 (pointer_vs_value/code/benchmark_invocation_test.go:60)	PCDATA	$1, $4
	0x0124 00292 (pointer_vs_value/code/benchmark_invocation_test.go:60)	MOVQ	CX, ""..autotmp_4+112(SP)
	0x0129 00297 (pointer_vs_value/code/benchmark_invocation_test.go:60)	PCDATA	$0, $0
	0x0129 00297 (pointer_vs_value/code/benchmark_invocation_test.go:60)	MOVQ	AX, ""..autotmp_4+120(SP)
	0x012e 00302 (pointer_vs_value/code/benchmark_invocation_test.go:60)	MOVSD	""..autotmp_3+64(SP), X0
	0x0134 00308 (pointer_vs_value/code/benchmark_invocation_test.go:60)	MOVSD	X0, "".f+48(SP)
	0x013a 00314 (pointer_vs_value/code/benchmark_invocation_test.go:60)	PCDATA	$0, $1
	0x013a 00314 (pointer_vs_value/code/benchmark_invocation_test.go:60)	MOVQ	""..autotmp_4+120(SP), AX
	0x013f 00319 (pointer_vs_value/code/benchmark_invocation_test.go:60)	PCDATA	$1, $1
	0x013f 00319 (pointer_vs_value/code/benchmark_invocation_test.go:60)	MOVQ	""..autotmp_4+112(SP), CX
	0x0144 00324 (pointer_vs_value/code/benchmark_invocation_test.go:60)	MOVQ	CX, "".err+96(SP)
	0x0149 00329 (pointer_vs_value/code/benchmark_invocation_test.go:60)	PCDATA	$0, $0
	0x0149 00329 (pointer_vs_value/code/benchmark_invocation_test.go:60)	MOVQ	AX, "".err+104(SP)
	0x014e 00334 (<unknown line number>)	NOP
	0x014e 00334 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	CX, CX
	0x0151 00337 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	344
	0x0153 00339 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	509
	0x0158 00344 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $5
	0x0158 00344 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X0, X0
	0x015b 00347 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X0, ""..autotmp_11+128(SP)
	0x0163 00355 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x0163 00355 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x0163 00355 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_11+128(SP), AX
	0x016b 00363 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_13+80(SP)
	0x0170 00368 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x0172 00370 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x0172 00370 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), CX
	0x0179 00377 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x0179 00377 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_11+128(SP)
	0x0181 00385 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $2
	0x0181 00385 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_8(SB), DX
	0x0188 00392 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x0188 00392 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	DX, ""..autotmp_11+136(SP)
	0x0190 00400 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x0192 00402 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	404
	0x0194 00404 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_12+160(SP)
	0x019c 00412 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_12+168(SP)
	0x01a8 00424 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_12+176(SP)
	0x01b4 00436 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x01b4 00436 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, (SP)
	0x01b8 00440 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x01c1 00449 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x01ca 00458 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x01cf 00463 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	465
	0x01d1 00465 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x01d9 00473 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+48(SP), X0
	0x01df 00479 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x01e7 00487 (pointer_vs_value/code/benchmark_invocation_test.go:60)	JMP	489
	0x01e9 00489 (pointer_vs_value/code/benchmark_invocation_test.go:59)	PCDATA	$0, $-2
	0x01e9 00489 (pointer_vs_value/code/benchmark_invocation_test.go:59)	PCDATA	$1, $-2
	0x01e9 00489 (pointer_vs_value/code/benchmark_invocation_test.go:59)	JMP	491
	0x01eb 00491 (pointer_vs_value/code/benchmark_invocation_test.go:59)	PCDATA	$0, $0
	0x01eb 00491 (pointer_vs_value/code/benchmark_invocation_test.go:59)	PCDATA	$1, $1
	0x01eb 00491 (pointer_vs_value/code/benchmark_invocation_test.go:59)	MOVQ	"".i+40(SP), AX
	0x01f0 00496 (pointer_vs_value/code/benchmark_invocation_test.go:59)	INCQ	AX
	0x01f3 00499 (pointer_vs_value/code/benchmark_invocation_test.go:59)	MOVQ	AX, "".i+40(SP)
	0x01f8 00504 (pointer_vs_value/code/benchmark_invocation_test.go:59)	JMP	150
	0x01fd 00509 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x01fd 00509 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x01fd 00509 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	465
	0x01ff 00511 (<unknown line number>)	MOVQ	184(SP), BP
	0x0207 00519 (<unknown line number>)	ADDQ	$192, SP
	0x020e 00526 (<unknown line number>)	RET
	0x020f 00527 (pointer_vs_value/code/benchmark_invocation_test.go:57)	MOVQ	DX, AX
	0x0212 00530 (pointer_vs_value/code/benchmark_invocation_test.go:57)	CALL	runtime.gcWriteBarrier(SB)
	0x0217 00535 (pointer_vs_value/code/benchmark_invocation_test.go:57)	JMP	139
	0x021c 00540 (pointer_vs_value/code/benchmark_invocation_test.go:57)	NOP
	0x021c 00540 (pointer_vs_value/code/benchmark_invocation_test.go:55)	PCDATA	$1, $-1
	0x021c 00540 (pointer_vs_value/code/benchmark_invocation_test.go:55)	PCDATA	$0, $-1
	0x021c 00540 (pointer_vs_value/code/benchmark_invocation_test.go:55)	CALL	runtime.morestack_noctxt(SB)
	0x0221 00545 (pointer_vs_value/code/benchmark_invocation_test.go:55)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 44 24 c0 48 3b  eH..%....H.D$.H;
	0x0010 41 10 0f 86 04 02 00 00 48 81 ec c0 00 00 00 48  A.......H......H
	0x0020 89 ac 24 b8 00 00 00 48 8d ac 24 b8 00 00 00 48  ..$....H..$....H
	0x0030 8d 05 00 00 00 00 48 89 04 24 e8 00 00 00 00 48  ......H..$.....H
	0x0040 8b 44 24 08 48 89 44 24 58 e8 00 00 00 00 48 8b  .D$.H.D$X.....H.
	0x0050 44 24 58 f2 0f 10 44 24 08 48 8b 0c 24 48 8b 54  D$X...D$.H..$H.T
	0x0060 24 10 48 8b 5c 24 18 48 89 08 f2 0f 11 40 08 48  $.H.\$.H.....@.H
	0x0070 89 58 18 48 8d 78 10 83 3d 00 00 00 00 00 74 05  .X.H.x..=.....t.
	0x0080 e9 8a 01 00 00 48 89 50 10 eb 00 48 c7 44 24 28  .....H.P...H.D$(
	0x0090 00 00 00 00 eb 00 48 8b 84 24 c8 00 00 00 84 00  ......H..$......
	0x00a0 48 8b 80 08 01 00 00 48 39 44 24 28 7c 05 e9 4c  H......H9D$(|..L
	0x00b0 01 00 00 48 8b 44 24 58 48 89 44 24 48 0f 57 c0  ...H.D$XH.D$H.W.
	0x00c0 0f 11 84 24 90 00 00 00 48 8b 44 24 48 48 8d 0d  ...$....H.D$HH..
	0x00d0 00 00 00 00 48 89 0c 24 48 89 44 24 08 e8 00 00  ....H..$H.D$....
	0x00e0 00 00 f2 0f 10 44 24 10 f2 0f 11 44 24 38 48 8b  .....D$....D$8H.
	0x00f0 44 24 18 48 8b 4c 24 20 48 89 84 24 90 00 00 00  D$.H.L$ H..$....
	0x0100 48 89 8c 24 98 00 00 00 f2 0f 10 44 24 38 f2 0f  H..$.......D$8..
	0x0110 11 44 24 40 48 8b 84 24 98 00 00 00 48 8b 8c 24  .D$@H..$....H..$
	0x0120 90 00 00 00 48 89 4c 24 70 48 89 44 24 78 f2 0f  ....H.L$pH.D$x..
	0x0130 10 44 24 40 f2 0f 11 44 24 30 48 8b 44 24 78 48  .D$@...D$0H.D$xH
	0x0140 8b 4c 24 70 48 89 4c 24 60 48 89 44 24 68 48 85  .L$pH.L$`H.D$hH.
	0x0150 c9 75 05 e9 a5 00 00 00 0f 57 c0 0f 11 84 24 80  .u.......W....$.
	0x0160 00 00 00 48 8d 84 24 80 00 00 00 48 89 44 24 50  ...H..$....H.D$P
	0x0170 84 00 48 8d 0d 00 00 00 00 48 89 8c 24 80 00 00  ..H......H..$...
	0x0180 00 48 8d 15 00 00 00 00 48 89 94 24 88 00 00 00  .H......H..$....
	0x0190 84 00 eb 00 48 89 84 24 a0 00 00 00 48 c7 84 24  ....H..$....H..$
	0x01a0 a8 00 00 00 01 00 00 00 48 c7 84 24 b0 00 00 00  ........H..$....
	0x01b0 01 00 00 00 48 89 04 24 48 c7 44 24 08 01 00 00  ....H..$H.D$....
	0x01c0 00 48 c7 44 24 10 01 00 00 00 e8 00 00 00 00 eb  .H.D$...........
	0x01d0 00 f2 0f 10 05 00 00 00 00 f2 0f 58 44 24 30 f2  ...........XD$0.
	0x01e0 0f 11 05 00 00 00 00 eb 00 eb 00 48 8b 44 24 28  ...........H.D$(
	0x01f0 48 ff c0 48 89 44 24 28 e9 99 fe ff ff eb d2 48  H..H.D$(.......H
	0x0200 8b ac 24 b8 00 00 00 48 81 c4 c0 00 00 00 c3 48  ..$....H.......H
	0x0210 89 d0 e8 00 00 00 00 e9 6f fe ff ff e8 00 00 00  ........o.......
	0x0220 00 e9 da fd ff ff                                ......
	rel 5+4 t=16 TLS+0
	rel 50+4 t=15 type."".tiny+0
	rel 59+4 t=8 runtime.newobject+0
	rel 74+4 t=8 "".createTiny+0
	rel 121+4 t=15 runtime.writeBarrier+-1
	rel 208+4 t=15 go.itab.*"".tiny,"".obj+0
	rel 222+4 t=8 "".calcIfc+0
	rel 373+4 t=15 type.string+0
	rel 388+4 t=15 ""..stmp_8+0
	rel 459+4 t=8 log.Fatal+0
	rel 469+4 t=15 "".F+0
	rel 483+4 t=15 "".F+0
	rel 531+4 t=8 runtime.gcWriteBarrier+0
	rel 541+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkMini_Calc STEXT size=799 args=0x8 locals=0x218
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:64)	TEXT	"".BenchmarkMini_Calc(SB), ABIInternal, $536-8
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:64)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_invocation_test.go:64)	LEAQ	-408(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_invocation_test.go:64)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_invocation_test.go:64)	JLS	789
	0x001b 00027 (pointer_vs_value/code/benchmark_invocation_test.go:64)	SUBQ	$536, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_invocation_test.go:64)	MOVQ	BP, 528(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_invocation_test.go:64)	LEAQ	528(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:64)	FUNCDATA	$0, gclocals·d1d75e5bd153dd111cd8f1bc3c181073(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:64)	FUNCDATA	$1, gclocals·4b4268936c577e544c51abff96963da5(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:64)	FUNCDATA	$2, gclocals·312acb76b4abc33b200226485697de53(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:64)	FUNCDATA	$3, "".BenchmarkMini_Calc.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:66)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:66)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:66)	CALL	"".createMini(SB)
	0x0037 00055 (pointer_vs_value/code/benchmark_invocation_test.go:66)	PCDATA	$0, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_invocation_test.go:66)	PCDATA	$1, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_invocation_test.go:66)	LEAQ	"".o+432(SP), DI
	0x003f 00063 (pointer_vs_value/code/benchmark_invocation_test.go:66)	MOVQ	SP, SI
	0x0042 00066 (pointer_vs_value/code/benchmark_invocation_test.go:66)	PCDATA	$0, $0
	0x0042 00066 (pointer_vs_value/code/benchmark_invocation_test.go:66)	DUFFCOPY	$812
	0x0055 00085 (pointer_vs_value/code/benchmark_invocation_test.go:68)	MOVQ	$0, "".i+104(SP)
	0x005e 00094 (pointer_vs_value/code/benchmark_invocation_test.go:68)	PCDATA	$0, $-2
	0x005e 00094 (pointer_vs_value/code/benchmark_invocation_test.go:68)	PCDATA	$1, $-2
	0x005e 00094 (pointer_vs_value/code/benchmark_invocation_test.go:68)	JMP	96
	0x0060 00096 (pointer_vs_value/code/benchmark_invocation_test.go:68)	PCDATA	$0, $2
	0x0060 00096 (pointer_vs_value/code/benchmark_invocation_test.go:68)	PCDATA	$1, $1
	0x0060 00096 (pointer_vs_value/code/benchmark_invocation_test.go:68)	MOVQ	"".b+544(SP), AX
	0x0068 00104 (pointer_vs_value/code/benchmark_invocation_test.go:68)	TESTB	AL, (AX)
	0x006a 00106 (pointer_vs_value/code/benchmark_invocation_test.go:68)	PCDATA	$0, $0
	0x006a 00106 (pointer_vs_value/code/benchmark_invocation_test.go:68)	MOVQ	264(AX), AX
	0x0071 00113 (pointer_vs_value/code/benchmark_invocation_test.go:68)	CMPQ	"".i+104(SP), AX
	0x0076 00118 (pointer_vs_value/code/benchmark_invocation_test.go:68)	JLT	125
	0x0078 00120 (pointer_vs_value/code/benchmark_invocation_test.go:68)	JMP	773
	0x007d 00125 (pointer_vs_value/code/benchmark_invocation_test.go:69)	PCDATA	$0, $1
	0x007d 00125 (pointer_vs_value/code/benchmark_invocation_test.go:69)	PCDATA	$1, $2
	0x007d 00125 (pointer_vs_value/code/benchmark_invocation_test.go:69)	LEAQ	"".o+336(SP), DI
	0x0085 00133 (pointer_vs_value/code/benchmark_invocation_test.go:69)	PCDATA	$0, $3
	0x0085 00133 (pointer_vs_value/code/benchmark_invocation_test.go:69)	LEAQ	"".o+432(SP), SI
	0x008d 00141 (pointer_vs_value/code/benchmark_invocation_test.go:69)	PCDATA	$0, $0
	0x008d 00141 (pointer_vs_value/code/benchmark_invocation_test.go:69)	DUFFCOPY	$812
	0x00a0 00160 (pointer_vs_value/code/benchmark_invocation_test.go:69)	XORPS	X0, X0
	0x00a3 00163 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVSD	X0, "".~r1+96(SP)
	0x00a9 00169 (pointer_vs_value/code/benchmark_invocation_test.go:69)	XORPS	X1, X1
	0x00ac 00172 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVUPS	X1, "".~r2+168(SP)
	0x00b4 00180 (<unknown line number>)	NOP
	0x00b4 00180 (pointer_vs_value/code/func.go:22)	MOVSD	"".o+360(SP), X1
	0x00bd 00189 (pointer_vs_value/code/func.go:22)	UCOMISD	X0, X1
	0x00c1 00193 (pointer_vs_value/code/func.go:22)	JNE	703
	0x00c7 00199 (pointer_vs_value/code/func.go:22)	JPC	206
	0x00c9 00201 (pointer_vs_value/code/func.go:22)	JMP	703
	0x00ce 00206 (pointer_vs_value/code/func.go:23)	PCDATA	$0, $2
	0x00ce 00206 (pointer_vs_value/code/func.go:23)	PCDATA	$1, $3
	0x00ce 00206 (pointer_vs_value/code/func.go:23)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x00d5 00213 (pointer_vs_value/code/func.go:23)	PCDATA	$0, $0
	0x00d5 00213 (pointer_vs_value/code/func.go:23)	MOVQ	AX, errors.text+200(SP)
	0x00dd 00221 (pointer_vs_value/code/func.go:23)	MOVQ	$22, errors.text+208(SP)
	0x00e9 00233 (pointer_vs_value/code/func.go:23)	XORPS	X1, X1
	0x00ec 00236 (pointer_vs_value/code/func.go:23)	MOVUPS	X1, "".~R0+184(SP)
	0x00f4 00244 (<unknown line number>)	NOP
	0x00f4 00244 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x00f4 00244 ($GOROOT/src/errors/errors.go:59)	XORPS	X1, X1
	0x00f7 00247 ($GOROOT/src/errors/errors.go:59)	MOVUPS	X1, ""..autotmp_15+280(SP)
	0x00ff 00255 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $4
	0x00ff 00255 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x00ff 00255 ($GOROOT/src/errors/errors.go:59)	LEAQ	""..autotmp_15+280(SP), CX
	0x0107 00263 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_14+152(SP)
	0x010f 00271 ($GOROOT/src/errors/errors.go:59)	TESTB	AL, (CX)
	0x0111 00273 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+208(SP), DX
	0x0119 00281 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $5
	0x0119 00281 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $1
	0x0119 00281 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+200(SP), BX
	0x0121 00289 ($GOROOT/src/errors/errors.go:59)	MOVQ	DX, ""..autotmp_15+288(SP)
	0x0129 00297 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $4
	0x0129 00297 ($GOROOT/src/errors/errors.go:59)	MOVQ	BX, ""..autotmp_15+280(SP)
	0x0131 00305 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_12+160(SP)
	0x0139 00313 (pointer_vs_value/code/func.go:23)	PCDATA	$0, $6
	0x0139 00313 (pointer_vs_value/code/func.go:23)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x0140 00320 (pointer_vs_value/code/func.go:23)	MOVQ	DX, ""..autotmp_16+264(SP)
	0x0148 00328 (pointer_vs_value/code/func.go:23)	MOVQ	CX, ""..autotmp_16+272(SP)
	0x0150 00336 (pointer_vs_value/code/func.go:23)	PCDATA	$0, $4
	0x0150 00336 (pointer_vs_value/code/func.go:23)	PCDATA	$1, $5
	0x0150 00336 (pointer_vs_value/code/func.go:23)	MOVQ	DX, "".~R0+184(SP)
	0x0158 00344 (pointer_vs_value/code/func.go:23)	PCDATA	$0, $0
	0x0158 00344 (pointer_vs_value/code/func.go:23)	MOVQ	CX, "".~R0+192(SP)
	0x0160 00352 (pointer_vs_value/code/func.go:23)	JMP	354
	0x0162 00354 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVQ	"".~R0+184(SP), CX
	0x016a 00362 (pointer_vs_value/code/benchmark_invocation_test.go:69)	PCDATA	$0, $7
	0x016a 00362 (pointer_vs_value/code/benchmark_invocation_test.go:69)	PCDATA	$1, $1
	0x016a 00362 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVQ	"".~R0+192(SP), BX
	0x0172 00370 (pointer_vs_value/code/benchmark_invocation_test.go:69)	PCDATA	$1, $6
	0x0172 00370 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVQ	CX, ""..autotmp_17+248(SP)
	0x017a 00378 (pointer_vs_value/code/benchmark_invocation_test.go:69)	PCDATA	$0, $0
	0x017a 00378 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVQ	BX, ""..autotmp_17+256(SP)
	0x0182 00386 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVSD	X0, "".~r1+96(SP)
	0x0188 00392 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVQ	""..autotmp_17+248(SP), CX
	0x0190 00400 (pointer_vs_value/code/benchmark_invocation_test.go:69)	PCDATA	$0, $7
	0x0190 00400 (pointer_vs_value/code/benchmark_invocation_test.go:69)	PCDATA	$1, $1
	0x0190 00400 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVQ	""..autotmp_17+256(SP), BX
	0x0198 00408 (pointer_vs_value/code/benchmark_invocation_test.go:69)	PCDATA	$1, $7
	0x0198 00408 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVQ	CX, "".~r2+168(SP)
	0x01a0 00416 (pointer_vs_value/code/benchmark_invocation_test.go:69)	PCDATA	$0, $0
	0x01a0 00416 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVQ	BX, "".~r2+176(SP)
	0x01a8 00424 (pointer_vs_value/code/benchmark_invocation_test.go:69)	JMP	426
	0x01aa 00426 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVSD	"".~r1+96(SP), X1
	0x01b0 00432 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVSD	X1, ""..autotmp_19+128(SP)
	0x01b9 00441 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVSD	X1, ""..autotmp_3+120(SP)
	0x01bf 00447 (pointer_vs_value/code/benchmark_invocation_test.go:69)	PCDATA	$0, $4
	0x01bf 00447 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVQ	"".~r2+176(SP), CX
	0x01c7 00455 (pointer_vs_value/code/benchmark_invocation_test.go:69)	PCDATA	$1, $1
	0x01c7 00455 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVQ	"".~r2+168(SP), BX
	0x01cf 00463 (pointer_vs_value/code/benchmark_invocation_test.go:69)	PCDATA	$1, $8
	0x01cf 00463 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVQ	BX, ""..autotmp_4+232(SP)
	0x01d7 00471 (pointer_vs_value/code/benchmark_invocation_test.go:69)	PCDATA	$0, $0
	0x01d7 00471 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVQ	CX, ""..autotmp_4+240(SP)
	0x01df 00479 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVSD	""..autotmp_3+120(SP), X1
	0x01e5 00485 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVSD	X1, "".f+112(SP)
	0x01eb 00491 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVQ	""..autotmp_4+232(SP), CX
	0x01f3 00499 (pointer_vs_value/code/benchmark_invocation_test.go:69)	PCDATA	$0, $7
	0x01f3 00499 (pointer_vs_value/code/benchmark_invocation_test.go:69)	PCDATA	$1, $1
	0x01f3 00499 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVQ	""..autotmp_4+240(SP), BX
	0x01fb 00507 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVQ	CX, "".err+216(SP)
	0x0203 00515 (pointer_vs_value/code/benchmark_invocation_test.go:69)	PCDATA	$0, $0
	0x0203 00515 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVQ	BX, "".err+224(SP)
	0x020b 00523 (<unknown line number>)	NOP
	0x020b 00523 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	CX, CX
	0x020e 00526 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	533
	0x0210 00528 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	701
	0x0215 00533 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $9
	0x0215 00533 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X1, X1
	0x0218 00536 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X1, ""..autotmp_13+296(SP)
	0x0220 00544 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x0220 00544 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x0220 00544 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_13+296(SP), CX
	0x0228 00552 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_21+144(SP)
	0x0230 00560 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x0232 00562 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $5
	0x0232 00562 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), BX
	0x0239 00569 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x0239 00569 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	BX, ""..autotmp_13+296(SP)
	0x0241 00577 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $8
	0x0241 00577 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_9(SB), SI
	0x0248 00584 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x0248 00584 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	SI, ""..autotmp_13+304(SP)
	0x0250 00592 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x0252 00594 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	596
	0x0254 00596 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_20+312(SP)
	0x025c 00604 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_20+320(SP)
	0x0268 00616 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_20+328(SP)
	0x0274 00628 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x0274 00628 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, (SP)
	0x0278 00632 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x0281 00641 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x028a 00650 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x028f 00655 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	657
	0x0291 00657 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x0299 00665 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+112(SP), X0
	0x029f 00671 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x02a7 00679 (pointer_vs_value/code/benchmark_invocation_test.go:69)	JMP	681
	0x02a9 00681 (pointer_vs_value/code/benchmark_invocation_test.go:68)	PCDATA	$0, $-2
	0x02a9 00681 (pointer_vs_value/code/benchmark_invocation_test.go:68)	PCDATA	$1, $-2
	0x02a9 00681 (pointer_vs_value/code/benchmark_invocation_test.go:68)	JMP	683
	0x02ab 00683 (pointer_vs_value/code/benchmark_invocation_test.go:68)	PCDATA	$0, $0
	0x02ab 00683 (pointer_vs_value/code/benchmark_invocation_test.go:68)	PCDATA	$1, $1
	0x02ab 00683 (pointer_vs_value/code/benchmark_invocation_test.go:68)	MOVQ	"".i+104(SP), AX
	0x02b0 00688 (pointer_vs_value/code/benchmark_invocation_test.go:68)	INCQ	AX
	0x02b3 00691 (pointer_vs_value/code/benchmark_invocation_test.go:68)	MOVQ	AX, "".i+104(SP)
	0x02b8 00696 (pointer_vs_value/code/benchmark_invocation_test.go:68)	JMP	96
	0x02bd 00701 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x02bd 00701 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x02bd 00701 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	657
	0x02bf 00703 (pointer_vs_value/code/func.go:25)	PCDATA	$0, $0
	0x02bf 00703 (pointer_vs_value/code/func.go:25)	PCDATA	$1, $2
	0x02bf 00703 (pointer_vs_value/code/func.go:25)	MOVQ	"".o+336(SP), CX
	0x02c7 00711 (pointer_vs_value/code/func.go:25)	XORPS	X1, X1
	0x02ca 00714 (pointer_vs_value/code/func.go:25)	CVTSQ2SD	CX, X1
	0x02cf 00719 (pointer_vs_value/code/func.go:25)	PCDATA	$1, $1
	0x02cf 00719 (pointer_vs_value/code/func.go:25)	DIVSD	"".o+360(SP), X1
	0x02d8 00728 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVSD	X1, ""..autotmp_18+136(SP)
	0x02e1 00737 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVSD	X1, "".~r1+96(SP)
	0x02e7 00743 (pointer_vs_value/code/benchmark_invocation_test.go:69)	PCDATA	$1, $7
	0x02e7 00743 (pointer_vs_value/code/benchmark_invocation_test.go:69)	XORPS	X1, X1
	0x02ea 00746 (pointer_vs_value/code/benchmark_invocation_test.go:69)	MOVUPS	X1, "".~r2+168(SP)
	0x02f2 00754 (pointer_vs_value/code/benchmark_invocation_test.go:69)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x02f9 00761 (pointer_vs_value/code/benchmark_invocation_test.go:69)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x0300 00768 (pointer_vs_value/code/benchmark_invocation_test.go:69)	JMP	426
	0x0305 00773 (<unknown line number>)	PCDATA	$0, $-2
	0x0305 00773 (<unknown line number>)	PCDATA	$1, $-2
	0x0305 00773 (<unknown line number>)	MOVQ	528(SP), BP
	0x030d 00781 (<unknown line number>)	ADDQ	$536, SP
	0x0314 00788 (<unknown line number>)	RET
	0x0315 00789 (<unknown line number>)	NOP
	0x0315 00789 (pointer_vs_value/code/benchmark_invocation_test.go:64)	PCDATA	$1, $-1
	0x0315 00789 (pointer_vs_value/code/benchmark_invocation_test.go:64)	PCDATA	$0, $-1
	0x0315 00789 (pointer_vs_value/code/benchmark_invocation_test.go:64)	CALL	runtime.morestack_noctxt(SB)
	0x031a 00794 (pointer_vs_value/code/benchmark_invocation_test.go:64)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 68 fe ff  eH..%....H..$h..
	0x0010 ff 48 3b 41 10 0f 86 fa 02 00 00 48 81 ec 18 02  .H;A.......H....
	0x0020 00 00 48 89 ac 24 10 02 00 00 48 8d ac 24 10 02  ..H..$....H..$..
	0x0030 00 00 e8 00 00 00 00 48 8d bc 24 b0 01 00 00 48  .......H..$....H
	0x0040 89 e6 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00  ..H.l$.H.l$.....
	0x0050 00 48 8b 6d 00 48 c7 44 24 68 00 00 00 00 eb 00  .H.m.H.D$h......
	0x0060 48 8b 84 24 20 02 00 00 84 00 48 8b 80 08 01 00  H..$ .....H.....
	0x0070 00 48 39 44 24 68 7c 05 e9 88 02 00 00 48 8d bc  .H9D$h|......H..
	0x0080 24 50 01 00 00 48 8d b4 24 b0 01 00 00 48 89 6c  $P...H..$....H.l
	0x0090 24 f0 48 8d 6c 24 f0 e8 00 00 00 00 48 8b 6d 00  $.H.l$......H.m.
	0x00a0 0f 57 c0 f2 0f 11 44 24 60 0f 57 c9 0f 11 8c 24  .W....D$`.W....$
	0x00b0 a8 00 00 00 f2 0f 10 8c 24 68 01 00 00 66 0f 2e  ........$h...f..
	0x00c0 c8 0f 85 f8 01 00 00 7b 05 e9 f1 01 00 00 48 8d  .......{......H.
	0x00d0 05 00 00 00 00 48 89 84 24 c8 00 00 00 48 c7 84  .....H..$....H..
	0x00e0 24 d0 00 00 00 16 00 00 00 0f 57 c9 0f 11 8c 24  $.........W....$
	0x00f0 b8 00 00 00 0f 57 c9 0f 11 8c 24 18 01 00 00 48  .....W....$....H
	0x0100 8d 8c 24 18 01 00 00 48 89 8c 24 98 00 00 00 84  ..$....H..$.....
	0x0110 01 48 8b 94 24 d0 00 00 00 48 8b 9c 24 c8 00 00  .H..$....H..$...
	0x0120 00 48 89 94 24 20 01 00 00 48 89 9c 24 18 01 00  .H..$ ...H..$...
	0x0130 00 48 89 8c 24 a0 00 00 00 48 8d 15 00 00 00 00  .H..$....H......
	0x0140 48 89 94 24 08 01 00 00 48 89 8c 24 10 01 00 00  H..$....H..$....
	0x0150 48 89 94 24 b8 00 00 00 48 89 8c 24 c0 00 00 00  H..$....H..$....
	0x0160 eb 00 48 8b 8c 24 b8 00 00 00 48 8b 9c 24 c0 00  ..H..$....H..$..
	0x0170 00 00 48 89 8c 24 f8 00 00 00 48 89 9c 24 00 01  ..H..$....H..$..
	0x0180 00 00 f2 0f 11 44 24 60 48 8b 8c 24 f8 00 00 00  .....D$`H..$....
	0x0190 48 8b 9c 24 00 01 00 00 48 89 8c 24 a8 00 00 00  H..$....H..$....
	0x01a0 48 89 9c 24 b0 00 00 00 eb 00 f2 0f 10 4c 24 60  H..$.........L$`
	0x01b0 f2 0f 11 8c 24 80 00 00 00 f2 0f 11 4c 24 78 48  ....$.......L$xH
	0x01c0 8b 8c 24 b0 00 00 00 48 8b 9c 24 a8 00 00 00 48  ..$....H..$....H
	0x01d0 89 9c 24 e8 00 00 00 48 89 8c 24 f0 00 00 00 f2  ..$....H..$.....
	0x01e0 0f 10 4c 24 78 f2 0f 11 4c 24 70 48 8b 8c 24 e8  ..L$x...L$pH..$.
	0x01f0 00 00 00 48 8b 9c 24 f0 00 00 00 48 89 8c 24 d8  ...H..$....H..$.
	0x0200 00 00 00 48 89 9c 24 e0 00 00 00 48 85 c9 75 05  ...H..$....H..u.
	0x0210 e9 a8 00 00 00 0f 57 c9 0f 11 8c 24 28 01 00 00  ......W....$(...
	0x0220 48 8d 8c 24 28 01 00 00 48 89 8c 24 90 00 00 00  H..$(...H..$....
	0x0230 84 01 48 8d 1d 00 00 00 00 48 89 9c 24 28 01 00  ..H......H..$(..
	0x0240 00 48 8d 35 00 00 00 00 48 89 b4 24 30 01 00 00  .H.5....H..$0...
	0x0250 84 01 eb 00 48 89 8c 24 38 01 00 00 48 c7 84 24  ....H..$8...H..$
	0x0260 40 01 00 00 01 00 00 00 48 c7 84 24 48 01 00 00  @.......H..$H...
	0x0270 01 00 00 00 48 89 0c 24 48 c7 44 24 08 01 00 00  ....H..$H.D$....
	0x0280 00 48 c7 44 24 10 01 00 00 00 e8 00 00 00 00 eb  .H.D$...........
	0x0290 00 f2 0f 10 05 00 00 00 00 f2 0f 58 44 24 70 f2  ...........XD$p.
	0x02a0 0f 11 05 00 00 00 00 eb 00 eb 00 48 8b 44 24 68  ...........H.D$h
	0x02b0 48 ff c0 48 89 44 24 68 e9 a3 fd ff ff eb d2 48  H..H.D$h.......H
	0x02c0 8b 8c 24 50 01 00 00 0f 57 c9 f2 48 0f 2a c9 f2  ..$P....W..H.*..
	0x02d0 0f 5e 8c 24 68 01 00 00 f2 0f 11 8c 24 88 00 00  .^.$h.......$...
	0x02e0 00 f2 0f 11 4c 24 60 0f 57 c9 0f 11 8c 24 a8 00  ....L$`.W....$..
	0x02f0 00 00 48 8d 05 00 00 00 00 48 8d 15 00 00 00 00  ..H......H......
	0x0300 e9 a5 fe ff ff 48 8b ac 24 10 02 00 00 48 81 c4  .....H..$....H..
	0x0310 18 02 00 00 c3 e8 00 00 00 00 e9 e1 fc ff ff     ...............
	rel 5+4 t=16 TLS+0
	rel 51+4 t=8 "".createMini+0
	rel 77+4 t=8 runtime.duffcopy+812
	rel 152+4 t=8 runtime.duffcopy+812
	rel 209+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 316+4 t=15 go.itab.*errors.errorString,error+0
	rel 565+4 t=15 type.string+0
	rel 580+4 t=15 ""..stmp_9+0
	rel 651+4 t=8 log.Fatal+0
	rel 661+4 t=15 "".F+0
	rel 675+4 t=15 "".F+0
	rel 757+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 764+4 t=15 go.itab.*errors.errorString,error+0
	rel 790+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkMiniP_Calc STEXT size=805 args=0x8 locals=0x1c8
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:73)	TEXT	"".BenchmarkMiniP_Calc(SB), ABIInternal, $456-8
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:73)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_invocation_test.go:73)	LEAQ	-328(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_invocation_test.go:73)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_invocation_test.go:73)	JLS	795
	0x001b 00027 (pointer_vs_value/code/benchmark_invocation_test.go:73)	SUBQ	$456, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_invocation_test.go:73)	MOVQ	BP, 448(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_invocation_test.go:73)	LEAQ	448(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:73)	FUNCDATA	$0, gclocals·d1d75e5bd153dd111cd8f1bc3c181073(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:73)	FUNCDATA	$1, gclocals·2d77827c72aac2ee2a2aa6f5489d6f1c(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:73)	FUNCDATA	$2, gclocals·b0e64627e016c4f22ade44055db6bcad(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:73)	FUNCDATA	$3, "".BenchmarkMiniP_Calc.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:75)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:75)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:75)	CALL	"".createMini(SB)
	0x0037 00055 (pointer_vs_value/code/benchmark_invocation_test.go:75)	PCDATA	$0, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_invocation_test.go:75)	PCDATA	$1, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_invocation_test.go:75)	LEAQ	"".o+352(SP), DI
	0x003f 00063 (pointer_vs_value/code/benchmark_invocation_test.go:75)	MOVQ	SP, SI
	0x0042 00066 (pointer_vs_value/code/benchmark_invocation_test.go:75)	PCDATA	$0, $0
	0x0042 00066 (pointer_vs_value/code/benchmark_invocation_test.go:75)	DUFFCOPY	$812
	0x0055 00085 (pointer_vs_value/code/benchmark_invocation_test.go:77)	MOVQ	$0, "".i+104(SP)
	0x005e 00094 (pointer_vs_value/code/benchmark_invocation_test.go:77)	PCDATA	$0, $-2
	0x005e 00094 (pointer_vs_value/code/benchmark_invocation_test.go:77)	PCDATA	$1, $-2
	0x005e 00094 (pointer_vs_value/code/benchmark_invocation_test.go:77)	JMP	96
	0x0060 00096 (pointer_vs_value/code/benchmark_invocation_test.go:77)	PCDATA	$0, $2
	0x0060 00096 (pointer_vs_value/code/benchmark_invocation_test.go:77)	PCDATA	$1, $1
	0x0060 00096 (pointer_vs_value/code/benchmark_invocation_test.go:77)	MOVQ	"".b+464(SP), AX
	0x0068 00104 (pointer_vs_value/code/benchmark_invocation_test.go:77)	TESTB	AL, (AX)
	0x006a 00106 (pointer_vs_value/code/benchmark_invocation_test.go:77)	PCDATA	$0, $0
	0x006a 00106 (pointer_vs_value/code/benchmark_invocation_test.go:77)	MOVQ	264(AX), AX
	0x0071 00113 (pointer_vs_value/code/benchmark_invocation_test.go:77)	CMPQ	"".i+104(SP), AX
	0x0076 00118 (pointer_vs_value/code/benchmark_invocation_test.go:77)	JLT	125
	0x0078 00120 (pointer_vs_value/code/benchmark_invocation_test.go:77)	JMP	779
	0x007d 00125 (pointer_vs_value/code/benchmark_invocation_test.go:78)	PCDATA	$0, $2
	0x007d 00125 (pointer_vs_value/code/benchmark_invocation_test.go:78)	LEAQ	"".o+352(SP), AX
	0x0085 00133 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVQ	AX, ""..autotmp_14+168(SP)
	0x008d 00141 (pointer_vs_value/code/benchmark_invocation_test.go:78)	PCDATA	$0, $0
	0x008d 00141 (pointer_vs_value/code/benchmark_invocation_test.go:78)	PCDATA	$1, $2
	0x008d 00141 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVQ	AX, "".o+144(SP)
	0x0095 00149 (pointer_vs_value/code/benchmark_invocation_test.go:78)	XORPS	X0, X0
	0x0098 00152 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVSD	X0, "".~r1+96(SP)
	0x009e 00158 (pointer_vs_value/code/benchmark_invocation_test.go:78)	XORPS	X1, X1
	0x00a1 00161 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVUPS	X1, "".~r2+184(SP)
	0x00a9 00169 (pointer_vs_value/code/func.go:66)	PCDATA	$0, $2
	0x00a9 00169 (pointer_vs_value/code/func.go:66)	MOVQ	"".o+144(SP), AX
	0x00b1 00177 (pointer_vs_value/code/func.go:66)	TESTB	AL, (AX)
	0x00b3 00179 (<unknown line number>)	NOP
	0x00b3 00179 (pointer_vs_value/code/func.go:66)	PCDATA	$0, $0
	0x00b3 00179 (pointer_vs_value/code/func.go:66)	MOVSD	24(AX), X1
	0x00b8 00184 (pointer_vs_value/code/func.go:66)	UCOMISD	X0, X1
	0x00bc 00188 (pointer_vs_value/code/func.go:66)	JNE	698
	0x00c2 00194 (pointer_vs_value/code/func.go:66)	JPC	201
	0x00c4 00196 (pointer_vs_value/code/func.go:66)	JMP	698
	0x00c9 00201 (pointer_vs_value/code/func.go:67)	PCDATA	$0, $2
	0x00c9 00201 (pointer_vs_value/code/func.go:67)	PCDATA	$1, $3
	0x00c9 00201 (pointer_vs_value/code/func.go:67)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x00d0 00208 (pointer_vs_value/code/func.go:67)	PCDATA	$0, $0
	0x00d0 00208 (pointer_vs_value/code/func.go:67)	MOVQ	AX, errors.text+216(SP)
	0x00d8 00216 (pointer_vs_value/code/func.go:67)	MOVQ	$22, errors.text+224(SP)
	0x00e4 00228 (pointer_vs_value/code/func.go:67)	XORPS	X1, X1
	0x00e7 00231 (pointer_vs_value/code/func.go:67)	MOVUPS	X1, "".~R0+200(SP)
	0x00ef 00239 (<unknown line number>)	NOP
	0x00ef 00239 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x00ef 00239 ($GOROOT/src/errors/errors.go:59)	XORPS	X1, X1
	0x00f2 00242 ($GOROOT/src/errors/errors.go:59)	MOVUPS	X1, ""..autotmp_16+296(SP)
	0x00fa 00250 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x00fa 00250 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x00fa 00250 ($GOROOT/src/errors/errors.go:59)	LEAQ	""..autotmp_16+296(SP), CX
	0x0102 00258 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_15+160(SP)
	0x010a 00266 ($GOROOT/src/errors/errors.go:59)	TESTB	AL, (CX)
	0x010c 00268 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+224(SP), DX
	0x0114 00276 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $4
	0x0114 00276 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $1
	0x0114 00276 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+216(SP), BX
	0x011c 00284 ($GOROOT/src/errors/errors.go:59)	MOVQ	DX, ""..autotmp_16+304(SP)
	0x0124 00292 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x0124 00292 ($GOROOT/src/errors/errors.go:59)	MOVQ	BX, ""..autotmp_16+296(SP)
	0x012c 00300 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_12+176(SP)
	0x0134 00308 (pointer_vs_value/code/func.go:67)	PCDATA	$0, $5
	0x0134 00308 (pointer_vs_value/code/func.go:67)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x013b 00315 (pointer_vs_value/code/func.go:67)	MOVQ	DX, ""..autotmp_17+280(SP)
	0x0143 00323 (pointer_vs_value/code/func.go:67)	MOVQ	CX, ""..autotmp_17+288(SP)
	0x014b 00331 (pointer_vs_value/code/func.go:67)	PCDATA	$0, $3
	0x014b 00331 (pointer_vs_value/code/func.go:67)	PCDATA	$1, $5
	0x014b 00331 (pointer_vs_value/code/func.go:67)	MOVQ	DX, "".~R0+200(SP)
	0x0153 00339 (pointer_vs_value/code/func.go:67)	PCDATA	$0, $0
	0x0153 00339 (pointer_vs_value/code/func.go:67)	MOVQ	CX, "".~R0+208(SP)
	0x015b 00347 (pointer_vs_value/code/func.go:67)	JMP	349
	0x015d 00349 (pointer_vs_value/code/benchmark_invocation_test.go:78)	PCDATA	$0, $3
	0x015d 00349 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVQ	"".~R0+208(SP), CX
	0x0165 00357 (pointer_vs_value/code/benchmark_invocation_test.go:78)	PCDATA	$1, $1
	0x0165 00357 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVQ	"".~R0+200(SP), BX
	0x016d 00365 (pointer_vs_value/code/benchmark_invocation_test.go:78)	PCDATA	$1, $6
	0x016d 00365 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVQ	BX, ""..autotmp_18+264(SP)
	0x0175 00373 (pointer_vs_value/code/benchmark_invocation_test.go:78)	PCDATA	$0, $0
	0x0175 00373 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVQ	CX, ""..autotmp_18+272(SP)
	0x017d 00381 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVSD	X0, "".~r1+96(SP)
	0x0183 00387 (pointer_vs_value/code/benchmark_invocation_test.go:78)	PCDATA	$0, $3
	0x0183 00387 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVQ	""..autotmp_18+272(SP), CX
	0x018b 00395 (pointer_vs_value/code/benchmark_invocation_test.go:78)	PCDATA	$1, $1
	0x018b 00395 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVQ	""..autotmp_18+264(SP), BX
	0x0193 00403 (pointer_vs_value/code/benchmark_invocation_test.go:78)	PCDATA	$1, $7
	0x0193 00403 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVQ	BX, "".~r2+184(SP)
	0x019b 00411 (pointer_vs_value/code/benchmark_invocation_test.go:78)	PCDATA	$0, $0
	0x019b 00411 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVQ	CX, "".~r2+192(SP)
	0x01a3 00419 (pointer_vs_value/code/benchmark_invocation_test.go:78)	JMP	421
	0x01a5 00421 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVSD	"".~r1+96(SP), X1
	0x01ab 00427 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVSD	X1, ""..autotmp_20+128(SP)
	0x01b4 00436 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVSD	X1, ""..autotmp_3+120(SP)
	0x01ba 00442 (pointer_vs_value/code/benchmark_invocation_test.go:78)	PCDATA	$0, $3
	0x01ba 00442 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVQ	"".~r2+192(SP), CX
	0x01c2 00450 (pointer_vs_value/code/benchmark_invocation_test.go:78)	PCDATA	$1, $1
	0x01c2 00450 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVQ	"".~r2+184(SP), BX
	0x01ca 00458 (pointer_vs_value/code/benchmark_invocation_test.go:78)	PCDATA	$1, $8
	0x01ca 00458 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVQ	BX, ""..autotmp_4+248(SP)
	0x01d2 00466 (pointer_vs_value/code/benchmark_invocation_test.go:78)	PCDATA	$0, $0
	0x01d2 00466 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVQ	CX, ""..autotmp_4+256(SP)
	0x01da 00474 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVSD	""..autotmp_3+120(SP), X1
	0x01e0 00480 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVSD	X1, "".f+112(SP)
	0x01e6 00486 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVQ	""..autotmp_4+248(SP), CX
	0x01ee 00494 (pointer_vs_value/code/benchmark_invocation_test.go:78)	PCDATA	$0, $6
	0x01ee 00494 (pointer_vs_value/code/benchmark_invocation_test.go:78)	PCDATA	$1, $1
	0x01ee 00494 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVQ	""..autotmp_4+256(SP), BX
	0x01f6 00502 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVQ	CX, "".err+232(SP)
	0x01fe 00510 (pointer_vs_value/code/benchmark_invocation_test.go:78)	PCDATA	$0, $0
	0x01fe 00510 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVQ	BX, "".err+240(SP)
	0x0206 00518 (<unknown line number>)	NOP
	0x0206 00518 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	CX, CX
	0x0209 00521 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	528
	0x020b 00523 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	696
	0x0210 00528 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $9
	0x0210 00528 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X1, X1
	0x0213 00531 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X1, ""..autotmp_13+312(SP)
	0x021b 00539 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x021b 00539 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x021b 00539 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_13+312(SP), CX
	0x0223 00547 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_22+152(SP)
	0x022b 00555 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x022d 00557 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x022d 00557 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), BX
	0x0234 00564 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x0234 00564 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	BX, ""..autotmp_13+312(SP)
	0x023c 00572 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $7
	0x023c 00572 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_10(SB), SI
	0x0243 00579 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x0243 00579 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	SI, ""..autotmp_13+320(SP)
	0x024b 00587 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x024d 00589 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	591
	0x024f 00591 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_21+328(SP)
	0x0257 00599 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_21+336(SP)
	0x0263 00611 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_21+344(SP)
	0x026f 00623 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x026f 00623 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, (SP)
	0x0273 00627 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x027c 00636 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x0285 00645 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x028a 00650 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	652
	0x028c 00652 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x0294 00660 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+112(SP), X0
	0x029a 00666 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x02a2 00674 (pointer_vs_value/code/benchmark_invocation_test.go:78)	JMP	676
	0x02a4 00676 (pointer_vs_value/code/benchmark_invocation_test.go:77)	PCDATA	$0, $-2
	0x02a4 00676 (pointer_vs_value/code/benchmark_invocation_test.go:77)	PCDATA	$1, $-2
	0x02a4 00676 (pointer_vs_value/code/benchmark_invocation_test.go:77)	JMP	678
	0x02a6 00678 (pointer_vs_value/code/benchmark_invocation_test.go:77)	PCDATA	$0, $0
	0x02a6 00678 (pointer_vs_value/code/benchmark_invocation_test.go:77)	PCDATA	$1, $1
	0x02a6 00678 (pointer_vs_value/code/benchmark_invocation_test.go:77)	MOVQ	"".i+104(SP), AX
	0x02ab 00683 (pointer_vs_value/code/benchmark_invocation_test.go:77)	INCQ	AX
	0x02ae 00686 (pointer_vs_value/code/benchmark_invocation_test.go:77)	MOVQ	AX, "".i+104(SP)
	0x02b3 00691 (pointer_vs_value/code/benchmark_invocation_test.go:77)	JMP	96
	0x02b8 00696 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x02b8 00696 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x02b8 00696 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	652
	0x02ba 00698 (pointer_vs_value/code/func.go:69)	PCDATA	$0, $3
	0x02ba 00698 (pointer_vs_value/code/func.go:69)	PCDATA	$1, $2
	0x02ba 00698 (pointer_vs_value/code/func.go:69)	MOVQ	"".o+144(SP), CX
	0x02c2 00706 (pointer_vs_value/code/func.go:69)	TESTB	AL, (CX)
	0x02c4 00708 (pointer_vs_value/code/func.go:69)	PCDATA	$0, $4
	0x02c4 00708 (pointer_vs_value/code/func.go:69)	PCDATA	$1, $1
	0x02c4 00708 (pointer_vs_value/code/func.go:69)	MOVQ	"".o+144(SP), BX
	0x02cc 00716 (pointer_vs_value/code/func.go:69)	TESTB	AL, (BX)
	0x02ce 00718 (pointer_vs_value/code/func.go:69)	PCDATA	$0, $6
	0x02ce 00718 (pointer_vs_value/code/func.go:69)	MOVQ	(CX), CX
	0x02d1 00721 (pointer_vs_value/code/func.go:69)	XORPS	X1, X1
	0x02d4 00724 (pointer_vs_value/code/func.go:69)	CVTSQ2SD	CX, X1
	0x02d9 00729 (pointer_vs_value/code/func.go:69)	PCDATA	$0, $0
	0x02d9 00729 (pointer_vs_value/code/func.go:69)	DIVSD	24(BX), X1
	0x02de 00734 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVSD	X1, ""..autotmp_19+136(SP)
	0x02e7 00743 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVSD	X1, "".~r1+96(SP)
	0x02ed 00749 (pointer_vs_value/code/benchmark_invocation_test.go:78)	PCDATA	$1, $7
	0x02ed 00749 (pointer_vs_value/code/benchmark_invocation_test.go:78)	XORPS	X1, X1
	0x02f0 00752 (pointer_vs_value/code/benchmark_invocation_test.go:78)	MOVUPS	X1, "".~r2+184(SP)
	0x02f8 00760 (pointer_vs_value/code/benchmark_invocation_test.go:78)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x02ff 00767 (pointer_vs_value/code/benchmark_invocation_test.go:78)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x0306 00774 (pointer_vs_value/code/benchmark_invocation_test.go:78)	JMP	421
	0x030b 00779 (<unknown line number>)	PCDATA	$0, $-2
	0x030b 00779 (<unknown line number>)	PCDATA	$1, $-2
	0x030b 00779 (<unknown line number>)	MOVQ	448(SP), BP
	0x0313 00787 (<unknown line number>)	ADDQ	$456, SP
	0x031a 00794 (<unknown line number>)	RET
	0x031b 00795 (<unknown line number>)	NOP
	0x031b 00795 (pointer_vs_value/code/benchmark_invocation_test.go:73)	PCDATA	$1, $-1
	0x031b 00795 (pointer_vs_value/code/benchmark_invocation_test.go:73)	PCDATA	$0, $-1
	0x031b 00795 (pointer_vs_value/code/benchmark_invocation_test.go:73)	CALL	runtime.morestack_noctxt(SB)
	0x0320 00800 (pointer_vs_value/code/benchmark_invocation_test.go:73)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 b8 fe ff  eH..%....H..$...
	0x0010 ff 48 3b 41 10 0f 86 00 03 00 00 48 81 ec c8 01  .H;A.......H....
	0x0020 00 00 48 89 ac 24 c0 01 00 00 48 8d ac 24 c0 01  ..H..$....H..$..
	0x0030 00 00 e8 00 00 00 00 48 8d bc 24 60 01 00 00 48  .......H..$`...H
	0x0040 89 e6 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00  ..H.l$.H.l$.....
	0x0050 00 48 8b 6d 00 48 c7 44 24 68 00 00 00 00 eb 00  .H.m.H.D$h......
	0x0060 48 8b 84 24 d0 01 00 00 84 00 48 8b 80 08 01 00  H..$......H.....
	0x0070 00 48 39 44 24 68 7c 05 e9 8e 02 00 00 48 8d 84  .H9D$h|......H..
	0x0080 24 60 01 00 00 48 89 84 24 a8 00 00 00 48 89 84  $`...H..$....H..
	0x0090 24 90 00 00 00 0f 57 c0 f2 0f 11 44 24 60 0f 57  $.....W....D$`.W
	0x00a0 c9 0f 11 8c 24 b8 00 00 00 48 8b 84 24 90 00 00  ....$....H..$...
	0x00b0 00 84 00 f2 0f 10 48 18 66 0f 2e c8 0f 85 f8 01  ......H.f.......
	0x00c0 00 00 7b 05 e9 f1 01 00 00 48 8d 05 00 00 00 00  ..{......H......
	0x00d0 48 89 84 24 d8 00 00 00 48 c7 84 24 e0 00 00 00  H..$....H..$....
	0x00e0 16 00 00 00 0f 57 c9 0f 11 8c 24 c8 00 00 00 0f  .....W....$.....
	0x00f0 57 c9 0f 11 8c 24 28 01 00 00 48 8d 8c 24 28 01  W....$(...H..$(.
	0x0100 00 00 48 89 8c 24 a0 00 00 00 84 01 48 8b 94 24  ..H..$......H..$
	0x0110 e0 00 00 00 48 8b 9c 24 d8 00 00 00 48 89 94 24  ....H..$....H..$
	0x0120 30 01 00 00 48 89 9c 24 28 01 00 00 48 89 8c 24  0...H..$(...H..$
	0x0130 b0 00 00 00 48 8d 15 00 00 00 00 48 89 94 24 18  ....H......H..$.
	0x0140 01 00 00 48 89 8c 24 20 01 00 00 48 89 94 24 c8  ...H..$ ...H..$.
	0x0150 00 00 00 48 89 8c 24 d0 00 00 00 eb 00 48 8b 8c  ...H..$......H..
	0x0160 24 d0 00 00 00 48 8b 9c 24 c8 00 00 00 48 89 9c  $....H..$....H..
	0x0170 24 08 01 00 00 48 89 8c 24 10 01 00 00 f2 0f 11  $....H..$.......
	0x0180 44 24 60 48 8b 8c 24 10 01 00 00 48 8b 9c 24 08  D$`H..$....H..$.
	0x0190 01 00 00 48 89 9c 24 b8 00 00 00 48 89 8c 24 c0  ...H..$....H..$.
	0x01a0 00 00 00 eb 00 f2 0f 10 4c 24 60 f2 0f 11 8c 24  ........L$`....$
	0x01b0 80 00 00 00 f2 0f 11 4c 24 78 48 8b 8c 24 c0 00  .......L$xH..$..
	0x01c0 00 00 48 8b 9c 24 b8 00 00 00 48 89 9c 24 f8 00  ..H..$....H..$..
	0x01d0 00 00 48 89 8c 24 00 01 00 00 f2 0f 10 4c 24 78  ..H..$.......L$x
	0x01e0 f2 0f 11 4c 24 70 48 8b 8c 24 f8 00 00 00 48 8b  ...L$pH..$....H.
	0x01f0 9c 24 00 01 00 00 48 89 8c 24 e8 00 00 00 48 89  .$....H..$....H.
	0x0200 9c 24 f0 00 00 00 48 85 c9 75 05 e9 a8 00 00 00  .$....H..u......
	0x0210 0f 57 c9 0f 11 8c 24 38 01 00 00 48 8d 8c 24 38  .W....$8...H..$8
	0x0220 01 00 00 48 89 8c 24 98 00 00 00 84 01 48 8d 1d  ...H..$......H..
	0x0230 00 00 00 00 48 89 9c 24 38 01 00 00 48 8d 35 00  ....H..$8...H.5.
	0x0240 00 00 00 48 89 b4 24 40 01 00 00 84 01 eb 00 48  ...H..$@.......H
	0x0250 89 8c 24 48 01 00 00 48 c7 84 24 50 01 00 00 01  ..$H...H..$P....
	0x0260 00 00 00 48 c7 84 24 58 01 00 00 01 00 00 00 48  ...H..$X.......H
	0x0270 89 0c 24 48 c7 44 24 08 01 00 00 00 48 c7 44 24  ..$H.D$.....H.D$
	0x0280 10 01 00 00 00 e8 00 00 00 00 eb 00 f2 0f 10 05  ................
	0x0290 00 00 00 00 f2 0f 58 44 24 70 f2 0f 11 05 00 00  ......XD$p......
	0x02a0 00 00 eb 00 eb 00 48 8b 44 24 68 48 ff c0 48 89  ......H.D$hH..H.
	0x02b0 44 24 68 e9 a8 fd ff ff eb d2 48 8b 8c 24 90 00  D$h.......H..$..
	0x02c0 00 00 84 01 48 8b 9c 24 90 00 00 00 84 03 48 8b  ....H..$......H.
	0x02d0 09 0f 57 c9 f2 48 0f 2a c9 f2 0f 5e 4b 18 f2 0f  ..W..H.*...^K...
	0x02e0 11 8c 24 88 00 00 00 f2 0f 11 4c 24 60 0f 57 c9  ..$.......L$`.W.
	0x02f0 0f 11 8c 24 b8 00 00 00 48 8d 05 00 00 00 00 48  ...$....H......H
	0x0300 8d 15 00 00 00 00 e9 9a fe ff ff 48 8b ac 24 c0  ...........H..$.
	0x0310 01 00 00 48 81 c4 c8 01 00 00 c3 e8 00 00 00 00  ...H............
	0x0320 e9 db fc ff ff                                   .....
	rel 5+4 t=16 TLS+0
	rel 51+4 t=8 "".createMini+0
	rel 77+4 t=8 runtime.duffcopy+812
	rel 204+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 311+4 t=15 go.itab.*errors.errorString,error+0
	rel 560+4 t=15 type.string+0
	rel 575+4 t=15 ""..stmp_10+0
	rel 646+4 t=8 log.Fatal+0
	rel 656+4 t=15 "".F+0
	rel 670+4 t=15 "".F+0
	rel 763+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 770+4 t=15 go.itab.*errors.errorString,error+0
	rel 796+4 t=8 runtime.morestack_noctxt+0
type..hash."".mini STEXT dupok size=373 args=0x18 locals=0x60
	0x0000 00000 (<autogenerated>:1)	TEXT	type..hash."".mini(SB), DUPOK|ABIInternal, $96-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	363
	0x0013 00019 (<autogenerated>:1)	SUBQ	$96, SP
	0x0017 00023 (<autogenerated>:1)	MOVQ	BP, 88(SP)
	0x001c 00028 (<autogenerated>:1)	LEAQ	88(SP), BP
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$1, gclocals·b54c265fcfcc2aae36a147f86c7f459f(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0021 00033 (<autogenerated>:1)	PCDATA	$0, $0
	0x0021 00033 (<autogenerated>:1)	PCDATA	$1, $0
	0x0021 00033 (<autogenerated>:1)	MOVQ	$0, "".~r2+120(SP)
	0x002a 00042 (<autogenerated>:1)	PCDATA	$0, $1
	0x002a 00042 (<autogenerated>:1)	MOVQ	"".p+104(SP), AX
	0x002f 00047 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_3+80(SP)
	0x0034 00052 (<autogenerated>:1)	PCDATA	$0, $0
	0x0034 00052 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0038 00056 (<autogenerated>:1)	MOVQ	"".h+112(SP), AX
	0x003d 00061 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0042 00066 (<autogenerated>:1)	MOVQ	$24, 16(SP)
	0x004b 00075 (<autogenerated>:1)	CALL	runtime.memhash(SB)
	0x0050 00080 (<autogenerated>:1)	MOVQ	24(SP), AX
	0x0055 00085 (<autogenerated>:1)	MOVQ	AX, "".h+112(SP)
	0x005a 00090 (<autogenerated>:1)	PCDATA	$0, $1
	0x005a 00090 (<autogenerated>:1)	MOVQ	"".p+104(SP), AX
	0x005f 00095 (<autogenerated>:1)	ADDQ	$24, AX
	0x0063 00099 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_4+72(SP)
	0x0068 00104 (<autogenerated>:1)	PCDATA	$0, $0
	0x0068 00104 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x006c 00108 (<autogenerated>:1)	MOVQ	"".h+112(SP), AX
	0x0071 00113 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0076 00118 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x007b 00123 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0080 00128 (<autogenerated>:1)	MOVQ	AX, "".h+112(SP)
	0x0085 00133 (<autogenerated>:1)	PCDATA	$0, $1
	0x0085 00133 (<autogenerated>:1)	MOVQ	"".p+104(SP), AX
	0x008a 00138 (<autogenerated>:1)	ADDQ	$32, AX
	0x008e 00142 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_5+64(SP)
	0x0093 00147 (<autogenerated>:1)	PCDATA	$0, $0
	0x0093 00147 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0097 00151 (<autogenerated>:1)	MOVQ	"".h+112(SP), AX
	0x009c 00156 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x00a1 00161 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x00a6 00166 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x00ab 00171 (<autogenerated>:1)	MOVQ	AX, "".h+112(SP)
	0x00b0 00176 (<autogenerated>:1)	PCDATA	$0, $1
	0x00b0 00176 (<autogenerated>:1)	MOVQ	"".p+104(SP), AX
	0x00b5 00181 (<autogenerated>:1)	ADDQ	$40, AX
	0x00b9 00185 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_6+56(SP)
	0x00be 00190 (<autogenerated>:1)	PCDATA	$0, $0
	0x00be 00190 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x00c2 00194 (<autogenerated>:1)	MOVQ	"".h+112(SP), AX
	0x00c7 00199 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x00cc 00204 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x00d1 00209 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x00d6 00214 (<autogenerated>:1)	MOVQ	AX, "".h+112(SP)
	0x00db 00219 (<autogenerated>:1)	PCDATA	$0, $1
	0x00db 00219 (<autogenerated>:1)	MOVQ	"".p+104(SP), AX
	0x00e0 00224 (<autogenerated>:1)	ADDQ	$48, AX
	0x00e4 00228 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_7+48(SP)
	0x00e9 00233 (<autogenerated>:1)	PCDATA	$0, $0
	0x00e9 00233 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x00ed 00237 (<autogenerated>:1)	MOVQ	"".h+112(SP), AX
	0x00f2 00242 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x00f7 00247 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x00fc 00252 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0101 00257 (<autogenerated>:1)	MOVQ	AX, "".h+112(SP)
	0x0106 00262 (<autogenerated>:1)	PCDATA	$0, $1
	0x0106 00262 (<autogenerated>:1)	MOVQ	"".p+104(SP), AX
	0x010b 00267 (<autogenerated>:1)	ADDQ	$64, AX
	0x010f 00271 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_8+40(SP)
	0x0114 00276 (<autogenerated>:1)	PCDATA	$0, $0
	0x0114 00276 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0118 00280 (<autogenerated>:1)	MOVQ	"".h+112(SP), AX
	0x011d 00285 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0122 00290 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x0127 00295 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x012c 00300 (<autogenerated>:1)	MOVQ	AX, "".h+112(SP)
	0x0131 00305 (<autogenerated>:1)	PCDATA	$0, $1
	0x0131 00305 (<autogenerated>:1)	PCDATA	$1, $1
	0x0131 00305 (<autogenerated>:1)	MOVQ	"".p+104(SP), AX
	0x0136 00310 (<autogenerated>:1)	ADDQ	$80, AX
	0x013a 00314 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_9+32(SP)
	0x013f 00319 (<autogenerated>:1)	PCDATA	$0, $0
	0x013f 00319 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0143 00323 (<autogenerated>:1)	MOVQ	"".h+112(SP), AX
	0x0148 00328 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x014d 00333 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x0152 00338 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0157 00343 (<autogenerated>:1)	MOVQ	AX, "".h+112(SP)
	0x015c 00348 (<autogenerated>:1)	MOVQ	AX, "".~r2+120(SP)
	0x0161 00353 (<autogenerated>:1)	MOVQ	88(SP), BP
	0x0166 00358 (<autogenerated>:1)	ADDQ	$96, SP
	0x016a 00362 (<autogenerated>:1)	RET
	0x016b 00363 (<autogenerated>:1)	NOP
	0x016b 00363 (<autogenerated>:1)	PCDATA	$1, $-1
	0x016b 00363 (<autogenerated>:1)	PCDATA	$0, $-1
	0x016b 00363 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0170 00368 (<autogenerated>:1)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 58  eH..%....H;a...X
	0x0010 01 00 00 48 83 ec 60 48 89 6c 24 58 48 8d 6c 24  ...H..`H.l$XH.l$
	0x0020 58 48 c7 44 24 78 00 00 00 00 48 8b 44 24 68 48  XH.D$x....H.D$hH
	0x0030 89 44 24 50 48 89 04 24 48 8b 44 24 70 48 89 44  .D$PH..$H.D$pH.D
	0x0040 24 08 48 c7 44 24 10 18 00 00 00 e8 00 00 00 00  $.H.D$..........
	0x0050 48 8b 44 24 18 48 89 44 24 70 48 8b 44 24 68 48  H.D$.H.D$pH.D$hH
	0x0060 83 c0 18 48 89 44 24 48 48 89 04 24 48 8b 44 24  ...H.D$HH..$H.D$
	0x0070 70 48 89 44 24 08 e8 00 00 00 00 48 8b 44 24 10  pH.D$......H.D$.
	0x0080 48 89 44 24 70 48 8b 44 24 68 48 83 c0 20 48 89  H.D$pH.D$hH.. H.
	0x0090 44 24 40 48 89 04 24 48 8b 44 24 70 48 89 44 24  D$@H..$H.D$pH.D$
	0x00a0 08 e8 00 00 00 00 48 8b 44 24 10 48 89 44 24 70  ......H.D$.H.D$p
	0x00b0 48 8b 44 24 68 48 83 c0 28 48 89 44 24 38 48 89  H.D$hH..(H.D$8H.
	0x00c0 04 24 48 8b 44 24 70 48 89 44 24 08 e8 00 00 00  .$H.D$pH.D$.....
	0x00d0 00 48 8b 44 24 10 48 89 44 24 70 48 8b 44 24 68  .H.D$.H.D$pH.D$h
	0x00e0 48 83 c0 30 48 89 44 24 30 48 89 04 24 48 8b 44  H..0H.D$0H..$H.D
	0x00f0 24 70 48 89 44 24 08 e8 00 00 00 00 48 8b 44 24  $pH.D$......H.D$
	0x0100 10 48 89 44 24 70 48 8b 44 24 68 48 83 c0 40 48  .H.D$pH.D$hH..@H
	0x0110 89 44 24 28 48 89 04 24 48 8b 44 24 70 48 89 44  .D$(H..$H.D$pH.D
	0x0120 24 08 e8 00 00 00 00 48 8b 44 24 10 48 89 44 24  $......H.D$.H.D$
	0x0130 70 48 8b 44 24 68 48 83 c0 50 48 89 44 24 20 48  pH.D$hH..PH.D$ H
	0x0140 89 04 24 48 8b 44 24 70 48 89 44 24 08 e8 00 00  ..$H.D$pH.D$....
	0x0150 00 00 48 8b 44 24 10 48 89 44 24 70 48 89 44 24  ..H.D$.H.D$pH.D$
	0x0160 78 48 8b 6c 24 58 48 83 c4 60 c3 e8 00 00 00 00  xH.l$XH..`......
	0x0170 e9 8b fe ff ff                                   .....
	rel 5+4 t=16 TLS+0
	rel 76+4 t=8 runtime.memhash+0
	rel 119+4 t=8 runtime.f64hash+0
	rel 162+4 t=8 runtime.f64hash+0
	rel 205+4 t=8 runtime.f64hash+0
	rel 248+4 t=8 runtime.strhash+0
	rel 291+4 t=8 runtime.strhash+0
	rel 334+4 t=8 runtime.strhash+0
	rel 364+4 t=8 runtime.morestack_noctxt+0
type..eq."".mini STEXT dupok size=776 args=0x18 locals=0xa0
	0x0000 00000 (<autogenerated>:1)	TEXT	type..eq."".mini(SB), DUPOK|ABIInternal, $160-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	LEAQ	-32(SP), AX
	0x000e 00014 (<autogenerated>:1)	CMPQ	AX, 16(CX)
	0x0012 00018 (<autogenerated>:1)	JLS	766
	0x0018 00024 (<autogenerated>:1)	SUBQ	$160, SP
	0x001f 00031 (<autogenerated>:1)	MOVQ	BP, 152(SP)
	0x0027 00039 (<autogenerated>:1)	LEAQ	152(SP), BP
	0x002f 00047 (<autogenerated>:1)	FUNCDATA	$0, gclocals·ddea470032bda55fc25e5a11523bb20c(SB)
	0x002f 00047 (<autogenerated>:1)	FUNCDATA	$1, gclocals·63b75562f3b670c3090c6571e2389bc2(SB)
	0x002f 00047 (<autogenerated>:1)	FUNCDATA	$2, gclocals·6e8d7ea4abad763909b26991048ee1fe(SB)
	0x002f 00047 (<autogenerated>:1)	PCDATA	$0, $0
	0x002f 00047 (<autogenerated>:1)	PCDATA	$1, $0
	0x002f 00047 (<autogenerated>:1)	MOVB	$0, "".~r2+184(SP)
	0x0037 00055 (<autogenerated>:1)	PCDATA	$0, $1
	0x0037 00055 (<autogenerated>:1)	MOVQ	"".p+168(SP), AX
	0x003f 00063 (<autogenerated>:1)	PCDATA	$0, $0
	0x003f 00063 (<autogenerated>:1)	PCDATA	$1, $1
	0x003f 00063 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_10+48(SP)
	0x0044 00068 (<autogenerated>:1)	PCDATA	$0, $1
	0x0044 00068 (<autogenerated>:1)	MOVQ	"".q+176(SP), AX
	0x004c 00076 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_11+40(SP)
	0x0051 00081 (<autogenerated>:1)	PCDATA	$0, $2
	0x0051 00081 (<autogenerated>:1)	PCDATA	$1, $0
	0x0051 00081 (<autogenerated>:1)	MOVQ	""..autotmp_10+48(SP), CX
	0x0056 00086 (<autogenerated>:1)	PCDATA	$0, $1
	0x0056 00086 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x005a 00090 (<autogenerated>:1)	PCDATA	$0, $0
	0x005a 00090 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x005f 00095 (<autogenerated>:1)	MOVQ	$24, 16(SP)
	0x0068 00104 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x006d 00109 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x0072 00114 (<autogenerated>:1)	MOVB	AL, ""..autotmp_9+33(SP)
	0x0076 00118 (<autogenerated>:1)	MOVB	AL, ""..autotmp_8+34(SP)
	0x007a 00122 (<autogenerated>:1)	TESTB	AL, AL
	0x007c 00124 (<autogenerated>:1)	JNE	131
	0x007e 00126 (<autogenerated>:1)	JMP	761
	0x0083 00131 (<autogenerated>:1)	PCDATA	$0, $1
	0x0083 00131 (<autogenerated>:1)	MOVQ	"".p+168(SP), AX
	0x008b 00139 (<autogenerated>:1)	PCDATA	$0, $0
	0x008b 00139 (<autogenerated>:1)	MOVSD	24(AX), X0
	0x0090 00144 (<autogenerated>:1)	PCDATA	$0, $1
	0x0090 00144 (<autogenerated>:1)	MOVQ	"".q+176(SP), AX
	0x0098 00152 (<autogenerated>:1)	PCDATA	$0, $0
	0x0098 00152 (<autogenerated>:1)	MOVSD	24(AX), X1
	0x009d 00157 (<autogenerated>:1)	UCOMISD	X1, X0
	0x00a1 00161 (<autogenerated>:1)	SETEQ	CL
	0x00a4 00164 (<autogenerated>:1)	SETPC	AL
	0x00a7 00167 (<autogenerated>:1)	ANDL	AX, CX
	0x00a9 00169 (<autogenerated>:1)	MOVB	CL, ""..autotmp_8+34(SP)
	0x00ad 00173 (<autogenerated>:1)	JMP	175
	0x00af 00175 (<autogenerated>:1)	MOVBLZX	""..autotmp_8+34(SP), AX
	0x00b4 00180 (<autogenerated>:1)	MOVB	AL, ""..autotmp_7+35(SP)
	0x00b8 00184 (<autogenerated>:1)	TESTB	AL, AL
	0x00ba 00186 (<autogenerated>:1)	JNE	193
	0x00bc 00188 (<autogenerated>:1)	JMP	756
	0x00c1 00193 (<autogenerated>:1)	PCDATA	$0, $1
	0x00c1 00193 (<autogenerated>:1)	MOVQ	"".p+168(SP), AX
	0x00c9 00201 (<autogenerated>:1)	PCDATA	$0, $0
	0x00c9 00201 (<autogenerated>:1)	MOVSD	32(AX), X0
	0x00ce 00206 (<autogenerated>:1)	PCDATA	$0, $1
	0x00ce 00206 (<autogenerated>:1)	MOVQ	"".q+176(SP), AX
	0x00d6 00214 (<autogenerated>:1)	PCDATA	$0, $0
	0x00d6 00214 (<autogenerated>:1)	MOVSD	32(AX), X1
	0x00db 00219 (<autogenerated>:1)	UCOMISD	X1, X0
	0x00df 00223 (<autogenerated>:1)	SETEQ	CL
	0x00e2 00226 (<autogenerated>:1)	SETPC	AL
	0x00e5 00229 (<autogenerated>:1)	ANDL	AX, CX
	0x00e7 00231 (<autogenerated>:1)	MOVB	CL, ""..autotmp_7+35(SP)
	0x00eb 00235 (<autogenerated>:1)	JMP	237
	0x00ed 00237 (<autogenerated>:1)	MOVBLZX	""..autotmp_7+35(SP), AX
	0x00f2 00242 (<autogenerated>:1)	MOVB	AL, ""..autotmp_6+36(SP)
	0x00f6 00246 (<autogenerated>:1)	TESTB	AL, AL
	0x00f8 00248 (<autogenerated>:1)	JNE	255
	0x00fa 00250 (<autogenerated>:1)	JMP	751
	0x00ff 00255 (<autogenerated>:1)	PCDATA	$0, $1
	0x00ff 00255 (<autogenerated>:1)	MOVQ	"".p+168(SP), AX
	0x0107 00263 (<autogenerated>:1)	PCDATA	$0, $0
	0x0107 00263 (<autogenerated>:1)	MOVSD	40(AX), X0
	0x010c 00268 (<autogenerated>:1)	PCDATA	$0, $1
	0x010c 00268 (<autogenerated>:1)	MOVQ	"".q+176(SP), AX
	0x0114 00276 (<autogenerated>:1)	PCDATA	$0, $0
	0x0114 00276 (<autogenerated>:1)	MOVSD	40(AX), X1
	0x0119 00281 (<autogenerated>:1)	UCOMISD	X1, X0
	0x011d 00285 (<autogenerated>:1)	SETEQ	CL
	0x0120 00288 (<autogenerated>:1)	SETPC	AL
	0x0123 00291 (<autogenerated>:1)	ANDL	AX, CX
	0x0125 00293 (<autogenerated>:1)	MOVB	CL, ""..autotmp_6+36(SP)
	0x0129 00297 (<autogenerated>:1)	JMP	299
	0x012b 00299 (<autogenerated>:1)	MOVBLZX	""..autotmp_6+36(SP), AX
	0x0130 00304 (<autogenerated>:1)	MOVB	AL, ""..autotmp_5+37(SP)
	0x0134 00308 (<autogenerated>:1)	TESTB	AL, AL
	0x0136 00310 (<autogenerated>:1)	JNE	317
	0x0138 00312 (<autogenerated>:1)	JMP	746
	0x013d 00317 (<autogenerated>:1)	PCDATA	$0, $1
	0x013d 00317 (<autogenerated>:1)	MOVQ	"".p+168(SP), AX
	0x0145 00325 (<autogenerated>:1)	MOVQ	56(AX), CX
	0x0149 00329 (<autogenerated>:1)	MOVQ	48(AX), AX
	0x014d 00333 (<autogenerated>:1)	PCDATA	$0, $0
	0x014d 00333 (<autogenerated>:1)	PCDATA	$1, $2
	0x014d 00333 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_12+136(SP)
	0x0155 00341 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_12+144(SP)
	0x015d 00349 (<autogenerated>:1)	PCDATA	$0, $1
	0x015d 00349 (<autogenerated>:1)	MOVQ	"".q+176(SP), AX
	0x0165 00357 (<autogenerated>:1)	MOVQ	56(AX), CX
	0x0169 00361 (<autogenerated>:1)	MOVQ	48(AX), AX
	0x016d 00365 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_13+120(SP)
	0x0172 00370 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_13+128(SP)
	0x017a 00378 (<autogenerated>:1)	CMPQ	""..autotmp_12+144(SP), CX
	0x0182 00386 (<autogenerated>:1)	SETEQ	CL
	0x0185 00389 (<autogenerated>:1)	JEQ	396
	0x0187 00391 (<autogenerated>:1)	JMP	739
	0x018c 00396 (<autogenerated>:1)	PCDATA	$0, $2
	0x018c 00396 (<autogenerated>:1)	MOVQ	""..autotmp_12+136(SP), CX
	0x0194 00404 (<autogenerated>:1)	PCDATA	$0, $1
	0x0194 00404 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0198 00408 (<autogenerated>:1)	PCDATA	$0, $0
	0x0198 00408 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x019d 00413 (<autogenerated>:1)	PCDATA	$1, $0
	0x019d 00413 (<autogenerated>:1)	MOVQ	""..autotmp_12+144(SP), AX
	0x01a5 00421 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x01aa 00426 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x01af 00431 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x01b4 00436 (<autogenerated>:1)	JMP	438
	0x01b6 00438 (<autogenerated>:1)	MOVB	AL, ""..autotmp_5+37(SP)
	0x01ba 00442 (<autogenerated>:1)	JMP	444
	0x01bc 00444 (<autogenerated>:1)	MOVBLZX	""..autotmp_5+37(SP), AX
	0x01c1 00449 (<autogenerated>:1)	MOVB	AL, ""..autotmp_4+38(SP)
	0x01c5 00453 (<autogenerated>:1)	TESTB	AL, AL
	0x01c7 00455 (<autogenerated>:1)	JNE	462
	0x01c9 00457 (<autogenerated>:1)	JMP	734
	0x01ce 00462 (<autogenerated>:1)	PCDATA	$0, $1
	0x01ce 00462 (<autogenerated>:1)	MOVQ	"".p+168(SP), AX
	0x01d6 00470 (<autogenerated>:1)	MOVQ	72(AX), CX
	0x01da 00474 (<autogenerated>:1)	MOVQ	64(AX), AX
	0x01de 00478 (<autogenerated>:1)	PCDATA	$0, $0
	0x01de 00478 (<autogenerated>:1)	PCDATA	$1, $3
	0x01de 00478 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_14+104(SP)
	0x01e3 00483 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_14+112(SP)
	0x01e8 00488 (<autogenerated>:1)	PCDATA	$0, $1
	0x01e8 00488 (<autogenerated>:1)	MOVQ	"".q+176(SP), AX
	0x01f0 00496 (<autogenerated>:1)	MOVQ	72(AX), CX
	0x01f4 00500 (<autogenerated>:1)	MOVQ	64(AX), AX
	0x01f8 00504 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_15+88(SP)
	0x01fd 00509 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_15+96(SP)
	0x0202 00514 (<autogenerated>:1)	CMPQ	""..autotmp_14+112(SP), CX
	0x0207 00519 (<autogenerated>:1)	SETEQ	CL
	0x020a 00522 (<autogenerated>:1)	JEQ	529
	0x020c 00524 (<autogenerated>:1)	JMP	727
	0x0211 00529 (<autogenerated>:1)	PCDATA	$0, $2
	0x0211 00529 (<autogenerated>:1)	MOVQ	""..autotmp_14+104(SP), CX
	0x0216 00534 (<autogenerated>:1)	PCDATA	$0, $1
	0x0216 00534 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x021a 00538 (<autogenerated>:1)	PCDATA	$0, $0
	0x021a 00538 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x021f 00543 (<autogenerated>:1)	PCDATA	$1, $0
	0x021f 00543 (<autogenerated>:1)	MOVQ	""..autotmp_14+112(SP), AX
	0x0224 00548 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x0229 00553 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x022e 00558 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x0233 00563 (<autogenerated>:1)	JMP	565
	0x0235 00565 (<autogenerated>:1)	MOVB	AL, ""..autotmp_4+38(SP)
	0x0239 00569 (<autogenerated>:1)	JMP	571
	0x023b 00571 (<autogenerated>:1)	MOVBLZX	""..autotmp_4+38(SP), AX
	0x0240 00576 (<autogenerated>:1)	MOVB	AL, ""..autotmp_3+39(SP)
	0x0244 00580 (<autogenerated>:1)	TESTB	AL, AL
	0x0246 00582 (<autogenerated>:1)	JNE	589
	0x0248 00584 (<autogenerated>:1)	JMP	725
	0x024d 00589 (<autogenerated>:1)	PCDATA	$0, $1
	0x024d 00589 (<autogenerated>:1)	PCDATA	$1, $4
	0x024d 00589 (<autogenerated>:1)	MOVQ	"".p+168(SP), AX
	0x0255 00597 (<autogenerated>:1)	PCDATA	$0, $2
	0x0255 00597 (<autogenerated>:1)	MOVQ	80(AX), CX
	0x0259 00601 (<autogenerated>:1)	PCDATA	$0, $3
	0x0259 00601 (<autogenerated>:1)	MOVQ	88(AX), AX
	0x025d 00605 (<autogenerated>:1)	PCDATA	$0, $0
	0x025d 00605 (<autogenerated>:1)	PCDATA	$1, $5
	0x025d 00605 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_16+72(SP)
	0x0262 00610 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_16+80(SP)
	0x0267 00615 (<autogenerated>:1)	PCDATA	$0, $1
	0x0267 00615 (<autogenerated>:1)	PCDATA	$1, $6
	0x0267 00615 (<autogenerated>:1)	MOVQ	"".q+176(SP), AX
	0x026f 00623 (<autogenerated>:1)	PCDATA	$0, $2
	0x026f 00623 (<autogenerated>:1)	MOVQ	80(AX), CX
	0x0273 00627 (<autogenerated>:1)	PCDATA	$0, $3
	0x0273 00627 (<autogenerated>:1)	MOVQ	88(AX), AX
	0x0277 00631 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_17+56(SP)
	0x027c 00636 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_17+64(SP)
	0x0281 00641 (<autogenerated>:1)	CMPQ	""..autotmp_16+80(SP), AX
	0x0286 00646 (<autogenerated>:1)	SETEQ	AL
	0x0289 00649 (<autogenerated>:1)	JEQ	653
	0x028b 00651 (<autogenerated>:1)	JMP	723
	0x028d 00653 (<autogenerated>:1)	PCDATA	$0, $2
	0x028d 00653 (<autogenerated>:1)	MOVQ	""..autotmp_16+72(SP), AX
	0x0292 00658 (<autogenerated>:1)	PCDATA	$0, $3
	0x0292 00658 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0296 00662 (<autogenerated>:1)	PCDATA	$0, $0
	0x0296 00662 (<autogenerated>:1)	MOVQ	CX, 8(SP)
	0x029b 00667 (<autogenerated>:1)	PCDATA	$1, $7
	0x029b 00667 (<autogenerated>:1)	MOVQ	""..autotmp_16+80(SP), AX
	0x02a0 00672 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x02a5 00677 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x02aa 00682 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x02af 00687 (<autogenerated>:1)	JMP	689
	0x02b1 00689 (<autogenerated>:1)	MOVB	AL, ""..autotmp_3+39(SP)
	0x02b5 00693 (<autogenerated>:1)	JMP	695
	0x02b7 00695 (<autogenerated>:1)	MOVBLZX	""..autotmp_3+39(SP), AX
	0x02bc 00700 (<autogenerated>:1)	MOVB	AL, "".~r2+184(SP)
	0x02c3 00707 (<autogenerated>:1)	MOVQ	152(SP), BP
	0x02cb 00715 (<autogenerated>:1)	ADDQ	$160, SP
	0x02d2 00722 (<autogenerated>:1)	RET
	0x02d3 00723 (<autogenerated>:1)	PCDATA	$0, $-2
	0x02d3 00723 (<autogenerated>:1)	PCDATA	$1, $-2
	0x02d3 00723 (<autogenerated>:1)	JMP	689
	0x02d5 00725 (<autogenerated>:1)	JMP	695
	0x02d7 00727 (<autogenerated>:1)	PCDATA	$0, $0
	0x02d7 00727 (<autogenerated>:1)	PCDATA	$1, $0
	0x02d7 00727 (<autogenerated>:1)	MOVL	CX, AX
	0x02d9 00729 (<autogenerated>:1)	JMP	565
	0x02de 00734 (<autogenerated>:1)	PCDATA	$0, $-2
	0x02de 00734 (<autogenerated>:1)	PCDATA	$1, $-2
	0x02de 00734 (<autogenerated>:1)	JMP	571
	0x02e3 00739 (<autogenerated>:1)	PCDATA	$0, $0
	0x02e3 00739 (<autogenerated>:1)	PCDATA	$1, $0
	0x02e3 00739 (<autogenerated>:1)	MOVL	CX, AX
	0x02e5 00741 (<autogenerated>:1)	JMP	438
	0x02ea 00746 (<autogenerated>:1)	PCDATA	$0, $-2
	0x02ea 00746 (<autogenerated>:1)	PCDATA	$1, $-2
	0x02ea 00746 (<autogenerated>:1)	JMP	444
	0x02ef 00751 (<autogenerated>:1)	JMP	299
	0x02f4 00756 (<autogenerated>:1)	JMP	237
	0x02f9 00761 (<autogenerated>:1)	JMP	175
	0x02fe 00766 (<autogenerated>:1)	NOP
	0x02fe 00766 (<autogenerated>:1)	PCDATA	$1, $-1
	0x02fe 00766 (<autogenerated>:1)	PCDATA	$0, $-1
	0x02fe 00766 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0303 00771 (<autogenerated>:1)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 44 24 e0 48 3b  eH..%....H.D$.H;
	0x0010 41 10 0f 86 e6 02 00 00 48 81 ec a0 00 00 00 48  A.......H......H
	0x0020 89 ac 24 98 00 00 00 48 8d ac 24 98 00 00 00 c6  ..$....H..$.....
	0x0030 84 24 b8 00 00 00 00 48 8b 84 24 a8 00 00 00 48  .$.....H..$....H
	0x0040 89 44 24 30 48 8b 84 24 b0 00 00 00 48 89 44 24  .D$0H..$....H.D$
	0x0050 28 48 8b 4c 24 30 48 89 0c 24 48 89 44 24 08 48  (H.L$0H..$H.D$.H
	0x0060 c7 44 24 10 18 00 00 00 e8 00 00 00 00 0f b6 44  .D$............D
	0x0070 24 18 88 44 24 21 88 44 24 22 84 c0 75 05 e9 76  $..D$!.D$"..u..v
	0x0080 02 00 00 48 8b 84 24 a8 00 00 00 f2 0f 10 40 18  ...H..$.......@.
	0x0090 48 8b 84 24 b0 00 00 00 f2 0f 10 48 18 66 0f 2e  H..$.......H.f..
	0x00a0 c1 0f 94 c1 0f 9b c0 21 c1 88 4c 24 22 eb 00 0f  .......!..L$"...
	0x00b0 b6 44 24 22 88 44 24 23 84 c0 75 05 e9 33 02 00  .D$".D$#..u..3..
	0x00c0 00 48 8b 84 24 a8 00 00 00 f2 0f 10 40 20 48 8b  .H..$.......@ H.
	0x00d0 84 24 b0 00 00 00 f2 0f 10 48 20 66 0f 2e c1 0f  .$.......H f....
	0x00e0 94 c1 0f 9b c0 21 c1 88 4c 24 23 eb 00 0f b6 44  .....!..L$#....D
	0x00f0 24 23 88 44 24 24 84 c0 75 05 e9 f0 01 00 00 48  $#.D$$..u......H
	0x0100 8b 84 24 a8 00 00 00 f2 0f 10 40 28 48 8b 84 24  ..$.......@(H..$
	0x0110 b0 00 00 00 f2 0f 10 48 28 66 0f 2e c1 0f 94 c1  .......H(f......
	0x0120 0f 9b c0 21 c1 88 4c 24 24 eb 00 0f b6 44 24 24  ...!..L$$....D$$
	0x0130 88 44 24 25 84 c0 75 05 e9 ad 01 00 00 48 8b 84  .D$%..u......H..
	0x0140 24 a8 00 00 00 48 8b 48 38 48 8b 40 30 48 89 84  $....H.H8H.@0H..
	0x0150 24 88 00 00 00 48 89 8c 24 90 00 00 00 48 8b 84  $....H..$....H..
	0x0160 24 b0 00 00 00 48 8b 48 38 48 8b 40 30 48 89 44  $....H.H8H.@0H.D
	0x0170 24 78 48 89 8c 24 80 00 00 00 48 39 8c 24 90 00  $xH..$....H9.$..
	0x0180 00 00 0f 94 c1 74 05 e9 57 01 00 00 48 8b 8c 24  .....t..W...H..$
	0x0190 88 00 00 00 48 89 0c 24 48 89 44 24 08 48 8b 84  ....H..$H.D$.H..
	0x01a0 24 90 00 00 00 48 89 44 24 10 e8 00 00 00 00 0f  $....H.D$.......
	0x01b0 b6 44 24 18 eb 00 88 44 24 25 eb 00 0f b6 44 24  .D$....D$%....D$
	0x01c0 25 88 44 24 26 84 c0 75 05 e9 10 01 00 00 48 8b  %.D$&..u......H.
	0x01d0 84 24 a8 00 00 00 48 8b 48 48 48 8b 40 40 48 89  .$....H.HHH.@@H.
	0x01e0 44 24 68 48 89 4c 24 70 48 8b 84 24 b0 00 00 00  D$hH.L$pH..$....
	0x01f0 48 8b 48 48 48 8b 40 40 48 89 44 24 58 48 89 4c  H.HHH.@@H.D$XH.L
	0x0200 24 60 48 39 4c 24 70 0f 94 c1 74 05 e9 c6 00 00  $`H9L$p...t.....
	0x0210 00 48 8b 4c 24 68 48 89 0c 24 48 89 44 24 08 48  .H.L$hH..$H.D$.H
	0x0220 8b 44 24 70 48 89 44 24 10 e8 00 00 00 00 0f b6  .D$pH.D$........
	0x0230 44 24 18 eb 00 88 44 24 26 eb 00 0f b6 44 24 26  D$....D$&....D$&
	0x0240 88 44 24 27 84 c0 75 05 e9 88 00 00 00 48 8b 84  .D$'..u......H..
	0x0250 24 a8 00 00 00 48 8b 48 50 48 8b 40 58 48 89 4c  $....H.HPH.@XH.L
	0x0260 24 48 48 89 44 24 50 48 8b 84 24 b0 00 00 00 48  $HH.D$PH..$....H
	0x0270 8b 48 50 48 8b 40 58 48 89 4c 24 38 48 89 44 24  .HPH.@XH.L$8H.D$
	0x0280 40 48 39 44 24 50 0f 94 c0 74 02 eb 46 48 8b 44  @H9D$P...t..FH.D
	0x0290 24 48 48 89 04 24 48 89 4c 24 08 48 8b 44 24 50  $HH..$H.L$.H.D$P
	0x02a0 48 89 44 24 10 e8 00 00 00 00 0f b6 44 24 18 eb  H.D$........D$..
	0x02b0 00 88 44 24 27 eb 00 0f b6 44 24 27 88 84 24 b8  ..D$'....D$'..$.
	0x02c0 00 00 00 48 8b ac 24 98 00 00 00 48 81 c4 a0 00  ...H..$....H....
	0x02d0 00 00 c3 eb dc eb e0 89 c8 e9 57 ff ff ff e9 58  ..........W....X
	0x02e0 ff ff ff 89 c8 e9 cc fe ff ff e9 cd fe ff ff e9  ................
	0x02f0 37 fe ff ff e9 f4 fd ff ff e9 b1 fd ff ff e8 00  7...............
	0x0300 00 00 00 e9 f8 fc ff ff                          ........
	rel 5+4 t=16 TLS+0
	rel 105+4 t=8 runtime.memequal+0
	rel 427+4 t=8 runtime.memequal+0
	rel 554+4 t=8 runtime.memequal+0
	rel 678+4 t=8 runtime.memequal+0
	rel 767+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkMiniIfc_Calc STEXT size=630 args=0x8 locals=0x158
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:82)	TEXT	"".BenchmarkMiniIfc_Calc(SB), ABIInternal, $344-8
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:82)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_invocation_test.go:82)	LEAQ	-216(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_invocation_test.go:82)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_invocation_test.go:82)	JLS	620
	0x001b 00027 (pointer_vs_value/code/benchmark_invocation_test.go:82)	SUBQ	$344, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_invocation_test.go:82)	MOVQ	BP, 336(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_invocation_test.go:82)	LEAQ	336(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:82)	FUNCDATA	$0, gclocals·73de87619823f6747f37fd4c152f5b42(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:82)	FUNCDATA	$1, gclocals·7bca89e3bb189ba87f0830382ea54ec7(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:82)	FUNCDATA	$2, gclocals·437d171b9e6f84c40356e01ae02b710f(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:82)	FUNCDATA	$3, "".BenchmarkMiniIfc_Calc.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:84)	PCDATA	$0, $1
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:84)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:84)	LEAQ	type."".mini(SB), AX
	0x0039 00057 (pointer_vs_value/code/benchmark_invocation_test.go:84)	PCDATA	$0, $0
	0x0039 00057 (pointer_vs_value/code/benchmark_invocation_test.go:84)	MOVQ	AX, (SP)
	0x003d 00061 (pointer_vs_value/code/benchmark_invocation_test.go:84)	CALL	runtime.newobject(SB)
	0x0042 00066 (pointer_vs_value/code/benchmark_invocation_test.go:84)	PCDATA	$0, $1
	0x0042 00066 (pointer_vs_value/code/benchmark_invocation_test.go:84)	MOVQ	8(SP), AX
	0x0047 00071 (pointer_vs_value/code/benchmark_invocation_test.go:84)	PCDATA	$0, $0
	0x0047 00071 (pointer_vs_value/code/benchmark_invocation_test.go:84)	PCDATA	$1, $1
	0x0047 00071 (pointer_vs_value/code/benchmark_invocation_test.go:84)	MOVQ	AX, "".&o+144(SP)
	0x004f 00079 (pointer_vs_value/code/benchmark_invocation_test.go:84)	CALL	"".createMini(SB)
	0x0054 00084 (pointer_vs_value/code/benchmark_invocation_test.go:84)	PCDATA	$0, $2
	0x0054 00084 (pointer_vs_value/code/benchmark_invocation_test.go:84)	MOVQ	"".&o+144(SP), DI
	0x005c 00092 (pointer_vs_value/code/benchmark_invocation_test.go:84)	PCDATA	$0, $-2
	0x005c 00092 (pointer_vs_value/code/benchmark_invocation_test.go:84)	PCDATA	$1, $-2
	0x005c 00092 (pointer_vs_value/code/benchmark_invocation_test.go:84)	CMPL	runtime.writeBarrier(SB), $0
	0x0063 00099 (pointer_vs_value/code/benchmark_invocation_test.go:84)	JEQ	106
	0x0065 00101 (pointer_vs_value/code/benchmark_invocation_test.go:84)	JMP	548
	0x006a 00106 (pointer_vs_value/code/benchmark_invocation_test.go:84)	MOVQ	SP, SI
	0x006d 00109 (pointer_vs_value/code/benchmark_invocation_test.go:84)	DUFFCOPY	$812
	0x0080 00128 (pointer_vs_value/code/benchmark_invocation_test.go:84)	JMP	130
	0x0082 00130 (pointer_vs_value/code/benchmark_invocation_test.go:86)	PCDATA	$0, $0
	0x0082 00130 (pointer_vs_value/code/benchmark_invocation_test.go:86)	PCDATA	$1, $1
	0x0082 00130 (pointer_vs_value/code/benchmark_invocation_test.go:86)	MOVQ	$0, "".i+96(SP)
	0x008b 00139 (pointer_vs_value/code/benchmark_invocation_test.go:86)	JMP	141
	0x008d 00141 (pointer_vs_value/code/benchmark_invocation_test.go:86)	PCDATA	$0, $1
	0x008d 00141 (pointer_vs_value/code/benchmark_invocation_test.go:86)	MOVQ	"".b+352(SP), AX
	0x0095 00149 (pointer_vs_value/code/benchmark_invocation_test.go:86)	TESTB	AL, (AX)
	0x0097 00151 (pointer_vs_value/code/benchmark_invocation_test.go:86)	PCDATA	$0, $0
	0x0097 00151 (pointer_vs_value/code/benchmark_invocation_test.go:86)	MOVQ	264(AX), AX
	0x009e 00158 (pointer_vs_value/code/benchmark_invocation_test.go:86)	CMPQ	"".i+96(SP), AX
	0x00a3 00163 (pointer_vs_value/code/benchmark_invocation_test.go:86)	JLT	170
	0x00a5 00165 (pointer_vs_value/code/benchmark_invocation_test.go:86)	JMP	532
	0x00aa 00170 (pointer_vs_value/code/benchmark_invocation_test.go:87)	PCDATA	$0, $1
	0x00aa 00170 (pointer_vs_value/code/benchmark_invocation_test.go:87)	MOVQ	"".&o+144(SP), AX
	0x00b2 00178 (pointer_vs_value/code/benchmark_invocation_test.go:87)	PCDATA	$0, $0
	0x00b2 00178 (pointer_vs_value/code/benchmark_invocation_test.go:87)	PCDATA	$1, $2
	0x00b2 00178 (pointer_vs_value/code/benchmark_invocation_test.go:87)	MOVQ	AX, ""..autotmp_8+128(SP)
	0x00ba 00186 (pointer_vs_value/code/benchmark_invocation_test.go:87)	XORPS	X0, X0
	0x00bd 00189 (pointer_vs_value/code/benchmark_invocation_test.go:87)	MOVUPS	X0, ""..autotmp_10+200(SP)
	0x00c5 00197 (pointer_vs_value/code/benchmark_invocation_test.go:87)	PCDATA	$0, $1
	0x00c5 00197 (pointer_vs_value/code/benchmark_invocation_test.go:87)	PCDATA	$1, $1
	0x00c5 00197 (pointer_vs_value/code/benchmark_invocation_test.go:87)	MOVQ	""..autotmp_8+128(SP), AX
	0x00cd 00205 (pointer_vs_value/code/benchmark_invocation_test.go:87)	PCDATA	$0, $3
	0x00cd 00205 (pointer_vs_value/code/benchmark_invocation_test.go:87)	LEAQ	go.itab.*"".mini,"".obj(SB), CX
	0x00d4 00212 (pointer_vs_value/code/benchmark_invocation_test.go:87)	PCDATA	$0, $1
	0x00d4 00212 (pointer_vs_value/code/benchmark_invocation_test.go:87)	MOVQ	CX, (SP)
	0x00d8 00216 (pointer_vs_value/code/benchmark_invocation_test.go:87)	PCDATA	$0, $0
	0x00d8 00216 (pointer_vs_value/code/benchmark_invocation_test.go:87)	MOVQ	AX, 8(SP)
	0x00dd 00221 (pointer_vs_value/code/benchmark_invocation_test.go:87)	CALL	"".calcIfc(SB)
	0x00e2 00226 (pointer_vs_value/code/benchmark_invocation_test.go:87)	MOVSD	16(SP), X0
	0x00e8 00232 (pointer_vs_value/code/benchmark_invocation_test.go:87)	MOVSD	X0, ""..autotmp_9+112(SP)
	0x00ee 00238 (pointer_vs_value/code/benchmark_invocation_test.go:87)	PCDATA	$0, $1
	0x00ee 00238 (pointer_vs_value/code/benchmark_invocation_test.go:87)	MOVQ	32(SP), AX
	0x00f3 00243 (pointer_vs_value/code/benchmark_invocation_test.go:87)	MOVQ	24(SP), CX
	0x00f8 00248 (pointer_vs_value/code/benchmark_invocation_test.go:87)	PCDATA	$1, $3
	0x00f8 00248 (pointer_vs_value/code/benchmark_invocation_test.go:87)	MOVQ	CX, ""..autotmp_10+200(SP)
	0x0100 00256 (pointer_vs_value/code/benchmark_invocation_test.go:87)	PCDATA	$0, $0
	0x0100 00256 (pointer_vs_value/code/benchmark_invocation_test.go:87)	MOVQ	AX, ""..autotmp_10+208(SP)
	0x0108 00264 (pointer_vs_value/code/benchmark_invocation_test.go:87)	MOVSD	""..autotmp_9+112(SP), X0
	0x010e 00270 (pointer_vs_value/code/benchmark_invocation_test.go:87)	MOVSD	X0, ""..autotmp_3+120(SP)
	0x0114 00276 (pointer_vs_value/code/benchmark_invocation_test.go:87)	PCDATA	$0, $1
	0x0114 00276 (pointer_vs_value/code/benchmark_invocation_test.go:87)	MOVQ	""..autotmp_10+208(SP), AX
	0x011c 00284 (pointer_vs_value/code/benchmark_invocation_test.go:87)	PCDATA	$1, $1
	0x011c 00284 (pointer_vs_value/code/benchmark_invocation_test.go:87)	MOVQ	""..autotmp_10+200(SP), CX
	0x0124 00292 (pointer_vs_value/code/benchmark_invocation_test.go:87)	PCDATA	$1, $4
	0x0124 00292 (pointer_vs_value/code/benchmark_invocation_test.go:87)	MOVQ	CX, ""..autotmp_4+168(SP)
	0x012c 00300 (pointer_vs_value/code/benchmark_invocation_test.go:87)	PCDATA	$0, $0
	0x012c 00300 (pointer_vs_value/code/benchmark_invocation_test.go:87)	MOVQ	AX, ""..autotmp_4+176(SP)
	0x0134 00308 (pointer_vs_value/code/benchmark_invocation_test.go:87)	MOVSD	""..autotmp_3+120(SP), X0
	0x013a 00314 (pointer_vs_value/code/benchmark_invocation_test.go:87)	MOVSD	X0, "".f+104(SP)
	0x0140 00320 (pointer_vs_value/code/benchmark_invocation_test.go:87)	PCDATA	$0, $1
	0x0140 00320 (pointer_vs_value/code/benchmark_invocation_test.go:87)	MOVQ	""..autotmp_4+176(SP), AX
	0x0148 00328 (pointer_vs_value/code/benchmark_invocation_test.go:87)	PCDATA	$1, $1
	0x0148 00328 (pointer_vs_value/code/benchmark_invocation_test.go:87)	MOVQ	""..autotmp_4+168(SP), CX
	0x0150 00336 (pointer_vs_value/code/benchmark_invocation_test.go:87)	MOVQ	CX, "".err+152(SP)
	0x0158 00344 (pointer_vs_value/code/benchmark_invocation_test.go:87)	PCDATA	$0, $0
	0x0158 00344 (pointer_vs_value/code/benchmark_invocation_test.go:87)	MOVQ	AX, "".err+160(SP)
	0x0160 00352 (<unknown line number>)	NOP
	0x0160 00352 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	CX, CX
	0x0163 00355 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	362
	0x0165 00357 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	530
	0x016a 00362 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $5
	0x016a 00362 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X0, X0
	0x016d 00365 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X0, ""..autotmp_11+184(SP)
	0x0175 00373 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x0175 00373 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x0175 00373 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_11+184(SP), AX
	0x017d 00381 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_13+136(SP)
	0x0185 00389 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x0187 00391 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x0187 00391 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), CX
	0x018e 00398 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x018e 00398 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_11+184(SP)
	0x0196 00406 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x0196 00406 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_11(SB), DX
	0x019d 00413 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x019d 00413 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	DX, ""..autotmp_11+192(SP)
	0x01a5 00421 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x01a7 00423 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	425
	0x01a9 00425 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_12+216(SP)
	0x01b1 00433 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_12+224(SP)
	0x01bd 00445 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_12+232(SP)
	0x01c9 00457 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x01c9 00457 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, (SP)
	0x01cd 00461 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x01d6 00470 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x01df 00479 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x01e4 00484 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	486
	0x01e6 00486 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x01ee 00494 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+104(SP), X0
	0x01f4 00500 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x01fc 00508 (pointer_vs_value/code/benchmark_invocation_test.go:87)	JMP	510
	0x01fe 00510 (pointer_vs_value/code/benchmark_invocation_test.go:86)	PCDATA	$0, $-2
	0x01fe 00510 (pointer_vs_value/code/benchmark_invocation_test.go:86)	PCDATA	$1, $-2
	0x01fe 00510 (pointer_vs_value/code/benchmark_invocation_test.go:86)	JMP	512
	0x0200 00512 (pointer_vs_value/code/benchmark_invocation_test.go:86)	PCDATA	$0, $0
	0x0200 00512 (pointer_vs_value/code/benchmark_invocation_test.go:86)	PCDATA	$1, $1
	0x0200 00512 (pointer_vs_value/code/benchmark_invocation_test.go:86)	MOVQ	"".i+96(SP), AX
	0x0205 00517 (pointer_vs_value/code/benchmark_invocation_test.go:86)	INCQ	AX
	0x0208 00520 (pointer_vs_value/code/benchmark_invocation_test.go:86)	MOVQ	AX, "".i+96(SP)
	0x020d 00525 (pointer_vs_value/code/benchmark_invocation_test.go:86)	JMP	141
	0x0212 00530 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x0212 00530 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x0212 00530 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	486
	0x0214 00532 (<unknown line number>)	MOVQ	336(SP), BP
	0x021c 00540 (<unknown line number>)	ADDQ	$344, SP
	0x0223 00547 (<unknown line number>)	RET
	0x0224 00548 (pointer_vs_value/code/benchmark_invocation_test.go:84)	MOVQ	DI, AX
	0x0227 00551 (pointer_vs_value/code/benchmark_invocation_test.go:84)	LEAQ	""..autotmp_14+240(SP), DI
	0x022f 00559 (pointer_vs_value/code/benchmark_invocation_test.go:84)	MOVQ	SP, SI
	0x0232 00562 (pointer_vs_value/code/benchmark_invocation_test.go:84)	DUFFCOPY	$812
	0x0245 00581 (pointer_vs_value/code/benchmark_invocation_test.go:84)	LEAQ	type."".mini(SB), CX
	0x024c 00588 (pointer_vs_value/code/benchmark_invocation_test.go:84)	MOVQ	CX, (SP)
	0x0250 00592 (pointer_vs_value/code/benchmark_invocation_test.go:84)	MOVQ	AX, 8(SP)
	0x0255 00597 (pointer_vs_value/code/benchmark_invocation_test.go:84)	LEAQ	""..autotmp_14+240(SP), AX
	0x025d 00605 (pointer_vs_value/code/benchmark_invocation_test.go:84)	MOVQ	AX, 16(SP)
	0x0262 00610 (pointer_vs_value/code/benchmark_invocation_test.go:84)	CALL	runtime.typedmemmove(SB)
	0x0267 00615 (pointer_vs_value/code/benchmark_invocation_test.go:84)	JMP	130
	0x026c 00620 (pointer_vs_value/code/benchmark_invocation_test.go:84)	NOP
	0x026c 00620 (pointer_vs_value/code/benchmark_invocation_test.go:82)	PCDATA	$1, $-1
	0x026c 00620 (pointer_vs_value/code/benchmark_invocation_test.go:82)	PCDATA	$0, $-1
	0x026c 00620 (pointer_vs_value/code/benchmark_invocation_test.go:82)	CALL	runtime.morestack_noctxt(SB)
	0x0271 00625 (pointer_vs_value/code/benchmark_invocation_test.go:82)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 28 ff ff  eH..%....H..$(..
	0x0010 ff 48 3b 41 10 0f 86 51 02 00 00 48 81 ec 58 01  .H;A...Q...H..X.
	0x0020 00 00 48 89 ac 24 50 01 00 00 48 8d ac 24 50 01  ..H..$P...H..$P.
	0x0030 00 00 48 8d 05 00 00 00 00 48 89 04 24 e8 00 00  ..H......H..$...
	0x0040 00 00 48 8b 44 24 08 48 89 84 24 90 00 00 00 e8  ..H.D$.H..$.....
	0x0050 00 00 00 00 48 8b bc 24 90 00 00 00 83 3d 00 00  ....H..$.....=..
	0x0060 00 00 00 74 05 e9 ba 01 00 00 48 89 e6 48 89 6c  ...t......H..H.l
	0x0070 24 f0 48 8d 6c 24 f0 e8 00 00 00 00 48 8b 6d 00  $.H.l$......H.m.
	0x0080 eb 00 48 c7 44 24 60 00 00 00 00 eb 00 48 8b 84  ..H.D$`......H..
	0x0090 24 60 01 00 00 84 00 48 8b 80 08 01 00 00 48 39  $`.....H......H9
	0x00a0 44 24 60 7c 05 e9 6a 01 00 00 48 8b 84 24 90 00  D$`|..j...H..$..
	0x00b0 00 00 48 89 84 24 80 00 00 00 0f 57 c0 0f 11 84  ..H..$.....W....
	0x00c0 24 c8 00 00 00 48 8b 84 24 80 00 00 00 48 8d 0d  $....H..$....H..
	0x00d0 00 00 00 00 48 89 0c 24 48 89 44 24 08 e8 00 00  ....H..$H.D$....
	0x00e0 00 00 f2 0f 10 44 24 10 f2 0f 11 44 24 70 48 8b  .....D$....D$pH.
	0x00f0 44 24 20 48 8b 4c 24 18 48 89 8c 24 c8 00 00 00  D$ H.L$.H..$....
	0x0100 48 89 84 24 d0 00 00 00 f2 0f 10 44 24 70 f2 0f  H..$.......D$p..
	0x0110 11 44 24 78 48 8b 84 24 d0 00 00 00 48 8b 8c 24  .D$xH..$....H..$
	0x0120 c8 00 00 00 48 89 8c 24 a8 00 00 00 48 89 84 24  ....H..$....H..$
	0x0130 b0 00 00 00 f2 0f 10 44 24 78 f2 0f 11 44 24 68  .......D$x...D$h
	0x0140 48 8b 84 24 b0 00 00 00 48 8b 8c 24 a8 00 00 00  H..$....H..$....
	0x0150 48 89 8c 24 98 00 00 00 48 89 84 24 a0 00 00 00  H..$....H..$....
	0x0160 48 85 c9 75 05 e9 a8 00 00 00 0f 57 c0 0f 11 84  H..u.......W....
	0x0170 24 b8 00 00 00 48 8d 84 24 b8 00 00 00 48 89 84  $....H..$....H..
	0x0180 24 88 00 00 00 84 00 48 8d 0d 00 00 00 00 48 89  $......H......H.
	0x0190 8c 24 b8 00 00 00 48 8d 15 00 00 00 00 48 89 94  .$....H......H..
	0x01a0 24 c0 00 00 00 84 00 eb 00 48 89 84 24 d8 00 00  $........H..$...
	0x01b0 00 48 c7 84 24 e0 00 00 00 01 00 00 00 48 c7 84  .H..$........H..
	0x01c0 24 e8 00 00 00 01 00 00 00 48 89 04 24 48 c7 44  $........H..$H.D
	0x01d0 24 08 01 00 00 00 48 c7 44 24 10 01 00 00 00 e8  $.....H.D$......
	0x01e0 00 00 00 00 eb 00 f2 0f 10 05 00 00 00 00 f2 0f  ................
	0x01f0 58 44 24 68 f2 0f 11 05 00 00 00 00 eb 00 eb 00  XD$h............
	0x0200 48 8b 44 24 60 48 ff c0 48 89 44 24 60 e9 7b fe  H.D$`H..H.D$`.{.
	0x0210 ff ff eb d2 48 8b ac 24 50 01 00 00 48 81 c4 58  ....H..$P...H..X
	0x0220 01 00 00 c3 48 89 f8 48 8d bc 24 f0 00 00 00 48  ....H..H..$....H
	0x0230 89 e6 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00  ..H.l$.H.l$.....
	0x0240 00 48 8b 6d 00 48 8d 0d 00 00 00 00 48 89 0c 24  .H.m.H......H..$
	0x0250 48 89 44 24 08 48 8d 84 24 f0 00 00 00 48 89 44  H.D$.H..$....H.D
	0x0260 24 10 e8 00 00 00 00 e9 16 fe ff ff e8 00 00 00  $...............
	0x0270 00 e9 8a fd ff ff                                ......
	rel 5+4 t=16 TLS+0
	rel 53+4 t=15 type."".mini+0
	rel 62+4 t=8 runtime.newobject+0
	rel 80+4 t=8 "".createMini+0
	rel 94+4 t=15 runtime.writeBarrier+-1
	rel 120+4 t=8 runtime.duffcopy+812
	rel 208+4 t=15 go.itab.*"".mini,"".obj+0
	rel 222+4 t=8 "".calcIfc+0
	rel 394+4 t=15 type.string+0
	rel 409+4 t=15 ""..stmp_11+0
	rel 480+4 t=8 log.Fatal+0
	rel 490+4 t=15 "".F+0
	rel 504+4 t=15 "".F+0
	rel 573+4 t=8 runtime.duffcopy+812
	rel 584+4 t=15 type."".mini+0
	rel 611+4 t=8 runtime.typedmemmove+0
	rel 621+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkMega_Calc STEXT size=835 args=0x8 locals=0x518
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:91)	TEXT	"".BenchmarkMega_Calc(SB), ABIInternal, $1304-8
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:91)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_invocation_test.go:91)	LEAQ	-1176(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_invocation_test.go:91)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_invocation_test.go:91)	JLS	825
	0x001b 00027 (pointer_vs_value/code/benchmark_invocation_test.go:91)	SUBQ	$1304, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_invocation_test.go:91)	MOVQ	BP, 1296(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_invocation_test.go:91)	LEAQ	1296(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:91)	FUNCDATA	$0, gclocals·d1d75e5bd153dd111cd8f1bc3c181073(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:91)	FUNCDATA	$1, gclocals·775fae7d6516280f722e86ebbeb2fcfc(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:91)	FUNCDATA	$2, gclocals·312acb76b4abc33b200226485697de53(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:91)	FUNCDATA	$3, "".BenchmarkMega_Calc.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:93)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:93)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:93)	CALL	"".createMega(SB)
	0x0037 00055 (pointer_vs_value/code/benchmark_invocation_test.go:93)	PCDATA	$0, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_invocation_test.go:93)	PCDATA	$1, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_invocation_test.go:93)	LEAQ	"".o+944(SP), DI
	0x003f 00063 (pointer_vs_value/code/benchmark_invocation_test.go:93)	MOVQ	SP, SI
	0x0042 00066 (pointer_vs_value/code/benchmark_invocation_test.go:93)	PCDATA	$0, $0
	0x0042 00066 (pointer_vs_value/code/benchmark_invocation_test.go:93)	DUFFCOPY	$588
	0x0055 00085 (pointer_vs_value/code/benchmark_invocation_test.go:95)	MOVQ	$0, "".i+360(SP)
	0x0061 00097 (pointer_vs_value/code/benchmark_invocation_test.go:95)	PCDATA	$0, $-2
	0x0061 00097 (pointer_vs_value/code/benchmark_invocation_test.go:95)	PCDATA	$1, $-2
	0x0061 00097 (pointer_vs_value/code/benchmark_invocation_test.go:95)	JMP	99
	0x0063 00099 (pointer_vs_value/code/benchmark_invocation_test.go:95)	PCDATA	$0, $2
	0x0063 00099 (pointer_vs_value/code/benchmark_invocation_test.go:95)	PCDATA	$1, $1
	0x0063 00099 (pointer_vs_value/code/benchmark_invocation_test.go:95)	MOVQ	"".b+1312(SP), AX
	0x006b 00107 (pointer_vs_value/code/benchmark_invocation_test.go:95)	TESTB	AL, (AX)
	0x006d 00109 (pointer_vs_value/code/benchmark_invocation_test.go:95)	PCDATA	$0, $0
	0x006d 00109 (pointer_vs_value/code/benchmark_invocation_test.go:95)	MOVQ	264(AX), AX
	0x0074 00116 (pointer_vs_value/code/benchmark_invocation_test.go:95)	CMPQ	"".i+360(SP), AX
	0x007c 00124 (pointer_vs_value/code/benchmark_invocation_test.go:95)	JLT	131
	0x007e 00126 (pointer_vs_value/code/benchmark_invocation_test.go:95)	JMP	809
	0x0083 00131 (pointer_vs_value/code/benchmark_invocation_test.go:96)	PCDATA	$0, $1
	0x0083 00131 (pointer_vs_value/code/benchmark_invocation_test.go:96)	PCDATA	$1, $2
	0x0083 00131 (pointer_vs_value/code/benchmark_invocation_test.go:96)	LEAQ	"".o+592(SP), DI
	0x008b 00139 (pointer_vs_value/code/benchmark_invocation_test.go:96)	PCDATA	$0, $3
	0x008b 00139 (pointer_vs_value/code/benchmark_invocation_test.go:96)	LEAQ	"".o+944(SP), SI
	0x0093 00147 (pointer_vs_value/code/benchmark_invocation_test.go:96)	PCDATA	$0, $0
	0x0093 00147 (pointer_vs_value/code/benchmark_invocation_test.go:96)	DUFFCOPY	$588
	0x00a6 00166 (pointer_vs_value/code/benchmark_invocation_test.go:96)	XORPS	X0, X0
	0x00a9 00169 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVSD	X0, "".~r1+352(SP)
	0x00b2 00178 (pointer_vs_value/code/benchmark_invocation_test.go:96)	XORPS	X1, X1
	0x00b5 00181 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVUPS	X1, "".~r2+424(SP)
	0x00bd 00189 (<unknown line number>)	NOP
	0x00bd 00189 (pointer_vs_value/code/func.go:29)	MOVSD	"".o+680(SP), X1
	0x00c6 00198 (pointer_vs_value/code/func.go:29)	UCOMISD	X0, X1
	0x00ca 00202 (pointer_vs_value/code/func.go:29)	JNE	736
	0x00d0 00208 (pointer_vs_value/code/func.go:29)	JPC	215
	0x00d2 00210 (pointer_vs_value/code/func.go:29)	JMP	736
	0x00d7 00215 (pointer_vs_value/code/func.go:30)	PCDATA	$0, $2
	0x00d7 00215 (pointer_vs_value/code/func.go:30)	PCDATA	$1, $3
	0x00d7 00215 (pointer_vs_value/code/func.go:30)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x00de 00222 (pointer_vs_value/code/func.go:30)	PCDATA	$0, $0
	0x00de 00222 (pointer_vs_value/code/func.go:30)	MOVQ	AX, errors.text+456(SP)
	0x00e6 00230 (pointer_vs_value/code/func.go:30)	MOVQ	$22, errors.text+464(SP)
	0x00f2 00242 (pointer_vs_value/code/func.go:30)	XORPS	X1, X1
	0x00f5 00245 (pointer_vs_value/code/func.go:30)	MOVUPS	X1, "".~R0+440(SP)
	0x00fd 00253 (<unknown line number>)	NOP
	0x00fd 00253 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x00fd 00253 ($GOROOT/src/errors/errors.go:59)	XORPS	X1, X1
	0x0100 00256 ($GOROOT/src/errors/errors.go:59)	MOVUPS	X1, ""..autotmp_15+536(SP)
	0x0108 00264 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $4
	0x0108 00264 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x0108 00264 ($GOROOT/src/errors/errors.go:59)	LEAQ	""..autotmp_15+536(SP), CX
	0x0110 00272 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_14+408(SP)
	0x0118 00280 ($GOROOT/src/errors/errors.go:59)	TESTB	AL, (CX)
	0x011a 00282 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+464(SP), DX
	0x0122 00290 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $5
	0x0122 00290 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $1
	0x0122 00290 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+456(SP), BX
	0x012a 00298 ($GOROOT/src/errors/errors.go:59)	MOVQ	DX, ""..autotmp_15+544(SP)
	0x0132 00306 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $4
	0x0132 00306 ($GOROOT/src/errors/errors.go:59)	MOVQ	BX, ""..autotmp_15+536(SP)
	0x013a 00314 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_12+416(SP)
	0x0142 00322 (pointer_vs_value/code/func.go:30)	PCDATA	$0, $6
	0x0142 00322 (pointer_vs_value/code/func.go:30)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x0149 00329 (pointer_vs_value/code/func.go:30)	MOVQ	DX, ""..autotmp_16+520(SP)
	0x0151 00337 (pointer_vs_value/code/func.go:30)	MOVQ	CX, ""..autotmp_16+528(SP)
	0x0159 00345 (pointer_vs_value/code/func.go:30)	PCDATA	$0, $4
	0x0159 00345 (pointer_vs_value/code/func.go:30)	PCDATA	$1, $5
	0x0159 00345 (pointer_vs_value/code/func.go:30)	MOVQ	DX, "".~R0+440(SP)
	0x0161 00353 (pointer_vs_value/code/func.go:30)	PCDATA	$0, $0
	0x0161 00353 (pointer_vs_value/code/func.go:30)	MOVQ	CX, "".~R0+448(SP)
	0x0169 00361 (pointer_vs_value/code/func.go:30)	JMP	363
	0x016b 00363 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVQ	"".~R0+440(SP), CX
	0x0173 00371 (pointer_vs_value/code/benchmark_invocation_test.go:96)	PCDATA	$0, $7
	0x0173 00371 (pointer_vs_value/code/benchmark_invocation_test.go:96)	PCDATA	$1, $1
	0x0173 00371 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVQ	"".~R0+448(SP), BX
	0x017b 00379 (pointer_vs_value/code/benchmark_invocation_test.go:96)	PCDATA	$1, $6
	0x017b 00379 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVQ	CX, ""..autotmp_17+504(SP)
	0x0183 00387 (pointer_vs_value/code/benchmark_invocation_test.go:96)	PCDATA	$0, $0
	0x0183 00387 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVQ	BX, ""..autotmp_17+512(SP)
	0x018b 00395 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVSD	X0, "".~r1+352(SP)
	0x0194 00404 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVQ	""..autotmp_17+504(SP), CX
	0x019c 00412 (pointer_vs_value/code/benchmark_invocation_test.go:96)	PCDATA	$0, $7
	0x019c 00412 (pointer_vs_value/code/benchmark_invocation_test.go:96)	PCDATA	$1, $1
	0x019c 00412 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVQ	""..autotmp_17+512(SP), BX
	0x01a4 00420 (pointer_vs_value/code/benchmark_invocation_test.go:96)	PCDATA	$1, $7
	0x01a4 00420 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVQ	CX, "".~r2+424(SP)
	0x01ac 00428 (pointer_vs_value/code/benchmark_invocation_test.go:96)	PCDATA	$0, $0
	0x01ac 00428 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVQ	BX, "".~r2+432(SP)
	0x01b4 00436 (pointer_vs_value/code/benchmark_invocation_test.go:96)	JMP	438
	0x01b6 00438 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVSD	"".~r1+352(SP), X1
	0x01bf 00447 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVSD	X1, ""..autotmp_19+384(SP)
	0x01c8 00456 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVSD	X1, ""..autotmp_3+376(SP)
	0x01d1 00465 (pointer_vs_value/code/benchmark_invocation_test.go:96)	PCDATA	$0, $4
	0x01d1 00465 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVQ	"".~r2+432(SP), CX
	0x01d9 00473 (pointer_vs_value/code/benchmark_invocation_test.go:96)	PCDATA	$1, $1
	0x01d9 00473 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVQ	"".~r2+424(SP), BX
	0x01e1 00481 (pointer_vs_value/code/benchmark_invocation_test.go:96)	PCDATA	$1, $8
	0x01e1 00481 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVQ	BX, ""..autotmp_4+488(SP)
	0x01e9 00489 (pointer_vs_value/code/benchmark_invocation_test.go:96)	PCDATA	$0, $0
	0x01e9 00489 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVQ	CX, ""..autotmp_4+496(SP)
	0x01f1 00497 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVSD	""..autotmp_3+376(SP), X1
	0x01fa 00506 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVSD	X1, "".f+368(SP)
	0x0203 00515 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVQ	""..autotmp_4+488(SP), CX
	0x020b 00523 (pointer_vs_value/code/benchmark_invocation_test.go:96)	PCDATA	$0, $7
	0x020b 00523 (pointer_vs_value/code/benchmark_invocation_test.go:96)	PCDATA	$1, $1
	0x020b 00523 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVQ	""..autotmp_4+496(SP), BX
	0x0213 00531 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVQ	CX, "".err+472(SP)
	0x021b 00539 (pointer_vs_value/code/benchmark_invocation_test.go:96)	PCDATA	$0, $0
	0x021b 00539 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVQ	BX, "".err+480(SP)
	0x0223 00547 (<unknown line number>)	NOP
	0x0223 00547 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	CX, CX
	0x0226 00550 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	557
	0x0228 00552 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	734
	0x022d 00557 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $9
	0x022d 00557 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X1, X1
	0x0230 00560 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X1, ""..autotmp_13+552(SP)
	0x0238 00568 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x0238 00568 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x0238 00568 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_13+552(SP), CX
	0x0240 00576 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_21+400(SP)
	0x0248 00584 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x024a 00586 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $5
	0x024a 00586 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), BX
	0x0251 00593 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x0251 00593 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	BX, ""..autotmp_13+552(SP)
	0x0259 00601 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $8
	0x0259 00601 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_12(SB), SI
	0x0260 00608 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x0260 00608 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	SI, ""..autotmp_13+560(SP)
	0x0268 00616 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x026a 00618 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	620
	0x026c 00620 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_20+568(SP)
	0x0274 00628 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_20+576(SP)
	0x0280 00640 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_20+584(SP)
	0x028c 00652 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x028c 00652 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, (SP)
	0x0290 00656 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x0299 00665 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x02a2 00674 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x02a7 00679 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	681
	0x02a9 00681 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x02b1 00689 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+368(SP), X0
	0x02ba 00698 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x02c2 00706 (pointer_vs_value/code/benchmark_invocation_test.go:96)	JMP	708
	0x02c4 00708 (pointer_vs_value/code/benchmark_invocation_test.go:95)	PCDATA	$0, $-2
	0x02c4 00708 (pointer_vs_value/code/benchmark_invocation_test.go:95)	PCDATA	$1, $-2
	0x02c4 00708 (pointer_vs_value/code/benchmark_invocation_test.go:95)	JMP	710
	0x02c6 00710 (pointer_vs_value/code/benchmark_invocation_test.go:95)	PCDATA	$0, $0
	0x02c6 00710 (pointer_vs_value/code/benchmark_invocation_test.go:95)	PCDATA	$1, $1
	0x02c6 00710 (pointer_vs_value/code/benchmark_invocation_test.go:95)	MOVQ	"".i+360(SP), AX
	0x02ce 00718 (pointer_vs_value/code/benchmark_invocation_test.go:95)	INCQ	AX
	0x02d1 00721 (pointer_vs_value/code/benchmark_invocation_test.go:95)	MOVQ	AX, "".i+360(SP)
	0x02d9 00729 (pointer_vs_value/code/benchmark_invocation_test.go:95)	JMP	99
	0x02de 00734 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x02de 00734 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x02de 00734 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	681
	0x02e0 00736 (pointer_vs_value/code/func.go:32)	PCDATA	$0, $0
	0x02e0 00736 (pointer_vs_value/code/func.go:32)	PCDATA	$1, $2
	0x02e0 00736 (pointer_vs_value/code/func.go:32)	MOVQ	"".o+592(SP), CX
	0x02e8 00744 (pointer_vs_value/code/func.go:32)	XORPS	X1, X1
	0x02eb 00747 (pointer_vs_value/code/func.go:32)	CVTSQ2SD	CX, X1
	0x02f0 00752 (pointer_vs_value/code/func.go:32)	PCDATA	$1, $1
	0x02f0 00752 (pointer_vs_value/code/func.go:32)	DIVSD	"".o+680(SP), X1
	0x02f9 00761 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVSD	X1, ""..autotmp_18+392(SP)
	0x0302 00770 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVSD	X1, "".~r1+352(SP)
	0x030b 00779 (pointer_vs_value/code/benchmark_invocation_test.go:96)	PCDATA	$1, $7
	0x030b 00779 (pointer_vs_value/code/benchmark_invocation_test.go:96)	XORPS	X1, X1
	0x030e 00782 (pointer_vs_value/code/benchmark_invocation_test.go:96)	MOVUPS	X1, "".~r2+424(SP)
	0x0316 00790 (pointer_vs_value/code/benchmark_invocation_test.go:96)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x031d 00797 (pointer_vs_value/code/benchmark_invocation_test.go:96)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x0324 00804 (pointer_vs_value/code/benchmark_invocation_test.go:96)	JMP	438
	0x0329 00809 (<unknown line number>)	PCDATA	$0, $-2
	0x0329 00809 (<unknown line number>)	PCDATA	$1, $-2
	0x0329 00809 (<unknown line number>)	MOVQ	1296(SP), BP
	0x0331 00817 (<unknown line number>)	ADDQ	$1304, SP
	0x0338 00824 (<unknown line number>)	RET
	0x0339 00825 (<unknown line number>)	NOP
	0x0339 00825 (pointer_vs_value/code/benchmark_invocation_test.go:91)	PCDATA	$1, $-1
	0x0339 00825 (pointer_vs_value/code/benchmark_invocation_test.go:91)	PCDATA	$0, $-1
	0x0339 00825 (pointer_vs_value/code/benchmark_invocation_test.go:91)	CALL	runtime.morestack_noctxt(SB)
	0x033e 00830 (pointer_vs_value/code/benchmark_invocation_test.go:91)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 68 fb ff  eH..%....H..$h..
	0x0010 ff 48 3b 41 10 0f 86 1e 03 00 00 48 81 ec 18 05  .H;A.......H....
	0x0020 00 00 48 89 ac 24 10 05 00 00 48 8d ac 24 10 05  ..H..$....H..$..
	0x0030 00 00 e8 00 00 00 00 48 8d bc 24 b0 03 00 00 48  .......H..$....H
	0x0040 89 e6 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00  ..H.l$.H.l$.....
	0x0050 00 48 8b 6d 00 48 c7 84 24 68 01 00 00 00 00 00  .H.m.H..$h......
	0x0060 00 eb 00 48 8b 84 24 20 05 00 00 84 00 48 8b 80  ...H..$ .....H..
	0x0070 08 01 00 00 48 39 84 24 68 01 00 00 7c 05 e9 a6  ....H9.$h...|...
	0x0080 02 00 00 48 8d bc 24 50 02 00 00 48 8d b4 24 b0  ...H..$P...H..$.
	0x0090 03 00 00 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00  ...H.l$.H.l$....
	0x00a0 00 00 48 8b 6d 00 0f 57 c0 f2 0f 11 84 24 60 01  ..H.m..W.....$`.
	0x00b0 00 00 0f 57 c9 0f 11 8c 24 a8 01 00 00 f2 0f 10  ...W....$.......
	0x00c0 8c 24 a8 02 00 00 66 0f 2e c8 0f 85 10 02 00 00  .$....f.........
	0x00d0 7b 05 e9 09 02 00 00 48 8d 05 00 00 00 00 48 89  {......H......H.
	0x00e0 84 24 c8 01 00 00 48 c7 84 24 d0 01 00 00 16 00  .$....H..$......
	0x00f0 00 00 0f 57 c9 0f 11 8c 24 b8 01 00 00 0f 57 c9  ...W....$.....W.
	0x0100 0f 11 8c 24 18 02 00 00 48 8d 8c 24 18 02 00 00  ...$....H..$....
	0x0110 48 89 8c 24 98 01 00 00 84 01 48 8b 94 24 d0 01  H..$......H..$..
	0x0120 00 00 48 8b 9c 24 c8 01 00 00 48 89 94 24 20 02  ..H..$....H..$ .
	0x0130 00 00 48 89 9c 24 18 02 00 00 48 89 8c 24 a0 01  ..H..$....H..$..
	0x0140 00 00 48 8d 15 00 00 00 00 48 89 94 24 08 02 00  ..H......H..$...
	0x0150 00 48 89 8c 24 10 02 00 00 48 89 94 24 b8 01 00  .H..$....H..$...
	0x0160 00 48 89 8c 24 c0 01 00 00 eb 00 48 8b 8c 24 b8  .H..$......H..$.
	0x0170 01 00 00 48 8b 9c 24 c0 01 00 00 48 89 8c 24 f8  ...H..$....H..$.
	0x0180 01 00 00 48 89 9c 24 00 02 00 00 f2 0f 11 84 24  ...H..$........$
	0x0190 60 01 00 00 48 8b 8c 24 f8 01 00 00 48 8b 9c 24  `...H..$....H..$
	0x01a0 00 02 00 00 48 89 8c 24 a8 01 00 00 48 89 9c 24  ....H..$....H..$
	0x01b0 b0 01 00 00 eb 00 f2 0f 10 8c 24 60 01 00 00 f2  ..........$`....
	0x01c0 0f 11 8c 24 80 01 00 00 f2 0f 11 8c 24 78 01 00  ...$........$x..
	0x01d0 00 48 8b 8c 24 b0 01 00 00 48 8b 9c 24 a8 01 00  .H..$....H..$...
	0x01e0 00 48 89 9c 24 e8 01 00 00 48 89 8c 24 f0 01 00  .H..$....H..$...
	0x01f0 00 f2 0f 10 8c 24 78 01 00 00 f2 0f 11 8c 24 70  .....$x.......$p
	0x0200 01 00 00 48 8b 8c 24 e8 01 00 00 48 8b 9c 24 f0  ...H..$....H..$.
	0x0210 01 00 00 48 89 8c 24 d8 01 00 00 48 89 9c 24 e0  ...H..$....H..$.
	0x0220 01 00 00 48 85 c9 75 05 e9 b1 00 00 00 0f 57 c9  ...H..u.......W.
	0x0230 0f 11 8c 24 28 02 00 00 48 8d 8c 24 28 02 00 00  ...$(...H..$(...
	0x0240 48 89 8c 24 90 01 00 00 84 01 48 8d 1d 00 00 00  H..$......H.....
	0x0250 00 48 89 9c 24 28 02 00 00 48 8d 35 00 00 00 00  .H..$(...H.5....
	0x0260 48 89 b4 24 30 02 00 00 84 01 eb 00 48 89 8c 24  H..$0.......H..$
	0x0270 38 02 00 00 48 c7 84 24 40 02 00 00 01 00 00 00  8...H..$@.......
	0x0280 48 c7 84 24 48 02 00 00 01 00 00 00 48 89 0c 24  H..$H.......H..$
	0x0290 48 c7 44 24 08 01 00 00 00 48 c7 44 24 10 01 00  H.D$.....H.D$...
	0x02a0 00 00 e8 00 00 00 00 eb 00 f2 0f 10 05 00 00 00  ................
	0x02b0 00 f2 0f 58 84 24 70 01 00 00 f2 0f 11 05 00 00  ...X.$p.........
	0x02c0 00 00 eb 00 eb 00 48 8b 84 24 68 01 00 00 48 ff  ......H..$h...H.
	0x02d0 c0 48 89 84 24 68 01 00 00 e9 85 fd ff ff eb c9  .H..$h..........
	0x02e0 48 8b 8c 24 50 02 00 00 0f 57 c9 f2 48 0f 2a c9  H..$P....W..H.*.
	0x02f0 f2 0f 5e 8c 24 a8 02 00 00 f2 0f 11 8c 24 88 01  ..^.$........$..
	0x0300 00 00 f2 0f 11 8c 24 60 01 00 00 0f 57 c9 0f 11  ......$`....W...
	0x0310 8c 24 a8 01 00 00 48 8d 05 00 00 00 00 48 8d 15  .$....H......H..
	0x0320 00 00 00 00 e9 8d fe ff ff 48 8b ac 24 10 05 00  .........H..$...
	0x0330 00 48 81 c4 18 05 00 00 c3 e8 00 00 00 00 e9 bd  .H..............
	0x0340 fc ff ff                                         ...
	rel 5+4 t=16 TLS+0
	rel 51+4 t=8 "".createMega+0
	rel 77+4 t=8 runtime.duffcopy+588
	rel 158+4 t=8 runtime.duffcopy+588
	rel 218+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 325+4 t=15 go.itab.*errors.errorString,error+0
	rel 589+4 t=15 type.string+0
	rel 604+4 t=15 ""..stmp_12+0
	rel 675+4 t=8 log.Fatal+0
	rel 685+4 t=15 "".F+0
	rel 702+4 t=15 "".F+0
	rel 793+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 800+4 t=15 go.itab.*errors.errorString,error+0
	rel 826+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkMegaP_Calc STEXT size=841 args=0x8 locals=0x3c8
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:100)	TEXT	"".BenchmarkMegaP_Calc(SB), ABIInternal, $968-8
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:100)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_invocation_test.go:100)	LEAQ	-840(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_invocation_test.go:100)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_invocation_test.go:100)	JLS	831
	0x001b 00027 (pointer_vs_value/code/benchmark_invocation_test.go:100)	SUBQ	$968, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_invocation_test.go:100)	MOVQ	BP, 960(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_invocation_test.go:100)	LEAQ	960(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:100)	FUNCDATA	$0, gclocals·d1d75e5bd153dd111cd8f1bc3c181073(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:100)	FUNCDATA	$1, gclocals·6b59c8a27568fd049968347912e05aff(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:100)	FUNCDATA	$2, gclocals·b0e64627e016c4f22ade44055db6bcad(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:100)	FUNCDATA	$3, "".BenchmarkMegaP_Calc.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:102)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:102)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:102)	CALL	"".createMega(SB)
	0x0037 00055 (pointer_vs_value/code/benchmark_invocation_test.go:102)	PCDATA	$0, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_invocation_test.go:102)	PCDATA	$1, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_invocation_test.go:102)	LEAQ	"".o+608(SP), DI
	0x003f 00063 (pointer_vs_value/code/benchmark_invocation_test.go:102)	MOVQ	SP, SI
	0x0042 00066 (pointer_vs_value/code/benchmark_invocation_test.go:102)	PCDATA	$0, $0
	0x0042 00066 (pointer_vs_value/code/benchmark_invocation_test.go:102)	DUFFCOPY	$588
	0x0055 00085 (pointer_vs_value/code/benchmark_invocation_test.go:104)	MOVQ	$0, "".i+360(SP)
	0x0061 00097 (pointer_vs_value/code/benchmark_invocation_test.go:104)	PCDATA	$0, $-2
	0x0061 00097 (pointer_vs_value/code/benchmark_invocation_test.go:104)	PCDATA	$1, $-2
	0x0061 00097 (pointer_vs_value/code/benchmark_invocation_test.go:104)	JMP	99
	0x0063 00099 (pointer_vs_value/code/benchmark_invocation_test.go:104)	PCDATA	$0, $2
	0x0063 00099 (pointer_vs_value/code/benchmark_invocation_test.go:104)	PCDATA	$1, $1
	0x0063 00099 (pointer_vs_value/code/benchmark_invocation_test.go:104)	MOVQ	"".b+976(SP), AX
	0x006b 00107 (pointer_vs_value/code/benchmark_invocation_test.go:104)	TESTB	AL, (AX)
	0x006d 00109 (pointer_vs_value/code/benchmark_invocation_test.go:104)	PCDATA	$0, $0
	0x006d 00109 (pointer_vs_value/code/benchmark_invocation_test.go:104)	MOVQ	264(AX), AX
	0x0074 00116 (pointer_vs_value/code/benchmark_invocation_test.go:104)	CMPQ	"".i+360(SP), AX
	0x007c 00124 (pointer_vs_value/code/benchmark_invocation_test.go:104)	JLT	131
	0x007e 00126 (pointer_vs_value/code/benchmark_invocation_test.go:104)	JMP	815
	0x0083 00131 (pointer_vs_value/code/benchmark_invocation_test.go:105)	PCDATA	$0, $2
	0x0083 00131 (pointer_vs_value/code/benchmark_invocation_test.go:105)	LEAQ	"".o+608(SP), AX
	0x008b 00139 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVQ	AX, ""..autotmp_14+424(SP)
	0x0093 00147 (pointer_vs_value/code/benchmark_invocation_test.go:105)	PCDATA	$0, $0
	0x0093 00147 (pointer_vs_value/code/benchmark_invocation_test.go:105)	PCDATA	$1, $2
	0x0093 00147 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVQ	AX, "".o+400(SP)
	0x009b 00155 (pointer_vs_value/code/benchmark_invocation_test.go:105)	XORPS	X0, X0
	0x009e 00158 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVSD	X0, "".~r1+352(SP)
	0x00a7 00167 (pointer_vs_value/code/benchmark_invocation_test.go:105)	XORPS	X1, X1
	0x00aa 00170 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVUPS	X1, "".~r2+440(SP)
	0x00b2 00178 (pointer_vs_value/code/func.go:73)	PCDATA	$0, $2
	0x00b2 00178 (pointer_vs_value/code/func.go:73)	MOVQ	"".o+400(SP), AX
	0x00ba 00186 (pointer_vs_value/code/func.go:73)	TESTB	AL, (AX)
	0x00bc 00188 (<unknown line number>)	NOP
	0x00bc 00188 (pointer_vs_value/code/func.go:73)	PCDATA	$0, $0
	0x00bc 00188 (pointer_vs_value/code/func.go:73)	MOVSD	88(AX), X1
	0x00c1 00193 (pointer_vs_value/code/func.go:73)	UCOMISD	X0, X1
	0x00c5 00197 (pointer_vs_value/code/func.go:73)	JNE	731
	0x00cb 00203 (pointer_vs_value/code/func.go:73)	JPC	210
	0x00cd 00205 (pointer_vs_value/code/func.go:73)	JMP	731
	0x00d2 00210 (pointer_vs_value/code/func.go:74)	PCDATA	$0, $2
	0x00d2 00210 (pointer_vs_value/code/func.go:74)	PCDATA	$1, $3
	0x00d2 00210 (pointer_vs_value/code/func.go:74)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x00d9 00217 (pointer_vs_value/code/func.go:74)	PCDATA	$0, $0
	0x00d9 00217 (pointer_vs_value/code/func.go:74)	MOVQ	AX, errors.text+472(SP)
	0x00e1 00225 (pointer_vs_value/code/func.go:74)	MOVQ	$22, errors.text+480(SP)
	0x00ed 00237 (pointer_vs_value/code/func.go:74)	XORPS	X1, X1
	0x00f0 00240 (pointer_vs_value/code/func.go:74)	MOVUPS	X1, "".~R0+456(SP)
	0x00f8 00248 (<unknown line number>)	NOP
	0x00f8 00248 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x00f8 00248 ($GOROOT/src/errors/errors.go:59)	XORPS	X1, X1
	0x00fb 00251 ($GOROOT/src/errors/errors.go:59)	MOVUPS	X1, ""..autotmp_16+552(SP)
	0x0103 00259 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x0103 00259 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x0103 00259 ($GOROOT/src/errors/errors.go:59)	LEAQ	""..autotmp_16+552(SP), CX
	0x010b 00267 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_15+416(SP)
	0x0113 00275 ($GOROOT/src/errors/errors.go:59)	TESTB	AL, (CX)
	0x0115 00277 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+480(SP), DX
	0x011d 00285 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $4
	0x011d 00285 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $1
	0x011d 00285 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+472(SP), BX
	0x0125 00293 ($GOROOT/src/errors/errors.go:59)	MOVQ	DX, ""..autotmp_16+560(SP)
	0x012d 00301 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x012d 00301 ($GOROOT/src/errors/errors.go:59)	MOVQ	BX, ""..autotmp_16+552(SP)
	0x0135 00309 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_12+432(SP)
	0x013d 00317 (pointer_vs_value/code/func.go:74)	PCDATA	$0, $5
	0x013d 00317 (pointer_vs_value/code/func.go:74)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x0144 00324 (pointer_vs_value/code/func.go:74)	MOVQ	DX, ""..autotmp_17+536(SP)
	0x014c 00332 (pointer_vs_value/code/func.go:74)	MOVQ	CX, ""..autotmp_17+544(SP)
	0x0154 00340 (pointer_vs_value/code/func.go:74)	PCDATA	$0, $3
	0x0154 00340 (pointer_vs_value/code/func.go:74)	PCDATA	$1, $5
	0x0154 00340 (pointer_vs_value/code/func.go:74)	MOVQ	DX, "".~R0+456(SP)
	0x015c 00348 (pointer_vs_value/code/func.go:74)	PCDATA	$0, $0
	0x015c 00348 (pointer_vs_value/code/func.go:74)	MOVQ	CX, "".~R0+464(SP)
	0x0164 00356 (pointer_vs_value/code/func.go:74)	JMP	358
	0x0166 00358 (pointer_vs_value/code/benchmark_invocation_test.go:105)	PCDATA	$0, $3
	0x0166 00358 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVQ	"".~R0+464(SP), CX
	0x016e 00366 (pointer_vs_value/code/benchmark_invocation_test.go:105)	PCDATA	$1, $1
	0x016e 00366 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVQ	"".~R0+456(SP), BX
	0x0176 00374 (pointer_vs_value/code/benchmark_invocation_test.go:105)	PCDATA	$1, $6
	0x0176 00374 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVQ	BX, ""..autotmp_18+520(SP)
	0x017e 00382 (pointer_vs_value/code/benchmark_invocation_test.go:105)	PCDATA	$0, $0
	0x017e 00382 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVQ	CX, ""..autotmp_18+528(SP)
	0x0186 00390 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVSD	X0, "".~r1+352(SP)
	0x018f 00399 (pointer_vs_value/code/benchmark_invocation_test.go:105)	PCDATA	$0, $3
	0x018f 00399 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVQ	""..autotmp_18+528(SP), CX
	0x0197 00407 (pointer_vs_value/code/benchmark_invocation_test.go:105)	PCDATA	$1, $1
	0x0197 00407 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVQ	""..autotmp_18+520(SP), BX
	0x019f 00415 (pointer_vs_value/code/benchmark_invocation_test.go:105)	PCDATA	$1, $7
	0x019f 00415 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVQ	BX, "".~r2+440(SP)
	0x01a7 00423 (pointer_vs_value/code/benchmark_invocation_test.go:105)	PCDATA	$0, $0
	0x01a7 00423 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVQ	CX, "".~r2+448(SP)
	0x01af 00431 (pointer_vs_value/code/benchmark_invocation_test.go:105)	JMP	433
	0x01b1 00433 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVSD	"".~r1+352(SP), X1
	0x01ba 00442 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVSD	X1, ""..autotmp_20+384(SP)
	0x01c3 00451 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVSD	X1, ""..autotmp_3+376(SP)
	0x01cc 00460 (pointer_vs_value/code/benchmark_invocation_test.go:105)	PCDATA	$0, $3
	0x01cc 00460 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVQ	"".~r2+448(SP), CX
	0x01d4 00468 (pointer_vs_value/code/benchmark_invocation_test.go:105)	PCDATA	$1, $1
	0x01d4 00468 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVQ	"".~r2+440(SP), BX
	0x01dc 00476 (pointer_vs_value/code/benchmark_invocation_test.go:105)	PCDATA	$1, $8
	0x01dc 00476 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVQ	BX, ""..autotmp_4+504(SP)
	0x01e4 00484 (pointer_vs_value/code/benchmark_invocation_test.go:105)	PCDATA	$0, $0
	0x01e4 00484 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVQ	CX, ""..autotmp_4+512(SP)
	0x01ec 00492 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVSD	""..autotmp_3+376(SP), X1
	0x01f5 00501 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVSD	X1, "".f+368(SP)
	0x01fe 00510 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVQ	""..autotmp_4+504(SP), CX
	0x0206 00518 (pointer_vs_value/code/benchmark_invocation_test.go:105)	PCDATA	$0, $6
	0x0206 00518 (pointer_vs_value/code/benchmark_invocation_test.go:105)	PCDATA	$1, $1
	0x0206 00518 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVQ	""..autotmp_4+512(SP), BX
	0x020e 00526 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVQ	CX, "".err+488(SP)
	0x0216 00534 (pointer_vs_value/code/benchmark_invocation_test.go:105)	PCDATA	$0, $0
	0x0216 00534 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVQ	BX, "".err+496(SP)
	0x021e 00542 (<unknown line number>)	NOP
	0x021e 00542 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	CX, CX
	0x0221 00545 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	552
	0x0223 00547 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	729
	0x0228 00552 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $9
	0x0228 00552 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X1, X1
	0x022b 00555 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X1, ""..autotmp_13+568(SP)
	0x0233 00563 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x0233 00563 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x0233 00563 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_13+568(SP), CX
	0x023b 00571 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_22+408(SP)
	0x0243 00579 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x0245 00581 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x0245 00581 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), BX
	0x024c 00588 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x024c 00588 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	BX, ""..autotmp_13+568(SP)
	0x0254 00596 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $7
	0x0254 00596 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_13(SB), SI
	0x025b 00603 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x025b 00603 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	SI, ""..autotmp_13+576(SP)
	0x0263 00611 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x0265 00613 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	615
	0x0267 00615 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_21+584(SP)
	0x026f 00623 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_21+592(SP)
	0x027b 00635 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_21+600(SP)
	0x0287 00647 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x0287 00647 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, (SP)
	0x028b 00651 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x0294 00660 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x029d 00669 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x02a2 00674 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	676
	0x02a4 00676 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x02ac 00684 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+368(SP), X0
	0x02b5 00693 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x02bd 00701 (pointer_vs_value/code/benchmark_invocation_test.go:105)	JMP	703
	0x02bf 00703 (pointer_vs_value/code/benchmark_invocation_test.go:104)	PCDATA	$0, $-2
	0x02bf 00703 (pointer_vs_value/code/benchmark_invocation_test.go:104)	PCDATA	$1, $-2
	0x02bf 00703 (pointer_vs_value/code/benchmark_invocation_test.go:104)	JMP	705
	0x02c1 00705 (pointer_vs_value/code/benchmark_invocation_test.go:104)	PCDATA	$0, $0
	0x02c1 00705 (pointer_vs_value/code/benchmark_invocation_test.go:104)	PCDATA	$1, $1
	0x02c1 00705 (pointer_vs_value/code/benchmark_invocation_test.go:104)	MOVQ	"".i+360(SP), AX
	0x02c9 00713 (pointer_vs_value/code/benchmark_invocation_test.go:104)	INCQ	AX
	0x02cc 00716 (pointer_vs_value/code/benchmark_invocation_test.go:104)	MOVQ	AX, "".i+360(SP)
	0x02d4 00724 (pointer_vs_value/code/benchmark_invocation_test.go:104)	JMP	99
	0x02d9 00729 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x02d9 00729 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x02d9 00729 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	676
	0x02db 00731 (pointer_vs_value/code/func.go:76)	PCDATA	$0, $3
	0x02db 00731 (pointer_vs_value/code/func.go:76)	PCDATA	$1, $2
	0x02db 00731 (pointer_vs_value/code/func.go:76)	MOVQ	"".o+400(SP), CX
	0x02e3 00739 (pointer_vs_value/code/func.go:76)	TESTB	AL, (CX)
	0x02e5 00741 (pointer_vs_value/code/func.go:76)	PCDATA	$0, $4
	0x02e5 00741 (pointer_vs_value/code/func.go:76)	PCDATA	$1, $1
	0x02e5 00741 (pointer_vs_value/code/func.go:76)	MOVQ	"".o+400(SP), BX
	0x02ed 00749 (pointer_vs_value/code/func.go:76)	TESTB	AL, (BX)
	0x02ef 00751 (pointer_vs_value/code/func.go:76)	PCDATA	$0, $6
	0x02ef 00751 (pointer_vs_value/code/func.go:76)	MOVQ	(CX), CX
	0x02f2 00754 (pointer_vs_value/code/func.go:76)	XORPS	X1, X1
	0x02f5 00757 (pointer_vs_value/code/func.go:76)	CVTSQ2SD	CX, X1
	0x02fa 00762 (pointer_vs_value/code/func.go:76)	PCDATA	$0, $0
	0x02fa 00762 (pointer_vs_value/code/func.go:76)	DIVSD	88(BX), X1
	0x02ff 00767 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVSD	X1, ""..autotmp_19+392(SP)
	0x0308 00776 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVSD	X1, "".~r1+352(SP)
	0x0311 00785 (pointer_vs_value/code/benchmark_invocation_test.go:105)	PCDATA	$1, $7
	0x0311 00785 (pointer_vs_value/code/benchmark_invocation_test.go:105)	XORPS	X1, X1
	0x0314 00788 (pointer_vs_value/code/benchmark_invocation_test.go:105)	MOVUPS	X1, "".~r2+440(SP)
	0x031c 00796 (pointer_vs_value/code/benchmark_invocation_test.go:105)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x0323 00803 (pointer_vs_value/code/benchmark_invocation_test.go:105)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x032a 00810 (pointer_vs_value/code/benchmark_invocation_test.go:105)	JMP	433
	0x032f 00815 (<unknown line number>)	PCDATA	$0, $-2
	0x032f 00815 (<unknown line number>)	PCDATA	$1, $-2
	0x032f 00815 (<unknown line number>)	MOVQ	960(SP), BP
	0x0337 00823 (<unknown line number>)	ADDQ	$968, SP
	0x033e 00830 (<unknown line number>)	RET
	0x033f 00831 (<unknown line number>)	NOP
	0x033f 00831 (pointer_vs_value/code/benchmark_invocation_test.go:100)	PCDATA	$1, $-1
	0x033f 00831 (pointer_vs_value/code/benchmark_invocation_test.go:100)	PCDATA	$0, $-1
	0x033f 00831 (pointer_vs_value/code/benchmark_invocation_test.go:100)	CALL	runtime.morestack_noctxt(SB)
	0x0344 00836 (pointer_vs_value/code/benchmark_invocation_test.go:100)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 b8 fc ff  eH..%....H..$...
	0x0010 ff 48 3b 41 10 0f 86 24 03 00 00 48 81 ec c8 03  .H;A...$...H....
	0x0020 00 00 48 89 ac 24 c0 03 00 00 48 8d ac 24 c0 03  ..H..$....H..$..
	0x0030 00 00 e8 00 00 00 00 48 8d bc 24 60 02 00 00 48  .......H..$`...H
	0x0040 89 e6 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00  ..H.l$.H.l$.....
	0x0050 00 48 8b 6d 00 48 c7 84 24 68 01 00 00 00 00 00  .H.m.H..$h......
	0x0060 00 eb 00 48 8b 84 24 d0 03 00 00 84 00 48 8b 80  ...H..$......H..
	0x0070 08 01 00 00 48 39 84 24 68 01 00 00 7c 05 e9 ac  ....H9.$h...|...
	0x0080 02 00 00 48 8d 84 24 60 02 00 00 48 89 84 24 a8  ...H..$`...H..$.
	0x0090 01 00 00 48 89 84 24 90 01 00 00 0f 57 c0 f2 0f  ...H..$.....W...
	0x00a0 11 84 24 60 01 00 00 0f 57 c9 0f 11 8c 24 b8 01  ..$`....W....$..
	0x00b0 00 00 48 8b 84 24 90 01 00 00 84 00 f2 0f 10 48  ..H..$.........H
	0x00c0 58 66 0f 2e c8 0f 85 10 02 00 00 7b 05 e9 09 02  Xf.........{....
	0x00d0 00 00 48 8d 05 00 00 00 00 48 89 84 24 d8 01 00  ..H......H..$...
	0x00e0 00 48 c7 84 24 e0 01 00 00 16 00 00 00 0f 57 c9  .H..$.........W.
	0x00f0 0f 11 8c 24 c8 01 00 00 0f 57 c9 0f 11 8c 24 28  ...$.....W....$(
	0x0100 02 00 00 48 8d 8c 24 28 02 00 00 48 89 8c 24 a0  ...H..$(...H..$.
	0x0110 01 00 00 84 01 48 8b 94 24 e0 01 00 00 48 8b 9c  .....H..$....H..
	0x0120 24 d8 01 00 00 48 89 94 24 30 02 00 00 48 89 9c  $....H..$0...H..
	0x0130 24 28 02 00 00 48 89 8c 24 b0 01 00 00 48 8d 15  $(...H..$....H..
	0x0140 00 00 00 00 48 89 94 24 18 02 00 00 48 89 8c 24  ....H..$....H..$
	0x0150 20 02 00 00 48 89 94 24 c8 01 00 00 48 89 8c 24   ...H..$....H..$
	0x0160 d0 01 00 00 eb 00 48 8b 8c 24 d0 01 00 00 48 8b  ......H..$....H.
	0x0170 9c 24 c8 01 00 00 48 89 9c 24 08 02 00 00 48 89  .$....H..$....H.
	0x0180 8c 24 10 02 00 00 f2 0f 11 84 24 60 01 00 00 48  .$........$`...H
	0x0190 8b 8c 24 10 02 00 00 48 8b 9c 24 08 02 00 00 48  ..$....H..$....H
	0x01a0 89 9c 24 b8 01 00 00 48 89 8c 24 c0 01 00 00 eb  ..$....H..$.....
	0x01b0 00 f2 0f 10 8c 24 60 01 00 00 f2 0f 11 8c 24 80  .....$`.......$.
	0x01c0 01 00 00 f2 0f 11 8c 24 78 01 00 00 48 8b 8c 24  .......$x...H..$
	0x01d0 c0 01 00 00 48 8b 9c 24 b8 01 00 00 48 89 9c 24  ....H..$....H..$
	0x01e0 f8 01 00 00 48 89 8c 24 00 02 00 00 f2 0f 10 8c  ....H..$........
	0x01f0 24 78 01 00 00 f2 0f 11 8c 24 70 01 00 00 48 8b  $x.......$p...H.
	0x0200 8c 24 f8 01 00 00 48 8b 9c 24 00 02 00 00 48 89  .$....H..$....H.
	0x0210 8c 24 e8 01 00 00 48 89 9c 24 f0 01 00 00 48 85  .$....H..$....H.
	0x0220 c9 75 05 e9 b1 00 00 00 0f 57 c9 0f 11 8c 24 38  .u.......W....$8
	0x0230 02 00 00 48 8d 8c 24 38 02 00 00 48 89 8c 24 98  ...H..$8...H..$.
	0x0240 01 00 00 84 01 48 8d 1d 00 00 00 00 48 89 9c 24  .....H......H..$
	0x0250 38 02 00 00 48 8d 35 00 00 00 00 48 89 b4 24 40  8...H.5....H..$@
	0x0260 02 00 00 84 01 eb 00 48 89 8c 24 48 02 00 00 48  .......H..$H...H
	0x0270 c7 84 24 50 02 00 00 01 00 00 00 48 c7 84 24 58  ..$P.......H..$X
	0x0280 02 00 00 01 00 00 00 48 89 0c 24 48 c7 44 24 08  .......H..$H.D$.
	0x0290 01 00 00 00 48 c7 44 24 10 01 00 00 00 e8 00 00  ....H.D$........
	0x02a0 00 00 eb 00 f2 0f 10 05 00 00 00 00 f2 0f 58 84  ..............X.
	0x02b0 24 70 01 00 00 f2 0f 11 05 00 00 00 00 eb 00 eb  $p..............
	0x02c0 00 48 8b 84 24 68 01 00 00 48 ff c0 48 89 84 24  .H..$h...H..H..$
	0x02d0 68 01 00 00 e9 8a fd ff ff eb c9 48 8b 8c 24 90  h..........H..$.
	0x02e0 01 00 00 84 01 48 8b 9c 24 90 01 00 00 84 03 48  .....H..$......H
	0x02f0 8b 09 0f 57 c9 f2 48 0f 2a c9 f2 0f 5e 4b 58 f2  ...W..H.*...^KX.
	0x0300 0f 11 8c 24 88 01 00 00 f2 0f 11 8c 24 60 01 00  ...$........$`..
	0x0310 00 0f 57 c9 0f 11 8c 24 b8 01 00 00 48 8d 05 00  ..W....$....H...
	0x0320 00 00 00 48 8d 15 00 00 00 00 e9 82 fe ff ff 48  ...H...........H
	0x0330 8b ac 24 c0 03 00 00 48 81 c4 c8 03 00 00 c3 e8  ..$....H........
	0x0340 00 00 00 00 e9 b7 fc ff ff                       .........
	rel 5+4 t=16 TLS+0
	rel 51+4 t=8 "".createMega+0
	rel 77+4 t=8 runtime.duffcopy+588
	rel 213+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 320+4 t=15 go.itab.*errors.errorString,error+0
	rel 584+4 t=15 type.string+0
	rel 599+4 t=15 ""..stmp_13+0
	rel 670+4 t=8 log.Fatal+0
	rel 680+4 t=15 "".F+0
	rel 697+4 t=15 "".F+0
	rel 799+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 806+4 t=15 go.itab.*errors.errorString,error+0
	rel 832+4 t=8 runtime.morestack_noctxt+0
type..hash."".mega STEXT dupok size=1359 args=0x18 locals=0xe0
	0x0000 00000 (<autogenerated>:1)	TEXT	type..hash."".mega(SB), DUPOK|ABIInternal, $224-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	LEAQ	-96(SP), AX
	0x000e 00014 (<autogenerated>:1)	CMPQ	AX, 16(CX)
	0x0012 00018 (<autogenerated>:1)	JLS	1349
	0x0018 00024 (<autogenerated>:1)	SUBQ	$224, SP
	0x001f 00031 (<autogenerated>:1)	MOVQ	BP, 216(SP)
	0x0027 00039 (<autogenerated>:1)	LEAQ	216(SP), BP
	0x002f 00047 (<autogenerated>:1)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x002f 00047 (<autogenerated>:1)	FUNCDATA	$1, gclocals·70d35692d895b27cdf4a28bc8dd112fb(SB)
	0x002f 00047 (<autogenerated>:1)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x002f 00047 (<autogenerated>:1)	PCDATA	$0, $0
	0x002f 00047 (<autogenerated>:1)	PCDATA	$1, $0
	0x002f 00047 (<autogenerated>:1)	MOVQ	$0, "".~r2+248(SP)
	0x003b 00059 (<autogenerated>:1)	PCDATA	$0, $1
	0x003b 00059 (<autogenerated>:1)	MOVQ	"".p+232(SP), AX
	0x0043 00067 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_3+80(SP)
	0x0048 00072 (<autogenerated>:1)	PCDATA	$0, $0
	0x0048 00072 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x004c 00076 (<autogenerated>:1)	MOVQ	"".h+240(SP), AX
	0x0054 00084 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0059 00089 (<autogenerated>:1)	MOVQ	$88, 16(SP)
	0x0062 00098 (<autogenerated>:1)	CALL	runtime.memhash(SB)
	0x0067 00103 (<autogenerated>:1)	MOVQ	24(SP), AX
	0x006c 00108 (<autogenerated>:1)	MOVQ	AX, "".h+240(SP)
	0x0074 00116 (<autogenerated>:1)	PCDATA	$0, $1
	0x0074 00116 (<autogenerated>:1)	MOVQ	"".p+232(SP), AX
	0x007c 00124 (<autogenerated>:1)	ADDQ	$88, AX
	0x0080 00128 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_4+72(SP)
	0x0085 00133 (<autogenerated>:1)	PCDATA	$0, $0
	0x0085 00133 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0089 00137 (<autogenerated>:1)	MOVQ	"".h+240(SP), AX
	0x0091 00145 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0096 00150 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x009b 00155 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x00a0 00160 (<autogenerated>:1)	MOVQ	AX, "".h+240(SP)
	0x00a8 00168 (<autogenerated>:1)	PCDATA	$0, $1
	0x00a8 00168 (<autogenerated>:1)	MOVQ	"".p+232(SP), AX
	0x00b0 00176 (<autogenerated>:1)	ADDQ	$96, AX
	0x00b4 00180 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_5+64(SP)
	0x00b9 00185 (<autogenerated>:1)	PCDATA	$0, $0
	0x00b9 00185 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x00bd 00189 (<autogenerated>:1)	MOVQ	"".h+240(SP), AX
	0x00c5 00197 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x00ca 00202 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x00cf 00207 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x00d4 00212 (<autogenerated>:1)	MOVQ	AX, "".h+240(SP)
	0x00dc 00220 (<autogenerated>:1)	PCDATA	$0, $1
	0x00dc 00220 (<autogenerated>:1)	MOVQ	"".p+232(SP), AX
	0x00e4 00228 (<autogenerated>:1)	ADDQ	$104, AX
	0x00e8 00232 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_6+56(SP)
	0x00ed 00237 (<autogenerated>:1)	PCDATA	$0, $0
	0x00ed 00237 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x00f1 00241 (<autogenerated>:1)	MOVQ	"".h+240(SP), AX
	0x00f9 00249 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x00fe 00254 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x0103 00259 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0108 00264 (<autogenerated>:1)	MOVQ	AX, "".h+240(SP)
	0x0110 00272 (<autogenerated>:1)	PCDATA	$0, $1
	0x0110 00272 (<autogenerated>:1)	MOVQ	"".p+232(SP), AX
	0x0118 00280 (<autogenerated>:1)	ADDQ	$112, AX
	0x011c 00284 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_7+48(SP)
	0x0121 00289 (<autogenerated>:1)	PCDATA	$0, $0
	0x0121 00289 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0125 00293 (<autogenerated>:1)	MOVQ	"".h+240(SP), AX
	0x012d 00301 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0132 00306 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x0137 00311 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x013c 00316 (<autogenerated>:1)	MOVQ	AX, "".h+240(SP)
	0x0144 00324 (<autogenerated>:1)	PCDATA	$0, $1
	0x0144 00324 (<autogenerated>:1)	MOVQ	"".p+232(SP), AX
	0x014c 00332 (<autogenerated>:1)	ADDQ	$120, AX
	0x0150 00336 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_8+40(SP)
	0x0155 00341 (<autogenerated>:1)	PCDATA	$0, $0
	0x0155 00341 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0159 00345 (<autogenerated>:1)	MOVQ	"".h+240(SP), AX
	0x0161 00353 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0166 00358 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x016b 00363 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0170 00368 (<autogenerated>:1)	MOVQ	AX, "".h+240(SP)
	0x0178 00376 (<autogenerated>:1)	PCDATA	$0, $1
	0x0178 00376 (<autogenerated>:1)	MOVQ	"".p+232(SP), AX
	0x0180 00384 (<autogenerated>:1)	SUBQ	$-128, AX
	0x0184 00388 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_9+32(SP)
	0x0189 00393 (<autogenerated>:1)	PCDATA	$0, $0
	0x0189 00393 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x018d 00397 (<autogenerated>:1)	MOVQ	"".h+240(SP), AX
	0x0195 00405 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x019a 00410 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x019f 00415 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x01a4 00420 (<autogenerated>:1)	MOVQ	AX, "".h+240(SP)
	0x01ac 00428 (<autogenerated>:1)	PCDATA	$0, $1
	0x01ac 00428 (<autogenerated>:1)	MOVQ	"".p+232(SP), AX
	0x01b4 00436 (<autogenerated>:1)	ADDQ	$136, AX
	0x01ba 00442 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_10+208(SP)
	0x01c2 00450 (<autogenerated>:1)	PCDATA	$0, $0
	0x01c2 00450 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x01c6 00454 (<autogenerated>:1)	MOVQ	"".h+240(SP), AX
	0x01ce 00462 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x01d3 00467 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x01d8 00472 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x01dd 00477 (<autogenerated>:1)	MOVQ	AX, "".h+240(SP)
	0x01e5 00485 (<autogenerated>:1)	PCDATA	$0, $1
	0x01e5 00485 (<autogenerated>:1)	MOVQ	"".p+232(SP), AX
	0x01ed 00493 (<autogenerated>:1)	ADDQ	$144, AX
	0x01f3 00499 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_11+200(SP)
	0x01fb 00507 (<autogenerated>:1)	PCDATA	$0, $0
	0x01fb 00507 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x01ff 00511 (<autogenerated>:1)	MOVQ	"".h+240(SP), AX
	0x0207 00519 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x020c 00524 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x0211 00529 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0216 00534 (<autogenerated>:1)	MOVQ	AX, "".h+240(SP)
	0x021e 00542 (<autogenerated>:1)	PCDATA	$0, $1
	0x021e 00542 (<autogenerated>:1)	MOVQ	"".p+232(SP), AX
	0x0226 00550 (<autogenerated>:1)	ADDQ	$152, AX
	0x022c 00556 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_12+192(SP)
	0x0234 00564 (<autogenerated>:1)	PCDATA	$0, $0
	0x0234 00564 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0238 00568 (<autogenerated>:1)	MOVQ	"".h+240(SP), AX
	0x0240 00576 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0245 00581 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x024a 00586 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x024f 00591 (<autogenerated>:1)	MOVQ	AX, "".h+240(SP)
	0x0257 00599 (<autogenerated>:1)	PCDATA	$0, $1
	0x0257 00599 (<autogenerated>:1)	MOVQ	"".p+232(SP), AX
	0x025f 00607 (<autogenerated>:1)	ADDQ	$160, AX
	0x0265 00613 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_13+184(SP)
	0x026d 00621 (<autogenerated>:1)	PCDATA	$0, $0
	0x026d 00621 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0271 00625 (<autogenerated>:1)	MOVQ	"".h+240(SP), AX
	0x0279 00633 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x027e 00638 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x0283 00643 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0288 00648 (<autogenerated>:1)	MOVQ	AX, "".h+240(SP)
	0x0290 00656 (<autogenerated>:1)	PCDATA	$0, $1
	0x0290 00656 (<autogenerated>:1)	MOVQ	"".p+232(SP), AX
	0x0298 00664 (<autogenerated>:1)	ADDQ	$168, AX
	0x029e 00670 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_14+176(SP)
	0x02a6 00678 (<autogenerated>:1)	PCDATA	$0, $0
	0x02a6 00678 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x02aa 00682 (<autogenerated>:1)	MOVQ	"".h+240(SP), AX
	0x02b2 00690 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x02b7 00695 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x02bc 00700 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x02c1 00705 (<autogenerated>:1)	MOVQ	AX, "".h+240(SP)
	0x02c9 00713 (<autogenerated>:1)	PCDATA	$0, $1
	0x02c9 00713 (<autogenerated>:1)	MOVQ	"".p+232(SP), AX
	0x02d1 00721 (<autogenerated>:1)	ADDQ	$176, AX
	0x02d7 00727 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_15+168(SP)
	0x02df 00735 (<autogenerated>:1)	PCDATA	$0, $0
	0x02df 00735 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x02e3 00739 (<autogenerated>:1)	MOVQ	"".h+240(SP), AX
	0x02eb 00747 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x02f0 00752 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x02f5 00757 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x02fa 00762 (<autogenerated>:1)	MOVQ	AX, "".h+240(SP)
	0x0302 00770 (<autogenerated>:1)	PCDATA	$0, $1
	0x0302 00770 (<autogenerated>:1)	MOVQ	"".p+232(SP), AX
	0x030a 00778 (<autogenerated>:1)	ADDQ	$192, AX
	0x0310 00784 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_16+160(SP)
	0x0318 00792 (<autogenerated>:1)	PCDATA	$0, $0
	0x0318 00792 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x031c 00796 (<autogenerated>:1)	MOVQ	"".h+240(SP), AX
	0x0324 00804 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0329 00809 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x032e 00814 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0333 00819 (<autogenerated>:1)	MOVQ	AX, "".h+240(SP)
	0x033b 00827 (<autogenerated>:1)	PCDATA	$0, $1
	0x033b 00827 (<autogenerated>:1)	MOVQ	"".p+232(SP), AX
	0x0343 00835 (<autogenerated>:1)	ADDQ	$208, AX
	0x0349 00841 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_17+152(SP)
	0x0351 00849 (<autogenerated>:1)	PCDATA	$0, $0
	0x0351 00849 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0355 00853 (<autogenerated>:1)	MOVQ	"".h+240(SP), AX
	0x035d 00861 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0362 00866 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x0367 00871 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x036c 00876 (<autogenerated>:1)	MOVQ	AX, "".h+240(SP)
	0x0374 00884 (<autogenerated>:1)	PCDATA	$0, $1
	0x0374 00884 (<autogenerated>:1)	MOVQ	"".p+232(SP), AX
	0x037c 00892 (<autogenerated>:1)	ADDQ	$224, AX
	0x0382 00898 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_18+144(SP)
	0x038a 00906 (<autogenerated>:1)	PCDATA	$0, $0
	0x038a 00906 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x038e 00910 (<autogenerated>:1)	MOVQ	"".h+240(SP), AX
	0x0396 00918 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x039b 00923 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x03a0 00928 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x03a5 00933 (<autogenerated>:1)	MOVQ	AX, "".h+240(SP)
	0x03ad 00941 (<autogenerated>:1)	PCDATA	$0, $1
	0x03ad 00941 (<autogenerated>:1)	MOVQ	"".p+232(SP), AX
	0x03b5 00949 (<autogenerated>:1)	ADDQ	$240, AX
	0x03bb 00955 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_19+136(SP)
	0x03c3 00963 (<autogenerated>:1)	PCDATA	$0, $0
	0x03c3 00963 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x03c7 00967 (<autogenerated>:1)	MOVQ	"".h+240(SP), AX
	0x03cf 00975 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x03d4 00980 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x03d9 00985 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x03de 00990 (<autogenerated>:1)	MOVQ	AX, "".h+240(SP)
	0x03e6 00998 (<autogenerated>:1)	PCDATA	$0, $1
	0x03e6 00998 (<autogenerated>:1)	MOVQ	"".p+232(SP), AX
	0x03ee 01006 (<autogenerated>:1)	ADDQ	$256, AX
	0x03f4 01012 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_20+128(SP)
	0x03fc 01020 (<autogenerated>:1)	PCDATA	$0, $0
	0x03fc 01020 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0400 01024 (<autogenerated>:1)	MOVQ	"".h+240(SP), AX
	0x0408 01032 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x040d 01037 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x0412 01042 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0417 01047 (<autogenerated>:1)	MOVQ	AX, "".h+240(SP)
	0x041f 01055 (<autogenerated>:1)	PCDATA	$0, $1
	0x041f 01055 (<autogenerated>:1)	MOVQ	"".p+232(SP), AX
	0x0427 01063 (<autogenerated>:1)	ADDQ	$272, AX
	0x042d 01069 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_21+120(SP)
	0x0432 01074 (<autogenerated>:1)	PCDATA	$0, $0
	0x0432 01074 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0436 01078 (<autogenerated>:1)	MOVQ	"".h+240(SP), AX
	0x043e 01086 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0443 01091 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x0448 01096 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x044d 01101 (<autogenerated>:1)	MOVQ	AX, "".h+240(SP)
	0x0455 01109 (<autogenerated>:1)	PCDATA	$0, $1
	0x0455 01109 (<autogenerated>:1)	MOVQ	"".p+232(SP), AX
	0x045d 01117 (<autogenerated>:1)	ADDQ	$288, AX
	0x0463 01123 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_22+112(SP)
	0x0468 01128 (<autogenerated>:1)	PCDATA	$0, $0
	0x0468 01128 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x046c 01132 (<autogenerated>:1)	MOVQ	"".h+240(SP), AX
	0x0474 01140 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0479 01145 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x047e 01150 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0483 01155 (<autogenerated>:1)	MOVQ	AX, "".h+240(SP)
	0x048b 01163 (<autogenerated>:1)	PCDATA	$0, $1
	0x048b 01163 (<autogenerated>:1)	MOVQ	"".p+232(SP), AX
	0x0493 01171 (<autogenerated>:1)	ADDQ	$304, AX
	0x0499 01177 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_23+104(SP)
	0x049e 01182 (<autogenerated>:1)	PCDATA	$0, $0
	0x049e 01182 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x04a2 01186 (<autogenerated>:1)	MOVQ	"".h+240(SP), AX
	0x04aa 01194 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x04af 01199 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x04b4 01204 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x04b9 01209 (<autogenerated>:1)	MOVQ	AX, "".h+240(SP)
	0x04c1 01217 (<autogenerated>:1)	PCDATA	$0, $1
	0x04c1 01217 (<autogenerated>:1)	MOVQ	"".p+232(SP), AX
	0x04c9 01225 (<autogenerated>:1)	ADDQ	$320, AX
	0x04cf 01231 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_24+96(SP)
	0x04d4 01236 (<autogenerated>:1)	PCDATA	$0, $0
	0x04d4 01236 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x04d8 01240 (<autogenerated>:1)	MOVQ	"".h+240(SP), AX
	0x04e0 01248 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x04e5 01253 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x04ea 01258 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x04ef 01263 (<autogenerated>:1)	MOVQ	AX, "".h+240(SP)
	0x04f7 01271 (<autogenerated>:1)	PCDATA	$0, $1
	0x04f7 01271 (<autogenerated>:1)	PCDATA	$1, $1
	0x04f7 01271 (<autogenerated>:1)	MOVQ	"".p+232(SP), AX
	0x04ff 01279 (<autogenerated>:1)	ADDQ	$336, AX
	0x0505 01285 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_25+88(SP)
	0x050a 01290 (<autogenerated>:1)	PCDATA	$0, $0
	0x050a 01290 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x050e 01294 (<autogenerated>:1)	MOVQ	"".h+240(SP), AX
	0x0516 01302 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x051b 01307 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x0520 01312 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0525 01317 (<autogenerated>:1)	MOVQ	AX, "".h+240(SP)
	0x052d 01325 (<autogenerated>:1)	MOVQ	AX, "".~r2+248(SP)
	0x0535 01333 (<autogenerated>:1)	MOVQ	216(SP), BP
	0x053d 01341 (<autogenerated>:1)	ADDQ	$224, SP
	0x0544 01348 (<autogenerated>:1)	RET
	0x0545 01349 (<autogenerated>:1)	NOP
	0x0545 01349 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0545 01349 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0545 01349 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x054a 01354 (<autogenerated>:1)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 44 24 a0 48 3b  eH..%....H.D$.H;
	0x0010 41 10 0f 86 2d 05 00 00 48 81 ec e0 00 00 00 48  A...-...H......H
	0x0020 89 ac 24 d8 00 00 00 48 8d ac 24 d8 00 00 00 48  ..$....H..$....H
	0x0030 c7 84 24 f8 00 00 00 00 00 00 00 48 8b 84 24 e8  ..$........H..$.
	0x0040 00 00 00 48 89 44 24 50 48 89 04 24 48 8b 84 24  ...H.D$PH..$H..$
	0x0050 f0 00 00 00 48 89 44 24 08 48 c7 44 24 10 58 00  ....H.D$.H.D$.X.
	0x0060 00 00 e8 00 00 00 00 48 8b 44 24 18 48 89 84 24  .......H.D$.H..$
	0x0070 f0 00 00 00 48 8b 84 24 e8 00 00 00 48 83 c0 58  ....H..$....H..X
	0x0080 48 89 44 24 48 48 89 04 24 48 8b 84 24 f0 00 00  H.D$HH..$H..$...
	0x0090 00 48 89 44 24 08 e8 00 00 00 00 48 8b 44 24 10  .H.D$......H.D$.
	0x00a0 48 89 84 24 f0 00 00 00 48 8b 84 24 e8 00 00 00  H..$....H..$....
	0x00b0 48 83 c0 60 48 89 44 24 40 48 89 04 24 48 8b 84  H..`H.D$@H..$H..
	0x00c0 24 f0 00 00 00 48 89 44 24 08 e8 00 00 00 00 48  $....H.D$......H
	0x00d0 8b 44 24 10 48 89 84 24 f0 00 00 00 48 8b 84 24  .D$.H..$....H..$
	0x00e0 e8 00 00 00 48 83 c0 68 48 89 44 24 38 48 89 04  ....H..hH.D$8H..
	0x00f0 24 48 8b 84 24 f0 00 00 00 48 89 44 24 08 e8 00  $H..$....H.D$...
	0x0100 00 00 00 48 8b 44 24 10 48 89 84 24 f0 00 00 00  ...H.D$.H..$....
	0x0110 48 8b 84 24 e8 00 00 00 48 83 c0 70 48 89 44 24  H..$....H..pH.D$
	0x0120 30 48 89 04 24 48 8b 84 24 f0 00 00 00 48 89 44  0H..$H..$....H.D
	0x0130 24 08 e8 00 00 00 00 48 8b 44 24 10 48 89 84 24  $......H.D$.H..$
	0x0140 f0 00 00 00 48 8b 84 24 e8 00 00 00 48 83 c0 78  ....H..$....H..x
	0x0150 48 89 44 24 28 48 89 04 24 48 8b 84 24 f0 00 00  H.D$(H..$H..$...
	0x0160 00 48 89 44 24 08 e8 00 00 00 00 48 8b 44 24 10  .H.D$......H.D$.
	0x0170 48 89 84 24 f0 00 00 00 48 8b 84 24 e8 00 00 00  H..$....H..$....
	0x0180 48 83 e8 80 48 89 44 24 20 48 89 04 24 48 8b 84  H...H.D$ H..$H..
	0x0190 24 f0 00 00 00 48 89 44 24 08 e8 00 00 00 00 48  $....H.D$......H
	0x01a0 8b 44 24 10 48 89 84 24 f0 00 00 00 48 8b 84 24  .D$.H..$....H..$
	0x01b0 e8 00 00 00 48 05 88 00 00 00 48 89 84 24 d0 00  ....H.....H..$..
	0x01c0 00 00 48 89 04 24 48 8b 84 24 f0 00 00 00 48 89  ..H..$H..$....H.
	0x01d0 44 24 08 e8 00 00 00 00 48 8b 44 24 10 48 89 84  D$......H.D$.H..
	0x01e0 24 f0 00 00 00 48 8b 84 24 e8 00 00 00 48 05 90  $....H..$....H..
	0x01f0 00 00 00 48 89 84 24 c8 00 00 00 48 89 04 24 48  ...H..$....H..$H
	0x0200 8b 84 24 f0 00 00 00 48 89 44 24 08 e8 00 00 00  ..$....H.D$.....
	0x0210 00 48 8b 44 24 10 48 89 84 24 f0 00 00 00 48 8b  .H.D$.H..$....H.
	0x0220 84 24 e8 00 00 00 48 05 98 00 00 00 48 89 84 24  .$....H.....H..$
	0x0230 c0 00 00 00 48 89 04 24 48 8b 84 24 f0 00 00 00  ....H..$H..$....
	0x0240 48 89 44 24 08 e8 00 00 00 00 48 8b 44 24 10 48  H.D$......H.D$.H
	0x0250 89 84 24 f0 00 00 00 48 8b 84 24 e8 00 00 00 48  ..$....H..$....H
	0x0260 05 a0 00 00 00 48 89 84 24 b8 00 00 00 48 89 04  .....H..$....H..
	0x0270 24 48 8b 84 24 f0 00 00 00 48 89 44 24 08 e8 00  $H..$....H.D$...
	0x0280 00 00 00 48 8b 44 24 10 48 89 84 24 f0 00 00 00  ...H.D$.H..$....
	0x0290 48 8b 84 24 e8 00 00 00 48 05 a8 00 00 00 48 89  H..$....H.....H.
	0x02a0 84 24 b0 00 00 00 48 89 04 24 48 8b 84 24 f0 00  .$....H..$H..$..
	0x02b0 00 00 48 89 44 24 08 e8 00 00 00 00 48 8b 44 24  ..H.D$......H.D$
	0x02c0 10 48 89 84 24 f0 00 00 00 48 8b 84 24 e8 00 00  .H..$....H..$...
	0x02d0 00 48 05 b0 00 00 00 48 89 84 24 a8 00 00 00 48  .H.....H..$....H
	0x02e0 89 04 24 48 8b 84 24 f0 00 00 00 48 89 44 24 08  ..$H..$....H.D$.
	0x02f0 e8 00 00 00 00 48 8b 44 24 10 48 89 84 24 f0 00  .....H.D$.H..$..
	0x0300 00 00 48 8b 84 24 e8 00 00 00 48 05 c0 00 00 00  ..H..$....H.....
	0x0310 48 89 84 24 a0 00 00 00 48 89 04 24 48 8b 84 24  H..$....H..$H..$
	0x0320 f0 00 00 00 48 89 44 24 08 e8 00 00 00 00 48 8b  ....H.D$......H.
	0x0330 44 24 10 48 89 84 24 f0 00 00 00 48 8b 84 24 e8  D$.H..$....H..$.
	0x0340 00 00 00 48 05 d0 00 00 00 48 89 84 24 98 00 00  ...H.....H..$...
	0x0350 00 48 89 04 24 48 8b 84 24 f0 00 00 00 48 89 44  .H..$H..$....H.D
	0x0360 24 08 e8 00 00 00 00 48 8b 44 24 10 48 89 84 24  $......H.D$.H..$
	0x0370 f0 00 00 00 48 8b 84 24 e8 00 00 00 48 05 e0 00  ....H..$....H...
	0x0380 00 00 48 89 84 24 90 00 00 00 48 89 04 24 48 8b  ..H..$....H..$H.
	0x0390 84 24 f0 00 00 00 48 89 44 24 08 e8 00 00 00 00  .$....H.D$......
	0x03a0 48 8b 44 24 10 48 89 84 24 f0 00 00 00 48 8b 84  H.D$.H..$....H..
	0x03b0 24 e8 00 00 00 48 05 f0 00 00 00 48 89 84 24 88  $....H.....H..$.
	0x03c0 00 00 00 48 89 04 24 48 8b 84 24 f0 00 00 00 48  ...H..$H..$....H
	0x03d0 89 44 24 08 e8 00 00 00 00 48 8b 44 24 10 48 89  .D$......H.D$.H.
	0x03e0 84 24 f0 00 00 00 48 8b 84 24 e8 00 00 00 48 05  .$....H..$....H.
	0x03f0 00 01 00 00 48 89 84 24 80 00 00 00 48 89 04 24  ....H..$....H..$
	0x0400 48 8b 84 24 f0 00 00 00 48 89 44 24 08 e8 00 00  H..$....H.D$....
	0x0410 00 00 48 8b 44 24 10 48 89 84 24 f0 00 00 00 48  ..H.D$.H..$....H
	0x0420 8b 84 24 e8 00 00 00 48 05 10 01 00 00 48 89 44  ..$....H.....H.D
	0x0430 24 78 48 89 04 24 48 8b 84 24 f0 00 00 00 48 89  $xH..$H..$....H.
	0x0440 44 24 08 e8 00 00 00 00 48 8b 44 24 10 48 89 84  D$......H.D$.H..
	0x0450 24 f0 00 00 00 48 8b 84 24 e8 00 00 00 48 05 20  $....H..$....H. 
	0x0460 01 00 00 48 89 44 24 70 48 89 04 24 48 8b 84 24  ...H.D$pH..$H..$
	0x0470 f0 00 00 00 48 89 44 24 08 e8 00 00 00 00 48 8b  ....H.D$......H.
	0x0480 44 24 10 48 89 84 24 f0 00 00 00 48 8b 84 24 e8  D$.H..$....H..$.
	0x0490 00 00 00 48 05 30 01 00 00 48 89 44 24 68 48 89  ...H.0...H.D$hH.
	0x04a0 04 24 48 8b 84 24 f0 00 00 00 48 89 44 24 08 e8  .$H..$....H.D$..
	0x04b0 00 00 00 00 48 8b 44 24 10 48 89 84 24 f0 00 00  ....H.D$.H..$...
	0x04c0 00 48 8b 84 24 e8 00 00 00 48 05 40 01 00 00 48  .H..$....H.@...H
	0x04d0 89 44 24 60 48 89 04 24 48 8b 84 24 f0 00 00 00  .D$`H..$H..$....
	0x04e0 48 89 44 24 08 e8 00 00 00 00 48 8b 44 24 10 48  H.D$......H.D$.H
	0x04f0 89 84 24 f0 00 00 00 48 8b 84 24 e8 00 00 00 48  ..$....H..$....H
	0x0500 05 50 01 00 00 48 89 44 24 58 48 89 04 24 48 8b  .P...H.D$XH..$H.
	0x0510 84 24 f0 00 00 00 48 89 44 24 08 e8 00 00 00 00  .$....H.D$......
	0x0520 48 8b 44 24 10 48 89 84 24 f0 00 00 00 48 89 84  H.D$.H..$....H..
	0x0530 24 f8 00 00 00 48 8b ac 24 d8 00 00 00 48 81 c4  $....H..$....H..
	0x0540 e0 00 00 00 c3 e8 00 00 00 00 e9 b1 fa ff ff     ...............
	rel 5+4 t=16 TLS+0
	rel 99+4 t=8 runtime.memhash+0
	rel 151+4 t=8 runtime.f64hash+0
	rel 203+4 t=8 runtime.f64hash+0
	rel 255+4 t=8 runtime.f64hash+0
	rel 307+4 t=8 runtime.f64hash+0
	rel 359+4 t=8 runtime.f64hash+0
	rel 411+4 t=8 runtime.f64hash+0
	rel 468+4 t=8 runtime.f64hash+0
	rel 525+4 t=8 runtime.f64hash+0
	rel 582+4 t=8 runtime.f64hash+0
	rel 639+4 t=8 runtime.f64hash+0
	rel 696+4 t=8 runtime.f64hash+0
	rel 753+4 t=8 runtime.strhash+0
	rel 810+4 t=8 runtime.strhash+0
	rel 867+4 t=8 runtime.strhash+0
	rel 924+4 t=8 runtime.strhash+0
	rel 981+4 t=8 runtime.strhash+0
	rel 1038+4 t=8 runtime.strhash+0
	rel 1092+4 t=8 runtime.strhash+0
	rel 1146+4 t=8 runtime.strhash+0
	rel 1200+4 t=8 runtime.strhash+0
	rel 1254+4 t=8 runtime.strhash+0
	rel 1308+4 t=8 runtime.strhash+0
	rel 1350+4 t=8 runtime.morestack_noctxt+0
type..eq."".mega STEXT dupok size=2765 args=0x18 locals=0x1b0
	0x0000 00000 (<autogenerated>:1)	TEXT	type..eq."".mega(SB), DUPOK|ABIInternal, $432-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	LEAQ	-304(SP), AX
	0x0011 00017 (<autogenerated>:1)	CMPQ	AX, 16(CX)
	0x0015 00021 (<autogenerated>:1)	JLS	2755
	0x001b 00027 (<autogenerated>:1)	SUBQ	$432, SP
	0x0022 00034 (<autogenerated>:1)	MOVQ	BP, 424(SP)
	0x002a 00042 (<autogenerated>:1)	LEAQ	424(SP), BP
	0x0032 00050 (<autogenerated>:1)	FUNCDATA	$0, gclocals·6bd658b614c32f65838388fcb3afd1b4(SB)
	0x0032 00050 (<autogenerated>:1)	FUNCDATA	$1, gclocals·4f4d2614571ad903fd9564f54dbd7b8d(SB)
	0x0032 00050 (<autogenerated>:1)	FUNCDATA	$2, gclocals·6e8d7ea4abad763909b26991048ee1fe(SB)
	0x0032 00050 (<autogenerated>:1)	PCDATA	$0, $0
	0x0032 00050 (<autogenerated>:1)	PCDATA	$1, $0
	0x0032 00050 (<autogenerated>:1)	MOVB	$0, "".~r2+456(SP)
	0x003a 00058 (<autogenerated>:1)	PCDATA	$0, $1
	0x003a 00058 (<autogenerated>:1)	MOVQ	"".p+440(SP), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	PCDATA	$1, $1
	0x0042 00066 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_26+64(SP)
	0x0047 00071 (<autogenerated>:1)	PCDATA	$0, $1
	0x0047 00071 (<autogenerated>:1)	MOVQ	"".q+448(SP), AX
	0x004f 00079 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_27+56(SP)
	0x0054 00084 (<autogenerated>:1)	PCDATA	$0, $2
	0x0054 00084 (<autogenerated>:1)	PCDATA	$1, $0
	0x0054 00084 (<autogenerated>:1)	MOVQ	""..autotmp_26+64(SP), CX
	0x0059 00089 (<autogenerated>:1)	PCDATA	$0, $1
	0x0059 00089 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x005d 00093 (<autogenerated>:1)	PCDATA	$0, $0
	0x005d 00093 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0062 00098 (<autogenerated>:1)	MOVQ	$88, 16(SP)
	0x006b 00107 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x0070 00112 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x0075 00117 (<autogenerated>:1)	MOVB	AL, ""..autotmp_25+40(SP)
	0x0079 00121 (<autogenerated>:1)	MOVB	AL, ""..autotmp_24+41(SP)
	0x007d 00125 (<autogenerated>:1)	TESTB	AL, AL
	0x007f 00127 (<autogenerated>:1)	JNE	134
	0x0081 00129 (<autogenerated>:1)	JMP	2750
	0x0086 00134 (<autogenerated>:1)	PCDATA	$0, $1
	0x0086 00134 (<autogenerated>:1)	MOVQ	"".p+440(SP), AX
	0x008e 00142 (<autogenerated>:1)	PCDATA	$0, $0
	0x008e 00142 (<autogenerated>:1)	MOVSD	88(AX), X0
	0x0093 00147 (<autogenerated>:1)	PCDATA	$0, $1
	0x0093 00147 (<autogenerated>:1)	MOVQ	"".q+448(SP), AX
	0x009b 00155 (<autogenerated>:1)	PCDATA	$0, $0
	0x009b 00155 (<autogenerated>:1)	MOVSD	88(AX), X1
	0x00a0 00160 (<autogenerated>:1)	UCOMISD	X1, X0
	0x00a4 00164 (<autogenerated>:1)	SETEQ	CL
	0x00a7 00167 (<autogenerated>:1)	SETPC	AL
	0x00aa 00170 (<autogenerated>:1)	ANDL	AX, CX
	0x00ac 00172 (<autogenerated>:1)	MOVB	CL, ""..autotmp_24+41(SP)
	0x00b0 00176 (<autogenerated>:1)	JMP	178
	0x00b2 00178 (<autogenerated>:1)	MOVBLZX	""..autotmp_24+41(SP), AX
	0x00b7 00183 (<autogenerated>:1)	MOVB	AL, ""..autotmp_23+42(SP)
	0x00bb 00187 (<autogenerated>:1)	TESTB	AL, AL
	0x00bd 00189 (<autogenerated>:1)	JNE	196
	0x00bf 00191 (<autogenerated>:1)	JMP	2745
	0x00c4 00196 (<autogenerated>:1)	PCDATA	$0, $1
	0x00c4 00196 (<autogenerated>:1)	MOVQ	"".p+440(SP), AX
	0x00cc 00204 (<autogenerated>:1)	PCDATA	$0, $0
	0x00cc 00204 (<autogenerated>:1)	MOVSD	96(AX), X0
	0x00d1 00209 (<autogenerated>:1)	PCDATA	$0, $1
	0x00d1 00209 (<autogenerated>:1)	MOVQ	"".q+448(SP), AX
	0x00d9 00217 (<autogenerated>:1)	PCDATA	$0, $0
	0x00d9 00217 (<autogenerated>:1)	MOVSD	96(AX), X1
	0x00de 00222 (<autogenerated>:1)	UCOMISD	X1, X0
	0x00e2 00226 (<autogenerated>:1)	SETEQ	CL
	0x00e5 00229 (<autogenerated>:1)	SETPC	AL
	0x00e8 00232 (<autogenerated>:1)	ANDL	AX, CX
	0x00ea 00234 (<autogenerated>:1)	MOVB	CL, ""..autotmp_23+42(SP)
	0x00ee 00238 (<autogenerated>:1)	JMP	240
	0x00f0 00240 (<autogenerated>:1)	MOVBLZX	""..autotmp_23+42(SP), AX
	0x00f5 00245 (<autogenerated>:1)	MOVB	AL, ""..autotmp_22+43(SP)
	0x00f9 00249 (<autogenerated>:1)	TESTB	AL, AL
	0x00fb 00251 (<autogenerated>:1)	JNE	258
	0x00fd 00253 (<autogenerated>:1)	JMP	2740
	0x0102 00258 (<autogenerated>:1)	PCDATA	$0, $1
	0x0102 00258 (<autogenerated>:1)	MOVQ	"".p+440(SP), AX
	0x010a 00266 (<autogenerated>:1)	PCDATA	$0, $0
	0x010a 00266 (<autogenerated>:1)	MOVSD	104(AX), X0
	0x010f 00271 (<autogenerated>:1)	PCDATA	$0, $1
	0x010f 00271 (<autogenerated>:1)	MOVQ	"".q+448(SP), AX
	0x0117 00279 (<autogenerated>:1)	PCDATA	$0, $0
	0x0117 00279 (<autogenerated>:1)	MOVSD	104(AX), X1
	0x011c 00284 (<autogenerated>:1)	UCOMISD	X1, X0
	0x0120 00288 (<autogenerated>:1)	SETEQ	CL
	0x0123 00291 (<autogenerated>:1)	SETPC	AL
	0x0126 00294 (<autogenerated>:1)	ANDL	AX, CX
	0x0128 00296 (<autogenerated>:1)	MOVB	CL, ""..autotmp_22+43(SP)
	0x012c 00300 (<autogenerated>:1)	JMP	302
	0x012e 00302 (<autogenerated>:1)	MOVBLZX	""..autotmp_22+43(SP), AX
	0x0133 00307 (<autogenerated>:1)	MOVB	AL, ""..autotmp_21+44(SP)
	0x0137 00311 (<autogenerated>:1)	TESTB	AL, AL
	0x0139 00313 (<autogenerated>:1)	JNE	320
	0x013b 00315 (<autogenerated>:1)	JMP	2735
	0x0140 00320 (<autogenerated>:1)	PCDATA	$0, $1
	0x0140 00320 (<autogenerated>:1)	MOVQ	"".p+440(SP), AX
	0x0148 00328 (<autogenerated>:1)	PCDATA	$0, $0
	0x0148 00328 (<autogenerated>:1)	MOVSD	112(AX), X0
	0x014d 00333 (<autogenerated>:1)	PCDATA	$0, $1
	0x014d 00333 (<autogenerated>:1)	MOVQ	"".q+448(SP), AX
	0x0155 00341 (<autogenerated>:1)	PCDATA	$0, $0
	0x0155 00341 (<autogenerated>:1)	MOVSD	112(AX), X1
	0x015a 00346 (<autogenerated>:1)	UCOMISD	X1, X0
	0x015e 00350 (<autogenerated>:1)	SETEQ	CL
	0x0161 00353 (<autogenerated>:1)	SETPC	AL
	0x0164 00356 (<autogenerated>:1)	ANDL	AX, CX
	0x0166 00358 (<autogenerated>:1)	MOVB	CL, ""..autotmp_21+44(SP)
	0x016a 00362 (<autogenerated>:1)	JMP	364
	0x016c 00364 (<autogenerated>:1)	MOVBLZX	""..autotmp_21+44(SP), AX
	0x0171 00369 (<autogenerated>:1)	MOVB	AL, ""..autotmp_20+45(SP)
	0x0175 00373 (<autogenerated>:1)	TESTB	AL, AL
	0x0177 00375 (<autogenerated>:1)	JNE	382
	0x0179 00377 (<autogenerated>:1)	JMP	2730
	0x017e 00382 (<autogenerated>:1)	PCDATA	$0, $1
	0x017e 00382 (<autogenerated>:1)	MOVQ	"".p+440(SP), AX
	0x0186 00390 (<autogenerated>:1)	PCDATA	$0, $0
	0x0186 00390 (<autogenerated>:1)	MOVSD	120(AX), X0
	0x018b 00395 (<autogenerated>:1)	PCDATA	$0, $1
	0x018b 00395 (<autogenerated>:1)	MOVQ	"".q+448(SP), AX
	0x0193 00403 (<autogenerated>:1)	PCDATA	$0, $0
	0x0193 00403 (<autogenerated>:1)	MOVSD	120(AX), X1
	0x0198 00408 (<autogenerated>:1)	UCOMISD	X1, X0
	0x019c 00412 (<autogenerated>:1)	SETEQ	CL
	0x019f 00415 (<autogenerated>:1)	SETPC	AL
	0x01a2 00418 (<autogenerated>:1)	ANDL	AX, CX
	0x01a4 00420 (<autogenerated>:1)	MOVB	CL, ""..autotmp_20+45(SP)
	0x01a8 00424 (<autogenerated>:1)	JMP	426
	0x01aa 00426 (<autogenerated>:1)	MOVBLZX	""..autotmp_20+45(SP), AX
	0x01af 00431 (<autogenerated>:1)	MOVB	AL, ""..autotmp_19+46(SP)
	0x01b3 00435 (<autogenerated>:1)	TESTB	AL, AL
	0x01b5 00437 (<autogenerated>:1)	JNE	444
	0x01b7 00439 (<autogenerated>:1)	JMP	2725
	0x01bc 00444 (<autogenerated>:1)	PCDATA	$0, $1
	0x01bc 00444 (<autogenerated>:1)	MOVQ	"".p+440(SP), AX
	0x01c4 00452 (<autogenerated>:1)	PCDATA	$0, $0
	0x01c4 00452 (<autogenerated>:1)	MOVSD	128(AX), X0
	0x01cc 00460 (<autogenerated>:1)	PCDATA	$0, $1
	0x01cc 00460 (<autogenerated>:1)	MOVQ	"".q+448(SP), AX
	0x01d4 00468 (<autogenerated>:1)	PCDATA	$0, $0
	0x01d4 00468 (<autogenerated>:1)	MOVSD	128(AX), X1
	0x01dc 00476 (<autogenerated>:1)	UCOMISD	X1, X0
	0x01e0 00480 (<autogenerated>:1)	SETEQ	CL
	0x01e3 00483 (<autogenerated>:1)	SETPC	AL
	0x01e6 00486 (<autogenerated>:1)	ANDL	AX, CX
	0x01e8 00488 (<autogenerated>:1)	MOVB	CL, ""..autotmp_19+46(SP)
	0x01ec 00492 (<autogenerated>:1)	JMP	494
	0x01ee 00494 (<autogenerated>:1)	MOVBLZX	""..autotmp_19+46(SP), AX
	0x01f3 00499 (<autogenerated>:1)	MOVB	AL, ""..autotmp_18+47(SP)
	0x01f7 00503 (<autogenerated>:1)	TESTB	AL, AL
	0x01f9 00505 (<autogenerated>:1)	JNE	512
	0x01fb 00507 (<autogenerated>:1)	JMP	2720
	0x0200 00512 (<autogenerated>:1)	PCDATA	$0, $1
	0x0200 00512 (<autogenerated>:1)	MOVQ	"".p+440(SP), AX
	0x0208 00520 (<autogenerated>:1)	PCDATA	$0, $0
	0x0208 00520 (<autogenerated>:1)	MOVSD	136(AX), X0
	0x0210 00528 (<autogenerated>:1)	PCDATA	$0, $1
	0x0210 00528 (<autogenerated>:1)	MOVQ	"".q+448(SP), AX
	0x0218 00536 (<autogenerated>:1)	PCDATA	$0, $0
	0x0218 00536 (<autogenerated>:1)	MOVSD	136(AX), X1
	0x0220 00544 (<autogenerated>:1)	UCOMISD	X1, X0
	0x0224 00548 (<autogenerated>:1)	SETEQ	CL
	0x0227 00551 (<autogenerated>:1)	SETPC	AL
	0x022a 00554 (<autogenerated>:1)	ANDL	AX, CX
	0x022c 00556 (<autogenerated>:1)	MOVB	CL, ""..autotmp_18+47(SP)
	0x0230 00560 (<autogenerated>:1)	JMP	562
	0x0232 00562 (<autogenerated>:1)	MOVBLZX	""..autotmp_18+47(SP), AX
	0x0237 00567 (<autogenerated>:1)	MOVB	AL, ""..autotmp_17+48(SP)
	0x023b 00571 (<autogenerated>:1)	TESTB	AL, AL
	0x023d 00573 (<autogenerated>:1)	JNE	580
	0x023f 00575 (<autogenerated>:1)	JMP	2715
	0x0244 00580 (<autogenerated>:1)	PCDATA	$0, $1
	0x0244 00580 (<autogenerated>:1)	MOVQ	"".p+440(SP), AX
	0x024c 00588 (<autogenerated>:1)	PCDATA	$0, $0
	0x024c 00588 (<autogenerated>:1)	MOVSD	144(AX), X0
	0x0254 00596 (<autogenerated>:1)	PCDATA	$0, $1
	0x0254 00596 (<autogenerated>:1)	MOVQ	"".q+448(SP), AX
	0x025c 00604 (<autogenerated>:1)	PCDATA	$0, $0
	0x025c 00604 (<autogenerated>:1)	MOVSD	144(AX), X1
	0x0264 00612 (<autogenerated>:1)	UCOMISD	X1, X0
	0x0268 00616 (<autogenerated>:1)	SETEQ	CL
	0x026b 00619 (<autogenerated>:1)	SETPC	AL
	0x026e 00622 (<autogenerated>:1)	ANDL	AX, CX
	0x0270 00624 (<autogenerated>:1)	MOVB	CL, ""..autotmp_17+48(SP)
	0x0274 00628 (<autogenerated>:1)	JMP	630
	0x0276 00630 (<autogenerated>:1)	MOVBLZX	""..autotmp_17+48(SP), AX
	0x027b 00635 (<autogenerated>:1)	MOVB	AL, ""..autotmp_16+49(SP)
	0x027f 00639 (<autogenerated>:1)	TESTB	AL, AL
	0x0281 00641 (<autogenerated>:1)	JNE	648
	0x0283 00643 (<autogenerated>:1)	JMP	2710
	0x0288 00648 (<autogenerated>:1)	PCDATA	$0, $1
	0x0288 00648 (<autogenerated>:1)	MOVQ	"".p+440(SP), AX
	0x0290 00656 (<autogenerated>:1)	PCDATA	$0, $0
	0x0290 00656 (<autogenerated>:1)	MOVSD	152(AX), X0
	0x0298 00664 (<autogenerated>:1)	PCDATA	$0, $1
	0x0298 00664 (<autogenerated>:1)	MOVQ	"".q+448(SP), AX
	0x02a0 00672 (<autogenerated>:1)	PCDATA	$0, $0
	0x02a0 00672 (<autogenerated>:1)	MOVSD	152(AX), X1
	0x02a8 00680 (<autogenerated>:1)	UCOMISD	X1, X0
	0x02ac 00684 (<autogenerated>:1)	SETEQ	CL
	0x02af 00687 (<autogenerated>:1)	SETPC	AL
	0x02b2 00690 (<autogenerated>:1)	ANDL	AX, CX
	0x02b4 00692 (<autogenerated>:1)	MOVB	CL, ""..autotmp_16+49(SP)
	0x02b8 00696 (<autogenerated>:1)	JMP	698
	0x02ba 00698 (<autogenerated>:1)	MOVBLZX	""..autotmp_16+49(SP), AX
	0x02bf 00703 (<autogenerated>:1)	MOVB	AL, ""..autotmp_15+50(SP)
	0x02c3 00707 (<autogenerated>:1)	TESTB	AL, AL
	0x02c5 00709 (<autogenerated>:1)	JNE	716
	0x02c7 00711 (<autogenerated>:1)	JMP	2705
	0x02cc 00716 (<autogenerated>:1)	PCDATA	$0, $1
	0x02cc 00716 (<autogenerated>:1)	MOVQ	"".p+440(SP), AX
	0x02d4 00724 (<autogenerated>:1)	PCDATA	$0, $0
	0x02d4 00724 (<autogenerated>:1)	MOVSD	160(AX), X0
	0x02dc 00732 (<autogenerated>:1)	PCDATA	$0, $1
	0x02dc 00732 (<autogenerated>:1)	MOVQ	"".q+448(SP), AX
	0x02e4 00740 (<autogenerated>:1)	PCDATA	$0, $0
	0x02e4 00740 (<autogenerated>:1)	MOVSD	160(AX), X1
	0x02ec 00748 (<autogenerated>:1)	UCOMISD	X1, X0
	0x02f0 00752 (<autogenerated>:1)	SETEQ	CL
	0x02f3 00755 (<autogenerated>:1)	SETPC	AL
	0x02f6 00758 (<autogenerated>:1)	ANDL	AX, CX
	0x02f8 00760 (<autogenerated>:1)	MOVB	CL, ""..autotmp_15+50(SP)
	0x02fc 00764 (<autogenerated>:1)	JMP	766
	0x02fe 00766 (<autogenerated>:1)	MOVBLZX	""..autotmp_15+50(SP), AX
	0x0303 00771 (<autogenerated>:1)	MOVB	AL, ""..autotmp_14+51(SP)
	0x0307 00775 (<autogenerated>:1)	TESTB	AL, AL
	0x0309 00777 (<autogenerated>:1)	JNE	784
	0x030b 00779 (<autogenerated>:1)	JMP	2700
	0x0310 00784 (<autogenerated>:1)	PCDATA	$0, $1
	0x0310 00784 (<autogenerated>:1)	MOVQ	"".p+440(SP), AX
	0x0318 00792 (<autogenerated>:1)	PCDATA	$0, $0
	0x0318 00792 (<autogenerated>:1)	MOVSD	168(AX), X0
	0x0320 00800 (<autogenerated>:1)	PCDATA	$0, $1
	0x0320 00800 (<autogenerated>:1)	MOVQ	"".q+448(SP), AX
	0x0328 00808 (<autogenerated>:1)	PCDATA	$0, $0
	0x0328 00808 (<autogenerated>:1)	MOVSD	168(AX), X1
	0x0330 00816 (<autogenerated>:1)	UCOMISD	X1, X0
	0x0334 00820 (<autogenerated>:1)	SETEQ	CL
	0x0337 00823 (<autogenerated>:1)	SETPC	AL
	0x033a 00826 (<autogenerated>:1)	ANDL	AX, CX
	0x033c 00828 (<autogenerated>:1)	MOVB	CL, ""..autotmp_14+51(SP)
	0x0340 00832 (<autogenerated>:1)	JMP	834
	0x0342 00834 (<autogenerated>:1)	MOVBLZX	""..autotmp_14+51(SP), AX
	0x0347 00839 (<autogenerated>:1)	MOVB	AL, ""..autotmp_13+52(SP)
	0x034b 00843 (<autogenerated>:1)	TESTB	AL, AL
	0x034d 00845 (<autogenerated>:1)	JNE	852
	0x034f 00847 (<autogenerated>:1)	JMP	2695
	0x0354 00852 (<autogenerated>:1)	PCDATA	$0, $1
	0x0354 00852 (<autogenerated>:1)	MOVQ	"".p+440(SP), AX
	0x035c 00860 (<autogenerated>:1)	MOVQ	184(AX), CX
	0x0363 00867 (<autogenerated>:1)	MOVQ	176(AX), AX
	0x036a 00874 (<autogenerated>:1)	PCDATA	$0, $0
	0x036a 00874 (<autogenerated>:1)	PCDATA	$1, $2
	0x036a 00874 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_28+408(SP)
	0x0372 00882 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_28+416(SP)
	0x037a 00890 (<autogenerated>:1)	PCDATA	$0, $1
	0x037a 00890 (<autogenerated>:1)	MOVQ	"".q+448(SP), AX
	0x0382 00898 (<autogenerated>:1)	MOVQ	184(AX), CX
	0x0389 00905 (<autogenerated>:1)	MOVQ	176(AX), AX
	0x0390 00912 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_29+392(SP)
	0x0398 00920 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_29+400(SP)
	0x03a0 00928 (<autogenerated>:1)	CMPQ	""..autotmp_28+416(SP), CX
	0x03a8 00936 (<autogenerated>:1)	SETEQ	CL
	0x03ab 00939 (<autogenerated>:1)	JEQ	946
	0x03ad 00941 (<autogenerated>:1)	JMP	2688
	0x03b2 00946 (<autogenerated>:1)	PCDATA	$0, $2
	0x03b2 00946 (<autogenerated>:1)	MOVQ	""..autotmp_28+408(SP), CX
	0x03ba 00954 (<autogenerated>:1)	PCDATA	$0, $1
	0x03ba 00954 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x03be 00958 (<autogenerated>:1)	PCDATA	$0, $0
	0x03be 00958 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x03c3 00963 (<autogenerated>:1)	PCDATA	$1, $0
	0x03c3 00963 (<autogenerated>:1)	MOVQ	""..autotmp_28+416(SP), AX
	0x03cb 00971 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x03d0 00976 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x03d5 00981 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x03da 00986 (<autogenerated>:1)	JMP	988
	0x03dc 00988 (<autogenerated>:1)	MOVB	AL, ""..autotmp_13+52(SP)
	0x03e0 00992 (<autogenerated>:1)	JMP	994
	0x03e2 00994 (<autogenerated>:1)	MOVBLZX	""..autotmp_13+52(SP), AX
	0x03e7 00999 (<autogenerated>:1)	MOVB	AL, ""..autotmp_12+53(SP)
	0x03eb 01003 (<autogenerated>:1)	TESTB	AL, AL
	0x03ed 01005 (<autogenerated>:1)	JNE	1012
	0x03ef 01007 (<autogenerated>:1)	JMP	2683
	0x03f4 01012 (<autogenerated>:1)	PCDATA	$0, $1
	0x03f4 01012 (<autogenerated>:1)	MOVQ	"".p+440(SP), AX
	0x03fc 01020 (<autogenerated>:1)	PCDATA	$0, $2
	0x03fc 01020 (<autogenerated>:1)	MOVQ	192(AX), CX
	0x0403 01027 (<autogenerated>:1)	PCDATA	$0, $3
	0x0403 01027 (<autogenerated>:1)	MOVQ	200(AX), AX
	0x040a 01034 (<autogenerated>:1)	PCDATA	$0, $0
	0x040a 01034 (<autogenerated>:1)	PCDATA	$1, $3
	0x040a 01034 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_30+376(SP)
	0x0412 01042 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_30+384(SP)
	0x041a 01050 (<autogenerated>:1)	PCDATA	$0, $1
	0x041a 01050 (<autogenerated>:1)	MOVQ	"".q+448(SP), AX
	0x0422 01058 (<autogenerated>:1)	MOVQ	200(AX), CX
	0x0429 01065 (<autogenerated>:1)	MOVQ	192(AX), AX
	0x0430 01072 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_31+360(SP)
	0x0438 01080 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_31+368(SP)
	0x0440 01088 (<autogenerated>:1)	CMPQ	""..autotmp_30+384(SP), CX
	0x0448 01096 (<autogenerated>:1)	SETEQ	CL
	0x044b 01099 (<autogenerated>:1)	JEQ	1106
	0x044d 01101 (<autogenerated>:1)	JMP	2676
	0x0452 01106 (<autogenerated>:1)	PCDATA	$0, $2
	0x0452 01106 (<autogenerated>:1)	MOVQ	""..autotmp_30+376(SP), CX
	0x045a 01114 (<autogenerated>:1)	PCDATA	$0, $1
	0x045a 01114 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x045e 01118 (<autogenerated>:1)	PCDATA	$0, $0
	0x045e 01118 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0463 01123 (<autogenerated>:1)	PCDATA	$1, $0
	0x0463 01123 (<autogenerated>:1)	MOVQ	""..autotmp_30+384(SP), AX
	0x046b 01131 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x0470 01136 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x0475 01141 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x047a 01146 (<autogenerated>:1)	JMP	1148
	0x047c 01148 (<autogenerated>:1)	MOVB	AL, ""..autotmp_12+53(SP)
	0x0480 01152 (<autogenerated>:1)	JMP	1154
	0x0482 01154 (<autogenerated>:1)	MOVBLZX	""..autotmp_12+53(SP), AX
	0x0487 01159 (<autogenerated>:1)	MOVB	AL, ""..autotmp_11+54(SP)
	0x048b 01163 (<autogenerated>:1)	TESTB	AL, AL
	0x048d 01165 (<autogenerated>:1)	JNE	1172
	0x048f 01167 (<autogenerated>:1)	JMP	2671
	0x0494 01172 (<autogenerated>:1)	PCDATA	$0, $1
	0x0494 01172 (<autogenerated>:1)	MOVQ	"".p+440(SP), AX
	0x049c 01180 (<autogenerated>:1)	MOVQ	216(AX), CX
	0x04a3 01187 (<autogenerated>:1)	MOVQ	208(AX), AX
	0x04aa 01194 (<autogenerated>:1)	PCDATA	$0, $0
	0x04aa 01194 (<autogenerated>:1)	PCDATA	$1, $4
	0x04aa 01194 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_32+344(SP)
	0x04b2 01202 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_32+352(SP)
	0x04ba 01210 (<autogenerated>:1)	PCDATA	$0, $1
	0x04ba 01210 (<autogenerated>:1)	MOVQ	"".q+448(SP), AX
	0x04c2 01218 (<autogenerated>:1)	MOVQ	216(AX), CX
	0x04c9 01225 (<autogenerated>:1)	MOVQ	208(AX), AX
	0x04d0 01232 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_33+328(SP)
	0x04d8 01240 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_33+336(SP)
	0x04e0 01248 (<autogenerated>:1)	CMPQ	""..autotmp_32+352(SP), CX
	0x04e8 01256 (<autogenerated>:1)	SETEQ	CL
	0x04eb 01259 (<autogenerated>:1)	JEQ	1266
	0x04ed 01261 (<autogenerated>:1)	JMP	2664
	0x04f2 01266 (<autogenerated>:1)	PCDATA	$0, $2
	0x04f2 01266 (<autogenerated>:1)	MOVQ	""..autotmp_32+344(SP), CX
	0x04fa 01274 (<autogenerated>:1)	PCDATA	$0, $1
	0x04fa 01274 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x04fe 01278 (<autogenerated>:1)	PCDATA	$0, $0
	0x04fe 01278 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0503 01283 (<autogenerated>:1)	PCDATA	$1, $0
	0x0503 01283 (<autogenerated>:1)	MOVQ	""..autotmp_32+352(SP), AX
	0x050b 01291 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x0510 01296 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x0515 01301 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x051a 01306 (<autogenerated>:1)	JMP	1308
	0x051c 01308 (<autogenerated>:1)	MOVB	AL, ""..autotmp_11+54(SP)
	0x0520 01312 (<autogenerated>:1)	JMP	1314
	0x0522 01314 (<autogenerated>:1)	MOVBLZX	""..autotmp_11+54(SP), AX
	0x0527 01319 (<autogenerated>:1)	MOVB	AL, ""..autotmp_10+55(SP)
	0x052b 01323 (<autogenerated>:1)	TESTB	AL, AL
	0x052d 01325 (<autogenerated>:1)	JNE	1332
	0x052f 01327 (<autogenerated>:1)	JMP	2659
	0x0534 01332 (<autogenerated>:1)	PCDATA	$0, $1
	0x0534 01332 (<autogenerated>:1)	MOVQ	"".p+440(SP), AX
	0x053c 01340 (<autogenerated>:1)	MOVQ	232(AX), CX
	0x0543 01347 (<autogenerated>:1)	MOVQ	224(AX), AX
	0x054a 01354 (<autogenerated>:1)	PCDATA	$0, $0
	0x054a 01354 (<autogenerated>:1)	PCDATA	$1, $5
	0x054a 01354 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_34+312(SP)
	0x0552 01362 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_34+320(SP)
	0x055a 01370 (<autogenerated>:1)	PCDATA	$0, $1
	0x055a 01370 (<autogenerated>:1)	MOVQ	"".q+448(SP), AX
	0x0562 01378 (<autogenerated>:1)	PCDATA	$0, $2
	0x0562 01378 (<autogenerated>:1)	MOVQ	224(AX), CX
	0x0569 01385 (<autogenerated>:1)	PCDATA	$0, $3
	0x0569 01385 (<autogenerated>:1)	MOVQ	232(AX), AX
	0x0570 01392 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_35+296(SP)
	0x0578 01400 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_35+304(SP)
	0x0580 01408 (<autogenerated>:1)	CMPQ	""..autotmp_34+320(SP), AX
	0x0588 01416 (<autogenerated>:1)	SETEQ	AL
	0x058b 01419 (<autogenerated>:1)	JEQ	1426
	0x058d 01421 (<autogenerated>:1)	JMP	2654
	0x0592 01426 (<autogenerated>:1)	PCDATA	$0, $2
	0x0592 01426 (<autogenerated>:1)	MOVQ	""..autotmp_34+312(SP), AX
	0x059a 01434 (<autogenerated>:1)	PCDATA	$0, $3
	0x059a 01434 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x059e 01438 (<autogenerated>:1)	PCDATA	$0, $0
	0x059e 01438 (<autogenerated>:1)	MOVQ	CX, 8(SP)
	0x05a3 01443 (<autogenerated>:1)	PCDATA	$1, $0
	0x05a3 01443 (<autogenerated>:1)	MOVQ	""..autotmp_34+320(SP), AX
	0x05ab 01451 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x05b0 01456 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x05b5 01461 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x05ba 01466 (<autogenerated>:1)	JMP	1468
	0x05bc 01468 (<autogenerated>:1)	MOVB	AL, ""..autotmp_10+55(SP)
	0x05c0 01472 (<autogenerated>:1)	JMP	1474
	0x05c2 01474 (<autogenerated>:1)	MOVBLZX	""..autotmp_10+55(SP), AX
	0x05c7 01479 (<autogenerated>:1)	MOVB	AL, ""..autotmp_9+33(SP)
	0x05cb 01483 (<autogenerated>:1)	TESTB	AL, AL
	0x05cd 01485 (<autogenerated>:1)	JNE	1492
	0x05cf 01487 (<autogenerated>:1)	JMP	2649
	0x05d4 01492 (<autogenerated>:1)	PCDATA	$0, $1
	0x05d4 01492 (<autogenerated>:1)	MOVQ	"".p+440(SP), AX
	0x05dc 01500 (<autogenerated>:1)	MOVQ	248(AX), CX
	0x05e3 01507 (<autogenerated>:1)	MOVQ	240(AX), AX
	0x05ea 01514 (<autogenerated>:1)	PCDATA	$0, $0
	0x05ea 01514 (<autogenerated>:1)	PCDATA	$1, $6
	0x05ea 01514 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_36+280(SP)
	0x05f2 01522 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_36+288(SP)
	0x05fa 01530 (<autogenerated>:1)	PCDATA	$0, $1
	0x05fa 01530 (<autogenerated>:1)	MOVQ	"".q+448(SP), AX
	0x0602 01538 (<autogenerated>:1)	MOVQ	248(AX), CX
	0x0609 01545 (<autogenerated>:1)	MOVQ	240(AX), AX
	0x0610 01552 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_37+264(SP)
	0x0618 01560 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_37+272(SP)
	0x0620 01568 (<autogenerated>:1)	CMPQ	""..autotmp_36+288(SP), CX
	0x0628 01576 (<autogenerated>:1)	SETEQ	CL
	0x062b 01579 (<autogenerated>:1)	JEQ	1586
	0x062d 01581 (<autogenerated>:1)	JMP	2642
	0x0632 01586 (<autogenerated>:1)	PCDATA	$0, $2
	0x0632 01586 (<autogenerated>:1)	MOVQ	""..autotmp_36+280(SP), CX
	0x063a 01594 (<autogenerated>:1)	PCDATA	$0, $1
	0x063a 01594 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x063e 01598 (<autogenerated>:1)	PCDATA	$0, $0
	0x063e 01598 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0643 01603 (<autogenerated>:1)	PCDATA	$1, $0
	0x0643 01603 (<autogenerated>:1)	MOVQ	""..autotmp_36+288(SP), AX
	0x064b 01611 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x0650 01616 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x0655 01621 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x065a 01626 (<autogenerated>:1)	JMP	1628
	0x065c 01628 (<autogenerated>:1)	MOVB	AL, ""..autotmp_9+33(SP)
	0x0660 01632 (<autogenerated>:1)	JMP	1634
	0x0662 01634 (<autogenerated>:1)	MOVBLZX	""..autotmp_9+33(SP), AX
	0x0667 01639 (<autogenerated>:1)	MOVB	AL, ""..autotmp_8+34(SP)
	0x066b 01643 (<autogenerated>:1)	TESTB	AL, AL
	0x066d 01645 (<autogenerated>:1)	JNE	1652
	0x066f 01647 (<autogenerated>:1)	JMP	2637
	0x0674 01652 (<autogenerated>:1)	PCDATA	$0, $1
	0x0674 01652 (<autogenerated>:1)	MOVQ	"".p+440(SP), AX
	0x067c 01660 (<autogenerated>:1)	MOVQ	264(AX), CX
	0x0683 01667 (<autogenerated>:1)	MOVQ	256(AX), AX
	0x068a 01674 (<autogenerated>:1)	PCDATA	$0, $0
	0x068a 01674 (<autogenerated>:1)	PCDATA	$1, $7
	0x068a 01674 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_38+248(SP)
	0x0692 01682 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_38+256(SP)
	0x069a 01690 (<autogenerated>:1)	PCDATA	$0, $1
	0x069a 01690 (<autogenerated>:1)	MOVQ	"".q+448(SP), AX
	0x06a2 01698 (<autogenerated>:1)	MOVQ	264(AX), CX
	0x06a9 01705 (<autogenerated>:1)	MOVQ	256(AX), AX
	0x06b0 01712 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_39+232(SP)
	0x06b8 01720 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_39+240(SP)
	0x06c0 01728 (<autogenerated>:1)	CMPQ	""..autotmp_38+256(SP), CX
	0x06c8 01736 (<autogenerated>:1)	SETEQ	CL
	0x06cb 01739 (<autogenerated>:1)	JEQ	1746
	0x06cd 01741 (<autogenerated>:1)	JMP	2630
	0x06d2 01746 (<autogenerated>:1)	PCDATA	$0, $2
	0x06d2 01746 (<autogenerated>:1)	MOVQ	""..autotmp_38+248(SP), CX
	0x06da 01754 (<autogenerated>:1)	PCDATA	$0, $1
	0x06da 01754 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x06de 01758 (<autogenerated>:1)	PCDATA	$0, $0
	0x06de 01758 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x06e3 01763 (<autogenerated>:1)	PCDATA	$1, $0
	0x06e3 01763 (<autogenerated>:1)	MOVQ	""..autotmp_38+256(SP), AX
	0x06eb 01771 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x06f0 01776 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x06f5 01781 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x06fa 01786 (<autogenerated>:1)	JMP	1788
	0x06fc 01788 (<autogenerated>:1)	MOVB	AL, ""..autotmp_8+34(SP)
	0x0700 01792 (<autogenerated>:1)	JMP	1794
	0x0702 01794 (<autogenerated>:1)	MOVBLZX	""..autotmp_8+34(SP), AX
	0x0707 01799 (<autogenerated>:1)	MOVB	AL, ""..autotmp_7+35(SP)
	0x070b 01803 (<autogenerated>:1)	TESTB	AL, AL
	0x070d 01805 (<autogenerated>:1)	JNE	1812
	0x070f 01807 (<autogenerated>:1)	JMP	2625
	0x0714 01812 (<autogenerated>:1)	PCDATA	$0, $1
	0x0714 01812 (<autogenerated>:1)	MOVQ	"".p+440(SP), AX
	0x071c 01820 (<autogenerated>:1)	MOVQ	280(AX), CX
	0x0723 01827 (<autogenerated>:1)	MOVQ	272(AX), AX
	0x072a 01834 (<autogenerated>:1)	PCDATA	$0, $0
	0x072a 01834 (<autogenerated>:1)	PCDATA	$1, $8
	0x072a 01834 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_40+216(SP)
	0x0732 01842 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_40+224(SP)
	0x073a 01850 (<autogenerated>:1)	PCDATA	$0, $1
	0x073a 01850 (<autogenerated>:1)	MOVQ	"".q+448(SP), AX
	0x0742 01858 (<autogenerated>:1)	PCDATA	$0, $2
	0x0742 01858 (<autogenerated>:1)	MOVQ	272(AX), CX
	0x0749 01865 (<autogenerated>:1)	PCDATA	$0, $3
	0x0749 01865 (<autogenerated>:1)	MOVQ	280(AX), AX
	0x0750 01872 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_41+200(SP)
	0x0758 01880 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_41+208(SP)
	0x0760 01888 (<autogenerated>:1)	CMPQ	""..autotmp_40+224(SP), AX
	0x0768 01896 (<autogenerated>:1)	SETEQ	AL
	0x076b 01899 (<autogenerated>:1)	JEQ	1906
	0x076d 01901 (<autogenerated>:1)	JMP	2620
	0x0772 01906 (<autogenerated>:1)	PCDATA	$0, $2
	0x0772 01906 (<autogenerated>:1)	MOVQ	""..autotmp_40+216(SP), AX
	0x077a 01914 (<autogenerated>:1)	PCDATA	$0, $3
	0x077a 01914 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x077e 01918 (<autogenerated>:1)	PCDATA	$0, $0
	0x077e 01918 (<autogenerated>:1)	MOVQ	CX, 8(SP)
	0x0783 01923 (<autogenerated>:1)	PCDATA	$1, $0
	0x0783 01923 (<autogenerated>:1)	MOVQ	""..autotmp_40+224(SP), AX
	0x078b 01931 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x0790 01936 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x0795 01941 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x079a 01946 (<autogenerated>:1)	JMP	1948
	0x079c 01948 (<autogenerated>:1)	MOVB	AL, ""..autotmp_7+35(SP)
	0x07a0 01952 (<autogenerated>:1)	JMP	1954
	0x07a2 01954 (<autogenerated>:1)	MOVBLZX	""..autotmp_7+35(SP), AX
	0x07a7 01959 (<autogenerated>:1)	MOVB	AL, ""..autotmp_6+36(SP)
	0x07ab 01963 (<autogenerated>:1)	TESTB	AL, AL
	0x07ad 01965 (<autogenerated>:1)	JNE	1972
	0x07af 01967 (<autogenerated>:1)	JMP	2615
	0x07b4 01972 (<autogenerated>:1)	PCDATA	$0, $1
	0x07b4 01972 (<autogenerated>:1)	MOVQ	"".p+440(SP), AX
	0x07bc 01980 (<autogenerated>:1)	PCDATA	$0, $2
	0x07bc 01980 (<autogenerated>:1)	MOVQ	288(AX), CX
	0x07c3 01987 (<autogenerated>:1)	PCDATA	$0, $3
	0x07c3 01987 (<autogenerated>:1)	MOVQ	296(AX), AX
	0x07ca 01994 (<autogenerated>:1)	PCDATA	$0, $0
	0x07ca 01994 (<autogenerated>:1)	PCDATA	$1, $9
	0x07ca 01994 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_42+184(SP)
	0x07d2 02002 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_42+192(SP)
	0x07da 02010 (<autogenerated>:1)	PCDATA	$0, $1
	0x07da 02010 (<autogenerated>:1)	MOVQ	"".q+448(SP), AX
	0x07e2 02018 (<autogenerated>:1)	PCDATA	$0, $2
	0x07e2 02018 (<autogenerated>:1)	MOVQ	288(AX), CX
	0x07e9 02025 (<autogenerated>:1)	PCDATA	$0, $3
	0x07e9 02025 (<autogenerated>:1)	MOVQ	296(AX), AX
	0x07f0 02032 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_43+168(SP)
	0x07f8 02040 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_43+176(SP)
	0x0800 02048 (<autogenerated>:1)	CMPQ	""..autotmp_42+192(SP), AX
	0x0808 02056 (<autogenerated>:1)	SETEQ	AL
	0x080b 02059 (<autogenerated>:1)	JEQ	2066
	0x080d 02061 (<autogenerated>:1)	JMP	2610
	0x0812 02066 (<autogenerated>:1)	PCDATA	$0, $2
	0x0812 02066 (<autogenerated>:1)	MOVQ	""..autotmp_42+184(SP), AX
	0x081a 02074 (<autogenerated>:1)	PCDATA	$0, $3
	0x081a 02074 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x081e 02078 (<autogenerated>:1)	PCDATA	$0, $0
	0x081e 02078 (<autogenerated>:1)	MOVQ	CX, 8(SP)
	0x0823 02083 (<autogenerated>:1)	PCDATA	$1, $0
	0x0823 02083 (<autogenerated>:1)	MOVQ	""..autotmp_42+192(SP), AX
	0x082b 02091 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x0830 02096 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x0835 02101 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x083a 02106 (<autogenerated>:1)	JMP	2108
	0x083c 02108 (<autogenerated>:1)	MOVB	AL, ""..autotmp_6+36(SP)
	0x0840 02112 (<autogenerated>:1)	JMP	2114
	0x0842 02114 (<autogenerated>:1)	MOVBLZX	""..autotmp_6+36(SP), AX
	0x0847 02119 (<autogenerated>:1)	MOVB	AL, ""..autotmp_5+37(SP)
	0x084b 02123 (<autogenerated>:1)	TESTB	AL, AL
	0x084d 02125 (<autogenerated>:1)	JNE	2132
	0x084f 02127 (<autogenerated>:1)	JMP	2605
	0x0854 02132 (<autogenerated>:1)	PCDATA	$0, $1
	0x0854 02132 (<autogenerated>:1)	MOVQ	"".p+440(SP), AX
	0x085c 02140 (<autogenerated>:1)	PCDATA	$0, $2
	0x085c 02140 (<autogenerated>:1)	MOVQ	304(AX), CX
	0x0863 02147 (<autogenerated>:1)	PCDATA	$0, $3
	0x0863 02147 (<autogenerated>:1)	MOVQ	312(AX), AX
	0x086a 02154 (<autogenerated>:1)	PCDATA	$0, $0
	0x086a 02154 (<autogenerated>:1)	PCDATA	$1, $10
	0x086a 02154 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_44+152(SP)
	0x0872 02162 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_44+160(SP)
	0x087a 02170 (<autogenerated>:1)	PCDATA	$0, $1
	0x087a 02170 (<autogenerated>:1)	MOVQ	"".q+448(SP), AX
	0x0882 02178 (<autogenerated>:1)	PCDATA	$0, $2
	0x0882 02178 (<autogenerated>:1)	MOVQ	304(AX), CX
	0x0889 02185 (<autogenerated>:1)	PCDATA	$0, $3
	0x0889 02185 (<autogenerated>:1)	MOVQ	312(AX), AX
	0x0890 02192 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_45+136(SP)
	0x0898 02200 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_45+144(SP)
	0x08a0 02208 (<autogenerated>:1)	CMPQ	""..autotmp_44+160(SP), AX
	0x08a8 02216 (<autogenerated>:1)	SETEQ	AL
	0x08ab 02219 (<autogenerated>:1)	JEQ	2226
	0x08ad 02221 (<autogenerated>:1)	JMP	2600
	0x08b2 02226 (<autogenerated>:1)	PCDATA	$0, $2
	0x08b2 02226 (<autogenerated>:1)	MOVQ	""..autotmp_44+152(SP), AX
	0x08ba 02234 (<autogenerated>:1)	PCDATA	$0, $3
	0x08ba 02234 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x08be 02238 (<autogenerated>:1)	PCDATA	$0, $0
	0x08be 02238 (<autogenerated>:1)	MOVQ	CX, 8(SP)
	0x08c3 02243 (<autogenerated>:1)	PCDATA	$1, $0
	0x08c3 02243 (<autogenerated>:1)	MOVQ	""..autotmp_44+160(SP), AX
	0x08cb 02251 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x08d0 02256 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x08d5 02261 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x08da 02266 (<autogenerated>:1)	JMP	2268
	0x08dc 02268 (<autogenerated>:1)	MOVB	AL, ""..autotmp_5+37(SP)
	0x08e0 02272 (<autogenerated>:1)	JMP	2274
	0x08e2 02274 (<autogenerated>:1)	MOVBLZX	""..autotmp_5+37(SP), AX
	0x08e7 02279 (<autogenerated>:1)	MOVB	AL, ""..autotmp_4+38(SP)
	0x08eb 02283 (<autogenerated>:1)	TESTB	AL, AL
	0x08ed 02285 (<autogenerated>:1)	JNE	2292
	0x08ef 02287 (<autogenerated>:1)	JMP	2595
	0x08f4 02292 (<autogenerated>:1)	PCDATA	$0, $1
	0x08f4 02292 (<autogenerated>:1)	MOVQ	"".p+440(SP), AX
	0x08fc 02300 (<autogenerated>:1)	PCDATA	$0, $2
	0x08fc 02300 (<autogenerated>:1)	MOVQ	320(AX), CX
	0x0903 02307 (<autogenerated>:1)	PCDATA	$0, $3
	0x0903 02307 (<autogenerated>:1)	MOVQ	328(AX), AX
	0x090a 02314 (<autogenerated>:1)	PCDATA	$0, $0
	0x090a 02314 (<autogenerated>:1)	PCDATA	$1, $11
	0x090a 02314 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_46+120(SP)
	0x090f 02319 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_46+128(SP)
	0x0917 02327 (<autogenerated>:1)	PCDATA	$0, $1
	0x0917 02327 (<autogenerated>:1)	MOVQ	"".q+448(SP), AX
	0x091f 02335 (<autogenerated>:1)	PCDATA	$0, $2
	0x091f 02335 (<autogenerated>:1)	MOVQ	320(AX), CX
	0x0926 02342 (<autogenerated>:1)	PCDATA	$0, $3
	0x0926 02342 (<autogenerated>:1)	MOVQ	328(AX), AX
	0x092d 02349 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_47+104(SP)
	0x0932 02354 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_47+112(SP)
	0x0937 02359 (<autogenerated>:1)	CMPQ	""..autotmp_46+128(SP), AX
	0x093f 02367 (<autogenerated>:1)	SETEQ	AL
	0x0942 02370 (<autogenerated>:1)	JEQ	2377
	0x0944 02372 (<autogenerated>:1)	JMP	2590
	0x0949 02377 (<autogenerated>:1)	PCDATA	$0, $2
	0x0949 02377 (<autogenerated>:1)	MOVQ	""..autotmp_46+120(SP), AX
	0x094e 02382 (<autogenerated>:1)	PCDATA	$0, $3
	0x094e 02382 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0952 02386 (<autogenerated>:1)	PCDATA	$0, $0
	0x0952 02386 (<autogenerated>:1)	MOVQ	CX, 8(SP)
	0x0957 02391 (<autogenerated>:1)	PCDATA	$1, $0
	0x0957 02391 (<autogenerated>:1)	MOVQ	""..autotmp_46+128(SP), AX
	0x095f 02399 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x0964 02404 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x0969 02409 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x096e 02414 (<autogenerated>:1)	JMP	2416
	0x0970 02416 (<autogenerated>:1)	MOVB	AL, ""..autotmp_4+38(SP)
	0x0974 02420 (<autogenerated>:1)	JMP	2422
	0x0976 02422 (<autogenerated>:1)	MOVBLZX	""..autotmp_4+38(SP), AX
	0x097b 02427 (<autogenerated>:1)	MOVB	AL, ""..autotmp_3+39(SP)
	0x097f 02431 (<autogenerated>:1)	TESTB	AL, AL
	0x0981 02433 (<autogenerated>:1)	JNE	2440
	0x0983 02435 (<autogenerated>:1)	JMP	2588
	0x0988 02440 (<autogenerated>:1)	PCDATA	$0, $1
	0x0988 02440 (<autogenerated>:1)	PCDATA	$1, $12
	0x0988 02440 (<autogenerated>:1)	MOVQ	"".p+440(SP), AX
	0x0990 02448 (<autogenerated>:1)	PCDATA	$0, $2
	0x0990 02448 (<autogenerated>:1)	MOVQ	336(AX), CX
	0x0997 02455 (<autogenerated>:1)	PCDATA	$0, $3
	0x0997 02455 (<autogenerated>:1)	MOVQ	344(AX), AX
	0x099e 02462 (<autogenerated>:1)	PCDATA	$0, $0
	0x099e 02462 (<autogenerated>:1)	PCDATA	$1, $13
	0x099e 02462 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_48+88(SP)
	0x09a3 02467 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_48+96(SP)
	0x09a8 02472 (<autogenerated>:1)	PCDATA	$0, $1
	0x09a8 02472 (<autogenerated>:1)	PCDATA	$1, $14
	0x09a8 02472 (<autogenerated>:1)	MOVQ	"".q+448(SP), AX
	0x09b0 02480 (<autogenerated>:1)	PCDATA	$0, $2
	0x09b0 02480 (<autogenerated>:1)	MOVQ	336(AX), CX
	0x09b7 02487 (<autogenerated>:1)	PCDATA	$0, $3
	0x09b7 02487 (<autogenerated>:1)	MOVQ	344(AX), AX
	0x09be 02494 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_49+72(SP)
	0x09c3 02499 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_49+80(SP)
	0x09c8 02504 (<autogenerated>:1)	CMPQ	""..autotmp_48+96(SP), AX
	0x09cd 02509 (<autogenerated>:1)	SETEQ	AL
	0x09d0 02512 (<autogenerated>:1)	JEQ	2516
	0x09d2 02514 (<autogenerated>:1)	JMP	2586
	0x09d4 02516 (<autogenerated>:1)	PCDATA	$0, $2
	0x09d4 02516 (<autogenerated>:1)	MOVQ	""..autotmp_48+88(SP), AX
	0x09d9 02521 (<autogenerated>:1)	PCDATA	$0, $3
	0x09d9 02521 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x09dd 02525 (<autogenerated>:1)	PCDATA	$0, $0
	0x09dd 02525 (<autogenerated>:1)	MOVQ	CX, 8(SP)
	0x09e2 02530 (<autogenerated>:1)	PCDATA	$1, $15
	0x09e2 02530 (<autogenerated>:1)	MOVQ	""..autotmp_48+96(SP), AX
	0x09e7 02535 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x09ec 02540 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x09f1 02545 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x09f6 02550 (<autogenerated>:1)	JMP	2552
	0x09f8 02552 (<autogenerated>:1)	MOVB	AL, ""..autotmp_3+39(SP)
	0x09fc 02556 (<autogenerated>:1)	JMP	2558
	0x09fe 02558 (<autogenerated>:1)	MOVBLZX	""..autotmp_3+39(SP), AX
	0x0a03 02563 (<autogenerated>:1)	MOVB	AL, "".~r2+456(SP)
	0x0a0a 02570 (<autogenerated>:1)	MOVQ	424(SP), BP
	0x0a12 02578 (<autogenerated>:1)	ADDQ	$432, SP
	0x0a19 02585 (<autogenerated>:1)	RET
	0x0a1a 02586 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0a1a 02586 (<autogenerated>:1)	PCDATA	$1, $-2
	0x0a1a 02586 (<autogenerated>:1)	JMP	2552
	0x0a1c 02588 (<autogenerated>:1)	JMP	2558
	0x0a1e 02590 (<autogenerated>:1)	JMP	2416
	0x0a23 02595 (<autogenerated>:1)	JMP	2422
	0x0a28 02600 (<autogenerated>:1)	JMP	2268
	0x0a2d 02605 (<autogenerated>:1)	JMP	2274
	0x0a32 02610 (<autogenerated>:1)	JMP	2108
	0x0a37 02615 (<autogenerated>:1)	JMP	2114
	0x0a3c 02620 (<autogenerated>:1)	JMP	1948
	0x0a41 02625 (<autogenerated>:1)	JMP	1954
	0x0a46 02630 (<autogenerated>:1)	PCDATA	$0, $0
	0x0a46 02630 (<autogenerated>:1)	PCDATA	$1, $0
	0x0a46 02630 (<autogenerated>:1)	MOVL	CX, AX
	0x0a48 02632 (<autogenerated>:1)	JMP	1788
	0x0a4d 02637 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0a4d 02637 (<autogenerated>:1)	PCDATA	$1, $-2
	0x0a4d 02637 (<autogenerated>:1)	JMP	1794
	0x0a52 02642 (<autogenerated>:1)	PCDATA	$0, $0
	0x0a52 02642 (<autogenerated>:1)	PCDATA	$1, $0
	0x0a52 02642 (<autogenerated>:1)	MOVL	CX, AX
	0x0a54 02644 (<autogenerated>:1)	JMP	1628
	0x0a59 02649 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0a59 02649 (<autogenerated>:1)	PCDATA	$1, $-2
	0x0a59 02649 (<autogenerated>:1)	JMP	1634
	0x0a5e 02654 (<autogenerated>:1)	JMP	1468
	0x0a63 02659 (<autogenerated>:1)	JMP	1474
	0x0a68 02664 (<autogenerated>:1)	PCDATA	$0, $0
	0x0a68 02664 (<autogenerated>:1)	PCDATA	$1, $0
	0x0a68 02664 (<autogenerated>:1)	MOVL	CX, AX
	0x0a6a 02666 (<autogenerated>:1)	JMP	1308
	0x0a6f 02671 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0a6f 02671 (<autogenerated>:1)	PCDATA	$1, $-2
	0x0a6f 02671 (<autogenerated>:1)	JMP	1314
	0x0a74 02676 (<autogenerated>:1)	PCDATA	$0, $0
	0x0a74 02676 (<autogenerated>:1)	PCDATA	$1, $0
	0x0a74 02676 (<autogenerated>:1)	MOVL	CX, AX
	0x0a76 02678 (<autogenerated>:1)	JMP	1148
	0x0a7b 02683 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0a7b 02683 (<autogenerated>:1)	PCDATA	$1, $-2
	0x0a7b 02683 (<autogenerated>:1)	JMP	1154
	0x0a80 02688 (<autogenerated>:1)	PCDATA	$0, $0
	0x0a80 02688 (<autogenerated>:1)	PCDATA	$1, $0
	0x0a80 02688 (<autogenerated>:1)	MOVL	CX, AX
	0x0a82 02690 (<autogenerated>:1)	JMP	988
	0x0a87 02695 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0a87 02695 (<autogenerated>:1)	PCDATA	$1, $-2
	0x0a87 02695 (<autogenerated>:1)	JMP	994
	0x0a8c 02700 (<autogenerated>:1)	JMP	834
	0x0a91 02705 (<autogenerated>:1)	JMP	766
	0x0a96 02710 (<autogenerated>:1)	JMP	698
	0x0a9b 02715 (<autogenerated>:1)	JMP	630
	0x0aa0 02720 (<autogenerated>:1)	JMP	562
	0x0aa5 02725 (<autogenerated>:1)	JMP	494
	0x0aaa 02730 (<autogenerated>:1)	JMP	426
	0x0aaf 02735 (<autogenerated>:1)	JMP	364
	0x0ab4 02740 (<autogenerated>:1)	JMP	302
	0x0ab9 02745 (<autogenerated>:1)	JMP	240
	0x0abe 02750 (<autogenerated>:1)	JMP	178
	0x0ac3 02755 (<autogenerated>:1)	NOP
	0x0ac3 02755 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0ac3 02755 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0ac3 02755 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0ac8 02760 (<autogenerated>:1)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 d0 fe ff  eH..%....H..$...
	0x0010 ff 48 3b 41 10 0f 86 a8 0a 00 00 48 81 ec b0 01  .H;A.......H....
	0x0020 00 00 48 89 ac 24 a8 01 00 00 48 8d ac 24 a8 01  ..H..$....H..$..
	0x0030 00 00 c6 84 24 c8 01 00 00 00 48 8b 84 24 b8 01  ....$.....H..$..
	0x0040 00 00 48 89 44 24 40 48 8b 84 24 c0 01 00 00 48  ..H.D$@H..$....H
	0x0050 89 44 24 38 48 8b 4c 24 40 48 89 0c 24 48 89 44  .D$8H.L$@H..$H.D
	0x0060 24 08 48 c7 44 24 10 58 00 00 00 e8 00 00 00 00  $.H.D$.X........
	0x0070 0f b6 44 24 18 88 44 24 28 88 44 24 29 84 c0 75  ..D$..D$(.D$)..u
	0x0080 05 e9 38 0a 00 00 48 8b 84 24 b8 01 00 00 f2 0f  ..8...H..$......
	0x0090 10 40 58 48 8b 84 24 c0 01 00 00 f2 0f 10 48 58  .@XH..$.......HX
	0x00a0 66 0f 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c 24 29  f.........!..L$)
	0x00b0 eb 00 0f b6 44 24 29 88 44 24 2a 84 c0 75 05 e9  ....D$).D$*..u..
	0x00c0 f5 09 00 00 48 8b 84 24 b8 01 00 00 f2 0f 10 40  ....H..$.......@
	0x00d0 60 48 8b 84 24 c0 01 00 00 f2 0f 10 48 60 66 0f  `H..$.......H`f.
	0x00e0 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c 24 2a eb 00  ........!..L$*..
	0x00f0 0f b6 44 24 2a 88 44 24 2b 84 c0 75 05 e9 b2 09  ..D$*.D$+..u....
	0x0100 00 00 48 8b 84 24 b8 01 00 00 f2 0f 10 40 68 48  ..H..$.......@hH
	0x0110 8b 84 24 c0 01 00 00 f2 0f 10 48 68 66 0f 2e c1  ..$.......Hhf...
	0x0120 0f 94 c1 0f 9b c0 21 c1 88 4c 24 2b eb 00 0f b6  ......!..L$+....
	0x0130 44 24 2b 88 44 24 2c 84 c0 75 05 e9 6f 09 00 00  D$+.D$,..u..o...
	0x0140 48 8b 84 24 b8 01 00 00 f2 0f 10 40 70 48 8b 84  H..$.......@pH..
	0x0150 24 c0 01 00 00 f2 0f 10 48 70 66 0f 2e c1 0f 94  $.......Hpf.....
	0x0160 c1 0f 9b c0 21 c1 88 4c 24 2c eb 00 0f b6 44 24  ....!..L$,....D$
	0x0170 2c 88 44 24 2d 84 c0 75 05 e9 2c 09 00 00 48 8b  ,.D$-..u..,...H.
	0x0180 84 24 b8 01 00 00 f2 0f 10 40 78 48 8b 84 24 c0  .$.......@xH..$.
	0x0190 01 00 00 f2 0f 10 48 78 66 0f 2e c1 0f 94 c1 0f  ......Hxf.......
	0x01a0 9b c0 21 c1 88 4c 24 2d eb 00 0f b6 44 24 2d 88  ..!..L$-....D$-.
	0x01b0 44 24 2e 84 c0 75 05 e9 e9 08 00 00 48 8b 84 24  D$...u......H..$
	0x01c0 b8 01 00 00 f2 0f 10 80 80 00 00 00 48 8b 84 24  ............H..$
	0x01d0 c0 01 00 00 f2 0f 10 88 80 00 00 00 66 0f 2e c1  ............f...
	0x01e0 0f 94 c1 0f 9b c0 21 c1 88 4c 24 2e eb 00 0f b6  ......!..L$.....
	0x01f0 44 24 2e 88 44 24 2f 84 c0 75 05 e9 a0 08 00 00  D$..D$/..u......
	0x0200 48 8b 84 24 b8 01 00 00 f2 0f 10 80 88 00 00 00  H..$............
	0x0210 48 8b 84 24 c0 01 00 00 f2 0f 10 88 88 00 00 00  H..$............
	0x0220 66 0f 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c 24 2f  f.........!..L$/
	0x0230 eb 00 0f b6 44 24 2f 88 44 24 30 84 c0 75 05 e9  ....D$/.D$0..u..
	0x0240 57 08 00 00 48 8b 84 24 b8 01 00 00 f2 0f 10 80  W...H..$........
	0x0250 90 00 00 00 48 8b 84 24 c0 01 00 00 f2 0f 10 88  ....H..$........
	0x0260 90 00 00 00 66 0f 2e c1 0f 94 c1 0f 9b c0 21 c1  ....f.........!.
	0x0270 88 4c 24 30 eb 00 0f b6 44 24 30 88 44 24 31 84  .L$0....D$0.D$1.
	0x0280 c0 75 05 e9 0e 08 00 00 48 8b 84 24 b8 01 00 00  .u......H..$....
	0x0290 f2 0f 10 80 98 00 00 00 48 8b 84 24 c0 01 00 00  ........H..$....
	0x02a0 f2 0f 10 88 98 00 00 00 66 0f 2e c1 0f 94 c1 0f  ........f.......
	0x02b0 9b c0 21 c1 88 4c 24 31 eb 00 0f b6 44 24 31 88  ..!..L$1....D$1.
	0x02c0 44 24 32 84 c0 75 05 e9 c5 07 00 00 48 8b 84 24  D$2..u......H..$
	0x02d0 b8 01 00 00 f2 0f 10 80 a0 00 00 00 48 8b 84 24  ............H..$
	0x02e0 c0 01 00 00 f2 0f 10 88 a0 00 00 00 66 0f 2e c1  ............f...
	0x02f0 0f 94 c1 0f 9b c0 21 c1 88 4c 24 32 eb 00 0f b6  ......!..L$2....
	0x0300 44 24 32 88 44 24 33 84 c0 75 05 e9 7c 07 00 00  D$2.D$3..u..|...
	0x0310 48 8b 84 24 b8 01 00 00 f2 0f 10 80 a8 00 00 00  H..$............
	0x0320 48 8b 84 24 c0 01 00 00 f2 0f 10 88 a8 00 00 00  H..$............
	0x0330 66 0f 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c 24 33  f.........!..L$3
	0x0340 eb 00 0f b6 44 24 33 88 44 24 34 84 c0 75 05 e9  ....D$3.D$4..u..
	0x0350 33 07 00 00 48 8b 84 24 b8 01 00 00 48 8b 88 b8  3...H..$....H...
	0x0360 00 00 00 48 8b 80 b0 00 00 00 48 89 84 24 98 01  ...H......H..$..
	0x0370 00 00 48 89 8c 24 a0 01 00 00 48 8b 84 24 c0 01  ..H..$....H..$..
	0x0380 00 00 48 8b 88 b8 00 00 00 48 8b 80 b0 00 00 00  ..H......H......
	0x0390 48 89 84 24 88 01 00 00 48 89 8c 24 90 01 00 00  H..$....H..$....
	0x03a0 48 39 8c 24 a0 01 00 00 0f 94 c1 74 05 e9 ce 06  H9.$.......t....
	0x03b0 00 00 48 8b 8c 24 98 01 00 00 48 89 0c 24 48 89  ..H..$....H..$H.
	0x03c0 44 24 08 48 8b 84 24 a0 01 00 00 48 89 44 24 10  D$.H..$....H.D$.
	0x03d0 e8 00 00 00 00 0f b6 44 24 18 eb 00 88 44 24 34  .......D$....D$4
	0x03e0 eb 00 0f b6 44 24 34 88 44 24 35 84 c0 75 05 e9  ....D$4.D$5..u..
	0x03f0 87 06 00 00 48 8b 84 24 b8 01 00 00 48 8b 88 c0  ....H..$....H...
	0x0400 00 00 00 48 8b 80 c8 00 00 00 48 89 8c 24 78 01  ...H......H..$x.
	0x0410 00 00 48 89 84 24 80 01 00 00 48 8b 84 24 c0 01  ..H..$....H..$..
	0x0420 00 00 48 8b 88 c8 00 00 00 48 8b 80 c0 00 00 00  ..H......H......
	0x0430 48 89 84 24 68 01 00 00 48 89 8c 24 70 01 00 00  H..$h...H..$p...
	0x0440 48 39 8c 24 80 01 00 00 0f 94 c1 74 05 e9 22 06  H9.$.......t..".
	0x0450 00 00 48 8b 8c 24 78 01 00 00 48 89 0c 24 48 89  ..H..$x...H..$H.
	0x0460 44 24 08 48 8b 84 24 80 01 00 00 48 89 44 24 10  D$.H..$....H.D$.
	0x0470 e8 00 00 00 00 0f b6 44 24 18 eb 00 88 44 24 35  .......D$....D$5
	0x0480 eb 00 0f b6 44 24 35 88 44 24 36 84 c0 75 05 e9  ....D$5.D$6..u..
	0x0490 db 05 00 00 48 8b 84 24 b8 01 00 00 48 8b 88 d8  ....H..$....H...
	0x04a0 00 00 00 48 8b 80 d0 00 00 00 48 89 84 24 58 01  ...H......H..$X.
	0x04b0 00 00 48 89 8c 24 60 01 00 00 48 8b 84 24 c0 01  ..H..$`...H..$..
	0x04c0 00 00 48 8b 88 d8 00 00 00 48 8b 80 d0 00 00 00  ..H......H......
	0x04d0 48 89 84 24 48 01 00 00 48 89 8c 24 50 01 00 00  H..$H...H..$P...
	0x04e0 48 39 8c 24 60 01 00 00 0f 94 c1 74 05 e9 76 05  H9.$`......t..v.
	0x04f0 00 00 48 8b 8c 24 58 01 00 00 48 89 0c 24 48 89  ..H..$X...H..$H.
	0x0500 44 24 08 48 8b 84 24 60 01 00 00 48 89 44 24 10  D$.H..$`...H.D$.
	0x0510 e8 00 00 00 00 0f b6 44 24 18 eb 00 88 44 24 36  .......D$....D$6
	0x0520 eb 00 0f b6 44 24 36 88 44 24 37 84 c0 75 05 e9  ....D$6.D$7..u..
	0x0530 2f 05 00 00 48 8b 84 24 b8 01 00 00 48 8b 88 e8  /...H..$....H...
	0x0540 00 00 00 48 8b 80 e0 00 00 00 48 89 84 24 38 01  ...H......H..$8.
	0x0550 00 00 48 89 8c 24 40 01 00 00 48 8b 84 24 c0 01  ..H..$@...H..$..
	0x0560 00 00 48 8b 88 e0 00 00 00 48 8b 80 e8 00 00 00  ..H......H......
	0x0570 48 89 8c 24 28 01 00 00 48 89 84 24 30 01 00 00  H..$(...H..$0...
	0x0580 48 39 84 24 40 01 00 00 0f 94 c0 74 05 e9 cc 04  H9.$@......t....
	0x0590 00 00 48 8b 84 24 38 01 00 00 48 89 04 24 48 89  ..H..$8...H..$H.
	0x05a0 4c 24 08 48 8b 84 24 40 01 00 00 48 89 44 24 10  L$.H..$@...H.D$.
	0x05b0 e8 00 00 00 00 0f b6 44 24 18 eb 00 88 44 24 37  .......D$....D$7
	0x05c0 eb 00 0f b6 44 24 37 88 44 24 21 84 c0 75 05 e9  ....D$7.D$!..u..
	0x05d0 85 04 00 00 48 8b 84 24 b8 01 00 00 48 8b 88 f8  ....H..$....H...
	0x05e0 00 00 00 48 8b 80 f0 00 00 00 48 89 84 24 18 01  ...H......H..$..
	0x05f0 00 00 48 89 8c 24 20 01 00 00 48 8b 84 24 c0 01  ..H..$ ...H..$..
	0x0600 00 00 48 8b 88 f8 00 00 00 48 8b 80 f0 00 00 00  ..H......H......
	0x0610 48 89 84 24 08 01 00 00 48 89 8c 24 10 01 00 00  H..$....H..$....
	0x0620 48 39 8c 24 20 01 00 00 0f 94 c1 74 05 e9 20 04  H9.$ ......t.. .
	0x0630 00 00 48 8b 8c 24 18 01 00 00 48 89 0c 24 48 89  ..H..$....H..$H.
	0x0640 44 24 08 48 8b 84 24 20 01 00 00 48 89 44 24 10  D$.H..$ ...H.D$.
	0x0650 e8 00 00 00 00 0f b6 44 24 18 eb 00 88 44 24 21  .......D$....D$!
	0x0660 eb 00 0f b6 44 24 21 88 44 24 22 84 c0 75 05 e9  ....D$!.D$"..u..
	0x0670 d9 03 00 00 48 8b 84 24 b8 01 00 00 48 8b 88 08  ....H..$....H...
	0x0680 01 00 00 48 8b 80 00 01 00 00 48 89 84 24 f8 00  ...H......H..$..
	0x0690 00 00 48 89 8c 24 00 01 00 00 48 8b 84 24 c0 01  ..H..$....H..$..
	0x06a0 00 00 48 8b 88 08 01 00 00 48 8b 80 00 01 00 00  ..H......H......
	0x06b0 48 89 84 24 e8 00 00 00 48 89 8c 24 f0 00 00 00  H..$....H..$....
	0x06c0 48 39 8c 24 00 01 00 00 0f 94 c1 74 05 e9 74 03  H9.$.......t..t.
	0x06d0 00 00 48 8b 8c 24 f8 00 00 00 48 89 0c 24 48 89  ..H..$....H..$H.
	0x06e0 44 24 08 48 8b 84 24 00 01 00 00 48 89 44 24 10  D$.H..$....H.D$.
	0x06f0 e8 00 00 00 00 0f b6 44 24 18 eb 00 88 44 24 22  .......D$....D$"
	0x0700 eb 00 0f b6 44 24 22 88 44 24 23 84 c0 75 05 e9  ....D$".D$#..u..
	0x0710 2d 03 00 00 48 8b 84 24 b8 01 00 00 48 8b 88 18  -...H..$....H...
	0x0720 01 00 00 48 8b 80 10 01 00 00 48 89 84 24 d8 00  ...H......H..$..
	0x0730 00 00 48 89 8c 24 e0 00 00 00 48 8b 84 24 c0 01  ..H..$....H..$..
	0x0740 00 00 48 8b 88 10 01 00 00 48 8b 80 18 01 00 00  ..H......H......
	0x0750 48 89 8c 24 c8 00 00 00 48 89 84 24 d0 00 00 00  H..$....H..$....
	0x0760 48 39 84 24 e0 00 00 00 0f 94 c0 74 05 e9 ca 02  H9.$.......t....
	0x0770 00 00 48 8b 84 24 d8 00 00 00 48 89 04 24 48 89  ..H..$....H..$H.
	0x0780 4c 24 08 48 8b 84 24 e0 00 00 00 48 89 44 24 10  L$.H..$....H.D$.
	0x0790 e8 00 00 00 00 0f b6 44 24 18 eb 00 88 44 24 23  .......D$....D$#
	0x07a0 eb 00 0f b6 44 24 23 88 44 24 24 84 c0 75 05 e9  ....D$#.D$$..u..
	0x07b0 83 02 00 00 48 8b 84 24 b8 01 00 00 48 8b 88 20  ....H..$....H.. 
	0x07c0 01 00 00 48 8b 80 28 01 00 00 48 89 8c 24 b8 00  ...H..(...H..$..
	0x07d0 00 00 48 89 84 24 c0 00 00 00 48 8b 84 24 c0 01  ..H..$....H..$..
	0x07e0 00 00 48 8b 88 20 01 00 00 48 8b 80 28 01 00 00  ..H.. ...H..(...
	0x07f0 48 89 8c 24 a8 00 00 00 48 89 84 24 b0 00 00 00  H..$....H..$....
	0x0800 48 39 84 24 c0 00 00 00 0f 94 c0 74 05 e9 20 02  H9.$.......t.. .
	0x0810 00 00 48 8b 84 24 b8 00 00 00 48 89 04 24 48 89  ..H..$....H..$H.
	0x0820 4c 24 08 48 8b 84 24 c0 00 00 00 48 89 44 24 10  L$.H..$....H.D$.
	0x0830 e8 00 00 00 00 0f b6 44 24 18 eb 00 88 44 24 24  .......D$....D$$
	0x0840 eb 00 0f b6 44 24 24 88 44 24 25 84 c0 75 05 e9  ....D$$.D$%..u..
	0x0850 d9 01 00 00 48 8b 84 24 b8 01 00 00 48 8b 88 30  ....H..$....H..0
	0x0860 01 00 00 48 8b 80 38 01 00 00 48 89 8c 24 98 00  ...H..8...H..$..
	0x0870 00 00 48 89 84 24 a0 00 00 00 48 8b 84 24 c0 01  ..H..$....H..$..
	0x0880 00 00 48 8b 88 30 01 00 00 48 8b 80 38 01 00 00  ..H..0...H..8...
	0x0890 48 89 8c 24 88 00 00 00 48 89 84 24 90 00 00 00  H..$....H..$....
	0x08a0 48 39 84 24 a0 00 00 00 0f 94 c0 74 05 e9 76 01  H9.$.......t..v.
	0x08b0 00 00 48 8b 84 24 98 00 00 00 48 89 04 24 48 89  ..H..$....H..$H.
	0x08c0 4c 24 08 48 8b 84 24 a0 00 00 00 48 89 44 24 10  L$.H..$....H.D$.
	0x08d0 e8 00 00 00 00 0f b6 44 24 18 eb 00 88 44 24 25  .......D$....D$%
	0x08e0 eb 00 0f b6 44 24 25 88 44 24 26 84 c0 75 05 e9  ....D$%.D$&..u..
	0x08f0 2f 01 00 00 48 8b 84 24 b8 01 00 00 48 8b 88 40  /...H..$....H..@
	0x0900 01 00 00 48 8b 80 48 01 00 00 48 89 4c 24 78 48  ...H..H...H.L$xH
	0x0910 89 84 24 80 00 00 00 48 8b 84 24 c0 01 00 00 48  ..$....H..$....H
	0x0920 8b 88 40 01 00 00 48 8b 80 48 01 00 00 48 89 4c  ..@...H..H...H.L
	0x0930 24 68 48 89 44 24 70 48 39 84 24 80 00 00 00 0f  $hH.D$pH9.$.....
	0x0940 94 c0 74 05 e9 d5 00 00 00 48 8b 44 24 78 48 89  ..t......H.D$xH.
	0x0950 04 24 48 89 4c 24 08 48 8b 84 24 80 00 00 00 48  .$H.L$.H..$....H
	0x0960 89 44 24 10 e8 00 00 00 00 0f b6 44 24 18 eb 00  .D$........D$...
	0x0970 88 44 24 26 eb 00 0f b6 44 24 26 88 44 24 27 84  .D$&....D$&.D$'.
	0x0980 c0 75 05 e9 94 00 00 00 48 8b 84 24 b8 01 00 00  .u......H..$....
	0x0990 48 8b 88 50 01 00 00 48 8b 80 58 01 00 00 48 89  H..P...H..X...H.
	0x09a0 4c 24 58 48 89 44 24 60 48 8b 84 24 c0 01 00 00  L$XH.D$`H..$....
	0x09b0 48 8b 88 50 01 00 00 48 8b 80 58 01 00 00 48 89  H..P...H..X...H.
	0x09c0 4c 24 48 48 89 44 24 50 48 39 44 24 60 0f 94 c0  L$HH.D$PH9D$`...
	0x09d0 74 02 eb 46 48 8b 44 24 58 48 89 04 24 48 89 4c  t..FH.D$XH..$H.L
	0x09e0 24 08 48 8b 44 24 60 48 89 44 24 10 e8 00 00 00  $.H.D$`H.D$.....
	0x09f0 00 0f b6 44 24 18 eb 00 88 44 24 27 eb 00 0f b6  ...D$....D$'....
	0x0a00 44 24 27 88 84 24 c8 01 00 00 48 8b ac 24 a8 01  D$'..$....H..$..
	0x0a10 00 00 48 81 c4 b0 01 00 00 c3 eb dc eb e0 e9 4d  ..H............M
	0x0a20 ff ff ff e9 4e ff ff ff e9 af fe ff ff e9 b0 fe  ....N...........
	0x0a30 ff ff e9 05 fe ff ff e9 06 fe ff ff e9 5b fd ff  .............[..
	0x0a40 ff e9 5c fd ff ff 89 c8 e9 af fc ff ff e9 b0 fc  ..\.............
	0x0a50 ff ff 89 c8 e9 03 fc ff ff e9 04 fc ff ff e9 59  ...............Y
	0x0a60 fb ff ff e9 5a fb ff ff 89 c8 e9 ad fa ff ff e9  ....Z...........
	0x0a70 ae fa ff ff 89 c8 e9 01 fa ff ff e9 02 fa ff ff  ................
	0x0a80 89 c8 e9 55 f9 ff ff e9 56 f9 ff ff e9 b1 f8 ff  ...U....V.......
	0x0a90 ff e9 68 f8 ff ff e9 1f f8 ff ff e9 d6 f7 ff ff  ..h.............
	0x0aa0 e9 8d f7 ff ff e9 44 f7 ff ff e9 fb f6 ff ff e9  ......D.........
	0x0ab0 b8 f6 ff ff e9 75 f6 ff ff e9 32 f6 ff ff e9 ef  .....u....2.....
	0x0ac0 f5 ff ff e8 00 00 00 00 e9 33 f5 ff ff           .........3...
	rel 5+4 t=16 TLS+0
	rel 108+4 t=8 runtime.memequal+0
	rel 977+4 t=8 runtime.memequal+0
	rel 1137+4 t=8 runtime.memequal+0
	rel 1297+4 t=8 runtime.memequal+0
	rel 1457+4 t=8 runtime.memequal+0
	rel 1617+4 t=8 runtime.memequal+0
	rel 1777+4 t=8 runtime.memequal+0
	rel 1937+4 t=8 runtime.memequal+0
	rel 2097+4 t=8 runtime.memequal+0
	rel 2257+4 t=8 runtime.memequal+0
	rel 2405+4 t=8 runtime.memequal+0
	rel 2541+4 t=8 runtime.memequal+0
	rel 2756+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkMegaIfc_Calc STEXT size=660 args=0x8 locals=0x358
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:109)	TEXT	"".BenchmarkMegaIfc_Calc(SB), ABIInternal, $856-8
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:109)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_invocation_test.go:109)	LEAQ	-728(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_invocation_test.go:109)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_invocation_test.go:109)	JLS	650
	0x001b 00027 (pointer_vs_value/code/benchmark_invocation_test.go:109)	SUBQ	$856, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_invocation_test.go:109)	MOVQ	BP, 848(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_invocation_test.go:109)	LEAQ	848(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:109)	FUNCDATA	$0, gclocals·73de87619823f6747f37fd4c152f5b42(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:109)	FUNCDATA	$1, gclocals·52d62297ee1fe28d67c61808da6a453e(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:109)	FUNCDATA	$2, gclocals·437d171b9e6f84c40356e01ae02b710f(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:109)	FUNCDATA	$3, "".BenchmarkMegaIfc_Calc.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:111)	PCDATA	$0, $1
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:111)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:111)	LEAQ	type."".mega(SB), AX
	0x0039 00057 (pointer_vs_value/code/benchmark_invocation_test.go:111)	PCDATA	$0, $0
	0x0039 00057 (pointer_vs_value/code/benchmark_invocation_test.go:111)	MOVQ	AX, (SP)
	0x003d 00061 (pointer_vs_value/code/benchmark_invocation_test.go:111)	CALL	runtime.newobject(SB)
	0x0042 00066 (pointer_vs_value/code/benchmark_invocation_test.go:111)	PCDATA	$0, $1
	0x0042 00066 (pointer_vs_value/code/benchmark_invocation_test.go:111)	MOVQ	8(SP), AX
	0x0047 00071 (pointer_vs_value/code/benchmark_invocation_test.go:111)	PCDATA	$0, $0
	0x0047 00071 (pointer_vs_value/code/benchmark_invocation_test.go:111)	PCDATA	$1, $1
	0x0047 00071 (pointer_vs_value/code/benchmark_invocation_test.go:111)	MOVQ	AX, "".&o+400(SP)
	0x004f 00079 (pointer_vs_value/code/benchmark_invocation_test.go:111)	CALL	"".createMega(SB)
	0x0054 00084 (pointer_vs_value/code/benchmark_invocation_test.go:111)	PCDATA	$0, $2
	0x0054 00084 (pointer_vs_value/code/benchmark_invocation_test.go:111)	MOVQ	"".&o+400(SP), DI
	0x005c 00092 (pointer_vs_value/code/benchmark_invocation_test.go:111)	PCDATA	$0, $-2
	0x005c 00092 (pointer_vs_value/code/benchmark_invocation_test.go:111)	PCDATA	$1, $-2
	0x005c 00092 (pointer_vs_value/code/benchmark_invocation_test.go:111)	CMPL	runtime.writeBarrier(SB), $0
	0x0063 00099 (pointer_vs_value/code/benchmark_invocation_test.go:111)	JEQ	106
	0x0065 00101 (pointer_vs_value/code/benchmark_invocation_test.go:111)	JMP	578
	0x006a 00106 (pointer_vs_value/code/benchmark_invocation_test.go:111)	MOVQ	SP, SI
	0x006d 00109 (pointer_vs_value/code/benchmark_invocation_test.go:111)	DUFFCOPY	$588
	0x0080 00128 (pointer_vs_value/code/benchmark_invocation_test.go:111)	JMP	130
	0x0082 00130 (pointer_vs_value/code/benchmark_invocation_test.go:113)	PCDATA	$0, $0
	0x0082 00130 (pointer_vs_value/code/benchmark_invocation_test.go:113)	PCDATA	$1, $1
	0x0082 00130 (pointer_vs_value/code/benchmark_invocation_test.go:113)	MOVQ	$0, "".i+352(SP)
	0x008e 00142 (pointer_vs_value/code/benchmark_invocation_test.go:113)	JMP	144
	0x0090 00144 (pointer_vs_value/code/benchmark_invocation_test.go:113)	PCDATA	$0, $1
	0x0090 00144 (pointer_vs_value/code/benchmark_invocation_test.go:113)	MOVQ	"".b+864(SP), AX
	0x0098 00152 (pointer_vs_value/code/benchmark_invocation_test.go:113)	TESTB	AL, (AX)
	0x009a 00154 (pointer_vs_value/code/benchmark_invocation_test.go:113)	PCDATA	$0, $0
	0x009a 00154 (pointer_vs_value/code/benchmark_invocation_test.go:113)	MOVQ	264(AX), AX
	0x00a1 00161 (pointer_vs_value/code/benchmark_invocation_test.go:113)	CMPQ	"".i+352(SP), AX
	0x00a9 00169 (pointer_vs_value/code/benchmark_invocation_test.go:113)	JLT	176
	0x00ab 00171 (pointer_vs_value/code/benchmark_invocation_test.go:113)	JMP	562
	0x00b0 00176 (pointer_vs_value/code/benchmark_invocation_test.go:114)	PCDATA	$0, $1
	0x00b0 00176 (pointer_vs_value/code/benchmark_invocation_test.go:114)	MOVQ	"".&o+400(SP), AX
	0x00b8 00184 (pointer_vs_value/code/benchmark_invocation_test.go:114)	PCDATA	$0, $0
	0x00b8 00184 (pointer_vs_value/code/benchmark_invocation_test.go:114)	PCDATA	$1, $2
	0x00b8 00184 (pointer_vs_value/code/benchmark_invocation_test.go:114)	MOVQ	AX, ""..autotmp_8+384(SP)
	0x00c0 00192 (pointer_vs_value/code/benchmark_invocation_test.go:114)	XORPS	X0, X0
	0x00c3 00195 (pointer_vs_value/code/benchmark_invocation_test.go:114)	MOVUPS	X0, ""..autotmp_10+456(SP)
	0x00cb 00203 (pointer_vs_value/code/benchmark_invocation_test.go:114)	PCDATA	$0, $1
	0x00cb 00203 (pointer_vs_value/code/benchmark_invocation_test.go:114)	PCDATA	$1, $1
	0x00cb 00203 (pointer_vs_value/code/benchmark_invocation_test.go:114)	MOVQ	""..autotmp_8+384(SP), AX
	0x00d3 00211 (pointer_vs_value/code/benchmark_invocation_test.go:114)	PCDATA	$0, $3
	0x00d3 00211 (pointer_vs_value/code/benchmark_invocation_test.go:114)	LEAQ	go.itab.*"".mega,"".obj(SB), CX
	0x00da 00218 (pointer_vs_value/code/benchmark_invocation_test.go:114)	PCDATA	$0, $1
	0x00da 00218 (pointer_vs_value/code/benchmark_invocation_test.go:114)	MOVQ	CX, (SP)
	0x00de 00222 (pointer_vs_value/code/benchmark_invocation_test.go:114)	PCDATA	$0, $0
	0x00de 00222 (pointer_vs_value/code/benchmark_invocation_test.go:114)	MOVQ	AX, 8(SP)
	0x00e3 00227 (pointer_vs_value/code/benchmark_invocation_test.go:114)	CALL	"".calcIfc(SB)
	0x00e8 00232 (pointer_vs_value/code/benchmark_invocation_test.go:114)	MOVSD	16(SP), X0
	0x00ee 00238 (pointer_vs_value/code/benchmark_invocation_test.go:114)	MOVSD	X0, ""..autotmp_9+368(SP)
	0x00f7 00247 (pointer_vs_value/code/benchmark_invocation_test.go:114)	PCDATA	$0, $1
	0x00f7 00247 (pointer_vs_value/code/benchmark_invocation_test.go:114)	MOVQ	32(SP), AX
	0x00fc 00252 (pointer_vs_value/code/benchmark_invocation_test.go:114)	MOVQ	24(SP), CX
	0x0101 00257 (pointer_vs_value/code/benchmark_invocation_test.go:114)	PCDATA	$1, $3
	0x0101 00257 (pointer_vs_value/code/benchmark_invocation_test.go:114)	MOVQ	CX, ""..autotmp_10+456(SP)
	0x0109 00265 (pointer_vs_value/code/benchmark_invocation_test.go:114)	PCDATA	$0, $0
	0x0109 00265 (pointer_vs_value/code/benchmark_invocation_test.go:114)	MOVQ	AX, ""..autotmp_10+464(SP)
	0x0111 00273 (pointer_vs_value/code/benchmark_invocation_test.go:114)	MOVSD	""..autotmp_9+368(SP), X0
	0x011a 00282 (pointer_vs_value/code/benchmark_invocation_test.go:114)	MOVSD	X0, ""..autotmp_3+376(SP)
	0x0123 00291 (pointer_vs_value/code/benchmark_invocation_test.go:114)	PCDATA	$0, $1
	0x0123 00291 (pointer_vs_value/code/benchmark_invocation_test.go:114)	MOVQ	""..autotmp_10+464(SP), AX
	0x012b 00299 (pointer_vs_value/code/benchmark_invocation_test.go:114)	PCDATA	$1, $1
	0x012b 00299 (pointer_vs_value/code/benchmark_invocation_test.go:114)	MOVQ	""..autotmp_10+456(SP), CX
	0x0133 00307 (pointer_vs_value/code/benchmark_invocation_test.go:114)	PCDATA	$1, $4
	0x0133 00307 (pointer_vs_value/code/benchmark_invocation_test.go:114)	MOVQ	CX, ""..autotmp_4+424(SP)
	0x013b 00315 (pointer_vs_value/code/benchmark_invocation_test.go:114)	PCDATA	$0, $0
	0x013b 00315 (pointer_vs_value/code/benchmark_invocation_test.go:114)	MOVQ	AX, ""..autotmp_4+432(SP)
	0x0143 00323 (pointer_vs_value/code/benchmark_invocation_test.go:114)	MOVSD	""..autotmp_3+376(SP), X0
	0x014c 00332 (pointer_vs_value/code/benchmark_invocation_test.go:114)	MOVSD	X0, "".f+360(SP)
	0x0155 00341 (pointer_vs_value/code/benchmark_invocation_test.go:114)	PCDATA	$0, $1
	0x0155 00341 (pointer_vs_value/code/benchmark_invocation_test.go:114)	MOVQ	""..autotmp_4+432(SP), AX
	0x015d 00349 (pointer_vs_value/code/benchmark_invocation_test.go:114)	PCDATA	$1, $1
	0x015d 00349 (pointer_vs_value/code/benchmark_invocation_test.go:114)	MOVQ	""..autotmp_4+424(SP), CX
	0x0165 00357 (pointer_vs_value/code/benchmark_invocation_test.go:114)	MOVQ	CX, "".err+408(SP)
	0x016d 00365 (pointer_vs_value/code/benchmark_invocation_test.go:114)	PCDATA	$0, $0
	0x016d 00365 (pointer_vs_value/code/benchmark_invocation_test.go:114)	MOVQ	AX, "".err+416(SP)
	0x0175 00373 (<unknown line number>)	NOP
	0x0175 00373 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	CX, CX
	0x0178 00376 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	383
	0x017a 00378 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	560
	0x017f 00383 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $5
	0x017f 00383 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X0, X0
	0x0182 00386 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X0, ""..autotmp_11+440(SP)
	0x018a 00394 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x018a 00394 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x018a 00394 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_11+440(SP), AX
	0x0192 00402 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_13+392(SP)
	0x019a 00410 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x019c 00412 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x019c 00412 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), CX
	0x01a3 00419 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x01a3 00419 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_11+440(SP)
	0x01ab 00427 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x01ab 00427 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_14(SB), DX
	0x01b2 00434 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x01b2 00434 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	DX, ""..autotmp_11+448(SP)
	0x01ba 00442 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x01bc 00444 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	446
	0x01be 00446 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_12+472(SP)
	0x01c6 00454 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_12+480(SP)
	0x01d2 00466 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_12+488(SP)
	0x01de 00478 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x01de 00478 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, (SP)
	0x01e2 00482 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x01eb 00491 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x01f4 00500 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x01f9 00505 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	507
	0x01fb 00507 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x0203 00515 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+360(SP), X0
	0x020c 00524 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x0214 00532 (pointer_vs_value/code/benchmark_invocation_test.go:114)	JMP	534
	0x0216 00534 (pointer_vs_value/code/benchmark_invocation_test.go:113)	PCDATA	$0, $-2
	0x0216 00534 (pointer_vs_value/code/benchmark_invocation_test.go:113)	PCDATA	$1, $-2
	0x0216 00534 (pointer_vs_value/code/benchmark_invocation_test.go:113)	JMP	536
	0x0218 00536 (pointer_vs_value/code/benchmark_invocation_test.go:113)	PCDATA	$0, $0
	0x0218 00536 (pointer_vs_value/code/benchmark_invocation_test.go:113)	PCDATA	$1, $1
	0x0218 00536 (pointer_vs_value/code/benchmark_invocation_test.go:113)	MOVQ	"".i+352(SP), AX
	0x0220 00544 (pointer_vs_value/code/benchmark_invocation_test.go:113)	INCQ	AX
	0x0223 00547 (pointer_vs_value/code/benchmark_invocation_test.go:113)	MOVQ	AX, "".i+352(SP)
	0x022b 00555 (pointer_vs_value/code/benchmark_invocation_test.go:113)	JMP	144
	0x0230 00560 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x0230 00560 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x0230 00560 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	507
	0x0232 00562 (<unknown line number>)	MOVQ	848(SP), BP
	0x023a 00570 (<unknown line number>)	ADDQ	$856, SP
	0x0241 00577 (<unknown line number>)	RET
	0x0242 00578 (pointer_vs_value/code/benchmark_invocation_test.go:111)	MOVQ	DI, AX
	0x0245 00581 (pointer_vs_value/code/benchmark_invocation_test.go:111)	LEAQ	""..autotmp_14+496(SP), DI
	0x024d 00589 (pointer_vs_value/code/benchmark_invocation_test.go:111)	MOVQ	SP, SI
	0x0250 00592 (pointer_vs_value/code/benchmark_invocation_test.go:111)	DUFFCOPY	$588
	0x0263 00611 (pointer_vs_value/code/benchmark_invocation_test.go:111)	LEAQ	type."".mega(SB), CX
	0x026a 00618 (pointer_vs_value/code/benchmark_invocation_test.go:111)	MOVQ	CX, (SP)
	0x026e 00622 (pointer_vs_value/code/benchmark_invocation_test.go:111)	MOVQ	AX, 8(SP)
	0x0273 00627 (pointer_vs_value/code/benchmark_invocation_test.go:111)	LEAQ	""..autotmp_14+496(SP), AX
	0x027b 00635 (pointer_vs_value/code/benchmark_invocation_test.go:111)	MOVQ	AX, 16(SP)
	0x0280 00640 (pointer_vs_value/code/benchmark_invocation_test.go:111)	CALL	runtime.typedmemmove(SB)
	0x0285 00645 (pointer_vs_value/code/benchmark_invocation_test.go:111)	JMP	130
	0x028a 00650 (pointer_vs_value/code/benchmark_invocation_test.go:111)	NOP
	0x028a 00650 (pointer_vs_value/code/benchmark_invocation_test.go:109)	PCDATA	$1, $-1
	0x028a 00650 (pointer_vs_value/code/benchmark_invocation_test.go:109)	PCDATA	$0, $-1
	0x028a 00650 (pointer_vs_value/code/benchmark_invocation_test.go:109)	CALL	runtime.morestack_noctxt(SB)
	0x028f 00655 (pointer_vs_value/code/benchmark_invocation_test.go:109)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 28 fd ff  eH..%....H..$(..
	0x0010 ff 48 3b 41 10 0f 86 6f 02 00 00 48 81 ec 58 03  .H;A...o...H..X.
	0x0020 00 00 48 89 ac 24 50 03 00 00 48 8d ac 24 50 03  ..H..$P...H..$P.
	0x0030 00 00 48 8d 05 00 00 00 00 48 89 04 24 e8 00 00  ..H......H..$...
	0x0040 00 00 48 8b 44 24 08 48 89 84 24 90 01 00 00 e8  ..H.D$.H..$.....
	0x0050 00 00 00 00 48 8b bc 24 90 01 00 00 83 3d 00 00  ....H..$.....=..
	0x0060 00 00 00 74 05 e9 d8 01 00 00 48 89 e6 48 89 6c  ...t......H..H.l
	0x0070 24 f0 48 8d 6c 24 f0 e8 00 00 00 00 48 8b 6d 00  $.H.l$......H.m.
	0x0080 eb 00 48 c7 84 24 60 01 00 00 00 00 00 00 eb 00  ..H..$`.........
	0x0090 48 8b 84 24 60 03 00 00 84 00 48 8b 80 08 01 00  H..$`.....H.....
	0x00a0 00 48 39 84 24 60 01 00 00 7c 05 e9 82 01 00 00  .H9.$`...|......
	0x00b0 48 8b 84 24 90 01 00 00 48 89 84 24 80 01 00 00  H..$....H..$....
	0x00c0 0f 57 c0 0f 11 84 24 c8 01 00 00 48 8b 84 24 80  .W....$....H..$.
	0x00d0 01 00 00 48 8d 0d 00 00 00 00 48 89 0c 24 48 89  ...H......H..$H.
	0x00e0 44 24 08 e8 00 00 00 00 f2 0f 10 44 24 10 f2 0f  D$.........D$...
	0x00f0 11 84 24 70 01 00 00 48 8b 44 24 20 48 8b 4c 24  ..$p...H.D$ H.L$
	0x0100 18 48 89 8c 24 c8 01 00 00 48 89 84 24 d0 01 00  .H..$....H..$...
	0x0110 00 f2 0f 10 84 24 70 01 00 00 f2 0f 11 84 24 78  .....$p.......$x
	0x0120 01 00 00 48 8b 84 24 d0 01 00 00 48 8b 8c 24 c8  ...H..$....H..$.
	0x0130 01 00 00 48 89 8c 24 a8 01 00 00 48 89 84 24 b0  ...H..$....H..$.
	0x0140 01 00 00 f2 0f 10 84 24 78 01 00 00 f2 0f 11 84  .......$x.......
	0x0150 24 68 01 00 00 48 8b 84 24 b0 01 00 00 48 8b 8c  $h...H..$....H..
	0x0160 24 a8 01 00 00 48 89 8c 24 98 01 00 00 48 89 84  $....H..$....H..
	0x0170 24 a0 01 00 00 48 85 c9 75 05 e9 b1 00 00 00 0f  $....H..u.......
	0x0180 57 c0 0f 11 84 24 b8 01 00 00 48 8d 84 24 b8 01  W....$....H..$..
	0x0190 00 00 48 89 84 24 88 01 00 00 84 00 48 8d 0d 00  ..H..$......H...
	0x01a0 00 00 00 48 89 8c 24 b8 01 00 00 48 8d 15 00 00  ...H..$....H....
	0x01b0 00 00 48 89 94 24 c0 01 00 00 84 00 eb 00 48 89  ..H..$........H.
	0x01c0 84 24 d8 01 00 00 48 c7 84 24 e0 01 00 00 01 00  .$....H..$......
	0x01d0 00 00 48 c7 84 24 e8 01 00 00 01 00 00 00 48 89  ..H..$........H.
	0x01e0 04 24 48 c7 44 24 08 01 00 00 00 48 c7 44 24 10  .$H.D$.....H.D$.
	0x01f0 01 00 00 00 e8 00 00 00 00 eb 00 f2 0f 10 05 00  ................
	0x0200 00 00 00 f2 0f 58 84 24 68 01 00 00 f2 0f 11 05  .....X.$h.......
	0x0210 00 00 00 00 eb 00 eb 00 48 8b 84 24 60 01 00 00  ........H..$`...
	0x0220 48 ff c0 48 89 84 24 60 01 00 00 e9 60 fe ff ff  H..H..$`....`...
	0x0230 eb c9 48 8b ac 24 50 03 00 00 48 81 c4 58 03 00  ..H..$P...H..X..
	0x0240 00 c3 48 89 f8 48 8d bc 24 f0 01 00 00 48 89 e6  ..H..H..$....H..
	0x0250 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00 00 48  H.l$.H.l$......H
	0x0260 8b 6d 00 48 8d 0d 00 00 00 00 48 89 0c 24 48 89  .m.H......H..$H.
	0x0270 44 24 08 48 8d 84 24 f0 01 00 00 48 89 44 24 10  D$.H..$....H.D$.
	0x0280 e8 00 00 00 00 e9 f8 fd ff ff e8 00 00 00 00 e9  ................
	0x0290 6c fd ff ff                                      l...
	rel 5+4 t=16 TLS+0
	rel 53+4 t=15 type."".mega+0
	rel 62+4 t=8 runtime.newobject+0
	rel 80+4 t=8 "".createMega+0
	rel 94+4 t=15 runtime.writeBarrier+-1
	rel 120+4 t=8 runtime.duffcopy+588
	rel 214+4 t=15 go.itab.*"".mega,"".obj+0
	rel 228+4 t=8 "".calcIfc+0
	rel 415+4 t=15 type.string+0
	rel 430+4 t=15 ""..stmp_14+0
	rel 501+4 t=8 log.Fatal+0
	rel 511+4 t=15 "".F+0
	rel 528+4 t=15 "".F+0
	rel 603+4 t=8 runtime.duffcopy+588
	rel 614+4 t=15 type."".mega+0
	rel 641+4 t=8 runtime.typedmemmove+0
	rel 651+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkTera_Calc STEXT size=835 args=0x8 locals=0xab8
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:118)	TEXT	"".BenchmarkTera_Calc(SB), ABIInternal, $2744-8
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:118)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_invocation_test.go:118)	LEAQ	-2616(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_invocation_test.go:118)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_invocation_test.go:118)	JLS	825
	0x001b 00027 (pointer_vs_value/code/benchmark_invocation_test.go:118)	SUBQ	$2744, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_invocation_test.go:118)	MOVQ	BP, 2736(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_invocation_test.go:118)	LEAQ	2736(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:118)	FUNCDATA	$0, gclocals·d1d75e5bd153dd111cd8f1bc3c181073(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:118)	FUNCDATA	$1, gclocals·d0177ba0243799d35816ea21eadd74f0(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:118)	FUNCDATA	$2, gclocals·312acb76b4abc33b200226485697de53(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:118)	FUNCDATA	$3, "".BenchmarkTera_Calc.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:120)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:120)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:120)	CALL	"".createTera(SB)
	0x0037 00055 (pointer_vs_value/code/benchmark_invocation_test.go:120)	PCDATA	$0, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_invocation_test.go:120)	PCDATA	$1, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_invocation_test.go:120)	LEAQ	"".o+1904(SP), DI
	0x003f 00063 (pointer_vs_value/code/benchmark_invocation_test.go:120)	MOVQ	SP, SI
	0x0042 00066 (pointer_vs_value/code/benchmark_invocation_test.go:120)	PCDATA	$0, $0
	0x0042 00066 (pointer_vs_value/code/benchmark_invocation_test.go:120)	DUFFCOPY	$168
	0x0055 00085 (pointer_vs_value/code/benchmark_invocation_test.go:122)	MOVQ	$0, "".i+840(SP)
	0x0061 00097 (pointer_vs_value/code/benchmark_invocation_test.go:122)	PCDATA	$0, $-2
	0x0061 00097 (pointer_vs_value/code/benchmark_invocation_test.go:122)	PCDATA	$1, $-2
	0x0061 00097 (pointer_vs_value/code/benchmark_invocation_test.go:122)	JMP	99
	0x0063 00099 (pointer_vs_value/code/benchmark_invocation_test.go:122)	PCDATA	$0, $2
	0x0063 00099 (pointer_vs_value/code/benchmark_invocation_test.go:122)	PCDATA	$1, $1
	0x0063 00099 (pointer_vs_value/code/benchmark_invocation_test.go:122)	MOVQ	"".b+2752(SP), AX
	0x006b 00107 (pointer_vs_value/code/benchmark_invocation_test.go:122)	TESTB	AL, (AX)
	0x006d 00109 (pointer_vs_value/code/benchmark_invocation_test.go:122)	PCDATA	$0, $0
	0x006d 00109 (pointer_vs_value/code/benchmark_invocation_test.go:122)	MOVQ	264(AX), AX
	0x0074 00116 (pointer_vs_value/code/benchmark_invocation_test.go:122)	CMPQ	"".i+840(SP), AX
	0x007c 00124 (pointer_vs_value/code/benchmark_invocation_test.go:122)	JLT	131
	0x007e 00126 (pointer_vs_value/code/benchmark_invocation_test.go:122)	JMP	809
	0x0083 00131 (pointer_vs_value/code/benchmark_invocation_test.go:123)	PCDATA	$0, $1
	0x0083 00131 (pointer_vs_value/code/benchmark_invocation_test.go:123)	PCDATA	$1, $2
	0x0083 00131 (pointer_vs_value/code/benchmark_invocation_test.go:123)	LEAQ	"".o+1072(SP), DI
	0x008b 00139 (pointer_vs_value/code/benchmark_invocation_test.go:123)	PCDATA	$0, $3
	0x008b 00139 (pointer_vs_value/code/benchmark_invocation_test.go:123)	LEAQ	"".o+1904(SP), SI
	0x0093 00147 (pointer_vs_value/code/benchmark_invocation_test.go:123)	PCDATA	$0, $0
	0x0093 00147 (pointer_vs_value/code/benchmark_invocation_test.go:123)	DUFFCOPY	$168
	0x00a6 00166 (pointer_vs_value/code/benchmark_invocation_test.go:123)	XORPS	X0, X0
	0x00a9 00169 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVSD	X0, "".~r1+832(SP)
	0x00b2 00178 (pointer_vs_value/code/benchmark_invocation_test.go:123)	XORPS	X1, X1
	0x00b5 00181 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVUPS	X1, "".~r2+904(SP)
	0x00bd 00189 (<unknown line number>)	NOP
	0x00bd 00189 (pointer_vs_value/code/func.go:36)	MOVSD	"".o+1280(SP), X1
	0x00c6 00198 (pointer_vs_value/code/func.go:36)	UCOMISD	X0, X1
	0x00ca 00202 (pointer_vs_value/code/func.go:36)	JNE	736
	0x00d0 00208 (pointer_vs_value/code/func.go:36)	JPC	215
	0x00d2 00210 (pointer_vs_value/code/func.go:36)	JMP	736
	0x00d7 00215 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $2
	0x00d7 00215 (pointer_vs_value/code/func.go:37)	PCDATA	$1, $3
	0x00d7 00215 (pointer_vs_value/code/func.go:37)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x00de 00222 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $0
	0x00de 00222 (pointer_vs_value/code/func.go:37)	MOVQ	AX, errors.text+936(SP)
	0x00e6 00230 (pointer_vs_value/code/func.go:37)	MOVQ	$22, errors.text+944(SP)
	0x00f2 00242 (pointer_vs_value/code/func.go:37)	XORPS	X1, X1
	0x00f5 00245 (pointer_vs_value/code/func.go:37)	MOVUPS	X1, "".~R0+920(SP)
	0x00fd 00253 (<unknown line number>)	NOP
	0x00fd 00253 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x00fd 00253 ($GOROOT/src/errors/errors.go:59)	XORPS	X1, X1
	0x0100 00256 ($GOROOT/src/errors/errors.go:59)	MOVUPS	X1, ""..autotmp_15+1016(SP)
	0x0108 00264 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $4
	0x0108 00264 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x0108 00264 ($GOROOT/src/errors/errors.go:59)	LEAQ	""..autotmp_15+1016(SP), CX
	0x0110 00272 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_14+888(SP)
	0x0118 00280 ($GOROOT/src/errors/errors.go:59)	TESTB	AL, (CX)
	0x011a 00282 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+944(SP), DX
	0x0122 00290 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $5
	0x0122 00290 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $1
	0x0122 00290 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+936(SP), BX
	0x012a 00298 ($GOROOT/src/errors/errors.go:59)	MOVQ	DX, ""..autotmp_15+1024(SP)
	0x0132 00306 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $4
	0x0132 00306 ($GOROOT/src/errors/errors.go:59)	MOVQ	BX, ""..autotmp_15+1016(SP)
	0x013a 00314 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_12+896(SP)
	0x0142 00322 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $6
	0x0142 00322 (pointer_vs_value/code/func.go:37)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x0149 00329 (pointer_vs_value/code/func.go:37)	MOVQ	DX, ""..autotmp_16+1000(SP)
	0x0151 00337 (pointer_vs_value/code/func.go:37)	MOVQ	CX, ""..autotmp_16+1008(SP)
	0x0159 00345 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $4
	0x0159 00345 (pointer_vs_value/code/func.go:37)	PCDATA	$1, $5
	0x0159 00345 (pointer_vs_value/code/func.go:37)	MOVQ	DX, "".~R0+920(SP)
	0x0161 00353 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $0
	0x0161 00353 (pointer_vs_value/code/func.go:37)	MOVQ	CX, "".~R0+928(SP)
	0x0169 00361 (pointer_vs_value/code/func.go:37)	JMP	363
	0x016b 00363 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVQ	"".~R0+920(SP), CX
	0x0173 00371 (pointer_vs_value/code/benchmark_invocation_test.go:123)	PCDATA	$0, $7
	0x0173 00371 (pointer_vs_value/code/benchmark_invocation_test.go:123)	PCDATA	$1, $1
	0x0173 00371 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVQ	"".~R0+928(SP), BX
	0x017b 00379 (pointer_vs_value/code/benchmark_invocation_test.go:123)	PCDATA	$1, $6
	0x017b 00379 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVQ	CX, ""..autotmp_17+984(SP)
	0x0183 00387 (pointer_vs_value/code/benchmark_invocation_test.go:123)	PCDATA	$0, $0
	0x0183 00387 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVQ	BX, ""..autotmp_17+992(SP)
	0x018b 00395 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVSD	X0, "".~r1+832(SP)
	0x0194 00404 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVQ	""..autotmp_17+984(SP), CX
	0x019c 00412 (pointer_vs_value/code/benchmark_invocation_test.go:123)	PCDATA	$0, $7
	0x019c 00412 (pointer_vs_value/code/benchmark_invocation_test.go:123)	PCDATA	$1, $1
	0x019c 00412 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVQ	""..autotmp_17+992(SP), BX
	0x01a4 00420 (pointer_vs_value/code/benchmark_invocation_test.go:123)	PCDATA	$1, $7
	0x01a4 00420 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVQ	CX, "".~r2+904(SP)
	0x01ac 00428 (pointer_vs_value/code/benchmark_invocation_test.go:123)	PCDATA	$0, $0
	0x01ac 00428 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVQ	BX, "".~r2+912(SP)
	0x01b4 00436 (pointer_vs_value/code/benchmark_invocation_test.go:123)	JMP	438
	0x01b6 00438 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVSD	"".~r1+832(SP), X1
	0x01bf 00447 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVSD	X1, ""..autotmp_19+864(SP)
	0x01c8 00456 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVSD	X1, ""..autotmp_3+856(SP)
	0x01d1 00465 (pointer_vs_value/code/benchmark_invocation_test.go:123)	PCDATA	$0, $4
	0x01d1 00465 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVQ	"".~r2+912(SP), CX
	0x01d9 00473 (pointer_vs_value/code/benchmark_invocation_test.go:123)	PCDATA	$1, $1
	0x01d9 00473 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVQ	"".~r2+904(SP), BX
	0x01e1 00481 (pointer_vs_value/code/benchmark_invocation_test.go:123)	PCDATA	$1, $8
	0x01e1 00481 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVQ	BX, ""..autotmp_4+968(SP)
	0x01e9 00489 (pointer_vs_value/code/benchmark_invocation_test.go:123)	PCDATA	$0, $0
	0x01e9 00489 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVQ	CX, ""..autotmp_4+976(SP)
	0x01f1 00497 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVSD	""..autotmp_3+856(SP), X1
	0x01fa 00506 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVSD	X1, "".f+848(SP)
	0x0203 00515 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVQ	""..autotmp_4+968(SP), CX
	0x020b 00523 (pointer_vs_value/code/benchmark_invocation_test.go:123)	PCDATA	$0, $7
	0x020b 00523 (pointer_vs_value/code/benchmark_invocation_test.go:123)	PCDATA	$1, $1
	0x020b 00523 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVQ	""..autotmp_4+976(SP), BX
	0x0213 00531 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVQ	CX, "".err+952(SP)
	0x021b 00539 (pointer_vs_value/code/benchmark_invocation_test.go:123)	PCDATA	$0, $0
	0x021b 00539 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVQ	BX, "".err+960(SP)
	0x0223 00547 (<unknown line number>)	NOP
	0x0223 00547 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	CX, CX
	0x0226 00550 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	557
	0x0228 00552 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	734
	0x022d 00557 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $9
	0x022d 00557 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X1, X1
	0x0230 00560 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X1, ""..autotmp_13+1032(SP)
	0x0238 00568 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x0238 00568 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x0238 00568 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_13+1032(SP), CX
	0x0240 00576 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_21+880(SP)
	0x0248 00584 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x024a 00586 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $5
	0x024a 00586 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), BX
	0x0251 00593 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x0251 00593 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	BX, ""..autotmp_13+1032(SP)
	0x0259 00601 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $8
	0x0259 00601 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_15(SB), SI
	0x0260 00608 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x0260 00608 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	SI, ""..autotmp_13+1040(SP)
	0x0268 00616 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x026a 00618 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	620
	0x026c 00620 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_20+1048(SP)
	0x0274 00628 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_20+1056(SP)
	0x0280 00640 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_20+1064(SP)
	0x028c 00652 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x028c 00652 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, (SP)
	0x0290 00656 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x0299 00665 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x02a2 00674 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x02a7 00679 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	681
	0x02a9 00681 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x02b1 00689 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+848(SP), X0
	0x02ba 00698 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x02c2 00706 (pointer_vs_value/code/benchmark_invocation_test.go:123)	JMP	708
	0x02c4 00708 (pointer_vs_value/code/benchmark_invocation_test.go:122)	PCDATA	$0, $-2
	0x02c4 00708 (pointer_vs_value/code/benchmark_invocation_test.go:122)	PCDATA	$1, $-2
	0x02c4 00708 (pointer_vs_value/code/benchmark_invocation_test.go:122)	JMP	710
	0x02c6 00710 (pointer_vs_value/code/benchmark_invocation_test.go:122)	PCDATA	$0, $0
	0x02c6 00710 (pointer_vs_value/code/benchmark_invocation_test.go:122)	PCDATA	$1, $1
	0x02c6 00710 (pointer_vs_value/code/benchmark_invocation_test.go:122)	MOVQ	"".i+840(SP), AX
	0x02ce 00718 (pointer_vs_value/code/benchmark_invocation_test.go:122)	INCQ	AX
	0x02d1 00721 (pointer_vs_value/code/benchmark_invocation_test.go:122)	MOVQ	AX, "".i+840(SP)
	0x02d9 00729 (pointer_vs_value/code/benchmark_invocation_test.go:122)	JMP	99
	0x02de 00734 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x02de 00734 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x02de 00734 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	681
	0x02e0 00736 (pointer_vs_value/code/func.go:39)	PCDATA	$0, $0
	0x02e0 00736 (pointer_vs_value/code/func.go:39)	PCDATA	$1, $2
	0x02e0 00736 (pointer_vs_value/code/func.go:39)	MOVQ	"".o+1072(SP), CX
	0x02e8 00744 (pointer_vs_value/code/func.go:39)	XORPS	X1, X1
	0x02eb 00747 (pointer_vs_value/code/func.go:39)	CVTSQ2SD	CX, X1
	0x02f0 00752 (pointer_vs_value/code/func.go:39)	PCDATA	$1, $1
	0x02f0 00752 (pointer_vs_value/code/func.go:39)	DIVSD	"".o+1280(SP), X1
	0x02f9 00761 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVSD	X1, ""..autotmp_18+872(SP)
	0x0302 00770 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVSD	X1, "".~r1+832(SP)
	0x030b 00779 (pointer_vs_value/code/benchmark_invocation_test.go:123)	PCDATA	$1, $7
	0x030b 00779 (pointer_vs_value/code/benchmark_invocation_test.go:123)	XORPS	X1, X1
	0x030e 00782 (pointer_vs_value/code/benchmark_invocation_test.go:123)	MOVUPS	X1, "".~r2+904(SP)
	0x0316 00790 (pointer_vs_value/code/benchmark_invocation_test.go:123)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x031d 00797 (pointer_vs_value/code/benchmark_invocation_test.go:123)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x0324 00804 (pointer_vs_value/code/benchmark_invocation_test.go:123)	JMP	438
	0x0329 00809 (<unknown line number>)	PCDATA	$0, $-2
	0x0329 00809 (<unknown line number>)	PCDATA	$1, $-2
	0x0329 00809 (<unknown line number>)	MOVQ	2736(SP), BP
	0x0331 00817 (<unknown line number>)	ADDQ	$2744, SP
	0x0338 00824 (<unknown line number>)	RET
	0x0339 00825 (<unknown line number>)	NOP
	0x0339 00825 (pointer_vs_value/code/benchmark_invocation_test.go:118)	PCDATA	$1, $-1
	0x0339 00825 (pointer_vs_value/code/benchmark_invocation_test.go:118)	PCDATA	$0, $-1
	0x0339 00825 (pointer_vs_value/code/benchmark_invocation_test.go:118)	CALL	runtime.morestack_noctxt(SB)
	0x033e 00830 (pointer_vs_value/code/benchmark_invocation_test.go:118)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 c8 f5 ff  eH..%....H..$...
	0x0010 ff 48 3b 41 10 0f 86 1e 03 00 00 48 81 ec b8 0a  .H;A.......H....
	0x0020 00 00 48 89 ac 24 b0 0a 00 00 48 8d ac 24 b0 0a  ..H..$....H..$..
	0x0030 00 00 e8 00 00 00 00 48 8d bc 24 70 07 00 00 48  .......H..$p...H
	0x0040 89 e6 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00  ..H.l$.H.l$.....
	0x0050 00 48 8b 6d 00 48 c7 84 24 48 03 00 00 00 00 00  .H.m.H..$H......
	0x0060 00 eb 00 48 8b 84 24 c0 0a 00 00 84 00 48 8b 80  ...H..$......H..
	0x0070 08 01 00 00 48 39 84 24 48 03 00 00 7c 05 e9 a6  ....H9.$H...|...
	0x0080 02 00 00 48 8d bc 24 30 04 00 00 48 8d b4 24 70  ...H..$0...H..$p
	0x0090 07 00 00 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00  ...H.l$.H.l$....
	0x00a0 00 00 48 8b 6d 00 0f 57 c0 f2 0f 11 84 24 40 03  ..H.m..W.....$@.
	0x00b0 00 00 0f 57 c9 0f 11 8c 24 88 03 00 00 f2 0f 10  ...W....$.......
	0x00c0 8c 24 00 05 00 00 66 0f 2e c8 0f 85 10 02 00 00  .$....f.........
	0x00d0 7b 05 e9 09 02 00 00 48 8d 05 00 00 00 00 48 89  {......H......H.
	0x00e0 84 24 a8 03 00 00 48 c7 84 24 b0 03 00 00 16 00  .$....H..$......
	0x00f0 00 00 0f 57 c9 0f 11 8c 24 98 03 00 00 0f 57 c9  ...W....$.....W.
	0x0100 0f 11 8c 24 f8 03 00 00 48 8d 8c 24 f8 03 00 00  ...$....H..$....
	0x0110 48 89 8c 24 78 03 00 00 84 01 48 8b 94 24 b0 03  H..$x.....H..$..
	0x0120 00 00 48 8b 9c 24 a8 03 00 00 48 89 94 24 00 04  ..H..$....H..$..
	0x0130 00 00 48 89 9c 24 f8 03 00 00 48 89 8c 24 80 03  ..H..$....H..$..
	0x0140 00 00 48 8d 15 00 00 00 00 48 89 94 24 e8 03 00  ..H......H..$...
	0x0150 00 48 89 8c 24 f0 03 00 00 48 89 94 24 98 03 00  .H..$....H..$...
	0x0160 00 48 89 8c 24 a0 03 00 00 eb 00 48 8b 8c 24 98  .H..$......H..$.
	0x0170 03 00 00 48 8b 9c 24 a0 03 00 00 48 89 8c 24 d8  ...H..$....H..$.
	0x0180 03 00 00 48 89 9c 24 e0 03 00 00 f2 0f 11 84 24  ...H..$........$
	0x0190 40 03 00 00 48 8b 8c 24 d8 03 00 00 48 8b 9c 24  @...H..$....H..$
	0x01a0 e0 03 00 00 48 89 8c 24 88 03 00 00 48 89 9c 24  ....H..$....H..$
	0x01b0 90 03 00 00 eb 00 f2 0f 10 8c 24 40 03 00 00 f2  ..........$@....
	0x01c0 0f 11 8c 24 60 03 00 00 f2 0f 11 8c 24 58 03 00  ...$`.......$X..
	0x01d0 00 48 8b 8c 24 90 03 00 00 48 8b 9c 24 88 03 00  .H..$....H..$...
	0x01e0 00 48 89 9c 24 c8 03 00 00 48 89 8c 24 d0 03 00  .H..$....H..$...
	0x01f0 00 f2 0f 10 8c 24 58 03 00 00 f2 0f 11 8c 24 50  .....$X.......$P
	0x0200 03 00 00 48 8b 8c 24 c8 03 00 00 48 8b 9c 24 d0  ...H..$....H..$.
	0x0210 03 00 00 48 89 8c 24 b8 03 00 00 48 89 9c 24 c0  ...H..$....H..$.
	0x0220 03 00 00 48 85 c9 75 05 e9 b1 00 00 00 0f 57 c9  ...H..u.......W.
	0x0230 0f 11 8c 24 08 04 00 00 48 8d 8c 24 08 04 00 00  ...$....H..$....
	0x0240 48 89 8c 24 70 03 00 00 84 01 48 8d 1d 00 00 00  H..$p.....H.....
	0x0250 00 48 89 9c 24 08 04 00 00 48 8d 35 00 00 00 00  .H..$....H.5....
	0x0260 48 89 b4 24 10 04 00 00 84 01 eb 00 48 89 8c 24  H..$........H..$
	0x0270 18 04 00 00 48 c7 84 24 20 04 00 00 01 00 00 00  ....H..$ .......
	0x0280 48 c7 84 24 28 04 00 00 01 00 00 00 48 89 0c 24  H..$(.......H..$
	0x0290 48 c7 44 24 08 01 00 00 00 48 c7 44 24 10 01 00  H.D$.....H.D$...
	0x02a0 00 00 e8 00 00 00 00 eb 00 f2 0f 10 05 00 00 00  ................
	0x02b0 00 f2 0f 58 84 24 50 03 00 00 f2 0f 11 05 00 00  ...X.$P.........
	0x02c0 00 00 eb 00 eb 00 48 8b 84 24 48 03 00 00 48 ff  ......H..$H...H.
	0x02d0 c0 48 89 84 24 48 03 00 00 e9 85 fd ff ff eb c9  .H..$H..........
	0x02e0 48 8b 8c 24 30 04 00 00 0f 57 c9 f2 48 0f 2a c9  H..$0....W..H.*.
	0x02f0 f2 0f 5e 8c 24 00 05 00 00 f2 0f 11 8c 24 68 03  ..^.$........$h.
	0x0300 00 00 f2 0f 11 8c 24 40 03 00 00 0f 57 c9 0f 11  ......$@....W...
	0x0310 8c 24 88 03 00 00 48 8d 05 00 00 00 00 48 8d 15  .$....H......H..
	0x0320 00 00 00 00 e9 8d fe ff ff 48 8b ac 24 b0 0a 00  .........H..$...
	0x0330 00 48 81 c4 b8 0a 00 00 c3 e8 00 00 00 00 e9 bd  .H..............
	0x0340 fc ff ff                                         ...
	rel 5+4 t=16 TLS+0
	rel 51+4 t=8 "".createTera+0
	rel 77+4 t=8 runtime.duffcopy+168
	rel 158+4 t=8 runtime.duffcopy+168
	rel 218+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 325+4 t=15 go.itab.*errors.errorString,error+0
	rel 589+4 t=15 type.string+0
	rel 604+4 t=15 ""..stmp_15+0
	rel 675+4 t=8 log.Fatal+0
	rel 685+4 t=15 "".F+0
	rel 702+4 t=15 "".F+0
	rel 793+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 800+4 t=15 go.itab.*errors.errorString,error+0
	rel 826+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkTeraP_Calc STEXT size=847 args=0x8 locals=0x788
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:127)	TEXT	"".BenchmarkTeraP_Calc(SB), ABIInternal, $1928-8
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:127)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_invocation_test.go:127)	LEAQ	-1800(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_invocation_test.go:127)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_invocation_test.go:127)	JLS	837
	0x001b 00027 (pointer_vs_value/code/benchmark_invocation_test.go:127)	SUBQ	$1928, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_invocation_test.go:127)	MOVQ	BP, 1920(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_invocation_test.go:127)	LEAQ	1920(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:127)	FUNCDATA	$0, gclocals·d1d75e5bd153dd111cd8f1bc3c181073(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:127)	FUNCDATA	$1, gclocals·23e2d8290dcda2759e89083815bda6b5(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:127)	FUNCDATA	$2, gclocals·b0e64627e016c4f22ade44055db6bcad(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:127)	FUNCDATA	$3, "".BenchmarkTeraP_Calc.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:129)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:129)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:129)	CALL	"".createTera(SB)
	0x0037 00055 (pointer_vs_value/code/benchmark_invocation_test.go:129)	PCDATA	$0, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_invocation_test.go:129)	PCDATA	$1, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_invocation_test.go:129)	LEAQ	"".o+1088(SP), DI
	0x003f 00063 (pointer_vs_value/code/benchmark_invocation_test.go:129)	MOVQ	SP, SI
	0x0042 00066 (pointer_vs_value/code/benchmark_invocation_test.go:129)	PCDATA	$0, $0
	0x0042 00066 (pointer_vs_value/code/benchmark_invocation_test.go:129)	DUFFCOPY	$168
	0x0055 00085 (pointer_vs_value/code/benchmark_invocation_test.go:131)	MOVQ	$0, "".i+840(SP)
	0x0061 00097 (pointer_vs_value/code/benchmark_invocation_test.go:131)	PCDATA	$0, $-2
	0x0061 00097 (pointer_vs_value/code/benchmark_invocation_test.go:131)	PCDATA	$1, $-2
	0x0061 00097 (pointer_vs_value/code/benchmark_invocation_test.go:131)	JMP	99
	0x0063 00099 (pointer_vs_value/code/benchmark_invocation_test.go:131)	PCDATA	$0, $2
	0x0063 00099 (pointer_vs_value/code/benchmark_invocation_test.go:131)	PCDATA	$1, $1
	0x0063 00099 (pointer_vs_value/code/benchmark_invocation_test.go:131)	MOVQ	"".b+1936(SP), AX
	0x006b 00107 (pointer_vs_value/code/benchmark_invocation_test.go:131)	TESTB	AL, (AX)
	0x006d 00109 (pointer_vs_value/code/benchmark_invocation_test.go:131)	PCDATA	$0, $0
	0x006d 00109 (pointer_vs_value/code/benchmark_invocation_test.go:131)	MOVQ	264(AX), AX
	0x0074 00116 (pointer_vs_value/code/benchmark_invocation_test.go:131)	CMPQ	"".i+840(SP), AX
	0x007c 00124 (pointer_vs_value/code/benchmark_invocation_test.go:131)	JLT	131
	0x007e 00126 (pointer_vs_value/code/benchmark_invocation_test.go:131)	JMP	821
	0x0083 00131 (pointer_vs_value/code/benchmark_invocation_test.go:132)	PCDATA	$0, $2
	0x0083 00131 (pointer_vs_value/code/benchmark_invocation_test.go:132)	LEAQ	"".o+1088(SP), AX
	0x008b 00139 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVQ	AX, ""..autotmp_14+904(SP)
	0x0093 00147 (pointer_vs_value/code/benchmark_invocation_test.go:132)	PCDATA	$0, $0
	0x0093 00147 (pointer_vs_value/code/benchmark_invocation_test.go:132)	PCDATA	$1, $2
	0x0093 00147 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVQ	AX, "".o+880(SP)
	0x009b 00155 (pointer_vs_value/code/benchmark_invocation_test.go:132)	XORPS	X0, X0
	0x009e 00158 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVSD	X0, "".~r1+832(SP)
	0x00a7 00167 (pointer_vs_value/code/benchmark_invocation_test.go:132)	XORPS	X1, X1
	0x00aa 00170 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVUPS	X1, "".~r2+920(SP)
	0x00b2 00178 (pointer_vs_value/code/func.go:80)	PCDATA	$0, $2
	0x00b2 00178 (pointer_vs_value/code/func.go:80)	MOVQ	"".o+880(SP), AX
	0x00ba 00186 (pointer_vs_value/code/func.go:80)	TESTB	AL, (AX)
	0x00bc 00188 (<unknown line number>)	NOP
	0x00bc 00188 (pointer_vs_value/code/func.go:80)	PCDATA	$0, $0
	0x00bc 00188 (pointer_vs_value/code/func.go:80)	MOVSD	208(AX), X1
	0x00c4 00196 (pointer_vs_value/code/func.go:80)	UCOMISD	X0, X1
	0x00c8 00200 (pointer_vs_value/code/func.go:80)	JNE	734
	0x00ce 00206 (pointer_vs_value/code/func.go:80)	JPC	213
	0x00d0 00208 (pointer_vs_value/code/func.go:80)	JMP	734
	0x00d5 00213 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $2
	0x00d5 00213 (pointer_vs_value/code/func.go:81)	PCDATA	$1, $3
	0x00d5 00213 (pointer_vs_value/code/func.go:81)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x00dc 00220 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $0
	0x00dc 00220 (pointer_vs_value/code/func.go:81)	MOVQ	AX, errors.text+952(SP)
	0x00e4 00228 (pointer_vs_value/code/func.go:81)	MOVQ	$22, errors.text+960(SP)
	0x00f0 00240 (pointer_vs_value/code/func.go:81)	XORPS	X1, X1
	0x00f3 00243 (pointer_vs_value/code/func.go:81)	MOVUPS	X1, "".~R0+936(SP)
	0x00fb 00251 (<unknown line number>)	NOP
	0x00fb 00251 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x00fb 00251 ($GOROOT/src/errors/errors.go:59)	XORPS	X1, X1
	0x00fe 00254 ($GOROOT/src/errors/errors.go:59)	MOVUPS	X1, ""..autotmp_16+1032(SP)
	0x0106 00262 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x0106 00262 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x0106 00262 ($GOROOT/src/errors/errors.go:59)	LEAQ	""..autotmp_16+1032(SP), CX
	0x010e 00270 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_15+896(SP)
	0x0116 00278 ($GOROOT/src/errors/errors.go:59)	TESTB	AL, (CX)
	0x0118 00280 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+960(SP), DX
	0x0120 00288 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $4
	0x0120 00288 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $1
	0x0120 00288 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+952(SP), BX
	0x0128 00296 ($GOROOT/src/errors/errors.go:59)	MOVQ	DX, ""..autotmp_16+1040(SP)
	0x0130 00304 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x0130 00304 ($GOROOT/src/errors/errors.go:59)	MOVQ	BX, ""..autotmp_16+1032(SP)
	0x0138 00312 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_12+912(SP)
	0x0140 00320 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $5
	0x0140 00320 (pointer_vs_value/code/func.go:81)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x0147 00327 (pointer_vs_value/code/func.go:81)	MOVQ	DX, ""..autotmp_17+1016(SP)
	0x014f 00335 (pointer_vs_value/code/func.go:81)	MOVQ	CX, ""..autotmp_17+1024(SP)
	0x0157 00343 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $3
	0x0157 00343 (pointer_vs_value/code/func.go:81)	PCDATA	$1, $5
	0x0157 00343 (pointer_vs_value/code/func.go:81)	MOVQ	DX, "".~R0+936(SP)
	0x015f 00351 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $0
	0x015f 00351 (pointer_vs_value/code/func.go:81)	MOVQ	CX, "".~R0+944(SP)
	0x0167 00359 (pointer_vs_value/code/func.go:81)	JMP	361
	0x0169 00361 (pointer_vs_value/code/benchmark_invocation_test.go:132)	PCDATA	$0, $3
	0x0169 00361 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVQ	"".~R0+944(SP), CX
	0x0171 00369 (pointer_vs_value/code/benchmark_invocation_test.go:132)	PCDATA	$1, $1
	0x0171 00369 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVQ	"".~R0+936(SP), BX
	0x0179 00377 (pointer_vs_value/code/benchmark_invocation_test.go:132)	PCDATA	$1, $6
	0x0179 00377 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVQ	BX, ""..autotmp_18+1000(SP)
	0x0181 00385 (pointer_vs_value/code/benchmark_invocation_test.go:132)	PCDATA	$0, $0
	0x0181 00385 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVQ	CX, ""..autotmp_18+1008(SP)
	0x0189 00393 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVSD	X0, "".~r1+832(SP)
	0x0192 00402 (pointer_vs_value/code/benchmark_invocation_test.go:132)	PCDATA	$0, $3
	0x0192 00402 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVQ	""..autotmp_18+1008(SP), CX
	0x019a 00410 (pointer_vs_value/code/benchmark_invocation_test.go:132)	PCDATA	$1, $1
	0x019a 00410 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVQ	""..autotmp_18+1000(SP), BX
	0x01a2 00418 (pointer_vs_value/code/benchmark_invocation_test.go:132)	PCDATA	$1, $7
	0x01a2 00418 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVQ	BX, "".~r2+920(SP)
	0x01aa 00426 (pointer_vs_value/code/benchmark_invocation_test.go:132)	PCDATA	$0, $0
	0x01aa 00426 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVQ	CX, "".~r2+928(SP)
	0x01b2 00434 (pointer_vs_value/code/benchmark_invocation_test.go:132)	JMP	436
	0x01b4 00436 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVSD	"".~r1+832(SP), X1
	0x01bd 00445 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVSD	X1, ""..autotmp_20+864(SP)
	0x01c6 00454 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVSD	X1, ""..autotmp_3+856(SP)
	0x01cf 00463 (pointer_vs_value/code/benchmark_invocation_test.go:132)	PCDATA	$0, $3
	0x01cf 00463 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVQ	"".~r2+928(SP), CX
	0x01d7 00471 (pointer_vs_value/code/benchmark_invocation_test.go:132)	PCDATA	$1, $1
	0x01d7 00471 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVQ	"".~r2+920(SP), BX
	0x01df 00479 (pointer_vs_value/code/benchmark_invocation_test.go:132)	PCDATA	$1, $8
	0x01df 00479 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVQ	BX, ""..autotmp_4+984(SP)
	0x01e7 00487 (pointer_vs_value/code/benchmark_invocation_test.go:132)	PCDATA	$0, $0
	0x01e7 00487 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVQ	CX, ""..autotmp_4+992(SP)
	0x01ef 00495 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVSD	""..autotmp_3+856(SP), X1
	0x01f8 00504 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVSD	X1, "".f+848(SP)
	0x0201 00513 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVQ	""..autotmp_4+984(SP), CX
	0x0209 00521 (pointer_vs_value/code/benchmark_invocation_test.go:132)	PCDATA	$0, $6
	0x0209 00521 (pointer_vs_value/code/benchmark_invocation_test.go:132)	PCDATA	$1, $1
	0x0209 00521 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVQ	""..autotmp_4+992(SP), BX
	0x0211 00529 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVQ	CX, "".err+968(SP)
	0x0219 00537 (pointer_vs_value/code/benchmark_invocation_test.go:132)	PCDATA	$0, $0
	0x0219 00537 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVQ	BX, "".err+976(SP)
	0x0221 00545 (<unknown line number>)	NOP
	0x0221 00545 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	CX, CX
	0x0224 00548 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	555
	0x0226 00550 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	732
	0x022b 00555 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $9
	0x022b 00555 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X1, X1
	0x022e 00558 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X1, ""..autotmp_13+1048(SP)
	0x0236 00566 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x0236 00566 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x0236 00566 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_13+1048(SP), CX
	0x023e 00574 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_22+888(SP)
	0x0246 00582 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x0248 00584 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x0248 00584 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), BX
	0x024f 00591 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x024f 00591 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	BX, ""..autotmp_13+1048(SP)
	0x0257 00599 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $7
	0x0257 00599 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_16(SB), SI
	0x025e 00606 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x025e 00606 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	SI, ""..autotmp_13+1056(SP)
	0x0266 00614 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x0268 00616 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	618
	0x026a 00618 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_21+1064(SP)
	0x0272 00626 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_21+1072(SP)
	0x027e 00638 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_21+1080(SP)
	0x028a 00650 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x028a 00650 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, (SP)
	0x028e 00654 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x0297 00663 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x02a0 00672 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x02a5 00677 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	679
	0x02a7 00679 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x02af 00687 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+848(SP), X0
	0x02b8 00696 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x02c0 00704 (pointer_vs_value/code/benchmark_invocation_test.go:132)	JMP	706
	0x02c2 00706 (pointer_vs_value/code/benchmark_invocation_test.go:131)	PCDATA	$0, $-2
	0x02c2 00706 (pointer_vs_value/code/benchmark_invocation_test.go:131)	PCDATA	$1, $-2
	0x02c2 00706 (pointer_vs_value/code/benchmark_invocation_test.go:131)	JMP	708
	0x02c4 00708 (pointer_vs_value/code/benchmark_invocation_test.go:131)	PCDATA	$0, $0
	0x02c4 00708 (pointer_vs_value/code/benchmark_invocation_test.go:131)	PCDATA	$1, $1
	0x02c4 00708 (pointer_vs_value/code/benchmark_invocation_test.go:131)	MOVQ	"".i+840(SP), AX
	0x02cc 00716 (pointer_vs_value/code/benchmark_invocation_test.go:131)	INCQ	AX
	0x02cf 00719 (pointer_vs_value/code/benchmark_invocation_test.go:131)	MOVQ	AX, "".i+840(SP)
	0x02d7 00727 (pointer_vs_value/code/benchmark_invocation_test.go:131)	JMP	99
	0x02dc 00732 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x02dc 00732 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x02dc 00732 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	679
	0x02de 00734 (pointer_vs_value/code/func.go:83)	PCDATA	$0, $3
	0x02de 00734 (pointer_vs_value/code/func.go:83)	PCDATA	$1, $2
	0x02de 00734 (pointer_vs_value/code/func.go:83)	MOVQ	"".o+880(SP), CX
	0x02e6 00742 (pointer_vs_value/code/func.go:83)	TESTB	AL, (CX)
	0x02e8 00744 (pointer_vs_value/code/func.go:83)	PCDATA	$0, $4
	0x02e8 00744 (pointer_vs_value/code/func.go:83)	PCDATA	$1, $1
	0x02e8 00744 (pointer_vs_value/code/func.go:83)	MOVQ	"".o+880(SP), BX
	0x02f0 00752 (pointer_vs_value/code/func.go:83)	TESTB	AL, (BX)
	0x02f2 00754 (pointer_vs_value/code/func.go:83)	PCDATA	$0, $6
	0x02f2 00754 (pointer_vs_value/code/func.go:83)	MOVQ	(CX), CX
	0x02f5 00757 (pointer_vs_value/code/func.go:83)	XORPS	X1, X1
	0x02f8 00760 (pointer_vs_value/code/func.go:83)	CVTSQ2SD	CX, X1
	0x02fd 00765 (pointer_vs_value/code/func.go:83)	PCDATA	$0, $0
	0x02fd 00765 (pointer_vs_value/code/func.go:83)	DIVSD	208(BX), X1
	0x0305 00773 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVSD	X1, ""..autotmp_19+872(SP)
	0x030e 00782 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVSD	X1, "".~r1+832(SP)
	0x0317 00791 (pointer_vs_value/code/benchmark_invocation_test.go:132)	PCDATA	$1, $7
	0x0317 00791 (pointer_vs_value/code/benchmark_invocation_test.go:132)	XORPS	X1, X1
	0x031a 00794 (pointer_vs_value/code/benchmark_invocation_test.go:132)	MOVUPS	X1, "".~r2+920(SP)
	0x0322 00802 (pointer_vs_value/code/benchmark_invocation_test.go:132)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x0329 00809 (pointer_vs_value/code/benchmark_invocation_test.go:132)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x0330 00816 (pointer_vs_value/code/benchmark_invocation_test.go:132)	JMP	436
	0x0335 00821 (<unknown line number>)	PCDATA	$0, $-2
	0x0335 00821 (<unknown line number>)	PCDATA	$1, $-2
	0x0335 00821 (<unknown line number>)	MOVQ	1920(SP), BP
	0x033d 00829 (<unknown line number>)	ADDQ	$1928, SP
	0x0344 00836 (<unknown line number>)	RET
	0x0345 00837 (<unknown line number>)	NOP
	0x0345 00837 (pointer_vs_value/code/benchmark_invocation_test.go:127)	PCDATA	$1, $-1
	0x0345 00837 (pointer_vs_value/code/benchmark_invocation_test.go:127)	PCDATA	$0, $-1
	0x0345 00837 (pointer_vs_value/code/benchmark_invocation_test.go:127)	CALL	runtime.morestack_noctxt(SB)
	0x034a 00842 (pointer_vs_value/code/benchmark_invocation_test.go:127)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 f8 f8 ff  eH..%....H..$...
	0x0010 ff 48 3b 41 10 0f 86 2a 03 00 00 48 81 ec 88 07  .H;A...*...H....
	0x0020 00 00 48 89 ac 24 80 07 00 00 48 8d ac 24 80 07  ..H..$....H..$..
	0x0030 00 00 e8 00 00 00 00 48 8d bc 24 40 04 00 00 48  .......H..$@...H
	0x0040 89 e6 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00  ..H.l$.H.l$.....
	0x0050 00 48 8b 6d 00 48 c7 84 24 48 03 00 00 00 00 00  .H.m.H..$H......
	0x0060 00 eb 00 48 8b 84 24 90 07 00 00 84 00 48 8b 80  ...H..$......H..
	0x0070 08 01 00 00 48 39 84 24 48 03 00 00 7c 05 e9 b2  ....H9.$H...|...
	0x0080 02 00 00 48 8d 84 24 40 04 00 00 48 89 84 24 88  ...H..$@...H..$.
	0x0090 03 00 00 48 89 84 24 70 03 00 00 0f 57 c0 f2 0f  ...H..$p....W...
	0x00a0 11 84 24 40 03 00 00 0f 57 c9 0f 11 8c 24 98 03  ..$@....W....$..
	0x00b0 00 00 48 8b 84 24 70 03 00 00 84 00 f2 0f 10 88  ..H..$p.........
	0x00c0 d0 00 00 00 66 0f 2e c8 0f 85 10 02 00 00 7b 05  ....f.........{.
	0x00d0 e9 09 02 00 00 48 8d 05 00 00 00 00 48 89 84 24  .....H......H..$
	0x00e0 b8 03 00 00 48 c7 84 24 c0 03 00 00 16 00 00 00  ....H..$........
	0x00f0 0f 57 c9 0f 11 8c 24 a8 03 00 00 0f 57 c9 0f 11  .W....$.....W...
	0x0100 8c 24 08 04 00 00 48 8d 8c 24 08 04 00 00 48 89  .$....H..$....H.
	0x0110 8c 24 80 03 00 00 84 01 48 8b 94 24 c0 03 00 00  .$......H..$....
	0x0120 48 8b 9c 24 b8 03 00 00 48 89 94 24 10 04 00 00  H..$....H..$....
	0x0130 48 89 9c 24 08 04 00 00 48 89 8c 24 90 03 00 00  H..$....H..$....
	0x0140 48 8d 15 00 00 00 00 48 89 94 24 f8 03 00 00 48  H......H..$....H
	0x0150 89 8c 24 00 04 00 00 48 89 94 24 a8 03 00 00 48  ..$....H..$....H
	0x0160 89 8c 24 b0 03 00 00 eb 00 48 8b 8c 24 b0 03 00  ..$......H..$...
	0x0170 00 48 8b 9c 24 a8 03 00 00 48 89 9c 24 e8 03 00  .H..$....H..$...
	0x0180 00 48 89 8c 24 f0 03 00 00 f2 0f 11 84 24 40 03  .H..$........$@.
	0x0190 00 00 48 8b 8c 24 f0 03 00 00 48 8b 9c 24 e8 03  ..H..$....H..$..
	0x01a0 00 00 48 89 9c 24 98 03 00 00 48 89 8c 24 a0 03  ..H..$....H..$..
	0x01b0 00 00 eb 00 f2 0f 10 8c 24 40 03 00 00 f2 0f 11  ........$@......
	0x01c0 8c 24 60 03 00 00 f2 0f 11 8c 24 58 03 00 00 48  .$`.......$X...H
	0x01d0 8b 8c 24 a0 03 00 00 48 8b 9c 24 98 03 00 00 48  ..$....H..$....H
	0x01e0 89 9c 24 d8 03 00 00 48 89 8c 24 e0 03 00 00 f2  ..$....H..$.....
	0x01f0 0f 10 8c 24 58 03 00 00 f2 0f 11 8c 24 50 03 00  ...$X.......$P..
	0x0200 00 48 8b 8c 24 d8 03 00 00 48 8b 9c 24 e0 03 00  .H..$....H..$...
	0x0210 00 48 89 8c 24 c8 03 00 00 48 89 9c 24 d0 03 00  .H..$....H..$...
	0x0220 00 48 85 c9 75 05 e9 b1 00 00 00 0f 57 c9 0f 11  .H..u.......W...
	0x0230 8c 24 18 04 00 00 48 8d 8c 24 18 04 00 00 48 89  .$....H..$....H.
	0x0240 8c 24 78 03 00 00 84 01 48 8d 1d 00 00 00 00 48  .$x.....H......H
	0x0250 89 9c 24 18 04 00 00 48 8d 35 00 00 00 00 48 89  ..$....H.5....H.
	0x0260 b4 24 20 04 00 00 84 01 eb 00 48 89 8c 24 28 04  .$ .......H..$(.
	0x0270 00 00 48 c7 84 24 30 04 00 00 01 00 00 00 48 c7  ..H..$0.......H.
	0x0280 84 24 38 04 00 00 01 00 00 00 48 89 0c 24 48 c7  .$8.......H..$H.
	0x0290 44 24 08 01 00 00 00 48 c7 44 24 10 01 00 00 00  D$.....H.D$.....
	0x02a0 e8 00 00 00 00 eb 00 f2 0f 10 05 00 00 00 00 f2  ................
	0x02b0 0f 58 84 24 50 03 00 00 f2 0f 11 05 00 00 00 00  .X.$P...........
	0x02c0 eb 00 eb 00 48 8b 84 24 48 03 00 00 48 ff c0 48  ....H..$H...H..H
	0x02d0 89 84 24 48 03 00 00 e9 87 fd ff ff eb c9 48 8b  ..$H..........H.
	0x02e0 8c 24 70 03 00 00 84 01 48 8b 9c 24 70 03 00 00  .$p.....H..$p...
	0x02f0 84 03 48 8b 09 0f 57 c9 f2 48 0f 2a c9 f2 0f 5e  ..H...W..H.*...^
	0x0300 8b d0 00 00 00 f2 0f 11 8c 24 68 03 00 00 f2 0f  .........$h.....
	0x0310 11 8c 24 40 03 00 00 0f 57 c9 0f 11 8c 24 98 03  ..$@....W....$..
	0x0320 00 00 48 8d 05 00 00 00 00 48 8d 15 00 00 00 00  ..H......H......
	0x0330 e9 7f fe ff ff 48 8b ac 24 80 07 00 00 48 81 c4  .....H..$....H..
	0x0340 88 07 00 00 c3 e8 00 00 00 00 e9 b1 fc ff ff     ...............
	rel 5+4 t=16 TLS+0
	rel 51+4 t=8 "".createTera+0
	rel 77+4 t=8 runtime.duffcopy+168
	rel 216+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 323+4 t=15 go.itab.*errors.errorString,error+0
	rel 587+4 t=15 type.string+0
	rel 602+4 t=15 ""..stmp_16+0
	rel 673+4 t=8 log.Fatal+0
	rel 683+4 t=15 "".F+0
	rel 700+4 t=15 "".F+0
	rel 805+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 812+4 t=15 go.itab.*errors.errorString,error+0
	rel 838+4 t=8 runtime.morestack_noctxt+0
type..hash."".tera STEXT dupok size=3084 args=0x18 locals=0x1d0
	0x0000 00000 (<autogenerated>:1)	TEXT	type..hash."".tera(SB), DUPOK|ABIInternal, $464-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	LEAQ	-336(SP), AX
	0x0011 00017 (<autogenerated>:1)	CMPQ	AX, 16(CX)
	0x0015 00021 (<autogenerated>:1)	JLS	3074
	0x001b 00027 (<autogenerated>:1)	SUBQ	$464, SP
	0x0022 00034 (<autogenerated>:1)	MOVQ	BP, 456(SP)
	0x002a 00042 (<autogenerated>:1)	LEAQ	456(SP), BP
	0x0032 00050 (<autogenerated>:1)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0032 00050 (<autogenerated>:1)	FUNCDATA	$1, gclocals·2a9f84d4931ab967ba97a36d7dc9d0b9(SB)
	0x0032 00050 (<autogenerated>:1)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0032 00050 (<autogenerated>:1)	PCDATA	$0, $0
	0x0032 00050 (<autogenerated>:1)	PCDATA	$1, $0
	0x0032 00050 (<autogenerated>:1)	MOVQ	$0, "".~r2+488(SP)
	0x003e 00062 (<autogenerated>:1)	PCDATA	$0, $1
	0x003e 00062 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0046 00070 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_3+288(SP)
	0x004e 00078 (<autogenerated>:1)	PCDATA	$0, $0
	0x004e 00078 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0052 00082 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x005a 00090 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x005f 00095 (<autogenerated>:1)	MOVQ	$208, 16(SP)
	0x0068 00104 (<autogenerated>:1)	CALL	runtime.memhash(SB)
	0x006d 00109 (<autogenerated>:1)	MOVQ	24(SP), AX
	0x0072 00114 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x007a 00122 (<autogenerated>:1)	PCDATA	$0, $1
	0x007a 00122 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0082 00130 (<autogenerated>:1)	ADDQ	$208, AX
	0x0088 00136 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_4+200(SP)
	0x0090 00144 (<autogenerated>:1)	PCDATA	$0, $0
	0x0090 00144 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0094 00148 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x009c 00156 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x00a1 00161 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x00a6 00166 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x00ab 00171 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x00b3 00179 (<autogenerated>:1)	PCDATA	$0, $1
	0x00b3 00179 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x00bb 00187 (<autogenerated>:1)	ADDQ	$216, AX
	0x00c1 00193 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_5+112(SP)
	0x00c6 00198 (<autogenerated>:1)	PCDATA	$0, $0
	0x00c6 00198 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x00ca 00202 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x00d2 00210 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x00d7 00215 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x00dc 00220 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x00e1 00225 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x00e9 00233 (<autogenerated>:1)	PCDATA	$0, $1
	0x00e9 00233 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x00f1 00241 (<autogenerated>:1)	ADDQ	$224, AX
	0x00f7 00247 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_6+56(SP)
	0x00fc 00252 (<autogenerated>:1)	PCDATA	$0, $0
	0x00fc 00252 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0100 00256 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0108 00264 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x010d 00269 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x0112 00274 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0117 00279 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x011f 00287 (<autogenerated>:1)	PCDATA	$0, $1
	0x011f 00287 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0127 00295 (<autogenerated>:1)	ADDQ	$232, AX
	0x012d 00301 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_7+48(SP)
	0x0132 00306 (<autogenerated>:1)	PCDATA	$0, $0
	0x0132 00306 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0136 00310 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x013e 00318 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0143 00323 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x0148 00328 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x014d 00333 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x0155 00341 (<autogenerated>:1)	PCDATA	$0, $1
	0x0155 00341 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x015d 00349 (<autogenerated>:1)	ADDQ	$240, AX
	0x0163 00355 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_8+40(SP)
	0x0168 00360 (<autogenerated>:1)	PCDATA	$0, $0
	0x0168 00360 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x016c 00364 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0174 00372 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0179 00377 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x017e 00382 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0183 00387 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x018b 00395 (<autogenerated>:1)	PCDATA	$0, $1
	0x018b 00395 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0193 00403 (<autogenerated>:1)	ADDQ	$248, AX
	0x0199 00409 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_9+32(SP)
	0x019e 00414 (<autogenerated>:1)	PCDATA	$0, $0
	0x019e 00414 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x01a2 00418 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x01aa 00426 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x01af 00431 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x01b4 00436 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x01b9 00441 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x01c1 00449 (<autogenerated>:1)	PCDATA	$0, $1
	0x01c1 00449 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x01c9 00457 (<autogenerated>:1)	ADDQ	$256, AX
	0x01cf 00463 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_10+448(SP)
	0x01d7 00471 (<autogenerated>:1)	PCDATA	$0, $0
	0x01d7 00471 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x01db 00475 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x01e3 00483 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x01e8 00488 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x01ed 00493 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x01f2 00498 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x01fa 00506 (<autogenerated>:1)	PCDATA	$0, $1
	0x01fa 00506 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0202 00514 (<autogenerated>:1)	ADDQ	$264, AX
	0x0208 00520 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_11+440(SP)
	0x0210 00528 (<autogenerated>:1)	PCDATA	$0, $0
	0x0210 00528 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0214 00532 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x021c 00540 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0221 00545 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x0226 00550 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x022b 00555 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x0233 00563 (<autogenerated>:1)	PCDATA	$0, $1
	0x0233 00563 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x023b 00571 (<autogenerated>:1)	ADDQ	$272, AX
	0x0241 00577 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_12+432(SP)
	0x0249 00585 (<autogenerated>:1)	PCDATA	$0, $0
	0x0249 00585 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x024d 00589 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0255 00597 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x025a 00602 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x025f 00607 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0264 00612 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x026c 00620 (<autogenerated>:1)	PCDATA	$0, $1
	0x026c 00620 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0274 00628 (<autogenerated>:1)	ADDQ	$280, AX
	0x027a 00634 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_13+424(SP)
	0x0282 00642 (<autogenerated>:1)	PCDATA	$0, $0
	0x0282 00642 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0286 00646 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x028e 00654 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0293 00659 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x0298 00664 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x029d 00669 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x02a5 00677 (<autogenerated>:1)	PCDATA	$0, $1
	0x02a5 00677 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x02ad 00685 (<autogenerated>:1)	ADDQ	$288, AX
	0x02b3 00691 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_14+416(SP)
	0x02bb 00699 (<autogenerated>:1)	PCDATA	$0, $0
	0x02bb 00699 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x02bf 00703 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x02c7 00711 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x02cc 00716 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x02d1 00721 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x02d6 00726 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x02de 00734 (<autogenerated>:1)	PCDATA	$0, $1
	0x02de 00734 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x02e6 00742 (<autogenerated>:1)	ADDQ	$296, AX
	0x02ec 00748 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_15+408(SP)
	0x02f4 00756 (<autogenerated>:1)	PCDATA	$0, $0
	0x02f4 00756 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x02f8 00760 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0300 00768 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0305 00773 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x030a 00778 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x030f 00783 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x0317 00791 (<autogenerated>:1)	PCDATA	$0, $1
	0x0317 00791 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x031f 00799 (<autogenerated>:1)	ADDQ	$304, AX
	0x0325 00805 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_16+400(SP)
	0x032d 00813 (<autogenerated>:1)	PCDATA	$0, $0
	0x032d 00813 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0331 00817 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0339 00825 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x033e 00830 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x0343 00835 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0348 00840 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x0350 00848 (<autogenerated>:1)	PCDATA	$0, $1
	0x0350 00848 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0358 00856 (<autogenerated>:1)	ADDQ	$312, AX
	0x035e 00862 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_17+392(SP)
	0x0366 00870 (<autogenerated>:1)	PCDATA	$0, $0
	0x0366 00870 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x036a 00874 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0372 00882 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0377 00887 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x037c 00892 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0381 00897 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x0389 00905 (<autogenerated>:1)	PCDATA	$0, $1
	0x0389 00905 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0391 00913 (<autogenerated>:1)	ADDQ	$320, AX
	0x0397 00919 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_18+384(SP)
	0x039f 00927 (<autogenerated>:1)	PCDATA	$0, $0
	0x039f 00927 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x03a3 00931 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x03ab 00939 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x03b0 00944 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x03b5 00949 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x03ba 00954 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x03c2 00962 (<autogenerated>:1)	PCDATA	$0, $1
	0x03c2 00962 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x03ca 00970 (<autogenerated>:1)	ADDQ	$328, AX
	0x03d0 00976 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_19+376(SP)
	0x03d8 00984 (<autogenerated>:1)	PCDATA	$0, $0
	0x03d8 00984 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x03dc 00988 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x03e4 00996 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x03e9 01001 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x03ee 01006 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x03f3 01011 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x03fb 01019 (<autogenerated>:1)	PCDATA	$0, $1
	0x03fb 01019 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0403 01027 (<autogenerated>:1)	ADDQ	$336, AX
	0x0409 01033 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_20+368(SP)
	0x0411 01041 (<autogenerated>:1)	PCDATA	$0, $0
	0x0411 01041 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0415 01045 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x041d 01053 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0422 01058 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x0427 01063 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x042c 01068 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x0434 01076 (<autogenerated>:1)	PCDATA	$0, $1
	0x0434 01076 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x043c 01084 (<autogenerated>:1)	ADDQ	$344, AX
	0x0442 01090 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_21+360(SP)
	0x044a 01098 (<autogenerated>:1)	PCDATA	$0, $0
	0x044a 01098 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x044e 01102 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0456 01110 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x045b 01115 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x0460 01120 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0465 01125 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x046d 01133 (<autogenerated>:1)	PCDATA	$0, $1
	0x046d 01133 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0475 01141 (<autogenerated>:1)	ADDQ	$352, AX
	0x047b 01147 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_22+352(SP)
	0x0483 01155 (<autogenerated>:1)	PCDATA	$0, $0
	0x0483 01155 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0487 01159 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x048f 01167 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0494 01172 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x0499 01177 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x049e 01182 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x04a6 01190 (<autogenerated>:1)	PCDATA	$0, $1
	0x04a6 01190 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x04ae 01198 (<autogenerated>:1)	ADDQ	$360, AX
	0x04b4 01204 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_23+344(SP)
	0x04bc 01212 (<autogenerated>:1)	PCDATA	$0, $0
	0x04bc 01212 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x04c0 01216 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x04c8 01224 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x04cd 01229 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x04d2 01234 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x04d7 01239 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x04df 01247 (<autogenerated>:1)	PCDATA	$0, $1
	0x04df 01247 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x04e7 01255 (<autogenerated>:1)	ADDQ	$368, AX
	0x04ed 01261 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_24+336(SP)
	0x04f5 01269 (<autogenerated>:1)	PCDATA	$0, $0
	0x04f5 01269 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x04f9 01273 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0501 01281 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0506 01286 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x050b 01291 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0510 01296 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x0518 01304 (<autogenerated>:1)	PCDATA	$0, $1
	0x0518 01304 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0520 01312 (<autogenerated>:1)	ADDQ	$376, AX
	0x0526 01318 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_25+328(SP)
	0x052e 01326 (<autogenerated>:1)	PCDATA	$0, $0
	0x052e 01326 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0532 01330 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x053a 01338 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x053f 01343 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x0544 01348 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0549 01353 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x0551 01361 (<autogenerated>:1)	PCDATA	$0, $1
	0x0551 01361 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0559 01369 (<autogenerated>:1)	ADDQ	$384, AX
	0x055f 01375 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_26+320(SP)
	0x0567 01383 (<autogenerated>:1)	PCDATA	$0, $0
	0x0567 01383 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x056b 01387 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0573 01395 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0578 01400 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x057d 01405 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0582 01410 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x058a 01418 (<autogenerated>:1)	PCDATA	$0, $1
	0x058a 01418 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0592 01426 (<autogenerated>:1)	ADDQ	$392, AX
	0x0598 01432 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_27+312(SP)
	0x05a0 01440 (<autogenerated>:1)	PCDATA	$0, $0
	0x05a0 01440 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x05a4 01444 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x05ac 01452 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x05b1 01457 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x05b6 01462 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x05bb 01467 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x05c3 01475 (<autogenerated>:1)	PCDATA	$0, $1
	0x05c3 01475 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x05cb 01483 (<autogenerated>:1)	ADDQ	$400, AX
	0x05d1 01489 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_28+304(SP)
	0x05d9 01497 (<autogenerated>:1)	PCDATA	$0, $0
	0x05d9 01497 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x05dd 01501 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x05e5 01509 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x05ea 01514 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x05ef 01519 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x05f4 01524 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x05fc 01532 (<autogenerated>:1)	PCDATA	$0, $1
	0x05fc 01532 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0604 01540 (<autogenerated>:1)	ADDQ	$408, AX
	0x060a 01546 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_29+296(SP)
	0x0612 01554 (<autogenerated>:1)	PCDATA	$0, $0
	0x0612 01554 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0616 01558 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x061e 01566 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0623 01571 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x0628 01576 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x062d 01581 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x0635 01589 (<autogenerated>:1)	PCDATA	$0, $1
	0x0635 01589 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x063d 01597 (<autogenerated>:1)	ADDQ	$416, AX
	0x0643 01603 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_30+280(SP)
	0x064b 01611 (<autogenerated>:1)	PCDATA	$0, $0
	0x064b 01611 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x064f 01615 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0657 01623 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x065c 01628 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x0661 01633 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0666 01638 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x066e 01646 (<autogenerated>:1)	PCDATA	$0, $1
	0x066e 01646 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0676 01654 (<autogenerated>:1)	ADDQ	$432, AX
	0x067c 01660 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_31+272(SP)
	0x0684 01668 (<autogenerated>:1)	PCDATA	$0, $0
	0x0684 01668 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0688 01672 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0690 01680 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0695 01685 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x069a 01690 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x069f 01695 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x06a7 01703 (<autogenerated>:1)	PCDATA	$0, $1
	0x06a7 01703 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x06af 01711 (<autogenerated>:1)	ADDQ	$448, AX
	0x06b5 01717 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_32+264(SP)
	0x06bd 01725 (<autogenerated>:1)	PCDATA	$0, $0
	0x06bd 01725 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x06c1 01729 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x06c9 01737 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x06ce 01742 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x06d3 01747 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x06d8 01752 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x06e0 01760 (<autogenerated>:1)	PCDATA	$0, $1
	0x06e0 01760 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x06e8 01768 (<autogenerated>:1)	ADDQ	$464, AX
	0x06ee 01774 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_33+256(SP)
	0x06f6 01782 (<autogenerated>:1)	PCDATA	$0, $0
	0x06f6 01782 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x06fa 01786 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0702 01794 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0707 01799 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x070c 01804 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0711 01809 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x0719 01817 (<autogenerated>:1)	PCDATA	$0, $1
	0x0719 01817 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0721 01825 (<autogenerated>:1)	ADDQ	$480, AX
	0x0727 01831 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_34+248(SP)
	0x072f 01839 (<autogenerated>:1)	PCDATA	$0, $0
	0x072f 01839 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0733 01843 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x073b 01851 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0740 01856 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x0745 01861 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x074a 01866 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x0752 01874 (<autogenerated>:1)	PCDATA	$0, $1
	0x0752 01874 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x075a 01882 (<autogenerated>:1)	ADDQ	$496, AX
	0x0760 01888 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_35+240(SP)
	0x0768 01896 (<autogenerated>:1)	PCDATA	$0, $0
	0x0768 01896 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x076c 01900 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0774 01908 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0779 01913 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x077e 01918 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0783 01923 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x078b 01931 (<autogenerated>:1)	PCDATA	$0, $1
	0x078b 01931 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0793 01939 (<autogenerated>:1)	ADDQ	$512, AX
	0x0799 01945 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_36+232(SP)
	0x07a1 01953 (<autogenerated>:1)	PCDATA	$0, $0
	0x07a1 01953 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x07a5 01957 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x07ad 01965 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x07b2 01970 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x07b7 01975 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x07bc 01980 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x07c4 01988 (<autogenerated>:1)	PCDATA	$0, $1
	0x07c4 01988 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x07cc 01996 (<autogenerated>:1)	ADDQ	$528, AX
	0x07d2 02002 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_37+224(SP)
	0x07da 02010 (<autogenerated>:1)	PCDATA	$0, $0
	0x07da 02010 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x07de 02014 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x07e6 02022 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x07eb 02027 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x07f0 02032 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x07f5 02037 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x07fd 02045 (<autogenerated>:1)	PCDATA	$0, $1
	0x07fd 02045 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0805 02053 (<autogenerated>:1)	ADDQ	$544, AX
	0x080b 02059 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_38+216(SP)
	0x0813 02067 (<autogenerated>:1)	PCDATA	$0, $0
	0x0813 02067 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0817 02071 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x081f 02079 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0824 02084 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x0829 02089 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x082e 02094 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x0836 02102 (<autogenerated>:1)	PCDATA	$0, $1
	0x0836 02102 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x083e 02110 (<autogenerated>:1)	ADDQ	$560, AX
	0x0844 02116 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_39+208(SP)
	0x084c 02124 (<autogenerated>:1)	PCDATA	$0, $0
	0x084c 02124 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0850 02128 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0858 02136 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x085d 02141 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x0862 02146 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0867 02151 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x086f 02159 (<autogenerated>:1)	PCDATA	$0, $1
	0x086f 02159 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0877 02167 (<autogenerated>:1)	ADDQ	$576, AX
	0x087d 02173 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_40+192(SP)
	0x0885 02181 (<autogenerated>:1)	PCDATA	$0, $0
	0x0885 02181 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0889 02185 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0891 02193 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0896 02198 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x089b 02203 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x08a0 02208 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x08a8 02216 (<autogenerated>:1)	PCDATA	$0, $1
	0x08a8 02216 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x08b0 02224 (<autogenerated>:1)	ADDQ	$592, AX
	0x08b6 02230 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_41+184(SP)
	0x08be 02238 (<autogenerated>:1)	PCDATA	$0, $0
	0x08be 02238 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x08c2 02242 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x08ca 02250 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x08cf 02255 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x08d4 02260 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x08d9 02265 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x08e1 02273 (<autogenerated>:1)	PCDATA	$0, $1
	0x08e1 02273 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x08e9 02281 (<autogenerated>:1)	ADDQ	$608, AX
	0x08ef 02287 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_42+176(SP)
	0x08f7 02295 (<autogenerated>:1)	PCDATA	$0, $0
	0x08f7 02295 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x08fb 02299 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0903 02307 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0908 02312 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x090d 02317 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0912 02322 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x091a 02330 (<autogenerated>:1)	PCDATA	$0, $1
	0x091a 02330 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0922 02338 (<autogenerated>:1)	ADDQ	$624, AX
	0x0928 02344 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_43+168(SP)
	0x0930 02352 (<autogenerated>:1)	PCDATA	$0, $0
	0x0930 02352 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0934 02356 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x093c 02364 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0941 02369 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x0946 02374 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x094b 02379 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x0953 02387 (<autogenerated>:1)	PCDATA	$0, $1
	0x0953 02387 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x095b 02395 (<autogenerated>:1)	ADDQ	$640, AX
	0x0961 02401 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_44+160(SP)
	0x0969 02409 (<autogenerated>:1)	PCDATA	$0, $0
	0x0969 02409 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x096d 02413 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0975 02421 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x097a 02426 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x097f 02431 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0984 02436 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x098c 02444 (<autogenerated>:1)	PCDATA	$0, $1
	0x098c 02444 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0994 02452 (<autogenerated>:1)	ADDQ	$656, AX
	0x099a 02458 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_45+152(SP)
	0x09a2 02466 (<autogenerated>:1)	PCDATA	$0, $0
	0x09a2 02466 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x09a6 02470 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x09ae 02478 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x09b3 02483 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x09b8 02488 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x09bd 02493 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x09c5 02501 (<autogenerated>:1)	PCDATA	$0, $1
	0x09c5 02501 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x09cd 02509 (<autogenerated>:1)	ADDQ	$672, AX
	0x09d3 02515 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_46+144(SP)
	0x09db 02523 (<autogenerated>:1)	PCDATA	$0, $0
	0x09db 02523 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x09df 02527 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x09e7 02535 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x09ec 02540 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x09f1 02545 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x09f6 02550 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x09fe 02558 (<autogenerated>:1)	PCDATA	$0, $1
	0x09fe 02558 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0a06 02566 (<autogenerated>:1)	ADDQ	$688, AX
	0x0a0c 02572 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_47+136(SP)
	0x0a14 02580 (<autogenerated>:1)	PCDATA	$0, $0
	0x0a14 02580 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0a18 02584 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0a20 02592 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0a25 02597 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x0a2a 02602 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0a2f 02607 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x0a37 02615 (<autogenerated>:1)	PCDATA	$0, $1
	0x0a37 02615 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0a3f 02623 (<autogenerated>:1)	ADDQ	$704, AX
	0x0a45 02629 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_48+128(SP)
	0x0a4d 02637 (<autogenerated>:1)	PCDATA	$0, $0
	0x0a4d 02637 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0a51 02641 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0a59 02649 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0a5e 02654 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x0a63 02659 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0a68 02664 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x0a70 02672 (<autogenerated>:1)	PCDATA	$0, $1
	0x0a70 02672 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0a78 02680 (<autogenerated>:1)	ADDQ	$720, AX
	0x0a7e 02686 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_49+120(SP)
	0x0a83 02691 (<autogenerated>:1)	PCDATA	$0, $0
	0x0a83 02691 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0a87 02695 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0a8f 02703 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0a94 02708 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x0a99 02713 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0a9e 02718 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x0aa6 02726 (<autogenerated>:1)	PCDATA	$0, $1
	0x0aa6 02726 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0aae 02734 (<autogenerated>:1)	ADDQ	$736, AX
	0x0ab4 02740 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_50+104(SP)
	0x0ab9 02745 (<autogenerated>:1)	PCDATA	$0, $0
	0x0ab9 02745 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0abd 02749 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0ac5 02757 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0aca 02762 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x0acf 02767 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0ad4 02772 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x0adc 02780 (<autogenerated>:1)	PCDATA	$0, $1
	0x0adc 02780 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0ae4 02788 (<autogenerated>:1)	ADDQ	$752, AX
	0x0aea 02794 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_51+96(SP)
	0x0aef 02799 (<autogenerated>:1)	PCDATA	$0, $0
	0x0aef 02799 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0af3 02803 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0afb 02811 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0b00 02816 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x0b05 02821 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0b0a 02826 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x0b12 02834 (<autogenerated>:1)	PCDATA	$0, $1
	0x0b12 02834 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0b1a 02842 (<autogenerated>:1)	ADDQ	$768, AX
	0x0b20 02848 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_52+88(SP)
	0x0b25 02853 (<autogenerated>:1)	PCDATA	$0, $0
	0x0b25 02853 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0b29 02857 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0b31 02865 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0b36 02870 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x0b3b 02875 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0b40 02880 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x0b48 02888 (<autogenerated>:1)	PCDATA	$0, $1
	0x0b48 02888 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0b50 02896 (<autogenerated>:1)	ADDQ	$784, AX
	0x0b56 02902 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_53+80(SP)
	0x0b5b 02907 (<autogenerated>:1)	PCDATA	$0, $0
	0x0b5b 02907 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0b5f 02911 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0b67 02919 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0b6c 02924 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x0b71 02929 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0b76 02934 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x0b7e 02942 (<autogenerated>:1)	PCDATA	$0, $1
	0x0b7e 02942 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0b86 02950 (<autogenerated>:1)	ADDQ	$800, AX
	0x0b8c 02956 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_54+72(SP)
	0x0b91 02961 (<autogenerated>:1)	PCDATA	$0, $0
	0x0b91 02961 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0b95 02965 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0b9d 02973 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0ba2 02978 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x0ba7 02983 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0bac 02988 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x0bb4 02996 (<autogenerated>:1)	PCDATA	$0, $1
	0x0bb4 02996 (<autogenerated>:1)	PCDATA	$1, $1
	0x0bb4 02996 (<autogenerated>:1)	MOVQ	"".p+472(SP), AX
	0x0bbc 03004 (<autogenerated>:1)	ADDQ	$816, AX
	0x0bc2 03010 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_55+64(SP)
	0x0bc7 03015 (<autogenerated>:1)	PCDATA	$0, $0
	0x0bc7 03015 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0bcb 03019 (<autogenerated>:1)	MOVQ	"".h+480(SP), AX
	0x0bd3 03027 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0bd8 03032 (<autogenerated>:1)	CALL	runtime.strhash(SB)
	0x0bdd 03037 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0be2 03042 (<autogenerated>:1)	MOVQ	AX, "".h+480(SP)
	0x0bea 03050 (<autogenerated>:1)	MOVQ	AX, "".~r2+488(SP)
	0x0bf2 03058 (<autogenerated>:1)	MOVQ	456(SP), BP
	0x0bfa 03066 (<autogenerated>:1)	ADDQ	$464, SP
	0x0c01 03073 (<autogenerated>:1)	RET
	0x0c02 03074 (<autogenerated>:1)	NOP
	0x0c02 03074 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0c02 03074 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0c02 03074 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0c07 03079 (<autogenerated>:1)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 b0 fe ff  eH..%....H..$...
	0x0010 ff 48 3b 41 10 0f 86 e7 0b 00 00 48 81 ec d0 01  .H;A.......H....
	0x0020 00 00 48 89 ac 24 c8 01 00 00 48 8d ac 24 c8 01  ..H..$....H..$..
	0x0030 00 00 48 c7 84 24 e8 01 00 00 00 00 00 00 48 8b  ..H..$........H.
	0x0040 84 24 d8 01 00 00 48 89 84 24 20 01 00 00 48 89  .$....H..$ ...H.
	0x0050 04 24 48 8b 84 24 e0 01 00 00 48 89 44 24 08 48  .$H..$....H.D$.H
	0x0060 c7 44 24 10 d0 00 00 00 e8 00 00 00 00 48 8b 44  .D$..........H.D
	0x0070 24 18 48 89 84 24 e0 01 00 00 48 8b 84 24 d8 01  $.H..$....H..$..
	0x0080 00 00 48 05 d0 00 00 00 48 89 84 24 c8 00 00 00  ..H.....H..$....
	0x0090 48 89 04 24 48 8b 84 24 e0 01 00 00 48 89 44 24  H..$H..$....H.D$
	0x00a0 08 e8 00 00 00 00 48 8b 44 24 10 48 89 84 24 e0  ......H.D$.H..$.
	0x00b0 01 00 00 48 8b 84 24 d8 01 00 00 48 05 d8 00 00  ...H..$....H....
	0x00c0 00 48 89 44 24 70 48 89 04 24 48 8b 84 24 e0 01  .H.D$pH..$H..$..
	0x00d0 00 00 48 89 44 24 08 e8 00 00 00 00 48 8b 44 24  ..H.D$......H.D$
	0x00e0 10 48 89 84 24 e0 01 00 00 48 8b 84 24 d8 01 00  .H..$....H..$...
	0x00f0 00 48 05 e0 00 00 00 48 89 44 24 38 48 89 04 24  .H.....H.D$8H..$
	0x0100 48 8b 84 24 e0 01 00 00 48 89 44 24 08 e8 00 00  H..$....H.D$....
	0x0110 00 00 48 8b 44 24 10 48 89 84 24 e0 01 00 00 48  ..H.D$.H..$....H
	0x0120 8b 84 24 d8 01 00 00 48 05 e8 00 00 00 48 89 44  ..$....H.....H.D
	0x0130 24 30 48 89 04 24 48 8b 84 24 e0 01 00 00 48 89  $0H..$H..$....H.
	0x0140 44 24 08 e8 00 00 00 00 48 8b 44 24 10 48 89 84  D$......H.D$.H..
	0x0150 24 e0 01 00 00 48 8b 84 24 d8 01 00 00 48 05 f0  $....H..$....H..
	0x0160 00 00 00 48 89 44 24 28 48 89 04 24 48 8b 84 24  ...H.D$(H..$H..$
	0x0170 e0 01 00 00 48 89 44 24 08 e8 00 00 00 00 48 8b  ....H.D$......H.
	0x0180 44 24 10 48 89 84 24 e0 01 00 00 48 8b 84 24 d8  D$.H..$....H..$.
	0x0190 01 00 00 48 05 f8 00 00 00 48 89 44 24 20 48 89  ...H.....H.D$ H.
	0x01a0 04 24 48 8b 84 24 e0 01 00 00 48 89 44 24 08 e8  .$H..$....H.D$..
	0x01b0 00 00 00 00 48 8b 44 24 10 48 89 84 24 e0 01 00  ....H.D$.H..$...
	0x01c0 00 48 8b 84 24 d8 01 00 00 48 05 00 01 00 00 48  .H..$....H.....H
	0x01d0 89 84 24 c0 01 00 00 48 89 04 24 48 8b 84 24 e0  ..$....H..$H..$.
	0x01e0 01 00 00 48 89 44 24 08 e8 00 00 00 00 48 8b 44  ...H.D$......H.D
	0x01f0 24 10 48 89 84 24 e0 01 00 00 48 8b 84 24 d8 01  $.H..$....H..$..
	0x0200 00 00 48 05 08 01 00 00 48 89 84 24 b8 01 00 00  ..H.....H..$....
	0x0210 48 89 04 24 48 8b 84 24 e0 01 00 00 48 89 44 24  H..$H..$....H.D$
	0x0220 08 e8 00 00 00 00 48 8b 44 24 10 48 89 84 24 e0  ......H.D$.H..$.
	0x0230 01 00 00 48 8b 84 24 d8 01 00 00 48 05 10 01 00  ...H..$....H....
	0x0240 00 48 89 84 24 b0 01 00 00 48 89 04 24 48 8b 84  .H..$....H..$H..
	0x0250 24 e0 01 00 00 48 89 44 24 08 e8 00 00 00 00 48  $....H.D$......H
	0x0260 8b 44 24 10 48 89 84 24 e0 01 00 00 48 8b 84 24  .D$.H..$....H..$
	0x0270 d8 01 00 00 48 05 18 01 00 00 48 89 84 24 a8 01  ....H.....H..$..
	0x0280 00 00 48 89 04 24 48 8b 84 24 e0 01 00 00 48 89  ..H..$H..$....H.
	0x0290 44 24 08 e8 00 00 00 00 48 8b 44 24 10 48 89 84  D$......H.D$.H..
	0x02a0 24 e0 01 00 00 48 8b 84 24 d8 01 00 00 48 05 20  $....H..$....H. 
	0x02b0 01 00 00 48 89 84 24 a0 01 00 00 48 89 04 24 48  ...H..$....H..$H
	0x02c0 8b 84 24 e0 01 00 00 48 89 44 24 08 e8 00 00 00  ..$....H.D$.....
	0x02d0 00 48 8b 44 24 10 48 89 84 24 e0 01 00 00 48 8b  .H.D$.H..$....H.
	0x02e0 84 24 d8 01 00 00 48 05 28 01 00 00 48 89 84 24  .$....H.(...H..$
	0x02f0 98 01 00 00 48 89 04 24 48 8b 84 24 e0 01 00 00  ....H..$H..$....
	0x0300 48 89 44 24 08 e8 00 00 00 00 48 8b 44 24 10 48  H.D$......H.D$.H
	0x0310 89 84 24 e0 01 00 00 48 8b 84 24 d8 01 00 00 48  ..$....H..$....H
	0x0320 05 30 01 00 00 48 89 84 24 90 01 00 00 48 89 04  .0...H..$....H..
	0x0330 24 48 8b 84 24 e0 01 00 00 48 89 44 24 08 e8 00  $H..$....H.D$...
	0x0340 00 00 00 48 8b 44 24 10 48 89 84 24 e0 01 00 00  ...H.D$.H..$....
	0x0350 48 8b 84 24 d8 01 00 00 48 05 38 01 00 00 48 89  H..$....H.8...H.
	0x0360 84 24 88 01 00 00 48 89 04 24 48 8b 84 24 e0 01  .$....H..$H..$..
	0x0370 00 00 48 89 44 24 08 e8 00 00 00 00 48 8b 44 24  ..H.D$......H.D$
	0x0380 10 48 89 84 24 e0 01 00 00 48 8b 84 24 d8 01 00  .H..$....H..$...
	0x0390 00 48 05 40 01 00 00 48 89 84 24 80 01 00 00 48  .H.@...H..$....H
	0x03a0 89 04 24 48 8b 84 24 e0 01 00 00 48 89 44 24 08  ..$H..$....H.D$.
	0x03b0 e8 00 00 00 00 48 8b 44 24 10 48 89 84 24 e0 01  .....H.D$.H..$..
	0x03c0 00 00 48 8b 84 24 d8 01 00 00 48 05 48 01 00 00  ..H..$....H.H...
	0x03d0 48 89 84 24 78 01 00 00 48 89 04 24 48 8b 84 24  H..$x...H..$H..$
	0x03e0 e0 01 00 00 48 89 44 24 08 e8 00 00 00 00 48 8b  ....H.D$......H.
	0x03f0 44 24 10 48 89 84 24 e0 01 00 00 48 8b 84 24 d8  D$.H..$....H..$.
	0x0400 01 00 00 48 05 50 01 00 00 48 89 84 24 70 01 00  ...H.P...H..$p..
	0x0410 00 48 89 04 24 48 8b 84 24 e0 01 00 00 48 89 44  .H..$H..$....H.D
	0x0420 24 08 e8 00 00 00 00 48 8b 44 24 10 48 89 84 24  $......H.D$.H..$
	0x0430 e0 01 00 00 48 8b 84 24 d8 01 00 00 48 05 58 01  ....H..$....H.X.
	0x0440 00 00 48 89 84 24 68 01 00 00 48 89 04 24 48 8b  ..H..$h...H..$H.
	0x0450 84 24 e0 01 00 00 48 89 44 24 08 e8 00 00 00 00  .$....H.D$......
	0x0460 48 8b 44 24 10 48 89 84 24 e0 01 00 00 48 8b 84  H.D$.H..$....H..
	0x0470 24 d8 01 00 00 48 05 60 01 00 00 48 89 84 24 60  $....H.`...H..$`
	0x0480 01 00 00 48 89 04 24 48 8b 84 24 e0 01 00 00 48  ...H..$H..$....H
	0x0490 89 44 24 08 e8 00 00 00 00 48 8b 44 24 10 48 89  .D$......H.D$.H.
	0x04a0 84 24 e0 01 00 00 48 8b 84 24 d8 01 00 00 48 05  .$....H..$....H.
	0x04b0 68 01 00 00 48 89 84 24 58 01 00 00 48 89 04 24  h...H..$X...H..$
	0x04c0 48 8b 84 24 e0 01 00 00 48 89 44 24 08 e8 00 00  H..$....H.D$....
	0x04d0 00 00 48 8b 44 24 10 48 89 84 24 e0 01 00 00 48  ..H.D$.H..$....H
	0x04e0 8b 84 24 d8 01 00 00 48 05 70 01 00 00 48 89 84  ..$....H.p...H..
	0x04f0 24 50 01 00 00 48 89 04 24 48 8b 84 24 e0 01 00  $P...H..$H..$...
	0x0500 00 48 89 44 24 08 e8 00 00 00 00 48 8b 44 24 10  .H.D$......H.D$.
	0x0510 48 89 84 24 e0 01 00 00 48 8b 84 24 d8 01 00 00  H..$....H..$....
	0x0520 48 05 78 01 00 00 48 89 84 24 48 01 00 00 48 89  H.x...H..$H...H.
	0x0530 04 24 48 8b 84 24 e0 01 00 00 48 89 44 24 08 e8  .$H..$....H.D$..
	0x0540 00 00 00 00 48 8b 44 24 10 48 89 84 24 e0 01 00  ....H.D$.H..$...
	0x0550 00 48 8b 84 24 d8 01 00 00 48 05 80 01 00 00 48  .H..$....H.....H
	0x0560 89 84 24 40 01 00 00 48 89 04 24 48 8b 84 24 e0  ..$@...H..$H..$.
	0x0570 01 00 00 48 89 44 24 08 e8 00 00 00 00 48 8b 44  ...H.D$......H.D
	0x0580 24 10 48 89 84 24 e0 01 00 00 48 8b 84 24 d8 01  $.H..$....H..$..
	0x0590 00 00 48 05 88 01 00 00 48 89 84 24 38 01 00 00  ..H.....H..$8...
	0x05a0 48 89 04 24 48 8b 84 24 e0 01 00 00 48 89 44 24  H..$H..$....H.D$
	0x05b0 08 e8 00 00 00 00 48 8b 44 24 10 48 89 84 24 e0  ......H.D$.H..$.
	0x05c0 01 00 00 48 8b 84 24 d8 01 00 00 48 05 90 01 00  ...H..$....H....
	0x05d0 00 48 89 84 24 30 01 00 00 48 89 04 24 48 8b 84  .H..$0...H..$H..
	0x05e0 24 e0 01 00 00 48 89 44 24 08 e8 00 00 00 00 48  $....H.D$......H
	0x05f0 8b 44 24 10 48 89 84 24 e0 01 00 00 48 8b 84 24  .D$.H..$....H..$
	0x0600 d8 01 00 00 48 05 98 01 00 00 48 89 84 24 28 01  ....H.....H..$(.
	0x0610 00 00 48 89 04 24 48 8b 84 24 e0 01 00 00 48 89  ..H..$H..$....H.
	0x0620 44 24 08 e8 00 00 00 00 48 8b 44 24 10 48 89 84  D$......H.D$.H..
	0x0630 24 e0 01 00 00 48 8b 84 24 d8 01 00 00 48 05 a0  $....H..$....H..
	0x0640 01 00 00 48 89 84 24 18 01 00 00 48 89 04 24 48  ...H..$....H..$H
	0x0650 8b 84 24 e0 01 00 00 48 89 44 24 08 e8 00 00 00  ..$....H.D$.....
	0x0660 00 48 8b 44 24 10 48 89 84 24 e0 01 00 00 48 8b  .H.D$.H..$....H.
	0x0670 84 24 d8 01 00 00 48 05 b0 01 00 00 48 89 84 24  .$....H.....H..$
	0x0680 10 01 00 00 48 89 04 24 48 8b 84 24 e0 01 00 00  ....H..$H..$....
	0x0690 48 89 44 24 08 e8 00 00 00 00 48 8b 44 24 10 48  H.D$......H.D$.H
	0x06a0 89 84 24 e0 01 00 00 48 8b 84 24 d8 01 00 00 48  ..$....H..$....H
	0x06b0 05 c0 01 00 00 48 89 84 24 08 01 00 00 48 89 04  .....H..$....H..
	0x06c0 24 48 8b 84 24 e0 01 00 00 48 89 44 24 08 e8 00  $H..$....H.D$...
	0x06d0 00 00 00 48 8b 44 24 10 48 89 84 24 e0 01 00 00  ...H.D$.H..$....
	0x06e0 48 8b 84 24 d8 01 00 00 48 05 d0 01 00 00 48 89  H..$....H.....H.
	0x06f0 84 24 00 01 00 00 48 89 04 24 48 8b 84 24 e0 01  .$....H..$H..$..
	0x0700 00 00 48 89 44 24 08 e8 00 00 00 00 48 8b 44 24  ..H.D$......H.D$
	0x0710 10 48 89 84 24 e0 01 00 00 48 8b 84 24 d8 01 00  .H..$....H..$...
	0x0720 00 48 05 e0 01 00 00 48 89 84 24 f8 00 00 00 48  .H.....H..$....H
	0x0730 89 04 24 48 8b 84 24 e0 01 00 00 48 89 44 24 08  ..$H..$....H.D$.
	0x0740 e8 00 00 00 00 48 8b 44 24 10 48 89 84 24 e0 01  .....H.D$.H..$..
	0x0750 00 00 48 8b 84 24 d8 01 00 00 48 05 f0 01 00 00  ..H..$....H.....
	0x0760 48 89 84 24 f0 00 00 00 48 89 04 24 48 8b 84 24  H..$....H..$H..$
	0x0770 e0 01 00 00 48 89 44 24 08 e8 00 00 00 00 48 8b  ....H.D$......H.
	0x0780 44 24 10 48 89 84 24 e0 01 00 00 48 8b 84 24 d8  D$.H..$....H..$.
	0x0790 01 00 00 48 05 00 02 00 00 48 89 84 24 e8 00 00  ...H.....H..$...
	0x07a0 00 48 89 04 24 48 8b 84 24 e0 01 00 00 48 89 44  .H..$H..$....H.D
	0x07b0 24 08 e8 00 00 00 00 48 8b 44 24 10 48 89 84 24  $......H.D$.H..$
	0x07c0 e0 01 00 00 48 8b 84 24 d8 01 00 00 48 05 10 02  ....H..$....H...
	0x07d0 00 00 48 89 84 24 e0 00 00 00 48 89 04 24 48 8b  ..H..$....H..$H.
	0x07e0 84 24 e0 01 00 00 48 89 44 24 08 e8 00 00 00 00  .$....H.D$......
	0x07f0 48 8b 44 24 10 48 89 84 24 e0 01 00 00 48 8b 84  H.D$.H..$....H..
	0x0800 24 d8 01 00 00 48 05 20 02 00 00 48 89 84 24 d8  $....H. ...H..$.
	0x0810 00 00 00 48 89 04 24 48 8b 84 24 e0 01 00 00 48  ...H..$H..$....H
	0x0820 89 44 24 08 e8 00 00 00 00 48 8b 44 24 10 48 89  .D$......H.D$.H.
	0x0830 84 24 e0 01 00 00 48 8b 84 24 d8 01 00 00 48 05  .$....H..$....H.
	0x0840 30 02 00 00 48 89 84 24 d0 00 00 00 48 89 04 24  0...H..$....H..$
	0x0850 48 8b 84 24 e0 01 00 00 48 89 44 24 08 e8 00 00  H..$....H.D$....
	0x0860 00 00 48 8b 44 24 10 48 89 84 24 e0 01 00 00 48  ..H.D$.H..$....H
	0x0870 8b 84 24 d8 01 00 00 48 05 40 02 00 00 48 89 84  ..$....H.@...H..
	0x0880 24 c0 00 00 00 48 89 04 24 48 8b 84 24 e0 01 00  $....H..$H..$...
	0x0890 00 48 89 44 24 08 e8 00 00 00 00 48 8b 44 24 10  .H.D$......H.D$.
	0x08a0 48 89 84 24 e0 01 00 00 48 8b 84 24 d8 01 00 00  H..$....H..$....
	0x08b0 48 05 50 02 00 00 48 89 84 24 b8 00 00 00 48 89  H.P...H..$....H.
	0x08c0 04 24 48 8b 84 24 e0 01 00 00 48 89 44 24 08 e8  .$H..$....H.D$..
	0x08d0 00 00 00 00 48 8b 44 24 10 48 89 84 24 e0 01 00  ....H.D$.H..$...
	0x08e0 00 48 8b 84 24 d8 01 00 00 48 05 60 02 00 00 48  .H..$....H.`...H
	0x08f0 89 84 24 b0 00 00 00 48 89 04 24 48 8b 84 24 e0  ..$....H..$H..$.
	0x0900 01 00 00 48 89 44 24 08 e8 00 00 00 00 48 8b 44  ...H.D$......H.D
	0x0910 24 10 48 89 84 24 e0 01 00 00 48 8b 84 24 d8 01  $.H..$....H..$..
	0x0920 00 00 48 05 70 02 00 00 48 89 84 24 a8 00 00 00  ..H.p...H..$....
	0x0930 48 89 04 24 48 8b 84 24 e0 01 00 00 48 89 44 24  H..$H..$....H.D$
	0x0940 08 e8 00 00 00 00 48 8b 44 24 10 48 89 84 24 e0  ......H.D$.H..$.
	0x0950 01 00 00 48 8b 84 24 d8 01 00 00 48 05 80 02 00  ...H..$....H....
	0x0960 00 48 89 84 24 a0 00 00 00 48 89 04 24 48 8b 84  .H..$....H..$H..
	0x0970 24 e0 01 00 00 48 89 44 24 08 e8 00 00 00 00 48  $....H.D$......H
	0x0980 8b 44 24 10 48 89 84 24 e0 01 00 00 48 8b 84 24  .D$.H..$....H..$
	0x0990 d8 01 00 00 48 05 90 02 00 00 48 89 84 24 98 00  ....H.....H..$..
	0x09a0 00 00 48 89 04 24 48 8b 84 24 e0 01 00 00 48 89  ..H..$H..$....H.
	0x09b0 44 24 08 e8 00 00 00 00 48 8b 44 24 10 48 89 84  D$......H.D$.H..
	0x09c0 24 e0 01 00 00 48 8b 84 24 d8 01 00 00 48 05 a0  $....H..$....H..
	0x09d0 02 00 00 48 89 84 24 90 00 00 00 48 89 04 24 48  ...H..$....H..$H
	0x09e0 8b 84 24 e0 01 00 00 48 89 44 24 08 e8 00 00 00  ..$....H.D$.....
	0x09f0 00 48 8b 44 24 10 48 89 84 24 e0 01 00 00 48 8b  .H.D$.H..$....H.
	0x0a00 84 24 d8 01 00 00 48 05 b0 02 00 00 48 89 84 24  .$....H.....H..$
	0x0a10 88 00 00 00 48 89 04 24 48 8b 84 24 e0 01 00 00  ....H..$H..$....
	0x0a20 48 89 44 24 08 e8 00 00 00 00 48 8b 44 24 10 48  H.D$......H.D$.H
	0x0a30 89 84 24 e0 01 00 00 48 8b 84 24 d8 01 00 00 48  ..$....H..$....H
	0x0a40 05 c0 02 00 00 48 89 84 24 80 00 00 00 48 89 04  .....H..$....H..
	0x0a50 24 48 8b 84 24 e0 01 00 00 48 89 44 24 08 e8 00  $H..$....H.D$...
	0x0a60 00 00 00 48 8b 44 24 10 48 89 84 24 e0 01 00 00  ...H.D$.H..$....
	0x0a70 48 8b 84 24 d8 01 00 00 48 05 d0 02 00 00 48 89  H..$....H.....H.
	0x0a80 44 24 78 48 89 04 24 48 8b 84 24 e0 01 00 00 48  D$xH..$H..$....H
	0x0a90 89 44 24 08 e8 00 00 00 00 48 8b 44 24 10 48 89  .D$......H.D$.H.
	0x0aa0 84 24 e0 01 00 00 48 8b 84 24 d8 01 00 00 48 05  .$....H..$....H.
	0x0ab0 e0 02 00 00 48 89 44 24 68 48 89 04 24 48 8b 84  ....H.D$hH..$H..
	0x0ac0 24 e0 01 00 00 48 89 44 24 08 e8 00 00 00 00 48  $....H.D$......H
	0x0ad0 8b 44 24 10 48 89 84 24 e0 01 00 00 48 8b 84 24  .D$.H..$....H..$
	0x0ae0 d8 01 00 00 48 05 f0 02 00 00 48 89 44 24 60 48  ....H.....H.D$`H
	0x0af0 89 04 24 48 8b 84 24 e0 01 00 00 48 89 44 24 08  ..$H..$....H.D$.
	0x0b00 e8 00 00 00 00 48 8b 44 24 10 48 89 84 24 e0 01  .....H.D$.H..$..
	0x0b10 00 00 48 8b 84 24 d8 01 00 00 48 05 00 03 00 00  ..H..$....H.....
	0x0b20 48 89 44 24 58 48 89 04 24 48 8b 84 24 e0 01 00  H.D$XH..$H..$...
	0x0b30 00 48 89 44 24 08 e8 00 00 00 00 48 8b 44 24 10  .H.D$......H.D$.
	0x0b40 48 89 84 24 e0 01 00 00 48 8b 84 24 d8 01 00 00  H..$....H..$....
	0x0b50 48 05 10 03 00 00 48 89 44 24 50 48 89 04 24 48  H.....H.D$PH..$H
	0x0b60 8b 84 24 e0 01 00 00 48 89 44 24 08 e8 00 00 00  ..$....H.D$.....
	0x0b70 00 48 8b 44 24 10 48 89 84 24 e0 01 00 00 48 8b  .H.D$.H..$....H.
	0x0b80 84 24 d8 01 00 00 48 05 20 03 00 00 48 89 44 24  .$....H. ...H.D$
	0x0b90 48 48 89 04 24 48 8b 84 24 e0 01 00 00 48 89 44  HH..$H..$....H.D
	0x0ba0 24 08 e8 00 00 00 00 48 8b 44 24 10 48 89 84 24  $......H.D$.H..$
	0x0bb0 e0 01 00 00 48 8b 84 24 d8 01 00 00 48 05 30 03  ....H..$....H.0.
	0x0bc0 00 00 48 89 44 24 40 48 89 04 24 48 8b 84 24 e0  ..H.D$@H..$H..$.
	0x0bd0 01 00 00 48 89 44 24 08 e8 00 00 00 00 48 8b 44  ...H.D$......H.D
	0x0be0 24 10 48 89 84 24 e0 01 00 00 48 89 84 24 e8 01  $.H..$....H..$..
	0x0bf0 00 00 48 8b ac 24 c8 01 00 00 48 81 c4 d0 01 00  ..H..$....H.....
	0x0c00 00 c3 e8 00 00 00 00 e9 f4 f3 ff ff              ............
	rel 5+4 t=16 TLS+0
	rel 105+4 t=8 runtime.memhash+0
	rel 162+4 t=8 runtime.f64hash+0
	rel 216+4 t=8 runtime.f64hash+0
	rel 270+4 t=8 runtime.f64hash+0
	rel 324+4 t=8 runtime.f64hash+0
	rel 378+4 t=8 runtime.f64hash+0
	rel 432+4 t=8 runtime.f64hash+0
	rel 489+4 t=8 runtime.f64hash+0
	rel 546+4 t=8 runtime.f64hash+0
	rel 603+4 t=8 runtime.f64hash+0
	rel 660+4 t=8 runtime.f64hash+0
	rel 717+4 t=8 runtime.f64hash+0
	rel 774+4 t=8 runtime.f64hash+0
	rel 831+4 t=8 runtime.f64hash+0
	rel 888+4 t=8 runtime.f64hash+0
	rel 945+4 t=8 runtime.f64hash+0
	rel 1002+4 t=8 runtime.f64hash+0
	rel 1059+4 t=8 runtime.f64hash+0
	rel 1116+4 t=8 runtime.f64hash+0
	rel 1173+4 t=8 runtime.f64hash+0
	rel 1230+4 t=8 runtime.f64hash+0
	rel 1287+4 t=8 runtime.f64hash+0
	rel 1344+4 t=8 runtime.f64hash+0
	rel 1401+4 t=8 runtime.f64hash+0
	rel 1458+4 t=8 runtime.f64hash+0
	rel 1515+4 t=8 runtime.f64hash+0
	rel 1572+4 t=8 runtime.f64hash+0
	rel 1629+4 t=8 runtime.strhash+0
	rel 1686+4 t=8 runtime.strhash+0
	rel 1743+4 t=8 runtime.strhash+0
	rel 1800+4 t=8 runtime.strhash+0
	rel 1857+4 t=8 runtime.strhash+0
	rel 1914+4 t=8 runtime.strhash+0
	rel 1971+4 t=8 runtime.strhash+0
	rel 2028+4 t=8 runtime.strhash+0
	rel 2085+4 t=8 runtime.strhash+0
	rel 2142+4 t=8 runtime.strhash+0
	rel 2199+4 t=8 runtime.strhash+0
	rel 2256+4 t=8 runtime.strhash+0
	rel 2313+4 t=8 runtime.strhash+0
	rel 2370+4 t=8 runtime.strhash+0
	rel 2427+4 t=8 runtime.strhash+0
	rel 2484+4 t=8 runtime.strhash+0
	rel 2541+4 t=8 runtime.strhash+0
	rel 2598+4 t=8 runtime.strhash+0
	rel 2655+4 t=8 runtime.strhash+0
	rel 2709+4 t=8 runtime.strhash+0
	rel 2763+4 t=8 runtime.strhash+0
	rel 2817+4 t=8 runtime.strhash+0
	rel 2871+4 t=8 runtime.strhash+0
	rel 2925+4 t=8 runtime.strhash+0
	rel 2979+4 t=8 runtime.strhash+0
	rel 3033+4 t=8 runtime.strhash+0
	rel 3075+4 t=8 runtime.morestack_noctxt+0
type..eq."".tera STEXT dupok size=6479 args=0x18 locals=0x3b0
	0x0000 00000 (<autogenerated>:1)	TEXT	type..eq."".tera(SB), DUPOK|ABIInternal, $944-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	LEAQ	-816(SP), AX
	0x0011 00017 (<autogenerated>:1)	CMPQ	AX, 16(CX)
	0x0015 00021 (<autogenerated>:1)	JLS	6469
	0x001b 00027 (<autogenerated>:1)	SUBQ	$944, SP
	0x0022 00034 (<autogenerated>:1)	MOVQ	BP, 936(SP)
	0x002a 00042 (<autogenerated>:1)	LEAQ	936(SP), BP
	0x0032 00050 (<autogenerated>:1)	FUNCDATA	$0, gclocals·469723812f2fc541579b3e1b9ba2848e(SB)
	0x0032 00050 (<autogenerated>:1)	FUNCDATA	$1, gclocals·3b2f8cd8aed30a4064f526d5998b67de(SB)
	0x0032 00050 (<autogenerated>:1)	FUNCDATA	$2, gclocals·6e8d7ea4abad763909b26991048ee1fe(SB)
	0x0032 00050 (<autogenerated>:1)	PCDATA	$0, $0
	0x0032 00050 (<autogenerated>:1)	PCDATA	$1, $0
	0x0032 00050 (<autogenerated>:1)	MOVB	$0, "".~r2+968(SP)
	0x003a 00058 (<autogenerated>:1)	PCDATA	$0, $1
	0x003a 00058 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x0042 00066 (<autogenerated>:1)	PCDATA	$0, $0
	0x0042 00066 (<autogenerated>:1)	PCDATA	$1, $1
	0x0042 00066 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_56+96(SP)
	0x0047 00071 (<autogenerated>:1)	PCDATA	$0, $1
	0x0047 00071 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x004f 00079 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_57+88(SP)
	0x0054 00084 (<autogenerated>:1)	PCDATA	$0, $2
	0x0054 00084 (<autogenerated>:1)	PCDATA	$1, $0
	0x0054 00084 (<autogenerated>:1)	MOVQ	""..autotmp_56+96(SP), CX
	0x0059 00089 (<autogenerated>:1)	PCDATA	$0, $1
	0x0059 00089 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x005d 00093 (<autogenerated>:1)	PCDATA	$0, $0
	0x005d 00093 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0062 00098 (<autogenerated>:1)	MOVQ	$208, 16(SP)
	0x006b 00107 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x0070 00112 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x0075 00117 (<autogenerated>:1)	MOVB	AL, ""..autotmp_55+39(SP)
	0x0079 00121 (<autogenerated>:1)	MOVB	AL, ""..autotmp_54+40(SP)
	0x007d 00125 (<autogenerated>:1)	TESTB	AL, AL
	0x007f 00127 (<autogenerated>:1)	JNE	134
	0x0081 00129 (<autogenerated>:1)	JMP	6464
	0x0086 00134 (<autogenerated>:1)	PCDATA	$0, $1
	0x0086 00134 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x008e 00142 (<autogenerated>:1)	PCDATA	$0, $0
	0x008e 00142 (<autogenerated>:1)	MOVSD	208(AX), X0
	0x0096 00150 (<autogenerated>:1)	PCDATA	$0, $1
	0x0096 00150 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x009e 00158 (<autogenerated>:1)	PCDATA	$0, $0
	0x009e 00158 (<autogenerated>:1)	MOVSD	208(AX), X1
	0x00a6 00166 (<autogenerated>:1)	UCOMISD	X1, X0
	0x00aa 00170 (<autogenerated>:1)	SETEQ	CL
	0x00ad 00173 (<autogenerated>:1)	SETPC	AL
	0x00b0 00176 (<autogenerated>:1)	ANDL	AX, CX
	0x00b2 00178 (<autogenerated>:1)	MOVB	CL, ""..autotmp_54+40(SP)
	0x00b6 00182 (<autogenerated>:1)	JMP	184
	0x00b8 00184 (<autogenerated>:1)	MOVBLZX	""..autotmp_54+40(SP), AX
	0x00bd 00189 (<autogenerated>:1)	MOVB	AL, ""..autotmp_53+41(SP)
	0x00c1 00193 (<autogenerated>:1)	TESTB	AL, AL
	0x00c3 00195 (<autogenerated>:1)	JNE	202
	0x00c5 00197 (<autogenerated>:1)	JMP	6459
	0x00ca 00202 (<autogenerated>:1)	PCDATA	$0, $1
	0x00ca 00202 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x00d2 00210 (<autogenerated>:1)	PCDATA	$0, $0
	0x00d2 00210 (<autogenerated>:1)	MOVSD	216(AX), X0
	0x00da 00218 (<autogenerated>:1)	PCDATA	$0, $1
	0x00da 00218 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x00e2 00226 (<autogenerated>:1)	PCDATA	$0, $0
	0x00e2 00226 (<autogenerated>:1)	MOVSD	216(AX), X1
	0x00ea 00234 (<autogenerated>:1)	UCOMISD	X1, X0
	0x00ee 00238 (<autogenerated>:1)	SETEQ	CL
	0x00f1 00241 (<autogenerated>:1)	SETPC	AL
	0x00f4 00244 (<autogenerated>:1)	ANDL	AX, CX
	0x00f6 00246 (<autogenerated>:1)	MOVB	CL, ""..autotmp_53+41(SP)
	0x00fa 00250 (<autogenerated>:1)	JMP	252
	0x00fc 00252 (<autogenerated>:1)	MOVBLZX	""..autotmp_53+41(SP), AX
	0x0101 00257 (<autogenerated>:1)	MOVB	AL, ""..autotmp_52+42(SP)
	0x0105 00261 (<autogenerated>:1)	TESTB	AL, AL
	0x0107 00263 (<autogenerated>:1)	JNE	270
	0x0109 00265 (<autogenerated>:1)	JMP	6454
	0x010e 00270 (<autogenerated>:1)	PCDATA	$0, $1
	0x010e 00270 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x0116 00278 (<autogenerated>:1)	PCDATA	$0, $0
	0x0116 00278 (<autogenerated>:1)	MOVSD	224(AX), X0
	0x011e 00286 (<autogenerated>:1)	PCDATA	$0, $1
	0x011e 00286 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x0126 00294 (<autogenerated>:1)	PCDATA	$0, $0
	0x0126 00294 (<autogenerated>:1)	MOVSD	224(AX), X1
	0x012e 00302 (<autogenerated>:1)	UCOMISD	X1, X0
	0x0132 00306 (<autogenerated>:1)	SETEQ	CL
	0x0135 00309 (<autogenerated>:1)	SETPC	AL
	0x0138 00312 (<autogenerated>:1)	ANDL	AX, CX
	0x013a 00314 (<autogenerated>:1)	MOVB	CL, ""..autotmp_52+42(SP)
	0x013e 00318 (<autogenerated>:1)	JMP	320
	0x0140 00320 (<autogenerated>:1)	MOVBLZX	""..autotmp_52+42(SP), AX
	0x0145 00325 (<autogenerated>:1)	MOVB	AL, ""..autotmp_51+43(SP)
	0x0149 00329 (<autogenerated>:1)	TESTB	AL, AL
	0x014b 00331 (<autogenerated>:1)	JNE	338
	0x014d 00333 (<autogenerated>:1)	JMP	6449
	0x0152 00338 (<autogenerated>:1)	PCDATA	$0, $1
	0x0152 00338 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x015a 00346 (<autogenerated>:1)	PCDATA	$0, $0
	0x015a 00346 (<autogenerated>:1)	MOVSD	232(AX), X0
	0x0162 00354 (<autogenerated>:1)	PCDATA	$0, $1
	0x0162 00354 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x016a 00362 (<autogenerated>:1)	PCDATA	$0, $0
	0x016a 00362 (<autogenerated>:1)	MOVSD	232(AX), X1
	0x0172 00370 (<autogenerated>:1)	UCOMISD	X1, X0
	0x0176 00374 (<autogenerated>:1)	SETEQ	CL
	0x0179 00377 (<autogenerated>:1)	SETPC	AL
	0x017c 00380 (<autogenerated>:1)	ANDL	AX, CX
	0x017e 00382 (<autogenerated>:1)	MOVB	CL, ""..autotmp_51+43(SP)
	0x0182 00386 (<autogenerated>:1)	JMP	388
	0x0184 00388 (<autogenerated>:1)	MOVBLZX	""..autotmp_51+43(SP), AX
	0x0189 00393 (<autogenerated>:1)	MOVB	AL, ""..autotmp_50+44(SP)
	0x018d 00397 (<autogenerated>:1)	TESTB	AL, AL
	0x018f 00399 (<autogenerated>:1)	JNE	406
	0x0191 00401 (<autogenerated>:1)	JMP	6444
	0x0196 00406 (<autogenerated>:1)	PCDATA	$0, $1
	0x0196 00406 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x019e 00414 (<autogenerated>:1)	PCDATA	$0, $0
	0x019e 00414 (<autogenerated>:1)	MOVSD	240(AX), X0
	0x01a6 00422 (<autogenerated>:1)	PCDATA	$0, $1
	0x01a6 00422 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x01ae 00430 (<autogenerated>:1)	PCDATA	$0, $0
	0x01ae 00430 (<autogenerated>:1)	MOVSD	240(AX), X1
	0x01b6 00438 (<autogenerated>:1)	UCOMISD	X1, X0
	0x01ba 00442 (<autogenerated>:1)	SETEQ	CL
	0x01bd 00445 (<autogenerated>:1)	SETPC	AL
	0x01c0 00448 (<autogenerated>:1)	ANDL	AX, CX
	0x01c2 00450 (<autogenerated>:1)	MOVB	CL, ""..autotmp_50+44(SP)
	0x01c6 00454 (<autogenerated>:1)	JMP	456
	0x01c8 00456 (<autogenerated>:1)	MOVBLZX	""..autotmp_50+44(SP), AX
	0x01cd 00461 (<autogenerated>:1)	MOVB	AL, ""..autotmp_49+46(SP)
	0x01d1 00465 (<autogenerated>:1)	TESTB	AL, AL
	0x01d3 00467 (<autogenerated>:1)	JNE	474
	0x01d5 00469 (<autogenerated>:1)	JMP	6439
	0x01da 00474 (<autogenerated>:1)	PCDATA	$0, $1
	0x01da 00474 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x01e2 00482 (<autogenerated>:1)	PCDATA	$0, $0
	0x01e2 00482 (<autogenerated>:1)	MOVSD	248(AX), X0
	0x01ea 00490 (<autogenerated>:1)	PCDATA	$0, $1
	0x01ea 00490 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x01f2 00498 (<autogenerated>:1)	PCDATA	$0, $0
	0x01f2 00498 (<autogenerated>:1)	MOVSD	248(AX), X1
	0x01fa 00506 (<autogenerated>:1)	UCOMISD	X1, X0
	0x01fe 00510 (<autogenerated>:1)	SETEQ	CL
	0x0201 00513 (<autogenerated>:1)	SETPC	AL
	0x0204 00516 (<autogenerated>:1)	ANDL	AX, CX
	0x0206 00518 (<autogenerated>:1)	MOVB	CL, ""..autotmp_49+46(SP)
	0x020a 00522 (<autogenerated>:1)	JMP	524
	0x020c 00524 (<autogenerated>:1)	MOVBLZX	""..autotmp_49+46(SP), AX
	0x0211 00529 (<autogenerated>:1)	MOVB	AL, ""..autotmp_48+47(SP)
	0x0215 00533 (<autogenerated>:1)	TESTB	AL, AL
	0x0217 00535 (<autogenerated>:1)	JNE	542
	0x0219 00537 (<autogenerated>:1)	JMP	6434
	0x021e 00542 (<autogenerated>:1)	PCDATA	$0, $1
	0x021e 00542 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x0226 00550 (<autogenerated>:1)	PCDATA	$0, $0
	0x0226 00550 (<autogenerated>:1)	MOVSD	256(AX), X0
	0x022e 00558 (<autogenerated>:1)	PCDATA	$0, $1
	0x022e 00558 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x0236 00566 (<autogenerated>:1)	PCDATA	$0, $0
	0x0236 00566 (<autogenerated>:1)	MOVSD	256(AX), X1
	0x023e 00574 (<autogenerated>:1)	UCOMISD	X1, X0
	0x0242 00578 (<autogenerated>:1)	SETEQ	CL
	0x0245 00581 (<autogenerated>:1)	SETPC	AL
	0x0248 00584 (<autogenerated>:1)	ANDL	AX, CX
	0x024a 00586 (<autogenerated>:1)	MOVB	CL, ""..autotmp_48+47(SP)
	0x024e 00590 (<autogenerated>:1)	JMP	592
	0x0250 00592 (<autogenerated>:1)	MOVBLZX	""..autotmp_48+47(SP), AX
	0x0255 00597 (<autogenerated>:1)	MOVB	AL, ""..autotmp_47+48(SP)
	0x0259 00601 (<autogenerated>:1)	TESTB	AL, AL
	0x025b 00603 (<autogenerated>:1)	JNE	610
	0x025d 00605 (<autogenerated>:1)	JMP	6429
	0x0262 00610 (<autogenerated>:1)	PCDATA	$0, $1
	0x0262 00610 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x026a 00618 (<autogenerated>:1)	PCDATA	$0, $0
	0x026a 00618 (<autogenerated>:1)	MOVSD	264(AX), X0
	0x0272 00626 (<autogenerated>:1)	PCDATA	$0, $1
	0x0272 00626 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x027a 00634 (<autogenerated>:1)	PCDATA	$0, $0
	0x027a 00634 (<autogenerated>:1)	MOVSD	264(AX), X1
	0x0282 00642 (<autogenerated>:1)	UCOMISD	X1, X0
	0x0286 00646 (<autogenerated>:1)	SETEQ	CL
	0x0289 00649 (<autogenerated>:1)	SETPC	AL
	0x028c 00652 (<autogenerated>:1)	ANDL	AX, CX
	0x028e 00654 (<autogenerated>:1)	MOVB	CL, ""..autotmp_47+48(SP)
	0x0292 00658 (<autogenerated>:1)	JMP	660
	0x0294 00660 (<autogenerated>:1)	MOVBLZX	""..autotmp_47+48(SP), AX
	0x0299 00665 (<autogenerated>:1)	MOVB	AL, ""..autotmp_46+49(SP)
	0x029d 00669 (<autogenerated>:1)	TESTB	AL, AL
	0x029f 00671 (<autogenerated>:1)	JNE	678
	0x02a1 00673 (<autogenerated>:1)	JMP	6424
	0x02a6 00678 (<autogenerated>:1)	PCDATA	$0, $1
	0x02a6 00678 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x02ae 00686 (<autogenerated>:1)	PCDATA	$0, $0
	0x02ae 00686 (<autogenerated>:1)	MOVSD	272(AX), X0
	0x02b6 00694 (<autogenerated>:1)	PCDATA	$0, $1
	0x02b6 00694 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x02be 00702 (<autogenerated>:1)	PCDATA	$0, $0
	0x02be 00702 (<autogenerated>:1)	MOVSD	272(AX), X1
	0x02c6 00710 (<autogenerated>:1)	UCOMISD	X1, X0
	0x02ca 00714 (<autogenerated>:1)	SETEQ	CL
	0x02cd 00717 (<autogenerated>:1)	SETPC	AL
	0x02d0 00720 (<autogenerated>:1)	ANDL	AX, CX
	0x02d2 00722 (<autogenerated>:1)	MOVB	CL, ""..autotmp_46+49(SP)
	0x02d6 00726 (<autogenerated>:1)	JMP	728
	0x02d8 00728 (<autogenerated>:1)	MOVBLZX	""..autotmp_46+49(SP), AX
	0x02dd 00733 (<autogenerated>:1)	MOVB	AL, ""..autotmp_45+50(SP)
	0x02e1 00737 (<autogenerated>:1)	TESTB	AL, AL
	0x02e3 00739 (<autogenerated>:1)	JNE	746
	0x02e5 00741 (<autogenerated>:1)	JMP	6419
	0x02ea 00746 (<autogenerated>:1)	PCDATA	$0, $1
	0x02ea 00746 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x02f2 00754 (<autogenerated>:1)	PCDATA	$0, $0
	0x02f2 00754 (<autogenerated>:1)	MOVSD	280(AX), X0
	0x02fa 00762 (<autogenerated>:1)	PCDATA	$0, $1
	0x02fa 00762 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x0302 00770 (<autogenerated>:1)	PCDATA	$0, $0
	0x0302 00770 (<autogenerated>:1)	MOVSD	280(AX), X1
	0x030a 00778 (<autogenerated>:1)	UCOMISD	X1, X0
	0x030e 00782 (<autogenerated>:1)	SETEQ	CL
	0x0311 00785 (<autogenerated>:1)	SETPC	AL
	0x0314 00788 (<autogenerated>:1)	ANDL	AX, CX
	0x0316 00790 (<autogenerated>:1)	MOVB	CL, ""..autotmp_45+50(SP)
	0x031a 00794 (<autogenerated>:1)	JMP	796
	0x031c 00796 (<autogenerated>:1)	MOVBLZX	""..autotmp_45+50(SP), AX
	0x0321 00801 (<autogenerated>:1)	MOVB	AL, ""..autotmp_44+51(SP)
	0x0325 00805 (<autogenerated>:1)	TESTB	AL, AL
	0x0327 00807 (<autogenerated>:1)	JNE	814
	0x0329 00809 (<autogenerated>:1)	JMP	6414
	0x032e 00814 (<autogenerated>:1)	PCDATA	$0, $1
	0x032e 00814 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x0336 00822 (<autogenerated>:1)	PCDATA	$0, $0
	0x0336 00822 (<autogenerated>:1)	MOVSD	288(AX), X0
	0x033e 00830 (<autogenerated>:1)	PCDATA	$0, $1
	0x033e 00830 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x0346 00838 (<autogenerated>:1)	PCDATA	$0, $0
	0x0346 00838 (<autogenerated>:1)	MOVSD	288(AX), X1
	0x034e 00846 (<autogenerated>:1)	UCOMISD	X1, X0
	0x0352 00850 (<autogenerated>:1)	SETEQ	CL
	0x0355 00853 (<autogenerated>:1)	SETPC	AL
	0x0358 00856 (<autogenerated>:1)	ANDL	AX, CX
	0x035a 00858 (<autogenerated>:1)	MOVB	CL, ""..autotmp_44+51(SP)
	0x035e 00862 (<autogenerated>:1)	JMP	864
	0x0360 00864 (<autogenerated>:1)	MOVBLZX	""..autotmp_44+51(SP), AX
	0x0365 00869 (<autogenerated>:1)	MOVB	AL, ""..autotmp_43+52(SP)
	0x0369 00873 (<autogenerated>:1)	TESTB	AL, AL
	0x036b 00875 (<autogenerated>:1)	JNE	882
	0x036d 00877 (<autogenerated>:1)	JMP	6409
	0x0372 00882 (<autogenerated>:1)	PCDATA	$0, $1
	0x0372 00882 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x037a 00890 (<autogenerated>:1)	PCDATA	$0, $0
	0x037a 00890 (<autogenerated>:1)	MOVSD	296(AX), X0
	0x0382 00898 (<autogenerated>:1)	PCDATA	$0, $1
	0x0382 00898 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x038a 00906 (<autogenerated>:1)	PCDATA	$0, $0
	0x038a 00906 (<autogenerated>:1)	MOVSD	296(AX), X1
	0x0392 00914 (<autogenerated>:1)	UCOMISD	X1, X0
	0x0396 00918 (<autogenerated>:1)	SETEQ	CL
	0x0399 00921 (<autogenerated>:1)	SETPC	AL
	0x039c 00924 (<autogenerated>:1)	ANDL	AX, CX
	0x039e 00926 (<autogenerated>:1)	MOVB	CL, ""..autotmp_43+52(SP)
	0x03a2 00930 (<autogenerated>:1)	JMP	932
	0x03a4 00932 (<autogenerated>:1)	MOVBLZX	""..autotmp_43+52(SP), AX
	0x03a9 00937 (<autogenerated>:1)	MOVB	AL, ""..autotmp_42+53(SP)
	0x03ad 00941 (<autogenerated>:1)	TESTB	AL, AL
	0x03af 00943 (<autogenerated>:1)	JNE	950
	0x03b1 00945 (<autogenerated>:1)	JMP	6404
	0x03b6 00950 (<autogenerated>:1)	PCDATA	$0, $1
	0x03b6 00950 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x03be 00958 (<autogenerated>:1)	PCDATA	$0, $0
	0x03be 00958 (<autogenerated>:1)	MOVSD	304(AX), X0
	0x03c6 00966 (<autogenerated>:1)	PCDATA	$0, $1
	0x03c6 00966 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x03ce 00974 (<autogenerated>:1)	PCDATA	$0, $0
	0x03ce 00974 (<autogenerated>:1)	MOVSD	304(AX), X1
	0x03d6 00982 (<autogenerated>:1)	UCOMISD	X1, X0
	0x03da 00986 (<autogenerated>:1)	SETEQ	CL
	0x03dd 00989 (<autogenerated>:1)	SETPC	AL
	0x03e0 00992 (<autogenerated>:1)	ANDL	AX, CX
	0x03e2 00994 (<autogenerated>:1)	MOVB	CL, ""..autotmp_42+53(SP)
	0x03e6 00998 (<autogenerated>:1)	JMP	1000
	0x03e8 01000 (<autogenerated>:1)	MOVBLZX	""..autotmp_42+53(SP), AX
	0x03ed 01005 (<autogenerated>:1)	MOVB	AL, ""..autotmp_41+54(SP)
	0x03f1 01009 (<autogenerated>:1)	TESTB	AL, AL
	0x03f3 01011 (<autogenerated>:1)	JNE	1018
	0x03f5 01013 (<autogenerated>:1)	JMP	6399
	0x03fa 01018 (<autogenerated>:1)	PCDATA	$0, $1
	0x03fa 01018 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x0402 01026 (<autogenerated>:1)	PCDATA	$0, $0
	0x0402 01026 (<autogenerated>:1)	MOVSD	312(AX), X0
	0x040a 01034 (<autogenerated>:1)	PCDATA	$0, $1
	0x040a 01034 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x0412 01042 (<autogenerated>:1)	PCDATA	$0, $0
	0x0412 01042 (<autogenerated>:1)	MOVSD	312(AX), X1
	0x041a 01050 (<autogenerated>:1)	UCOMISD	X1, X0
	0x041e 01054 (<autogenerated>:1)	SETEQ	CL
	0x0421 01057 (<autogenerated>:1)	SETPC	AL
	0x0424 01060 (<autogenerated>:1)	ANDL	AX, CX
	0x0426 01062 (<autogenerated>:1)	MOVB	CL, ""..autotmp_41+54(SP)
	0x042a 01066 (<autogenerated>:1)	JMP	1068
	0x042c 01068 (<autogenerated>:1)	MOVBLZX	""..autotmp_41+54(SP), AX
	0x0431 01073 (<autogenerated>:1)	MOVB	AL, ""..autotmp_40+55(SP)
	0x0435 01077 (<autogenerated>:1)	TESTB	AL, AL
	0x0437 01079 (<autogenerated>:1)	JNE	1086
	0x0439 01081 (<autogenerated>:1)	JMP	6394
	0x043e 01086 (<autogenerated>:1)	PCDATA	$0, $1
	0x043e 01086 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x0446 01094 (<autogenerated>:1)	PCDATA	$0, $0
	0x0446 01094 (<autogenerated>:1)	MOVSD	320(AX), X0
	0x044e 01102 (<autogenerated>:1)	PCDATA	$0, $1
	0x044e 01102 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x0456 01110 (<autogenerated>:1)	PCDATA	$0, $0
	0x0456 01110 (<autogenerated>:1)	MOVSD	320(AX), X1
	0x045e 01118 (<autogenerated>:1)	UCOMISD	X1, X0
	0x0462 01122 (<autogenerated>:1)	SETEQ	CL
	0x0465 01125 (<autogenerated>:1)	SETPC	AL
	0x0468 01128 (<autogenerated>:1)	ANDL	AX, CX
	0x046a 01130 (<autogenerated>:1)	MOVB	CL, ""..autotmp_40+55(SP)
	0x046e 01134 (<autogenerated>:1)	JMP	1136
	0x0470 01136 (<autogenerated>:1)	MOVBLZX	""..autotmp_40+55(SP), AX
	0x0475 01141 (<autogenerated>:1)	MOVB	AL, ""..autotmp_39+57(SP)
	0x0479 01145 (<autogenerated>:1)	TESTB	AL, AL
	0x047b 01147 (<autogenerated>:1)	JNE	1154
	0x047d 01149 (<autogenerated>:1)	JMP	6389
	0x0482 01154 (<autogenerated>:1)	PCDATA	$0, $1
	0x0482 01154 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x048a 01162 (<autogenerated>:1)	PCDATA	$0, $0
	0x048a 01162 (<autogenerated>:1)	MOVSD	328(AX), X0
	0x0492 01170 (<autogenerated>:1)	PCDATA	$0, $1
	0x0492 01170 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x049a 01178 (<autogenerated>:1)	PCDATA	$0, $0
	0x049a 01178 (<autogenerated>:1)	MOVSD	328(AX), X1
	0x04a2 01186 (<autogenerated>:1)	UCOMISD	X1, X0
	0x04a6 01190 (<autogenerated>:1)	SETEQ	CL
	0x04a9 01193 (<autogenerated>:1)	SETPC	AL
	0x04ac 01196 (<autogenerated>:1)	ANDL	AX, CX
	0x04ae 01198 (<autogenerated>:1)	MOVB	CL, ""..autotmp_39+57(SP)
	0x04b2 01202 (<autogenerated>:1)	JMP	1204
	0x04b4 01204 (<autogenerated>:1)	MOVBLZX	""..autotmp_39+57(SP), AX
	0x04b9 01209 (<autogenerated>:1)	MOVB	AL, ""..autotmp_38+58(SP)
	0x04bd 01213 (<autogenerated>:1)	TESTB	AL, AL
	0x04bf 01215 (<autogenerated>:1)	JNE	1222
	0x04c1 01217 (<autogenerated>:1)	JMP	6384
	0x04c6 01222 (<autogenerated>:1)	PCDATA	$0, $1
	0x04c6 01222 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x04ce 01230 (<autogenerated>:1)	PCDATA	$0, $0
	0x04ce 01230 (<autogenerated>:1)	MOVSD	336(AX), X0
	0x04d6 01238 (<autogenerated>:1)	PCDATA	$0, $1
	0x04d6 01238 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x04de 01246 (<autogenerated>:1)	PCDATA	$0, $0
	0x04de 01246 (<autogenerated>:1)	MOVSD	336(AX), X1
	0x04e6 01254 (<autogenerated>:1)	UCOMISD	X1, X0
	0x04ea 01258 (<autogenerated>:1)	SETEQ	CL
	0x04ed 01261 (<autogenerated>:1)	SETPC	AL
	0x04f0 01264 (<autogenerated>:1)	ANDL	AX, CX
	0x04f2 01266 (<autogenerated>:1)	MOVB	CL, ""..autotmp_38+58(SP)
	0x04f6 01270 (<autogenerated>:1)	JMP	1272
	0x04f8 01272 (<autogenerated>:1)	MOVBLZX	""..autotmp_38+58(SP), AX
	0x04fd 01277 (<autogenerated>:1)	MOVB	AL, ""..autotmp_37+59(SP)
	0x0501 01281 (<autogenerated>:1)	TESTB	AL, AL
	0x0503 01283 (<autogenerated>:1)	JNE	1290
	0x0505 01285 (<autogenerated>:1)	JMP	6379
	0x050a 01290 (<autogenerated>:1)	PCDATA	$0, $1
	0x050a 01290 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x0512 01298 (<autogenerated>:1)	PCDATA	$0, $0
	0x0512 01298 (<autogenerated>:1)	MOVSD	344(AX), X0
	0x051a 01306 (<autogenerated>:1)	PCDATA	$0, $1
	0x051a 01306 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x0522 01314 (<autogenerated>:1)	PCDATA	$0, $0
	0x0522 01314 (<autogenerated>:1)	MOVSD	344(AX), X1
	0x052a 01322 (<autogenerated>:1)	UCOMISD	X1, X0
	0x052e 01326 (<autogenerated>:1)	SETEQ	CL
	0x0531 01329 (<autogenerated>:1)	SETPC	AL
	0x0534 01332 (<autogenerated>:1)	ANDL	AX, CX
	0x0536 01334 (<autogenerated>:1)	MOVB	CL, ""..autotmp_37+59(SP)
	0x053a 01338 (<autogenerated>:1)	JMP	1340
	0x053c 01340 (<autogenerated>:1)	MOVBLZX	""..autotmp_37+59(SP), AX
	0x0541 01345 (<autogenerated>:1)	MOVB	AL, ""..autotmp_36+60(SP)
	0x0545 01349 (<autogenerated>:1)	TESTB	AL, AL
	0x0547 01351 (<autogenerated>:1)	JNE	1358
	0x0549 01353 (<autogenerated>:1)	JMP	6374
	0x054e 01358 (<autogenerated>:1)	PCDATA	$0, $1
	0x054e 01358 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x0556 01366 (<autogenerated>:1)	PCDATA	$0, $0
	0x0556 01366 (<autogenerated>:1)	MOVSD	352(AX), X0
	0x055e 01374 (<autogenerated>:1)	PCDATA	$0, $1
	0x055e 01374 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x0566 01382 (<autogenerated>:1)	PCDATA	$0, $0
	0x0566 01382 (<autogenerated>:1)	MOVSD	352(AX), X1
	0x056e 01390 (<autogenerated>:1)	UCOMISD	X1, X0
	0x0572 01394 (<autogenerated>:1)	SETEQ	CL
	0x0575 01397 (<autogenerated>:1)	SETPC	AL
	0x0578 01400 (<autogenerated>:1)	ANDL	AX, CX
	0x057a 01402 (<autogenerated>:1)	MOVB	CL, ""..autotmp_36+60(SP)
	0x057e 01406 (<autogenerated>:1)	JMP	1408
	0x0580 01408 (<autogenerated>:1)	MOVBLZX	""..autotmp_36+60(SP), AX
	0x0585 01413 (<autogenerated>:1)	MOVB	AL, ""..autotmp_35+61(SP)
	0x0589 01417 (<autogenerated>:1)	TESTB	AL, AL
	0x058b 01419 (<autogenerated>:1)	JNE	1426
	0x058d 01421 (<autogenerated>:1)	JMP	6369
	0x0592 01426 (<autogenerated>:1)	PCDATA	$0, $1
	0x0592 01426 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x059a 01434 (<autogenerated>:1)	PCDATA	$0, $0
	0x059a 01434 (<autogenerated>:1)	MOVSD	360(AX), X0
	0x05a2 01442 (<autogenerated>:1)	PCDATA	$0, $1
	0x05a2 01442 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x05aa 01450 (<autogenerated>:1)	PCDATA	$0, $0
	0x05aa 01450 (<autogenerated>:1)	MOVSD	360(AX), X1
	0x05b2 01458 (<autogenerated>:1)	UCOMISD	X1, X0
	0x05b6 01462 (<autogenerated>:1)	SETEQ	CL
	0x05b9 01465 (<autogenerated>:1)	SETPC	AL
	0x05bc 01468 (<autogenerated>:1)	ANDL	AX, CX
	0x05be 01470 (<autogenerated>:1)	MOVB	CL, ""..autotmp_35+61(SP)
	0x05c2 01474 (<autogenerated>:1)	JMP	1476
	0x05c4 01476 (<autogenerated>:1)	MOVBLZX	""..autotmp_35+61(SP), AX
	0x05c9 01481 (<autogenerated>:1)	MOVB	AL, ""..autotmp_34+62(SP)
	0x05cd 01485 (<autogenerated>:1)	TESTB	AL, AL
	0x05cf 01487 (<autogenerated>:1)	JNE	1494
	0x05d1 01489 (<autogenerated>:1)	JMP	6364
	0x05d6 01494 (<autogenerated>:1)	PCDATA	$0, $1
	0x05d6 01494 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x05de 01502 (<autogenerated>:1)	PCDATA	$0, $0
	0x05de 01502 (<autogenerated>:1)	MOVSD	368(AX), X0
	0x05e6 01510 (<autogenerated>:1)	PCDATA	$0, $1
	0x05e6 01510 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x05ee 01518 (<autogenerated>:1)	PCDATA	$0, $0
	0x05ee 01518 (<autogenerated>:1)	MOVSD	368(AX), X1
	0x05f6 01526 (<autogenerated>:1)	UCOMISD	X1, X0
	0x05fa 01530 (<autogenerated>:1)	SETEQ	CL
	0x05fd 01533 (<autogenerated>:1)	SETPC	AL
	0x0600 01536 (<autogenerated>:1)	ANDL	AX, CX
	0x0602 01538 (<autogenerated>:1)	MOVB	CL, ""..autotmp_34+62(SP)
	0x0606 01542 (<autogenerated>:1)	JMP	1544
	0x0608 01544 (<autogenerated>:1)	MOVBLZX	""..autotmp_34+62(SP), AX
	0x060d 01549 (<autogenerated>:1)	MOVB	AL, ""..autotmp_33+63(SP)
	0x0611 01553 (<autogenerated>:1)	TESTB	AL, AL
	0x0613 01555 (<autogenerated>:1)	JNE	1562
	0x0615 01557 (<autogenerated>:1)	JMP	6359
	0x061a 01562 (<autogenerated>:1)	PCDATA	$0, $1
	0x061a 01562 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x0622 01570 (<autogenerated>:1)	PCDATA	$0, $0
	0x0622 01570 (<autogenerated>:1)	MOVSD	376(AX), X0
	0x062a 01578 (<autogenerated>:1)	PCDATA	$0, $1
	0x062a 01578 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x0632 01586 (<autogenerated>:1)	PCDATA	$0, $0
	0x0632 01586 (<autogenerated>:1)	MOVSD	376(AX), X1
	0x063a 01594 (<autogenerated>:1)	UCOMISD	X1, X0
	0x063e 01598 (<autogenerated>:1)	SETEQ	CL
	0x0641 01601 (<autogenerated>:1)	SETPC	AL
	0x0644 01604 (<autogenerated>:1)	ANDL	AX, CX
	0x0646 01606 (<autogenerated>:1)	MOVB	CL, ""..autotmp_33+63(SP)
	0x064a 01610 (<autogenerated>:1)	JMP	1612
	0x064c 01612 (<autogenerated>:1)	MOVBLZX	""..autotmp_33+63(SP), AX
	0x0651 01617 (<autogenerated>:1)	MOVB	AL, ""..autotmp_32+64(SP)
	0x0655 01621 (<autogenerated>:1)	TESTB	AL, AL
	0x0657 01623 (<autogenerated>:1)	JNE	1630
	0x0659 01625 (<autogenerated>:1)	JMP	6354
	0x065e 01630 (<autogenerated>:1)	PCDATA	$0, $1
	0x065e 01630 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x0666 01638 (<autogenerated>:1)	PCDATA	$0, $0
	0x0666 01638 (<autogenerated>:1)	MOVSD	384(AX), X0
	0x066e 01646 (<autogenerated>:1)	PCDATA	$0, $1
	0x066e 01646 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x0676 01654 (<autogenerated>:1)	PCDATA	$0, $0
	0x0676 01654 (<autogenerated>:1)	MOVSD	384(AX), X1
	0x067e 01662 (<autogenerated>:1)	UCOMISD	X1, X0
	0x0682 01666 (<autogenerated>:1)	SETEQ	CL
	0x0685 01669 (<autogenerated>:1)	SETPC	AL
	0x0688 01672 (<autogenerated>:1)	ANDL	AX, CX
	0x068a 01674 (<autogenerated>:1)	MOVB	CL, ""..autotmp_32+64(SP)
	0x068e 01678 (<autogenerated>:1)	JMP	1680
	0x0690 01680 (<autogenerated>:1)	MOVBLZX	""..autotmp_32+64(SP), AX
	0x0695 01685 (<autogenerated>:1)	MOVB	AL, ""..autotmp_31+65(SP)
	0x0699 01689 (<autogenerated>:1)	TESTB	AL, AL
	0x069b 01691 (<autogenerated>:1)	JNE	1698
	0x069d 01693 (<autogenerated>:1)	JMP	6349
	0x06a2 01698 (<autogenerated>:1)	PCDATA	$0, $1
	0x06a2 01698 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x06aa 01706 (<autogenerated>:1)	PCDATA	$0, $0
	0x06aa 01706 (<autogenerated>:1)	MOVSD	392(AX), X0
	0x06b2 01714 (<autogenerated>:1)	PCDATA	$0, $1
	0x06b2 01714 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x06ba 01722 (<autogenerated>:1)	PCDATA	$0, $0
	0x06ba 01722 (<autogenerated>:1)	MOVSD	392(AX), X1
	0x06c2 01730 (<autogenerated>:1)	UCOMISD	X1, X0
	0x06c6 01734 (<autogenerated>:1)	SETEQ	CL
	0x06c9 01737 (<autogenerated>:1)	SETPC	AL
	0x06cc 01740 (<autogenerated>:1)	ANDL	AX, CX
	0x06ce 01742 (<autogenerated>:1)	MOVB	CL, ""..autotmp_31+65(SP)
	0x06d2 01746 (<autogenerated>:1)	JMP	1748
	0x06d4 01748 (<autogenerated>:1)	MOVBLZX	""..autotmp_31+65(SP), AX
	0x06d9 01753 (<autogenerated>:1)	MOVB	AL, ""..autotmp_30+66(SP)
	0x06dd 01757 (<autogenerated>:1)	TESTB	AL, AL
	0x06df 01759 (<autogenerated>:1)	JNE	1766
	0x06e1 01761 (<autogenerated>:1)	JMP	6344
	0x06e6 01766 (<autogenerated>:1)	PCDATA	$0, $1
	0x06e6 01766 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x06ee 01774 (<autogenerated>:1)	PCDATA	$0, $0
	0x06ee 01774 (<autogenerated>:1)	MOVSD	400(AX), X0
	0x06f6 01782 (<autogenerated>:1)	PCDATA	$0, $1
	0x06f6 01782 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x06fe 01790 (<autogenerated>:1)	PCDATA	$0, $0
	0x06fe 01790 (<autogenerated>:1)	MOVSD	400(AX), X1
	0x0706 01798 (<autogenerated>:1)	UCOMISD	X1, X0
	0x070a 01802 (<autogenerated>:1)	SETEQ	CL
	0x070d 01805 (<autogenerated>:1)	SETPC	AL
	0x0710 01808 (<autogenerated>:1)	ANDL	AX, CX
	0x0712 01810 (<autogenerated>:1)	MOVB	CL, ""..autotmp_30+66(SP)
	0x0716 01814 (<autogenerated>:1)	JMP	1816
	0x0718 01816 (<autogenerated>:1)	MOVBLZX	""..autotmp_30+66(SP), AX
	0x071d 01821 (<autogenerated>:1)	MOVB	AL, ""..autotmp_29+68(SP)
	0x0721 01825 (<autogenerated>:1)	TESTB	AL, AL
	0x0723 01827 (<autogenerated>:1)	JNE	1834
	0x0725 01829 (<autogenerated>:1)	JMP	6339
	0x072a 01834 (<autogenerated>:1)	PCDATA	$0, $1
	0x072a 01834 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x0732 01842 (<autogenerated>:1)	PCDATA	$0, $0
	0x0732 01842 (<autogenerated>:1)	MOVSD	408(AX), X0
	0x073a 01850 (<autogenerated>:1)	PCDATA	$0, $1
	0x073a 01850 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x0742 01858 (<autogenerated>:1)	PCDATA	$0, $0
	0x0742 01858 (<autogenerated>:1)	MOVSD	408(AX), X1
	0x074a 01866 (<autogenerated>:1)	UCOMISD	X1, X0
	0x074e 01870 (<autogenerated>:1)	SETEQ	CL
	0x0751 01873 (<autogenerated>:1)	SETPC	AL
	0x0754 01876 (<autogenerated>:1)	ANDL	AX, CX
	0x0756 01878 (<autogenerated>:1)	MOVB	CL, ""..autotmp_29+68(SP)
	0x075a 01882 (<autogenerated>:1)	JMP	1884
	0x075c 01884 (<autogenerated>:1)	MOVBLZX	""..autotmp_29+68(SP), AX
	0x0761 01889 (<autogenerated>:1)	MOVB	AL, ""..autotmp_28+69(SP)
	0x0765 01893 (<autogenerated>:1)	TESTB	AL, AL
	0x0767 01895 (<autogenerated>:1)	JNE	1902
	0x0769 01897 (<autogenerated>:1)	JMP	6334
	0x076e 01902 (<autogenerated>:1)	PCDATA	$0, $1
	0x076e 01902 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x0776 01910 (<autogenerated>:1)	MOVQ	424(AX), CX
	0x077d 01917 (<autogenerated>:1)	MOVQ	416(AX), AX
	0x0784 01924 (<autogenerated>:1)	PCDATA	$0, $0
	0x0784 01924 (<autogenerated>:1)	PCDATA	$1, $2
	0x0784 01924 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_58+760(SP)
	0x078c 01932 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_58+768(SP)
	0x0794 01940 (<autogenerated>:1)	PCDATA	$0, $1
	0x0794 01940 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x079c 01948 (<autogenerated>:1)	MOVQ	424(AX), CX
	0x07a3 01955 (<autogenerated>:1)	MOVQ	416(AX), AX
	0x07aa 01962 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_59+744(SP)
	0x07b2 01970 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_59+752(SP)
	0x07ba 01978 (<autogenerated>:1)	CMPQ	""..autotmp_58+768(SP), CX
	0x07c2 01986 (<autogenerated>:1)	SETEQ	CL
	0x07c5 01989 (<autogenerated>:1)	JEQ	1996
	0x07c7 01991 (<autogenerated>:1)	JMP	6327
	0x07cc 01996 (<autogenerated>:1)	PCDATA	$0, $2
	0x07cc 01996 (<autogenerated>:1)	MOVQ	""..autotmp_58+760(SP), CX
	0x07d4 02004 (<autogenerated>:1)	PCDATA	$0, $1
	0x07d4 02004 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x07d8 02008 (<autogenerated>:1)	PCDATA	$0, $0
	0x07d8 02008 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x07dd 02013 (<autogenerated>:1)	PCDATA	$1, $0
	0x07dd 02013 (<autogenerated>:1)	MOVQ	""..autotmp_58+768(SP), AX
	0x07e5 02021 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x07ea 02026 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x07ef 02031 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x07f4 02036 (<autogenerated>:1)	JMP	2038
	0x07f6 02038 (<autogenerated>:1)	MOVB	AL, ""..autotmp_28+69(SP)
	0x07fa 02042 (<autogenerated>:1)	JMP	2044
	0x07fc 02044 (<autogenerated>:1)	MOVBLZX	""..autotmp_28+69(SP), AX
	0x0801 02049 (<autogenerated>:1)	MOVB	AL, ""..autotmp_27+70(SP)
	0x0805 02053 (<autogenerated>:1)	TESTB	AL, AL
	0x0807 02055 (<autogenerated>:1)	JNE	2062
	0x0809 02057 (<autogenerated>:1)	JMP	6322
	0x080e 02062 (<autogenerated>:1)	PCDATA	$0, $1
	0x080e 02062 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x0816 02070 (<autogenerated>:1)	PCDATA	$0, $2
	0x0816 02070 (<autogenerated>:1)	MOVQ	432(AX), CX
	0x081d 02077 (<autogenerated>:1)	PCDATA	$0, $3
	0x081d 02077 (<autogenerated>:1)	MOVQ	440(AX), AX
	0x0824 02084 (<autogenerated>:1)	PCDATA	$0, $0
	0x0824 02084 (<autogenerated>:1)	PCDATA	$1, $3
	0x0824 02084 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_60+728(SP)
	0x082c 02092 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_60+736(SP)
	0x0834 02100 (<autogenerated>:1)	PCDATA	$0, $1
	0x0834 02100 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x083c 02108 (<autogenerated>:1)	MOVQ	440(AX), CX
	0x0843 02115 (<autogenerated>:1)	MOVQ	432(AX), AX
	0x084a 02122 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_61+712(SP)
	0x0852 02130 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_61+720(SP)
	0x085a 02138 (<autogenerated>:1)	CMPQ	""..autotmp_60+736(SP), CX
	0x0862 02146 (<autogenerated>:1)	SETEQ	CL
	0x0865 02149 (<autogenerated>:1)	JEQ	2156
	0x0867 02151 (<autogenerated>:1)	JMP	6315
	0x086c 02156 (<autogenerated>:1)	PCDATA	$0, $2
	0x086c 02156 (<autogenerated>:1)	MOVQ	""..autotmp_60+728(SP), CX
	0x0874 02164 (<autogenerated>:1)	PCDATA	$0, $1
	0x0874 02164 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0878 02168 (<autogenerated>:1)	PCDATA	$0, $0
	0x0878 02168 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x087d 02173 (<autogenerated>:1)	PCDATA	$1, $0
	0x087d 02173 (<autogenerated>:1)	MOVQ	""..autotmp_60+736(SP), AX
	0x0885 02181 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x088a 02186 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x088f 02191 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x0894 02196 (<autogenerated>:1)	JMP	2198
	0x0896 02198 (<autogenerated>:1)	MOVB	AL, ""..autotmp_27+70(SP)
	0x089a 02202 (<autogenerated>:1)	JMP	2204
	0x089c 02204 (<autogenerated>:1)	MOVBLZX	""..autotmp_27+70(SP), AX
	0x08a1 02209 (<autogenerated>:1)	MOVB	AL, ""..autotmp_26+71(SP)
	0x08a5 02213 (<autogenerated>:1)	TESTB	AL, AL
	0x08a7 02215 (<autogenerated>:1)	JNE	2222
	0x08a9 02217 (<autogenerated>:1)	JMP	6310
	0x08ae 02222 (<autogenerated>:1)	PCDATA	$0, $1
	0x08ae 02222 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x08b6 02230 (<autogenerated>:1)	MOVQ	456(AX), CX
	0x08bd 02237 (<autogenerated>:1)	MOVQ	448(AX), AX
	0x08c4 02244 (<autogenerated>:1)	PCDATA	$0, $0
	0x08c4 02244 (<autogenerated>:1)	PCDATA	$1, $4
	0x08c4 02244 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_62+696(SP)
	0x08cc 02252 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_62+704(SP)
	0x08d4 02260 (<autogenerated>:1)	PCDATA	$0, $1
	0x08d4 02260 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x08dc 02268 (<autogenerated>:1)	PCDATA	$0, $2
	0x08dc 02268 (<autogenerated>:1)	MOVQ	448(AX), CX
	0x08e3 02275 (<autogenerated>:1)	PCDATA	$0, $3
	0x08e3 02275 (<autogenerated>:1)	MOVQ	456(AX), AX
	0x08ea 02282 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_63+680(SP)
	0x08f2 02290 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_63+688(SP)
	0x08fa 02298 (<autogenerated>:1)	CMPQ	""..autotmp_62+704(SP), AX
	0x0902 02306 (<autogenerated>:1)	SETEQ	AL
	0x0905 02309 (<autogenerated>:1)	JEQ	2316
	0x0907 02311 (<autogenerated>:1)	JMP	6305
	0x090c 02316 (<autogenerated>:1)	PCDATA	$0, $2
	0x090c 02316 (<autogenerated>:1)	MOVQ	""..autotmp_62+696(SP), AX
	0x0914 02324 (<autogenerated>:1)	PCDATA	$0, $3
	0x0914 02324 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0918 02328 (<autogenerated>:1)	PCDATA	$0, $0
	0x0918 02328 (<autogenerated>:1)	MOVQ	CX, 8(SP)
	0x091d 02333 (<autogenerated>:1)	PCDATA	$1, $0
	0x091d 02333 (<autogenerated>:1)	MOVQ	""..autotmp_62+704(SP), AX
	0x0925 02341 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x092a 02346 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x092f 02351 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x0934 02356 (<autogenerated>:1)	JMP	2358
	0x0936 02358 (<autogenerated>:1)	MOVB	AL, ""..autotmp_26+71(SP)
	0x093a 02362 (<autogenerated>:1)	JMP	2364
	0x093c 02364 (<autogenerated>:1)	MOVBLZX	""..autotmp_26+71(SP), AX
	0x0941 02369 (<autogenerated>:1)	MOVB	AL, ""..autotmp_25+72(SP)
	0x0945 02373 (<autogenerated>:1)	TESTB	AL, AL
	0x0947 02375 (<autogenerated>:1)	JNE	2382
	0x0949 02377 (<autogenerated>:1)	JMP	6300
	0x094e 02382 (<autogenerated>:1)	PCDATA	$0, $1
	0x094e 02382 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x0956 02390 (<autogenerated>:1)	MOVQ	472(AX), CX
	0x095d 02397 (<autogenerated>:1)	MOVQ	464(AX), AX
	0x0964 02404 (<autogenerated>:1)	PCDATA	$0, $0
	0x0964 02404 (<autogenerated>:1)	PCDATA	$1, $5
	0x0964 02404 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_64+664(SP)
	0x096c 02412 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_64+672(SP)
	0x0974 02420 (<autogenerated>:1)	PCDATA	$0, $1
	0x0974 02420 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x097c 02428 (<autogenerated>:1)	MOVQ	472(AX), CX
	0x0983 02435 (<autogenerated>:1)	MOVQ	464(AX), AX
	0x098a 02442 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_65+648(SP)
	0x0992 02450 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_65+656(SP)
	0x099a 02458 (<autogenerated>:1)	CMPQ	""..autotmp_64+672(SP), CX
	0x09a2 02466 (<autogenerated>:1)	SETEQ	CL
	0x09a5 02469 (<autogenerated>:1)	JEQ	2476
	0x09a7 02471 (<autogenerated>:1)	JMP	6293
	0x09ac 02476 (<autogenerated>:1)	PCDATA	$0, $2
	0x09ac 02476 (<autogenerated>:1)	MOVQ	""..autotmp_64+664(SP), CX
	0x09b4 02484 (<autogenerated>:1)	PCDATA	$0, $1
	0x09b4 02484 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x09b8 02488 (<autogenerated>:1)	PCDATA	$0, $0
	0x09b8 02488 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x09bd 02493 (<autogenerated>:1)	PCDATA	$1, $0
	0x09bd 02493 (<autogenerated>:1)	MOVQ	""..autotmp_64+672(SP), AX
	0x09c5 02501 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x09ca 02506 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x09cf 02511 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x09d4 02516 (<autogenerated>:1)	JMP	2518
	0x09d6 02518 (<autogenerated>:1)	MOVB	AL, ""..autotmp_25+72(SP)
	0x09da 02522 (<autogenerated>:1)	JMP	2524
	0x09dc 02524 (<autogenerated>:1)	MOVBLZX	""..autotmp_25+72(SP), AX
	0x09e1 02529 (<autogenerated>:1)	MOVB	AL, ""..autotmp_24+73(SP)
	0x09e5 02533 (<autogenerated>:1)	TESTB	AL, AL
	0x09e7 02535 (<autogenerated>:1)	JNE	2542
	0x09e9 02537 (<autogenerated>:1)	JMP	6288
	0x09ee 02542 (<autogenerated>:1)	PCDATA	$0, $1
	0x09ee 02542 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x09f6 02550 (<autogenerated>:1)	MOVQ	488(AX), CX
	0x09fd 02557 (<autogenerated>:1)	MOVQ	480(AX), AX
	0x0a04 02564 (<autogenerated>:1)	PCDATA	$0, $0
	0x0a04 02564 (<autogenerated>:1)	PCDATA	$1, $6
	0x0a04 02564 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_66+632(SP)
	0x0a0c 02572 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_66+640(SP)
	0x0a14 02580 (<autogenerated>:1)	PCDATA	$0, $1
	0x0a14 02580 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x0a1c 02588 (<autogenerated>:1)	MOVQ	488(AX), CX
	0x0a23 02595 (<autogenerated>:1)	MOVQ	480(AX), AX
	0x0a2a 02602 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_67+616(SP)
	0x0a32 02610 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_67+624(SP)
	0x0a3a 02618 (<autogenerated>:1)	CMPQ	""..autotmp_66+640(SP), CX
	0x0a42 02626 (<autogenerated>:1)	SETEQ	CL
	0x0a45 02629 (<autogenerated>:1)	JEQ	2636
	0x0a47 02631 (<autogenerated>:1)	JMP	6281
	0x0a4c 02636 (<autogenerated>:1)	PCDATA	$0, $2
	0x0a4c 02636 (<autogenerated>:1)	MOVQ	""..autotmp_66+632(SP), CX
	0x0a54 02644 (<autogenerated>:1)	PCDATA	$0, $1
	0x0a54 02644 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0a58 02648 (<autogenerated>:1)	PCDATA	$0, $0
	0x0a58 02648 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0a5d 02653 (<autogenerated>:1)	PCDATA	$1, $0
	0x0a5d 02653 (<autogenerated>:1)	MOVQ	""..autotmp_66+640(SP), AX
	0x0a65 02661 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x0a6a 02666 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x0a6f 02671 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x0a74 02676 (<autogenerated>:1)	JMP	2678
	0x0a76 02678 (<autogenerated>:1)	MOVB	AL, ""..autotmp_24+73(SP)
	0x0a7a 02682 (<autogenerated>:1)	JMP	2684
	0x0a7c 02684 (<autogenerated>:1)	MOVBLZX	""..autotmp_24+73(SP), AX
	0x0a81 02689 (<autogenerated>:1)	MOVB	AL, ""..autotmp_23+74(SP)
	0x0a85 02693 (<autogenerated>:1)	TESTB	AL, AL
	0x0a87 02695 (<autogenerated>:1)	JNE	2702
	0x0a89 02697 (<autogenerated>:1)	JMP	6276
	0x0a8e 02702 (<autogenerated>:1)	PCDATA	$0, $1
	0x0a8e 02702 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x0a96 02710 (<autogenerated>:1)	MOVQ	504(AX), CX
	0x0a9d 02717 (<autogenerated>:1)	MOVQ	496(AX), AX
	0x0aa4 02724 (<autogenerated>:1)	PCDATA	$0, $0
	0x0aa4 02724 (<autogenerated>:1)	PCDATA	$1, $7
	0x0aa4 02724 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_68+600(SP)
	0x0aac 02732 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_68+608(SP)
	0x0ab4 02740 (<autogenerated>:1)	PCDATA	$0, $1
	0x0ab4 02740 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x0abc 02748 (<autogenerated>:1)	MOVQ	504(AX), CX
	0x0ac3 02755 (<autogenerated>:1)	MOVQ	496(AX), AX
	0x0aca 02762 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_69+584(SP)
	0x0ad2 02770 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_69+592(SP)
	0x0ada 02778 (<autogenerated>:1)	CMPQ	""..autotmp_68+608(SP), CX
	0x0ae2 02786 (<autogenerated>:1)	SETEQ	CL
	0x0ae5 02789 (<autogenerated>:1)	JEQ	2796
	0x0ae7 02791 (<autogenerated>:1)	JMP	6269
	0x0aec 02796 (<autogenerated>:1)	PCDATA	$0, $2
	0x0aec 02796 (<autogenerated>:1)	MOVQ	""..autotmp_68+600(SP), CX
	0x0af4 02804 (<autogenerated>:1)	PCDATA	$0, $1
	0x0af4 02804 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0af8 02808 (<autogenerated>:1)	PCDATA	$0, $0
	0x0af8 02808 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0afd 02813 (<autogenerated>:1)	PCDATA	$1, $0
	0x0afd 02813 (<autogenerated>:1)	MOVQ	""..autotmp_68+608(SP), AX
	0x0b05 02821 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x0b0a 02826 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x0b0f 02831 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x0b14 02836 (<autogenerated>:1)	JMP	2838
	0x0b16 02838 (<autogenerated>:1)	MOVB	AL, ""..autotmp_23+74(SP)
	0x0b1a 02842 (<autogenerated>:1)	JMP	2844
	0x0b1c 02844 (<autogenerated>:1)	MOVBLZX	""..autotmp_23+74(SP), AX
	0x0b21 02849 (<autogenerated>:1)	MOVB	AL, ""..autotmp_22+75(SP)
	0x0b25 02853 (<autogenerated>:1)	TESTB	AL, AL
	0x0b27 02855 (<autogenerated>:1)	JNE	2862
	0x0b29 02857 (<autogenerated>:1)	JMP	6264
	0x0b2e 02862 (<autogenerated>:1)	PCDATA	$0, $1
	0x0b2e 02862 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x0b36 02870 (<autogenerated>:1)	MOVQ	520(AX), CX
	0x0b3d 02877 (<autogenerated>:1)	MOVQ	512(AX), AX
	0x0b44 02884 (<autogenerated>:1)	PCDATA	$0, $0
	0x0b44 02884 (<autogenerated>:1)	PCDATA	$1, $8
	0x0b44 02884 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_70+568(SP)
	0x0b4c 02892 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_70+576(SP)
	0x0b54 02900 (<autogenerated>:1)	PCDATA	$0, $1
	0x0b54 02900 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x0b5c 02908 (<autogenerated>:1)	MOVQ	520(AX), CX
	0x0b63 02915 (<autogenerated>:1)	MOVQ	512(AX), AX
	0x0b6a 02922 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_71+552(SP)
	0x0b72 02930 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_71+560(SP)
	0x0b7a 02938 (<autogenerated>:1)	CMPQ	""..autotmp_70+576(SP), CX
	0x0b82 02946 (<autogenerated>:1)	SETEQ	CL
	0x0b85 02949 (<autogenerated>:1)	JEQ	2956
	0x0b87 02951 (<autogenerated>:1)	JMP	6257
	0x0b8c 02956 (<autogenerated>:1)	PCDATA	$0, $2
	0x0b8c 02956 (<autogenerated>:1)	MOVQ	""..autotmp_70+568(SP), CX
	0x0b94 02964 (<autogenerated>:1)	PCDATA	$0, $1
	0x0b94 02964 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0b98 02968 (<autogenerated>:1)	PCDATA	$0, $0
	0x0b98 02968 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0b9d 02973 (<autogenerated>:1)	PCDATA	$1, $0
	0x0b9d 02973 (<autogenerated>:1)	MOVQ	""..autotmp_70+576(SP), AX
	0x0ba5 02981 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x0baa 02986 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x0baf 02991 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x0bb4 02996 (<autogenerated>:1)	JMP	2998
	0x0bb6 02998 (<autogenerated>:1)	MOVB	AL, ""..autotmp_22+75(SP)
	0x0bba 03002 (<autogenerated>:1)	JMP	3004
	0x0bbc 03004 (<autogenerated>:1)	MOVBLZX	""..autotmp_22+75(SP), AX
	0x0bc1 03009 (<autogenerated>:1)	MOVB	AL, ""..autotmp_21+76(SP)
	0x0bc5 03013 (<autogenerated>:1)	TESTB	AL, AL
	0x0bc7 03015 (<autogenerated>:1)	JNE	3022
	0x0bc9 03017 (<autogenerated>:1)	JMP	6252
	0x0bce 03022 (<autogenerated>:1)	PCDATA	$0, $1
	0x0bce 03022 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x0bd6 03030 (<autogenerated>:1)	MOVQ	536(AX), CX
	0x0bdd 03037 (<autogenerated>:1)	MOVQ	528(AX), AX
	0x0be4 03044 (<autogenerated>:1)	PCDATA	$0, $0
	0x0be4 03044 (<autogenerated>:1)	PCDATA	$1, $9
	0x0be4 03044 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_72+536(SP)
	0x0bec 03052 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_72+544(SP)
	0x0bf4 03060 (<autogenerated>:1)	PCDATA	$0, $1
	0x0bf4 03060 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x0bfc 03068 (<autogenerated>:1)	MOVQ	536(AX), CX
	0x0c03 03075 (<autogenerated>:1)	MOVQ	528(AX), AX
	0x0c0a 03082 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_73+520(SP)
	0x0c12 03090 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_73+528(SP)
	0x0c1a 03098 (<autogenerated>:1)	CMPQ	""..autotmp_72+544(SP), CX
	0x0c22 03106 (<autogenerated>:1)	SETEQ	CL
	0x0c25 03109 (<autogenerated>:1)	JEQ	3116
	0x0c27 03111 (<autogenerated>:1)	JMP	6245
	0x0c2c 03116 (<autogenerated>:1)	PCDATA	$0, $2
	0x0c2c 03116 (<autogenerated>:1)	MOVQ	""..autotmp_72+536(SP), CX
	0x0c34 03124 (<autogenerated>:1)	PCDATA	$0, $1
	0x0c34 03124 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0c38 03128 (<autogenerated>:1)	PCDATA	$0, $0
	0x0c38 03128 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0c3d 03133 (<autogenerated>:1)	PCDATA	$1, $0
	0x0c3d 03133 (<autogenerated>:1)	MOVQ	""..autotmp_72+544(SP), AX
	0x0c45 03141 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x0c4a 03146 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x0c4f 03151 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x0c54 03156 (<autogenerated>:1)	JMP	3158
	0x0c56 03158 (<autogenerated>:1)	MOVB	AL, ""..autotmp_21+76(SP)
	0x0c5a 03162 (<autogenerated>:1)	JMP	3164
	0x0c5c 03164 (<autogenerated>:1)	MOVBLZX	""..autotmp_21+76(SP), AX
	0x0c61 03169 (<autogenerated>:1)	MOVB	AL, ""..autotmp_20+77(SP)
	0x0c65 03173 (<autogenerated>:1)	TESTB	AL, AL
	0x0c67 03175 (<autogenerated>:1)	JNE	3182
	0x0c69 03177 (<autogenerated>:1)	JMP	6240
	0x0c6e 03182 (<autogenerated>:1)	PCDATA	$0, $1
	0x0c6e 03182 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x0c76 03190 (<autogenerated>:1)	MOVQ	552(AX), CX
	0x0c7d 03197 (<autogenerated>:1)	MOVQ	544(AX), AX
	0x0c84 03204 (<autogenerated>:1)	PCDATA	$0, $0
	0x0c84 03204 (<autogenerated>:1)	PCDATA	$1, $10
	0x0c84 03204 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_74+504(SP)
	0x0c8c 03212 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_74+512(SP)
	0x0c94 03220 (<autogenerated>:1)	PCDATA	$0, $1
	0x0c94 03220 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x0c9c 03228 (<autogenerated>:1)	MOVQ	552(AX), CX
	0x0ca3 03235 (<autogenerated>:1)	MOVQ	544(AX), AX
	0x0caa 03242 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_75+488(SP)
	0x0cb2 03250 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_75+496(SP)
	0x0cba 03258 (<autogenerated>:1)	CMPQ	""..autotmp_74+512(SP), CX
	0x0cc2 03266 (<autogenerated>:1)	SETEQ	CL
	0x0cc5 03269 (<autogenerated>:1)	JEQ	3276
	0x0cc7 03271 (<autogenerated>:1)	JMP	6233
	0x0ccc 03276 (<autogenerated>:1)	PCDATA	$0, $2
	0x0ccc 03276 (<autogenerated>:1)	MOVQ	""..autotmp_74+504(SP), CX
	0x0cd4 03284 (<autogenerated>:1)	PCDATA	$0, $1
	0x0cd4 03284 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0cd8 03288 (<autogenerated>:1)	PCDATA	$0, $0
	0x0cd8 03288 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0cdd 03293 (<autogenerated>:1)	PCDATA	$1, $0
	0x0cdd 03293 (<autogenerated>:1)	MOVQ	""..autotmp_74+512(SP), AX
	0x0ce5 03301 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x0cea 03306 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x0cef 03311 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x0cf4 03316 (<autogenerated>:1)	JMP	3318
	0x0cf6 03318 (<autogenerated>:1)	MOVB	AL, ""..autotmp_20+77(SP)
	0x0cfa 03322 (<autogenerated>:1)	JMP	3324
	0x0cfc 03324 (<autogenerated>:1)	MOVBLZX	""..autotmp_20+77(SP), AX
	0x0d01 03329 (<autogenerated>:1)	MOVB	AL, ""..autotmp_19+78(SP)
	0x0d05 03333 (<autogenerated>:1)	TESTB	AL, AL
	0x0d07 03335 (<autogenerated>:1)	JNE	3342
	0x0d09 03337 (<autogenerated>:1)	JMP	6228
	0x0d0e 03342 (<autogenerated>:1)	PCDATA	$0, $1
	0x0d0e 03342 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x0d16 03350 (<autogenerated>:1)	MOVQ	568(AX), CX
	0x0d1d 03357 (<autogenerated>:1)	MOVQ	560(AX), AX
	0x0d24 03364 (<autogenerated>:1)	PCDATA	$0, $0
	0x0d24 03364 (<autogenerated>:1)	PCDATA	$1, $11
	0x0d24 03364 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_76+472(SP)
	0x0d2c 03372 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_76+480(SP)
	0x0d34 03380 (<autogenerated>:1)	PCDATA	$0, $1
	0x0d34 03380 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x0d3c 03388 (<autogenerated>:1)	MOVQ	568(AX), CX
	0x0d43 03395 (<autogenerated>:1)	MOVQ	560(AX), AX
	0x0d4a 03402 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_77+456(SP)
	0x0d52 03410 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_77+464(SP)
	0x0d5a 03418 (<autogenerated>:1)	CMPQ	""..autotmp_76+480(SP), CX
	0x0d62 03426 (<autogenerated>:1)	SETEQ	CL
	0x0d65 03429 (<autogenerated>:1)	JEQ	3436
	0x0d67 03431 (<autogenerated>:1)	JMP	6221
	0x0d6c 03436 (<autogenerated>:1)	PCDATA	$0, $2
	0x0d6c 03436 (<autogenerated>:1)	MOVQ	""..autotmp_76+472(SP), CX
	0x0d74 03444 (<autogenerated>:1)	PCDATA	$0, $1
	0x0d74 03444 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0d78 03448 (<autogenerated>:1)	PCDATA	$0, $0
	0x0d78 03448 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0d7d 03453 (<autogenerated>:1)	PCDATA	$1, $0
	0x0d7d 03453 (<autogenerated>:1)	MOVQ	""..autotmp_76+480(SP), AX
	0x0d85 03461 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x0d8a 03466 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x0d8f 03471 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x0d94 03476 (<autogenerated>:1)	JMP	3478
	0x0d96 03478 (<autogenerated>:1)	MOVB	AL, ""..autotmp_19+78(SP)
	0x0d9a 03482 (<autogenerated>:1)	JMP	3484
	0x0d9c 03484 (<autogenerated>:1)	MOVBLZX	""..autotmp_19+78(SP), AX
	0x0da1 03489 (<autogenerated>:1)	MOVB	AL, ""..autotmp_18+79(SP)
	0x0da5 03493 (<autogenerated>:1)	TESTB	AL, AL
	0x0da7 03495 (<autogenerated>:1)	JNE	3502
	0x0da9 03497 (<autogenerated>:1)	JMP	6216
	0x0dae 03502 (<autogenerated>:1)	PCDATA	$0, $1
	0x0dae 03502 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x0db6 03510 (<autogenerated>:1)	MOVQ	584(AX), CX
	0x0dbd 03517 (<autogenerated>:1)	MOVQ	576(AX), AX
	0x0dc4 03524 (<autogenerated>:1)	PCDATA	$0, $0
	0x0dc4 03524 (<autogenerated>:1)	PCDATA	$1, $12
	0x0dc4 03524 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_78+440(SP)
	0x0dcc 03532 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_78+448(SP)
	0x0dd4 03540 (<autogenerated>:1)	PCDATA	$0, $1
	0x0dd4 03540 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x0ddc 03548 (<autogenerated>:1)	MOVQ	584(AX), CX
	0x0de3 03555 (<autogenerated>:1)	MOVQ	576(AX), AX
	0x0dea 03562 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_79+424(SP)
	0x0df2 03570 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_79+432(SP)
	0x0dfa 03578 (<autogenerated>:1)	CMPQ	""..autotmp_78+448(SP), CX
	0x0e02 03586 (<autogenerated>:1)	SETEQ	CL
	0x0e05 03589 (<autogenerated>:1)	JEQ	3596
	0x0e07 03591 (<autogenerated>:1)	JMP	6209
	0x0e0c 03596 (<autogenerated>:1)	PCDATA	$0, $2
	0x0e0c 03596 (<autogenerated>:1)	MOVQ	""..autotmp_78+440(SP), CX
	0x0e14 03604 (<autogenerated>:1)	PCDATA	$0, $1
	0x0e14 03604 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0e18 03608 (<autogenerated>:1)	PCDATA	$0, $0
	0x0e18 03608 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0e1d 03613 (<autogenerated>:1)	PCDATA	$1, $0
	0x0e1d 03613 (<autogenerated>:1)	MOVQ	""..autotmp_78+448(SP), AX
	0x0e25 03621 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x0e2a 03626 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x0e2f 03631 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x0e34 03636 (<autogenerated>:1)	JMP	3638
	0x0e36 03638 (<autogenerated>:1)	MOVB	AL, ""..autotmp_18+79(SP)
	0x0e3a 03642 (<autogenerated>:1)	JMP	3644
	0x0e3c 03644 (<autogenerated>:1)	MOVBLZX	""..autotmp_18+79(SP), AX
	0x0e41 03649 (<autogenerated>:1)	MOVB	AL, ""..autotmp_17+80(SP)
	0x0e45 03653 (<autogenerated>:1)	TESTB	AL, AL
	0x0e47 03655 (<autogenerated>:1)	JNE	3662
	0x0e49 03657 (<autogenerated>:1)	JMP	6204
	0x0e4e 03662 (<autogenerated>:1)	PCDATA	$0, $1
	0x0e4e 03662 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x0e56 03670 (<autogenerated>:1)	MOVQ	600(AX), CX
	0x0e5d 03677 (<autogenerated>:1)	MOVQ	592(AX), AX
	0x0e64 03684 (<autogenerated>:1)	PCDATA	$0, $0
	0x0e64 03684 (<autogenerated>:1)	PCDATA	$1, $13
	0x0e64 03684 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_80+408(SP)
	0x0e6c 03692 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_80+416(SP)
	0x0e74 03700 (<autogenerated>:1)	PCDATA	$0, $1
	0x0e74 03700 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x0e7c 03708 (<autogenerated>:1)	MOVQ	600(AX), CX
	0x0e83 03715 (<autogenerated>:1)	MOVQ	592(AX), AX
	0x0e8a 03722 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_81+392(SP)
	0x0e92 03730 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_81+400(SP)
	0x0e9a 03738 (<autogenerated>:1)	CMPQ	""..autotmp_80+416(SP), CX
	0x0ea2 03746 (<autogenerated>:1)	SETEQ	CL
	0x0ea5 03749 (<autogenerated>:1)	JEQ	3756
	0x0ea7 03751 (<autogenerated>:1)	JMP	6197
	0x0eac 03756 (<autogenerated>:1)	PCDATA	$0, $2
	0x0eac 03756 (<autogenerated>:1)	MOVQ	""..autotmp_80+408(SP), CX
	0x0eb4 03764 (<autogenerated>:1)	PCDATA	$0, $1
	0x0eb4 03764 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0eb8 03768 (<autogenerated>:1)	PCDATA	$0, $0
	0x0eb8 03768 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0ebd 03773 (<autogenerated>:1)	PCDATA	$1, $0
	0x0ebd 03773 (<autogenerated>:1)	MOVQ	""..autotmp_80+416(SP), AX
	0x0ec5 03781 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x0eca 03786 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x0ecf 03791 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x0ed4 03796 (<autogenerated>:1)	JMP	3798
	0x0ed6 03798 (<autogenerated>:1)	MOVB	AL, ""..autotmp_17+80(SP)
	0x0eda 03802 (<autogenerated>:1)	JMP	3804
	0x0edc 03804 (<autogenerated>:1)	MOVBLZX	""..autotmp_17+80(SP), AX
	0x0ee1 03809 (<autogenerated>:1)	MOVB	AL, ""..autotmp_16+81(SP)
	0x0ee5 03813 (<autogenerated>:1)	TESTB	AL, AL
	0x0ee7 03815 (<autogenerated>:1)	JNE	3822
	0x0ee9 03817 (<autogenerated>:1)	JMP	6192
	0x0eee 03822 (<autogenerated>:1)	PCDATA	$0, $1
	0x0eee 03822 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x0ef6 03830 (<autogenerated>:1)	MOVQ	616(AX), CX
	0x0efd 03837 (<autogenerated>:1)	MOVQ	608(AX), AX
	0x0f04 03844 (<autogenerated>:1)	PCDATA	$0, $0
	0x0f04 03844 (<autogenerated>:1)	PCDATA	$1, $14
	0x0f04 03844 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_82+376(SP)
	0x0f0c 03852 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_82+384(SP)
	0x0f14 03860 (<autogenerated>:1)	PCDATA	$0, $1
	0x0f14 03860 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x0f1c 03868 (<autogenerated>:1)	MOVQ	616(AX), CX
	0x0f23 03875 (<autogenerated>:1)	MOVQ	608(AX), AX
	0x0f2a 03882 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_83+360(SP)
	0x0f32 03890 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_83+368(SP)
	0x0f3a 03898 (<autogenerated>:1)	CMPQ	""..autotmp_82+384(SP), CX
	0x0f42 03906 (<autogenerated>:1)	SETEQ	CL
	0x0f45 03909 (<autogenerated>:1)	JEQ	3916
	0x0f47 03911 (<autogenerated>:1)	JMP	6185
	0x0f4c 03916 (<autogenerated>:1)	PCDATA	$0, $2
	0x0f4c 03916 (<autogenerated>:1)	MOVQ	""..autotmp_82+376(SP), CX
	0x0f54 03924 (<autogenerated>:1)	PCDATA	$0, $1
	0x0f54 03924 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0f58 03928 (<autogenerated>:1)	PCDATA	$0, $0
	0x0f58 03928 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0f5d 03933 (<autogenerated>:1)	PCDATA	$1, $0
	0x0f5d 03933 (<autogenerated>:1)	MOVQ	""..autotmp_82+384(SP), AX
	0x0f65 03941 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x0f6a 03946 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x0f6f 03951 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x0f74 03956 (<autogenerated>:1)	JMP	3958
	0x0f76 03958 (<autogenerated>:1)	MOVB	AL, ""..autotmp_16+81(SP)
	0x0f7a 03962 (<autogenerated>:1)	JMP	3964
	0x0f7c 03964 (<autogenerated>:1)	MOVBLZX	""..autotmp_16+81(SP), AX
	0x0f81 03969 (<autogenerated>:1)	MOVB	AL, ""..autotmp_15+82(SP)
	0x0f85 03973 (<autogenerated>:1)	TESTB	AL, AL
	0x0f87 03975 (<autogenerated>:1)	JNE	3982
	0x0f89 03977 (<autogenerated>:1)	JMP	6180
	0x0f8e 03982 (<autogenerated>:1)	PCDATA	$0, $1
	0x0f8e 03982 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x0f96 03990 (<autogenerated>:1)	MOVQ	632(AX), CX
	0x0f9d 03997 (<autogenerated>:1)	MOVQ	624(AX), AX
	0x0fa4 04004 (<autogenerated>:1)	PCDATA	$0, $0
	0x0fa4 04004 (<autogenerated>:1)	PCDATA	$1, $15
	0x0fa4 04004 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_84+344(SP)
	0x0fac 04012 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_84+352(SP)
	0x0fb4 04020 (<autogenerated>:1)	PCDATA	$0, $1
	0x0fb4 04020 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x0fbc 04028 (<autogenerated>:1)	MOVQ	632(AX), CX
	0x0fc3 04035 (<autogenerated>:1)	MOVQ	624(AX), AX
	0x0fca 04042 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_85+328(SP)
	0x0fd2 04050 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_85+336(SP)
	0x0fda 04058 (<autogenerated>:1)	CMPQ	""..autotmp_84+352(SP), CX
	0x0fe2 04066 (<autogenerated>:1)	SETEQ	CL
	0x0fe5 04069 (<autogenerated>:1)	JEQ	4076
	0x0fe7 04071 (<autogenerated>:1)	JMP	6173
	0x0fec 04076 (<autogenerated>:1)	PCDATA	$0, $2
	0x0fec 04076 (<autogenerated>:1)	MOVQ	""..autotmp_84+344(SP), CX
	0x0ff4 04084 (<autogenerated>:1)	PCDATA	$0, $1
	0x0ff4 04084 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0ff8 04088 (<autogenerated>:1)	PCDATA	$0, $0
	0x0ff8 04088 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0ffd 04093 (<autogenerated>:1)	PCDATA	$1, $0
	0x0ffd 04093 (<autogenerated>:1)	MOVQ	""..autotmp_84+352(SP), AX
	0x1005 04101 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x100a 04106 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x100f 04111 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x1014 04116 (<autogenerated>:1)	JMP	4118
	0x1016 04118 (<autogenerated>:1)	MOVB	AL, ""..autotmp_15+82(SP)
	0x101a 04122 (<autogenerated>:1)	JMP	4124
	0x101c 04124 (<autogenerated>:1)	MOVBLZX	""..autotmp_15+82(SP), AX
	0x1021 04129 (<autogenerated>:1)	MOVB	AL, ""..autotmp_14+83(SP)
	0x1025 04133 (<autogenerated>:1)	TESTB	AL, AL
	0x1027 04135 (<autogenerated>:1)	JNE	4142
	0x1029 04137 (<autogenerated>:1)	JMP	6168
	0x102e 04142 (<autogenerated>:1)	PCDATA	$0, $1
	0x102e 04142 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x1036 04150 (<autogenerated>:1)	MOVQ	648(AX), CX
	0x103d 04157 (<autogenerated>:1)	MOVQ	640(AX), AX
	0x1044 04164 (<autogenerated>:1)	PCDATA	$0, $0
	0x1044 04164 (<autogenerated>:1)	PCDATA	$1, $16
	0x1044 04164 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_86+312(SP)
	0x104c 04172 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_86+320(SP)
	0x1054 04180 (<autogenerated>:1)	PCDATA	$0, $1
	0x1054 04180 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x105c 04188 (<autogenerated>:1)	MOVQ	648(AX), CX
	0x1063 04195 (<autogenerated>:1)	MOVQ	640(AX), AX
	0x106a 04202 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_87+296(SP)
	0x1072 04210 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_87+304(SP)
	0x107a 04218 (<autogenerated>:1)	CMPQ	""..autotmp_86+320(SP), CX
	0x1082 04226 (<autogenerated>:1)	SETEQ	CL
	0x1085 04229 (<autogenerated>:1)	JEQ	4236
	0x1087 04231 (<autogenerated>:1)	JMP	6161
	0x108c 04236 (<autogenerated>:1)	PCDATA	$0, $2
	0x108c 04236 (<autogenerated>:1)	MOVQ	""..autotmp_86+312(SP), CX
	0x1094 04244 (<autogenerated>:1)	PCDATA	$0, $1
	0x1094 04244 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x1098 04248 (<autogenerated>:1)	PCDATA	$0, $0
	0x1098 04248 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x109d 04253 (<autogenerated>:1)	PCDATA	$1, $0
	0x109d 04253 (<autogenerated>:1)	MOVQ	""..autotmp_86+320(SP), AX
	0x10a5 04261 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x10aa 04266 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x10af 04271 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x10b4 04276 (<autogenerated>:1)	JMP	4278
	0x10b6 04278 (<autogenerated>:1)	MOVB	AL, ""..autotmp_14+83(SP)
	0x10ba 04282 (<autogenerated>:1)	JMP	4284
	0x10bc 04284 (<autogenerated>:1)	MOVBLZX	""..autotmp_14+83(SP), AX
	0x10c1 04289 (<autogenerated>:1)	MOVB	AL, ""..autotmp_13+84(SP)
	0x10c5 04293 (<autogenerated>:1)	TESTB	AL, AL
	0x10c7 04295 (<autogenerated>:1)	JNE	4302
	0x10c9 04297 (<autogenerated>:1)	JMP	6156
	0x10ce 04302 (<autogenerated>:1)	PCDATA	$0, $1
	0x10ce 04302 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x10d6 04310 (<autogenerated>:1)	PCDATA	$0, $2
	0x10d6 04310 (<autogenerated>:1)	MOVQ	656(AX), CX
	0x10dd 04317 (<autogenerated>:1)	PCDATA	$0, $3
	0x10dd 04317 (<autogenerated>:1)	MOVQ	664(AX), AX
	0x10e4 04324 (<autogenerated>:1)	PCDATA	$0, $0
	0x10e4 04324 (<autogenerated>:1)	PCDATA	$1, $17
	0x10e4 04324 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_88+280(SP)
	0x10ec 04332 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_88+288(SP)
	0x10f4 04340 (<autogenerated>:1)	PCDATA	$0, $1
	0x10f4 04340 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x10fc 04348 (<autogenerated>:1)	PCDATA	$0, $2
	0x10fc 04348 (<autogenerated>:1)	MOVQ	656(AX), CX
	0x1103 04355 (<autogenerated>:1)	PCDATA	$0, $3
	0x1103 04355 (<autogenerated>:1)	MOVQ	664(AX), AX
	0x110a 04362 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_89+264(SP)
	0x1112 04370 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_89+272(SP)
	0x111a 04378 (<autogenerated>:1)	CMPQ	""..autotmp_88+288(SP), AX
	0x1122 04386 (<autogenerated>:1)	SETEQ	AL
	0x1125 04389 (<autogenerated>:1)	JEQ	4396
	0x1127 04391 (<autogenerated>:1)	JMP	6151
	0x112c 04396 (<autogenerated>:1)	PCDATA	$0, $2
	0x112c 04396 (<autogenerated>:1)	MOVQ	""..autotmp_88+280(SP), AX
	0x1134 04404 (<autogenerated>:1)	PCDATA	$0, $3
	0x1134 04404 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x1138 04408 (<autogenerated>:1)	PCDATA	$0, $0
	0x1138 04408 (<autogenerated>:1)	MOVQ	CX, 8(SP)
	0x113d 04413 (<autogenerated>:1)	PCDATA	$1, $0
	0x113d 04413 (<autogenerated>:1)	MOVQ	""..autotmp_88+288(SP), AX
	0x1145 04421 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x114a 04426 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x114f 04431 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x1154 04436 (<autogenerated>:1)	JMP	4438
	0x1156 04438 (<autogenerated>:1)	MOVB	AL, ""..autotmp_13+84(SP)
	0x115a 04442 (<autogenerated>:1)	JMP	4444
	0x115c 04444 (<autogenerated>:1)	MOVBLZX	""..autotmp_13+84(SP), AX
	0x1161 04449 (<autogenerated>:1)	MOVB	AL, ""..autotmp_12+85(SP)
	0x1165 04453 (<autogenerated>:1)	TESTB	AL, AL
	0x1167 04455 (<autogenerated>:1)	JNE	4462
	0x1169 04457 (<autogenerated>:1)	JMP	6146
	0x116e 04462 (<autogenerated>:1)	PCDATA	$0, $1
	0x116e 04462 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x1176 04470 (<autogenerated>:1)	PCDATA	$0, $2
	0x1176 04470 (<autogenerated>:1)	MOVQ	672(AX), CX
	0x117d 04477 (<autogenerated>:1)	PCDATA	$0, $3
	0x117d 04477 (<autogenerated>:1)	MOVQ	680(AX), AX
	0x1184 04484 (<autogenerated>:1)	PCDATA	$0, $0
	0x1184 04484 (<autogenerated>:1)	PCDATA	$1, $18
	0x1184 04484 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_90+248(SP)
	0x118c 04492 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_90+256(SP)
	0x1194 04500 (<autogenerated>:1)	PCDATA	$0, $1
	0x1194 04500 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x119c 04508 (<autogenerated>:1)	PCDATA	$0, $2
	0x119c 04508 (<autogenerated>:1)	MOVQ	672(AX), CX
	0x11a3 04515 (<autogenerated>:1)	PCDATA	$0, $3
	0x11a3 04515 (<autogenerated>:1)	MOVQ	680(AX), AX
	0x11aa 04522 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_91+232(SP)
	0x11b2 04530 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_91+240(SP)
	0x11ba 04538 (<autogenerated>:1)	CMPQ	""..autotmp_90+256(SP), AX
	0x11c2 04546 (<autogenerated>:1)	SETEQ	AL
	0x11c5 04549 (<autogenerated>:1)	JEQ	4556
	0x11c7 04551 (<autogenerated>:1)	JMP	6141
	0x11cc 04556 (<autogenerated>:1)	PCDATA	$0, $2
	0x11cc 04556 (<autogenerated>:1)	MOVQ	""..autotmp_90+248(SP), AX
	0x11d4 04564 (<autogenerated>:1)	PCDATA	$0, $3
	0x11d4 04564 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x11d8 04568 (<autogenerated>:1)	PCDATA	$0, $0
	0x11d8 04568 (<autogenerated>:1)	MOVQ	CX, 8(SP)
	0x11dd 04573 (<autogenerated>:1)	PCDATA	$1, $0
	0x11dd 04573 (<autogenerated>:1)	MOVQ	""..autotmp_90+256(SP), AX
	0x11e5 04581 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x11ea 04586 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x11ef 04591 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x11f4 04596 (<autogenerated>:1)	JMP	4598
	0x11f6 04598 (<autogenerated>:1)	MOVB	AL, ""..autotmp_12+85(SP)
	0x11fa 04602 (<autogenerated>:1)	JMP	4604
	0x11fc 04604 (<autogenerated>:1)	MOVBLZX	""..autotmp_12+85(SP), AX
	0x1201 04609 (<autogenerated>:1)	MOVB	AL, ""..autotmp_11+86(SP)
	0x1205 04613 (<autogenerated>:1)	TESTB	AL, AL
	0x1207 04615 (<autogenerated>:1)	JNE	4622
	0x1209 04617 (<autogenerated>:1)	JMP	6136
	0x120e 04622 (<autogenerated>:1)	PCDATA	$0, $1
	0x120e 04622 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x1216 04630 (<autogenerated>:1)	PCDATA	$0, $2
	0x1216 04630 (<autogenerated>:1)	MOVQ	688(AX), CX
	0x121d 04637 (<autogenerated>:1)	PCDATA	$0, $3
	0x121d 04637 (<autogenerated>:1)	MOVQ	696(AX), AX
	0x1224 04644 (<autogenerated>:1)	PCDATA	$0, $0
	0x1224 04644 (<autogenerated>:1)	PCDATA	$1, $19
	0x1224 04644 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_92+216(SP)
	0x122c 04652 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_92+224(SP)
	0x1234 04660 (<autogenerated>:1)	PCDATA	$0, $1
	0x1234 04660 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x123c 04668 (<autogenerated>:1)	PCDATA	$0, $2
	0x123c 04668 (<autogenerated>:1)	MOVQ	688(AX), CX
	0x1243 04675 (<autogenerated>:1)	PCDATA	$0, $3
	0x1243 04675 (<autogenerated>:1)	MOVQ	696(AX), AX
	0x124a 04682 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_93+200(SP)
	0x1252 04690 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_93+208(SP)
	0x125a 04698 (<autogenerated>:1)	CMPQ	""..autotmp_92+224(SP), AX
	0x1262 04706 (<autogenerated>:1)	SETEQ	AL
	0x1265 04709 (<autogenerated>:1)	JEQ	4716
	0x1267 04711 (<autogenerated>:1)	JMP	6131
	0x126c 04716 (<autogenerated>:1)	PCDATA	$0, $2
	0x126c 04716 (<autogenerated>:1)	MOVQ	""..autotmp_92+216(SP), AX
	0x1274 04724 (<autogenerated>:1)	PCDATA	$0, $3
	0x1274 04724 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x1278 04728 (<autogenerated>:1)	PCDATA	$0, $0
	0x1278 04728 (<autogenerated>:1)	MOVQ	CX, 8(SP)
	0x127d 04733 (<autogenerated>:1)	PCDATA	$1, $0
	0x127d 04733 (<autogenerated>:1)	MOVQ	""..autotmp_92+224(SP), AX
	0x1285 04741 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x128a 04746 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x128f 04751 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x1294 04756 (<autogenerated>:1)	JMP	4758
	0x1296 04758 (<autogenerated>:1)	MOVB	AL, ""..autotmp_11+86(SP)
	0x129a 04762 (<autogenerated>:1)	JMP	4764
	0x129c 04764 (<autogenerated>:1)	MOVBLZX	""..autotmp_11+86(SP), AX
	0x12a1 04769 (<autogenerated>:1)	MOVB	AL, ""..autotmp_10+87(SP)
	0x12a5 04773 (<autogenerated>:1)	TESTB	AL, AL
	0x12a7 04775 (<autogenerated>:1)	JNE	4782
	0x12a9 04777 (<autogenerated>:1)	JMP	6126
	0x12ae 04782 (<autogenerated>:1)	PCDATA	$0, $1
	0x12ae 04782 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x12b6 04790 (<autogenerated>:1)	PCDATA	$0, $2
	0x12b6 04790 (<autogenerated>:1)	MOVQ	704(AX), CX
	0x12bd 04797 (<autogenerated>:1)	PCDATA	$0, $3
	0x12bd 04797 (<autogenerated>:1)	MOVQ	712(AX), AX
	0x12c4 04804 (<autogenerated>:1)	PCDATA	$0, $0
	0x12c4 04804 (<autogenerated>:1)	PCDATA	$1, $20
	0x12c4 04804 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_94+184(SP)
	0x12cc 04812 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_94+192(SP)
	0x12d4 04820 (<autogenerated>:1)	PCDATA	$0, $1
	0x12d4 04820 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x12dc 04828 (<autogenerated>:1)	PCDATA	$0, $2
	0x12dc 04828 (<autogenerated>:1)	MOVQ	704(AX), CX
	0x12e3 04835 (<autogenerated>:1)	PCDATA	$0, $3
	0x12e3 04835 (<autogenerated>:1)	MOVQ	712(AX), AX
	0x12ea 04842 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_95+168(SP)
	0x12f2 04850 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_95+176(SP)
	0x12fa 04858 (<autogenerated>:1)	CMPQ	""..autotmp_94+192(SP), AX
	0x1302 04866 (<autogenerated>:1)	SETEQ	AL
	0x1305 04869 (<autogenerated>:1)	JEQ	4876
	0x1307 04871 (<autogenerated>:1)	JMP	6121
	0x130c 04876 (<autogenerated>:1)	PCDATA	$0, $2
	0x130c 04876 (<autogenerated>:1)	MOVQ	""..autotmp_94+184(SP), AX
	0x1314 04884 (<autogenerated>:1)	PCDATA	$0, $3
	0x1314 04884 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x1318 04888 (<autogenerated>:1)	PCDATA	$0, $0
	0x1318 04888 (<autogenerated>:1)	MOVQ	CX, 8(SP)
	0x131d 04893 (<autogenerated>:1)	PCDATA	$1, $0
	0x131d 04893 (<autogenerated>:1)	MOVQ	""..autotmp_94+192(SP), AX
	0x1325 04901 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x132a 04906 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x132f 04911 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x1334 04916 (<autogenerated>:1)	JMP	4918
	0x1336 04918 (<autogenerated>:1)	MOVB	AL, ""..autotmp_10+87(SP)
	0x133a 04922 (<autogenerated>:1)	JMP	4924
	0x133c 04924 (<autogenerated>:1)	MOVBLZX	""..autotmp_10+87(SP), AX
	0x1341 04929 (<autogenerated>:1)	MOVB	AL, ""..autotmp_9+35(SP)
	0x1345 04933 (<autogenerated>:1)	TESTB	AL, AL
	0x1347 04935 (<autogenerated>:1)	JNE	4942
	0x1349 04937 (<autogenerated>:1)	JMP	6116
	0x134e 04942 (<autogenerated>:1)	PCDATA	$0, $1
	0x134e 04942 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x1356 04950 (<autogenerated>:1)	PCDATA	$0, $2
	0x1356 04950 (<autogenerated>:1)	MOVQ	720(AX), CX
	0x135d 04957 (<autogenerated>:1)	PCDATA	$0, $3
	0x135d 04957 (<autogenerated>:1)	MOVQ	728(AX), AX
	0x1364 04964 (<autogenerated>:1)	PCDATA	$0, $0
	0x1364 04964 (<autogenerated>:1)	PCDATA	$1, $21
	0x1364 04964 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_96+152(SP)
	0x136c 04972 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_96+160(SP)
	0x1374 04980 (<autogenerated>:1)	PCDATA	$0, $1
	0x1374 04980 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x137c 04988 (<autogenerated>:1)	PCDATA	$0, $2
	0x137c 04988 (<autogenerated>:1)	MOVQ	720(AX), CX
	0x1383 04995 (<autogenerated>:1)	PCDATA	$0, $3
	0x1383 04995 (<autogenerated>:1)	MOVQ	728(AX), AX
	0x138a 05002 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_97+136(SP)
	0x1392 05010 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_97+144(SP)
	0x139a 05018 (<autogenerated>:1)	CMPQ	""..autotmp_96+160(SP), AX
	0x13a2 05026 (<autogenerated>:1)	SETEQ	AL
	0x13a5 05029 (<autogenerated>:1)	JEQ	5036
	0x13a7 05031 (<autogenerated>:1)	JMP	6111
	0x13ac 05036 (<autogenerated>:1)	PCDATA	$0, $2
	0x13ac 05036 (<autogenerated>:1)	MOVQ	""..autotmp_96+152(SP), AX
	0x13b4 05044 (<autogenerated>:1)	PCDATA	$0, $3
	0x13b4 05044 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x13b8 05048 (<autogenerated>:1)	PCDATA	$0, $0
	0x13b8 05048 (<autogenerated>:1)	MOVQ	CX, 8(SP)
	0x13bd 05053 (<autogenerated>:1)	PCDATA	$1, $0
	0x13bd 05053 (<autogenerated>:1)	MOVQ	""..autotmp_96+160(SP), AX
	0x13c5 05061 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x13ca 05066 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x13cf 05071 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x13d4 05076 (<autogenerated>:1)	JMP	5078
	0x13d6 05078 (<autogenerated>:1)	MOVB	AL, ""..autotmp_9+35(SP)
	0x13da 05082 (<autogenerated>:1)	JMP	5084
	0x13dc 05084 (<autogenerated>:1)	MOVBLZX	""..autotmp_9+35(SP), AX
	0x13e1 05089 (<autogenerated>:1)	MOVB	AL, ""..autotmp_8+36(SP)
	0x13e5 05093 (<autogenerated>:1)	TESTB	AL, AL
	0x13e7 05095 (<autogenerated>:1)	JNE	5102
	0x13e9 05097 (<autogenerated>:1)	JMP	6106
	0x13ee 05102 (<autogenerated>:1)	PCDATA	$0, $1
	0x13ee 05102 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x13f6 05110 (<autogenerated>:1)	PCDATA	$0, $2
	0x13f6 05110 (<autogenerated>:1)	MOVQ	736(AX), CX
	0x13fd 05117 (<autogenerated>:1)	PCDATA	$0, $3
	0x13fd 05117 (<autogenerated>:1)	MOVQ	744(AX), AX
	0x1404 05124 (<autogenerated>:1)	PCDATA	$0, $0
	0x1404 05124 (<autogenerated>:1)	PCDATA	$1, $22
	0x1404 05124 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_98+120(SP)
	0x1409 05129 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_98+128(SP)
	0x1411 05137 (<autogenerated>:1)	PCDATA	$0, $1
	0x1411 05137 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x1419 05145 (<autogenerated>:1)	PCDATA	$0, $2
	0x1419 05145 (<autogenerated>:1)	MOVQ	736(AX), CX
	0x1420 05152 (<autogenerated>:1)	PCDATA	$0, $3
	0x1420 05152 (<autogenerated>:1)	MOVQ	744(AX), AX
	0x1427 05159 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_99+104(SP)
	0x142c 05164 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_99+112(SP)
	0x1431 05169 (<autogenerated>:1)	CMPQ	""..autotmp_98+128(SP), AX
	0x1439 05177 (<autogenerated>:1)	SETEQ	AL
	0x143c 05180 (<autogenerated>:1)	JEQ	5187
	0x143e 05182 (<autogenerated>:1)	JMP	6101
	0x1443 05187 (<autogenerated>:1)	PCDATA	$0, $2
	0x1443 05187 (<autogenerated>:1)	MOVQ	""..autotmp_98+120(SP), AX
	0x1448 05192 (<autogenerated>:1)	PCDATA	$0, $3
	0x1448 05192 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x144c 05196 (<autogenerated>:1)	PCDATA	$0, $0
	0x144c 05196 (<autogenerated>:1)	MOVQ	CX, 8(SP)
	0x1451 05201 (<autogenerated>:1)	PCDATA	$1, $0
	0x1451 05201 (<autogenerated>:1)	MOVQ	""..autotmp_98+128(SP), AX
	0x1459 05209 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x145e 05214 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x1463 05219 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x1468 05224 (<autogenerated>:1)	JMP	5226
	0x146a 05226 (<autogenerated>:1)	MOVB	AL, ""..autotmp_8+36(SP)
	0x146e 05230 (<autogenerated>:1)	JMP	5232
	0x1470 05232 (<autogenerated>:1)	MOVBLZX	""..autotmp_8+36(SP), AX
	0x1475 05237 (<autogenerated>:1)	MOVB	AL, ""..autotmp_7+37(SP)
	0x1479 05241 (<autogenerated>:1)	TESTB	AL, AL
	0x147b 05243 (<autogenerated>:1)	JNE	5250
	0x147d 05245 (<autogenerated>:1)	JMP	6096
	0x1482 05250 (<autogenerated>:1)	PCDATA	$0, $1
	0x1482 05250 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x148a 05258 (<autogenerated>:1)	PCDATA	$0, $2
	0x148a 05258 (<autogenerated>:1)	MOVQ	752(AX), CX
	0x1491 05265 (<autogenerated>:1)	PCDATA	$0, $3
	0x1491 05265 (<autogenerated>:1)	MOVQ	760(AX), AX
	0x1498 05272 (<autogenerated>:1)	PCDATA	$0, $0
	0x1498 05272 (<autogenerated>:1)	PCDATA	$1, $23
	0x1498 05272 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_100+920(SP)
	0x14a0 05280 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_100+928(SP)
	0x14a8 05288 (<autogenerated>:1)	PCDATA	$0, $1
	0x14a8 05288 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x14b0 05296 (<autogenerated>:1)	PCDATA	$0, $2
	0x14b0 05296 (<autogenerated>:1)	MOVQ	752(AX), CX
	0x14b7 05303 (<autogenerated>:1)	PCDATA	$0, $3
	0x14b7 05303 (<autogenerated>:1)	MOVQ	760(AX), AX
	0x14be 05310 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_101+904(SP)
	0x14c6 05318 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_101+912(SP)
	0x14ce 05326 (<autogenerated>:1)	CMPQ	""..autotmp_100+928(SP), AX
	0x14d6 05334 (<autogenerated>:1)	SETEQ	AL
	0x14d9 05337 (<autogenerated>:1)	JEQ	5344
	0x14db 05339 (<autogenerated>:1)	JMP	6091
	0x14e0 05344 (<autogenerated>:1)	PCDATA	$0, $2
	0x14e0 05344 (<autogenerated>:1)	MOVQ	""..autotmp_100+920(SP), AX
	0x14e8 05352 (<autogenerated>:1)	PCDATA	$0, $3
	0x14e8 05352 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x14ec 05356 (<autogenerated>:1)	PCDATA	$0, $0
	0x14ec 05356 (<autogenerated>:1)	MOVQ	CX, 8(SP)
	0x14f1 05361 (<autogenerated>:1)	PCDATA	$1, $0
	0x14f1 05361 (<autogenerated>:1)	MOVQ	""..autotmp_100+928(SP), AX
	0x14f9 05369 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x14fe 05374 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x1503 05379 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x1508 05384 (<autogenerated>:1)	JMP	5386
	0x150a 05386 (<autogenerated>:1)	MOVB	AL, ""..autotmp_7+37(SP)
	0x150e 05390 (<autogenerated>:1)	JMP	5392
	0x1510 05392 (<autogenerated>:1)	MOVBLZX	""..autotmp_7+37(SP), AX
	0x1515 05397 (<autogenerated>:1)	MOVB	AL, ""..autotmp_6+38(SP)
	0x1519 05401 (<autogenerated>:1)	TESTB	AL, AL
	0x151b 05403 (<autogenerated>:1)	JNE	5410
	0x151d 05405 (<autogenerated>:1)	JMP	6086
	0x1522 05410 (<autogenerated>:1)	PCDATA	$0, $1
	0x1522 05410 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x152a 05418 (<autogenerated>:1)	PCDATA	$0, $2
	0x152a 05418 (<autogenerated>:1)	MOVQ	768(AX), CX
	0x1531 05425 (<autogenerated>:1)	PCDATA	$0, $3
	0x1531 05425 (<autogenerated>:1)	MOVQ	776(AX), AX
	0x1538 05432 (<autogenerated>:1)	PCDATA	$0, $0
	0x1538 05432 (<autogenerated>:1)	PCDATA	$1, $24
	0x1538 05432 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_102+888(SP)
	0x1540 05440 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_102+896(SP)
	0x1548 05448 (<autogenerated>:1)	PCDATA	$0, $1
	0x1548 05448 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x1550 05456 (<autogenerated>:1)	PCDATA	$0, $2
	0x1550 05456 (<autogenerated>:1)	MOVQ	768(AX), CX
	0x1557 05463 (<autogenerated>:1)	PCDATA	$0, $3
	0x1557 05463 (<autogenerated>:1)	MOVQ	776(AX), AX
	0x155e 05470 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_103+872(SP)
	0x1566 05478 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_103+880(SP)
	0x156e 05486 (<autogenerated>:1)	CMPQ	""..autotmp_102+896(SP), AX
	0x1576 05494 (<autogenerated>:1)	SETEQ	AL
	0x1579 05497 (<autogenerated>:1)	JEQ	5504
	0x157b 05499 (<autogenerated>:1)	JMP	6081
	0x1580 05504 (<autogenerated>:1)	PCDATA	$0, $2
	0x1580 05504 (<autogenerated>:1)	MOVQ	""..autotmp_102+888(SP), AX
	0x1588 05512 (<autogenerated>:1)	PCDATA	$0, $3
	0x1588 05512 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x158c 05516 (<autogenerated>:1)	PCDATA	$0, $0
	0x158c 05516 (<autogenerated>:1)	MOVQ	CX, 8(SP)
	0x1591 05521 (<autogenerated>:1)	PCDATA	$1, $0
	0x1591 05521 (<autogenerated>:1)	MOVQ	""..autotmp_102+896(SP), AX
	0x1599 05529 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x159e 05534 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x15a3 05539 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x15a8 05544 (<autogenerated>:1)	JMP	5546
	0x15aa 05546 (<autogenerated>:1)	MOVB	AL, ""..autotmp_6+38(SP)
	0x15ae 05550 (<autogenerated>:1)	JMP	5552
	0x15b0 05552 (<autogenerated>:1)	MOVBLZX	""..autotmp_6+38(SP), AX
	0x15b5 05557 (<autogenerated>:1)	MOVB	AL, ""..autotmp_5+45(SP)
	0x15b9 05561 (<autogenerated>:1)	TESTB	AL, AL
	0x15bb 05563 (<autogenerated>:1)	JNE	5570
	0x15bd 05565 (<autogenerated>:1)	JMP	6076
	0x15c2 05570 (<autogenerated>:1)	PCDATA	$0, $1
	0x15c2 05570 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x15ca 05578 (<autogenerated>:1)	PCDATA	$0, $2
	0x15ca 05578 (<autogenerated>:1)	MOVQ	784(AX), CX
	0x15d1 05585 (<autogenerated>:1)	PCDATA	$0, $3
	0x15d1 05585 (<autogenerated>:1)	MOVQ	792(AX), AX
	0x15d8 05592 (<autogenerated>:1)	PCDATA	$0, $0
	0x15d8 05592 (<autogenerated>:1)	PCDATA	$1, $25
	0x15d8 05592 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_104+856(SP)
	0x15e0 05600 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_104+864(SP)
	0x15e8 05608 (<autogenerated>:1)	PCDATA	$0, $1
	0x15e8 05608 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x15f0 05616 (<autogenerated>:1)	PCDATA	$0, $2
	0x15f0 05616 (<autogenerated>:1)	MOVQ	784(AX), CX
	0x15f7 05623 (<autogenerated>:1)	PCDATA	$0, $3
	0x15f7 05623 (<autogenerated>:1)	MOVQ	792(AX), AX
	0x15fe 05630 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_105+840(SP)
	0x1606 05638 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_105+848(SP)
	0x160e 05646 (<autogenerated>:1)	CMPQ	""..autotmp_104+864(SP), AX
	0x1616 05654 (<autogenerated>:1)	SETEQ	AL
	0x1619 05657 (<autogenerated>:1)	JEQ	5664
	0x161b 05659 (<autogenerated>:1)	JMP	6071
	0x1620 05664 (<autogenerated>:1)	PCDATA	$0, $2
	0x1620 05664 (<autogenerated>:1)	MOVQ	""..autotmp_104+856(SP), AX
	0x1628 05672 (<autogenerated>:1)	PCDATA	$0, $3
	0x1628 05672 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x162c 05676 (<autogenerated>:1)	PCDATA	$0, $0
	0x162c 05676 (<autogenerated>:1)	MOVQ	CX, 8(SP)
	0x1631 05681 (<autogenerated>:1)	PCDATA	$1, $0
	0x1631 05681 (<autogenerated>:1)	MOVQ	""..autotmp_104+864(SP), AX
	0x1639 05689 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x163e 05694 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x1643 05699 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x1648 05704 (<autogenerated>:1)	JMP	5706
	0x164a 05706 (<autogenerated>:1)	MOVB	AL, ""..autotmp_5+45(SP)
	0x164e 05710 (<autogenerated>:1)	JMP	5712
	0x1650 05712 (<autogenerated>:1)	MOVBLZX	""..autotmp_5+45(SP), AX
	0x1655 05717 (<autogenerated>:1)	MOVB	AL, ""..autotmp_4+56(SP)
	0x1659 05721 (<autogenerated>:1)	TESTB	AL, AL
	0x165b 05723 (<autogenerated>:1)	JNE	5730
	0x165d 05725 (<autogenerated>:1)	JMP	6066
	0x1662 05730 (<autogenerated>:1)	PCDATA	$0, $1
	0x1662 05730 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x166a 05738 (<autogenerated>:1)	PCDATA	$0, $2
	0x166a 05738 (<autogenerated>:1)	MOVQ	800(AX), CX
	0x1671 05745 (<autogenerated>:1)	PCDATA	$0, $3
	0x1671 05745 (<autogenerated>:1)	MOVQ	808(AX), AX
	0x1678 05752 (<autogenerated>:1)	PCDATA	$0, $0
	0x1678 05752 (<autogenerated>:1)	PCDATA	$1, $26
	0x1678 05752 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_106+824(SP)
	0x1680 05760 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_106+832(SP)
	0x1688 05768 (<autogenerated>:1)	PCDATA	$0, $1
	0x1688 05768 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x1690 05776 (<autogenerated>:1)	PCDATA	$0, $2
	0x1690 05776 (<autogenerated>:1)	MOVQ	800(AX), CX
	0x1697 05783 (<autogenerated>:1)	PCDATA	$0, $3
	0x1697 05783 (<autogenerated>:1)	MOVQ	808(AX), AX
	0x169e 05790 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_107+808(SP)
	0x16a6 05798 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_107+816(SP)
	0x16ae 05806 (<autogenerated>:1)	CMPQ	""..autotmp_106+832(SP), AX
	0x16b6 05814 (<autogenerated>:1)	SETEQ	AL
	0x16b9 05817 (<autogenerated>:1)	JEQ	5824
	0x16bb 05819 (<autogenerated>:1)	JMP	6061
	0x16c0 05824 (<autogenerated>:1)	PCDATA	$0, $2
	0x16c0 05824 (<autogenerated>:1)	MOVQ	""..autotmp_106+824(SP), AX
	0x16c8 05832 (<autogenerated>:1)	PCDATA	$0, $3
	0x16c8 05832 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x16cc 05836 (<autogenerated>:1)	PCDATA	$0, $0
	0x16cc 05836 (<autogenerated>:1)	MOVQ	CX, 8(SP)
	0x16d1 05841 (<autogenerated>:1)	PCDATA	$1, $0
	0x16d1 05841 (<autogenerated>:1)	MOVQ	""..autotmp_106+832(SP), AX
	0x16d9 05849 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x16de 05854 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x16e3 05859 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x16e8 05864 (<autogenerated>:1)	JMP	5866
	0x16ea 05866 (<autogenerated>:1)	MOVB	AL, ""..autotmp_4+56(SP)
	0x16ee 05870 (<autogenerated>:1)	JMP	5872
	0x16f0 05872 (<autogenerated>:1)	MOVBLZX	""..autotmp_4+56(SP), AX
	0x16f5 05877 (<autogenerated>:1)	MOVB	AL, ""..autotmp_3+67(SP)
	0x16f9 05881 (<autogenerated>:1)	TESTB	AL, AL
	0x16fb 05883 (<autogenerated>:1)	JNE	5890
	0x16fd 05885 (<autogenerated>:1)	JMP	6059
	0x1702 05890 (<autogenerated>:1)	PCDATA	$0, $1
	0x1702 05890 (<autogenerated>:1)	PCDATA	$1, $27
	0x1702 05890 (<autogenerated>:1)	MOVQ	"".p+952(SP), AX
	0x170a 05898 (<autogenerated>:1)	PCDATA	$0, $2
	0x170a 05898 (<autogenerated>:1)	MOVQ	816(AX), CX
	0x1711 05905 (<autogenerated>:1)	PCDATA	$0, $3
	0x1711 05905 (<autogenerated>:1)	MOVQ	824(AX), AX
	0x1718 05912 (<autogenerated>:1)	PCDATA	$0, $0
	0x1718 05912 (<autogenerated>:1)	PCDATA	$1, $28
	0x1718 05912 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_108+792(SP)
	0x1720 05920 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_108+800(SP)
	0x1728 05928 (<autogenerated>:1)	PCDATA	$0, $1
	0x1728 05928 (<autogenerated>:1)	PCDATA	$1, $29
	0x1728 05928 (<autogenerated>:1)	MOVQ	"".q+960(SP), AX
	0x1730 05936 (<autogenerated>:1)	PCDATA	$0, $2
	0x1730 05936 (<autogenerated>:1)	MOVQ	816(AX), CX
	0x1737 05943 (<autogenerated>:1)	PCDATA	$0, $3
	0x1737 05943 (<autogenerated>:1)	MOVQ	824(AX), AX
	0x173e 05950 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_109+776(SP)
	0x1746 05958 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_109+784(SP)
	0x174e 05966 (<autogenerated>:1)	CMPQ	""..autotmp_108+800(SP), AX
	0x1756 05974 (<autogenerated>:1)	SETEQ	AL
	0x1759 05977 (<autogenerated>:1)	JEQ	5981
	0x175b 05979 (<autogenerated>:1)	JMP	6057
	0x175d 05981 (<autogenerated>:1)	PCDATA	$0, $2
	0x175d 05981 (<autogenerated>:1)	MOVQ	""..autotmp_108+792(SP), AX
	0x1765 05989 (<autogenerated>:1)	PCDATA	$0, $3
	0x1765 05989 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x1769 05993 (<autogenerated>:1)	PCDATA	$0, $0
	0x1769 05993 (<autogenerated>:1)	MOVQ	CX, 8(SP)
	0x176e 05998 (<autogenerated>:1)	PCDATA	$1, $30
	0x176e 05998 (<autogenerated>:1)	MOVQ	""..autotmp_108+800(SP), AX
	0x1776 06006 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x177b 06011 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x1780 06016 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x1785 06021 (<autogenerated>:1)	JMP	6023
	0x1787 06023 (<autogenerated>:1)	MOVB	AL, ""..autotmp_3+67(SP)
	0x178b 06027 (<autogenerated>:1)	JMP	6029
	0x178d 06029 (<autogenerated>:1)	MOVBLZX	""..autotmp_3+67(SP), AX
	0x1792 06034 (<autogenerated>:1)	MOVB	AL, "".~r2+968(SP)
	0x1799 06041 (<autogenerated>:1)	MOVQ	936(SP), BP
	0x17a1 06049 (<autogenerated>:1)	ADDQ	$944, SP
	0x17a8 06056 (<autogenerated>:1)	RET
	0x17a9 06057 (<autogenerated>:1)	PCDATA	$0, $-2
	0x17a9 06057 (<autogenerated>:1)	PCDATA	$1, $-2
	0x17a9 06057 (<autogenerated>:1)	JMP	6023
	0x17ab 06059 (<autogenerated>:1)	JMP	6029
	0x17ad 06061 (<autogenerated>:1)	JMP	5866
	0x17b2 06066 (<autogenerated>:1)	JMP	5872
	0x17b7 06071 (<autogenerated>:1)	JMP	5706
	0x17bc 06076 (<autogenerated>:1)	JMP	5712
	0x17c1 06081 (<autogenerated>:1)	JMP	5546
	0x17c6 06086 (<autogenerated>:1)	JMP	5552
	0x17cb 06091 (<autogenerated>:1)	JMP	5386
	0x17d0 06096 (<autogenerated>:1)	JMP	5392
	0x17d5 06101 (<autogenerated>:1)	JMP	5226
	0x17da 06106 (<autogenerated>:1)	JMP	5232
	0x17df 06111 (<autogenerated>:1)	JMP	5078
	0x17e4 06116 (<autogenerated>:1)	JMP	5084
	0x17e9 06121 (<autogenerated>:1)	JMP	4918
	0x17ee 06126 (<autogenerated>:1)	JMP	4924
	0x17f3 06131 (<autogenerated>:1)	JMP	4758
	0x17f8 06136 (<autogenerated>:1)	JMP	4764
	0x17fd 06141 (<autogenerated>:1)	JMP	4598
	0x1802 06146 (<autogenerated>:1)	JMP	4604
	0x1807 06151 (<autogenerated>:1)	JMP	4438
	0x180c 06156 (<autogenerated>:1)	JMP	4444
	0x1811 06161 (<autogenerated>:1)	PCDATA	$0, $0
	0x1811 06161 (<autogenerated>:1)	PCDATA	$1, $0
	0x1811 06161 (<autogenerated>:1)	MOVL	CX, AX
	0x1813 06163 (<autogenerated>:1)	JMP	4278
	0x1818 06168 (<autogenerated>:1)	PCDATA	$0, $-2
	0x1818 06168 (<autogenerated>:1)	PCDATA	$1, $-2
	0x1818 06168 (<autogenerated>:1)	JMP	4284
	0x181d 06173 (<autogenerated>:1)	PCDATA	$0, $0
	0x181d 06173 (<autogenerated>:1)	PCDATA	$1, $0
	0x181d 06173 (<autogenerated>:1)	MOVL	CX, AX
	0x181f 06175 (<autogenerated>:1)	JMP	4118
	0x1824 06180 (<autogenerated>:1)	PCDATA	$0, $-2
	0x1824 06180 (<autogenerated>:1)	PCDATA	$1, $-2
	0x1824 06180 (<autogenerated>:1)	JMP	4124
	0x1829 06185 (<autogenerated>:1)	PCDATA	$0, $0
	0x1829 06185 (<autogenerated>:1)	PCDATA	$1, $0
	0x1829 06185 (<autogenerated>:1)	MOVL	CX, AX
	0x182b 06187 (<autogenerated>:1)	JMP	3958
	0x1830 06192 (<autogenerated>:1)	PCDATA	$0, $-2
	0x1830 06192 (<autogenerated>:1)	PCDATA	$1, $-2
	0x1830 06192 (<autogenerated>:1)	JMP	3964
	0x1835 06197 (<autogenerated>:1)	PCDATA	$0, $0
	0x1835 06197 (<autogenerated>:1)	PCDATA	$1, $0
	0x1835 06197 (<autogenerated>:1)	MOVL	CX, AX
	0x1837 06199 (<autogenerated>:1)	JMP	3798
	0x183c 06204 (<autogenerated>:1)	PCDATA	$0, $-2
	0x183c 06204 (<autogenerated>:1)	PCDATA	$1, $-2
	0x183c 06204 (<autogenerated>:1)	JMP	3804
	0x1841 06209 (<autogenerated>:1)	PCDATA	$0, $0
	0x1841 06209 (<autogenerated>:1)	PCDATA	$1, $0
	0x1841 06209 (<autogenerated>:1)	MOVL	CX, AX
	0x1843 06211 (<autogenerated>:1)	JMP	3638
	0x1848 06216 (<autogenerated>:1)	PCDATA	$0, $-2
	0x1848 06216 (<autogenerated>:1)	PCDATA	$1, $-2
	0x1848 06216 (<autogenerated>:1)	JMP	3644
	0x184d 06221 (<autogenerated>:1)	PCDATA	$0, $0
	0x184d 06221 (<autogenerated>:1)	PCDATA	$1, $0
	0x184d 06221 (<autogenerated>:1)	MOVL	CX, AX
	0x184f 06223 (<autogenerated>:1)	JMP	3478
	0x1854 06228 (<autogenerated>:1)	PCDATA	$0, $-2
	0x1854 06228 (<autogenerated>:1)	PCDATA	$1, $-2
	0x1854 06228 (<autogenerated>:1)	JMP	3484
	0x1859 06233 (<autogenerated>:1)	PCDATA	$0, $0
	0x1859 06233 (<autogenerated>:1)	PCDATA	$1, $0
	0x1859 06233 (<autogenerated>:1)	MOVL	CX, AX
	0x185b 06235 (<autogenerated>:1)	JMP	3318
	0x1860 06240 (<autogenerated>:1)	PCDATA	$0, $-2
	0x1860 06240 (<autogenerated>:1)	PCDATA	$1, $-2
	0x1860 06240 (<autogenerated>:1)	JMP	3324
	0x1865 06245 (<autogenerated>:1)	PCDATA	$0, $0
	0x1865 06245 (<autogenerated>:1)	PCDATA	$1, $0
	0x1865 06245 (<autogenerated>:1)	MOVL	CX, AX
	0x1867 06247 (<autogenerated>:1)	JMP	3158
	0x186c 06252 (<autogenerated>:1)	PCDATA	$0, $-2
	0x186c 06252 (<autogenerated>:1)	PCDATA	$1, $-2
	0x186c 06252 (<autogenerated>:1)	JMP	3164
	0x1871 06257 (<autogenerated>:1)	PCDATA	$0, $0
	0x1871 06257 (<autogenerated>:1)	PCDATA	$1, $0
	0x1871 06257 (<autogenerated>:1)	MOVL	CX, AX
	0x1873 06259 (<autogenerated>:1)	JMP	2998
	0x1878 06264 (<autogenerated>:1)	PCDATA	$0, $-2
	0x1878 06264 (<autogenerated>:1)	PCDATA	$1, $-2
	0x1878 06264 (<autogenerated>:1)	JMP	3004
	0x187d 06269 (<autogenerated>:1)	PCDATA	$0, $0
	0x187d 06269 (<autogenerated>:1)	PCDATA	$1, $0
	0x187d 06269 (<autogenerated>:1)	MOVL	CX, AX
	0x187f 06271 (<autogenerated>:1)	JMP	2838
	0x1884 06276 (<autogenerated>:1)	PCDATA	$0, $-2
	0x1884 06276 (<autogenerated>:1)	PCDATA	$1, $-2
	0x1884 06276 (<autogenerated>:1)	JMP	2844
	0x1889 06281 (<autogenerated>:1)	PCDATA	$0, $0
	0x1889 06281 (<autogenerated>:1)	PCDATA	$1, $0
	0x1889 06281 (<autogenerated>:1)	MOVL	CX, AX
	0x188b 06283 (<autogenerated>:1)	JMP	2678
	0x1890 06288 (<autogenerated>:1)	PCDATA	$0, $-2
	0x1890 06288 (<autogenerated>:1)	PCDATA	$1, $-2
	0x1890 06288 (<autogenerated>:1)	JMP	2684
	0x1895 06293 (<autogenerated>:1)	PCDATA	$0, $0
	0x1895 06293 (<autogenerated>:1)	PCDATA	$1, $0
	0x1895 06293 (<autogenerated>:1)	MOVL	CX, AX
	0x1897 06295 (<autogenerated>:1)	JMP	2518
	0x189c 06300 (<autogenerated>:1)	PCDATA	$0, $-2
	0x189c 06300 (<autogenerated>:1)	PCDATA	$1, $-2
	0x189c 06300 (<autogenerated>:1)	JMP	2524
	0x18a1 06305 (<autogenerated>:1)	JMP	2358
	0x18a6 06310 (<autogenerated>:1)	JMP	2364
	0x18ab 06315 (<autogenerated>:1)	PCDATA	$0, $0
	0x18ab 06315 (<autogenerated>:1)	PCDATA	$1, $0
	0x18ab 06315 (<autogenerated>:1)	MOVL	CX, AX
	0x18ad 06317 (<autogenerated>:1)	JMP	2198
	0x18b2 06322 (<autogenerated>:1)	PCDATA	$0, $-2
	0x18b2 06322 (<autogenerated>:1)	PCDATA	$1, $-2
	0x18b2 06322 (<autogenerated>:1)	JMP	2204
	0x18b7 06327 (<autogenerated>:1)	PCDATA	$0, $0
	0x18b7 06327 (<autogenerated>:1)	PCDATA	$1, $0
	0x18b7 06327 (<autogenerated>:1)	MOVL	CX, AX
	0x18b9 06329 (<autogenerated>:1)	JMP	2038
	0x18be 06334 (<autogenerated>:1)	PCDATA	$0, $-2
	0x18be 06334 (<autogenerated>:1)	PCDATA	$1, $-2
	0x18be 06334 (<autogenerated>:1)	JMP	2044
	0x18c3 06339 (<autogenerated>:1)	JMP	1884
	0x18c8 06344 (<autogenerated>:1)	JMP	1816
	0x18cd 06349 (<autogenerated>:1)	JMP	1748
	0x18d2 06354 (<autogenerated>:1)	JMP	1680
	0x18d7 06359 (<autogenerated>:1)	JMP	1612
	0x18dc 06364 (<autogenerated>:1)	JMP	1544
	0x18e1 06369 (<autogenerated>:1)	JMP	1476
	0x18e6 06374 (<autogenerated>:1)	JMP	1408
	0x18eb 06379 (<autogenerated>:1)	JMP	1340
	0x18f0 06384 (<autogenerated>:1)	JMP	1272
	0x18f5 06389 (<autogenerated>:1)	JMP	1204
	0x18fa 06394 (<autogenerated>:1)	JMP	1136
	0x18ff 06399 (<autogenerated>:1)	JMP	1068
	0x1904 06404 (<autogenerated>:1)	JMP	1000
	0x1909 06409 (<autogenerated>:1)	JMP	932
	0x190e 06414 (<autogenerated>:1)	JMP	864
	0x1913 06419 (<autogenerated>:1)	JMP	796
	0x1918 06424 (<autogenerated>:1)	JMP	728
	0x191d 06429 (<autogenerated>:1)	JMP	660
	0x1922 06434 (<autogenerated>:1)	JMP	592
	0x1927 06439 (<autogenerated>:1)	JMP	524
	0x192c 06444 (<autogenerated>:1)	JMP	456
	0x1931 06449 (<autogenerated>:1)	JMP	388
	0x1936 06454 (<autogenerated>:1)	JMP	320
	0x193b 06459 (<autogenerated>:1)	JMP	252
	0x1940 06464 (<autogenerated>:1)	JMP	184
	0x1945 06469 (<autogenerated>:1)	NOP
	0x1945 06469 (<autogenerated>:1)	PCDATA	$1, $-1
	0x1945 06469 (<autogenerated>:1)	PCDATA	$0, $-1
	0x1945 06469 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x194a 06474 (<autogenerated>:1)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 d0 fc ff  eH..%....H..$...
	0x0010 ff 48 3b 41 10 0f 86 2a 19 00 00 48 81 ec b0 03  .H;A...*...H....
	0x0020 00 00 48 89 ac 24 a8 03 00 00 48 8d ac 24 a8 03  ..H..$....H..$..
	0x0030 00 00 c6 84 24 c8 03 00 00 00 48 8b 84 24 b8 03  ....$.....H..$..
	0x0040 00 00 48 89 44 24 60 48 8b 84 24 c0 03 00 00 48  ..H.D$`H..$....H
	0x0050 89 44 24 58 48 8b 4c 24 60 48 89 0c 24 48 89 44  .D$XH.L$`H..$H.D
	0x0060 24 08 48 c7 44 24 10 d0 00 00 00 e8 00 00 00 00  $.H.D$..........
	0x0070 0f b6 44 24 18 88 44 24 27 88 44 24 28 84 c0 75  ..D$..D$'.D$(..u
	0x0080 05 e9 ba 18 00 00 48 8b 84 24 b8 03 00 00 f2 0f  ......H..$......
	0x0090 10 80 d0 00 00 00 48 8b 84 24 c0 03 00 00 f2 0f  ......H..$......
	0x00a0 10 88 d0 00 00 00 66 0f 2e c1 0f 94 c1 0f 9b c0  ......f.........
	0x00b0 21 c1 88 4c 24 28 eb 00 0f b6 44 24 28 88 44 24  !..L$(....D$(.D$
	0x00c0 29 84 c0 75 05 e9 71 18 00 00 48 8b 84 24 b8 03  )..u..q...H..$..
	0x00d0 00 00 f2 0f 10 80 d8 00 00 00 48 8b 84 24 c0 03  ..........H..$..
	0x00e0 00 00 f2 0f 10 88 d8 00 00 00 66 0f 2e c1 0f 94  ..........f.....
	0x00f0 c1 0f 9b c0 21 c1 88 4c 24 29 eb 00 0f b6 44 24  ....!..L$)....D$
	0x0100 29 88 44 24 2a 84 c0 75 05 e9 28 18 00 00 48 8b  ).D$*..u..(...H.
	0x0110 84 24 b8 03 00 00 f2 0f 10 80 e0 00 00 00 48 8b  .$............H.
	0x0120 84 24 c0 03 00 00 f2 0f 10 88 e0 00 00 00 66 0f  .$............f.
	0x0130 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c 24 2a eb 00  ........!..L$*..
	0x0140 0f b6 44 24 2a 88 44 24 2b 84 c0 75 05 e9 df 17  ..D$*.D$+..u....
	0x0150 00 00 48 8b 84 24 b8 03 00 00 f2 0f 10 80 e8 00  ..H..$..........
	0x0160 00 00 48 8b 84 24 c0 03 00 00 f2 0f 10 88 e8 00  ..H..$..........
	0x0170 00 00 66 0f 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c  ..f.........!..L
	0x0180 24 2b eb 00 0f b6 44 24 2b 88 44 24 2c 84 c0 75  $+....D$+.D$,..u
	0x0190 05 e9 96 17 00 00 48 8b 84 24 b8 03 00 00 f2 0f  ......H..$......
	0x01a0 10 80 f0 00 00 00 48 8b 84 24 c0 03 00 00 f2 0f  ......H..$......
	0x01b0 10 88 f0 00 00 00 66 0f 2e c1 0f 94 c1 0f 9b c0  ......f.........
	0x01c0 21 c1 88 4c 24 2c eb 00 0f b6 44 24 2c 88 44 24  !..L$,....D$,.D$
	0x01d0 2e 84 c0 75 05 e9 4d 17 00 00 48 8b 84 24 b8 03  ...u..M...H..$..
	0x01e0 00 00 f2 0f 10 80 f8 00 00 00 48 8b 84 24 c0 03  ..........H..$..
	0x01f0 00 00 f2 0f 10 88 f8 00 00 00 66 0f 2e c1 0f 94  ..........f.....
	0x0200 c1 0f 9b c0 21 c1 88 4c 24 2e eb 00 0f b6 44 24  ....!..L$.....D$
	0x0210 2e 88 44 24 2f 84 c0 75 05 e9 04 17 00 00 48 8b  ..D$/..u......H.
	0x0220 84 24 b8 03 00 00 f2 0f 10 80 00 01 00 00 48 8b  .$............H.
	0x0230 84 24 c0 03 00 00 f2 0f 10 88 00 01 00 00 66 0f  .$............f.
	0x0240 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c 24 2f eb 00  ........!..L$/..
	0x0250 0f b6 44 24 2f 88 44 24 30 84 c0 75 05 e9 bb 16  ..D$/.D$0..u....
	0x0260 00 00 48 8b 84 24 b8 03 00 00 f2 0f 10 80 08 01  ..H..$..........
	0x0270 00 00 48 8b 84 24 c0 03 00 00 f2 0f 10 88 08 01  ..H..$..........
	0x0280 00 00 66 0f 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c  ..f.........!..L
	0x0290 24 30 eb 00 0f b6 44 24 30 88 44 24 31 84 c0 75  $0....D$0.D$1..u
	0x02a0 05 e9 72 16 00 00 48 8b 84 24 b8 03 00 00 f2 0f  ..r...H..$......
	0x02b0 10 80 10 01 00 00 48 8b 84 24 c0 03 00 00 f2 0f  ......H..$......
	0x02c0 10 88 10 01 00 00 66 0f 2e c1 0f 94 c1 0f 9b c0  ......f.........
	0x02d0 21 c1 88 4c 24 31 eb 00 0f b6 44 24 31 88 44 24  !..L$1....D$1.D$
	0x02e0 32 84 c0 75 05 e9 29 16 00 00 48 8b 84 24 b8 03  2..u..)...H..$..
	0x02f0 00 00 f2 0f 10 80 18 01 00 00 48 8b 84 24 c0 03  ..........H..$..
	0x0300 00 00 f2 0f 10 88 18 01 00 00 66 0f 2e c1 0f 94  ..........f.....
	0x0310 c1 0f 9b c0 21 c1 88 4c 24 32 eb 00 0f b6 44 24  ....!..L$2....D$
	0x0320 32 88 44 24 33 84 c0 75 05 e9 e0 15 00 00 48 8b  2.D$3..u......H.
	0x0330 84 24 b8 03 00 00 f2 0f 10 80 20 01 00 00 48 8b  .$........ ...H.
	0x0340 84 24 c0 03 00 00 f2 0f 10 88 20 01 00 00 66 0f  .$........ ...f.
	0x0350 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c 24 33 eb 00  ........!..L$3..
	0x0360 0f b6 44 24 33 88 44 24 34 84 c0 75 05 e9 97 15  ..D$3.D$4..u....
	0x0370 00 00 48 8b 84 24 b8 03 00 00 f2 0f 10 80 28 01  ..H..$........(.
	0x0380 00 00 48 8b 84 24 c0 03 00 00 f2 0f 10 88 28 01  ..H..$........(.
	0x0390 00 00 66 0f 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c  ..f.........!..L
	0x03a0 24 34 eb 00 0f b6 44 24 34 88 44 24 35 84 c0 75  $4....D$4.D$5..u
	0x03b0 05 e9 4e 15 00 00 48 8b 84 24 b8 03 00 00 f2 0f  ..N...H..$......
	0x03c0 10 80 30 01 00 00 48 8b 84 24 c0 03 00 00 f2 0f  ..0...H..$......
	0x03d0 10 88 30 01 00 00 66 0f 2e c1 0f 94 c1 0f 9b c0  ..0...f.........
	0x03e0 21 c1 88 4c 24 35 eb 00 0f b6 44 24 35 88 44 24  !..L$5....D$5.D$
	0x03f0 36 84 c0 75 05 e9 05 15 00 00 48 8b 84 24 b8 03  6..u......H..$..
	0x0400 00 00 f2 0f 10 80 38 01 00 00 48 8b 84 24 c0 03  ......8...H..$..
	0x0410 00 00 f2 0f 10 88 38 01 00 00 66 0f 2e c1 0f 94  ......8...f.....
	0x0420 c1 0f 9b c0 21 c1 88 4c 24 36 eb 00 0f b6 44 24  ....!..L$6....D$
	0x0430 36 88 44 24 37 84 c0 75 05 e9 bc 14 00 00 48 8b  6.D$7..u......H.
	0x0440 84 24 b8 03 00 00 f2 0f 10 80 40 01 00 00 48 8b  .$........@...H.
	0x0450 84 24 c0 03 00 00 f2 0f 10 88 40 01 00 00 66 0f  .$........@...f.
	0x0460 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c 24 37 eb 00  ........!..L$7..
	0x0470 0f b6 44 24 37 88 44 24 39 84 c0 75 05 e9 73 14  ..D$7.D$9..u..s.
	0x0480 00 00 48 8b 84 24 b8 03 00 00 f2 0f 10 80 48 01  ..H..$........H.
	0x0490 00 00 48 8b 84 24 c0 03 00 00 f2 0f 10 88 48 01  ..H..$........H.
	0x04a0 00 00 66 0f 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c  ..f.........!..L
	0x04b0 24 39 eb 00 0f b6 44 24 39 88 44 24 3a 84 c0 75  $9....D$9.D$:..u
	0x04c0 05 e9 2a 14 00 00 48 8b 84 24 b8 03 00 00 f2 0f  ..*...H..$......
	0x04d0 10 80 50 01 00 00 48 8b 84 24 c0 03 00 00 f2 0f  ..P...H..$......
	0x04e0 10 88 50 01 00 00 66 0f 2e c1 0f 94 c1 0f 9b c0  ..P...f.........
	0x04f0 21 c1 88 4c 24 3a eb 00 0f b6 44 24 3a 88 44 24  !..L$:....D$:.D$
	0x0500 3b 84 c0 75 05 e9 e1 13 00 00 48 8b 84 24 b8 03  ;..u......H..$..
	0x0510 00 00 f2 0f 10 80 58 01 00 00 48 8b 84 24 c0 03  ......X...H..$..
	0x0520 00 00 f2 0f 10 88 58 01 00 00 66 0f 2e c1 0f 94  ......X...f.....
	0x0530 c1 0f 9b c0 21 c1 88 4c 24 3b eb 00 0f b6 44 24  ....!..L$;....D$
	0x0540 3b 88 44 24 3c 84 c0 75 05 e9 98 13 00 00 48 8b  ;.D$<..u......H.
	0x0550 84 24 b8 03 00 00 f2 0f 10 80 60 01 00 00 48 8b  .$........`...H.
	0x0560 84 24 c0 03 00 00 f2 0f 10 88 60 01 00 00 66 0f  .$........`...f.
	0x0570 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c 24 3c eb 00  ........!..L$<..
	0x0580 0f b6 44 24 3c 88 44 24 3d 84 c0 75 05 e9 4f 13  ..D$<.D$=..u..O.
	0x0590 00 00 48 8b 84 24 b8 03 00 00 f2 0f 10 80 68 01  ..H..$........h.
	0x05a0 00 00 48 8b 84 24 c0 03 00 00 f2 0f 10 88 68 01  ..H..$........h.
	0x05b0 00 00 66 0f 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c  ..f.........!..L
	0x05c0 24 3d eb 00 0f b6 44 24 3d 88 44 24 3e 84 c0 75  $=....D$=.D$>..u
	0x05d0 05 e9 06 13 00 00 48 8b 84 24 b8 03 00 00 f2 0f  ......H..$......
	0x05e0 10 80 70 01 00 00 48 8b 84 24 c0 03 00 00 f2 0f  ..p...H..$......
	0x05f0 10 88 70 01 00 00 66 0f 2e c1 0f 94 c1 0f 9b c0  ..p...f.........
	0x0600 21 c1 88 4c 24 3e eb 00 0f b6 44 24 3e 88 44 24  !..L$>....D$>.D$
	0x0610 3f 84 c0 75 05 e9 bd 12 00 00 48 8b 84 24 b8 03  ?..u......H..$..
	0x0620 00 00 f2 0f 10 80 78 01 00 00 48 8b 84 24 c0 03  ......x...H..$..
	0x0630 00 00 f2 0f 10 88 78 01 00 00 66 0f 2e c1 0f 94  ......x...f.....
	0x0640 c1 0f 9b c0 21 c1 88 4c 24 3f eb 00 0f b6 44 24  ....!..L$?....D$
	0x0650 3f 88 44 24 40 84 c0 75 05 e9 74 12 00 00 48 8b  ?.D$@..u..t...H.
	0x0660 84 24 b8 03 00 00 f2 0f 10 80 80 01 00 00 48 8b  .$............H.
	0x0670 84 24 c0 03 00 00 f2 0f 10 88 80 01 00 00 66 0f  .$............f.
	0x0680 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c 24 40 eb 00  ........!..L$@..
	0x0690 0f b6 44 24 40 88 44 24 41 84 c0 75 05 e9 2b 12  ..D$@.D$A..u..+.
	0x06a0 00 00 48 8b 84 24 b8 03 00 00 f2 0f 10 80 88 01  ..H..$..........
	0x06b0 00 00 48 8b 84 24 c0 03 00 00 f2 0f 10 88 88 01  ..H..$..........
	0x06c0 00 00 66 0f 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c  ..f.........!..L
	0x06d0 24 41 eb 00 0f b6 44 24 41 88 44 24 42 84 c0 75  $A....D$A.D$B..u
	0x06e0 05 e9 e2 11 00 00 48 8b 84 24 b8 03 00 00 f2 0f  ......H..$......
	0x06f0 10 80 90 01 00 00 48 8b 84 24 c0 03 00 00 f2 0f  ......H..$......
	0x0700 10 88 90 01 00 00 66 0f 2e c1 0f 94 c1 0f 9b c0  ......f.........
	0x0710 21 c1 88 4c 24 42 eb 00 0f b6 44 24 42 88 44 24  !..L$B....D$B.D$
	0x0720 44 84 c0 75 05 e9 99 11 00 00 48 8b 84 24 b8 03  D..u......H..$..
	0x0730 00 00 f2 0f 10 80 98 01 00 00 48 8b 84 24 c0 03  ..........H..$..
	0x0740 00 00 f2 0f 10 88 98 01 00 00 66 0f 2e c1 0f 94  ..........f.....
	0x0750 c1 0f 9b c0 21 c1 88 4c 24 44 eb 00 0f b6 44 24  ....!..L$D....D$
	0x0760 44 88 44 24 45 84 c0 75 05 e9 50 11 00 00 48 8b  D.D$E..u..P...H.
	0x0770 84 24 b8 03 00 00 48 8b 88 a8 01 00 00 48 8b 80  .$....H......H..
	0x0780 a0 01 00 00 48 89 84 24 f8 02 00 00 48 89 8c 24  ....H..$....H..$
	0x0790 00 03 00 00 48 8b 84 24 c0 03 00 00 48 8b 88 a8  ....H..$....H...
	0x07a0 01 00 00 48 8b 80 a0 01 00 00 48 89 84 24 e8 02  ...H......H..$..
	0x07b0 00 00 48 89 8c 24 f0 02 00 00 48 39 8c 24 00 03  ..H..$....H9.$..
	0x07c0 00 00 0f 94 c1 74 05 e9 eb 10 00 00 48 8b 8c 24  .....t......H..$
	0x07d0 f8 02 00 00 48 89 0c 24 48 89 44 24 08 48 8b 84  ....H..$H.D$.H..
	0x07e0 24 00 03 00 00 48 89 44 24 10 e8 00 00 00 00 0f  $....H.D$.......
	0x07f0 b6 44 24 18 eb 00 88 44 24 45 eb 00 0f b6 44 24  .D$....D$E....D$
	0x0800 45 88 44 24 46 84 c0 75 05 e9 a4 10 00 00 48 8b  E.D$F..u......H.
	0x0810 84 24 b8 03 00 00 48 8b 88 b0 01 00 00 48 8b 80  .$....H......H..
	0x0820 b8 01 00 00 48 89 8c 24 d8 02 00 00 48 89 84 24  ....H..$....H..$
	0x0830 e0 02 00 00 48 8b 84 24 c0 03 00 00 48 8b 88 b8  ....H..$....H...
	0x0840 01 00 00 48 8b 80 b0 01 00 00 48 89 84 24 c8 02  ...H......H..$..
	0x0850 00 00 48 89 8c 24 d0 02 00 00 48 39 8c 24 e0 02  ..H..$....H9.$..
	0x0860 00 00 0f 94 c1 74 05 e9 3f 10 00 00 48 8b 8c 24  .....t..?...H..$
	0x0870 d8 02 00 00 48 89 0c 24 48 89 44 24 08 48 8b 84  ....H..$H.D$.H..
	0x0880 24 e0 02 00 00 48 89 44 24 10 e8 00 00 00 00 0f  $....H.D$.......
	0x0890 b6 44 24 18 eb 00 88 44 24 46 eb 00 0f b6 44 24  .D$....D$F....D$
	0x08a0 46 88 44 24 47 84 c0 75 05 e9 f8 0f 00 00 48 8b  F.D$G..u......H.
	0x08b0 84 24 b8 03 00 00 48 8b 88 c8 01 00 00 48 8b 80  .$....H......H..
	0x08c0 c0 01 00 00 48 89 84 24 b8 02 00 00 48 89 8c 24  ....H..$....H..$
	0x08d0 c0 02 00 00 48 8b 84 24 c0 03 00 00 48 8b 88 c0  ....H..$....H...
	0x08e0 01 00 00 48 8b 80 c8 01 00 00 48 89 8c 24 a8 02  ...H......H..$..
	0x08f0 00 00 48 89 84 24 b0 02 00 00 48 39 84 24 c0 02  ..H..$....H9.$..
	0x0900 00 00 0f 94 c0 74 05 e9 95 0f 00 00 48 8b 84 24  .....t......H..$
	0x0910 b8 02 00 00 48 89 04 24 48 89 4c 24 08 48 8b 84  ....H..$H.L$.H..
	0x0920 24 c0 02 00 00 48 89 44 24 10 e8 00 00 00 00 0f  $....H.D$.......
	0x0930 b6 44 24 18 eb 00 88 44 24 47 eb 00 0f b6 44 24  .D$....D$G....D$
	0x0940 47 88 44 24 48 84 c0 75 05 e9 4e 0f 00 00 48 8b  G.D$H..u..N...H.
	0x0950 84 24 b8 03 00 00 48 8b 88 d8 01 00 00 48 8b 80  .$....H......H..
	0x0960 d0 01 00 00 48 89 84 24 98 02 00 00 48 89 8c 24  ....H..$....H..$
	0x0970 a0 02 00 00 48 8b 84 24 c0 03 00 00 48 8b 88 d8  ....H..$....H...
	0x0980 01 00 00 48 8b 80 d0 01 00 00 48 89 84 24 88 02  ...H......H..$..
	0x0990 00 00 48 89 8c 24 90 02 00 00 48 39 8c 24 a0 02  ..H..$....H9.$..
	0x09a0 00 00 0f 94 c1 74 05 e9 e9 0e 00 00 48 8b 8c 24  .....t......H..$
	0x09b0 98 02 00 00 48 89 0c 24 48 89 44 24 08 48 8b 84  ....H..$H.D$.H..
	0x09c0 24 a0 02 00 00 48 89 44 24 10 e8 00 00 00 00 0f  $....H.D$.......
	0x09d0 b6 44 24 18 eb 00 88 44 24 48 eb 00 0f b6 44 24  .D$....D$H....D$
	0x09e0 48 88 44 24 49 84 c0 75 05 e9 a2 0e 00 00 48 8b  H.D$I..u......H.
	0x09f0 84 24 b8 03 00 00 48 8b 88 e8 01 00 00 48 8b 80  .$....H......H..
	0x0a00 e0 01 00 00 48 89 84 24 78 02 00 00 48 89 8c 24  ....H..$x...H..$
	0x0a10 80 02 00 00 48 8b 84 24 c0 03 00 00 48 8b 88 e8  ....H..$....H...
	0x0a20 01 00 00 48 8b 80 e0 01 00 00 48 89 84 24 68 02  ...H......H..$h.
	0x0a30 00 00 48 89 8c 24 70 02 00 00 48 39 8c 24 80 02  ..H..$p...H9.$..
	0x0a40 00 00 0f 94 c1 74 05 e9 3d 0e 00 00 48 8b 8c 24  .....t..=...H..$
	0x0a50 78 02 00 00 48 89 0c 24 48 89 44 24 08 48 8b 84  x...H..$H.D$.H..
	0x0a60 24 80 02 00 00 48 89 44 24 10 e8 00 00 00 00 0f  $....H.D$.......
	0x0a70 b6 44 24 18 eb 00 88 44 24 49 eb 00 0f b6 44 24  .D$....D$I....D$
	0x0a80 49 88 44 24 4a 84 c0 75 05 e9 f6 0d 00 00 48 8b  I.D$J..u......H.
	0x0a90 84 24 b8 03 00 00 48 8b 88 f8 01 00 00 48 8b 80  .$....H......H..
	0x0aa0 f0 01 00 00 48 89 84 24 58 02 00 00 48 89 8c 24  ....H..$X...H..$
	0x0ab0 60 02 00 00 48 8b 84 24 c0 03 00 00 48 8b 88 f8  `...H..$....H...
	0x0ac0 01 00 00 48 8b 80 f0 01 00 00 48 89 84 24 48 02  ...H......H..$H.
	0x0ad0 00 00 48 89 8c 24 50 02 00 00 48 39 8c 24 60 02  ..H..$P...H9.$`.
	0x0ae0 00 00 0f 94 c1 74 05 e9 91 0d 00 00 48 8b 8c 24  .....t......H..$
	0x0af0 58 02 00 00 48 89 0c 24 48 89 44 24 08 48 8b 84  X...H..$H.D$.H..
	0x0b00 24 60 02 00 00 48 89 44 24 10 e8 00 00 00 00 0f  $`...H.D$.......
	0x0b10 b6 44 24 18 eb 00 88 44 24 4a eb 00 0f b6 44 24  .D$....D$J....D$
	0x0b20 4a 88 44 24 4b 84 c0 75 05 e9 4a 0d 00 00 48 8b  J.D$K..u..J...H.
	0x0b30 84 24 b8 03 00 00 48 8b 88 08 02 00 00 48 8b 80  .$....H......H..
	0x0b40 00 02 00 00 48 89 84 24 38 02 00 00 48 89 8c 24  ....H..$8...H..$
	0x0b50 40 02 00 00 48 8b 84 24 c0 03 00 00 48 8b 88 08  @...H..$....H...
	0x0b60 02 00 00 48 8b 80 00 02 00 00 48 89 84 24 28 02  ...H......H..$(.
	0x0b70 00 00 48 89 8c 24 30 02 00 00 48 39 8c 24 40 02  ..H..$0...H9.$@.
	0x0b80 00 00 0f 94 c1 74 05 e9 e5 0c 00 00 48 8b 8c 24  .....t......H..$
	0x0b90 38 02 00 00 48 89 0c 24 48 89 44 24 08 48 8b 84  8...H..$H.D$.H..
	0x0ba0 24 40 02 00 00 48 89 44 24 10 e8 00 00 00 00 0f  $@...H.D$.......
	0x0bb0 b6 44 24 18 eb 00 88 44 24 4b eb 00 0f b6 44 24  .D$....D$K....D$
	0x0bc0 4b 88 44 24 4c 84 c0 75 05 e9 9e 0c 00 00 48 8b  K.D$L..u......H.
	0x0bd0 84 24 b8 03 00 00 48 8b 88 18 02 00 00 48 8b 80  .$....H......H..
	0x0be0 10 02 00 00 48 89 84 24 18 02 00 00 48 89 8c 24  ....H..$....H..$
	0x0bf0 20 02 00 00 48 8b 84 24 c0 03 00 00 48 8b 88 18   ...H..$....H...
	0x0c00 02 00 00 48 8b 80 10 02 00 00 48 89 84 24 08 02  ...H......H..$..
	0x0c10 00 00 48 89 8c 24 10 02 00 00 48 39 8c 24 20 02  ..H..$....H9.$ .
	0x0c20 00 00 0f 94 c1 74 05 e9 39 0c 00 00 48 8b 8c 24  .....t..9...H..$
	0x0c30 18 02 00 00 48 89 0c 24 48 89 44 24 08 48 8b 84  ....H..$H.D$.H..
	0x0c40 24 20 02 00 00 48 89 44 24 10 e8 00 00 00 00 0f  $ ...H.D$.......
	0x0c50 b6 44 24 18 eb 00 88 44 24 4c eb 00 0f b6 44 24  .D$....D$L....D$
	0x0c60 4c 88 44 24 4d 84 c0 75 05 e9 f2 0b 00 00 48 8b  L.D$M..u......H.
	0x0c70 84 24 b8 03 00 00 48 8b 88 28 02 00 00 48 8b 80  .$....H..(...H..
	0x0c80 20 02 00 00 48 89 84 24 f8 01 00 00 48 89 8c 24   ...H..$....H..$
	0x0c90 00 02 00 00 48 8b 84 24 c0 03 00 00 48 8b 88 28  ....H..$....H..(
	0x0ca0 02 00 00 48 8b 80 20 02 00 00 48 89 84 24 e8 01  ...H.. ...H..$..
	0x0cb0 00 00 48 89 8c 24 f0 01 00 00 48 39 8c 24 00 02  ..H..$....H9.$..
	0x0cc0 00 00 0f 94 c1 74 05 e9 8d 0b 00 00 48 8b 8c 24  .....t......H..$
	0x0cd0 f8 01 00 00 48 89 0c 24 48 89 44 24 08 48 8b 84  ....H..$H.D$.H..
	0x0ce0 24 00 02 00 00 48 89 44 24 10 e8 00 00 00 00 0f  $....H.D$.......
	0x0cf0 b6 44 24 18 eb 00 88 44 24 4d eb 00 0f b6 44 24  .D$....D$M....D$
	0x0d00 4d 88 44 24 4e 84 c0 75 05 e9 46 0b 00 00 48 8b  M.D$N..u..F...H.
	0x0d10 84 24 b8 03 00 00 48 8b 88 38 02 00 00 48 8b 80  .$....H..8...H..
	0x0d20 30 02 00 00 48 89 84 24 d8 01 00 00 48 89 8c 24  0...H..$....H..$
	0x0d30 e0 01 00 00 48 8b 84 24 c0 03 00 00 48 8b 88 38  ....H..$....H..8
	0x0d40 02 00 00 48 8b 80 30 02 00 00 48 89 84 24 c8 01  ...H..0...H..$..
	0x0d50 00 00 48 89 8c 24 d0 01 00 00 48 39 8c 24 e0 01  ..H..$....H9.$..
	0x0d60 00 00 0f 94 c1 74 05 e9 e1 0a 00 00 48 8b 8c 24  .....t......H..$
	0x0d70 d8 01 00 00 48 89 0c 24 48 89 44 24 08 48 8b 84  ....H..$H.D$.H..
	0x0d80 24 e0 01 00 00 48 89 44 24 10 e8 00 00 00 00 0f  $....H.D$.......
	0x0d90 b6 44 24 18 eb 00 88 44 24 4e eb 00 0f b6 44 24  .D$....D$N....D$
	0x0da0 4e 88 44 24 4f 84 c0 75 05 e9 9a 0a 00 00 48 8b  N.D$O..u......H.
	0x0db0 84 24 b8 03 00 00 48 8b 88 48 02 00 00 48 8b 80  .$....H..H...H..
	0x0dc0 40 02 00 00 48 89 84 24 b8 01 00 00 48 89 8c 24  @...H..$....H..$
	0x0dd0 c0 01 00 00 48 8b 84 24 c0 03 00 00 48 8b 88 48  ....H..$....H..H
	0x0de0 02 00 00 48 8b 80 40 02 00 00 48 89 84 24 a8 01  ...H..@...H..$..
	0x0df0 00 00 48 89 8c 24 b0 01 00 00 48 39 8c 24 c0 01  ..H..$....H9.$..
	0x0e00 00 00 0f 94 c1 74 05 e9 35 0a 00 00 48 8b 8c 24  .....t..5...H..$
	0x0e10 b8 01 00 00 48 89 0c 24 48 89 44 24 08 48 8b 84  ....H..$H.D$.H..
	0x0e20 24 c0 01 00 00 48 89 44 24 10 e8 00 00 00 00 0f  $....H.D$.......
	0x0e30 b6 44 24 18 eb 00 88 44 24 4f eb 00 0f b6 44 24  .D$....D$O....D$
	0x0e40 4f 88 44 24 50 84 c0 75 05 e9 ee 09 00 00 48 8b  O.D$P..u......H.
	0x0e50 84 24 b8 03 00 00 48 8b 88 58 02 00 00 48 8b 80  .$....H..X...H..
	0x0e60 50 02 00 00 48 89 84 24 98 01 00 00 48 89 8c 24  P...H..$....H..$
	0x0e70 a0 01 00 00 48 8b 84 24 c0 03 00 00 48 8b 88 58  ....H..$....H..X
	0x0e80 02 00 00 48 8b 80 50 02 00 00 48 89 84 24 88 01  ...H..P...H..$..
	0x0e90 00 00 48 89 8c 24 90 01 00 00 48 39 8c 24 a0 01  ..H..$....H9.$..
	0x0ea0 00 00 0f 94 c1 74 05 e9 89 09 00 00 48 8b 8c 24  .....t......H..$
	0x0eb0 98 01 00 00 48 89 0c 24 48 89 44 24 08 48 8b 84  ....H..$H.D$.H..
	0x0ec0 24 a0 01 00 00 48 89 44 24 10 e8 00 00 00 00 0f  $....H.D$.......
	0x0ed0 b6 44 24 18 eb 00 88 44 24 50 eb 00 0f b6 44 24  .D$....D$P....D$
	0x0ee0 50 88 44 24 51 84 c0 75 05 e9 42 09 00 00 48 8b  P.D$Q..u..B...H.
	0x0ef0 84 24 b8 03 00 00 48 8b 88 68 02 00 00 48 8b 80  .$....H..h...H..
	0x0f00 60 02 00 00 48 89 84 24 78 01 00 00 48 89 8c 24  `...H..$x...H..$
	0x0f10 80 01 00 00 48 8b 84 24 c0 03 00 00 48 8b 88 68  ....H..$....H..h
	0x0f20 02 00 00 48 8b 80 60 02 00 00 48 89 84 24 68 01  ...H..`...H..$h.
	0x0f30 00 00 48 89 8c 24 70 01 00 00 48 39 8c 24 80 01  ..H..$p...H9.$..
	0x0f40 00 00 0f 94 c1 74 05 e9 dd 08 00 00 48 8b 8c 24  .....t......H..$
	0x0f50 78 01 00 00 48 89 0c 24 48 89 44 24 08 48 8b 84  x...H..$H.D$.H..
	0x0f60 24 80 01 00 00 48 89 44 24 10 e8 00 00 00 00 0f  $....H.D$.......
	0x0f70 b6 44 24 18 eb 00 88 44 24 51 eb 00 0f b6 44 24  .D$....D$Q....D$
	0x0f80 51 88 44 24 52 84 c0 75 05 e9 96 08 00 00 48 8b  Q.D$R..u......H.
	0x0f90 84 24 b8 03 00 00 48 8b 88 78 02 00 00 48 8b 80  .$....H..x...H..
	0x0fa0 70 02 00 00 48 89 84 24 58 01 00 00 48 89 8c 24  p...H..$X...H..$
	0x0fb0 60 01 00 00 48 8b 84 24 c0 03 00 00 48 8b 88 78  `...H..$....H..x
	0x0fc0 02 00 00 48 8b 80 70 02 00 00 48 89 84 24 48 01  ...H..p...H..$H.
	0x0fd0 00 00 48 89 8c 24 50 01 00 00 48 39 8c 24 60 01  ..H..$P...H9.$`.
	0x0fe0 00 00 0f 94 c1 74 05 e9 31 08 00 00 48 8b 8c 24  .....t..1...H..$
	0x0ff0 58 01 00 00 48 89 0c 24 48 89 44 24 08 48 8b 84  X...H..$H.D$.H..
	0x1000 24 60 01 00 00 48 89 44 24 10 e8 00 00 00 00 0f  $`...H.D$.......
	0x1010 b6 44 24 18 eb 00 88 44 24 52 eb 00 0f b6 44 24  .D$....D$R....D$
	0x1020 52 88 44 24 53 84 c0 75 05 e9 ea 07 00 00 48 8b  R.D$S..u......H.
	0x1030 84 24 b8 03 00 00 48 8b 88 88 02 00 00 48 8b 80  .$....H......H..
	0x1040 80 02 00 00 48 89 84 24 38 01 00 00 48 89 8c 24  ....H..$8...H..$
	0x1050 40 01 00 00 48 8b 84 24 c0 03 00 00 48 8b 88 88  @...H..$....H...
	0x1060 02 00 00 48 8b 80 80 02 00 00 48 89 84 24 28 01  ...H......H..$(.
	0x1070 00 00 48 89 8c 24 30 01 00 00 48 39 8c 24 40 01  ..H..$0...H9.$@.
	0x1080 00 00 0f 94 c1 74 05 e9 85 07 00 00 48 8b 8c 24  .....t......H..$
	0x1090 38 01 00 00 48 89 0c 24 48 89 44 24 08 48 8b 84  8...H..$H.D$.H..
	0x10a0 24 40 01 00 00 48 89 44 24 10 e8 00 00 00 00 0f  $@...H.D$.......
	0x10b0 b6 44 24 18 eb 00 88 44 24 53 eb 00 0f b6 44 24  .D$....D$S....D$
	0x10c0 53 88 44 24 54 84 c0 75 05 e9 3e 07 00 00 48 8b  S.D$T..u..>...H.
	0x10d0 84 24 b8 03 00 00 48 8b 88 90 02 00 00 48 8b 80  .$....H......H..
	0x10e0 98 02 00 00 48 89 8c 24 18 01 00 00 48 89 84 24  ....H..$....H..$
	0x10f0 20 01 00 00 48 8b 84 24 c0 03 00 00 48 8b 88 90   ...H..$....H...
	0x1100 02 00 00 48 8b 80 98 02 00 00 48 89 8c 24 08 01  ...H......H..$..
	0x1110 00 00 48 89 84 24 10 01 00 00 48 39 84 24 20 01  ..H..$....H9.$ .
	0x1120 00 00 0f 94 c0 74 05 e9 db 06 00 00 48 8b 84 24  .....t......H..$
	0x1130 18 01 00 00 48 89 04 24 48 89 4c 24 08 48 8b 84  ....H..$H.L$.H..
	0x1140 24 20 01 00 00 48 89 44 24 10 e8 00 00 00 00 0f  $ ...H.D$.......
	0x1150 b6 44 24 18 eb 00 88 44 24 54 eb 00 0f b6 44 24  .D$....D$T....D$
	0x1160 54 88 44 24 55 84 c0 75 05 e9 94 06 00 00 48 8b  T.D$U..u......H.
	0x1170 84 24 b8 03 00 00 48 8b 88 a0 02 00 00 48 8b 80  .$....H......H..
	0x1180 a8 02 00 00 48 89 8c 24 f8 00 00 00 48 89 84 24  ....H..$....H..$
	0x1190 00 01 00 00 48 8b 84 24 c0 03 00 00 48 8b 88 a0  ....H..$....H...
	0x11a0 02 00 00 48 8b 80 a8 02 00 00 48 89 8c 24 e8 00  ...H......H..$..
	0x11b0 00 00 48 89 84 24 f0 00 00 00 48 39 84 24 00 01  ..H..$....H9.$..
	0x11c0 00 00 0f 94 c0 74 05 e9 31 06 00 00 48 8b 84 24  .....t..1...H..$
	0x11d0 f8 00 00 00 48 89 04 24 48 89 4c 24 08 48 8b 84  ....H..$H.L$.H..
	0x11e0 24 00 01 00 00 48 89 44 24 10 e8 00 00 00 00 0f  $....H.D$.......
	0x11f0 b6 44 24 18 eb 00 88 44 24 55 eb 00 0f b6 44 24  .D$....D$U....D$
	0x1200 55 88 44 24 56 84 c0 75 05 e9 ea 05 00 00 48 8b  U.D$V..u......H.
	0x1210 84 24 b8 03 00 00 48 8b 88 b0 02 00 00 48 8b 80  .$....H......H..
	0x1220 b8 02 00 00 48 89 8c 24 d8 00 00 00 48 89 84 24  ....H..$....H..$
	0x1230 e0 00 00 00 48 8b 84 24 c0 03 00 00 48 8b 88 b0  ....H..$....H...
	0x1240 02 00 00 48 8b 80 b8 02 00 00 48 89 8c 24 c8 00  ...H......H..$..
	0x1250 00 00 48 89 84 24 d0 00 00 00 48 39 84 24 e0 00  ..H..$....H9.$..
	0x1260 00 00 0f 94 c0 74 05 e9 87 05 00 00 48 8b 84 24  .....t......H..$
	0x1270 d8 00 00 00 48 89 04 24 48 89 4c 24 08 48 8b 84  ....H..$H.L$.H..
	0x1280 24 e0 00 00 00 48 89 44 24 10 e8 00 00 00 00 0f  $....H.D$.......
	0x1290 b6 44 24 18 eb 00 88 44 24 56 eb 00 0f b6 44 24  .D$....D$V....D$
	0x12a0 56 88 44 24 57 84 c0 75 05 e9 40 05 00 00 48 8b  V.D$W..u..@...H.
	0x12b0 84 24 b8 03 00 00 48 8b 88 c0 02 00 00 48 8b 80  .$....H......H..
	0x12c0 c8 02 00 00 48 89 8c 24 b8 00 00 00 48 89 84 24  ....H..$....H..$
	0x12d0 c0 00 00 00 48 8b 84 24 c0 03 00 00 48 8b 88 c0  ....H..$....H...
	0x12e0 02 00 00 48 8b 80 c8 02 00 00 48 89 8c 24 a8 00  ...H......H..$..
	0x12f0 00 00 48 89 84 24 b0 00 00 00 48 39 84 24 c0 00  ..H..$....H9.$..
	0x1300 00 00 0f 94 c0 74 05 e9 dd 04 00 00 48 8b 84 24  .....t......H..$
	0x1310 b8 00 00 00 48 89 04 24 48 89 4c 24 08 48 8b 84  ....H..$H.L$.H..
	0x1320 24 c0 00 00 00 48 89 44 24 10 e8 00 00 00 00 0f  $....H.D$.......
	0x1330 b6 44 24 18 eb 00 88 44 24 57 eb 00 0f b6 44 24  .D$....D$W....D$
	0x1340 57 88 44 24 23 84 c0 75 05 e9 96 04 00 00 48 8b  W.D$#..u......H.
	0x1350 84 24 b8 03 00 00 48 8b 88 d0 02 00 00 48 8b 80  .$....H......H..
	0x1360 d8 02 00 00 48 89 8c 24 98 00 00 00 48 89 84 24  ....H..$....H..$
	0x1370 a0 00 00 00 48 8b 84 24 c0 03 00 00 48 8b 88 d0  ....H..$....H...
	0x1380 02 00 00 48 8b 80 d8 02 00 00 48 89 8c 24 88 00  ...H......H..$..
	0x1390 00 00 48 89 84 24 90 00 00 00 48 39 84 24 a0 00  ..H..$....H9.$..
	0x13a0 00 00 0f 94 c0 74 05 e9 33 04 00 00 48 8b 84 24  .....t..3...H..$
	0x13b0 98 00 00 00 48 89 04 24 48 89 4c 24 08 48 8b 84  ....H..$H.L$.H..
	0x13c0 24 a0 00 00 00 48 89 44 24 10 e8 00 00 00 00 0f  $....H.D$.......
	0x13d0 b6 44 24 18 eb 00 88 44 24 23 eb 00 0f b6 44 24  .D$....D$#....D$
	0x13e0 23 88 44 24 24 84 c0 75 05 e9 ec 03 00 00 48 8b  #.D$$..u......H.
	0x13f0 84 24 b8 03 00 00 48 8b 88 e0 02 00 00 48 8b 80  .$....H......H..
	0x1400 e8 02 00 00 48 89 4c 24 78 48 89 84 24 80 00 00  ....H.L$xH..$...
	0x1410 00 48 8b 84 24 c0 03 00 00 48 8b 88 e0 02 00 00  .H..$....H......
	0x1420 48 8b 80 e8 02 00 00 48 89 4c 24 68 48 89 44 24  H......H.L$hH.D$
	0x1430 70 48 39 84 24 80 00 00 00 0f 94 c0 74 05 e9 92  pH9.$.......t...
	0x1440 03 00 00 48 8b 44 24 78 48 89 04 24 48 89 4c 24  ...H.D$xH..$H.L$
	0x1450 08 48 8b 84 24 80 00 00 00 48 89 44 24 10 e8 00  .H..$....H.D$...
	0x1460 00 00 00 0f b6 44 24 18 eb 00 88 44 24 24 eb 00  .....D$....D$$..
	0x1470 0f b6 44 24 24 88 44 24 25 84 c0 75 05 e9 4e 03  ..D$$.D$%..u..N.
	0x1480 00 00 48 8b 84 24 b8 03 00 00 48 8b 88 f0 02 00  ..H..$....H.....
	0x1490 00 48 8b 80 f8 02 00 00 48 89 8c 24 98 03 00 00  .H......H..$....
	0x14a0 48 89 84 24 a0 03 00 00 48 8b 84 24 c0 03 00 00  H..$....H..$....
	0x14b0 48 8b 88 f0 02 00 00 48 8b 80 f8 02 00 00 48 89  H......H......H.
	0x14c0 8c 24 88 03 00 00 48 89 84 24 90 03 00 00 48 39  .$....H..$....H9
	0x14d0 84 24 a0 03 00 00 0f 94 c0 74 05 e9 eb 02 00 00  .$.......t......
	0x14e0 48 8b 84 24 98 03 00 00 48 89 04 24 48 89 4c 24  H..$....H..$H.L$
	0x14f0 08 48 8b 84 24 a0 03 00 00 48 89 44 24 10 e8 00  .H..$....H.D$...
	0x1500 00 00 00 0f b6 44 24 18 eb 00 88 44 24 25 eb 00  .....D$....D$%..
	0x1510 0f b6 44 24 25 88 44 24 26 84 c0 75 05 e9 a4 02  ..D$%.D$&..u....
	0x1520 00 00 48 8b 84 24 b8 03 00 00 48 8b 88 00 03 00  ..H..$....H.....
	0x1530 00 48 8b 80 08 03 00 00 48 89 8c 24 78 03 00 00  .H......H..$x...
	0x1540 48 89 84 24 80 03 00 00 48 8b 84 24 c0 03 00 00  H..$....H..$....
	0x1550 48 8b 88 00 03 00 00 48 8b 80 08 03 00 00 48 89  H......H......H.
	0x1560 8c 24 68 03 00 00 48 89 84 24 70 03 00 00 48 39  .$h...H..$p...H9
	0x1570 84 24 80 03 00 00 0f 94 c0 74 05 e9 41 02 00 00  .$.......t..A...
	0x1580 48 8b 84 24 78 03 00 00 48 89 04 24 48 89 4c 24  H..$x...H..$H.L$
	0x1590 08 48 8b 84 24 80 03 00 00 48 89 44 24 10 e8 00  .H..$....H.D$...
	0x15a0 00 00 00 0f b6 44 24 18 eb 00 88 44 24 26 eb 00  .....D$....D$&..
	0x15b0 0f b6 44 24 26 88 44 24 2d 84 c0 75 05 e9 fa 01  ..D$&.D$-..u....
	0x15c0 00 00 48 8b 84 24 b8 03 00 00 48 8b 88 10 03 00  ..H..$....H.....
	0x15d0 00 48 8b 80 18 03 00 00 48 89 8c 24 58 03 00 00  .H......H..$X...
	0x15e0 48 89 84 24 60 03 00 00 48 8b 84 24 c0 03 00 00  H..$`...H..$....
	0x15f0 48 8b 88 10 03 00 00 48 8b 80 18 03 00 00 48 89  H......H......H.
	0x1600 8c 24 48 03 00 00 48 89 84 24 50 03 00 00 48 39  .$H...H..$P...H9
	0x1610 84 24 60 03 00 00 0f 94 c0 74 05 e9 97 01 00 00  .$`......t......
	0x1620 48 8b 84 24 58 03 00 00 48 89 04 24 48 89 4c 24  H..$X...H..$H.L$
	0x1630 08 48 8b 84 24 60 03 00 00 48 89 44 24 10 e8 00  .H..$`...H.D$...
	0x1640 00 00 00 0f b6 44 24 18 eb 00 88 44 24 2d eb 00  .....D$....D$-..
	0x1650 0f b6 44 24 2d 88 44 24 38 84 c0 75 05 e9 50 01  ..D$-.D$8..u..P.
	0x1660 00 00 48 8b 84 24 b8 03 00 00 48 8b 88 20 03 00  ..H..$....H.. ..
	0x1670 00 48 8b 80 28 03 00 00 48 89 8c 24 38 03 00 00  .H..(...H..$8...
	0x1680 48 89 84 24 40 03 00 00 48 8b 84 24 c0 03 00 00  H..$@...H..$....
	0x1690 48 8b 88 20 03 00 00 48 8b 80 28 03 00 00 48 89  H.. ...H..(...H.
	0x16a0 8c 24 28 03 00 00 48 89 84 24 30 03 00 00 48 39  .$(...H..$0...H9
	0x16b0 84 24 40 03 00 00 0f 94 c0 74 05 e9 ed 00 00 00  .$@......t......
	0x16c0 48 8b 84 24 38 03 00 00 48 89 04 24 48 89 4c 24  H..$8...H..$H.L$
	0x16d0 08 48 8b 84 24 40 03 00 00 48 89 44 24 10 e8 00  .H..$@...H.D$...
	0x16e0 00 00 00 0f b6 44 24 18 eb 00 88 44 24 38 eb 00  .....D$....D$8..
	0x16f0 0f b6 44 24 38 88 44 24 43 84 c0 75 05 e9 a9 00  ..D$8.D$C..u....
	0x1700 00 00 48 8b 84 24 b8 03 00 00 48 8b 88 30 03 00  ..H..$....H..0..
	0x1710 00 48 8b 80 38 03 00 00 48 89 8c 24 18 03 00 00  .H..8...H..$....
	0x1720 48 89 84 24 20 03 00 00 48 8b 84 24 c0 03 00 00  H..$ ...H..$....
	0x1730 48 8b 88 30 03 00 00 48 8b 80 38 03 00 00 48 89  H..0...H..8...H.
	0x1740 8c 24 08 03 00 00 48 89 84 24 10 03 00 00 48 39  .$....H..$....H9
	0x1750 84 24 20 03 00 00 0f 94 c0 74 02 eb 4c 48 8b 84  .$ ......t..LH..
	0x1760 24 18 03 00 00 48 89 04 24 48 89 4c 24 08 48 8b  $....H..$H.L$.H.
	0x1770 84 24 20 03 00 00 48 89 44 24 10 e8 00 00 00 00  .$ ...H.D$......
	0x1780 0f b6 44 24 18 eb 00 88 44 24 43 eb 00 0f b6 44  ..D$....D$C....D
	0x1790 24 43 88 84 24 c8 03 00 00 48 8b ac 24 a8 03 00  $C..$....H..$...
	0x17a0 00 48 81 c4 b0 03 00 00 c3 eb dc eb e0 e9 38 ff  .H............8.
	0x17b0 ff ff e9 39 ff ff ff e9 8e fe ff ff e9 8f fe ff  ...9............
	0x17c0 ff e9 e4 fd ff ff e9 e5 fd ff ff e9 3a fd ff ff  ............:...
	0x17d0 e9 3b fd ff ff e9 90 fc ff ff e9 91 fc ff ff e9  .;..............
	0x17e0 f2 fb ff ff e9 f3 fb ff ff e9 48 fb ff ff e9 49  ..........H....I
	0x17f0 fb ff ff e9 9e fa ff ff e9 9f fa ff ff e9 f4 f9  ................
	0x1800 ff ff e9 f5 f9 ff ff e9 4a f9 ff ff e9 4b f9 ff  ........J....K..
	0x1810 ff 89 c8 e9 9e f8 ff ff e9 9f f8 ff ff 89 c8 e9  ................
	0x1820 f2 f7 ff ff e9 f3 f7 ff ff 89 c8 e9 46 f7 ff ff  ............F...
	0x1830 e9 47 f7 ff ff 89 c8 e9 9a f6 ff ff e9 9b f6 ff  .G..............
	0x1840 ff 89 c8 e9 ee f5 ff ff e9 ef f5 ff ff 89 c8 e9  ................
	0x1850 42 f5 ff ff e9 43 f5 ff ff 89 c8 e9 96 f4 ff ff  B....C..........
	0x1860 e9 97 f4 ff ff 89 c8 e9 ea f3 ff ff e9 eb f3 ff  ................
	0x1870 ff 89 c8 e9 3e f3 ff ff e9 3f f3 ff ff 89 c8 e9  ....>....?......
	0x1880 92 f2 ff ff e9 93 f2 ff ff 89 c8 e9 e6 f1 ff ff  ................
	0x1890 e9 e7 f1 ff ff 89 c8 e9 3a f1 ff ff e9 3b f1 ff  ........:....;..
	0x18a0 ff e9 90 f0 ff ff e9 91 f0 ff ff 89 c8 e9 e4 ef  ................
	0x18b0 ff ff e9 e5 ef ff ff 89 c8 e9 38 ef ff ff e9 39  ..........8....9
	0x18c0 ef ff ff e9 94 ee ff ff e9 4b ee ff ff e9 02 ee  .........K......
	0x18d0 ff ff e9 b9 ed ff ff e9 70 ed ff ff e9 27 ed ff  ........p....'..
	0x18e0 ff e9 de ec ff ff e9 95 ec ff ff e9 4c ec ff ff  ............L...
	0x18f0 e9 03 ec ff ff e9 ba eb ff ff e9 71 eb ff ff e9  ...........q....
	0x1900 28 eb ff ff e9 df ea ff ff e9 96 ea ff ff e9 4d  (..............M
	0x1910 ea ff ff e9 04 ea ff ff e9 bb e9 ff ff e9 72 e9  ..............r.
	0x1920 ff ff e9 29 e9 ff ff e9 e0 e8 ff ff e9 97 e8 ff  ...)............
	0x1930 ff e9 4e e8 ff ff e9 05 e8 ff ff e9 bc e7 ff ff  ..N.............
	0x1940 e9 73 e7 ff ff e8 00 00 00 00 e9 b1 e6 ff ff     .s.............
	rel 5+4 t=16 TLS+0
	rel 108+4 t=8 runtime.memequal+0
	rel 2027+4 t=8 runtime.memequal+0
	rel 2187+4 t=8 runtime.memequal+0
	rel 2347+4 t=8 runtime.memequal+0
	rel 2507+4 t=8 runtime.memequal+0
	rel 2667+4 t=8 runtime.memequal+0
	rel 2827+4 t=8 runtime.memequal+0
	rel 2987+4 t=8 runtime.memequal+0
	rel 3147+4 t=8 runtime.memequal+0
	rel 3307+4 t=8 runtime.memequal+0
	rel 3467+4 t=8 runtime.memequal+0
	rel 3627+4 t=8 runtime.memequal+0
	rel 3787+4 t=8 runtime.memequal+0
	rel 3947+4 t=8 runtime.memequal+0
	rel 4107+4 t=8 runtime.memequal+0
	rel 4267+4 t=8 runtime.memequal+0
	rel 4427+4 t=8 runtime.memequal+0
	rel 4587+4 t=8 runtime.memequal+0
	rel 4747+4 t=8 runtime.memequal+0
	rel 4907+4 t=8 runtime.memequal+0
	rel 5067+4 t=8 runtime.memequal+0
	rel 5215+4 t=8 runtime.memequal+0
	rel 5375+4 t=8 runtime.memequal+0
	rel 5535+4 t=8 runtime.memequal+0
	rel 5695+4 t=8 runtime.memequal+0
	rel 5855+4 t=8 runtime.memequal+0
	rel 6012+4 t=8 runtime.memequal+0
	rel 6470+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkTeraIfc_Calc STEXT size=660 args=0x8 locals=0x718
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:136)	TEXT	"".BenchmarkTeraIfc_Calc(SB), ABIInternal, $1816-8
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:136)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_invocation_test.go:136)	LEAQ	-1688(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_invocation_test.go:136)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_invocation_test.go:136)	JLS	650
	0x001b 00027 (pointer_vs_value/code/benchmark_invocation_test.go:136)	SUBQ	$1816, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_invocation_test.go:136)	MOVQ	BP, 1808(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_invocation_test.go:136)	LEAQ	1808(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:136)	FUNCDATA	$0, gclocals·73de87619823f6747f37fd4c152f5b42(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:136)	FUNCDATA	$1, gclocals·75eb9047c64157d7f284fa6df3ad33a3(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:136)	FUNCDATA	$2, gclocals·437d171b9e6f84c40356e01ae02b710f(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:136)	FUNCDATA	$3, "".BenchmarkTeraIfc_Calc.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:138)	PCDATA	$0, $1
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:138)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:138)	LEAQ	type."".tera(SB), AX
	0x0039 00057 (pointer_vs_value/code/benchmark_invocation_test.go:138)	PCDATA	$0, $0
	0x0039 00057 (pointer_vs_value/code/benchmark_invocation_test.go:138)	MOVQ	AX, (SP)
	0x003d 00061 (pointer_vs_value/code/benchmark_invocation_test.go:138)	CALL	runtime.newobject(SB)
	0x0042 00066 (pointer_vs_value/code/benchmark_invocation_test.go:138)	PCDATA	$0, $1
	0x0042 00066 (pointer_vs_value/code/benchmark_invocation_test.go:138)	MOVQ	8(SP), AX
	0x0047 00071 (pointer_vs_value/code/benchmark_invocation_test.go:138)	PCDATA	$0, $0
	0x0047 00071 (pointer_vs_value/code/benchmark_invocation_test.go:138)	PCDATA	$1, $1
	0x0047 00071 (pointer_vs_value/code/benchmark_invocation_test.go:138)	MOVQ	AX, "".&o+880(SP)
	0x004f 00079 (pointer_vs_value/code/benchmark_invocation_test.go:138)	CALL	"".createTera(SB)
	0x0054 00084 (pointer_vs_value/code/benchmark_invocation_test.go:138)	PCDATA	$0, $2
	0x0054 00084 (pointer_vs_value/code/benchmark_invocation_test.go:138)	MOVQ	"".&o+880(SP), DI
	0x005c 00092 (pointer_vs_value/code/benchmark_invocation_test.go:138)	PCDATA	$0, $-2
	0x005c 00092 (pointer_vs_value/code/benchmark_invocation_test.go:138)	PCDATA	$1, $-2
	0x005c 00092 (pointer_vs_value/code/benchmark_invocation_test.go:138)	CMPL	runtime.writeBarrier(SB), $0
	0x0063 00099 (pointer_vs_value/code/benchmark_invocation_test.go:138)	JEQ	106
	0x0065 00101 (pointer_vs_value/code/benchmark_invocation_test.go:138)	JMP	578
	0x006a 00106 (pointer_vs_value/code/benchmark_invocation_test.go:138)	MOVQ	SP, SI
	0x006d 00109 (pointer_vs_value/code/benchmark_invocation_test.go:138)	DUFFCOPY	$168
	0x0080 00128 (pointer_vs_value/code/benchmark_invocation_test.go:138)	JMP	130
	0x0082 00130 (pointer_vs_value/code/benchmark_invocation_test.go:140)	PCDATA	$0, $0
	0x0082 00130 (pointer_vs_value/code/benchmark_invocation_test.go:140)	PCDATA	$1, $1
	0x0082 00130 (pointer_vs_value/code/benchmark_invocation_test.go:140)	MOVQ	$0, "".i+832(SP)
	0x008e 00142 (pointer_vs_value/code/benchmark_invocation_test.go:140)	JMP	144
	0x0090 00144 (pointer_vs_value/code/benchmark_invocation_test.go:140)	PCDATA	$0, $1
	0x0090 00144 (pointer_vs_value/code/benchmark_invocation_test.go:140)	MOVQ	"".b+1824(SP), AX
	0x0098 00152 (pointer_vs_value/code/benchmark_invocation_test.go:140)	TESTB	AL, (AX)
	0x009a 00154 (pointer_vs_value/code/benchmark_invocation_test.go:140)	PCDATA	$0, $0
	0x009a 00154 (pointer_vs_value/code/benchmark_invocation_test.go:140)	MOVQ	264(AX), AX
	0x00a1 00161 (pointer_vs_value/code/benchmark_invocation_test.go:140)	CMPQ	"".i+832(SP), AX
	0x00a9 00169 (pointer_vs_value/code/benchmark_invocation_test.go:140)	JLT	176
	0x00ab 00171 (pointer_vs_value/code/benchmark_invocation_test.go:140)	JMP	562
	0x00b0 00176 (pointer_vs_value/code/benchmark_invocation_test.go:141)	PCDATA	$0, $1
	0x00b0 00176 (pointer_vs_value/code/benchmark_invocation_test.go:141)	MOVQ	"".&o+880(SP), AX
	0x00b8 00184 (pointer_vs_value/code/benchmark_invocation_test.go:141)	PCDATA	$0, $0
	0x00b8 00184 (pointer_vs_value/code/benchmark_invocation_test.go:141)	PCDATA	$1, $2
	0x00b8 00184 (pointer_vs_value/code/benchmark_invocation_test.go:141)	MOVQ	AX, ""..autotmp_8+864(SP)
	0x00c0 00192 (pointer_vs_value/code/benchmark_invocation_test.go:141)	XORPS	X0, X0
	0x00c3 00195 (pointer_vs_value/code/benchmark_invocation_test.go:141)	MOVUPS	X0, ""..autotmp_10+936(SP)
	0x00cb 00203 (pointer_vs_value/code/benchmark_invocation_test.go:141)	PCDATA	$0, $1
	0x00cb 00203 (pointer_vs_value/code/benchmark_invocation_test.go:141)	PCDATA	$1, $1
	0x00cb 00203 (pointer_vs_value/code/benchmark_invocation_test.go:141)	MOVQ	""..autotmp_8+864(SP), AX
	0x00d3 00211 (pointer_vs_value/code/benchmark_invocation_test.go:141)	PCDATA	$0, $3
	0x00d3 00211 (pointer_vs_value/code/benchmark_invocation_test.go:141)	LEAQ	go.itab.*"".tera,"".obj(SB), CX
	0x00da 00218 (pointer_vs_value/code/benchmark_invocation_test.go:141)	PCDATA	$0, $1
	0x00da 00218 (pointer_vs_value/code/benchmark_invocation_test.go:141)	MOVQ	CX, (SP)
	0x00de 00222 (pointer_vs_value/code/benchmark_invocation_test.go:141)	PCDATA	$0, $0
	0x00de 00222 (pointer_vs_value/code/benchmark_invocation_test.go:141)	MOVQ	AX, 8(SP)
	0x00e3 00227 (pointer_vs_value/code/benchmark_invocation_test.go:141)	CALL	"".calcIfc(SB)
	0x00e8 00232 (pointer_vs_value/code/benchmark_invocation_test.go:141)	MOVSD	16(SP), X0
	0x00ee 00238 (pointer_vs_value/code/benchmark_invocation_test.go:141)	MOVSD	X0, ""..autotmp_9+848(SP)
	0x00f7 00247 (pointer_vs_value/code/benchmark_invocation_test.go:141)	PCDATA	$0, $1
	0x00f7 00247 (pointer_vs_value/code/benchmark_invocation_test.go:141)	MOVQ	32(SP), AX
	0x00fc 00252 (pointer_vs_value/code/benchmark_invocation_test.go:141)	MOVQ	24(SP), CX
	0x0101 00257 (pointer_vs_value/code/benchmark_invocation_test.go:141)	PCDATA	$1, $3
	0x0101 00257 (pointer_vs_value/code/benchmark_invocation_test.go:141)	MOVQ	CX, ""..autotmp_10+936(SP)
	0x0109 00265 (pointer_vs_value/code/benchmark_invocation_test.go:141)	PCDATA	$0, $0
	0x0109 00265 (pointer_vs_value/code/benchmark_invocation_test.go:141)	MOVQ	AX, ""..autotmp_10+944(SP)
	0x0111 00273 (pointer_vs_value/code/benchmark_invocation_test.go:141)	MOVSD	""..autotmp_9+848(SP), X0
	0x011a 00282 (pointer_vs_value/code/benchmark_invocation_test.go:141)	MOVSD	X0, ""..autotmp_3+856(SP)
	0x0123 00291 (pointer_vs_value/code/benchmark_invocation_test.go:141)	PCDATA	$0, $1
	0x0123 00291 (pointer_vs_value/code/benchmark_invocation_test.go:141)	MOVQ	""..autotmp_10+944(SP), AX
	0x012b 00299 (pointer_vs_value/code/benchmark_invocation_test.go:141)	PCDATA	$1, $1
	0x012b 00299 (pointer_vs_value/code/benchmark_invocation_test.go:141)	MOVQ	""..autotmp_10+936(SP), CX
	0x0133 00307 (pointer_vs_value/code/benchmark_invocation_test.go:141)	PCDATA	$1, $4
	0x0133 00307 (pointer_vs_value/code/benchmark_invocation_test.go:141)	MOVQ	CX, ""..autotmp_4+904(SP)
	0x013b 00315 (pointer_vs_value/code/benchmark_invocation_test.go:141)	PCDATA	$0, $0
	0x013b 00315 (pointer_vs_value/code/benchmark_invocation_test.go:141)	MOVQ	AX, ""..autotmp_4+912(SP)
	0x0143 00323 (pointer_vs_value/code/benchmark_invocation_test.go:141)	MOVSD	""..autotmp_3+856(SP), X0
	0x014c 00332 (pointer_vs_value/code/benchmark_invocation_test.go:141)	MOVSD	X0, "".f+840(SP)
	0x0155 00341 (pointer_vs_value/code/benchmark_invocation_test.go:141)	PCDATA	$0, $1
	0x0155 00341 (pointer_vs_value/code/benchmark_invocation_test.go:141)	MOVQ	""..autotmp_4+912(SP), AX
	0x015d 00349 (pointer_vs_value/code/benchmark_invocation_test.go:141)	PCDATA	$1, $1
	0x015d 00349 (pointer_vs_value/code/benchmark_invocation_test.go:141)	MOVQ	""..autotmp_4+904(SP), CX
	0x0165 00357 (pointer_vs_value/code/benchmark_invocation_test.go:141)	MOVQ	CX, "".err+888(SP)
	0x016d 00365 (pointer_vs_value/code/benchmark_invocation_test.go:141)	PCDATA	$0, $0
	0x016d 00365 (pointer_vs_value/code/benchmark_invocation_test.go:141)	MOVQ	AX, "".err+896(SP)
	0x0175 00373 (<unknown line number>)	NOP
	0x0175 00373 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	CX, CX
	0x0178 00376 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	383
	0x017a 00378 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	560
	0x017f 00383 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $5
	0x017f 00383 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X0, X0
	0x0182 00386 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X0, ""..autotmp_11+920(SP)
	0x018a 00394 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x018a 00394 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x018a 00394 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_11+920(SP), AX
	0x0192 00402 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_13+872(SP)
	0x019a 00410 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x019c 00412 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x019c 00412 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), CX
	0x01a3 00419 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x01a3 00419 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_11+920(SP)
	0x01ab 00427 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x01ab 00427 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_17(SB), DX
	0x01b2 00434 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x01b2 00434 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	DX, ""..autotmp_11+928(SP)
	0x01ba 00442 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x01bc 00444 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	446
	0x01be 00446 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_12+952(SP)
	0x01c6 00454 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_12+960(SP)
	0x01d2 00466 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_12+968(SP)
	0x01de 00478 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x01de 00478 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, (SP)
	0x01e2 00482 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x01eb 00491 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x01f4 00500 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x01f9 00505 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	507
	0x01fb 00507 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x0203 00515 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+840(SP), X0
	0x020c 00524 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x0214 00532 (pointer_vs_value/code/benchmark_invocation_test.go:141)	JMP	534
	0x0216 00534 (pointer_vs_value/code/benchmark_invocation_test.go:140)	PCDATA	$0, $-2
	0x0216 00534 (pointer_vs_value/code/benchmark_invocation_test.go:140)	PCDATA	$1, $-2
	0x0216 00534 (pointer_vs_value/code/benchmark_invocation_test.go:140)	JMP	536
	0x0218 00536 (pointer_vs_value/code/benchmark_invocation_test.go:140)	PCDATA	$0, $0
	0x0218 00536 (pointer_vs_value/code/benchmark_invocation_test.go:140)	PCDATA	$1, $1
	0x0218 00536 (pointer_vs_value/code/benchmark_invocation_test.go:140)	MOVQ	"".i+832(SP), AX
	0x0220 00544 (pointer_vs_value/code/benchmark_invocation_test.go:140)	INCQ	AX
	0x0223 00547 (pointer_vs_value/code/benchmark_invocation_test.go:140)	MOVQ	AX, "".i+832(SP)
	0x022b 00555 (pointer_vs_value/code/benchmark_invocation_test.go:140)	JMP	144
	0x0230 00560 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x0230 00560 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x0230 00560 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	507
	0x0232 00562 (<unknown line number>)	MOVQ	1808(SP), BP
	0x023a 00570 (<unknown line number>)	ADDQ	$1816, SP
	0x0241 00577 (<unknown line number>)	RET
	0x0242 00578 (pointer_vs_value/code/benchmark_invocation_test.go:138)	MOVQ	DI, AX
	0x0245 00581 (pointer_vs_value/code/benchmark_invocation_test.go:138)	LEAQ	""..autotmp_14+976(SP), DI
	0x024d 00589 (pointer_vs_value/code/benchmark_invocation_test.go:138)	MOVQ	SP, SI
	0x0250 00592 (pointer_vs_value/code/benchmark_invocation_test.go:138)	DUFFCOPY	$168
	0x0263 00611 (pointer_vs_value/code/benchmark_invocation_test.go:138)	LEAQ	type."".tera(SB), CX
	0x026a 00618 (pointer_vs_value/code/benchmark_invocation_test.go:138)	MOVQ	CX, (SP)
	0x026e 00622 (pointer_vs_value/code/benchmark_invocation_test.go:138)	MOVQ	AX, 8(SP)
	0x0273 00627 (pointer_vs_value/code/benchmark_invocation_test.go:138)	LEAQ	""..autotmp_14+976(SP), AX
	0x027b 00635 (pointer_vs_value/code/benchmark_invocation_test.go:138)	MOVQ	AX, 16(SP)
	0x0280 00640 (pointer_vs_value/code/benchmark_invocation_test.go:138)	CALL	runtime.typedmemmove(SB)
	0x0285 00645 (pointer_vs_value/code/benchmark_invocation_test.go:138)	JMP	130
	0x028a 00650 (pointer_vs_value/code/benchmark_invocation_test.go:138)	NOP
	0x028a 00650 (pointer_vs_value/code/benchmark_invocation_test.go:136)	PCDATA	$1, $-1
	0x028a 00650 (pointer_vs_value/code/benchmark_invocation_test.go:136)	PCDATA	$0, $-1
	0x028a 00650 (pointer_vs_value/code/benchmark_invocation_test.go:136)	CALL	runtime.morestack_noctxt(SB)
	0x028f 00655 (pointer_vs_value/code/benchmark_invocation_test.go:136)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 68 f9 ff  eH..%....H..$h..
	0x0010 ff 48 3b 41 10 0f 86 6f 02 00 00 48 81 ec 18 07  .H;A...o...H....
	0x0020 00 00 48 89 ac 24 10 07 00 00 48 8d ac 24 10 07  ..H..$....H..$..
	0x0030 00 00 48 8d 05 00 00 00 00 48 89 04 24 e8 00 00  ..H......H..$...
	0x0040 00 00 48 8b 44 24 08 48 89 84 24 70 03 00 00 e8  ..H.D$.H..$p....
	0x0050 00 00 00 00 48 8b bc 24 70 03 00 00 83 3d 00 00  ....H..$p....=..
	0x0060 00 00 00 74 05 e9 d8 01 00 00 48 89 e6 48 89 6c  ...t......H..H.l
	0x0070 24 f0 48 8d 6c 24 f0 e8 00 00 00 00 48 8b 6d 00  $.H.l$......H.m.
	0x0080 eb 00 48 c7 84 24 40 03 00 00 00 00 00 00 eb 00  ..H..$@.........
	0x0090 48 8b 84 24 20 07 00 00 84 00 48 8b 80 08 01 00  H..$ .....H.....
	0x00a0 00 48 39 84 24 40 03 00 00 7c 05 e9 82 01 00 00  .H9.$@...|......
	0x00b0 48 8b 84 24 70 03 00 00 48 89 84 24 60 03 00 00  H..$p...H..$`...
	0x00c0 0f 57 c0 0f 11 84 24 a8 03 00 00 48 8b 84 24 60  .W....$....H..$`
	0x00d0 03 00 00 48 8d 0d 00 00 00 00 48 89 0c 24 48 89  ...H......H..$H.
	0x00e0 44 24 08 e8 00 00 00 00 f2 0f 10 44 24 10 f2 0f  D$.........D$...
	0x00f0 11 84 24 50 03 00 00 48 8b 44 24 20 48 8b 4c 24  ..$P...H.D$ H.L$
	0x0100 18 48 89 8c 24 a8 03 00 00 48 89 84 24 b0 03 00  .H..$....H..$...
	0x0110 00 f2 0f 10 84 24 50 03 00 00 f2 0f 11 84 24 58  .....$P.......$X
	0x0120 03 00 00 48 8b 84 24 b0 03 00 00 48 8b 8c 24 a8  ...H..$....H..$.
	0x0130 03 00 00 48 89 8c 24 88 03 00 00 48 89 84 24 90  ...H..$....H..$.
	0x0140 03 00 00 f2 0f 10 84 24 58 03 00 00 f2 0f 11 84  .......$X.......
	0x0150 24 48 03 00 00 48 8b 84 24 90 03 00 00 48 8b 8c  $H...H..$....H..
	0x0160 24 88 03 00 00 48 89 8c 24 78 03 00 00 48 89 84  $....H..$x...H..
	0x0170 24 80 03 00 00 48 85 c9 75 05 e9 b1 00 00 00 0f  $....H..u.......
	0x0180 57 c0 0f 11 84 24 98 03 00 00 48 8d 84 24 98 03  W....$....H..$..
	0x0190 00 00 48 89 84 24 68 03 00 00 84 00 48 8d 0d 00  ..H..$h.....H...
	0x01a0 00 00 00 48 89 8c 24 98 03 00 00 48 8d 15 00 00  ...H..$....H....
	0x01b0 00 00 48 89 94 24 a0 03 00 00 84 00 eb 00 48 89  ..H..$........H.
	0x01c0 84 24 b8 03 00 00 48 c7 84 24 c0 03 00 00 01 00  .$....H..$......
	0x01d0 00 00 48 c7 84 24 c8 03 00 00 01 00 00 00 48 89  ..H..$........H.
	0x01e0 04 24 48 c7 44 24 08 01 00 00 00 48 c7 44 24 10  .$H.D$.....H.D$.
	0x01f0 01 00 00 00 e8 00 00 00 00 eb 00 f2 0f 10 05 00  ................
	0x0200 00 00 00 f2 0f 58 84 24 48 03 00 00 f2 0f 11 05  .....X.$H.......
	0x0210 00 00 00 00 eb 00 eb 00 48 8b 84 24 40 03 00 00  ........H..$@...
	0x0220 48 ff c0 48 89 84 24 40 03 00 00 e9 60 fe ff ff  H..H..$@....`...
	0x0230 eb c9 48 8b ac 24 10 07 00 00 48 81 c4 18 07 00  ..H..$....H.....
	0x0240 00 c3 48 89 f8 48 8d bc 24 d0 03 00 00 48 89 e6  ..H..H..$....H..
	0x0250 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00 00 48  H.l$.H.l$......H
	0x0260 8b 6d 00 48 8d 0d 00 00 00 00 48 89 0c 24 48 89  .m.H......H..$H.
	0x0270 44 24 08 48 8d 84 24 d0 03 00 00 48 89 44 24 10  D$.H..$....H.D$.
	0x0280 e8 00 00 00 00 e9 f8 fd ff ff e8 00 00 00 00 e9  ................
	0x0290 6c fd ff ff                                      l...
	rel 5+4 t=16 TLS+0
	rel 53+4 t=15 type."".tera+0
	rel 62+4 t=8 runtime.newobject+0
	rel 80+4 t=8 "".createTera+0
	rel 94+4 t=15 runtime.writeBarrier+-1
	rel 120+4 t=8 runtime.duffcopy+168
	rel 214+4 t=15 go.itab.*"".tera,"".obj+0
	rel 228+4 t=8 "".calcIfc+0
	rel 415+4 t=15 type.string+0
	rel 430+4 t=15 ""..stmp_17+0
	rel 501+4 t=8 log.Fatal+0
	rel 511+4 t=15 "".F+0
	rel 528+4 t=15 "".F+0
	rel 603+4 t=8 runtime.duffcopy+168
	rel 614+4 t=15 type."".tera+0
	rel 641+4 t=8 runtime.typedmemmove+0
	rel 651+4 t=8 runtime.morestack_noctxt+0
"".avoidCompilerOptimisation STEXT size=190 args=0x18 locals=0x50
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:148)	TEXT	"".avoidCompilerOptimisation(SB), ABIInternal, $80-24
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:148)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_invocation_test.go:148)	CMPQ	SP, 16(CX)
	0x000d 00013 (pointer_vs_value/code/benchmark_invocation_test.go:148)	JLS	180
	0x0013 00019 (pointer_vs_value/code/benchmark_invocation_test.go:148)	SUBQ	$80, SP
	0x0017 00023 (pointer_vs_value/code/benchmark_invocation_test.go:148)	MOVQ	BP, 72(SP)
	0x001c 00028 (pointer_vs_value/code/benchmark_invocation_test.go:148)	LEAQ	72(SP), BP
	0x0021 00033 (pointer_vs_value/code/benchmark_invocation_test.go:148)	FUNCDATA	$0, gclocals·4265e6d7ebcb59b6281a87814b5591e9(SB)
	0x0021 00033 (pointer_vs_value/code/benchmark_invocation_test.go:148)	FUNCDATA	$1, gclocals·f6f4f7a0a474534b4049434f4f261209(SB)
	0x0021 00033 (pointer_vs_value/code/benchmark_invocation_test.go:148)	FUNCDATA	$2, gclocals·bfec7e55b3f043d1941c093912808913(SB)
	0x0021 00033 (pointer_vs_value/code/benchmark_invocation_test.go:148)	FUNCDATA	$3, "".avoidCompilerOptimisation.stkobj(SB)
	0x0021 00033 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $0
	0x0021 00033 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $1
	0x0021 00033 (pointer_vs_value/code/benchmark_invocation_test.go:149)	CMPQ	"".err+96(SP), $0
	0x0027 00039 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	46
	0x0029 00041 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	178
	0x002e 00046 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $2
	0x002e 00046 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X0, X0
	0x0031 00049 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X0, ""..autotmp_2+32(SP)
	0x0036 00054 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x0036 00054 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x0036 00054 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_2+32(SP), AX
	0x003b 00059 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_4+24(SP)
	0x0040 00064 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x0042 00066 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $2
	0x0042 00066 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), CX
	0x0049 00073 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x0049 00073 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_2+32(SP)
	0x004e 00078 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $2
	0x004e 00078 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_18(SB), CX
	0x0055 00085 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x0055 00085 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_2+40(SP)
	0x005a 00090 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x005c 00092 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	94
	0x005e 00094 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_3+48(SP)
	0x0063 00099 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_3+56(SP)
	0x006c 00108 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_3+64(SP)
	0x0075 00117 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x0075 00117 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, (SP)
	0x0079 00121 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x0082 00130 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x008b 00139 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x0090 00144 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	146
	0x0092 00146 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x009a 00154 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+88(SP), X0
	0x00a0 00160 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x00a8 00168 (pointer_vs_value/code/benchmark_invocation_test.go:153)	MOVQ	72(SP), BP
	0x00ad 00173 (pointer_vs_value/code/benchmark_invocation_test.go:153)	ADDQ	$80, SP
	0x00b1 00177 (pointer_vs_value/code/benchmark_invocation_test.go:153)	RET
	0x00b2 00178 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x00b2 00178 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x00b2 00178 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	146
	0x00b4 00180 (pointer_vs_value/code/benchmark_invocation_test.go:149)	NOP
	0x00b4 00180 (pointer_vs_value/code/benchmark_invocation_test.go:148)	PCDATA	$1, $-1
	0x00b4 00180 (pointer_vs_value/code/benchmark_invocation_test.go:148)	PCDATA	$0, $-1
	0x00b4 00180 (pointer_vs_value/code/benchmark_invocation_test.go:148)	CALL	runtime.morestack_noctxt(SB)
	0x00b9 00185 (pointer_vs_value/code/benchmark_invocation_test.go:148)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 a1  eH..%....H;a....
	0x0010 00 00 00 48 83 ec 50 48 89 6c 24 48 48 8d 6c 24  ...H..PH.l$HH.l$
	0x0020 48 48 83 7c 24 60 00 75 05 e9 84 00 00 00 0f 57  HH.|$`.u.......W
	0x0030 c0 0f 11 44 24 20 48 8d 44 24 20 48 89 44 24 18  ...D$ H.D$ H.D$.
	0x0040 84 00 48 8d 0d 00 00 00 00 48 89 4c 24 20 48 8d  ..H......H.L$ H.
	0x0050 0d 00 00 00 00 48 89 4c 24 28 84 00 eb 00 48 89  .....H.L$(....H.
	0x0060 44 24 30 48 c7 44 24 38 01 00 00 00 48 c7 44 24  D$0H.D$8....H.D$
	0x0070 40 01 00 00 00 48 89 04 24 48 c7 44 24 08 01 00  @....H..$H.D$...
	0x0080 00 00 48 c7 44 24 10 01 00 00 00 e8 00 00 00 00  ..H.D$..........
	0x0090 eb 00 f2 0f 10 05 00 00 00 00 f2 0f 58 44 24 58  ............XD$X
	0x00a0 f2 0f 11 05 00 00 00 00 48 8b 6c 24 48 48 83 c4  ........H.l$HH..
	0x00b0 50 c3 eb de e8 00 00 00 00 e9 42 ff ff ff        P.........B...
	rel 5+4 t=16 TLS+0
	rel 69+4 t=15 type.string+0
	rel 81+4 t=15 ""..stmp_18+0
	rel 140+4 t=8 log.Fatal+0
	rel 150+4 t=15 "".F+0
	rel 164+4 t=15 "".F+0
	rel 181+4 t=8 runtime.morestack_noctxt+0
"".createMicro STEXT size=228 args=0x10 locals=0x58
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:157)	TEXT	"".createMicro(SB), ABIInternal, $88-16
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:157)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_invocation_test.go:157)	CMPQ	SP, 16(CX)
	0x000d 00013 (pointer_vs_value/code/benchmark_invocation_test.go:157)	JLS	218
	0x0013 00019 (pointer_vs_value/code/benchmark_invocation_test.go:157)	SUBQ	$88, SP
	0x0017 00023 (pointer_vs_value/code/benchmark_invocation_test.go:157)	MOVQ	BP, 80(SP)
	0x001c 00028 (pointer_vs_value/code/benchmark_invocation_test.go:157)	LEAQ	80(SP), BP
	0x0021 00033 (pointer_vs_value/code/benchmark_invocation_test.go:157)	FUNCDATA	$0, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0021 00033 (pointer_vs_value/code/benchmark_invocation_test.go:157)	FUNCDATA	$1, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0021 00033 (pointer_vs_value/code/benchmark_invocation_test.go:157)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0021 00033 (pointer_vs_value/code/benchmark_invocation_test.go:157)	PCDATA	$0, $0
	0x0021 00033 (pointer_vs_value/code/benchmark_invocation_test.go:157)	PCDATA	$1, $0
	0x0021 00033 (pointer_vs_value/code/benchmark_invocation_test.go:157)	MOVQ	$0, "".~r0+96(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_invocation_test.go:157)	XORPS	X0, X0
	0x002d 00045 (pointer_vs_value/code/benchmark_invocation_test.go:157)	MOVSD	X0, "".~r0+104(SP)
	0x0033 00051 (pointer_vs_value/code/benchmark_invocation_test.go:159)	MOVQ	$0, "".~R0+16(SP)
	0x003c 00060 (<unknown line number>)	NOP
	0x003c 00060 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $1
	0x003c 00060 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0043 00067 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0043 00067 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $1
	0x0043 00067 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+72(SP)
	0x0048 00072 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+24(SP)
	0x0051 00081 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $1
	0x0051 00081 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0051 00081 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+72(SP), AX
	0x0056 00086 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0058 00088 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x005b 00091 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x005d 00093 (<unknown line number>)	NOP
	0x005d 00093 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0061 00097 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0065 00101 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0065 00101 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0069 00105 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x006b 00107 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0070 00112 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_4+48(SP)
	0x0075 00117 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+24(SP)
	0x007a 00122 ($GOROOT/src/math/rand/rand.go:299)	JMP	124
	0x007c 00124 (pointer_vs_value/code/benchmark_invocation_test.go:159)	MOVQ	"".~R0+24(SP), AX
	0x0081 00129 (pointer_vs_value/code/benchmark_invocation_test.go:159)	MOVQ	AX, ""..autotmp_6+32(SP)
	0x0086 00134 (pointer_vs_value/code/benchmark_invocation_test.go:159)	MOVQ	AX, "".~R0+16(SP)
	0x008b 00139 (pointer_vs_value/code/benchmark_invocation_test.go:159)	JMP	141
	0x008d 00141 (pointer_vs_value/code/benchmark_invocation_test.go:160)	CALL	math/rand.Float64(SB)
	0x0092 00146 (pointer_vs_value/code/benchmark_invocation_test.go:160)	MOVSD	(SP), X0
	0x0097 00151 (pointer_vs_value/code/benchmark_invocation_test.go:160)	MOVSD	X0, ""..autotmp_5+40(SP)
	0x009d 00157 (pointer_vs_value/code/benchmark_invocation_test.go:158)	MOVQ	$0, ""..autotmp_7+56(SP)
	0x00a6 00166 (pointer_vs_value/code/benchmark_invocation_test.go:158)	XORPS	X0, X0
	0x00a9 00169 (pointer_vs_value/code/benchmark_invocation_test.go:158)	MOVSD	X0, ""..autotmp_7+64(SP)
	0x00af 00175 (pointer_vs_value/code/benchmark_invocation_test.go:159)	MOVQ	"".~R0+16(SP), AX
	0x00b4 00180 (pointer_vs_value/code/benchmark_invocation_test.go:159)	MOVQ	AX, ""..autotmp_7+56(SP)
	0x00b9 00185 (pointer_vs_value/code/benchmark_invocation_test.go:160)	MOVSD	""..autotmp_5+40(SP), X0
	0x00bf 00191 (pointer_vs_value/code/benchmark_invocation_test.go:160)	MOVSD	X0, ""..autotmp_7+64(SP)
	0x00c5 00197 (pointer_vs_value/code/benchmark_invocation_test.go:158)	MOVQ	AX, "".~r0+96(SP)
	0x00ca 00202 (pointer_vs_value/code/benchmark_invocation_test.go:158)	MOVSD	X0, "".~r0+104(SP)
	0x00d0 00208 (pointer_vs_value/code/benchmark_invocation_test.go:158)	MOVQ	80(SP), BP
	0x00d5 00213 (pointer_vs_value/code/benchmark_invocation_test.go:158)	ADDQ	$88, SP
	0x00d9 00217 (pointer_vs_value/code/benchmark_invocation_test.go:158)	RET
	0x00da 00218 (pointer_vs_value/code/benchmark_invocation_test.go:158)	NOP
	0x00da 00218 (pointer_vs_value/code/benchmark_invocation_test.go:157)	PCDATA	$1, $-1
	0x00da 00218 (pointer_vs_value/code/benchmark_invocation_test.go:157)	PCDATA	$0, $-1
	0x00da 00218 (pointer_vs_value/code/benchmark_invocation_test.go:157)	CALL	runtime.morestack_noctxt(SB)
	0x00df 00223 (pointer_vs_value/code/benchmark_invocation_test.go:157)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 c7  eH..%....H;a....
	0x0010 00 00 00 48 83 ec 58 48 89 6c 24 50 48 8d 6c 24  ...H..XH.l$PH.l$
	0x0020 50 48 c7 44 24 60 00 00 00 00 0f 57 c0 f2 0f 11  PH.D$`.....W....
	0x0030 44 24 68 48 c7 44 24 10 00 00 00 00 48 8b 05 00  D$hH.D$.....H...
	0x0040 00 00 00 48 89 44 24 48 48 c7 44 24 18 00 00 00  ...H.D$HH.D$....
	0x0050 00 48 8b 44 24 48 84 00 48 8b 08 84 01 48 8b 49  .H.D$H..H....H.I
	0x0060 18 48 8b 40 08 48 89 04 24 ff d1 48 8b 44 24 08  .H.@.H..$..H.D$.
	0x0070 48 89 44 24 30 48 89 44 24 18 eb 00 48 8b 44 24  H.D$0H.D$...H.D$
	0x0080 18 48 89 44 24 20 48 89 44 24 10 eb 00 e8 00 00  .H.D$ H.D$......
	0x0090 00 00 f2 0f 10 04 24 f2 0f 11 44 24 28 48 c7 44  ......$...D$(H.D
	0x00a0 24 38 00 00 00 00 0f 57 c0 f2 0f 11 44 24 40 48  $8.....W....D$@H
	0x00b0 8b 44 24 10 48 89 44 24 38 f2 0f 10 44 24 28 f2  .D$.H.D$8...D$(.
	0x00c0 0f 11 44 24 40 48 89 44 24 60 f2 0f 11 44 24 68  ..D$@H.D$`...D$h
	0x00d0 48 8b 6c 24 50 48 83 c4 58 c3 e8 00 00 00 00 e9  H.l$PH..X.......
	0x00e0 1c ff ff ff                                      ....
	rel 5+4 t=16 TLS+0
	rel 63+4 t=15 math/rand.globalRand+0
	rel 105+0 t=11 +0
	rel 142+4 t=8 math/rand.Float64+0
	rel 219+4 t=8 runtime.morestack_noctxt+0
"".createTiny STEXT size=418 args=0x20 locals=0xa8
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:164)	TEXT	"".createTiny(SB), ABIInternal, $168-32
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:164)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_invocation_test.go:164)	LEAQ	-40(SP), AX
	0x000e 00014 (pointer_vs_value/code/benchmark_invocation_test.go:164)	CMPQ	AX, 16(CX)
	0x0012 00018 (pointer_vs_value/code/benchmark_invocation_test.go:164)	JLS	408
	0x0018 00024 (pointer_vs_value/code/benchmark_invocation_test.go:164)	SUBQ	$168, SP
	0x001f 00031 (pointer_vs_value/code/benchmark_invocation_test.go:164)	MOVQ	BP, 160(SP)
	0x0027 00039 (pointer_vs_value/code/benchmark_invocation_test.go:164)	LEAQ	160(SP), BP
	0x002f 00047 (pointer_vs_value/code/benchmark_invocation_test.go:164)	FUNCDATA	$0, gclocals·50f70adb88af437fb2798cd6fb0132b3(SB)
	0x002f 00047 (pointer_vs_value/code/benchmark_invocation_test.go:164)	FUNCDATA	$1, gclocals·c6f350fd0079e7b679306812507d87b6(SB)
	0x002f 00047 (pointer_vs_value/code/benchmark_invocation_test.go:164)	FUNCDATA	$2, gclocals·1cf923758aae2e428391d1783fe59973(SB)
	0x002f 00047 (pointer_vs_value/code/benchmark_invocation_test.go:164)	PCDATA	$0, $0
	0x002f 00047 (pointer_vs_value/code/benchmark_invocation_test.go:164)	PCDATA	$1, $0
	0x002f 00047 (pointer_vs_value/code/benchmark_invocation_test.go:164)	MOVQ	$0, "".~r0+176(SP)
	0x003b 00059 (pointer_vs_value/code/benchmark_invocation_test.go:164)	XORPS	X0, X0
	0x003e 00062 (pointer_vs_value/code/benchmark_invocation_test.go:164)	MOVSD	X0, "".~r0+184(SP)
	0x0047 00071 (pointer_vs_value/code/benchmark_invocation_test.go:164)	XORPS	X1, X1
	0x004a 00074 (pointer_vs_value/code/benchmark_invocation_test.go:164)	MOVUPS	X1, "".~r0+192(SP)
	0x0052 00082 (pointer_vs_value/code/benchmark_invocation_test.go:166)	MOVQ	$0, "".~R0+40(SP)
	0x005b 00091 (<unknown line number>)	NOP
	0x005b 00091 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $1
	0x005b 00091 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0062 00098 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0062 00098 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $1
	0x0062 00098 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+88(SP)
	0x0067 00103 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+32(SP)
	0x0070 00112 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $1
	0x0070 00112 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0070 00112 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+88(SP), AX
	0x0075 00117 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0077 00119 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x007a 00122 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x007c 00124 (<unknown line number>)	NOP
	0x007c 00124 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0080 00128 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0084 00132 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0084 00132 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0088 00136 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x008a 00138 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x008f 00143 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_6+72(SP)
	0x0094 00148 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+32(SP)
	0x0099 00153 ($GOROOT/src/math/rand/rand.go:299)	JMP	155
	0x009b 00155 (pointer_vs_value/code/benchmark_invocation_test.go:166)	MOVQ	"".~R0+32(SP), AX
	0x00a0 00160 (pointer_vs_value/code/benchmark_invocation_test.go:166)	MOVQ	AX, ""..autotmp_10+80(SP)
	0x00a5 00165 (pointer_vs_value/code/benchmark_invocation_test.go:166)	MOVQ	AX, "".~R0+40(SP)
	0x00aa 00170 (pointer_vs_value/code/benchmark_invocation_test.go:166)	JMP	172
	0x00ac 00172 (pointer_vs_value/code/benchmark_invocation_test.go:167)	CALL	math/rand.Float64(SB)
	0x00b1 00177 (pointer_vs_value/code/benchmark_invocation_test.go:167)	MOVSD	(SP), X0
	0x00b6 00182 (pointer_vs_value/code/benchmark_invocation_test.go:167)	MOVSD	X0, ""..autotmp_7+64(SP)
	0x00bc 00188 (pointer_vs_value/code/benchmark_invocation_test.go:168)	CALL	math/rand.Int(SB)
	0x00c1 00193 (pointer_vs_value/code/benchmark_invocation_test.go:168)	MOVQ	(SP), AX
	0x00c5 00197 (pointer_vs_value/code/benchmark_invocation_test.go:168)	MOVQ	AX, ""..autotmp_8+56(SP)
	0x00ca 00202 (pointer_vs_value/code/benchmark_invocation_test.go:168)	MOVQ	AX, strconv.i+48(SP)
	0x00cf 00207 (pointer_vs_value/code/benchmark_invocation_test.go:168)	XORPS	X0, X0
	0x00d2 00210 (pointer_vs_value/code/benchmark_invocation_test.go:168)	MOVUPS	X0, "".~R0+96(SP)
	0x00d7 00215 (<unknown line number>)	NOP
	0x00d7 00215 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+48(SP), AX
	0x00dc 00220 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x00e0 00224 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x00e9 00233 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x00ee 00238 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x00f3 00243 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $2
	0x00f3 00243 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x00f8 00248 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_9+112(SP)
	0x00fd 00253 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_9+120(SP)
	0x0102 00258 (pointer_vs_value/code/benchmark_invocation_test.go:168)	PCDATA	$0, $0
	0x0102 00258 (pointer_vs_value/code/benchmark_invocation_test.go:168)	PCDATA	$1, $2
	0x0102 00258 (pointer_vs_value/code/benchmark_invocation_test.go:168)	MOVQ	CX, "".~R0+96(SP)
	0x0107 00263 (pointer_vs_value/code/benchmark_invocation_test.go:168)	MOVQ	AX, "".~R0+104(SP)
	0x010c 00268 (pointer_vs_value/code/benchmark_invocation_test.go:168)	JMP	270
	0x010e 00270 (pointer_vs_value/code/benchmark_invocation_test.go:165)	MOVQ	$0, ""..autotmp_11+128(SP)
	0x011a 00282 (pointer_vs_value/code/benchmark_invocation_test.go:165)	XORPS	X0, X0
	0x011d 00285 (pointer_vs_value/code/benchmark_invocation_test.go:165)	MOVSD	X0, ""..autotmp_11+136(SP)
	0x0126 00294 (pointer_vs_value/code/benchmark_invocation_test.go:165)	XORPS	X0, X0
	0x0129 00297 (pointer_vs_value/code/benchmark_invocation_test.go:165)	MOVUPS	X0, ""..autotmp_11+144(SP)
	0x0131 00305 (pointer_vs_value/code/benchmark_invocation_test.go:166)	MOVQ	"".~R0+40(SP), AX
	0x0136 00310 (pointer_vs_value/code/benchmark_invocation_test.go:166)	MOVQ	AX, ""..autotmp_11+128(SP)
	0x013e 00318 (pointer_vs_value/code/benchmark_invocation_test.go:167)	MOVSD	""..autotmp_7+64(SP), X0
	0x0144 00324 (pointer_vs_value/code/benchmark_invocation_test.go:167)	MOVSD	X0, ""..autotmp_11+136(SP)
	0x014d 00333 (pointer_vs_value/code/benchmark_invocation_test.go:168)	PCDATA	$0, $2
	0x014d 00333 (pointer_vs_value/code/benchmark_invocation_test.go:168)	MOVQ	"".~R0+96(SP), CX
	0x0152 00338 (pointer_vs_value/code/benchmark_invocation_test.go:168)	PCDATA	$1, $0
	0x0152 00338 (pointer_vs_value/code/benchmark_invocation_test.go:168)	MOVQ	"".~R0+104(SP), DX
	0x0157 00343 (pointer_vs_value/code/benchmark_invocation_test.go:168)	MOVQ	CX, ""..autotmp_11+144(SP)
	0x015f 00351 (pointer_vs_value/code/benchmark_invocation_test.go:168)	MOVQ	DX, ""..autotmp_11+152(SP)
	0x0167 00359 (pointer_vs_value/code/benchmark_invocation_test.go:165)	PCDATA	$1, $3
	0x0167 00359 (pointer_vs_value/code/benchmark_invocation_test.go:165)	MOVQ	AX, "".~r0+176(SP)
	0x016f 00367 (pointer_vs_value/code/benchmark_invocation_test.go:165)	MOVSD	X0, "".~r0+184(SP)
	0x0178 00376 (pointer_vs_value/code/benchmark_invocation_test.go:165)	PCDATA	$0, $0
	0x0178 00376 (pointer_vs_value/code/benchmark_invocation_test.go:165)	MOVQ	CX, "".~r0+192(SP)
	0x0180 00384 (pointer_vs_value/code/benchmark_invocation_test.go:165)	MOVQ	DX, "".~r0+200(SP)
	0x0188 00392 (pointer_vs_value/code/benchmark_invocation_test.go:165)	MOVQ	160(SP), BP
	0x0190 00400 (pointer_vs_value/code/benchmark_invocation_test.go:165)	ADDQ	$168, SP
	0x0197 00407 (pointer_vs_value/code/benchmark_invocation_test.go:165)	RET
	0x0198 00408 (pointer_vs_value/code/benchmark_invocation_test.go:165)	NOP
	0x0198 00408 (pointer_vs_value/code/benchmark_invocation_test.go:164)	PCDATA	$1, $-1
	0x0198 00408 (pointer_vs_value/code/benchmark_invocation_test.go:164)	PCDATA	$0, $-1
	0x0198 00408 (pointer_vs_value/code/benchmark_invocation_test.go:164)	CALL	runtime.morestack_noctxt(SB)
	0x019d 00413 (pointer_vs_value/code/benchmark_invocation_test.go:164)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 44 24 d8 48 3b  eH..%....H.D$.H;
	0x0010 41 10 0f 86 80 01 00 00 48 81 ec a8 00 00 00 48  A.......H......H
	0x0020 89 ac 24 a0 00 00 00 48 8d ac 24 a0 00 00 00 48  ..$....H..$....H
	0x0030 c7 84 24 b0 00 00 00 00 00 00 00 0f 57 c0 f2 0f  ..$.........W...
	0x0040 11 84 24 b8 00 00 00 0f 57 c9 0f 11 8c 24 c0 00  ..$.....W....$..
	0x0050 00 00 48 c7 44 24 28 00 00 00 00 48 8b 05 00 00  ..H.D$(....H....
	0x0060 00 00 48 89 44 24 58 48 c7 44 24 20 00 00 00 00  ..H.D$XH.D$ ....
	0x0070 48 8b 44 24 58 84 00 48 8b 08 84 01 48 8b 49 18  H.D$X..H....H.I.
	0x0080 48 8b 40 08 48 89 04 24 ff d1 48 8b 44 24 08 48  H.@.H..$..H.D$.H
	0x0090 89 44 24 48 48 89 44 24 20 eb 00 48 8b 44 24 20  .D$HH.D$ ..H.D$ 
	0x00a0 48 89 44 24 50 48 89 44 24 28 eb 00 e8 00 00 00  H.D$PH.D$(......
	0x00b0 00 f2 0f 10 04 24 f2 0f 11 44 24 40 e8 00 00 00  .....$...D$@....
	0x00c0 00 48 8b 04 24 48 89 44 24 38 48 89 44 24 30 0f  .H..$H.D$8H.D$0.
	0x00d0 57 c0 0f 11 44 24 60 48 8b 44 24 30 48 89 04 24  W...D$`H.D$0H..$
	0x00e0 48 c7 44 24 08 0a 00 00 00 e8 00 00 00 00 48 8b  H.D$..........H.
	0x00f0 44 24 18 48 8b 4c 24 10 48 89 4c 24 70 48 89 44  D$.H.L$.H.L$pH.D
	0x0100 24 78 48 89 4c 24 60 48 89 44 24 68 eb 00 48 c7  $xH.L$`H.D$h..H.
	0x0110 84 24 80 00 00 00 00 00 00 00 0f 57 c0 f2 0f 11  .$.........W....
	0x0120 84 24 88 00 00 00 0f 57 c0 0f 11 84 24 90 00 00  .$.....W....$...
	0x0130 00 48 8b 44 24 28 48 89 84 24 80 00 00 00 f2 0f  .H.D$(H..$......
	0x0140 10 44 24 40 f2 0f 11 84 24 88 00 00 00 48 8b 4c  .D$@....$....H.L
	0x0150 24 60 48 8b 54 24 68 48 89 8c 24 90 00 00 00 48  $`H.T$hH..$....H
	0x0160 89 94 24 98 00 00 00 48 89 84 24 b0 00 00 00 f2  ..$....H..$.....
	0x0170 0f 11 84 24 b8 00 00 00 48 89 8c 24 c0 00 00 00  ...$....H..$....
	0x0180 48 89 94 24 c8 00 00 00 48 8b ac 24 a0 00 00 00  H..$....H..$....
	0x0190 48 81 c4 a8 00 00 00 c3 e8 00 00 00 00 e9 5e fe  H.............^.
	0x01a0 ff ff                                            ..
	rel 5+4 t=16 TLS+0
	rel 94+4 t=15 math/rand.globalRand+0
	rel 136+0 t=11 +0
	rel 173+4 t=8 math/rand.Float64+0
	rel 189+4 t=8 math/rand.Int+0
	rel 234+4 t=8 strconv.FormatInt+0
	rel 409+4 t=8 runtime.morestack_noctxt+0
"".createMini STEXT size=1022 args=0x60 locals=0x168
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:172)	TEXT	"".createMini(SB), ABIInternal, $360-96
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:172)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_invocation_test.go:172)	LEAQ	-232(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_invocation_test.go:172)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_invocation_test.go:172)	JLS	1012
	0x001b 00027 (pointer_vs_value/code/benchmark_invocation_test.go:172)	SUBQ	$360, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_invocation_test.go:172)	MOVQ	BP, 352(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_invocation_test.go:172)	LEAQ	352(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:172)	FUNCDATA	$0, gclocals·5d32cd9dc3f75c677aaee1719e88e3bd(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:172)	FUNCDATA	$1, gclocals·5122725819a57f2a39d656e967ea37b3(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:172)	FUNCDATA	$2, gclocals·18fc722f2a78a2e34073064e2f86e2da(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:172)	PCDATA	$0, $1
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:172)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:172)	LEAQ	"".~r0+368(SP), DI
	0x003a 00058 (pointer_vs_value/code/benchmark_invocation_test.go:172)	XORPS	X0, X0
	0x003d 00061 (pointer_vs_value/code/benchmark_invocation_test.go:172)	PCDATA	$0, $0
	0x003d 00061 (pointer_vs_value/code/benchmark_invocation_test.go:172)	LEAQ	-32(DI), DI
	0x0041 00065 (pointer_vs_value/code/benchmark_invocation_test.go:172)	DUFFZERO	$273
	0x0054 00084 (pointer_vs_value/code/benchmark_invocation_test.go:174)	MOVQ	$0, "".~R0+48(SP)
	0x005d 00093 (<unknown line number>)	NOP
	0x005d 00093 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x005d 00093 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0064 00100 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0064 00100 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $1
	0x0064 00100 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+168(SP)
	0x006c 00108 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+64(SP)
	0x0075 00117 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0075 00117 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0075 00117 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+168(SP), AX
	0x007d 00125 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x007f 00127 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0082 00130 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0084 00132 (<unknown line number>)	NOP
	0x0084 00132 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0088 00136 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x008c 00140 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x008c 00140 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0090 00144 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0092 00146 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0097 00151 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_16+160(SP)
	0x009f 00159 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+64(SP)
	0x00a4 00164 ($GOROOT/src/math/rand/rand.go:299)	JMP	166
	0x00a6 00166 (pointer_vs_value/code/benchmark_invocation_test.go:174)	MOVQ	"".~R0+64(SP), AX
	0x00ab 00171 (pointer_vs_value/code/benchmark_invocation_test.go:174)	MOVQ	AX, ""..autotmp_22+120(SP)
	0x00b0 00176 (pointer_vs_value/code/benchmark_invocation_test.go:174)	MOVQ	AX, "".~R0+48(SP)
	0x00b5 00181 (pointer_vs_value/code/benchmark_invocation_test.go:174)	JMP	183
	0x00b7 00183 (pointer_vs_value/code/benchmark_invocation_test.go:175)	MOVQ	$0, "".~R0+72(SP)
	0x00c0 00192 (<unknown line number>)	NOP
	0x00c0 00192 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x00c0 00192 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x00c7 00199 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x00c7 00199 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $2
	0x00c7 00199 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+176(SP)
	0x00cf 00207 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+56(SP)
	0x00d8 00216 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x00d8 00216 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x00d8 00216 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+176(SP), AX
	0x00e0 00224 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x00e2 00226 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x00e5 00229 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x00e7 00231 (<unknown line number>)	NOP
	0x00e7 00231 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x00eb 00235 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x00ef 00239 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x00ef 00239 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x00f3 00243 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x00f5 00245 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x00fa 00250 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_16+160(SP)
	0x0102 00258 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+56(SP)
	0x0107 00263 ($GOROOT/src/math/rand/rand.go:299)	JMP	265
	0x0109 00265 (pointer_vs_value/code/benchmark_invocation_test.go:175)	MOVQ	"".~R0+56(SP), AX
	0x010e 00270 (pointer_vs_value/code/benchmark_invocation_test.go:175)	MOVQ	AX, ""..autotmp_23+112(SP)
	0x0113 00275 (pointer_vs_value/code/benchmark_invocation_test.go:175)	MOVQ	AX, "".~R0+72(SP)
	0x0118 00280 (pointer_vs_value/code/benchmark_invocation_test.go:175)	JMP	282
	0x011a 00282 (pointer_vs_value/code/benchmark_invocation_test.go:176)	MOVQ	$0, "".~R0+40(SP)
	0x0123 00291 (<unknown line number>)	NOP
	0x0123 00291 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0123 00291 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x012a 00298 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x012a 00298 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $3
	0x012a 00298 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+184(SP)
	0x0132 00306 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+32(SP)
	0x013b 00315 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x013b 00315 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x013b 00315 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+184(SP), AX
	0x0143 00323 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0145 00325 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0148 00328 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x014a 00330 (<unknown line number>)	NOP
	0x014a 00330 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x014e 00334 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0152 00338 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0152 00338 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0156 00342 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0158 00344 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x015d 00349 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_16+160(SP)
	0x0165 00357 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+32(SP)
	0x016a 00362 ($GOROOT/src/math/rand/rand.go:299)	JMP	364
	0x016c 00364 (pointer_vs_value/code/benchmark_invocation_test.go:176)	MOVQ	"".~R0+32(SP), AX
	0x0171 00369 (pointer_vs_value/code/benchmark_invocation_test.go:176)	MOVQ	AX, ""..autotmp_24+104(SP)
	0x0176 00374 (pointer_vs_value/code/benchmark_invocation_test.go:176)	MOVQ	AX, "".~R0+40(SP)
	0x017b 00379 (pointer_vs_value/code/benchmark_invocation_test.go:176)	JMP	381
	0x017d 00381 (pointer_vs_value/code/benchmark_invocation_test.go:177)	CALL	math/rand.Float64(SB)
	0x0182 00386 (pointer_vs_value/code/benchmark_invocation_test.go:177)	MOVSD	(SP), X0
	0x0187 00391 (pointer_vs_value/code/benchmark_invocation_test.go:177)	MOVSD	X0, ""..autotmp_17+152(SP)
	0x0190 00400 (pointer_vs_value/code/benchmark_invocation_test.go:178)	CALL	math/rand.Float64(SB)
	0x0195 00405 (pointer_vs_value/code/benchmark_invocation_test.go:178)	MOVSD	(SP), X0
	0x019a 00410 (pointer_vs_value/code/benchmark_invocation_test.go:178)	MOVSD	X0, ""..autotmp_18+144(SP)
	0x01a3 00419 (pointer_vs_value/code/benchmark_invocation_test.go:179)	CALL	math/rand.Float64(SB)
	0x01a8 00424 (pointer_vs_value/code/benchmark_invocation_test.go:179)	MOVSD	(SP), X0
	0x01ad 00429 (pointer_vs_value/code/benchmark_invocation_test.go:179)	MOVSD	X0, ""..autotmp_19+136(SP)
	0x01b6 00438 (pointer_vs_value/code/benchmark_invocation_test.go:180)	CALL	math/rand.Int(SB)
	0x01bb 00443 (pointer_vs_value/code/benchmark_invocation_test.go:180)	MOVQ	(SP), AX
	0x01bf 00447 (pointer_vs_value/code/benchmark_invocation_test.go:180)	MOVQ	AX, ""..autotmp_20+128(SP)
	0x01c7 00455 (pointer_vs_value/code/benchmark_invocation_test.go:180)	MOVQ	AX, strconv.i+96(SP)
	0x01cc 00460 (pointer_vs_value/code/benchmark_invocation_test.go:180)	XORPS	X0, X0
	0x01cf 00463 (pointer_vs_value/code/benchmark_invocation_test.go:180)	MOVUPS	X0, "".~R0+192(SP)
	0x01d7 00471 (<unknown line number>)	NOP
	0x01d7 00471 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+96(SP), AX
	0x01dc 00476 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x01e0 00480 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x01e9 00489 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x01ee 00494 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x01f3 00499 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x01f3 00499 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x01f8 00504 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_21+240(SP)
	0x0200 00512 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_21+248(SP)
	0x0208 00520 (pointer_vs_value/code/benchmark_invocation_test.go:180)	PCDATA	$0, $0
	0x0208 00520 (pointer_vs_value/code/benchmark_invocation_test.go:180)	PCDATA	$1, $4
	0x0208 00520 (pointer_vs_value/code/benchmark_invocation_test.go:180)	MOVQ	CX, "".~R0+192(SP)
	0x0210 00528 (pointer_vs_value/code/benchmark_invocation_test.go:180)	MOVQ	AX, "".~R0+200(SP)
	0x0218 00536 (pointer_vs_value/code/benchmark_invocation_test.go:180)	JMP	538
	0x021a 00538 (pointer_vs_value/code/benchmark_invocation_test.go:181)	CALL	math/rand.Int(SB)
	0x021f 00543 (pointer_vs_value/code/benchmark_invocation_test.go:181)	MOVQ	(SP), AX
	0x0223 00547 (pointer_vs_value/code/benchmark_invocation_test.go:181)	MOVQ	AX, ""..autotmp_20+128(SP)
	0x022b 00555 (pointer_vs_value/code/benchmark_invocation_test.go:181)	MOVQ	AX, strconv.i+88(SP)
	0x0230 00560 (pointer_vs_value/code/benchmark_invocation_test.go:181)	XORPS	X0, X0
	0x0233 00563 (pointer_vs_value/code/benchmark_invocation_test.go:181)	MOVUPS	X0, "".~R0+208(SP)
	0x023b 00571 (<unknown line number>)	NOP
	0x023b 00571 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+88(SP), AX
	0x0240 00576 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x0244 00580 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x024d 00589 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x0252 00594 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x0257 00599 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x0257 00599 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x025c 00604 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_21+240(SP)
	0x0264 00612 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_21+248(SP)
	0x026c 00620 (pointer_vs_value/code/benchmark_invocation_test.go:181)	PCDATA	$0, $0
	0x026c 00620 (pointer_vs_value/code/benchmark_invocation_test.go:181)	PCDATA	$1, $5
	0x026c 00620 (pointer_vs_value/code/benchmark_invocation_test.go:181)	MOVQ	CX, "".~R0+208(SP)
	0x0274 00628 (pointer_vs_value/code/benchmark_invocation_test.go:181)	MOVQ	AX, "".~R0+216(SP)
	0x027c 00636 (pointer_vs_value/code/benchmark_invocation_test.go:181)	JMP	638
	0x027e 00638 (pointer_vs_value/code/benchmark_invocation_test.go:182)	CALL	math/rand.Int(SB)
	0x0283 00643 (pointer_vs_value/code/benchmark_invocation_test.go:182)	MOVQ	(SP), AX
	0x0287 00647 (pointer_vs_value/code/benchmark_invocation_test.go:182)	MOVQ	AX, ""..autotmp_20+128(SP)
	0x028f 00655 (pointer_vs_value/code/benchmark_invocation_test.go:182)	MOVQ	AX, strconv.i+80(SP)
	0x0294 00660 (pointer_vs_value/code/benchmark_invocation_test.go:182)	XORPS	X0, X0
	0x0297 00663 (pointer_vs_value/code/benchmark_invocation_test.go:182)	MOVUPS	X0, "".~R0+224(SP)
	0x029f 00671 (<unknown line number>)	NOP
	0x029f 00671 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+80(SP), AX
	0x02a4 00676 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x02a8 00680 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x02b1 00689 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x02b6 00694 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x02bb 00699 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x02bb 00699 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x02c0 00704 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_21+240(SP)
	0x02c8 00712 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_21+248(SP)
	0x02d0 00720 (pointer_vs_value/code/benchmark_invocation_test.go:182)	PCDATA	$0, $0
	0x02d0 00720 (pointer_vs_value/code/benchmark_invocation_test.go:182)	PCDATA	$1, $6
	0x02d0 00720 (pointer_vs_value/code/benchmark_invocation_test.go:182)	MOVQ	CX, "".~R0+224(SP)
	0x02d8 00728 (pointer_vs_value/code/benchmark_invocation_test.go:182)	MOVQ	AX, "".~R0+232(SP)
	0x02e0 00736 (pointer_vs_value/code/benchmark_invocation_test.go:182)	JMP	738
	0x02e2 00738 (pointer_vs_value/code/benchmark_invocation_test.go:182)	PCDATA	$0, $1
	0x02e2 00738 (pointer_vs_value/code/benchmark_invocation_test.go:182)	PCDATA	$1, $7
	0x02e2 00738 (pointer_vs_value/code/benchmark_invocation_test.go:182)	LEAQ	""..autotmp_25+256(SP), DI
	0x02ea 00746 (pointer_vs_value/code/benchmark_invocation_test.go:182)	PCDATA	$0, $4
	0x02ea 00746 (pointer_vs_value/code/benchmark_invocation_test.go:182)	LEAQ	""..stmp_19(SB), SI
	0x02f1 00753 (pointer_vs_value/code/benchmark_invocation_test.go:182)	PCDATA	$0, $0
	0x02f1 00753 (pointer_vs_value/code/benchmark_invocation_test.go:182)	DUFFCOPY	$812
	0x0304 00772 (pointer_vs_value/code/benchmark_invocation_test.go:174)	MOVQ	"".~R0+48(SP), AX
	0x0309 00777 (pointer_vs_value/code/benchmark_invocation_test.go:174)	MOVQ	AX, ""..autotmp_25+256(SP)
	0x0311 00785 (pointer_vs_value/code/benchmark_invocation_test.go:175)	MOVQ	"".~R0+72(SP), AX
	0x0316 00790 (pointer_vs_value/code/benchmark_invocation_test.go:175)	MOVQ	AX, ""..autotmp_25+264(SP)
	0x031e 00798 (pointer_vs_value/code/benchmark_invocation_test.go:176)	MOVQ	"".~R0+40(SP), AX
	0x0323 00803 (pointer_vs_value/code/benchmark_invocation_test.go:176)	MOVQ	AX, ""..autotmp_25+272(SP)
	0x032b 00811 (pointer_vs_value/code/benchmark_invocation_test.go:177)	MOVSD	""..autotmp_17+152(SP), X0
	0x0334 00820 (pointer_vs_value/code/benchmark_invocation_test.go:177)	MOVSD	X0, ""..autotmp_25+280(SP)
	0x033d 00829 (pointer_vs_value/code/benchmark_invocation_test.go:178)	MOVSD	""..autotmp_18+144(SP), X0
	0x0346 00838 (pointer_vs_value/code/benchmark_invocation_test.go:178)	MOVSD	X0, ""..autotmp_25+288(SP)
	0x034f 00847 (pointer_vs_value/code/benchmark_invocation_test.go:179)	MOVSD	""..autotmp_19+136(SP), X0
	0x0358 00856 (pointer_vs_value/code/benchmark_invocation_test.go:179)	MOVSD	X0, ""..autotmp_25+296(SP)
	0x0361 00865 (pointer_vs_value/code/benchmark_invocation_test.go:180)	MOVQ	"".~R0+200(SP), AX
	0x0369 00873 (pointer_vs_value/code/benchmark_invocation_test.go:180)	PCDATA	$0, $3
	0x0369 00873 (pointer_vs_value/code/benchmark_invocation_test.go:180)	PCDATA	$1, $8
	0x0369 00873 (pointer_vs_value/code/benchmark_invocation_test.go:180)	MOVQ	"".~R0+192(SP), CX
	0x0371 00881 (pointer_vs_value/code/benchmark_invocation_test.go:180)	PCDATA	$0, $0
	0x0371 00881 (pointer_vs_value/code/benchmark_invocation_test.go:180)	MOVQ	CX, ""..autotmp_25+304(SP)
	0x0379 00889 (pointer_vs_value/code/benchmark_invocation_test.go:180)	MOVQ	AX, ""..autotmp_25+312(SP)
	0x0381 00897 (pointer_vs_value/code/benchmark_invocation_test.go:181)	MOVQ	"".~R0+216(SP), AX
	0x0389 00905 (pointer_vs_value/code/benchmark_invocation_test.go:181)	PCDATA	$0, $3
	0x0389 00905 (pointer_vs_value/code/benchmark_invocation_test.go:181)	PCDATA	$1, $9
	0x0389 00905 (pointer_vs_value/code/benchmark_invocation_test.go:181)	MOVQ	"".~R0+208(SP), CX
	0x0391 00913 (pointer_vs_value/code/benchmark_invocation_test.go:181)	PCDATA	$0, $0
	0x0391 00913 (pointer_vs_value/code/benchmark_invocation_test.go:181)	MOVQ	CX, ""..autotmp_25+320(SP)
	0x0399 00921 (pointer_vs_value/code/benchmark_invocation_test.go:181)	MOVQ	AX, ""..autotmp_25+328(SP)
	0x03a1 00929 (pointer_vs_value/code/benchmark_invocation_test.go:182)	PCDATA	$0, $2
	0x03a1 00929 (pointer_vs_value/code/benchmark_invocation_test.go:182)	MOVQ	"".~R0+224(SP), AX
	0x03a9 00937 (pointer_vs_value/code/benchmark_invocation_test.go:182)	PCDATA	$1, $10
	0x03a9 00937 (pointer_vs_value/code/benchmark_invocation_test.go:182)	MOVQ	"".~R0+232(SP), CX
	0x03b1 00945 (pointer_vs_value/code/benchmark_invocation_test.go:182)	PCDATA	$0, $0
	0x03b1 00945 (pointer_vs_value/code/benchmark_invocation_test.go:182)	MOVQ	AX, ""..autotmp_25+336(SP)
	0x03b9 00953 (pointer_vs_value/code/benchmark_invocation_test.go:182)	MOVQ	CX, ""..autotmp_25+344(SP)
	0x03c1 00961 (pointer_vs_value/code/benchmark_invocation_test.go:173)	PCDATA	$0, $1
	0x03c1 00961 (pointer_vs_value/code/benchmark_invocation_test.go:173)	PCDATA	$1, $11
	0x03c1 00961 (pointer_vs_value/code/benchmark_invocation_test.go:173)	LEAQ	"".~r0+368(SP), DI
	0x03c9 00969 (pointer_vs_value/code/benchmark_invocation_test.go:173)	PCDATA	$0, $4
	0x03c9 00969 (pointer_vs_value/code/benchmark_invocation_test.go:173)	PCDATA	$1, $12
	0x03c9 00969 (pointer_vs_value/code/benchmark_invocation_test.go:173)	LEAQ	""..autotmp_25+256(SP), SI
	0x03d1 00977 (pointer_vs_value/code/benchmark_invocation_test.go:173)	PCDATA	$0, $0
	0x03d1 00977 (pointer_vs_value/code/benchmark_invocation_test.go:173)	DUFFCOPY	$812
	0x03e4 00996 (pointer_vs_value/code/benchmark_invocation_test.go:173)	MOVQ	352(SP), BP
	0x03ec 01004 (pointer_vs_value/code/benchmark_invocation_test.go:173)	ADDQ	$360, SP
	0x03f3 01011 (pointer_vs_value/code/benchmark_invocation_test.go:173)	RET
	0x03f4 01012 (pointer_vs_value/code/benchmark_invocation_test.go:173)	NOP
	0x03f4 01012 (pointer_vs_value/code/benchmark_invocation_test.go:172)	PCDATA	$1, $-1
	0x03f4 01012 (pointer_vs_value/code/benchmark_invocation_test.go:172)	PCDATA	$0, $-1
	0x03f4 01012 (pointer_vs_value/code/benchmark_invocation_test.go:172)	CALL	runtime.morestack_noctxt(SB)
	0x03f9 01017 (pointer_vs_value/code/benchmark_invocation_test.go:172)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 18 ff ff  eH..%....H..$...
	0x0010 ff 48 3b 41 10 0f 86 d9 03 00 00 48 81 ec 68 01  .H;A.......H..h.
	0x0020 00 00 48 89 ac 24 60 01 00 00 48 8d ac 24 60 01  ..H..$`...H..$`.
	0x0030 00 00 48 8d bc 24 70 01 00 00 0f 57 c0 48 8d 7f  ..H..$p....W.H..
	0x0040 e0 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00 00  .H.l$.H.l$......
	0x0050 48 8b 6d 00 48 c7 44 24 30 00 00 00 00 48 8b 05  H.m.H.D$0....H..
	0x0060 00 00 00 00 48 89 84 24 a8 00 00 00 48 c7 44 24  ....H..$....H.D$
	0x0070 40 00 00 00 00 48 8b 84 24 a8 00 00 00 84 00 48  @....H..$......H
	0x0080 8b 08 84 01 48 8b 49 18 48 8b 40 08 48 89 04 24  ....H.I.H.@.H..$
	0x0090 ff d1 48 8b 44 24 08 48 89 84 24 a0 00 00 00 48  ..H.D$.H..$....H
	0x00a0 89 44 24 40 eb 00 48 8b 44 24 40 48 89 44 24 78  .D$@..H.D$@H.D$x
	0x00b0 48 89 44 24 30 eb 00 48 c7 44 24 48 00 00 00 00  H.D$0..H.D$H....
	0x00c0 48 8b 05 00 00 00 00 48 89 84 24 b0 00 00 00 48  H......H..$....H
	0x00d0 c7 44 24 38 00 00 00 00 48 8b 84 24 b0 00 00 00  .D$8....H..$....
	0x00e0 84 00 48 8b 08 84 01 48 8b 49 18 48 8b 40 08 48  ..H....H.I.H.@.H
	0x00f0 89 04 24 ff d1 48 8b 44 24 08 48 89 84 24 a0 00  ..$..H.D$.H..$..
	0x0100 00 00 48 89 44 24 38 eb 00 48 8b 44 24 38 48 89  ..H.D$8..H.D$8H.
	0x0110 44 24 70 48 89 44 24 48 eb 00 48 c7 44 24 28 00  D$pH.D$H..H.D$(.
	0x0120 00 00 00 48 8b 05 00 00 00 00 48 89 84 24 b8 00  ...H......H..$..
	0x0130 00 00 48 c7 44 24 20 00 00 00 00 48 8b 84 24 b8  ..H.D$ ....H..$.
	0x0140 00 00 00 84 00 48 8b 08 84 01 48 8b 49 18 48 8b  .....H....H.I.H.
	0x0150 40 08 48 89 04 24 ff d1 48 8b 44 24 08 48 89 84  @.H..$..H.D$.H..
	0x0160 24 a0 00 00 00 48 89 44 24 20 eb 00 48 8b 44 24  $....H.D$ ..H.D$
	0x0170 20 48 89 44 24 68 48 89 44 24 28 eb 00 e8 00 00   H.D$hH.D$(.....
	0x0180 00 00 f2 0f 10 04 24 f2 0f 11 84 24 98 00 00 00  ......$....$....
	0x0190 e8 00 00 00 00 f2 0f 10 04 24 f2 0f 11 84 24 90  .........$....$.
	0x01a0 00 00 00 e8 00 00 00 00 f2 0f 10 04 24 f2 0f 11  ............$...
	0x01b0 84 24 88 00 00 00 e8 00 00 00 00 48 8b 04 24 48  .$.........H..$H
	0x01c0 89 84 24 80 00 00 00 48 89 44 24 60 0f 57 c0 0f  ..$....H.D$`.W..
	0x01d0 11 84 24 c0 00 00 00 48 8b 44 24 60 48 89 04 24  ..$....H.D$`H..$
	0x01e0 48 c7 44 24 08 0a 00 00 00 e8 00 00 00 00 48 8b  H.D$..........H.
	0x01f0 44 24 18 48 8b 4c 24 10 48 89 8c 24 f0 00 00 00  D$.H.L$.H..$....
	0x0200 48 89 84 24 f8 00 00 00 48 89 8c 24 c0 00 00 00  H..$....H..$....
	0x0210 48 89 84 24 c8 00 00 00 eb 00 e8 00 00 00 00 48  H..$...........H
	0x0220 8b 04 24 48 89 84 24 80 00 00 00 48 89 44 24 58  ..$H..$....H.D$X
	0x0230 0f 57 c0 0f 11 84 24 d0 00 00 00 48 8b 44 24 58  .W....$....H.D$X
	0x0240 48 89 04 24 48 c7 44 24 08 0a 00 00 00 e8 00 00  H..$H.D$........
	0x0250 00 00 48 8b 44 24 18 48 8b 4c 24 10 48 89 8c 24  ..H.D$.H.L$.H..$
	0x0260 f0 00 00 00 48 89 84 24 f8 00 00 00 48 89 8c 24  ....H..$....H..$
	0x0270 d0 00 00 00 48 89 84 24 d8 00 00 00 eb 00 e8 00  ....H..$........
	0x0280 00 00 00 48 8b 04 24 48 89 84 24 80 00 00 00 48  ...H..$H..$....H
	0x0290 89 44 24 50 0f 57 c0 0f 11 84 24 e0 00 00 00 48  .D$P.W....$....H
	0x02a0 8b 44 24 50 48 89 04 24 48 c7 44 24 08 0a 00 00  .D$PH..$H.D$....
	0x02b0 00 e8 00 00 00 00 48 8b 44 24 18 48 8b 4c 24 10  ......H.D$.H.L$.
	0x02c0 48 89 8c 24 f0 00 00 00 48 89 84 24 f8 00 00 00  H..$....H..$....
	0x02d0 48 89 8c 24 e0 00 00 00 48 89 84 24 e8 00 00 00  H..$....H..$....
	0x02e0 eb 00 48 8d bc 24 00 01 00 00 48 8d 35 00 00 00  ..H..$....H.5...
	0x02f0 00 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00 00  .H.l$.H.l$......
	0x0300 48 8b 6d 00 48 8b 44 24 30 48 89 84 24 00 01 00  H.m.H.D$0H..$...
	0x0310 00 48 8b 44 24 48 48 89 84 24 08 01 00 00 48 8b  .H.D$HH..$....H.
	0x0320 44 24 28 48 89 84 24 10 01 00 00 f2 0f 10 84 24  D$(H..$........$
	0x0330 98 00 00 00 f2 0f 11 84 24 18 01 00 00 f2 0f 10  ........$.......
	0x0340 84 24 90 00 00 00 f2 0f 11 84 24 20 01 00 00 f2  .$........$ ....
	0x0350 0f 10 84 24 88 00 00 00 f2 0f 11 84 24 28 01 00  ...$........$(..
	0x0360 00 48 8b 84 24 c8 00 00 00 48 8b 8c 24 c0 00 00  .H..$....H..$...
	0x0370 00 48 89 8c 24 30 01 00 00 48 89 84 24 38 01 00  .H..$0...H..$8..
	0x0380 00 48 8b 84 24 d8 00 00 00 48 8b 8c 24 d0 00 00  .H..$....H..$...
	0x0390 00 48 89 8c 24 40 01 00 00 48 89 84 24 48 01 00  .H..$@...H..$H..
	0x03a0 00 48 8b 84 24 e0 00 00 00 48 8b 8c 24 e8 00 00  .H..$....H..$...
	0x03b0 00 48 89 84 24 50 01 00 00 48 89 8c 24 58 01 00  .H..$P...H..$X..
	0x03c0 00 48 8d bc 24 70 01 00 00 48 8d b4 24 00 01 00  .H..$p...H..$...
	0x03d0 00 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00 00  .H.l$.H.l$......
	0x03e0 48 8b 6d 00 48 8b ac 24 60 01 00 00 48 81 c4 68  H.m.H..$`...H..h
	0x03f0 01 00 00 c3 e8 00 00 00 00 e9 02 fc ff ff        ..............
	rel 5+4 t=16 TLS+0
	rel 76+4 t=8 runtime.duffzero+273
	rel 96+4 t=15 math/rand.globalRand+0
	rel 144+0 t=11 +0
	rel 195+4 t=15 math/rand.globalRand+0
	rel 243+0 t=11 +0
	rel 294+4 t=15 math/rand.globalRand+0
	rel 342+0 t=11 +0
	rel 382+4 t=8 math/rand.Float64+0
	rel 401+4 t=8 math/rand.Float64+0
	rel 420+4 t=8 math/rand.Float64+0
	rel 439+4 t=8 math/rand.Int+0
	rel 490+4 t=8 strconv.FormatInt+0
	rel 539+4 t=8 math/rand.Int+0
	rel 590+4 t=8 strconv.FormatInt+0
	rel 639+4 t=8 math/rand.Int+0
	rel 690+4 t=8 strconv.FormatInt+0
	rel 749+4 t=15 ""..stmp_19+0
	rel 764+4 t=8 runtime.duffcopy+812
	rel 988+4 t=8 runtime.duffcopy+812
	rel 1013+4 t=8 runtime.morestack_noctxt+0
"".createMega STEXT size=3459 args=0x160 locals=0x468
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:186)	TEXT	"".createMega(SB), ABIInternal, $1128-352
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:186)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_invocation_test.go:186)	LEAQ	-1000(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_invocation_test.go:186)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_invocation_test.go:186)	JLS	3449
	0x001b 00027 (pointer_vs_value/code/benchmark_invocation_test.go:186)	SUBQ	$1128, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_invocation_test.go:186)	MOVQ	BP, 1120(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_invocation_test.go:186)	LEAQ	1120(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:186)	FUNCDATA	$0, gclocals·c900a01e2adadc4a99f70378674d05bf(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:186)	FUNCDATA	$1, gclocals·a9120dbfbb8ec23875e9a9c23c7ec326(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:186)	FUNCDATA	$2, gclocals·18fc722f2a78a2e34073064e2f86e2da(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:186)	PCDATA	$0, $1
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:186)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:186)	LEAQ	"".~r0+1136(SP), DI
	0x003a 00058 (pointer_vs_value/code/benchmark_invocation_test.go:186)	XORPS	X0, X0
	0x003d 00061 (pointer_vs_value/code/benchmark_invocation_test.go:186)	PCDATA	$0, $0
	0x003d 00061 (pointer_vs_value/code/benchmark_invocation_test.go:186)	LEAQ	-32(DI), DI
	0x0041 00065 (pointer_vs_value/code/benchmark_invocation_test.go:186)	DUFFZERO	$197
	0x0054 00084 (pointer_vs_value/code/benchmark_invocation_test.go:188)	MOVQ	$0, "".~R0+112(SP)
	0x005d 00093 (<unknown line number>)	NOP
	0x005d 00093 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x005d 00093 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0064 00100 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0064 00100 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $1
	0x0064 00100 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+512(SP)
	0x006c 00108 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+128(SP)
	0x0078 00120 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0078 00120 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0078 00120 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+512(SP), AX
	0x0080 00128 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0082 00130 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0085 00133 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0087 00135 (<unknown line number>)	NOP
	0x0087 00135 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x008b 00139 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x008f 00143 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x008f 00143 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0093 00147 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0095 00149 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x009a 00154 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_56+480(SP)
	0x00a2 00162 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+128(SP)
	0x00aa 00170 ($GOROOT/src/math/rand/rand.go:299)	JMP	172
	0x00ac 00172 (pointer_vs_value/code/benchmark_invocation_test.go:188)	MOVQ	"".~R0+128(SP), AX
	0x00b4 00180 (pointer_vs_value/code/benchmark_invocation_test.go:188)	MOVQ	AX, ""..autotmp_70+376(SP)
	0x00bc 00188 (pointer_vs_value/code/benchmark_invocation_test.go:188)	MOVQ	AX, "".~R0+112(SP)
	0x00c1 00193 (pointer_vs_value/code/benchmark_invocation_test.go:188)	JMP	195
	0x00c3 00195 (pointer_vs_value/code/benchmark_invocation_test.go:189)	MOVQ	$0, "".~R0+192(SP)
	0x00cf 00207 (<unknown line number>)	NOP
	0x00cf 00207 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x00cf 00207 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x00d6 00214 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x00d6 00214 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $2
	0x00d6 00214 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+528(SP)
	0x00de 00222 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+200(SP)
	0x00ea 00234 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x00ea 00234 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x00ea 00234 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+528(SP), AX
	0x00f2 00242 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x00f4 00244 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x00f7 00247 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x00f9 00249 (<unknown line number>)	NOP
	0x00f9 00249 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x00fd 00253 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0101 00257 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0101 00257 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0105 00261 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0107 00263 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x010c 00268 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_56+480(SP)
	0x0114 00276 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+200(SP)
	0x011c 00284 ($GOROOT/src/math/rand/rand.go:299)	JMP	286
	0x011e 00286 (pointer_vs_value/code/benchmark_invocation_test.go:189)	MOVQ	"".~R0+200(SP), AX
	0x0126 00294 (pointer_vs_value/code/benchmark_invocation_test.go:189)	MOVQ	AX, ""..autotmp_71+368(SP)
	0x012e 00302 (pointer_vs_value/code/benchmark_invocation_test.go:189)	MOVQ	AX, "".~R0+192(SP)
	0x0136 00310 (pointer_vs_value/code/benchmark_invocation_test.go:189)	JMP	312
	0x0138 00312 (pointer_vs_value/code/benchmark_invocation_test.go:190)	MOVQ	$0, "".~R0+176(SP)
	0x0144 00324 (<unknown line number>)	NOP
	0x0144 00324 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0144 00324 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x014b 00331 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x014b 00331 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $3
	0x014b 00331 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+536(SP)
	0x0153 00339 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+168(SP)
	0x015f 00351 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x015f 00351 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x015f 00351 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+536(SP), AX
	0x0167 00359 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0169 00361 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x016c 00364 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x016e 00366 (<unknown line number>)	NOP
	0x016e 00366 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0172 00370 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0176 00374 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0176 00374 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x017a 00378 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x017c 00380 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0181 00385 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_56+480(SP)
	0x0189 00393 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+168(SP)
	0x0191 00401 ($GOROOT/src/math/rand/rand.go:299)	JMP	403
	0x0193 00403 (pointer_vs_value/code/benchmark_invocation_test.go:190)	MOVQ	"".~R0+168(SP), AX
	0x019b 00411 (pointer_vs_value/code/benchmark_invocation_test.go:190)	MOVQ	AX, ""..autotmp_72+360(SP)
	0x01a3 00419 (pointer_vs_value/code/benchmark_invocation_test.go:190)	MOVQ	AX, "".~R0+176(SP)
	0x01ab 00427 (pointer_vs_value/code/benchmark_invocation_test.go:190)	JMP	429
	0x01ad 00429 (pointer_vs_value/code/benchmark_invocation_test.go:191)	MOVQ	$0, "".~R0+88(SP)
	0x01b6 00438 (<unknown line number>)	NOP
	0x01b6 00438 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x01b6 00438 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x01bd 00445 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x01bd 00445 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $4
	0x01bd 00445 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+552(SP)
	0x01c5 00453 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+160(SP)
	0x01d1 00465 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x01d1 00465 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x01d1 00465 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+552(SP), AX
	0x01d9 00473 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x01db 00475 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x01de 00478 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x01e0 00480 (<unknown line number>)	NOP
	0x01e0 00480 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x01e4 00484 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x01e8 00488 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x01e8 00488 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x01ec 00492 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x01ee 00494 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x01f3 00499 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_56+480(SP)
	0x01fb 00507 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+160(SP)
	0x0203 00515 ($GOROOT/src/math/rand/rand.go:299)	JMP	517
	0x0205 00517 (pointer_vs_value/code/benchmark_invocation_test.go:191)	MOVQ	"".~R0+160(SP), AX
	0x020d 00525 (pointer_vs_value/code/benchmark_invocation_test.go:191)	MOVQ	AX, ""..autotmp_73+352(SP)
	0x0215 00533 (pointer_vs_value/code/benchmark_invocation_test.go:191)	MOVQ	AX, "".~R0+88(SP)
	0x021a 00538 (pointer_vs_value/code/benchmark_invocation_test.go:191)	JMP	540
	0x021c 00540 (pointer_vs_value/code/benchmark_invocation_test.go:192)	MOVQ	$0, "".~R0+152(SP)
	0x0228 00552 (<unknown line number>)	NOP
	0x0228 00552 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0228 00552 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x022f 00559 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x022f 00559 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $5
	0x022f 00559 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+560(SP)
	0x0237 00567 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+144(SP)
	0x0243 00579 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0243 00579 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0243 00579 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+560(SP), AX
	0x024b 00587 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x024d 00589 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0250 00592 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0252 00594 (<unknown line number>)	NOP
	0x0252 00594 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0256 00598 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x025a 00602 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x025a 00602 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x025e 00606 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0260 00608 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0265 00613 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_56+480(SP)
	0x026d 00621 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+144(SP)
	0x0275 00629 ($GOROOT/src/math/rand/rand.go:299)	JMP	631
	0x0277 00631 (pointer_vs_value/code/benchmark_invocation_test.go:192)	MOVQ	"".~R0+144(SP), AX
	0x027f 00639 (pointer_vs_value/code/benchmark_invocation_test.go:192)	MOVQ	AX, ""..autotmp_74+344(SP)
	0x0287 00647 (pointer_vs_value/code/benchmark_invocation_test.go:192)	MOVQ	AX, "".~R0+152(SP)
	0x028f 00655 (pointer_vs_value/code/benchmark_invocation_test.go:192)	JMP	657
	0x0291 00657 (pointer_vs_value/code/benchmark_invocation_test.go:193)	MOVQ	$0, "".~R0+136(SP)
	0x029d 00669 (<unknown line number>)	NOP
	0x029d 00669 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x029d 00669 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x02a4 00676 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x02a4 00676 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $6
	0x02a4 00676 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+544(SP)
	0x02ac 00684 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+120(SP)
	0x02b5 00693 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x02b5 00693 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x02b5 00693 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+544(SP), AX
	0x02bd 00701 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x02bf 00703 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x02c2 00706 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x02c4 00708 (<unknown line number>)	NOP
	0x02c4 00708 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x02c8 00712 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x02cc 00716 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x02cc 00716 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x02d0 00720 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x02d2 00722 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x02d7 00727 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_56+480(SP)
	0x02df 00735 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+120(SP)
	0x02e4 00740 ($GOROOT/src/math/rand/rand.go:299)	JMP	742
	0x02e6 00742 (pointer_vs_value/code/benchmark_invocation_test.go:193)	MOVQ	"".~R0+120(SP), AX
	0x02eb 00747 (pointer_vs_value/code/benchmark_invocation_test.go:193)	MOVQ	AX, ""..autotmp_75+336(SP)
	0x02f3 00755 (pointer_vs_value/code/benchmark_invocation_test.go:193)	MOVQ	AX, "".~R0+136(SP)
	0x02fb 00763 (pointer_vs_value/code/benchmark_invocation_test.go:193)	JMP	765
	0x02fd 00765 (pointer_vs_value/code/benchmark_invocation_test.go:194)	MOVQ	$0, "".~R0+104(SP)
	0x0306 00774 (<unknown line number>)	NOP
	0x0306 00774 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0306 00774 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x030d 00781 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x030d 00781 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $7
	0x030d 00781 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+488(SP)
	0x0315 00789 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+80(SP)
	0x031e 00798 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x031e 00798 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x031e 00798 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+488(SP), AX
	0x0326 00806 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0328 00808 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x032b 00811 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x032d 00813 (<unknown line number>)	NOP
	0x032d 00813 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0331 00817 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0335 00821 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0335 00821 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0339 00825 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x033b 00827 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0340 00832 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_56+480(SP)
	0x0348 00840 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+80(SP)
	0x034d 00845 ($GOROOT/src/math/rand/rand.go:299)	JMP	847
	0x034f 00847 (pointer_vs_value/code/benchmark_invocation_test.go:194)	MOVQ	"".~R0+80(SP), AX
	0x0354 00852 (pointer_vs_value/code/benchmark_invocation_test.go:194)	MOVQ	AX, ""..autotmp_76+328(SP)
	0x035c 00860 (pointer_vs_value/code/benchmark_invocation_test.go:194)	MOVQ	AX, "".~R0+104(SP)
	0x0361 00865 (pointer_vs_value/code/benchmark_invocation_test.go:194)	JMP	867
	0x0363 00867 (pointer_vs_value/code/benchmark_invocation_test.go:195)	MOVQ	$0, "".~R0+64(SP)
	0x036c 00876 (<unknown line number>)	NOP
	0x036c 00876 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x036c 00876 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0373 00883 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0373 00883 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $8
	0x0373 00883 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+496(SP)
	0x037b 00891 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+40(SP)
	0x0384 00900 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0384 00900 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0384 00900 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+496(SP), AX
	0x038c 00908 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x038e 00910 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0391 00913 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0393 00915 (<unknown line number>)	NOP
	0x0393 00915 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0397 00919 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x039b 00923 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x039b 00923 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x039f 00927 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x03a1 00929 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x03a6 00934 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_56+480(SP)
	0x03ae 00942 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+40(SP)
	0x03b3 00947 ($GOROOT/src/math/rand/rand.go:299)	JMP	949
	0x03b5 00949 (pointer_vs_value/code/benchmark_invocation_test.go:195)	MOVQ	"".~R0+40(SP), AX
	0x03ba 00954 (pointer_vs_value/code/benchmark_invocation_test.go:195)	MOVQ	AX, ""..autotmp_77+320(SP)
	0x03c2 00962 (pointer_vs_value/code/benchmark_invocation_test.go:195)	MOVQ	AX, "".~R0+64(SP)
	0x03c7 00967 (pointer_vs_value/code/benchmark_invocation_test.go:195)	JMP	969
	0x03c9 00969 (pointer_vs_value/code/benchmark_invocation_test.go:196)	MOVQ	$0, "".~R0+32(SP)
	0x03d2 00978 (<unknown line number>)	NOP
	0x03d2 00978 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x03d2 00978 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x03d9 00985 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x03d9 00985 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $9
	0x03d9 00985 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+568(SP)
	0x03e1 00993 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+48(SP)
	0x03ea 01002 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x03ea 01002 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x03ea 01002 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+568(SP), AX
	0x03f2 01010 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x03f4 01012 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x03f7 01015 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x03f9 01017 (<unknown line number>)	NOP
	0x03f9 01017 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x03fd 01021 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0401 01025 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0401 01025 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0405 01029 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0407 01031 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x040c 01036 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_56+480(SP)
	0x0414 01044 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+48(SP)
	0x0419 01049 ($GOROOT/src/math/rand/rand.go:299)	JMP	1051
	0x041b 01051 (pointer_vs_value/code/benchmark_invocation_test.go:196)	MOVQ	"".~R0+48(SP), AX
	0x0420 01056 (pointer_vs_value/code/benchmark_invocation_test.go:196)	MOVQ	AX, ""..autotmp_78+312(SP)
	0x0428 01064 (pointer_vs_value/code/benchmark_invocation_test.go:196)	MOVQ	AX, "".~R0+32(SP)
	0x042d 01069 (pointer_vs_value/code/benchmark_invocation_test.go:196)	JMP	1071
	0x042f 01071 (pointer_vs_value/code/benchmark_invocation_test.go:197)	MOVQ	$0, "".~R0+56(SP)
	0x0438 01080 (<unknown line number>)	NOP
	0x0438 01080 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0438 01080 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x043f 01087 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x043f 01087 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $10
	0x043f 01087 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+504(SP)
	0x0447 01095 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+72(SP)
	0x0450 01104 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0450 01104 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0450 01104 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+504(SP), AX
	0x0458 01112 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x045a 01114 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x045d 01117 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x045f 01119 (<unknown line number>)	NOP
	0x045f 01119 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0463 01123 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0467 01127 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0467 01127 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x046b 01131 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x046d 01133 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0472 01138 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_56+480(SP)
	0x047a 01146 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+72(SP)
	0x047f 01151 ($GOROOT/src/math/rand/rand.go:299)	JMP	1153
	0x0481 01153 (pointer_vs_value/code/benchmark_invocation_test.go:197)	MOVQ	"".~R0+72(SP), AX
	0x0486 01158 (pointer_vs_value/code/benchmark_invocation_test.go:197)	MOVQ	AX, ""..autotmp_79+304(SP)
	0x048e 01166 (pointer_vs_value/code/benchmark_invocation_test.go:197)	MOVQ	AX, "".~R0+56(SP)
	0x0493 01171 (pointer_vs_value/code/benchmark_invocation_test.go:197)	JMP	1173
	0x0495 01173 (pointer_vs_value/code/benchmark_invocation_test.go:198)	MOVQ	$0, "".~R0+184(SP)
	0x04a1 01185 (<unknown line number>)	NOP
	0x04a1 01185 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x04a1 01185 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x04a8 01192 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x04a8 01192 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $11
	0x04a8 01192 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+520(SP)
	0x04b0 01200 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+96(SP)
	0x04b9 01209 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x04b9 01209 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x04b9 01209 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+520(SP), AX
	0x04c1 01217 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x04c3 01219 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x04c6 01222 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x04c8 01224 (<unknown line number>)	NOP
	0x04c8 01224 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x04cc 01228 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x04d0 01232 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x04d0 01232 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x04d4 01236 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x04d6 01238 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x04db 01243 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_56+480(SP)
	0x04e3 01251 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+96(SP)
	0x04e8 01256 ($GOROOT/src/math/rand/rand.go:299)	JMP	1258
	0x04ea 01258 (pointer_vs_value/code/benchmark_invocation_test.go:198)	MOVQ	"".~R0+96(SP), AX
	0x04ef 01263 (pointer_vs_value/code/benchmark_invocation_test.go:198)	MOVQ	AX, ""..autotmp_80+296(SP)
	0x04f7 01271 (pointer_vs_value/code/benchmark_invocation_test.go:198)	MOVQ	AX, "".~R0+184(SP)
	0x04ff 01279 (pointer_vs_value/code/benchmark_invocation_test.go:198)	JMP	1281
	0x0501 01281 (pointer_vs_value/code/benchmark_invocation_test.go:199)	CALL	math/rand.Float64(SB)
	0x0506 01286 (pointer_vs_value/code/benchmark_invocation_test.go:199)	MOVSD	(SP), X0
	0x050b 01291 (pointer_vs_value/code/benchmark_invocation_test.go:199)	MOVSD	X0, ""..autotmp_57+472(SP)
	0x0514 01300 (pointer_vs_value/code/benchmark_invocation_test.go:200)	CALL	math/rand.Float64(SB)
	0x0519 01305 (pointer_vs_value/code/benchmark_invocation_test.go:200)	MOVSD	(SP), X0
	0x051e 01310 (pointer_vs_value/code/benchmark_invocation_test.go:200)	MOVSD	X0, ""..autotmp_58+464(SP)
	0x0527 01319 (pointer_vs_value/code/benchmark_invocation_test.go:201)	CALL	math/rand.Float64(SB)
	0x052c 01324 (pointer_vs_value/code/benchmark_invocation_test.go:201)	MOVSD	(SP), X0
	0x0531 01329 (pointer_vs_value/code/benchmark_invocation_test.go:201)	MOVSD	X0, ""..autotmp_59+456(SP)
	0x053a 01338 (pointer_vs_value/code/benchmark_invocation_test.go:202)	CALL	math/rand.Float64(SB)
	0x053f 01343 (pointer_vs_value/code/benchmark_invocation_test.go:202)	MOVSD	(SP), X0
	0x0544 01348 (pointer_vs_value/code/benchmark_invocation_test.go:202)	MOVSD	X0, ""..autotmp_60+448(SP)
	0x054d 01357 (pointer_vs_value/code/benchmark_invocation_test.go:203)	CALL	math/rand.Float64(SB)
	0x0552 01362 (pointer_vs_value/code/benchmark_invocation_test.go:203)	MOVSD	(SP), X0
	0x0557 01367 (pointer_vs_value/code/benchmark_invocation_test.go:203)	MOVSD	X0, ""..autotmp_61+440(SP)
	0x0560 01376 (pointer_vs_value/code/benchmark_invocation_test.go:204)	CALL	math/rand.Float64(SB)
	0x0565 01381 (pointer_vs_value/code/benchmark_invocation_test.go:204)	MOVSD	(SP), X0
	0x056a 01386 (pointer_vs_value/code/benchmark_invocation_test.go:204)	MOVSD	X0, ""..autotmp_62+432(SP)
	0x0573 01395 (pointer_vs_value/code/benchmark_invocation_test.go:205)	CALL	math/rand.Float64(SB)
	0x0578 01400 (pointer_vs_value/code/benchmark_invocation_test.go:205)	MOVSD	(SP), X0
	0x057d 01405 (pointer_vs_value/code/benchmark_invocation_test.go:205)	MOVSD	X0, ""..autotmp_63+424(SP)
	0x0586 01414 (pointer_vs_value/code/benchmark_invocation_test.go:206)	CALL	math/rand.Float64(SB)
	0x058b 01419 (pointer_vs_value/code/benchmark_invocation_test.go:206)	MOVSD	(SP), X0
	0x0590 01424 (pointer_vs_value/code/benchmark_invocation_test.go:206)	MOVSD	X0, ""..autotmp_64+416(SP)
	0x0599 01433 (pointer_vs_value/code/benchmark_invocation_test.go:207)	CALL	math/rand.Float64(SB)
	0x059e 01438 (pointer_vs_value/code/benchmark_invocation_test.go:207)	MOVSD	(SP), X0
	0x05a3 01443 (pointer_vs_value/code/benchmark_invocation_test.go:207)	MOVSD	X0, ""..autotmp_65+408(SP)
	0x05ac 01452 (pointer_vs_value/code/benchmark_invocation_test.go:208)	CALL	math/rand.Float64(SB)
	0x05b1 01457 (pointer_vs_value/code/benchmark_invocation_test.go:208)	MOVSD	(SP), X0
	0x05b6 01462 (pointer_vs_value/code/benchmark_invocation_test.go:208)	MOVSD	X0, ""..autotmp_66+400(SP)
	0x05bf 01471 (pointer_vs_value/code/benchmark_invocation_test.go:209)	CALL	math/rand.Float64(SB)
	0x05c4 01476 (pointer_vs_value/code/benchmark_invocation_test.go:209)	MOVSD	(SP), X0
	0x05c9 01481 (pointer_vs_value/code/benchmark_invocation_test.go:209)	MOVSD	X0, ""..autotmp_67+392(SP)
	0x05d2 01490 (pointer_vs_value/code/benchmark_invocation_test.go:210)	CALL	math/rand.Int(SB)
	0x05d7 01495 (pointer_vs_value/code/benchmark_invocation_test.go:210)	MOVQ	(SP), AX
	0x05db 01499 (pointer_vs_value/code/benchmark_invocation_test.go:210)	MOVQ	AX, ""..autotmp_68+384(SP)
	0x05e3 01507 (pointer_vs_value/code/benchmark_invocation_test.go:210)	MOVQ	AX, strconv.i+224(SP)
	0x05eb 01515 (pointer_vs_value/code/benchmark_invocation_test.go:210)	XORPS	X0, X0
	0x05ee 01518 (pointer_vs_value/code/benchmark_invocation_test.go:210)	MOVUPS	X0, "".~R0+704(SP)
	0x05f6 01526 (<unknown line number>)	NOP
	0x05f6 01526 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+224(SP), AX
	0x05fe 01534 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x0602 01538 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x060b 01547 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x0610 01552 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x0615 01557 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x0615 01557 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x061a 01562 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_69+752(SP)
	0x0622 01570 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_69+760(SP)
	0x062a 01578 (pointer_vs_value/code/benchmark_invocation_test.go:210)	PCDATA	$0, $0
	0x062a 01578 (pointer_vs_value/code/benchmark_invocation_test.go:210)	PCDATA	$1, $12
	0x062a 01578 (pointer_vs_value/code/benchmark_invocation_test.go:210)	MOVQ	CX, "".~R0+704(SP)
	0x0632 01586 (pointer_vs_value/code/benchmark_invocation_test.go:210)	MOVQ	AX, "".~R0+712(SP)
	0x063a 01594 (pointer_vs_value/code/benchmark_invocation_test.go:210)	JMP	1596
	0x063c 01596 (pointer_vs_value/code/benchmark_invocation_test.go:211)	CALL	math/rand.Int(SB)
	0x0641 01601 (pointer_vs_value/code/benchmark_invocation_test.go:211)	MOVQ	(SP), AX
	0x0645 01605 (pointer_vs_value/code/benchmark_invocation_test.go:211)	MOVQ	AX, ""..autotmp_68+384(SP)
	0x064d 01613 (pointer_vs_value/code/benchmark_invocation_test.go:211)	MOVQ	AX, strconv.i+232(SP)
	0x0655 01621 (pointer_vs_value/code/benchmark_invocation_test.go:211)	XORPS	X0, X0
	0x0658 01624 (pointer_vs_value/code/benchmark_invocation_test.go:211)	MOVUPS	X0, "".~R0+656(SP)
	0x0660 01632 (<unknown line number>)	NOP
	0x0660 01632 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+232(SP), AX
	0x0668 01640 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x066c 01644 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x0675 01653 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x067a 01658 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $2
	0x067a 01658 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), AX
	0x067f 01663 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), CX
	0x0684 01668 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_69+752(SP)
	0x068c 01676 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_69+760(SP)
	0x0694 01684 (pointer_vs_value/code/benchmark_invocation_test.go:211)	PCDATA	$0, $0
	0x0694 01684 (pointer_vs_value/code/benchmark_invocation_test.go:211)	PCDATA	$1, $13
	0x0694 01684 (pointer_vs_value/code/benchmark_invocation_test.go:211)	MOVQ	AX, "".~R0+656(SP)
	0x069c 01692 (pointer_vs_value/code/benchmark_invocation_test.go:211)	MOVQ	CX, "".~R0+664(SP)
	0x06a4 01700 (pointer_vs_value/code/benchmark_invocation_test.go:211)	JMP	1702
	0x06a6 01702 (pointer_vs_value/code/benchmark_invocation_test.go:212)	CALL	math/rand.Int(SB)
	0x06ab 01707 (pointer_vs_value/code/benchmark_invocation_test.go:212)	MOVQ	(SP), AX
	0x06af 01711 (pointer_vs_value/code/benchmark_invocation_test.go:212)	MOVQ	AX, ""..autotmp_68+384(SP)
	0x06b7 01719 (pointer_vs_value/code/benchmark_invocation_test.go:212)	MOVQ	AX, strconv.i+240(SP)
	0x06bf 01727 (pointer_vs_value/code/benchmark_invocation_test.go:212)	XORPS	X0, X0
	0x06c2 01730 (pointer_vs_value/code/benchmark_invocation_test.go:212)	MOVUPS	X0, "".~R0+608(SP)
	0x06ca 01738 (<unknown line number>)	NOP
	0x06ca 01738 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+240(SP), AX
	0x06d2 01746 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x06d6 01750 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x06df 01759 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x06e4 01764 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x06e9 01769 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x06e9 01769 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x06ee 01774 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_69+752(SP)
	0x06f6 01782 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_69+760(SP)
	0x06fe 01790 (pointer_vs_value/code/benchmark_invocation_test.go:212)	PCDATA	$0, $0
	0x06fe 01790 (pointer_vs_value/code/benchmark_invocation_test.go:212)	PCDATA	$1, $14
	0x06fe 01790 (pointer_vs_value/code/benchmark_invocation_test.go:212)	MOVQ	CX, "".~R0+608(SP)
	0x0706 01798 (pointer_vs_value/code/benchmark_invocation_test.go:212)	MOVQ	AX, "".~R0+616(SP)
	0x070e 01806 (pointer_vs_value/code/benchmark_invocation_test.go:212)	JMP	1808
	0x0710 01808 (pointer_vs_value/code/benchmark_invocation_test.go:213)	CALL	math/rand.Int(SB)
	0x0715 01813 (pointer_vs_value/code/benchmark_invocation_test.go:213)	MOVQ	(SP), AX
	0x0719 01817 (pointer_vs_value/code/benchmark_invocation_test.go:213)	MOVQ	AX, ""..autotmp_68+384(SP)
	0x0721 01825 (pointer_vs_value/code/benchmark_invocation_test.go:213)	MOVQ	AX, strconv.i+256(SP)
	0x0729 01833 (pointer_vs_value/code/benchmark_invocation_test.go:213)	XORPS	X0, X0
	0x072c 01836 (pointer_vs_value/code/benchmark_invocation_test.go:213)	MOVUPS	X0, "".~R0+624(SP)
	0x0734 01844 (<unknown line number>)	NOP
	0x0734 01844 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+256(SP), AX
	0x073c 01852 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x0740 01856 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x0749 01865 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x074e 01870 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x0753 01875 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x0753 01875 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x0758 01880 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_69+752(SP)
	0x0760 01888 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_69+760(SP)
	0x0768 01896 (pointer_vs_value/code/benchmark_invocation_test.go:213)	PCDATA	$0, $0
	0x0768 01896 (pointer_vs_value/code/benchmark_invocation_test.go:213)	PCDATA	$1, $15
	0x0768 01896 (pointer_vs_value/code/benchmark_invocation_test.go:213)	MOVQ	CX, "".~R0+624(SP)
	0x0770 01904 (pointer_vs_value/code/benchmark_invocation_test.go:213)	MOVQ	AX, "".~R0+632(SP)
	0x0778 01912 (pointer_vs_value/code/benchmark_invocation_test.go:213)	JMP	1914
	0x077a 01914 (pointer_vs_value/code/benchmark_invocation_test.go:214)	CALL	math/rand.Int(SB)
	0x077f 01919 (pointer_vs_value/code/benchmark_invocation_test.go:214)	MOVQ	(SP), AX
	0x0783 01923 (pointer_vs_value/code/benchmark_invocation_test.go:214)	MOVQ	AX, ""..autotmp_68+384(SP)
	0x078b 01931 (pointer_vs_value/code/benchmark_invocation_test.go:214)	MOVQ	AX, strconv.i+216(SP)
	0x0793 01939 (pointer_vs_value/code/benchmark_invocation_test.go:214)	XORPS	X0, X0
	0x0796 01942 (pointer_vs_value/code/benchmark_invocation_test.go:214)	MOVUPS	X0, "".~R0+576(SP)
	0x079e 01950 (<unknown line number>)	NOP
	0x079e 01950 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+216(SP), AX
	0x07a6 01958 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x07aa 01962 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x07b3 01971 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x07b8 01976 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x07bd 01981 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x07bd 01981 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x07c2 01986 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_69+752(SP)
	0x07ca 01994 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_69+760(SP)
	0x07d2 02002 (pointer_vs_value/code/benchmark_invocation_test.go:214)	PCDATA	$0, $0
	0x07d2 02002 (pointer_vs_value/code/benchmark_invocation_test.go:214)	PCDATA	$1, $16
	0x07d2 02002 (pointer_vs_value/code/benchmark_invocation_test.go:214)	MOVQ	CX, "".~R0+576(SP)
	0x07da 02010 (pointer_vs_value/code/benchmark_invocation_test.go:214)	MOVQ	AX, "".~R0+584(SP)
	0x07e2 02018 (pointer_vs_value/code/benchmark_invocation_test.go:214)	JMP	2020
	0x07e4 02020 (pointer_vs_value/code/benchmark_invocation_test.go:215)	CALL	math/rand.Int(SB)
	0x07e9 02025 (pointer_vs_value/code/benchmark_invocation_test.go:215)	MOVQ	(SP), AX
	0x07ed 02029 (pointer_vs_value/code/benchmark_invocation_test.go:215)	MOVQ	AX, ""..autotmp_68+384(SP)
	0x07f5 02037 (pointer_vs_value/code/benchmark_invocation_test.go:215)	MOVQ	AX, strconv.i+288(SP)
	0x07fd 02045 (pointer_vs_value/code/benchmark_invocation_test.go:215)	XORPS	X0, X0
	0x0800 02048 (pointer_vs_value/code/benchmark_invocation_test.go:215)	MOVUPS	X0, "".~R0+592(SP)
	0x0808 02056 (<unknown line number>)	NOP
	0x0808 02056 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+288(SP), AX
	0x0810 02064 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x0814 02068 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x081d 02077 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x0822 02082 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x0827 02087 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x0827 02087 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x082c 02092 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_69+752(SP)
	0x0834 02100 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_69+760(SP)
	0x083c 02108 (pointer_vs_value/code/benchmark_invocation_test.go:215)	PCDATA	$0, $0
	0x083c 02108 (pointer_vs_value/code/benchmark_invocation_test.go:215)	PCDATA	$1, $17
	0x083c 02108 (pointer_vs_value/code/benchmark_invocation_test.go:215)	MOVQ	CX, "".~R0+592(SP)
	0x0844 02116 (pointer_vs_value/code/benchmark_invocation_test.go:215)	MOVQ	AX, "".~R0+600(SP)
	0x084c 02124 (pointer_vs_value/code/benchmark_invocation_test.go:215)	JMP	2126
	0x084e 02126 (pointer_vs_value/code/benchmark_invocation_test.go:216)	CALL	math/rand.Int(SB)
	0x0853 02131 (pointer_vs_value/code/benchmark_invocation_test.go:216)	MOVQ	(SP), AX
	0x0857 02135 (pointer_vs_value/code/benchmark_invocation_test.go:216)	MOVQ	AX, ""..autotmp_68+384(SP)
	0x085f 02143 (pointer_vs_value/code/benchmark_invocation_test.go:216)	MOVQ	AX, strconv.i+208(SP)
	0x0867 02151 (pointer_vs_value/code/benchmark_invocation_test.go:216)	XORPS	X0, X0
	0x086a 02154 (pointer_vs_value/code/benchmark_invocation_test.go:216)	MOVUPS	X0, "".~R0+640(SP)
	0x0872 02162 (<unknown line number>)	NOP
	0x0872 02162 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+208(SP), AX
	0x087a 02170 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x087e 02174 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x0887 02183 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x088c 02188 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x0891 02193 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x0891 02193 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x0896 02198 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_69+752(SP)
	0x089e 02206 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_69+760(SP)
	0x08a6 02214 (pointer_vs_value/code/benchmark_invocation_test.go:216)	PCDATA	$0, $0
	0x08a6 02214 (pointer_vs_value/code/benchmark_invocation_test.go:216)	PCDATA	$1, $18
	0x08a6 02214 (pointer_vs_value/code/benchmark_invocation_test.go:216)	MOVQ	CX, "".~R0+640(SP)
	0x08ae 02222 (pointer_vs_value/code/benchmark_invocation_test.go:216)	MOVQ	AX, "".~R0+648(SP)
	0x08b6 02230 (pointer_vs_value/code/benchmark_invocation_test.go:216)	JMP	2232
	0x08b8 02232 (pointer_vs_value/code/benchmark_invocation_test.go:217)	CALL	math/rand.Int(SB)
	0x08bd 02237 (pointer_vs_value/code/benchmark_invocation_test.go:217)	MOVQ	(SP), AX
	0x08c1 02241 (pointer_vs_value/code/benchmark_invocation_test.go:217)	MOVQ	AX, ""..autotmp_68+384(SP)
	0x08c9 02249 (pointer_vs_value/code/benchmark_invocation_test.go:217)	MOVQ	AX, strconv.i+272(SP)
	0x08d1 02257 (pointer_vs_value/code/benchmark_invocation_test.go:217)	XORPS	X0, X0
	0x08d4 02260 (pointer_vs_value/code/benchmark_invocation_test.go:217)	MOVUPS	X0, "".~R0+672(SP)
	0x08dc 02268 (<unknown line number>)	NOP
	0x08dc 02268 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+272(SP), AX
	0x08e4 02276 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x08e8 02280 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x08f1 02289 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x08f6 02294 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x08fb 02299 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x08fb 02299 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x0900 02304 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_69+752(SP)
	0x0908 02312 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_69+760(SP)
	0x0910 02320 (pointer_vs_value/code/benchmark_invocation_test.go:217)	PCDATA	$0, $0
	0x0910 02320 (pointer_vs_value/code/benchmark_invocation_test.go:217)	PCDATA	$1, $19
	0x0910 02320 (pointer_vs_value/code/benchmark_invocation_test.go:217)	MOVQ	CX, "".~R0+672(SP)
	0x0918 02328 (pointer_vs_value/code/benchmark_invocation_test.go:217)	MOVQ	AX, "".~R0+680(SP)
	0x0920 02336 (pointer_vs_value/code/benchmark_invocation_test.go:217)	JMP	2338
	0x0922 02338 (pointer_vs_value/code/benchmark_invocation_test.go:218)	CALL	math/rand.Int(SB)
	0x0927 02343 (pointer_vs_value/code/benchmark_invocation_test.go:218)	MOVQ	(SP), AX
	0x092b 02347 (pointer_vs_value/code/benchmark_invocation_test.go:218)	MOVQ	AX, ""..autotmp_68+384(SP)
	0x0933 02355 (pointer_vs_value/code/benchmark_invocation_test.go:218)	MOVQ	AX, strconv.i+280(SP)
	0x093b 02363 (pointer_vs_value/code/benchmark_invocation_test.go:218)	XORPS	X0, X0
	0x093e 02366 (pointer_vs_value/code/benchmark_invocation_test.go:218)	MOVUPS	X0, "".~R0+736(SP)
	0x0946 02374 (<unknown line number>)	NOP
	0x0946 02374 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+280(SP), AX
	0x094e 02382 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x0952 02386 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x095b 02395 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x0960 02400 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x0965 02405 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x0965 02405 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x096a 02410 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_69+752(SP)
	0x0972 02418 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_69+760(SP)
	0x097a 02426 (pointer_vs_value/code/benchmark_invocation_test.go:218)	PCDATA	$0, $0
	0x097a 02426 (pointer_vs_value/code/benchmark_invocation_test.go:218)	PCDATA	$1, $20
	0x097a 02426 (pointer_vs_value/code/benchmark_invocation_test.go:218)	MOVQ	CX, "".~R0+736(SP)
	0x0982 02434 (pointer_vs_value/code/benchmark_invocation_test.go:218)	MOVQ	AX, "".~R0+744(SP)
	0x098a 02442 (pointer_vs_value/code/benchmark_invocation_test.go:218)	JMP	2444
	0x098c 02444 (pointer_vs_value/code/benchmark_invocation_test.go:219)	CALL	math/rand.Int(SB)
	0x0991 02449 (pointer_vs_value/code/benchmark_invocation_test.go:219)	MOVQ	(SP), AX
	0x0995 02453 (pointer_vs_value/code/benchmark_invocation_test.go:219)	MOVQ	AX, ""..autotmp_68+384(SP)
	0x099d 02461 (pointer_vs_value/code/benchmark_invocation_test.go:219)	MOVQ	AX, strconv.i+264(SP)
	0x09a5 02469 (pointer_vs_value/code/benchmark_invocation_test.go:219)	XORPS	X0, X0
	0x09a8 02472 (pointer_vs_value/code/benchmark_invocation_test.go:219)	MOVUPS	X0, "".~R0+688(SP)
	0x09b0 02480 (<unknown line number>)	NOP
	0x09b0 02480 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+264(SP), AX
	0x09b8 02488 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x09bc 02492 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x09c5 02501 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x09ca 02506 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x09cf 02511 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x09cf 02511 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x09d4 02516 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_69+752(SP)
	0x09dc 02524 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_69+760(SP)
	0x09e4 02532 (pointer_vs_value/code/benchmark_invocation_test.go:219)	PCDATA	$0, $0
	0x09e4 02532 (pointer_vs_value/code/benchmark_invocation_test.go:219)	PCDATA	$1, $21
	0x09e4 02532 (pointer_vs_value/code/benchmark_invocation_test.go:219)	MOVQ	CX, "".~R0+688(SP)
	0x09ec 02540 (pointer_vs_value/code/benchmark_invocation_test.go:219)	MOVQ	AX, "".~R0+696(SP)
	0x09f4 02548 (pointer_vs_value/code/benchmark_invocation_test.go:219)	JMP	2550
	0x09f6 02550 (pointer_vs_value/code/benchmark_invocation_test.go:220)	CALL	math/rand.Int(SB)
	0x09fb 02555 (pointer_vs_value/code/benchmark_invocation_test.go:220)	MOVQ	(SP), AX
	0x09ff 02559 (pointer_vs_value/code/benchmark_invocation_test.go:220)	MOVQ	AX, ""..autotmp_68+384(SP)
	0x0a07 02567 (pointer_vs_value/code/benchmark_invocation_test.go:220)	MOVQ	AX, strconv.i+248(SP)
	0x0a0f 02575 (pointer_vs_value/code/benchmark_invocation_test.go:220)	XORPS	X0, X0
	0x0a12 02578 (pointer_vs_value/code/benchmark_invocation_test.go:220)	MOVUPS	X0, "".~R0+720(SP)
	0x0a1a 02586 (<unknown line number>)	NOP
	0x0a1a 02586 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+248(SP), AX
	0x0a22 02594 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x0a26 02598 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x0a2f 02607 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x0a34 02612 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x0a39 02617 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x0a39 02617 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x0a3e 02622 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_69+752(SP)
	0x0a46 02630 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_69+760(SP)
	0x0a4e 02638 (pointer_vs_value/code/benchmark_invocation_test.go:220)	PCDATA	$0, $0
	0x0a4e 02638 (pointer_vs_value/code/benchmark_invocation_test.go:220)	PCDATA	$1, $22
	0x0a4e 02638 (pointer_vs_value/code/benchmark_invocation_test.go:220)	MOVQ	CX, "".~R0+720(SP)
	0x0a56 02646 (pointer_vs_value/code/benchmark_invocation_test.go:220)	MOVQ	AX, "".~R0+728(SP)
	0x0a5e 02654 (pointer_vs_value/code/benchmark_invocation_test.go:220)	JMP	2656
	0x0a60 02656 (pointer_vs_value/code/benchmark_invocation_test.go:220)	PCDATA	$0, $1
	0x0a60 02656 (pointer_vs_value/code/benchmark_invocation_test.go:220)	PCDATA	$1, $23
	0x0a60 02656 (pointer_vs_value/code/benchmark_invocation_test.go:220)	LEAQ	""..autotmp_81+768(SP), DI
	0x0a68 02664 (pointer_vs_value/code/benchmark_invocation_test.go:220)	PCDATA	$0, $4
	0x0a68 02664 (pointer_vs_value/code/benchmark_invocation_test.go:220)	LEAQ	""..stmp_20(SB), SI
	0x0a6f 02671 (pointer_vs_value/code/benchmark_invocation_test.go:220)	PCDATA	$0, $0
	0x0a6f 02671 (pointer_vs_value/code/benchmark_invocation_test.go:220)	DUFFCOPY	$588
	0x0a82 02690 (pointer_vs_value/code/benchmark_invocation_test.go:188)	MOVQ	"".~R0+112(SP), AX
	0x0a87 02695 (pointer_vs_value/code/benchmark_invocation_test.go:188)	MOVQ	AX, ""..autotmp_81+768(SP)
	0x0a8f 02703 (pointer_vs_value/code/benchmark_invocation_test.go:189)	MOVQ	"".~R0+192(SP), AX
	0x0a97 02711 (pointer_vs_value/code/benchmark_invocation_test.go:189)	MOVQ	AX, ""..autotmp_81+776(SP)
	0x0a9f 02719 (pointer_vs_value/code/benchmark_invocation_test.go:190)	MOVQ	"".~R0+176(SP), AX
	0x0aa7 02727 (pointer_vs_value/code/benchmark_invocation_test.go:190)	MOVQ	AX, ""..autotmp_81+784(SP)
	0x0aaf 02735 (pointer_vs_value/code/benchmark_invocation_test.go:191)	MOVQ	"".~R0+88(SP), AX
	0x0ab4 02740 (pointer_vs_value/code/benchmark_invocation_test.go:191)	MOVQ	AX, ""..autotmp_81+792(SP)
	0x0abc 02748 (pointer_vs_value/code/benchmark_invocation_test.go:192)	MOVQ	"".~R0+152(SP), AX
	0x0ac4 02756 (pointer_vs_value/code/benchmark_invocation_test.go:192)	MOVQ	AX, ""..autotmp_81+800(SP)
	0x0acc 02764 (pointer_vs_value/code/benchmark_invocation_test.go:193)	MOVQ	"".~R0+136(SP), AX
	0x0ad4 02772 (pointer_vs_value/code/benchmark_invocation_test.go:193)	MOVQ	AX, ""..autotmp_81+808(SP)
	0x0adc 02780 (pointer_vs_value/code/benchmark_invocation_test.go:194)	MOVQ	"".~R0+104(SP), AX
	0x0ae1 02785 (pointer_vs_value/code/benchmark_invocation_test.go:194)	MOVQ	AX, ""..autotmp_81+816(SP)
	0x0ae9 02793 (pointer_vs_value/code/benchmark_invocation_test.go:195)	MOVQ	"".~R0+64(SP), AX
	0x0aee 02798 (pointer_vs_value/code/benchmark_invocation_test.go:195)	MOVQ	AX, ""..autotmp_81+824(SP)
	0x0af6 02806 (pointer_vs_value/code/benchmark_invocation_test.go:196)	MOVQ	"".~R0+32(SP), AX
	0x0afb 02811 (pointer_vs_value/code/benchmark_invocation_test.go:196)	MOVQ	AX, ""..autotmp_81+832(SP)
	0x0b03 02819 (pointer_vs_value/code/benchmark_invocation_test.go:197)	MOVQ	"".~R0+56(SP), AX
	0x0b08 02824 (pointer_vs_value/code/benchmark_invocation_test.go:197)	MOVQ	AX, ""..autotmp_81+840(SP)
	0x0b10 02832 (pointer_vs_value/code/benchmark_invocation_test.go:198)	MOVQ	"".~R0+184(SP), AX
	0x0b18 02840 (pointer_vs_value/code/benchmark_invocation_test.go:198)	MOVQ	AX, ""..autotmp_81+848(SP)
	0x0b20 02848 (pointer_vs_value/code/benchmark_invocation_test.go:199)	MOVSD	""..autotmp_57+472(SP), X0
	0x0b29 02857 (pointer_vs_value/code/benchmark_invocation_test.go:199)	MOVSD	X0, ""..autotmp_81+856(SP)
	0x0b32 02866 (pointer_vs_value/code/benchmark_invocation_test.go:200)	MOVSD	""..autotmp_58+464(SP), X0
	0x0b3b 02875 (pointer_vs_value/code/benchmark_invocation_test.go:200)	MOVSD	X0, ""..autotmp_81+864(SP)
	0x0b44 02884 (pointer_vs_value/code/benchmark_invocation_test.go:201)	MOVSD	""..autotmp_59+456(SP), X0
	0x0b4d 02893 (pointer_vs_value/code/benchmark_invocation_test.go:201)	MOVSD	X0, ""..autotmp_81+872(SP)
	0x0b56 02902 (pointer_vs_value/code/benchmark_invocation_test.go:202)	MOVSD	""..autotmp_60+448(SP), X0
	0x0b5f 02911 (pointer_vs_value/code/benchmark_invocation_test.go:202)	MOVSD	X0, ""..autotmp_81+880(SP)
	0x0b68 02920 (pointer_vs_value/code/benchmark_invocation_test.go:203)	MOVSD	""..autotmp_61+440(SP), X0
	0x0b71 02929 (pointer_vs_value/code/benchmark_invocation_test.go:203)	MOVSD	X0, ""..autotmp_81+888(SP)
	0x0b7a 02938 (pointer_vs_value/code/benchmark_invocation_test.go:204)	MOVSD	""..autotmp_62+432(SP), X0
	0x0b83 02947 (pointer_vs_value/code/benchmark_invocation_test.go:204)	MOVSD	X0, ""..autotmp_81+896(SP)
	0x0b8c 02956 (pointer_vs_value/code/benchmark_invocation_test.go:205)	MOVSD	""..autotmp_63+424(SP), X0
	0x0b95 02965 (pointer_vs_value/code/benchmark_invocation_test.go:205)	MOVSD	X0, ""..autotmp_81+904(SP)
	0x0b9e 02974 (pointer_vs_value/code/benchmark_invocation_test.go:206)	MOVSD	""..autotmp_64+416(SP), X0
	0x0ba7 02983 (pointer_vs_value/code/benchmark_invocation_test.go:206)	MOVSD	X0, ""..autotmp_81+912(SP)
	0x0bb0 02992 (pointer_vs_value/code/benchmark_invocation_test.go:207)	MOVSD	""..autotmp_65+408(SP), X0
	0x0bb9 03001 (pointer_vs_value/code/benchmark_invocation_test.go:207)	MOVSD	X0, ""..autotmp_81+920(SP)
	0x0bc2 03010 (pointer_vs_value/code/benchmark_invocation_test.go:208)	MOVSD	""..autotmp_66+400(SP), X0
	0x0bcb 03019 (pointer_vs_value/code/benchmark_invocation_test.go:208)	MOVSD	X0, ""..autotmp_81+928(SP)
	0x0bd4 03028 (pointer_vs_value/code/benchmark_invocation_test.go:209)	MOVSD	""..autotmp_67+392(SP), X0
	0x0bdd 03037 (pointer_vs_value/code/benchmark_invocation_test.go:209)	MOVSD	X0, ""..autotmp_81+936(SP)
	0x0be6 03046 (pointer_vs_value/code/benchmark_invocation_test.go:210)	MOVQ	"".~R0+712(SP), AX
	0x0bee 03054 (pointer_vs_value/code/benchmark_invocation_test.go:210)	PCDATA	$0, $3
	0x0bee 03054 (pointer_vs_value/code/benchmark_invocation_test.go:210)	PCDATA	$1, $24
	0x0bee 03054 (pointer_vs_value/code/benchmark_invocation_test.go:210)	MOVQ	"".~R0+704(SP), CX
	0x0bf6 03062 (pointer_vs_value/code/benchmark_invocation_test.go:210)	PCDATA	$0, $0
	0x0bf6 03062 (pointer_vs_value/code/benchmark_invocation_test.go:210)	MOVQ	CX, ""..autotmp_81+944(SP)
	0x0bfe 03070 (pointer_vs_value/code/benchmark_invocation_test.go:210)	MOVQ	AX, ""..autotmp_81+952(SP)
	0x0c06 03078 (pointer_vs_value/code/benchmark_invocation_test.go:211)	MOVQ	"".~R0+664(SP), AX
	0x0c0e 03086 (pointer_vs_value/code/benchmark_invocation_test.go:211)	PCDATA	$0, $3
	0x0c0e 03086 (pointer_vs_value/code/benchmark_invocation_test.go:211)	PCDATA	$1, $25
	0x0c0e 03086 (pointer_vs_value/code/benchmark_invocation_test.go:211)	MOVQ	"".~R0+656(SP), CX
	0x0c16 03094 (pointer_vs_value/code/benchmark_invocation_test.go:211)	PCDATA	$0, $0
	0x0c16 03094 (pointer_vs_value/code/benchmark_invocation_test.go:211)	MOVQ	CX, ""..autotmp_81+960(SP)
	0x0c1e 03102 (pointer_vs_value/code/benchmark_invocation_test.go:211)	MOVQ	AX, ""..autotmp_81+968(SP)
	0x0c26 03110 (pointer_vs_value/code/benchmark_invocation_test.go:212)	MOVQ	"".~R0+616(SP), AX
	0x0c2e 03118 (pointer_vs_value/code/benchmark_invocation_test.go:212)	PCDATA	$0, $3
	0x0c2e 03118 (pointer_vs_value/code/benchmark_invocation_test.go:212)	PCDATA	$1, $26
	0x0c2e 03118 (pointer_vs_value/code/benchmark_invocation_test.go:212)	MOVQ	"".~R0+608(SP), CX
	0x0c36 03126 (pointer_vs_value/code/benchmark_invocation_test.go:212)	PCDATA	$0, $0
	0x0c36 03126 (pointer_vs_value/code/benchmark_invocation_test.go:212)	MOVQ	CX, ""..autotmp_81+976(SP)
	0x0c3e 03134 (pointer_vs_value/code/benchmark_invocation_test.go:212)	MOVQ	AX, ""..autotmp_81+984(SP)
	0x0c46 03142 (pointer_vs_value/code/benchmark_invocation_test.go:213)	MOVQ	"".~R0+632(SP), AX
	0x0c4e 03150 (pointer_vs_value/code/benchmark_invocation_test.go:213)	PCDATA	$0, $3
	0x0c4e 03150 (pointer_vs_value/code/benchmark_invocation_test.go:213)	PCDATA	$1, $27
	0x0c4e 03150 (pointer_vs_value/code/benchmark_invocation_test.go:213)	MOVQ	"".~R0+624(SP), CX
	0x0c56 03158 (pointer_vs_value/code/benchmark_invocation_test.go:213)	PCDATA	$0, $0
	0x0c56 03158 (pointer_vs_value/code/benchmark_invocation_test.go:213)	MOVQ	CX, ""..autotmp_81+992(SP)
	0x0c5e 03166 (pointer_vs_value/code/benchmark_invocation_test.go:213)	MOVQ	AX, ""..autotmp_81+1000(SP)
	0x0c66 03174 (pointer_vs_value/code/benchmark_invocation_test.go:214)	MOVQ	"".~R0+584(SP), AX
	0x0c6e 03182 (pointer_vs_value/code/benchmark_invocation_test.go:214)	PCDATA	$0, $3
	0x0c6e 03182 (pointer_vs_value/code/benchmark_invocation_test.go:214)	PCDATA	$1, $28
	0x0c6e 03182 (pointer_vs_value/code/benchmark_invocation_test.go:214)	MOVQ	"".~R0+576(SP), CX
	0x0c76 03190 (pointer_vs_value/code/benchmark_invocation_test.go:214)	PCDATA	$0, $0
	0x0c76 03190 (pointer_vs_value/code/benchmark_invocation_test.go:214)	MOVQ	CX, ""..autotmp_81+1008(SP)
	0x0c7e 03198 (pointer_vs_value/code/benchmark_invocation_test.go:214)	MOVQ	AX, ""..autotmp_81+1016(SP)
	0x0c86 03206 (pointer_vs_value/code/benchmark_invocation_test.go:215)	MOVQ	"".~R0+600(SP), AX
	0x0c8e 03214 (pointer_vs_value/code/benchmark_invocation_test.go:215)	PCDATA	$0, $3
	0x0c8e 03214 (pointer_vs_value/code/benchmark_invocation_test.go:215)	PCDATA	$1, $29
	0x0c8e 03214 (pointer_vs_value/code/benchmark_invocation_test.go:215)	MOVQ	"".~R0+592(SP), CX
	0x0c96 03222 (pointer_vs_value/code/benchmark_invocation_test.go:215)	PCDATA	$0, $0
	0x0c96 03222 (pointer_vs_value/code/benchmark_invocation_test.go:215)	MOVQ	CX, ""..autotmp_81+1024(SP)
	0x0c9e 03230 (pointer_vs_value/code/benchmark_invocation_test.go:215)	MOVQ	AX, ""..autotmp_81+1032(SP)
	0x0ca6 03238 (pointer_vs_value/code/benchmark_invocation_test.go:216)	MOVQ	"".~R0+648(SP), AX
	0x0cae 03246 (pointer_vs_value/code/benchmark_invocation_test.go:216)	PCDATA	$0, $3
	0x0cae 03246 (pointer_vs_value/code/benchmark_invocation_test.go:216)	PCDATA	$1, $30
	0x0cae 03246 (pointer_vs_value/code/benchmark_invocation_test.go:216)	MOVQ	"".~R0+640(SP), CX
	0x0cb6 03254 (pointer_vs_value/code/benchmark_invocation_test.go:216)	PCDATA	$0, $0
	0x0cb6 03254 (pointer_vs_value/code/benchmark_invocation_test.go:216)	MOVQ	CX, ""..autotmp_81+1040(SP)
	0x0cbe 03262 (pointer_vs_value/code/benchmark_invocation_test.go:216)	MOVQ	AX, ""..autotmp_81+1048(SP)
	0x0cc6 03270 (pointer_vs_value/code/benchmark_invocation_test.go:217)	PCDATA	$0, $2
	0x0cc6 03270 (pointer_vs_value/code/benchmark_invocation_test.go:217)	MOVQ	"".~R0+672(SP), AX
	0x0cce 03278 (pointer_vs_value/code/benchmark_invocation_test.go:217)	PCDATA	$1, $31
	0x0cce 03278 (pointer_vs_value/code/benchmark_invocation_test.go:217)	MOVQ	"".~R0+680(SP), CX
	0x0cd6 03286 (pointer_vs_value/code/benchmark_invocation_test.go:217)	PCDATA	$0, $0
	0x0cd6 03286 (pointer_vs_value/code/benchmark_invocation_test.go:217)	MOVQ	AX, ""..autotmp_81+1056(SP)
	0x0cde 03294 (pointer_vs_value/code/benchmark_invocation_test.go:217)	MOVQ	CX, ""..autotmp_81+1064(SP)
	0x0ce6 03302 (pointer_vs_value/code/benchmark_invocation_test.go:218)	PCDATA	$0, $2
	0x0ce6 03302 (pointer_vs_value/code/benchmark_invocation_test.go:218)	MOVQ	"".~R0+736(SP), AX
	0x0cee 03310 (pointer_vs_value/code/benchmark_invocation_test.go:218)	PCDATA	$1, $32
	0x0cee 03310 (pointer_vs_value/code/benchmark_invocation_test.go:218)	MOVQ	"".~R0+744(SP), CX
	0x0cf6 03318 (pointer_vs_value/code/benchmark_invocation_test.go:218)	PCDATA	$0, $0
	0x0cf6 03318 (pointer_vs_value/code/benchmark_invocation_test.go:218)	MOVQ	AX, ""..autotmp_81+1072(SP)
	0x0cfe 03326 (pointer_vs_value/code/benchmark_invocation_test.go:218)	MOVQ	CX, ""..autotmp_81+1080(SP)
	0x0d06 03334 (pointer_vs_value/code/benchmark_invocation_test.go:219)	PCDATA	$0, $2
	0x0d06 03334 (pointer_vs_value/code/benchmark_invocation_test.go:219)	MOVQ	"".~R0+688(SP), AX
	0x0d0e 03342 (pointer_vs_value/code/benchmark_invocation_test.go:219)	PCDATA	$1, $33
	0x0d0e 03342 (pointer_vs_value/code/benchmark_invocation_test.go:219)	MOVQ	"".~R0+696(SP), CX
	0x0d16 03350 (pointer_vs_value/code/benchmark_invocation_test.go:219)	PCDATA	$0, $0
	0x0d16 03350 (pointer_vs_value/code/benchmark_invocation_test.go:219)	MOVQ	AX, ""..autotmp_81+1088(SP)
	0x0d1e 03358 (pointer_vs_value/code/benchmark_invocation_test.go:219)	MOVQ	CX, ""..autotmp_81+1096(SP)
	0x0d26 03366 (pointer_vs_value/code/benchmark_invocation_test.go:220)	PCDATA	$0, $2
	0x0d26 03366 (pointer_vs_value/code/benchmark_invocation_test.go:220)	MOVQ	"".~R0+720(SP), AX
	0x0d2e 03374 (pointer_vs_value/code/benchmark_invocation_test.go:220)	PCDATA	$1, $34
	0x0d2e 03374 (pointer_vs_value/code/benchmark_invocation_test.go:220)	MOVQ	"".~R0+728(SP), CX
	0x0d36 03382 (pointer_vs_value/code/benchmark_invocation_test.go:220)	PCDATA	$0, $0
	0x0d36 03382 (pointer_vs_value/code/benchmark_invocation_test.go:220)	MOVQ	AX, ""..autotmp_81+1104(SP)
	0x0d3e 03390 (pointer_vs_value/code/benchmark_invocation_test.go:220)	MOVQ	CX, ""..autotmp_81+1112(SP)
	0x0d46 03398 (pointer_vs_value/code/benchmark_invocation_test.go:187)	PCDATA	$0, $1
	0x0d46 03398 (pointer_vs_value/code/benchmark_invocation_test.go:187)	PCDATA	$1, $35
	0x0d46 03398 (pointer_vs_value/code/benchmark_invocation_test.go:187)	LEAQ	"".~r0+1136(SP), DI
	0x0d4e 03406 (pointer_vs_value/code/benchmark_invocation_test.go:187)	PCDATA	$0, $4
	0x0d4e 03406 (pointer_vs_value/code/benchmark_invocation_test.go:187)	PCDATA	$1, $36
	0x0d4e 03406 (pointer_vs_value/code/benchmark_invocation_test.go:187)	LEAQ	""..autotmp_81+768(SP), SI
	0x0d56 03414 (pointer_vs_value/code/benchmark_invocation_test.go:187)	PCDATA	$0, $0
	0x0d56 03414 (pointer_vs_value/code/benchmark_invocation_test.go:187)	DUFFCOPY	$588
	0x0d69 03433 (pointer_vs_value/code/benchmark_invocation_test.go:187)	MOVQ	1120(SP), BP
	0x0d71 03441 (pointer_vs_value/code/benchmark_invocation_test.go:187)	ADDQ	$1128, SP
	0x0d78 03448 (pointer_vs_value/code/benchmark_invocation_test.go:187)	RET
	0x0d79 03449 (pointer_vs_value/code/benchmark_invocation_test.go:187)	NOP
	0x0d79 03449 (pointer_vs_value/code/benchmark_invocation_test.go:186)	PCDATA	$1, $-1
	0x0d79 03449 (pointer_vs_value/code/benchmark_invocation_test.go:186)	PCDATA	$0, $-1
	0x0d79 03449 (pointer_vs_value/code/benchmark_invocation_test.go:186)	CALL	runtime.morestack_noctxt(SB)
	0x0d7e 03454 (pointer_vs_value/code/benchmark_invocation_test.go:186)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 18 fc ff  eH..%....H..$...
	0x0010 ff 48 3b 41 10 0f 86 5e 0d 00 00 48 81 ec 68 04  .H;A...^...H..h.
	0x0020 00 00 48 89 ac 24 60 04 00 00 48 8d ac 24 60 04  ..H..$`...H..$`.
	0x0030 00 00 48 8d bc 24 70 04 00 00 0f 57 c0 48 8d 7f  ..H..$p....W.H..
	0x0040 e0 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00 00  .H.l$.H.l$......
	0x0050 48 8b 6d 00 48 c7 44 24 70 00 00 00 00 48 8b 05  H.m.H.D$p....H..
	0x0060 00 00 00 00 48 89 84 24 00 02 00 00 48 c7 84 24  ....H..$....H..$
	0x0070 80 00 00 00 00 00 00 00 48 8b 84 24 00 02 00 00  ........H..$....
	0x0080 84 00 48 8b 08 84 01 48 8b 49 18 48 8b 40 08 48  ..H....H.I.H.@.H
	0x0090 89 04 24 ff d1 48 8b 44 24 08 48 89 84 24 e0 01  ..$..H.D$.H..$..
	0x00a0 00 00 48 89 84 24 80 00 00 00 eb 00 48 8b 84 24  ..H..$......H..$
	0x00b0 80 00 00 00 48 89 84 24 78 01 00 00 48 89 44 24  ....H..$x...H.D$
	0x00c0 70 eb 00 48 c7 84 24 c0 00 00 00 00 00 00 00 48  p..H..$........H
	0x00d0 8b 05 00 00 00 00 48 89 84 24 10 02 00 00 48 c7  ......H..$....H.
	0x00e0 84 24 c8 00 00 00 00 00 00 00 48 8b 84 24 10 02  .$........H..$..
	0x00f0 00 00 84 00 48 8b 08 84 01 48 8b 49 18 48 8b 40  ....H....H.I.H.@
	0x0100 08 48 89 04 24 ff d1 48 8b 44 24 08 48 89 84 24  .H..$..H.D$.H..$
	0x0110 e0 01 00 00 48 89 84 24 c8 00 00 00 eb 00 48 8b  ....H..$......H.
	0x0120 84 24 c8 00 00 00 48 89 84 24 70 01 00 00 48 89  .$....H..$p...H.
	0x0130 84 24 c0 00 00 00 eb 00 48 c7 84 24 b0 00 00 00  .$......H..$....
	0x0140 00 00 00 00 48 8b 05 00 00 00 00 48 89 84 24 18  ....H......H..$.
	0x0150 02 00 00 48 c7 84 24 a8 00 00 00 00 00 00 00 48  ...H..$........H
	0x0160 8b 84 24 18 02 00 00 84 00 48 8b 08 84 01 48 8b  ..$......H....H.
	0x0170 49 18 48 8b 40 08 48 89 04 24 ff d1 48 8b 44 24  I.H.@.H..$..H.D$
	0x0180 08 48 89 84 24 e0 01 00 00 48 89 84 24 a8 00 00  .H..$....H..$...
	0x0190 00 eb 00 48 8b 84 24 a8 00 00 00 48 89 84 24 68  ...H..$....H..$h
	0x01a0 01 00 00 48 89 84 24 b0 00 00 00 eb 00 48 c7 44  ...H..$......H.D
	0x01b0 24 58 00 00 00 00 48 8b 05 00 00 00 00 48 89 84  $X....H......H..
	0x01c0 24 28 02 00 00 48 c7 84 24 a0 00 00 00 00 00 00  $(...H..$.......
	0x01d0 00 48 8b 84 24 28 02 00 00 84 00 48 8b 08 84 01  .H..$(.....H....
	0x01e0 48 8b 49 18 48 8b 40 08 48 89 04 24 ff d1 48 8b  H.I.H.@.H..$..H.
	0x01f0 44 24 08 48 89 84 24 e0 01 00 00 48 89 84 24 a0  D$.H..$....H..$.
	0x0200 00 00 00 eb 00 48 8b 84 24 a0 00 00 00 48 89 84  .....H..$....H..
	0x0210 24 60 01 00 00 48 89 44 24 58 eb 00 48 c7 84 24  $`...H.D$X..H..$
	0x0220 98 00 00 00 00 00 00 00 48 8b 05 00 00 00 00 48  ........H......H
	0x0230 89 84 24 30 02 00 00 48 c7 84 24 90 00 00 00 00  ..$0...H..$.....
	0x0240 00 00 00 48 8b 84 24 30 02 00 00 84 00 48 8b 08  ...H..$0.....H..
	0x0250 84 01 48 8b 49 18 48 8b 40 08 48 89 04 24 ff d1  ..H.I.H.@.H..$..
	0x0260 48 8b 44 24 08 48 89 84 24 e0 01 00 00 48 89 84  H.D$.H..$....H..
	0x0270 24 90 00 00 00 eb 00 48 8b 84 24 90 00 00 00 48  $......H..$....H
	0x0280 89 84 24 58 01 00 00 48 89 84 24 98 00 00 00 eb  ..$X...H..$.....
	0x0290 00 48 c7 84 24 88 00 00 00 00 00 00 00 48 8b 05  .H..$........H..
	0x02a0 00 00 00 00 48 89 84 24 20 02 00 00 48 c7 44 24  ....H..$ ...H.D$
	0x02b0 78 00 00 00 00 48 8b 84 24 20 02 00 00 84 00 48  x....H..$ .....H
	0x02c0 8b 08 84 01 48 8b 49 18 48 8b 40 08 48 89 04 24  ....H.I.H.@.H..$
	0x02d0 ff d1 48 8b 44 24 08 48 89 84 24 e0 01 00 00 48  ..H.D$.H..$....H
	0x02e0 89 44 24 78 eb 00 48 8b 44 24 78 48 89 84 24 50  .D$x..H.D$xH..$P
	0x02f0 01 00 00 48 89 84 24 88 00 00 00 eb 00 48 c7 44  ...H..$......H.D
	0x0300 24 68 00 00 00 00 48 8b 05 00 00 00 00 48 89 84  $h....H......H..
	0x0310 24 e8 01 00 00 48 c7 44 24 50 00 00 00 00 48 8b  $....H.D$P....H.
	0x0320 84 24 e8 01 00 00 84 00 48 8b 08 84 01 48 8b 49  .$......H....H.I
	0x0330 18 48 8b 40 08 48 89 04 24 ff d1 48 8b 44 24 08  .H.@.H..$..H.D$.
	0x0340 48 89 84 24 e0 01 00 00 48 89 44 24 50 eb 00 48  H..$....H.D$P..H
	0x0350 8b 44 24 50 48 89 84 24 48 01 00 00 48 89 44 24  .D$PH..$H...H.D$
	0x0360 68 eb 00 48 c7 44 24 40 00 00 00 00 48 8b 05 00  h..H.D$@....H...
	0x0370 00 00 00 48 89 84 24 f0 01 00 00 48 c7 44 24 28  ...H..$....H.D$(
	0x0380 00 00 00 00 48 8b 84 24 f0 01 00 00 84 00 48 8b  ....H..$......H.
	0x0390 08 84 01 48 8b 49 18 48 8b 40 08 48 89 04 24 ff  ...H.I.H.@.H..$.
	0x03a0 d1 48 8b 44 24 08 48 89 84 24 e0 01 00 00 48 89  .H.D$.H..$....H.
	0x03b0 44 24 28 eb 00 48 8b 44 24 28 48 89 84 24 40 01  D$(..H.D$(H..$@.
	0x03c0 00 00 48 89 44 24 40 eb 00 48 c7 44 24 20 00 00  ..H.D$@..H.D$ ..
	0x03d0 00 00 48 8b 05 00 00 00 00 48 89 84 24 38 02 00  ..H......H..$8..
	0x03e0 00 48 c7 44 24 30 00 00 00 00 48 8b 84 24 38 02  .H.D$0....H..$8.
	0x03f0 00 00 84 00 48 8b 08 84 01 48 8b 49 18 48 8b 40  ....H....H.I.H.@
	0x0400 08 48 89 04 24 ff d1 48 8b 44 24 08 48 89 84 24  .H..$..H.D$.H..$
	0x0410 e0 01 00 00 48 89 44 24 30 eb 00 48 8b 44 24 30  ....H.D$0..H.D$0
	0x0420 48 89 84 24 38 01 00 00 48 89 44 24 20 eb 00 48  H..$8...H.D$ ..H
	0x0430 c7 44 24 38 00 00 00 00 48 8b 05 00 00 00 00 48  .D$8....H......H
	0x0440 89 84 24 f8 01 00 00 48 c7 44 24 48 00 00 00 00  ..$....H.D$H....
	0x0450 48 8b 84 24 f8 01 00 00 84 00 48 8b 08 84 01 48  H..$......H....H
	0x0460 8b 40 08 48 8b 49 18 48 89 04 24 ff d1 48 8b 44  .@.H.I.H..$..H.D
	0x0470 24 08 48 89 84 24 e0 01 00 00 48 89 44 24 48 eb  $.H..$....H.D$H.
	0x0480 00 48 8b 44 24 48 48 89 84 24 30 01 00 00 48 89  .H.D$HH..$0...H.
	0x0490 44 24 38 eb 00 48 c7 84 24 b8 00 00 00 00 00 00  D$8..H..$.......
	0x04a0 00 48 8b 05 00 00 00 00 48 89 84 24 08 02 00 00  .H......H..$....
	0x04b0 48 c7 44 24 60 00 00 00 00 48 8b 84 24 08 02 00  H.D$`....H..$...
	0x04c0 00 84 00 48 8b 08 84 01 48 8b 40 08 48 8b 49 18  ...H....H.@.H.I.
	0x04d0 48 89 04 24 ff d1 48 8b 44 24 08 48 89 84 24 e0  H..$..H.D$.H..$.
	0x04e0 01 00 00 48 89 44 24 60 eb 00 48 8b 44 24 60 48  ...H.D$`..H.D$`H
	0x04f0 89 84 24 28 01 00 00 48 89 84 24 b8 00 00 00 eb  ..$(...H..$.....
	0x0500 00 e8 00 00 00 00 f2 0f 10 04 24 f2 0f 11 84 24  ..........$....$
	0x0510 d8 01 00 00 e8 00 00 00 00 f2 0f 10 04 24 f2 0f  .............$..
	0x0520 11 84 24 d0 01 00 00 e8 00 00 00 00 f2 0f 10 04  ..$.............
	0x0530 24 f2 0f 11 84 24 c8 01 00 00 e8 00 00 00 00 f2  $....$..........
	0x0540 0f 10 04 24 f2 0f 11 84 24 c0 01 00 00 e8 00 00  ...$....$.......
	0x0550 00 00 f2 0f 10 04 24 f2 0f 11 84 24 b8 01 00 00  ......$....$....
	0x0560 e8 00 00 00 00 f2 0f 10 04 24 f2 0f 11 84 24 b0  .........$....$.
	0x0570 01 00 00 e8 00 00 00 00 f2 0f 10 04 24 f2 0f 11  ............$...
	0x0580 84 24 a8 01 00 00 e8 00 00 00 00 f2 0f 10 04 24  .$.............$
	0x0590 f2 0f 11 84 24 a0 01 00 00 e8 00 00 00 00 f2 0f  ....$...........
	0x05a0 10 04 24 f2 0f 11 84 24 98 01 00 00 e8 00 00 00  ..$....$........
	0x05b0 00 f2 0f 10 04 24 f2 0f 11 84 24 90 01 00 00 e8  .....$....$.....
	0x05c0 00 00 00 00 f2 0f 10 04 24 f2 0f 11 84 24 88 01  ........$....$..
	0x05d0 00 00 e8 00 00 00 00 48 8b 04 24 48 89 84 24 80  .......H..$H..$.
	0x05e0 01 00 00 48 89 84 24 e0 00 00 00 0f 57 c0 0f 11  ...H..$.....W...
	0x05f0 84 24 c0 02 00 00 48 8b 84 24 e0 00 00 00 48 89  .$....H..$....H.
	0x0600 04 24 48 c7 44 24 08 0a 00 00 00 e8 00 00 00 00  .$H.D$..........
	0x0610 48 8b 44 24 18 48 8b 4c 24 10 48 89 8c 24 f0 02  H.D$.H.L$.H..$..
	0x0620 00 00 48 89 84 24 f8 02 00 00 48 89 8c 24 c0 02  ..H..$....H..$..
	0x0630 00 00 48 89 84 24 c8 02 00 00 eb 00 e8 00 00 00  ..H..$..........
	0x0640 00 48 8b 04 24 48 89 84 24 80 01 00 00 48 89 84  .H..$H..$....H..
	0x0650 24 e8 00 00 00 0f 57 c0 0f 11 84 24 90 02 00 00  $.....W....$....
	0x0660 48 8b 84 24 e8 00 00 00 48 89 04 24 48 c7 44 24  H..$....H..$H.D$
	0x0670 08 0a 00 00 00 e8 00 00 00 00 48 8b 44 24 10 48  ..........H.D$.H
	0x0680 8b 4c 24 18 48 89 84 24 f0 02 00 00 48 89 8c 24  .L$.H..$....H..$
	0x0690 f8 02 00 00 48 89 84 24 90 02 00 00 48 89 8c 24  ....H..$....H..$
	0x06a0 98 02 00 00 eb 00 e8 00 00 00 00 48 8b 04 24 48  ...........H..$H
	0x06b0 89 84 24 80 01 00 00 48 89 84 24 f0 00 00 00 0f  ..$....H..$.....
	0x06c0 57 c0 0f 11 84 24 60 02 00 00 48 8b 84 24 f0 00  W....$`...H..$..
	0x06d0 00 00 48 89 04 24 48 c7 44 24 08 0a 00 00 00 e8  ..H..$H.D$......
	0x06e0 00 00 00 00 48 8b 44 24 18 48 8b 4c 24 10 48 89  ....H.D$.H.L$.H.
	0x06f0 8c 24 f0 02 00 00 48 89 84 24 f8 02 00 00 48 89  .$....H..$....H.
	0x0700 8c 24 60 02 00 00 48 89 84 24 68 02 00 00 eb 00  .$`...H..$h.....
	0x0710 e8 00 00 00 00 48 8b 04 24 48 89 84 24 80 01 00  .....H..$H..$...
	0x0720 00 48 89 84 24 00 01 00 00 0f 57 c0 0f 11 84 24  .H..$.....W....$
	0x0730 70 02 00 00 48 8b 84 24 00 01 00 00 48 89 04 24  p...H..$....H..$
	0x0740 48 c7 44 24 08 0a 00 00 00 e8 00 00 00 00 48 8b  H.D$..........H.
	0x0750 44 24 18 48 8b 4c 24 10 48 89 8c 24 f0 02 00 00  D$.H.L$.H..$....
	0x0760 48 89 84 24 f8 02 00 00 48 89 8c 24 70 02 00 00  H..$....H..$p...
	0x0770 48 89 84 24 78 02 00 00 eb 00 e8 00 00 00 00 48  H..$x..........H
	0x0780 8b 04 24 48 89 84 24 80 01 00 00 48 89 84 24 d8  ..$H..$....H..$.
	0x0790 00 00 00 0f 57 c0 0f 11 84 24 40 02 00 00 48 8b  ....W....$@...H.
	0x07a0 84 24 d8 00 00 00 48 89 04 24 48 c7 44 24 08 0a  .$....H..$H.D$..
	0x07b0 00 00 00 e8 00 00 00 00 48 8b 44 24 18 48 8b 4c  ........H.D$.H.L
	0x07c0 24 10 48 89 8c 24 f0 02 00 00 48 89 84 24 f8 02  $.H..$....H..$..
	0x07d0 00 00 48 89 8c 24 40 02 00 00 48 89 84 24 48 02  ..H..$@...H..$H.
	0x07e0 00 00 eb 00 e8 00 00 00 00 48 8b 04 24 48 89 84  .........H..$H..
	0x07f0 24 80 01 00 00 48 89 84 24 20 01 00 00 0f 57 c0  $....H..$ ....W.
	0x0800 0f 11 84 24 50 02 00 00 48 8b 84 24 20 01 00 00  ...$P...H..$ ...
	0x0810 48 89 04 24 48 c7 44 24 08 0a 00 00 00 e8 00 00  H..$H.D$........
	0x0820 00 00 48 8b 44 24 18 48 8b 4c 24 10 48 89 8c 24  ..H.D$.H.L$.H..$
	0x0830 f0 02 00 00 48 89 84 24 f8 02 00 00 48 89 8c 24  ....H..$....H..$
	0x0840 50 02 00 00 48 89 84 24 58 02 00 00 eb 00 e8 00  P...H..$X.......
	0x0850 00 00 00 48 8b 04 24 48 89 84 24 80 01 00 00 48  ...H..$H..$....H
	0x0860 89 84 24 d0 00 00 00 0f 57 c0 0f 11 84 24 80 02  ..$.....W....$..
	0x0870 00 00 48 8b 84 24 d0 00 00 00 48 89 04 24 48 c7  ..H..$....H..$H.
	0x0880 44 24 08 0a 00 00 00 e8 00 00 00 00 48 8b 44 24  D$..........H.D$
	0x0890 18 48 8b 4c 24 10 48 89 8c 24 f0 02 00 00 48 89  .H.L$.H..$....H.
	0x08a0 84 24 f8 02 00 00 48 89 8c 24 80 02 00 00 48 89  .$....H..$....H.
	0x08b0 84 24 88 02 00 00 eb 00 e8 00 00 00 00 48 8b 04  .$...........H..
	0x08c0 24 48 89 84 24 80 01 00 00 48 89 84 24 10 01 00  $H..$....H..$...
	0x08d0 00 0f 57 c0 0f 11 84 24 a0 02 00 00 48 8b 84 24  ..W....$....H..$
	0x08e0 10 01 00 00 48 89 04 24 48 c7 44 24 08 0a 00 00  ....H..$H.D$....
	0x08f0 00 e8 00 00 00 00 48 8b 44 24 18 48 8b 4c 24 10  ......H.D$.H.L$.
	0x0900 48 89 8c 24 f0 02 00 00 48 89 84 24 f8 02 00 00  H..$....H..$....
	0x0910 48 89 8c 24 a0 02 00 00 48 89 84 24 a8 02 00 00  H..$....H..$....
	0x0920 eb 00 e8 00 00 00 00 48 8b 04 24 48 89 84 24 80  .......H..$H..$.
	0x0930 01 00 00 48 89 84 24 18 01 00 00 0f 57 c0 0f 11  ...H..$.....W...
	0x0940 84 24 e0 02 00 00 48 8b 84 24 18 01 00 00 48 89  .$....H..$....H.
	0x0950 04 24 48 c7 44 24 08 0a 00 00 00 e8 00 00 00 00  .$H.D$..........
	0x0960 48 8b 44 24 18 48 8b 4c 24 10 48 89 8c 24 f0 02  H.D$.H.L$.H..$..
	0x0970 00 00 48 89 84 24 f8 02 00 00 48 89 8c 24 e0 02  ..H..$....H..$..
	0x0980 00 00 48 89 84 24 e8 02 00 00 eb 00 e8 00 00 00  ..H..$..........
	0x0990 00 48 8b 04 24 48 89 84 24 80 01 00 00 48 89 84  .H..$H..$....H..
	0x09a0 24 08 01 00 00 0f 57 c0 0f 11 84 24 b0 02 00 00  $.....W....$....
	0x09b0 48 8b 84 24 08 01 00 00 48 89 04 24 48 c7 44 24  H..$....H..$H.D$
	0x09c0 08 0a 00 00 00 e8 00 00 00 00 48 8b 44 24 18 48  ..........H.D$.H
	0x09d0 8b 4c 24 10 48 89 8c 24 f0 02 00 00 48 89 84 24  .L$.H..$....H..$
	0x09e0 f8 02 00 00 48 89 8c 24 b0 02 00 00 48 89 84 24  ....H..$....H..$
	0x09f0 b8 02 00 00 eb 00 e8 00 00 00 00 48 8b 04 24 48  ...........H..$H
	0x0a00 89 84 24 80 01 00 00 48 89 84 24 f8 00 00 00 0f  ..$....H..$.....
	0x0a10 57 c0 0f 11 84 24 d0 02 00 00 48 8b 84 24 f8 00  W....$....H..$..
	0x0a20 00 00 48 89 04 24 48 c7 44 24 08 0a 00 00 00 e8  ..H..$H.D$......
	0x0a30 00 00 00 00 48 8b 44 24 18 48 8b 4c 24 10 48 89  ....H.D$.H.L$.H.
	0x0a40 8c 24 f0 02 00 00 48 89 84 24 f8 02 00 00 48 89  .$....H..$....H.
	0x0a50 8c 24 d0 02 00 00 48 89 84 24 d8 02 00 00 eb 00  .$....H..$......
	0x0a60 48 8d bc 24 00 03 00 00 48 8d 35 00 00 00 00 48  H..$....H.5....H
	0x0a70 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00 00 48 8b  .l$.H.l$......H.
	0x0a80 6d 00 48 8b 44 24 70 48 89 84 24 00 03 00 00 48  m.H.D$pH..$....H
	0x0a90 8b 84 24 c0 00 00 00 48 89 84 24 08 03 00 00 48  ..$....H..$....H
	0x0aa0 8b 84 24 b0 00 00 00 48 89 84 24 10 03 00 00 48  ..$....H..$....H
	0x0ab0 8b 44 24 58 48 89 84 24 18 03 00 00 48 8b 84 24  .D$XH..$....H..$
	0x0ac0 98 00 00 00 48 89 84 24 20 03 00 00 48 8b 84 24  ....H..$ ...H..$
	0x0ad0 88 00 00 00 48 89 84 24 28 03 00 00 48 8b 44 24  ....H..$(...H.D$
	0x0ae0 68 48 89 84 24 30 03 00 00 48 8b 44 24 40 48 89  hH..$0...H.D$@H.
	0x0af0 84 24 38 03 00 00 48 8b 44 24 20 48 89 84 24 40  .$8...H.D$ H..$@
	0x0b00 03 00 00 48 8b 44 24 38 48 89 84 24 48 03 00 00  ...H.D$8H..$H...
	0x0b10 48 8b 84 24 b8 00 00 00 48 89 84 24 50 03 00 00  H..$....H..$P...
	0x0b20 f2 0f 10 84 24 d8 01 00 00 f2 0f 11 84 24 58 03  ....$........$X.
	0x0b30 00 00 f2 0f 10 84 24 d0 01 00 00 f2 0f 11 84 24  ......$........$
	0x0b40 60 03 00 00 f2 0f 10 84 24 c8 01 00 00 f2 0f 11  `.......$.......
	0x0b50 84 24 68 03 00 00 f2 0f 10 84 24 c0 01 00 00 f2  .$h.......$.....
	0x0b60 0f 11 84 24 70 03 00 00 f2 0f 10 84 24 b8 01 00  ...$p.......$...
	0x0b70 00 f2 0f 11 84 24 78 03 00 00 f2 0f 10 84 24 b0  .....$x.......$.
	0x0b80 01 00 00 f2 0f 11 84 24 80 03 00 00 f2 0f 10 84  .......$........
	0x0b90 24 a8 01 00 00 f2 0f 11 84 24 88 03 00 00 f2 0f  $........$......
	0x0ba0 10 84 24 a0 01 00 00 f2 0f 11 84 24 90 03 00 00  ..$........$....
	0x0bb0 f2 0f 10 84 24 98 01 00 00 f2 0f 11 84 24 98 03  ....$........$..
	0x0bc0 00 00 f2 0f 10 84 24 90 01 00 00 f2 0f 11 84 24  ......$........$
	0x0bd0 a0 03 00 00 f2 0f 10 84 24 88 01 00 00 f2 0f 11  ........$.......
	0x0be0 84 24 a8 03 00 00 48 8b 84 24 c8 02 00 00 48 8b  .$....H..$....H.
	0x0bf0 8c 24 c0 02 00 00 48 89 8c 24 b0 03 00 00 48 89  .$....H..$....H.
	0x0c00 84 24 b8 03 00 00 48 8b 84 24 98 02 00 00 48 8b  .$....H..$....H.
	0x0c10 8c 24 90 02 00 00 48 89 8c 24 c0 03 00 00 48 89  .$....H..$....H.
	0x0c20 84 24 c8 03 00 00 48 8b 84 24 68 02 00 00 48 8b  .$....H..$h...H.
	0x0c30 8c 24 60 02 00 00 48 89 8c 24 d0 03 00 00 48 89  .$`...H..$....H.
	0x0c40 84 24 d8 03 00 00 48 8b 84 24 78 02 00 00 48 8b  .$....H..$x...H.
	0x0c50 8c 24 70 02 00 00 48 89 8c 24 e0 03 00 00 48 89  .$p...H..$....H.
	0x0c60 84 24 e8 03 00 00 48 8b 84 24 48 02 00 00 48 8b  .$....H..$H...H.
	0x0c70 8c 24 40 02 00 00 48 89 8c 24 f0 03 00 00 48 89  .$@...H..$....H.
	0x0c80 84 24 f8 03 00 00 48 8b 84 24 58 02 00 00 48 8b  .$....H..$X...H.
	0x0c90 8c 24 50 02 00 00 48 89 8c 24 00 04 00 00 48 89  .$P...H..$....H.
	0x0ca0 84 24 08 04 00 00 48 8b 84 24 88 02 00 00 48 8b  .$....H..$....H.
	0x0cb0 8c 24 80 02 00 00 48 89 8c 24 10 04 00 00 48 89  .$....H..$....H.
	0x0cc0 84 24 18 04 00 00 48 8b 84 24 a0 02 00 00 48 8b  .$....H..$....H.
	0x0cd0 8c 24 a8 02 00 00 48 89 84 24 20 04 00 00 48 89  .$....H..$ ...H.
	0x0ce0 8c 24 28 04 00 00 48 8b 84 24 e0 02 00 00 48 8b  .$(...H..$....H.
	0x0cf0 8c 24 e8 02 00 00 48 89 84 24 30 04 00 00 48 89  .$....H..$0...H.
	0x0d00 8c 24 38 04 00 00 48 8b 84 24 b0 02 00 00 48 8b  .$8...H..$....H.
	0x0d10 8c 24 b8 02 00 00 48 89 84 24 40 04 00 00 48 89  .$....H..$@...H.
	0x0d20 8c 24 48 04 00 00 48 8b 84 24 d0 02 00 00 48 8b  .$H...H..$....H.
	0x0d30 8c 24 d8 02 00 00 48 89 84 24 50 04 00 00 48 89  .$....H..$P...H.
	0x0d40 8c 24 58 04 00 00 48 8d bc 24 70 04 00 00 48 8d  .$X...H..$p...H.
	0x0d50 b4 24 00 03 00 00 48 89 6c 24 f0 48 8d 6c 24 f0  .$....H.l$.H.l$.
	0x0d60 e8 00 00 00 00 48 8b 6d 00 48 8b ac 24 60 04 00  .....H.m.H..$`..
	0x0d70 00 48 81 c4 68 04 00 00 c3 e8 00 00 00 00 e9 7d  .H..h..........}
	0x0d80 f2 ff ff                                         ...
	rel 5+4 t=16 TLS+0
	rel 76+4 t=8 runtime.duffzero+197
	rel 96+4 t=15 math/rand.globalRand+0
	rel 147+0 t=11 +0
	rel 210+4 t=15 math/rand.globalRand+0
	rel 261+0 t=11 +0
	rel 327+4 t=15 math/rand.globalRand+0
	rel 378+0 t=11 +0
	rel 441+4 t=15 math/rand.globalRand+0
	rel 492+0 t=11 +0
	rel 555+4 t=15 math/rand.globalRand+0
	rel 606+0 t=11 +0
	rel 672+4 t=15 math/rand.globalRand+0
	rel 720+0 t=11 +0
	rel 777+4 t=15 math/rand.globalRand+0
	rel 825+0 t=11 +0
	rel 879+4 t=15 math/rand.globalRand+0
	rel 927+0 t=11 +0
	rel 981+4 t=15 math/rand.globalRand+0
	rel 1029+0 t=11 +0
	rel 1083+4 t=15 math/rand.globalRand+0
	rel 1131+0 t=11 +0
	rel 1188+4 t=15 math/rand.globalRand+0
	rel 1236+0 t=11 +0
	rel 1282+4 t=8 math/rand.Float64+0
	rel 1301+4 t=8 math/rand.Float64+0
	rel 1320+4 t=8 math/rand.Float64+0
	rel 1339+4 t=8 math/rand.Float64+0
	rel 1358+4 t=8 math/rand.Float64+0
	rel 1377+4 t=8 math/rand.Float64+0
	rel 1396+4 t=8 math/rand.Float64+0
	rel 1415+4 t=8 math/rand.Float64+0
	rel 1434+4 t=8 math/rand.Float64+0
	rel 1453+4 t=8 math/rand.Float64+0
	rel 1472+4 t=8 math/rand.Float64+0
	rel 1491+4 t=8 math/rand.Int+0
	rel 1548+4 t=8 strconv.FormatInt+0
	rel 1597+4 t=8 math/rand.Int+0
	rel 1654+4 t=8 strconv.FormatInt+0
	rel 1703+4 t=8 math/rand.Int+0
	rel 1760+4 t=8 strconv.FormatInt+0
	rel 1809+4 t=8 math/rand.Int+0
	rel 1866+4 t=8 strconv.FormatInt+0
	rel 1915+4 t=8 math/rand.Int+0
	rel 1972+4 t=8 strconv.FormatInt+0
	rel 2021+4 t=8 math/rand.Int+0
	rel 2078+4 t=8 strconv.FormatInt+0
	rel 2127+4 t=8 math/rand.Int+0
	rel 2184+4 t=8 strconv.FormatInt+0
	rel 2233+4 t=8 math/rand.Int+0
	rel 2290+4 t=8 strconv.FormatInt+0
	rel 2339+4 t=8 math/rand.Int+0
	rel 2396+4 t=8 strconv.FormatInt+0
	rel 2445+4 t=8 math/rand.Int+0
	rel 2502+4 t=8 strconv.FormatInt+0
	rel 2551+4 t=8 math/rand.Int+0
	rel 2608+4 t=8 strconv.FormatInt+0
	rel 2667+4 t=15 ""..stmp_20+0
	rel 2682+4 t=8 runtime.duffcopy+588
	rel 3425+4 t=8 runtime.duffcopy+588
	rel 3450+4 t=8 runtime.morestack_noctxt+0
"".createTera STEXT size=8075 args=0x340 locals=0xa08
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:224)	TEXT	"".createTera(SB), ABIInternal, $2568-832
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:224)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_invocation_test.go:224)	LEAQ	-2440(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_invocation_test.go:224)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_invocation_test.go:224)	JLS	8065
	0x001b 00027 (pointer_vs_value/code/benchmark_invocation_test.go:224)	SUBQ	$2568, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_invocation_test.go:224)	MOVQ	BP, 2560(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_invocation_test.go:224)	LEAQ	2560(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:224)	FUNCDATA	$0, gclocals·1c8fe45ef447faad72dbd7f762a80c5c(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:224)	FUNCDATA	$1, gclocals·6f015bc9cf50ef057e6ca149eea0a2b4(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:224)	FUNCDATA	$2, gclocals·18fc722f2a78a2e34073064e2f86e2da(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:224)	PCDATA	$0, $1
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:224)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:224)	LEAQ	"".~r0+2576(SP), DI
	0x003a 00058 (pointer_vs_value/code/benchmark_invocation_test.go:224)	XORPS	X0, X0
	0x003d 00061 (pointer_vs_value/code/benchmark_invocation_test.go:224)	PCDATA	$0, $0
	0x003d 00061 (pointer_vs_value/code/benchmark_invocation_test.go:224)	DUFFZERO	$57
	0x0050 00080 (pointer_vs_value/code/benchmark_invocation_test.go:226)	MOVQ	$0, "".~R0+216(SP)
	0x005c 00092 (<unknown line number>)	NOP
	0x005c 00092 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x005c 00092 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0063 00099 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0063 00099 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $1
	0x0063 00099 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1104(SP)
	0x006b 00107 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+248(SP)
	0x0077 00119 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0077 00119 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0077 00119 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1104(SP), AX
	0x007f 00127 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0081 00129 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0084 00132 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0086 00134 (<unknown line number>)	NOP
	0x0086 00134 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x008a 00138 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x008e 00142 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x008e 00142 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0092 00146 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0094 00148 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0099 00153 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x00a1 00161 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+248(SP)
	0x00a9 00169 ($GOROOT/src/math/rand/rand.go:299)	JMP	171
	0x00ab 00171 (pointer_vs_value/code/benchmark_invocation_test.go:226)	MOVQ	"".~R0+248(SP), AX
	0x00b3 00179 (pointer_vs_value/code/benchmark_invocation_test.go:226)	MOVQ	AX, ""..autotmp_160+856(SP)
	0x00bb 00187 (pointer_vs_value/code/benchmark_invocation_test.go:226)	MOVQ	AX, "".~R0+216(SP)
	0x00c3 00195 (pointer_vs_value/code/benchmark_invocation_test.go:226)	JMP	197
	0x00c5 00197 (pointer_vs_value/code/benchmark_invocation_test.go:227)	MOVQ	$0, "".~R0+408(SP)
	0x00d1 00209 (<unknown line number>)	NOP
	0x00d1 00209 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x00d1 00209 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x00d8 00216 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x00d8 00216 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $2
	0x00d8 00216 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1128(SP)
	0x00e0 00224 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+416(SP)
	0x00ec 00236 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x00ec 00236 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x00ec 00236 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1128(SP), AX
	0x00f4 00244 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x00f6 00246 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x00f9 00249 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x00fb 00251 (<unknown line number>)	NOP
	0x00fb 00251 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x00ff 00255 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0103 00259 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0103 00259 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0107 00263 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0109 00265 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x010e 00270 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x0116 00278 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+416(SP)
	0x011e 00286 ($GOROOT/src/math/rand/rand.go:299)	JMP	288
	0x0120 00288 (pointer_vs_value/code/benchmark_invocation_test.go:227)	MOVQ	"".~R0+416(SP), AX
	0x0128 00296 (pointer_vs_value/code/benchmark_invocation_test.go:227)	MOVQ	AX, ""..autotmp_161+848(SP)
	0x0130 00304 (pointer_vs_value/code/benchmark_invocation_test.go:227)	MOVQ	AX, "".~R0+408(SP)
	0x0138 00312 (pointer_vs_value/code/benchmark_invocation_test.go:227)	JMP	314
	0x013a 00314 (pointer_vs_value/code/benchmark_invocation_test.go:228)	MOVQ	$0, "".~R0+424(SP)
	0x0146 00326 (<unknown line number>)	NOP
	0x0146 00326 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0146 00326 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x014d 00333 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x014d 00333 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $3
	0x014d 00333 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1152(SP)
	0x0155 00341 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+432(SP)
	0x0161 00353 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0161 00353 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0161 00353 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1152(SP), AX
	0x0169 00361 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x016b 00363 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x016e 00366 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0170 00368 (<unknown line number>)	NOP
	0x0170 00368 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0174 00372 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0178 00376 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0178 00376 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x017c 00380 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x017e 00382 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0183 00387 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x018b 00395 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+432(SP)
	0x0193 00403 ($GOROOT/src/math/rand/rand.go:299)	JMP	405
	0x0195 00405 (pointer_vs_value/code/benchmark_invocation_test.go:228)	MOVQ	"".~R0+432(SP), AX
	0x019d 00413 (pointer_vs_value/code/benchmark_invocation_test.go:228)	MOVQ	AX, ""..autotmp_162+840(SP)
	0x01a5 00421 (pointer_vs_value/code/benchmark_invocation_test.go:228)	MOVQ	AX, "".~R0+424(SP)
	0x01ad 00429 (pointer_vs_value/code/benchmark_invocation_test.go:228)	JMP	431
	0x01af 00431 (pointer_vs_value/code/benchmark_invocation_test.go:229)	MOVQ	$0, "".~R0+440(SP)
	0x01bb 00443 (<unknown line number>)	NOP
	0x01bb 00443 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x01bb 00443 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x01c2 00450 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x01c2 00450 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $4
	0x01c2 00450 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1208(SP)
	0x01ca 00458 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+400(SP)
	0x01d6 00470 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x01d6 00470 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x01d6 00470 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1208(SP), AX
	0x01de 00478 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x01e0 00480 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x01e3 00483 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x01e5 00485 (<unknown line number>)	NOP
	0x01e5 00485 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x01e9 00489 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x01ed 00493 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x01ed 00493 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x01f1 00497 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x01f3 00499 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x01f8 00504 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x0200 00512 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+400(SP)
	0x0208 00520 ($GOROOT/src/math/rand/rand.go:299)	JMP	522
	0x020a 00522 (pointer_vs_value/code/benchmark_invocation_test.go:229)	MOVQ	"".~R0+400(SP), AX
	0x0212 00530 (pointer_vs_value/code/benchmark_invocation_test.go:229)	MOVQ	AX, ""..autotmp_163+832(SP)
	0x021a 00538 (pointer_vs_value/code/benchmark_invocation_test.go:229)	MOVQ	AX, "".~R0+440(SP)
	0x0222 00546 (pointer_vs_value/code/benchmark_invocation_test.go:229)	JMP	548
	0x0224 00548 (pointer_vs_value/code/benchmark_invocation_test.go:230)	MOVQ	$0, "".~R0+384(SP)
	0x0230 00560 (<unknown line number>)	NOP
	0x0230 00560 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0230 00560 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0237 00567 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0237 00567 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $5
	0x0237 00567 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1248(SP)
	0x023f 00575 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+376(SP)
	0x024b 00587 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x024b 00587 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x024b 00587 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1248(SP), AX
	0x0253 00595 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0255 00597 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0258 00600 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x025a 00602 (<unknown line number>)	NOP
	0x025a 00602 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x025e 00606 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0262 00610 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0262 00610 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0266 00614 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0268 00616 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x026d 00621 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x0275 00629 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+376(SP)
	0x027d 00637 ($GOROOT/src/math/rand/rand.go:299)	JMP	639
	0x027f 00639 (pointer_vs_value/code/benchmark_invocation_test.go:230)	MOVQ	"".~R0+376(SP), AX
	0x0287 00647 (pointer_vs_value/code/benchmark_invocation_test.go:230)	MOVQ	AX, ""..autotmp_164+824(SP)
	0x028f 00655 (pointer_vs_value/code/benchmark_invocation_test.go:230)	MOVQ	AX, "".~R0+384(SP)
	0x0297 00663 (pointer_vs_value/code/benchmark_invocation_test.go:230)	JMP	665
	0x0299 00665 (pointer_vs_value/code/benchmark_invocation_test.go:231)	MOVQ	$0, "".~R0+368(SP)
	0x02a5 00677 (<unknown line number>)	NOP
	0x02a5 00677 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x02a5 00677 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x02ac 00684 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x02ac 00684 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $6
	0x02ac 00684 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1256(SP)
	0x02b4 00692 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+360(SP)
	0x02c0 00704 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x02c0 00704 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x02c0 00704 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1256(SP), AX
	0x02c8 00712 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x02ca 00714 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x02cd 00717 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x02cf 00719 (<unknown line number>)	NOP
	0x02cf 00719 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x02d3 00723 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x02d7 00727 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x02d7 00727 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x02db 00731 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x02dd 00733 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x02e2 00738 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x02ea 00746 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+360(SP)
	0x02f2 00754 ($GOROOT/src/math/rand/rand.go:299)	JMP	756
	0x02f4 00756 (pointer_vs_value/code/benchmark_invocation_test.go:231)	MOVQ	"".~R0+360(SP), AX
	0x02fc 00764 (pointer_vs_value/code/benchmark_invocation_test.go:231)	MOVQ	AX, ""..autotmp_165+816(SP)
	0x0304 00772 (pointer_vs_value/code/benchmark_invocation_test.go:231)	MOVQ	AX, "".~R0+368(SP)
	0x030c 00780 (pointer_vs_value/code/benchmark_invocation_test.go:231)	JMP	782
	0x030e 00782 (pointer_vs_value/code/benchmark_invocation_test.go:232)	MOVQ	$0, "".~R0+352(SP)
	0x031a 00794 (<unknown line number>)	NOP
	0x031a 00794 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x031a 00794 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0321 00801 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0321 00801 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $7
	0x0321 00801 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1264(SP)
	0x0329 00809 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+392(SP)
	0x0335 00821 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0335 00821 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0335 00821 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1264(SP), AX
	0x033d 00829 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x033f 00831 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0342 00834 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0344 00836 (<unknown line number>)	NOP
	0x0344 00836 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0348 00840 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x034c 00844 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x034c 00844 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0350 00848 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0352 00850 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0357 00855 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x035f 00863 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+392(SP)
	0x0367 00871 ($GOROOT/src/math/rand/rand.go:299)	JMP	873
	0x0369 00873 (pointer_vs_value/code/benchmark_invocation_test.go:232)	MOVQ	"".~R0+392(SP), AX
	0x0371 00881 (pointer_vs_value/code/benchmark_invocation_test.go:232)	MOVQ	AX, ""..autotmp_166+808(SP)
	0x0379 00889 (pointer_vs_value/code/benchmark_invocation_test.go:232)	MOVQ	AX, "".~R0+352(SP)
	0x0381 00897 (pointer_vs_value/code/benchmark_invocation_test.go:232)	JMP	899
	0x0383 00899 (pointer_vs_value/code/benchmark_invocation_test.go:233)	MOVQ	$0, "".~R0+344(SP)
	0x038f 00911 (<unknown line number>)	NOP
	0x038f 00911 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x038f 00911 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0396 00918 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0396 00918 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $8
	0x0396 00918 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1160(SP)
	0x039e 00926 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+336(SP)
	0x03aa 00938 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x03aa 00938 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x03aa 00938 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1160(SP), AX
	0x03b2 00946 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x03b4 00948 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x03b7 00951 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x03b9 00953 (<unknown line number>)	NOP
	0x03b9 00953 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x03bd 00957 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x03c1 00961 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x03c1 00961 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x03c5 00965 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x03c7 00967 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x03cc 00972 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x03d4 00980 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+336(SP)
	0x03dc 00988 ($GOROOT/src/math/rand/rand.go:299)	JMP	990
	0x03de 00990 (pointer_vs_value/code/benchmark_invocation_test.go:233)	MOVQ	"".~R0+336(SP), AX
	0x03e6 00998 (pointer_vs_value/code/benchmark_invocation_test.go:233)	MOVQ	AX, ""..autotmp_167+800(SP)
	0x03ee 01006 (pointer_vs_value/code/benchmark_invocation_test.go:233)	MOVQ	AX, "".~R0+344(SP)
	0x03f6 01014 (pointer_vs_value/code/benchmark_invocation_test.go:233)	JMP	1016
	0x03f8 01016 (pointer_vs_value/code/benchmark_invocation_test.go:234)	MOVQ	$0, "".~R0+328(SP)
	0x0404 01028 (<unknown line number>)	NOP
	0x0404 01028 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0404 01028 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x040b 01035 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x040b 01035 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $9
	0x040b 01035 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1272(SP)
	0x0413 01043 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+320(SP)
	0x041f 01055 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x041f 01055 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x041f 01055 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1272(SP), AX
	0x0427 01063 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0429 01065 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x042c 01068 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x042e 01070 (<unknown line number>)	NOP
	0x042e 01070 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0432 01074 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0436 01078 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0436 01078 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x043a 01082 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x043c 01084 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0441 01089 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x0449 01097 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+320(SP)
	0x0451 01105 ($GOROOT/src/math/rand/rand.go:299)	JMP	1107
	0x0453 01107 (pointer_vs_value/code/benchmark_invocation_test.go:234)	MOVQ	"".~R0+320(SP), AX
	0x045b 01115 (pointer_vs_value/code/benchmark_invocation_test.go:234)	MOVQ	AX, ""..autotmp_168+792(SP)
	0x0463 01123 (pointer_vs_value/code/benchmark_invocation_test.go:234)	MOVQ	AX, "".~R0+328(SP)
	0x046b 01131 (pointer_vs_value/code/benchmark_invocation_test.go:234)	JMP	1133
	0x046d 01133 (pointer_vs_value/code/benchmark_invocation_test.go:235)	MOVQ	$0, "".~R0+304(SP)
	0x0479 01145 (<unknown line number>)	NOP
	0x0479 01145 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0479 01145 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0480 01152 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0480 01152 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $10
	0x0480 01152 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1280(SP)
	0x0488 01160 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+296(SP)
	0x0494 01172 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0494 01172 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0494 01172 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1280(SP), AX
	0x049c 01180 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x049e 01182 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x04a1 01185 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x04a3 01187 (<unknown line number>)	NOP
	0x04a3 01187 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x04a7 01191 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x04ab 01195 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x04ab 01195 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x04af 01199 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x04b1 01201 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x04b6 01206 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x04be 01214 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+296(SP)
	0x04c6 01222 ($GOROOT/src/math/rand/rand.go:299)	JMP	1224
	0x04c8 01224 (pointer_vs_value/code/benchmark_invocation_test.go:235)	MOVQ	"".~R0+296(SP), AX
	0x04d0 01232 (pointer_vs_value/code/benchmark_invocation_test.go:235)	MOVQ	AX, ""..autotmp_169+784(SP)
	0x04d8 01240 (pointer_vs_value/code/benchmark_invocation_test.go:235)	MOVQ	AX, "".~R0+304(SP)
	0x04e0 01248 (pointer_vs_value/code/benchmark_invocation_test.go:235)	JMP	1250
	0x04e2 01250 (pointer_vs_value/code/benchmark_invocation_test.go:236)	MOVQ	$0, "".~R0+288(SP)
	0x04ee 01262 (<unknown line number>)	NOP
	0x04ee 01262 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x04ee 01262 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x04f5 01269 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x04f5 01269 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $11
	0x04f5 01269 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1200(SP)
	0x04fd 01277 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+280(SP)
	0x0509 01289 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0509 01289 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0509 01289 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1200(SP), AX
	0x0511 01297 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0513 01299 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0516 01302 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0518 01304 (<unknown line number>)	NOP
	0x0518 01304 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x051c 01308 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0520 01312 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0520 01312 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0524 01316 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0526 01318 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x052b 01323 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x0533 01331 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+280(SP)
	0x053b 01339 ($GOROOT/src/math/rand/rand.go:299)	JMP	1341
	0x053d 01341 (pointer_vs_value/code/benchmark_invocation_test.go:236)	MOVQ	"".~R0+280(SP), AX
	0x0545 01349 (pointer_vs_value/code/benchmark_invocation_test.go:236)	MOVQ	AX, ""..autotmp_170+776(SP)
	0x054d 01357 (pointer_vs_value/code/benchmark_invocation_test.go:236)	MOVQ	AX, "".~R0+288(SP)
	0x0555 01365 (pointer_vs_value/code/benchmark_invocation_test.go:236)	JMP	1367
	0x0557 01367 (pointer_vs_value/code/benchmark_invocation_test.go:237)	MOVQ	$0, "".~R0+272(SP)
	0x0563 01379 (<unknown line number>)	NOP
	0x0563 01379 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0563 01379 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x056a 01386 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x056a 01386 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $12
	0x056a 01386 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1240(SP)
	0x0572 01394 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+264(SP)
	0x057e 01406 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x057e 01406 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x057e 01406 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1240(SP), AX
	0x0586 01414 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0588 01416 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x058b 01419 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x058d 01421 (<unknown line number>)	NOP
	0x058d 01421 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0591 01425 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0595 01429 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0595 01429 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0599 01433 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x059b 01435 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x05a0 01440 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x05a8 01448 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+264(SP)
	0x05b0 01456 ($GOROOT/src/math/rand/rand.go:299)	JMP	1458
	0x05b2 01458 (pointer_vs_value/code/benchmark_invocation_test.go:237)	MOVQ	"".~R0+264(SP), AX
	0x05ba 01466 (pointer_vs_value/code/benchmark_invocation_test.go:237)	MOVQ	AX, ""..autotmp_171+768(SP)
	0x05c2 01474 (pointer_vs_value/code/benchmark_invocation_test.go:237)	MOVQ	AX, "".~R0+272(SP)
	0x05ca 01482 (pointer_vs_value/code/benchmark_invocation_test.go:237)	JMP	1484
	0x05cc 01484 (pointer_vs_value/code/benchmark_invocation_test.go:238)	MOVQ	$0, "".~R0+256(SP)
	0x05d8 01496 (<unknown line number>)	NOP
	0x05d8 01496 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x05d8 01496 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x05df 01503 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x05df 01503 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $13
	0x05df 01503 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1216(SP)
	0x05e7 01511 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+240(SP)
	0x05f3 01523 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x05f3 01523 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x05f3 01523 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1216(SP), AX
	0x05fb 01531 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x05fd 01533 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0600 01536 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0602 01538 (<unknown line number>)	NOP
	0x0602 01538 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0606 01542 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x060a 01546 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x060a 01546 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x060e 01550 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0610 01552 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0615 01557 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x061d 01565 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+240(SP)
	0x0625 01573 ($GOROOT/src/math/rand/rand.go:299)	JMP	1575
	0x0627 01575 (pointer_vs_value/code/benchmark_invocation_test.go:238)	MOVQ	"".~R0+240(SP), AX
	0x062f 01583 (pointer_vs_value/code/benchmark_invocation_test.go:238)	MOVQ	AX, ""..autotmp_172+760(SP)
	0x0637 01591 (pointer_vs_value/code/benchmark_invocation_test.go:238)	MOVQ	AX, "".~R0+256(SP)
	0x063f 01599 (pointer_vs_value/code/benchmark_invocation_test.go:238)	JMP	1601
	0x0641 01601 (pointer_vs_value/code/benchmark_invocation_test.go:239)	MOVQ	$0, "".~R0+232(SP)
	0x064d 01613 (<unknown line number>)	NOP
	0x064d 01613 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x064d 01613 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0654 01620 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0654 01620 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $14
	0x0654 01620 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1192(SP)
	0x065c 01628 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+224(SP)
	0x0668 01640 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0668 01640 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0668 01640 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1192(SP), AX
	0x0670 01648 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0672 01650 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0675 01653 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0677 01655 (<unknown line number>)	NOP
	0x0677 01655 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x067b 01659 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x067f 01663 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x067f 01663 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0683 01667 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0685 01669 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x068a 01674 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x0692 01682 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+224(SP)
	0x069a 01690 ($GOROOT/src/math/rand/rand.go:299)	JMP	1692
	0x069c 01692 (pointer_vs_value/code/benchmark_invocation_test.go:239)	MOVQ	"".~R0+224(SP), AX
	0x06a4 01700 (pointer_vs_value/code/benchmark_invocation_test.go:239)	MOVQ	AX, ""..autotmp_173+752(SP)
	0x06ac 01708 (pointer_vs_value/code/benchmark_invocation_test.go:239)	MOVQ	AX, "".~R0+232(SP)
	0x06b4 01716 (pointer_vs_value/code/benchmark_invocation_test.go:239)	JMP	1718
	0x06b6 01718 (pointer_vs_value/code/benchmark_invocation_test.go:240)	MOVQ	$0, "".~R0+200(SP)
	0x06c2 01730 (<unknown line number>)	NOP
	0x06c2 01730 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x06c2 01730 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x06c9 01737 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x06c9 01737 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $15
	0x06c9 01737 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1168(SP)
	0x06d1 01745 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+192(SP)
	0x06dd 01757 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x06dd 01757 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x06dd 01757 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1168(SP), AX
	0x06e5 01765 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x06e7 01767 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x06ea 01770 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x06ec 01772 (<unknown line number>)	NOP
	0x06ec 01772 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x06f0 01776 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x06f4 01780 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x06f4 01780 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x06f8 01784 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x06fa 01786 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x06ff 01791 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x0707 01799 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+192(SP)
	0x070f 01807 ($GOROOT/src/math/rand/rand.go:299)	JMP	1809
	0x0711 01809 (pointer_vs_value/code/benchmark_invocation_test.go:240)	MOVQ	"".~R0+192(SP), AX
	0x0719 01817 (pointer_vs_value/code/benchmark_invocation_test.go:240)	MOVQ	AX, ""..autotmp_174+744(SP)
	0x0721 01825 (pointer_vs_value/code/benchmark_invocation_test.go:240)	MOVQ	AX, "".~R0+200(SP)
	0x0729 01833 (pointer_vs_value/code/benchmark_invocation_test.go:240)	JMP	1835
	0x072b 01835 (pointer_vs_value/code/benchmark_invocation_test.go:241)	MOVQ	$0, "".~R0+184(SP)
	0x0737 01847 (<unknown line number>)	NOP
	0x0737 01847 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0737 01847 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x073e 01854 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x073e 01854 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $16
	0x073e 01854 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1144(SP)
	0x0746 01862 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+176(SP)
	0x0752 01874 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0752 01874 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0752 01874 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1144(SP), AX
	0x075a 01882 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x075c 01884 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x075f 01887 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0761 01889 (<unknown line number>)	NOP
	0x0761 01889 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0765 01893 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0769 01897 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0769 01897 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x076d 01901 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x076f 01903 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0774 01908 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x077c 01916 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+176(SP)
	0x0784 01924 ($GOROOT/src/math/rand/rand.go:299)	JMP	1926
	0x0786 01926 (pointer_vs_value/code/benchmark_invocation_test.go:241)	MOVQ	"".~R0+176(SP), AX
	0x078e 01934 (pointer_vs_value/code/benchmark_invocation_test.go:241)	MOVQ	AX, ""..autotmp_175+736(SP)
	0x0796 01942 (pointer_vs_value/code/benchmark_invocation_test.go:241)	MOVQ	AX, "".~R0+184(SP)
	0x079e 01950 (pointer_vs_value/code/benchmark_invocation_test.go:241)	JMP	1952
	0x07a0 01952 (pointer_vs_value/code/benchmark_invocation_test.go:242)	MOVQ	$0, "".~R0+168(SP)
	0x07ac 01964 (<unknown line number>)	NOP
	0x07ac 01964 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x07ac 01964 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x07b3 01971 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x07b3 01971 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $17
	0x07b3 01971 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1120(SP)
	0x07bb 01979 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+160(SP)
	0x07c7 01991 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x07c7 01991 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x07c7 01991 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1120(SP), AX
	0x07cf 01999 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x07d1 02001 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x07d4 02004 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x07d6 02006 (<unknown line number>)	NOP
	0x07d6 02006 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x07da 02010 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x07de 02014 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x07de 02014 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x07e2 02018 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x07e4 02020 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x07e9 02025 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x07f1 02033 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+160(SP)
	0x07f9 02041 ($GOROOT/src/math/rand/rand.go:299)	JMP	2043
	0x07fb 02043 (pointer_vs_value/code/benchmark_invocation_test.go:242)	MOVQ	"".~R0+160(SP), AX
	0x0803 02051 (pointer_vs_value/code/benchmark_invocation_test.go:242)	MOVQ	AX, ""..autotmp_176+728(SP)
	0x080b 02059 (pointer_vs_value/code/benchmark_invocation_test.go:242)	MOVQ	AX, "".~R0+168(SP)
	0x0813 02067 (pointer_vs_value/code/benchmark_invocation_test.go:242)	JMP	2069
	0x0815 02069 (pointer_vs_value/code/benchmark_invocation_test.go:243)	MOVQ	$0, "".~R0+152(SP)
	0x0821 02081 (<unknown line number>)	NOP
	0x0821 02081 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0821 02081 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0828 02088 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0828 02088 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $18
	0x0828 02088 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1096(SP)
	0x0830 02096 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+144(SP)
	0x083c 02108 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x083c 02108 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x083c 02108 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1096(SP), AX
	0x0844 02116 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0846 02118 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0849 02121 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x084b 02123 (<unknown line number>)	NOP
	0x084b 02123 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x084f 02127 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0853 02131 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0853 02131 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0857 02135 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0859 02137 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x085e 02142 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x0866 02150 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+144(SP)
	0x086e 02158 ($GOROOT/src/math/rand/rand.go:299)	JMP	2160
	0x0870 02160 (pointer_vs_value/code/benchmark_invocation_test.go:243)	MOVQ	"".~R0+144(SP), AX
	0x0878 02168 (pointer_vs_value/code/benchmark_invocation_test.go:243)	MOVQ	AX, ""..autotmp_177+720(SP)
	0x0880 02176 (pointer_vs_value/code/benchmark_invocation_test.go:243)	MOVQ	AX, "".~R0+152(SP)
	0x0888 02184 (pointer_vs_value/code/benchmark_invocation_test.go:243)	JMP	2186
	0x088a 02186 (pointer_vs_value/code/benchmark_invocation_test.go:244)	MOVQ	$0, "".~R0+32(SP)
	0x0893 02195 (<unknown line number>)	NOP
	0x0893 02195 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0893 02195 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x089a 02202 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x089a 02202 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $19
	0x089a 02202 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1232(SP)
	0x08a2 02210 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+128(SP)
	0x08ae 02222 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x08ae 02222 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x08ae 02222 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1232(SP), AX
	0x08b6 02230 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x08b8 02232 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x08bb 02235 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x08bd 02237 (<unknown line number>)	NOP
	0x08bd 02237 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x08c1 02241 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x08c5 02245 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x08c5 02245 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x08c9 02249 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x08cb 02251 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x08d0 02256 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x08d8 02264 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+128(SP)
	0x08e0 02272 ($GOROOT/src/math/rand/rand.go:299)	JMP	2274
	0x08e2 02274 (pointer_vs_value/code/benchmark_invocation_test.go:244)	MOVQ	"".~R0+128(SP), AX
	0x08ea 02282 (pointer_vs_value/code/benchmark_invocation_test.go:244)	MOVQ	AX, ""..autotmp_178+712(SP)
	0x08f2 02290 (pointer_vs_value/code/benchmark_invocation_test.go:244)	MOVQ	AX, "".~R0+32(SP)
	0x08f7 02295 (pointer_vs_value/code/benchmark_invocation_test.go:244)	JMP	2297
	0x08f9 02297 (pointer_vs_value/code/benchmark_invocation_test.go:245)	MOVQ	$0, "".~R0+104(SP)
	0x0902 02306 (<unknown line number>)	NOP
	0x0902 02306 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0902 02306 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0909 02313 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0909 02313 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $20
	0x0909 02313 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1176(SP)
	0x0911 02321 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+80(SP)
	0x091a 02330 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x091a 02330 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x091a 02330 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1176(SP), AX
	0x0922 02338 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0924 02340 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0927 02343 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0929 02345 (<unknown line number>)	NOP
	0x0929 02345 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x092d 02349 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0931 02353 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0931 02353 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0935 02357 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0937 02359 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x093c 02364 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x0944 02372 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+80(SP)
	0x0949 02377 ($GOROOT/src/math/rand/rand.go:299)	JMP	2379
	0x094b 02379 (pointer_vs_value/code/benchmark_invocation_test.go:245)	MOVQ	"".~R0+80(SP), AX
	0x0950 02384 (pointer_vs_value/code/benchmark_invocation_test.go:245)	MOVQ	AX, ""..autotmp_179+704(SP)
	0x0958 02392 (pointer_vs_value/code/benchmark_invocation_test.go:245)	MOVQ	AX, "".~R0+104(SP)
	0x095d 02397 (pointer_vs_value/code/benchmark_invocation_test.go:245)	JMP	2399
	0x095f 02399 (pointer_vs_value/code/benchmark_invocation_test.go:246)	MOVQ	$0, "".~R0+72(SP)
	0x0968 02408 (<unknown line number>)	NOP
	0x0968 02408 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0968 02408 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x096f 02415 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x096f 02415 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $21
	0x096f 02415 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1112(SP)
	0x0977 02423 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+56(SP)
	0x0980 02432 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0980 02432 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0980 02432 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1112(SP), AX
	0x0988 02440 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x098a 02442 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x098d 02445 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x098f 02447 (<unknown line number>)	NOP
	0x098f 02447 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0993 02451 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0997 02455 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0997 02455 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x099b 02459 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x099d 02461 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x09a2 02466 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x09aa 02474 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+56(SP)
	0x09af 02479 ($GOROOT/src/math/rand/rand.go:299)	JMP	2481
	0x09b1 02481 (pointer_vs_value/code/benchmark_invocation_test.go:246)	MOVQ	"".~R0+56(SP), AX
	0x09b6 02486 (pointer_vs_value/code/benchmark_invocation_test.go:246)	MOVQ	AX, ""..autotmp_180+696(SP)
	0x09be 02494 (pointer_vs_value/code/benchmark_invocation_test.go:246)	MOVQ	AX, "".~R0+72(SP)
	0x09c3 02499 (pointer_vs_value/code/benchmark_invocation_test.go:246)	JMP	2501
	0x09c5 02501 (pointer_vs_value/code/benchmark_invocation_test.go:247)	MOVQ	$0, "".~R0+208(SP)
	0x09d1 02513 (<unknown line number>)	NOP
	0x09d1 02513 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x09d1 02513 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x09d8 02520 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x09d8 02520 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $22
	0x09d8 02520 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1288(SP)
	0x09e0 02528 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+40(SP)
	0x09e9 02537 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x09e9 02537 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x09e9 02537 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1288(SP), AX
	0x09f1 02545 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x09f3 02547 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x09f6 02550 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x09f8 02552 (<unknown line number>)	NOP
	0x09f8 02552 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x09fc 02556 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0a00 02560 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0a00 02560 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0a04 02564 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0a06 02566 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0a0b 02571 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x0a13 02579 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+40(SP)
	0x0a18 02584 ($GOROOT/src/math/rand/rand.go:299)	JMP	2586
	0x0a1a 02586 (pointer_vs_value/code/benchmark_invocation_test.go:247)	MOVQ	"".~R0+40(SP), AX
	0x0a1f 02591 (pointer_vs_value/code/benchmark_invocation_test.go:247)	MOVQ	AX, ""..autotmp_181+688(SP)
	0x0a27 02599 (pointer_vs_value/code/benchmark_invocation_test.go:247)	MOVQ	AX, "".~R0+208(SP)
	0x0a2f 02607 (pointer_vs_value/code/benchmark_invocation_test.go:247)	JMP	2609
	0x0a31 02609 (pointer_vs_value/code/benchmark_invocation_test.go:248)	MOVQ	$0, "".~R0+48(SP)
	0x0a3a 02618 (<unknown line number>)	NOP
	0x0a3a 02618 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0a3a 02618 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0a41 02625 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0a41 02625 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $23
	0x0a41 02625 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1088(SP)
	0x0a49 02633 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+64(SP)
	0x0a52 02642 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0a52 02642 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0a52 02642 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1088(SP), AX
	0x0a5a 02650 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0a5c 02652 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0a5f 02655 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0a61 02657 (<unknown line number>)	NOP
	0x0a61 02657 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0a65 02661 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0a69 02665 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0a69 02665 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0a6d 02669 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0a6f 02671 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0a74 02676 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x0a7c 02684 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+64(SP)
	0x0a81 02689 ($GOROOT/src/math/rand/rand.go:299)	JMP	2691
	0x0a83 02691 (pointer_vs_value/code/benchmark_invocation_test.go:248)	MOVQ	"".~R0+64(SP), AX
	0x0a88 02696 (pointer_vs_value/code/benchmark_invocation_test.go:248)	MOVQ	AX, ""..autotmp_182+680(SP)
	0x0a90 02704 (pointer_vs_value/code/benchmark_invocation_test.go:248)	MOVQ	AX, "".~R0+48(SP)
	0x0a95 02709 (pointer_vs_value/code/benchmark_invocation_test.go:248)	JMP	2711
	0x0a97 02711 (pointer_vs_value/code/benchmark_invocation_test.go:249)	MOVQ	$0, "".~R0+312(SP)
	0x0aa3 02723 (<unknown line number>)	NOP
	0x0aa3 02723 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0aa3 02723 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0aaa 02730 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0aaa 02730 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $24
	0x0aaa 02730 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1136(SP)
	0x0ab2 02738 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+88(SP)
	0x0abb 02747 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0abb 02747 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0abb 02747 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1136(SP), AX
	0x0ac3 02755 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0ac5 02757 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0ac8 02760 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0aca 02762 (<unknown line number>)	NOP
	0x0aca 02762 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0ace 02766 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0ad2 02770 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0ad2 02770 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0ad6 02774 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0ad8 02776 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0add 02781 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x0ae5 02789 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+88(SP)
	0x0aea 02794 ($GOROOT/src/math/rand/rand.go:299)	JMP	2796
	0x0aec 02796 (pointer_vs_value/code/benchmark_invocation_test.go:249)	MOVQ	"".~R0+88(SP), AX
	0x0af1 02801 (pointer_vs_value/code/benchmark_invocation_test.go:249)	MOVQ	AX, ""..autotmp_183+672(SP)
	0x0af9 02809 (pointer_vs_value/code/benchmark_invocation_test.go:249)	MOVQ	AX, "".~R0+312(SP)
	0x0b01 02817 (pointer_vs_value/code/benchmark_invocation_test.go:249)	JMP	2819
	0x0b03 02819 (pointer_vs_value/code/benchmark_invocation_test.go:250)	MOVQ	$0, "".~R0+96(SP)
	0x0b0c 02828 (<unknown line number>)	NOP
	0x0b0c 02828 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0b0c 02828 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0b13 02835 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0b13 02835 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $25
	0x0b13 02835 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1184(SP)
	0x0b1b 02843 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+112(SP)
	0x0b24 02852 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0b24 02852 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0b24 02852 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1184(SP), AX
	0x0b2c 02860 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0b2e 02862 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0b31 02865 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0b33 02867 (<unknown line number>)	NOP
	0x0b33 02867 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0b37 02871 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0b3b 02875 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0b3b 02875 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0b3f 02879 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0b41 02881 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0b46 02886 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x0b4e 02894 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+112(SP)
	0x0b53 02899 ($GOROOT/src/math/rand/rand.go:299)	JMP	2901
	0x0b55 02901 (pointer_vs_value/code/benchmark_invocation_test.go:250)	MOVQ	"".~R0+112(SP), AX
	0x0b5a 02906 (pointer_vs_value/code/benchmark_invocation_test.go:250)	MOVQ	AX, ""..autotmp_184+664(SP)
	0x0b62 02914 (pointer_vs_value/code/benchmark_invocation_test.go:250)	MOVQ	AX, "".~R0+96(SP)
	0x0b67 02919 (pointer_vs_value/code/benchmark_invocation_test.go:250)	JMP	2921
	0x0b69 02921 (pointer_vs_value/code/benchmark_invocation_test.go:251)	MOVQ	$0, "".~R0+120(SP)
	0x0b72 02930 (<unknown line number>)	NOP
	0x0b72 02930 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0b72 02930 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0b79 02937 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0b79 02937 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $26
	0x0b79 02937 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1224(SP)
	0x0b81 02945 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+136(SP)
	0x0b8d 02957 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0b8d 02957 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0b8d 02957 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1224(SP), AX
	0x0b95 02965 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0b97 02967 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0b9a 02970 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0b9c 02972 (<unknown line number>)	NOP
	0x0b9c 02972 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0ba0 02976 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0ba4 02980 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0ba4 02980 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0ba8 02984 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0baa 02986 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0baf 02991 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_131+1080(SP)
	0x0bb7 02999 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+136(SP)
	0x0bbf 03007 ($GOROOT/src/math/rand/rand.go:299)	JMP	3009
	0x0bc1 03009 (pointer_vs_value/code/benchmark_invocation_test.go:251)	MOVQ	"".~R0+136(SP), AX
	0x0bc9 03017 (pointer_vs_value/code/benchmark_invocation_test.go:251)	MOVQ	AX, ""..autotmp_185+656(SP)
	0x0bd1 03025 (pointer_vs_value/code/benchmark_invocation_test.go:251)	MOVQ	AX, "".~R0+120(SP)
	0x0bd6 03030 (pointer_vs_value/code/benchmark_invocation_test.go:251)	JMP	3032
	0x0bd8 03032 (pointer_vs_value/code/benchmark_invocation_test.go:252)	CALL	math/rand.Float64(SB)
	0x0bdd 03037 (pointer_vs_value/code/benchmark_invocation_test.go:252)	MOVSD	(SP), X0
	0x0be2 03042 (pointer_vs_value/code/benchmark_invocation_test.go:252)	MOVSD	X0, ""..autotmp_132+1072(SP)
	0x0beb 03051 (pointer_vs_value/code/benchmark_invocation_test.go:253)	CALL	math/rand.Float64(SB)
	0x0bf0 03056 (pointer_vs_value/code/benchmark_invocation_test.go:253)	MOVSD	(SP), X0
	0x0bf5 03061 (pointer_vs_value/code/benchmark_invocation_test.go:253)	MOVSD	X0, ""..autotmp_133+1064(SP)
	0x0bfe 03070 (pointer_vs_value/code/benchmark_invocation_test.go:254)	CALL	math/rand.Float64(SB)
	0x0c03 03075 (pointer_vs_value/code/benchmark_invocation_test.go:254)	MOVSD	(SP), X0
	0x0c08 03080 (pointer_vs_value/code/benchmark_invocation_test.go:254)	MOVSD	X0, ""..autotmp_134+1056(SP)
	0x0c11 03089 (pointer_vs_value/code/benchmark_invocation_test.go:255)	CALL	math/rand.Float64(SB)
	0x0c16 03094 (pointer_vs_value/code/benchmark_invocation_test.go:255)	MOVSD	(SP), X0
	0x0c1b 03099 (pointer_vs_value/code/benchmark_invocation_test.go:255)	MOVSD	X0, ""..autotmp_135+1048(SP)
	0x0c24 03108 (pointer_vs_value/code/benchmark_invocation_test.go:256)	CALL	math/rand.Float64(SB)
	0x0c29 03113 (pointer_vs_value/code/benchmark_invocation_test.go:256)	MOVSD	(SP), X0
	0x0c2e 03118 (pointer_vs_value/code/benchmark_invocation_test.go:256)	MOVSD	X0, ""..autotmp_136+1040(SP)
	0x0c37 03127 (pointer_vs_value/code/benchmark_invocation_test.go:257)	CALL	math/rand.Float64(SB)
	0x0c3c 03132 (pointer_vs_value/code/benchmark_invocation_test.go:257)	MOVSD	(SP), X0
	0x0c41 03137 (pointer_vs_value/code/benchmark_invocation_test.go:257)	MOVSD	X0, ""..autotmp_137+1032(SP)
	0x0c4a 03146 (pointer_vs_value/code/benchmark_invocation_test.go:258)	CALL	math/rand.Float64(SB)
	0x0c4f 03151 (pointer_vs_value/code/benchmark_invocation_test.go:258)	MOVSD	(SP), X0
	0x0c54 03156 (pointer_vs_value/code/benchmark_invocation_test.go:258)	MOVSD	X0, ""..autotmp_138+1024(SP)
	0x0c5d 03165 (pointer_vs_value/code/benchmark_invocation_test.go:259)	CALL	math/rand.Float64(SB)
	0x0c62 03170 (pointer_vs_value/code/benchmark_invocation_test.go:259)	MOVSD	(SP), X0
	0x0c67 03175 (pointer_vs_value/code/benchmark_invocation_test.go:259)	MOVSD	X0, ""..autotmp_139+1016(SP)
	0x0c70 03184 (pointer_vs_value/code/benchmark_invocation_test.go:260)	CALL	math/rand.Float64(SB)
	0x0c75 03189 (pointer_vs_value/code/benchmark_invocation_test.go:260)	MOVSD	(SP), X0
	0x0c7a 03194 (pointer_vs_value/code/benchmark_invocation_test.go:260)	MOVSD	X0, ""..autotmp_140+1008(SP)
	0x0c83 03203 (pointer_vs_value/code/benchmark_invocation_test.go:261)	CALL	math/rand.Float64(SB)
	0x0c88 03208 (pointer_vs_value/code/benchmark_invocation_test.go:261)	MOVSD	(SP), X0
	0x0c8d 03213 (pointer_vs_value/code/benchmark_invocation_test.go:261)	MOVSD	X0, ""..autotmp_141+1000(SP)
	0x0c96 03222 (pointer_vs_value/code/benchmark_invocation_test.go:262)	CALL	math/rand.Float64(SB)
	0x0c9b 03227 (pointer_vs_value/code/benchmark_invocation_test.go:262)	MOVSD	(SP), X0
	0x0ca0 03232 (pointer_vs_value/code/benchmark_invocation_test.go:262)	MOVSD	X0, ""..autotmp_142+992(SP)
	0x0ca9 03241 (pointer_vs_value/code/benchmark_invocation_test.go:263)	CALL	math/rand.Float64(SB)
	0x0cae 03246 (pointer_vs_value/code/benchmark_invocation_test.go:263)	MOVSD	(SP), X0
	0x0cb3 03251 (pointer_vs_value/code/benchmark_invocation_test.go:263)	MOVSD	X0, ""..autotmp_143+984(SP)
	0x0cbc 03260 (pointer_vs_value/code/benchmark_invocation_test.go:264)	CALL	math/rand.Float64(SB)
	0x0cc1 03265 (pointer_vs_value/code/benchmark_invocation_test.go:264)	MOVSD	(SP), X0
	0x0cc6 03270 (pointer_vs_value/code/benchmark_invocation_test.go:264)	MOVSD	X0, ""..autotmp_144+976(SP)
	0x0ccf 03279 (pointer_vs_value/code/benchmark_invocation_test.go:265)	CALL	math/rand.Float64(SB)
	0x0cd4 03284 (pointer_vs_value/code/benchmark_invocation_test.go:265)	MOVSD	(SP), X0
	0x0cd9 03289 (pointer_vs_value/code/benchmark_invocation_test.go:265)	MOVSD	X0, ""..autotmp_145+968(SP)
	0x0ce2 03298 (pointer_vs_value/code/benchmark_invocation_test.go:266)	CALL	math/rand.Float64(SB)
	0x0ce7 03303 (pointer_vs_value/code/benchmark_invocation_test.go:266)	MOVSD	(SP), X0
	0x0cec 03308 (pointer_vs_value/code/benchmark_invocation_test.go:266)	MOVSD	X0, ""..autotmp_146+960(SP)
	0x0cf5 03317 (pointer_vs_value/code/benchmark_invocation_test.go:267)	CALL	math/rand.Float64(SB)
	0x0cfa 03322 (pointer_vs_value/code/benchmark_invocation_test.go:267)	MOVSD	(SP), X0
	0x0cff 03327 (pointer_vs_value/code/benchmark_invocation_test.go:267)	MOVSD	X0, ""..autotmp_147+952(SP)
	0x0d08 03336 (pointer_vs_value/code/benchmark_invocation_test.go:268)	CALL	math/rand.Float64(SB)
	0x0d0d 03341 (pointer_vs_value/code/benchmark_invocation_test.go:268)	MOVSD	(SP), X0
	0x0d12 03346 (pointer_vs_value/code/benchmark_invocation_test.go:268)	MOVSD	X0, ""..autotmp_148+944(SP)
	0x0d1b 03355 (pointer_vs_value/code/benchmark_invocation_test.go:269)	CALL	math/rand.Float64(SB)
	0x0d20 03360 (pointer_vs_value/code/benchmark_invocation_test.go:269)	MOVSD	(SP), X0
	0x0d25 03365 (pointer_vs_value/code/benchmark_invocation_test.go:269)	MOVSD	X0, ""..autotmp_149+936(SP)
	0x0d2e 03374 (pointer_vs_value/code/benchmark_invocation_test.go:270)	CALL	math/rand.Float64(SB)
	0x0d33 03379 (pointer_vs_value/code/benchmark_invocation_test.go:270)	MOVSD	(SP), X0
	0x0d38 03384 (pointer_vs_value/code/benchmark_invocation_test.go:270)	MOVSD	X0, ""..autotmp_150+928(SP)
	0x0d41 03393 (pointer_vs_value/code/benchmark_invocation_test.go:271)	CALL	math/rand.Float64(SB)
	0x0d46 03398 (pointer_vs_value/code/benchmark_invocation_test.go:271)	MOVSD	(SP), X0
	0x0d4b 03403 (pointer_vs_value/code/benchmark_invocation_test.go:271)	MOVSD	X0, ""..autotmp_151+920(SP)
	0x0d54 03412 (pointer_vs_value/code/benchmark_invocation_test.go:272)	CALL	math/rand.Float64(SB)
	0x0d59 03417 (pointer_vs_value/code/benchmark_invocation_test.go:272)	MOVSD	(SP), X0
	0x0d5e 03422 (pointer_vs_value/code/benchmark_invocation_test.go:272)	MOVSD	X0, ""..autotmp_152+912(SP)
	0x0d67 03431 (pointer_vs_value/code/benchmark_invocation_test.go:273)	CALL	math/rand.Float64(SB)
	0x0d6c 03436 (pointer_vs_value/code/benchmark_invocation_test.go:273)	MOVSD	(SP), X0
	0x0d71 03441 (pointer_vs_value/code/benchmark_invocation_test.go:273)	MOVSD	X0, ""..autotmp_153+904(SP)
	0x0d7a 03450 (pointer_vs_value/code/benchmark_invocation_test.go:274)	CALL	math/rand.Float64(SB)
	0x0d7f 03455 (pointer_vs_value/code/benchmark_invocation_test.go:274)	MOVSD	(SP), X0
	0x0d84 03460 (pointer_vs_value/code/benchmark_invocation_test.go:274)	MOVSD	X0, ""..autotmp_154+896(SP)
	0x0d8d 03469 (pointer_vs_value/code/benchmark_invocation_test.go:275)	CALL	math/rand.Float64(SB)
	0x0d92 03474 (pointer_vs_value/code/benchmark_invocation_test.go:275)	MOVSD	(SP), X0
	0x0d97 03479 (pointer_vs_value/code/benchmark_invocation_test.go:275)	MOVSD	X0, ""..autotmp_155+888(SP)
	0x0da0 03488 (pointer_vs_value/code/benchmark_invocation_test.go:276)	CALL	math/rand.Float64(SB)
	0x0da5 03493 (pointer_vs_value/code/benchmark_invocation_test.go:276)	MOVSD	(SP), X0
	0x0daa 03498 (pointer_vs_value/code/benchmark_invocation_test.go:276)	MOVSD	X0, ""..autotmp_156+880(SP)
	0x0db3 03507 (pointer_vs_value/code/benchmark_invocation_test.go:277)	CALL	math/rand.Float64(SB)
	0x0db8 03512 (pointer_vs_value/code/benchmark_invocation_test.go:277)	MOVSD	(SP), X0
	0x0dbd 03517 (pointer_vs_value/code/benchmark_invocation_test.go:277)	MOVSD	X0, ""..autotmp_157+872(SP)
	0x0dc6 03526 (pointer_vs_value/code/benchmark_invocation_test.go:278)	CALL	math/rand.Int(SB)
	0x0dcb 03531 (pointer_vs_value/code/benchmark_invocation_test.go:278)	MOVQ	(SP), AX
	0x0dcf 03535 (pointer_vs_value/code/benchmark_invocation_test.go:278)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x0dd7 03543 (pointer_vs_value/code/benchmark_invocation_test.go:278)	MOVQ	AX, strconv.i+464(SP)
	0x0ddf 03551 (pointer_vs_value/code/benchmark_invocation_test.go:278)	XORPS	X0, X0
	0x0de2 03554 (pointer_vs_value/code/benchmark_invocation_test.go:278)	MOVUPS	X0, "".~R0+1504(SP)
	0x0dea 03562 (<unknown line number>)	NOP
	0x0dea 03562 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+464(SP), AX
	0x0df2 03570 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x0df6 03574 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x0dff 03583 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x0e04 03588 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x0e09 03593 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x0e09 03593 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x0e0e 03598 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x0e16 03606 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x0e1e 03614 (pointer_vs_value/code/benchmark_invocation_test.go:278)	PCDATA	$0, $0
	0x0e1e 03614 (pointer_vs_value/code/benchmark_invocation_test.go:278)	PCDATA	$1, $27
	0x0e1e 03614 (pointer_vs_value/code/benchmark_invocation_test.go:278)	MOVQ	CX, "".~R0+1504(SP)
	0x0e26 03622 (pointer_vs_value/code/benchmark_invocation_test.go:278)	MOVQ	AX, "".~R0+1512(SP)
	0x0e2e 03630 (pointer_vs_value/code/benchmark_invocation_test.go:278)	JMP	3632
	0x0e30 03632 (pointer_vs_value/code/benchmark_invocation_test.go:279)	CALL	math/rand.Int(SB)
	0x0e35 03637 (pointer_vs_value/code/benchmark_invocation_test.go:279)	MOVQ	(SP), AX
	0x0e39 03641 (pointer_vs_value/code/benchmark_invocation_test.go:279)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x0e41 03649 (pointer_vs_value/code/benchmark_invocation_test.go:279)	MOVQ	AX, strconv.i+480(SP)
	0x0e49 03657 (pointer_vs_value/code/benchmark_invocation_test.go:279)	XORPS	X0, X0
	0x0e4c 03660 (pointer_vs_value/code/benchmark_invocation_test.go:279)	MOVUPS	X0, "".~R0+1488(SP)
	0x0e54 03668 (<unknown line number>)	NOP
	0x0e54 03668 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+480(SP), AX
	0x0e5c 03676 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x0e60 03680 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x0e69 03689 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x0e6e 03694 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x0e73 03699 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x0e73 03699 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x0e78 03704 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x0e80 03712 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x0e88 03720 (pointer_vs_value/code/benchmark_invocation_test.go:279)	PCDATA	$0, $0
	0x0e88 03720 (pointer_vs_value/code/benchmark_invocation_test.go:279)	PCDATA	$1, $28
	0x0e88 03720 (pointer_vs_value/code/benchmark_invocation_test.go:279)	MOVQ	CX, "".~R0+1488(SP)
	0x0e90 03728 (pointer_vs_value/code/benchmark_invocation_test.go:279)	MOVQ	AX, "".~R0+1496(SP)
	0x0e98 03736 (pointer_vs_value/code/benchmark_invocation_test.go:279)	JMP	3738
	0x0e9a 03738 (pointer_vs_value/code/benchmark_invocation_test.go:280)	CALL	math/rand.Int(SB)
	0x0e9f 03743 (pointer_vs_value/code/benchmark_invocation_test.go:280)	MOVQ	(SP), AX
	0x0ea3 03747 (pointer_vs_value/code/benchmark_invocation_test.go:280)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x0eab 03755 (pointer_vs_value/code/benchmark_invocation_test.go:280)	MOVQ	AX, strconv.i+496(SP)
	0x0eb3 03763 (pointer_vs_value/code/benchmark_invocation_test.go:280)	XORPS	X0, X0
	0x0eb6 03766 (pointer_vs_value/code/benchmark_invocation_test.go:280)	MOVUPS	X0, "".~R0+1376(SP)
	0x0ebe 03774 (<unknown line number>)	NOP
	0x0ebe 03774 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+496(SP), AX
	0x0ec6 03782 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x0eca 03786 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x0ed3 03795 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x0ed8 03800 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x0edd 03805 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x0edd 03805 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x0ee2 03810 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x0eea 03818 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x0ef2 03826 (pointer_vs_value/code/benchmark_invocation_test.go:280)	PCDATA	$0, $0
	0x0ef2 03826 (pointer_vs_value/code/benchmark_invocation_test.go:280)	PCDATA	$1, $29
	0x0ef2 03826 (pointer_vs_value/code/benchmark_invocation_test.go:280)	MOVQ	CX, "".~R0+1376(SP)
	0x0efa 03834 (pointer_vs_value/code/benchmark_invocation_test.go:280)	MOVQ	AX, "".~R0+1384(SP)
	0x0f02 03842 (pointer_vs_value/code/benchmark_invocation_test.go:280)	JMP	3844
	0x0f04 03844 (pointer_vs_value/code/benchmark_invocation_test.go:281)	CALL	math/rand.Int(SB)
	0x0f09 03849 (pointer_vs_value/code/benchmark_invocation_test.go:281)	MOVQ	(SP), AX
	0x0f0d 03853 (pointer_vs_value/code/benchmark_invocation_test.go:281)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x0f15 03861 (pointer_vs_value/code/benchmark_invocation_test.go:281)	MOVQ	AX, strconv.i+512(SP)
	0x0f1d 03869 (pointer_vs_value/code/benchmark_invocation_test.go:281)	XORPS	X0, X0
	0x0f20 03872 (pointer_vs_value/code/benchmark_invocation_test.go:281)	MOVUPS	X0, "".~R0+1680(SP)
	0x0f28 03880 (<unknown line number>)	NOP
	0x0f28 03880 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+512(SP), AX
	0x0f30 03888 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x0f34 03892 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x0f3d 03901 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x0f42 03906 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x0f47 03911 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x0f47 03911 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x0f4c 03916 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x0f54 03924 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x0f5c 03932 (pointer_vs_value/code/benchmark_invocation_test.go:281)	PCDATA	$0, $0
	0x0f5c 03932 (pointer_vs_value/code/benchmark_invocation_test.go:281)	PCDATA	$1, $30
	0x0f5c 03932 (pointer_vs_value/code/benchmark_invocation_test.go:281)	MOVQ	CX, "".~R0+1680(SP)
	0x0f64 03940 (pointer_vs_value/code/benchmark_invocation_test.go:281)	MOVQ	AX, "".~R0+1688(SP)
	0x0f6c 03948 (pointer_vs_value/code/benchmark_invocation_test.go:281)	JMP	3950
	0x0f6e 03950 (pointer_vs_value/code/benchmark_invocation_test.go:282)	CALL	math/rand.Int(SB)
	0x0f73 03955 (pointer_vs_value/code/benchmark_invocation_test.go:282)	MOVQ	(SP), AX
	0x0f77 03959 (pointer_vs_value/code/benchmark_invocation_test.go:282)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x0f7f 03967 (pointer_vs_value/code/benchmark_invocation_test.go:282)	MOVQ	AX, strconv.i+520(SP)
	0x0f87 03975 (pointer_vs_value/code/benchmark_invocation_test.go:282)	XORPS	X0, X0
	0x0f8a 03978 (pointer_vs_value/code/benchmark_invocation_test.go:282)	MOVUPS	X0, "".~R0+1664(SP)
	0x0f92 03986 (<unknown line number>)	NOP
	0x0f92 03986 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+520(SP), AX
	0x0f9a 03994 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x0f9e 03998 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x0fa7 04007 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x0fac 04012 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x0fb1 04017 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x0fb1 04017 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x0fb6 04022 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x0fbe 04030 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x0fc6 04038 (pointer_vs_value/code/benchmark_invocation_test.go:282)	PCDATA	$0, $0
	0x0fc6 04038 (pointer_vs_value/code/benchmark_invocation_test.go:282)	PCDATA	$1, $31
	0x0fc6 04038 (pointer_vs_value/code/benchmark_invocation_test.go:282)	MOVQ	CX, "".~R0+1664(SP)
	0x0fce 04046 (pointer_vs_value/code/benchmark_invocation_test.go:282)	MOVQ	AX, "".~R0+1672(SP)
	0x0fd6 04054 (pointer_vs_value/code/benchmark_invocation_test.go:282)	JMP	4056
	0x0fd8 04056 (pointer_vs_value/code/benchmark_invocation_test.go:283)	CALL	math/rand.Int(SB)
	0x0fdd 04061 (pointer_vs_value/code/benchmark_invocation_test.go:283)	MOVQ	(SP), AX
	0x0fe1 04065 (pointer_vs_value/code/benchmark_invocation_test.go:283)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x0fe9 04073 (pointer_vs_value/code/benchmark_invocation_test.go:283)	MOVQ	AX, strconv.i+528(SP)
	0x0ff1 04081 (pointer_vs_value/code/benchmark_invocation_test.go:283)	XORPS	X0, X0
	0x0ff4 04084 (pointer_vs_value/code/benchmark_invocation_test.go:283)	MOVUPS	X0, "".~R0+1632(SP)
	0x0ffc 04092 (<unknown line number>)	NOP
	0x0ffc 04092 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+528(SP), AX
	0x1004 04100 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x1008 04104 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x1011 04113 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x1016 04118 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x101b 04123 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x101b 04123 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x1020 04128 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x1028 04136 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x1030 04144 (pointer_vs_value/code/benchmark_invocation_test.go:283)	PCDATA	$0, $0
	0x1030 04144 (pointer_vs_value/code/benchmark_invocation_test.go:283)	PCDATA	$1, $32
	0x1030 04144 (pointer_vs_value/code/benchmark_invocation_test.go:283)	MOVQ	CX, "".~R0+1632(SP)
	0x1038 04152 (pointer_vs_value/code/benchmark_invocation_test.go:283)	MOVQ	AX, "".~R0+1640(SP)
	0x1040 04160 (pointer_vs_value/code/benchmark_invocation_test.go:283)	JMP	4162
	0x1042 04162 (pointer_vs_value/code/benchmark_invocation_test.go:284)	CALL	math/rand.Int(SB)
	0x1047 04167 (pointer_vs_value/code/benchmark_invocation_test.go:284)	MOVQ	(SP), AX
	0x104b 04171 (pointer_vs_value/code/benchmark_invocation_test.go:284)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x1053 04179 (pointer_vs_value/code/benchmark_invocation_test.go:284)	MOVQ	AX, strconv.i+544(SP)
	0x105b 04187 (pointer_vs_value/code/benchmark_invocation_test.go:284)	XORPS	X0, X0
	0x105e 04190 (pointer_vs_value/code/benchmark_invocation_test.go:284)	MOVUPS	X0, "".~R0+1616(SP)
	0x1066 04198 (<unknown line number>)	NOP
	0x1066 04198 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+544(SP), AX
	0x106e 04206 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x1072 04210 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x107b 04219 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x1080 04224 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x1085 04229 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x1085 04229 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x108a 04234 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x1092 04242 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x109a 04250 (pointer_vs_value/code/benchmark_invocation_test.go:284)	PCDATA	$0, $0
	0x109a 04250 (pointer_vs_value/code/benchmark_invocation_test.go:284)	PCDATA	$1, $33
	0x109a 04250 (pointer_vs_value/code/benchmark_invocation_test.go:284)	MOVQ	CX, "".~R0+1616(SP)
	0x10a2 04258 (pointer_vs_value/code/benchmark_invocation_test.go:284)	MOVQ	AX, "".~R0+1624(SP)
	0x10aa 04266 (pointer_vs_value/code/benchmark_invocation_test.go:284)	JMP	4268
	0x10ac 04268 (pointer_vs_value/code/benchmark_invocation_test.go:285)	CALL	math/rand.Int(SB)
	0x10b1 04273 (pointer_vs_value/code/benchmark_invocation_test.go:285)	MOVQ	(SP), AX
	0x10b5 04277 (pointer_vs_value/code/benchmark_invocation_test.go:285)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x10bd 04285 (pointer_vs_value/code/benchmark_invocation_test.go:285)	MOVQ	AX, strconv.i+624(SP)
	0x10c5 04293 (pointer_vs_value/code/benchmark_invocation_test.go:285)	XORPS	X0, X0
	0x10c8 04296 (pointer_vs_value/code/benchmark_invocation_test.go:285)	MOVUPS	X0, "".~R0+1600(SP)
	0x10d0 04304 (<unknown line number>)	NOP
	0x10d0 04304 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+624(SP), AX
	0x10d8 04312 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x10dc 04316 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x10e5 04325 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x10ea 04330 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x10ef 04335 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x10ef 04335 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x10f4 04340 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x10fc 04348 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x1104 04356 (pointer_vs_value/code/benchmark_invocation_test.go:285)	PCDATA	$0, $0
	0x1104 04356 (pointer_vs_value/code/benchmark_invocation_test.go:285)	PCDATA	$1, $34
	0x1104 04356 (pointer_vs_value/code/benchmark_invocation_test.go:285)	MOVQ	CX, "".~R0+1600(SP)
	0x110c 04364 (pointer_vs_value/code/benchmark_invocation_test.go:285)	MOVQ	AX, "".~R0+1608(SP)
	0x1114 04372 (pointer_vs_value/code/benchmark_invocation_test.go:285)	JMP	4374
	0x1116 04374 (pointer_vs_value/code/benchmark_invocation_test.go:286)	CALL	math/rand.Int(SB)
	0x111b 04379 (pointer_vs_value/code/benchmark_invocation_test.go:286)	MOVQ	(SP), AX
	0x111f 04383 (pointer_vs_value/code/benchmark_invocation_test.go:286)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x1127 04391 (pointer_vs_value/code/benchmark_invocation_test.go:286)	MOVQ	AX, strconv.i+472(SP)
	0x112f 04399 (pointer_vs_value/code/benchmark_invocation_test.go:286)	XORPS	X0, X0
	0x1132 04402 (pointer_vs_value/code/benchmark_invocation_test.go:286)	MOVUPS	X0, "".~R0+1584(SP)
	0x113a 04410 (<unknown line number>)	NOP
	0x113a 04410 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+472(SP), AX
	0x1142 04418 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x1146 04422 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x114f 04431 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x1154 04436 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x1159 04441 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x1159 04441 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x115e 04446 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x1166 04454 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x116e 04462 (pointer_vs_value/code/benchmark_invocation_test.go:286)	PCDATA	$0, $0
	0x116e 04462 (pointer_vs_value/code/benchmark_invocation_test.go:286)	PCDATA	$1, $35
	0x116e 04462 (pointer_vs_value/code/benchmark_invocation_test.go:286)	MOVQ	CX, "".~R0+1584(SP)
	0x1176 04470 (pointer_vs_value/code/benchmark_invocation_test.go:286)	MOVQ	AX, "".~R0+1592(SP)
	0x117e 04478 (pointer_vs_value/code/benchmark_invocation_test.go:286)	JMP	4480
	0x1180 04480 (pointer_vs_value/code/benchmark_invocation_test.go:287)	CALL	math/rand.Int(SB)
	0x1185 04485 (pointer_vs_value/code/benchmark_invocation_test.go:287)	MOVQ	(SP), AX
	0x1189 04489 (pointer_vs_value/code/benchmark_invocation_test.go:287)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x1191 04497 (pointer_vs_value/code/benchmark_invocation_test.go:287)	MOVQ	AX, strconv.i+560(SP)
	0x1199 04505 (pointer_vs_value/code/benchmark_invocation_test.go:287)	XORPS	X0, X0
	0x119c 04508 (pointer_vs_value/code/benchmark_invocation_test.go:287)	MOVUPS	X0, "".~R0+1424(SP)
	0x11a4 04516 (<unknown line number>)	NOP
	0x11a4 04516 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+560(SP), AX
	0x11ac 04524 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x11b0 04528 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x11b9 04537 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x11be 04542 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x11c3 04547 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x11c3 04547 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x11c8 04552 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x11d0 04560 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x11d8 04568 (pointer_vs_value/code/benchmark_invocation_test.go:287)	PCDATA	$0, $0
	0x11d8 04568 (pointer_vs_value/code/benchmark_invocation_test.go:287)	PCDATA	$1, $36
	0x11d8 04568 (pointer_vs_value/code/benchmark_invocation_test.go:287)	MOVQ	CX, "".~R0+1424(SP)
	0x11e0 04576 (pointer_vs_value/code/benchmark_invocation_test.go:287)	MOVQ	AX, "".~R0+1432(SP)
	0x11e8 04584 (pointer_vs_value/code/benchmark_invocation_test.go:287)	JMP	4586
	0x11ea 04586 (pointer_vs_value/code/benchmark_invocation_test.go:288)	CALL	math/rand.Int(SB)
	0x11ef 04591 (pointer_vs_value/code/benchmark_invocation_test.go:288)	MOVQ	(SP), AX
	0x11f3 04595 (pointer_vs_value/code/benchmark_invocation_test.go:288)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x11fb 04603 (pointer_vs_value/code/benchmark_invocation_test.go:288)	MOVQ	AX, strconv.i+648(SP)
	0x1203 04611 (pointer_vs_value/code/benchmark_invocation_test.go:288)	XORPS	X0, X0
	0x1206 04614 (pointer_vs_value/code/benchmark_invocation_test.go:288)	MOVUPS	X0, "".~R0+1568(SP)
	0x120e 04622 (<unknown line number>)	NOP
	0x120e 04622 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+648(SP), AX
	0x1216 04630 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x121a 04634 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x1223 04643 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x1228 04648 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x122d 04653 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x122d 04653 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x1232 04658 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x123a 04666 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x1242 04674 (pointer_vs_value/code/benchmark_invocation_test.go:288)	PCDATA	$0, $0
	0x1242 04674 (pointer_vs_value/code/benchmark_invocation_test.go:288)	PCDATA	$1, $37
	0x1242 04674 (pointer_vs_value/code/benchmark_invocation_test.go:288)	MOVQ	CX, "".~R0+1568(SP)
	0x124a 04682 (pointer_vs_value/code/benchmark_invocation_test.go:288)	MOVQ	AX, "".~R0+1576(SP)
	0x1252 04690 (pointer_vs_value/code/benchmark_invocation_test.go:288)	JMP	4692
	0x1254 04692 (pointer_vs_value/code/benchmark_invocation_test.go:289)	CALL	math/rand.Int(SB)
	0x1259 04697 (pointer_vs_value/code/benchmark_invocation_test.go:289)	MOVQ	(SP), AX
	0x125d 04701 (pointer_vs_value/code/benchmark_invocation_test.go:289)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x1265 04709 (pointer_vs_value/code/benchmark_invocation_test.go:289)	MOVQ	AX, strconv.i+576(SP)
	0x126d 04717 (pointer_vs_value/code/benchmark_invocation_test.go:289)	XORPS	X0, X0
	0x1270 04720 (pointer_vs_value/code/benchmark_invocation_test.go:289)	MOVUPS	X0, "".~R0+1552(SP)
	0x1278 04728 (<unknown line number>)	NOP
	0x1278 04728 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+576(SP), AX
	0x1280 04736 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x1284 04740 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x128d 04749 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x1292 04754 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x1297 04759 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x1297 04759 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x129c 04764 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x12a4 04772 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x12ac 04780 (pointer_vs_value/code/benchmark_invocation_test.go:289)	PCDATA	$0, $0
	0x12ac 04780 (pointer_vs_value/code/benchmark_invocation_test.go:289)	PCDATA	$1, $38
	0x12ac 04780 (pointer_vs_value/code/benchmark_invocation_test.go:289)	MOVQ	CX, "".~R0+1552(SP)
	0x12b4 04788 (pointer_vs_value/code/benchmark_invocation_test.go:289)	MOVQ	AX, "".~R0+1560(SP)
	0x12bc 04796 (pointer_vs_value/code/benchmark_invocation_test.go:289)	JMP	4798
	0x12be 04798 (pointer_vs_value/code/benchmark_invocation_test.go:290)	CALL	math/rand.Int(SB)
	0x12c3 04803 (pointer_vs_value/code/benchmark_invocation_test.go:290)	MOVQ	(SP), AX
	0x12c7 04807 (pointer_vs_value/code/benchmark_invocation_test.go:290)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x12cf 04815 (pointer_vs_value/code/benchmark_invocation_test.go:290)	MOVQ	AX, strconv.i+592(SP)
	0x12d7 04823 (pointer_vs_value/code/benchmark_invocation_test.go:290)	XORPS	X0, X0
	0x12da 04826 (pointer_vs_value/code/benchmark_invocation_test.go:290)	MOVUPS	X0, "".~R0+1536(SP)
	0x12e2 04834 (<unknown line number>)	NOP
	0x12e2 04834 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+592(SP), AX
	0x12ea 04842 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x12ee 04846 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x12f7 04855 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x12fc 04860 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x1301 04865 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x1301 04865 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x1306 04870 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x130e 04878 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x1316 04886 (pointer_vs_value/code/benchmark_invocation_test.go:290)	PCDATA	$0, $0
	0x1316 04886 (pointer_vs_value/code/benchmark_invocation_test.go:290)	PCDATA	$1, $39
	0x1316 04886 (pointer_vs_value/code/benchmark_invocation_test.go:290)	MOVQ	CX, "".~R0+1536(SP)
	0x131e 04894 (pointer_vs_value/code/benchmark_invocation_test.go:290)	MOVQ	AX, "".~R0+1544(SP)
	0x1326 04902 (pointer_vs_value/code/benchmark_invocation_test.go:290)	JMP	4904
	0x1328 04904 (pointer_vs_value/code/benchmark_invocation_test.go:291)	CALL	math/rand.Int(SB)
	0x132d 04909 (pointer_vs_value/code/benchmark_invocation_test.go:291)	MOVQ	(SP), AX
	0x1331 04913 (pointer_vs_value/code/benchmark_invocation_test.go:291)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x1339 04921 (pointer_vs_value/code/benchmark_invocation_test.go:291)	MOVQ	AX, strconv.i+608(SP)
	0x1341 04929 (pointer_vs_value/code/benchmark_invocation_test.go:291)	XORPS	X0, X0
	0x1344 04932 (pointer_vs_value/code/benchmark_invocation_test.go:291)	MOVUPS	X0, "".~R0+1520(SP)
	0x134c 04940 (<unknown line number>)	NOP
	0x134c 04940 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+608(SP), AX
	0x1354 04948 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x1358 04952 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x1361 04961 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x1366 04966 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x136b 04971 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x136b 04971 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x1370 04976 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x1378 04984 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x1380 04992 (pointer_vs_value/code/benchmark_invocation_test.go:291)	PCDATA	$0, $0
	0x1380 04992 (pointer_vs_value/code/benchmark_invocation_test.go:291)	PCDATA	$1, $40
	0x1380 04992 (pointer_vs_value/code/benchmark_invocation_test.go:291)	MOVQ	CX, "".~R0+1520(SP)
	0x1388 05000 (pointer_vs_value/code/benchmark_invocation_test.go:291)	MOVQ	AX, "".~R0+1528(SP)
	0x1390 05008 (pointer_vs_value/code/benchmark_invocation_test.go:291)	JMP	5010
	0x1392 05010 (pointer_vs_value/code/benchmark_invocation_test.go:292)	CALL	math/rand.Int(SB)
	0x1397 05015 (pointer_vs_value/code/benchmark_invocation_test.go:292)	MOVQ	(SP), AX
	0x139b 05019 (pointer_vs_value/code/benchmark_invocation_test.go:292)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x13a3 05027 (pointer_vs_value/code/benchmark_invocation_test.go:292)	MOVQ	AX, strconv.i+632(SP)
	0x13ab 05035 (pointer_vs_value/code/benchmark_invocation_test.go:292)	XORPS	X0, X0
	0x13ae 05038 (pointer_vs_value/code/benchmark_invocation_test.go:292)	MOVUPS	X0, "".~R0+1472(SP)
	0x13b6 05046 (<unknown line number>)	NOP
	0x13b6 05046 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+632(SP), AX
	0x13be 05054 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x13c2 05058 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x13cb 05067 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x13d0 05072 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x13d5 05077 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x13d5 05077 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x13da 05082 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x13e2 05090 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x13ea 05098 (pointer_vs_value/code/benchmark_invocation_test.go:292)	PCDATA	$0, $0
	0x13ea 05098 (pointer_vs_value/code/benchmark_invocation_test.go:292)	PCDATA	$1, $41
	0x13ea 05098 (pointer_vs_value/code/benchmark_invocation_test.go:292)	MOVQ	CX, "".~R0+1472(SP)
	0x13f2 05106 (pointer_vs_value/code/benchmark_invocation_test.go:292)	MOVQ	AX, "".~R0+1480(SP)
	0x13fa 05114 (pointer_vs_value/code/benchmark_invocation_test.go:292)	JMP	5116
	0x13fc 05116 (pointer_vs_value/code/benchmark_invocation_test.go:293)	CALL	math/rand.Int(SB)
	0x1401 05121 (pointer_vs_value/code/benchmark_invocation_test.go:293)	MOVQ	(SP), AX
	0x1405 05125 (pointer_vs_value/code/benchmark_invocation_test.go:293)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x140d 05133 (pointer_vs_value/code/benchmark_invocation_test.go:293)	MOVQ	AX, strconv.i+640(SP)
	0x1415 05141 (pointer_vs_value/code/benchmark_invocation_test.go:293)	XORPS	X0, X0
	0x1418 05144 (pointer_vs_value/code/benchmark_invocation_test.go:293)	MOVUPS	X0, "".~R0+1328(SP)
	0x1420 05152 (<unknown line number>)	NOP
	0x1420 05152 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+640(SP), AX
	0x1428 05160 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x142c 05164 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x1435 05173 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x143a 05178 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x143f 05183 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x143f 05183 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x1444 05188 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x144c 05196 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x1454 05204 (pointer_vs_value/code/benchmark_invocation_test.go:293)	PCDATA	$0, $0
	0x1454 05204 (pointer_vs_value/code/benchmark_invocation_test.go:293)	PCDATA	$1, $42
	0x1454 05204 (pointer_vs_value/code/benchmark_invocation_test.go:293)	MOVQ	CX, "".~R0+1328(SP)
	0x145c 05212 (pointer_vs_value/code/benchmark_invocation_test.go:293)	MOVQ	AX, "".~R0+1336(SP)
	0x1464 05220 (pointer_vs_value/code/benchmark_invocation_test.go:293)	JMP	5222
	0x1466 05222 (pointer_vs_value/code/benchmark_invocation_test.go:294)	CALL	math/rand.Int(SB)
	0x146b 05227 (pointer_vs_value/code/benchmark_invocation_test.go:294)	MOVQ	(SP), AX
	0x146f 05231 (pointer_vs_value/code/benchmark_invocation_test.go:294)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x1477 05239 (pointer_vs_value/code/benchmark_invocation_test.go:294)	MOVQ	AX, strconv.i+448(SP)
	0x147f 05247 (pointer_vs_value/code/benchmark_invocation_test.go:294)	XORPS	X0, X0
	0x1482 05250 (pointer_vs_value/code/benchmark_invocation_test.go:294)	MOVUPS	X0, "".~R0+1696(SP)
	0x148a 05258 (<unknown line number>)	NOP
	0x148a 05258 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+448(SP), AX
	0x1492 05266 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x1496 05270 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x149f 05279 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x14a4 05284 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x14a9 05289 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x14a9 05289 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x14ae 05294 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x14b6 05302 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x14be 05310 (pointer_vs_value/code/benchmark_invocation_test.go:294)	PCDATA	$0, $0
	0x14be 05310 (pointer_vs_value/code/benchmark_invocation_test.go:294)	PCDATA	$1, $43
	0x14be 05310 (pointer_vs_value/code/benchmark_invocation_test.go:294)	MOVQ	CX, "".~R0+1696(SP)
	0x14c6 05318 (pointer_vs_value/code/benchmark_invocation_test.go:294)	MOVQ	AX, "".~R0+1704(SP)
	0x14ce 05326 (pointer_vs_value/code/benchmark_invocation_test.go:294)	JMP	5328
	0x14d0 05328 (pointer_vs_value/code/benchmark_invocation_test.go:295)	CALL	math/rand.Int(SB)
	0x14d5 05333 (pointer_vs_value/code/benchmark_invocation_test.go:295)	MOVQ	(SP), AX
	0x14d9 05337 (pointer_vs_value/code/benchmark_invocation_test.go:295)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x14e1 05345 (pointer_vs_value/code/benchmark_invocation_test.go:295)	MOVQ	AX, strconv.i+616(SP)
	0x14e9 05353 (pointer_vs_value/code/benchmark_invocation_test.go:295)	XORPS	X0, X0
	0x14ec 05356 (pointer_vs_value/code/benchmark_invocation_test.go:295)	MOVUPS	X0, "".~R0+1296(SP)
	0x14f4 05364 (<unknown line number>)	NOP
	0x14f4 05364 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+616(SP), AX
	0x14fc 05372 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x1500 05376 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x1509 05385 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x150e 05390 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x1513 05395 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x1513 05395 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x1518 05400 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x1520 05408 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x1528 05416 (pointer_vs_value/code/benchmark_invocation_test.go:295)	PCDATA	$0, $0
	0x1528 05416 (pointer_vs_value/code/benchmark_invocation_test.go:295)	PCDATA	$1, $44
	0x1528 05416 (pointer_vs_value/code/benchmark_invocation_test.go:295)	MOVQ	CX, "".~R0+1296(SP)
	0x1530 05424 (pointer_vs_value/code/benchmark_invocation_test.go:295)	MOVQ	AX, "".~R0+1304(SP)
	0x1538 05432 (pointer_vs_value/code/benchmark_invocation_test.go:295)	JMP	5434
	0x153a 05434 (pointer_vs_value/code/benchmark_invocation_test.go:296)	CALL	math/rand.Int(SB)
	0x153f 05439 (pointer_vs_value/code/benchmark_invocation_test.go:296)	MOVQ	(SP), AX
	0x1543 05443 (pointer_vs_value/code/benchmark_invocation_test.go:296)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x154b 05451 (pointer_vs_value/code/benchmark_invocation_test.go:296)	MOVQ	AX, strconv.i+600(SP)
	0x1553 05459 (pointer_vs_value/code/benchmark_invocation_test.go:296)	XORPS	X0, X0
	0x1556 05462 (pointer_vs_value/code/benchmark_invocation_test.go:296)	MOVUPS	X0, "".~R0+1648(SP)
	0x155e 05470 (<unknown line number>)	NOP
	0x155e 05470 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+600(SP), AX
	0x1566 05478 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x156a 05482 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x1573 05491 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x1578 05496 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x157d 05501 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x157d 05501 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x1582 05506 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x158a 05514 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x1592 05522 (pointer_vs_value/code/benchmark_invocation_test.go:296)	PCDATA	$0, $0
	0x1592 05522 (pointer_vs_value/code/benchmark_invocation_test.go:296)	PCDATA	$1, $45
	0x1592 05522 (pointer_vs_value/code/benchmark_invocation_test.go:296)	MOVQ	CX, "".~R0+1648(SP)
	0x159a 05530 (pointer_vs_value/code/benchmark_invocation_test.go:296)	MOVQ	AX, "".~R0+1656(SP)
	0x15a2 05538 (pointer_vs_value/code/benchmark_invocation_test.go:296)	JMP	5540
	0x15a4 05540 (pointer_vs_value/code/benchmark_invocation_test.go:297)	CALL	math/rand.Int(SB)
	0x15a9 05545 (pointer_vs_value/code/benchmark_invocation_test.go:297)	MOVQ	(SP), AX
	0x15ad 05549 (pointer_vs_value/code/benchmark_invocation_test.go:297)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x15b5 05557 (pointer_vs_value/code/benchmark_invocation_test.go:297)	MOVQ	AX, strconv.i+584(SP)
	0x15bd 05565 (pointer_vs_value/code/benchmark_invocation_test.go:297)	XORPS	X0, X0
	0x15c0 05568 (pointer_vs_value/code/benchmark_invocation_test.go:297)	MOVUPS	X0, "".~R0+1312(SP)
	0x15c8 05576 (<unknown line number>)	NOP
	0x15c8 05576 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+584(SP), AX
	0x15d0 05584 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x15d4 05588 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x15dd 05597 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x15e2 05602 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x15e7 05607 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x15e7 05607 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x15ec 05612 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x15f4 05620 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x15fc 05628 (pointer_vs_value/code/benchmark_invocation_test.go:297)	PCDATA	$0, $0
	0x15fc 05628 (pointer_vs_value/code/benchmark_invocation_test.go:297)	PCDATA	$1, $46
	0x15fc 05628 (pointer_vs_value/code/benchmark_invocation_test.go:297)	MOVQ	CX, "".~R0+1312(SP)
	0x1604 05636 (pointer_vs_value/code/benchmark_invocation_test.go:297)	MOVQ	AX, "".~R0+1320(SP)
	0x160c 05644 (pointer_vs_value/code/benchmark_invocation_test.go:297)	JMP	5646
	0x160e 05646 (pointer_vs_value/code/benchmark_invocation_test.go:298)	CALL	math/rand.Int(SB)
	0x1613 05651 (pointer_vs_value/code/benchmark_invocation_test.go:298)	MOVQ	(SP), AX
	0x1617 05655 (pointer_vs_value/code/benchmark_invocation_test.go:298)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x161f 05663 (pointer_vs_value/code/benchmark_invocation_test.go:298)	MOVQ	AX, strconv.i+568(SP)
	0x1627 05671 (pointer_vs_value/code/benchmark_invocation_test.go:298)	XORPS	X0, X0
	0x162a 05674 (pointer_vs_value/code/benchmark_invocation_test.go:298)	MOVUPS	X0, "".~R0+1344(SP)
	0x1632 05682 (<unknown line number>)	NOP
	0x1632 05682 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+568(SP), AX
	0x163a 05690 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x163e 05694 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x1647 05703 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x164c 05708 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x1651 05713 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x1651 05713 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x1656 05718 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x165e 05726 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x1666 05734 (pointer_vs_value/code/benchmark_invocation_test.go:298)	PCDATA	$0, $0
	0x1666 05734 (pointer_vs_value/code/benchmark_invocation_test.go:298)	PCDATA	$1, $47
	0x1666 05734 (pointer_vs_value/code/benchmark_invocation_test.go:298)	MOVQ	CX, "".~R0+1344(SP)
	0x166e 05742 (pointer_vs_value/code/benchmark_invocation_test.go:298)	MOVQ	AX, "".~R0+1352(SP)
	0x1676 05750 (pointer_vs_value/code/benchmark_invocation_test.go:298)	JMP	5752
	0x1678 05752 (pointer_vs_value/code/benchmark_invocation_test.go:299)	CALL	math/rand.Int(SB)
	0x167d 05757 (pointer_vs_value/code/benchmark_invocation_test.go:299)	MOVQ	(SP), AX
	0x1681 05761 (pointer_vs_value/code/benchmark_invocation_test.go:299)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x1689 05769 (pointer_vs_value/code/benchmark_invocation_test.go:299)	MOVQ	AX, strconv.i+552(SP)
	0x1691 05777 (pointer_vs_value/code/benchmark_invocation_test.go:299)	XORPS	X0, X0
	0x1694 05780 (pointer_vs_value/code/benchmark_invocation_test.go:299)	MOVUPS	X0, "".~R0+1360(SP)
	0x169c 05788 (<unknown line number>)	NOP
	0x169c 05788 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+552(SP), AX
	0x16a4 05796 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x16a8 05800 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x16b1 05809 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x16b6 05814 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x16bb 05819 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x16bb 05819 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x16c0 05824 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x16c8 05832 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x16d0 05840 (pointer_vs_value/code/benchmark_invocation_test.go:299)	PCDATA	$0, $0
	0x16d0 05840 (pointer_vs_value/code/benchmark_invocation_test.go:299)	PCDATA	$1, $48
	0x16d0 05840 (pointer_vs_value/code/benchmark_invocation_test.go:299)	MOVQ	CX, "".~R0+1360(SP)
	0x16d8 05848 (pointer_vs_value/code/benchmark_invocation_test.go:299)	MOVQ	AX, "".~R0+1368(SP)
	0x16e0 05856 (pointer_vs_value/code/benchmark_invocation_test.go:299)	JMP	5858
	0x16e2 05858 (pointer_vs_value/code/benchmark_invocation_test.go:300)	CALL	math/rand.Int(SB)
	0x16e7 05863 (pointer_vs_value/code/benchmark_invocation_test.go:300)	MOVQ	(SP), AX
	0x16eb 05867 (pointer_vs_value/code/benchmark_invocation_test.go:300)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x16f3 05875 (pointer_vs_value/code/benchmark_invocation_test.go:300)	MOVQ	AX, strconv.i+536(SP)
	0x16fb 05883 (pointer_vs_value/code/benchmark_invocation_test.go:300)	XORPS	X0, X0
	0x16fe 05886 (pointer_vs_value/code/benchmark_invocation_test.go:300)	MOVUPS	X0, "".~R0+1392(SP)
	0x1706 05894 (<unknown line number>)	NOP
	0x1706 05894 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+536(SP), AX
	0x170e 05902 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x1712 05906 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x171b 05915 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x1720 05920 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x1725 05925 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x1725 05925 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x172a 05930 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x1732 05938 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x173a 05946 (pointer_vs_value/code/benchmark_invocation_test.go:300)	PCDATA	$0, $0
	0x173a 05946 (pointer_vs_value/code/benchmark_invocation_test.go:300)	PCDATA	$1, $49
	0x173a 05946 (pointer_vs_value/code/benchmark_invocation_test.go:300)	MOVQ	CX, "".~R0+1392(SP)
	0x1742 05954 (pointer_vs_value/code/benchmark_invocation_test.go:300)	MOVQ	AX, "".~R0+1400(SP)
	0x174a 05962 (pointer_vs_value/code/benchmark_invocation_test.go:300)	JMP	5964
	0x174c 05964 (pointer_vs_value/code/benchmark_invocation_test.go:301)	CALL	math/rand.Int(SB)
	0x1751 05969 (pointer_vs_value/code/benchmark_invocation_test.go:301)	MOVQ	(SP), AX
	0x1755 05973 (pointer_vs_value/code/benchmark_invocation_test.go:301)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x175d 05981 (pointer_vs_value/code/benchmark_invocation_test.go:301)	MOVQ	AX, strconv.i+456(SP)
	0x1765 05989 (pointer_vs_value/code/benchmark_invocation_test.go:301)	XORPS	X0, X0
	0x1768 05992 (pointer_vs_value/code/benchmark_invocation_test.go:301)	MOVUPS	X0, "".~R0+1408(SP)
	0x1770 06000 (<unknown line number>)	NOP
	0x1770 06000 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+456(SP), AX
	0x1778 06008 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x177c 06012 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x1785 06021 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x178a 06026 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x178f 06031 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x178f 06031 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x1794 06036 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x179c 06044 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x17a4 06052 (pointer_vs_value/code/benchmark_invocation_test.go:301)	PCDATA	$0, $0
	0x17a4 06052 (pointer_vs_value/code/benchmark_invocation_test.go:301)	PCDATA	$1, $50
	0x17a4 06052 (pointer_vs_value/code/benchmark_invocation_test.go:301)	MOVQ	CX, "".~R0+1408(SP)
	0x17ac 06060 (pointer_vs_value/code/benchmark_invocation_test.go:301)	MOVQ	AX, "".~R0+1416(SP)
	0x17b4 06068 (pointer_vs_value/code/benchmark_invocation_test.go:301)	JMP	6070
	0x17b6 06070 (pointer_vs_value/code/benchmark_invocation_test.go:302)	CALL	math/rand.Int(SB)
	0x17bb 06075 (pointer_vs_value/code/benchmark_invocation_test.go:302)	MOVQ	(SP), AX
	0x17bf 06079 (pointer_vs_value/code/benchmark_invocation_test.go:302)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x17c7 06087 (pointer_vs_value/code/benchmark_invocation_test.go:302)	MOVQ	AX, strconv.i+504(SP)
	0x17cf 06095 (pointer_vs_value/code/benchmark_invocation_test.go:302)	XORPS	X0, X0
	0x17d2 06098 (pointer_vs_value/code/benchmark_invocation_test.go:302)	MOVUPS	X0, "".~R0+1440(SP)
	0x17da 06106 (<unknown line number>)	NOP
	0x17da 06106 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+504(SP), AX
	0x17e2 06114 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x17e6 06118 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x17ef 06127 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x17f4 06132 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x17f9 06137 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x17f9 06137 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x17fe 06142 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x1806 06150 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x180e 06158 (pointer_vs_value/code/benchmark_invocation_test.go:302)	PCDATA	$0, $0
	0x180e 06158 (pointer_vs_value/code/benchmark_invocation_test.go:302)	PCDATA	$1, $51
	0x180e 06158 (pointer_vs_value/code/benchmark_invocation_test.go:302)	MOVQ	CX, "".~R0+1440(SP)
	0x1816 06166 (pointer_vs_value/code/benchmark_invocation_test.go:302)	MOVQ	AX, "".~R0+1448(SP)
	0x181e 06174 (pointer_vs_value/code/benchmark_invocation_test.go:302)	JMP	6176
	0x1820 06176 (pointer_vs_value/code/benchmark_invocation_test.go:303)	CALL	math/rand.Int(SB)
	0x1825 06181 (pointer_vs_value/code/benchmark_invocation_test.go:303)	MOVQ	(SP), AX
	0x1829 06185 (pointer_vs_value/code/benchmark_invocation_test.go:303)	MOVQ	AX, ""..autotmp_158+864(SP)
	0x1831 06193 (pointer_vs_value/code/benchmark_invocation_test.go:303)	MOVQ	AX, strconv.i+488(SP)
	0x1839 06201 (pointer_vs_value/code/benchmark_invocation_test.go:303)	XORPS	X0, X0
	0x183c 06204 (pointer_vs_value/code/benchmark_invocation_test.go:303)	MOVUPS	X0, "".~R0+1456(SP)
	0x1844 06212 (<unknown line number>)	NOP
	0x1844 06212 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	strconv.i+488(SP), AX
	0x184c 06220 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, (SP)
	0x1850 06224 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	$10, 8(SP)
	0x1859 06233 ($GOROOT/src/strconv/itoa.go:35)	CALL	strconv.FormatInt(SB)
	0x185e 06238 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	24(SP), AX
	0x1863 06243 ($GOROOT/src/strconv/itoa.go:35)	PCDATA	$0, $3
	0x1863 06243 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	16(SP), CX
	0x1868 06248 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	CX, ""..autotmp_159+1712(SP)
	0x1870 06256 ($GOROOT/src/strconv/itoa.go:35)	MOVQ	AX, ""..autotmp_159+1720(SP)
	0x1878 06264 (pointer_vs_value/code/benchmark_invocation_test.go:303)	PCDATA	$0, $0
	0x1878 06264 (pointer_vs_value/code/benchmark_invocation_test.go:303)	PCDATA	$1, $52
	0x1878 06264 (pointer_vs_value/code/benchmark_invocation_test.go:303)	MOVQ	CX, "".~R0+1456(SP)
	0x1880 06272 (pointer_vs_value/code/benchmark_invocation_test.go:303)	MOVQ	AX, "".~R0+1464(SP)
	0x1888 06280 (pointer_vs_value/code/benchmark_invocation_test.go:303)	JMP	6282
	0x188a 06282 (pointer_vs_value/code/benchmark_invocation_test.go:303)	PCDATA	$0, $1
	0x188a 06282 (pointer_vs_value/code/benchmark_invocation_test.go:303)	PCDATA	$1, $53
	0x188a 06282 (pointer_vs_value/code/benchmark_invocation_test.go:303)	LEAQ	""..autotmp_186+1728(SP), DI
	0x1892 06290 (pointer_vs_value/code/benchmark_invocation_test.go:303)	PCDATA	$0, $4
	0x1892 06290 (pointer_vs_value/code/benchmark_invocation_test.go:303)	LEAQ	""..stmp_21(SB), SI
	0x1899 06297 (pointer_vs_value/code/benchmark_invocation_test.go:303)	PCDATA	$0, $0
	0x1899 06297 (pointer_vs_value/code/benchmark_invocation_test.go:303)	DUFFCOPY	$168
	0x18ac 06316 (pointer_vs_value/code/benchmark_invocation_test.go:226)	MOVQ	"".~R0+216(SP), AX
	0x18b4 06324 (pointer_vs_value/code/benchmark_invocation_test.go:226)	MOVQ	AX, ""..autotmp_186+1728(SP)
	0x18bc 06332 (pointer_vs_value/code/benchmark_invocation_test.go:227)	MOVQ	"".~R0+408(SP), AX
	0x18c4 06340 (pointer_vs_value/code/benchmark_invocation_test.go:227)	MOVQ	AX, ""..autotmp_186+1736(SP)
	0x18cc 06348 (pointer_vs_value/code/benchmark_invocation_test.go:228)	MOVQ	"".~R0+424(SP), AX
	0x18d4 06356 (pointer_vs_value/code/benchmark_invocation_test.go:228)	MOVQ	AX, ""..autotmp_186+1744(SP)
	0x18dc 06364 (pointer_vs_value/code/benchmark_invocation_test.go:229)	MOVQ	"".~R0+440(SP), AX
	0x18e4 06372 (pointer_vs_value/code/benchmark_invocation_test.go:229)	MOVQ	AX, ""..autotmp_186+1752(SP)
	0x18ec 06380 (pointer_vs_value/code/benchmark_invocation_test.go:230)	MOVQ	"".~R0+384(SP), AX
	0x18f4 06388 (pointer_vs_value/code/benchmark_invocation_test.go:230)	MOVQ	AX, ""..autotmp_186+1760(SP)
	0x18fc 06396 (pointer_vs_value/code/benchmark_invocation_test.go:231)	MOVQ	"".~R0+368(SP), AX
	0x1904 06404 (pointer_vs_value/code/benchmark_invocation_test.go:231)	MOVQ	AX, ""..autotmp_186+1768(SP)
	0x190c 06412 (pointer_vs_value/code/benchmark_invocation_test.go:232)	MOVQ	"".~R0+352(SP), AX
	0x1914 06420 (pointer_vs_value/code/benchmark_invocation_test.go:232)	MOVQ	AX, ""..autotmp_186+1776(SP)
	0x191c 06428 (pointer_vs_value/code/benchmark_invocation_test.go:233)	MOVQ	"".~R0+344(SP), AX
	0x1924 06436 (pointer_vs_value/code/benchmark_invocation_test.go:233)	MOVQ	AX, ""..autotmp_186+1784(SP)
	0x192c 06444 (pointer_vs_value/code/benchmark_invocation_test.go:234)	MOVQ	"".~R0+328(SP), AX
	0x1934 06452 (pointer_vs_value/code/benchmark_invocation_test.go:234)	MOVQ	AX, ""..autotmp_186+1792(SP)
	0x193c 06460 (pointer_vs_value/code/benchmark_invocation_test.go:235)	MOVQ	"".~R0+304(SP), AX
	0x1944 06468 (pointer_vs_value/code/benchmark_invocation_test.go:235)	MOVQ	AX, ""..autotmp_186+1800(SP)
	0x194c 06476 (pointer_vs_value/code/benchmark_invocation_test.go:236)	MOVQ	"".~R0+288(SP), AX
	0x1954 06484 (pointer_vs_value/code/benchmark_invocation_test.go:236)	MOVQ	AX, ""..autotmp_186+1808(SP)
	0x195c 06492 (pointer_vs_value/code/benchmark_invocation_test.go:237)	MOVQ	"".~R0+272(SP), AX
	0x1964 06500 (pointer_vs_value/code/benchmark_invocation_test.go:237)	MOVQ	AX, ""..autotmp_186+1816(SP)
	0x196c 06508 (pointer_vs_value/code/benchmark_invocation_test.go:238)	MOVQ	"".~R0+256(SP), AX
	0x1974 06516 (pointer_vs_value/code/benchmark_invocation_test.go:238)	MOVQ	AX, ""..autotmp_186+1824(SP)
	0x197c 06524 (pointer_vs_value/code/benchmark_invocation_test.go:239)	MOVQ	"".~R0+232(SP), AX
	0x1984 06532 (pointer_vs_value/code/benchmark_invocation_test.go:239)	MOVQ	AX, ""..autotmp_186+1832(SP)
	0x198c 06540 (pointer_vs_value/code/benchmark_invocation_test.go:240)	MOVQ	"".~R0+200(SP), AX
	0x1994 06548 (pointer_vs_value/code/benchmark_invocation_test.go:240)	MOVQ	AX, ""..autotmp_186+1840(SP)
	0x199c 06556 (pointer_vs_value/code/benchmark_invocation_test.go:241)	MOVQ	"".~R0+184(SP), AX
	0x19a4 06564 (pointer_vs_value/code/benchmark_invocation_test.go:241)	MOVQ	AX, ""..autotmp_186+1848(SP)
	0x19ac 06572 (pointer_vs_value/code/benchmark_invocation_test.go:242)	MOVQ	"".~R0+168(SP), AX
	0x19b4 06580 (pointer_vs_value/code/benchmark_invocation_test.go:242)	MOVQ	AX, ""..autotmp_186+1856(SP)
	0x19bc 06588 (pointer_vs_value/code/benchmark_invocation_test.go:243)	MOVQ	"".~R0+152(SP), AX
	0x19c4 06596 (pointer_vs_value/code/benchmark_invocation_test.go:243)	MOVQ	AX, ""..autotmp_186+1864(SP)
	0x19cc 06604 (pointer_vs_value/code/benchmark_invocation_test.go:244)	MOVQ	"".~R0+32(SP), AX
	0x19d1 06609 (pointer_vs_value/code/benchmark_invocation_test.go:244)	MOVQ	AX, ""..autotmp_186+1872(SP)
	0x19d9 06617 (pointer_vs_value/code/benchmark_invocation_test.go:245)	MOVQ	"".~R0+104(SP), AX
	0x19de 06622 (pointer_vs_value/code/benchmark_invocation_test.go:245)	MOVQ	AX, ""..autotmp_186+1880(SP)
	0x19e6 06630 (pointer_vs_value/code/benchmark_invocation_test.go:246)	MOVQ	"".~R0+72(SP), AX
	0x19eb 06635 (pointer_vs_value/code/benchmark_invocation_test.go:246)	MOVQ	AX, ""..autotmp_186+1888(SP)
	0x19f3 06643 (pointer_vs_value/code/benchmark_invocation_test.go:247)	MOVQ	"".~R0+208(SP), AX
	0x19fb 06651 (pointer_vs_value/code/benchmark_invocation_test.go:247)	MOVQ	AX, ""..autotmp_186+1896(SP)
	0x1a03 06659 (pointer_vs_value/code/benchmark_invocation_test.go:248)	MOVQ	"".~R0+48(SP), AX
	0x1a08 06664 (pointer_vs_value/code/benchmark_invocation_test.go:248)	MOVQ	AX, ""..autotmp_186+1904(SP)
	0x1a10 06672 (pointer_vs_value/code/benchmark_invocation_test.go:249)	MOVQ	"".~R0+312(SP), AX
	0x1a18 06680 (pointer_vs_value/code/benchmark_invocation_test.go:249)	MOVQ	AX, ""..autotmp_186+1912(SP)
	0x1a20 06688 (pointer_vs_value/code/benchmark_invocation_test.go:250)	MOVQ	"".~R0+96(SP), AX
	0x1a25 06693 (pointer_vs_value/code/benchmark_invocation_test.go:250)	MOVQ	AX, ""..autotmp_186+1920(SP)
	0x1a2d 06701 (pointer_vs_value/code/benchmark_invocation_test.go:251)	MOVQ	"".~R0+120(SP), AX
	0x1a32 06706 (pointer_vs_value/code/benchmark_invocation_test.go:251)	MOVQ	AX, ""..autotmp_186+1928(SP)
	0x1a3a 06714 (pointer_vs_value/code/benchmark_invocation_test.go:252)	MOVSD	""..autotmp_132+1072(SP), X0
	0x1a43 06723 (pointer_vs_value/code/benchmark_invocation_test.go:252)	MOVSD	X0, ""..autotmp_186+1936(SP)
	0x1a4c 06732 (pointer_vs_value/code/benchmark_invocation_test.go:253)	MOVSD	""..autotmp_133+1064(SP), X0
	0x1a55 06741 (pointer_vs_value/code/benchmark_invocation_test.go:253)	MOVSD	X0, ""..autotmp_186+1944(SP)
	0x1a5e 06750 (pointer_vs_value/code/benchmark_invocation_test.go:254)	MOVSD	""..autotmp_134+1056(SP), X0
	0x1a67 06759 (pointer_vs_value/code/benchmark_invocation_test.go:254)	MOVSD	X0, ""..autotmp_186+1952(SP)
	0x1a70 06768 (pointer_vs_value/code/benchmark_invocation_test.go:255)	MOVSD	""..autotmp_135+1048(SP), X0
	0x1a79 06777 (pointer_vs_value/code/benchmark_invocation_test.go:255)	MOVSD	X0, ""..autotmp_186+1960(SP)
	0x1a82 06786 (pointer_vs_value/code/benchmark_invocation_test.go:256)	MOVSD	""..autotmp_136+1040(SP), X0
	0x1a8b 06795 (pointer_vs_value/code/benchmark_invocation_test.go:256)	MOVSD	X0, ""..autotmp_186+1968(SP)
	0x1a94 06804 (pointer_vs_value/code/benchmark_invocation_test.go:257)	MOVSD	""..autotmp_137+1032(SP), X0
	0x1a9d 06813 (pointer_vs_value/code/benchmark_invocation_test.go:257)	MOVSD	X0, ""..autotmp_186+1976(SP)
	0x1aa6 06822 (pointer_vs_value/code/benchmark_invocation_test.go:258)	MOVSD	""..autotmp_138+1024(SP), X0
	0x1aaf 06831 (pointer_vs_value/code/benchmark_invocation_test.go:258)	MOVSD	X0, ""..autotmp_186+1984(SP)
	0x1ab8 06840 (pointer_vs_value/code/benchmark_invocation_test.go:259)	MOVSD	""..autotmp_139+1016(SP), X0
	0x1ac1 06849 (pointer_vs_value/code/benchmark_invocation_test.go:259)	MOVSD	X0, ""..autotmp_186+1992(SP)
	0x1aca 06858 (pointer_vs_value/code/benchmark_invocation_test.go:260)	MOVSD	""..autotmp_140+1008(SP), X0
	0x1ad3 06867 (pointer_vs_value/code/benchmark_invocation_test.go:260)	MOVSD	X0, ""..autotmp_186+2000(SP)
	0x1adc 06876 (pointer_vs_value/code/benchmark_invocation_test.go:261)	MOVSD	""..autotmp_141+1000(SP), X0
	0x1ae5 06885 (pointer_vs_value/code/benchmark_invocation_test.go:261)	MOVSD	X0, ""..autotmp_186+2008(SP)
	0x1aee 06894 (pointer_vs_value/code/benchmark_invocation_test.go:262)	MOVSD	""..autotmp_142+992(SP), X0
	0x1af7 06903 (pointer_vs_value/code/benchmark_invocation_test.go:262)	MOVSD	X0, ""..autotmp_186+2016(SP)
	0x1b00 06912 (pointer_vs_value/code/benchmark_invocation_test.go:263)	MOVSD	""..autotmp_143+984(SP), X0
	0x1b09 06921 (pointer_vs_value/code/benchmark_invocation_test.go:263)	MOVSD	X0, ""..autotmp_186+2024(SP)
	0x1b12 06930 (pointer_vs_value/code/benchmark_invocation_test.go:264)	MOVSD	""..autotmp_144+976(SP), X0
	0x1b1b 06939 (pointer_vs_value/code/benchmark_invocation_test.go:264)	MOVSD	X0, ""..autotmp_186+2032(SP)
	0x1b24 06948 (pointer_vs_value/code/benchmark_invocation_test.go:265)	MOVSD	""..autotmp_145+968(SP), X0
	0x1b2d 06957 (pointer_vs_value/code/benchmark_invocation_test.go:265)	MOVSD	X0, ""..autotmp_186+2040(SP)
	0x1b36 06966 (pointer_vs_value/code/benchmark_invocation_test.go:266)	MOVSD	""..autotmp_146+960(SP), X0
	0x1b3f 06975 (pointer_vs_value/code/benchmark_invocation_test.go:266)	MOVSD	X0, ""..autotmp_186+2048(SP)
	0x1b48 06984 (pointer_vs_value/code/benchmark_invocation_test.go:267)	MOVSD	""..autotmp_147+952(SP), X0
	0x1b51 06993 (pointer_vs_value/code/benchmark_invocation_test.go:267)	MOVSD	X0, ""..autotmp_186+2056(SP)
	0x1b5a 07002 (pointer_vs_value/code/benchmark_invocation_test.go:268)	MOVSD	""..autotmp_148+944(SP), X0
	0x1b63 07011 (pointer_vs_value/code/benchmark_invocation_test.go:268)	MOVSD	X0, ""..autotmp_186+2064(SP)
	0x1b6c 07020 (pointer_vs_value/code/benchmark_invocation_test.go:269)	MOVSD	""..autotmp_149+936(SP), X0
	0x1b75 07029 (pointer_vs_value/code/benchmark_invocation_test.go:269)	MOVSD	X0, ""..autotmp_186+2072(SP)
	0x1b7e 07038 (pointer_vs_value/code/benchmark_invocation_test.go:270)	MOVSD	""..autotmp_150+928(SP), X0
	0x1b87 07047 (pointer_vs_value/code/benchmark_invocation_test.go:270)	MOVSD	X0, ""..autotmp_186+2080(SP)
	0x1b90 07056 (pointer_vs_value/code/benchmark_invocation_test.go:271)	MOVSD	""..autotmp_151+920(SP), X0
	0x1b99 07065 (pointer_vs_value/code/benchmark_invocation_test.go:271)	MOVSD	X0, ""..autotmp_186+2088(SP)
	0x1ba2 07074 (pointer_vs_value/code/benchmark_invocation_test.go:272)	MOVSD	""..autotmp_152+912(SP), X0
	0x1bab 07083 (pointer_vs_value/code/benchmark_invocation_test.go:272)	MOVSD	X0, ""..autotmp_186+2096(SP)
	0x1bb4 07092 (pointer_vs_value/code/benchmark_invocation_test.go:273)	MOVSD	""..autotmp_153+904(SP), X0
	0x1bbd 07101 (pointer_vs_value/code/benchmark_invocation_test.go:273)	MOVSD	X0, ""..autotmp_186+2104(SP)
	0x1bc6 07110 (pointer_vs_value/code/benchmark_invocation_test.go:274)	MOVSD	""..autotmp_154+896(SP), X0
	0x1bcf 07119 (pointer_vs_value/code/benchmark_invocation_test.go:274)	MOVSD	X0, ""..autotmp_186+2112(SP)
	0x1bd8 07128 (pointer_vs_value/code/benchmark_invocation_test.go:275)	MOVSD	""..autotmp_155+888(SP), X0
	0x1be1 07137 (pointer_vs_value/code/benchmark_invocation_test.go:275)	MOVSD	X0, ""..autotmp_186+2120(SP)
	0x1bea 07146 (pointer_vs_value/code/benchmark_invocation_test.go:276)	MOVSD	""..autotmp_156+880(SP), X0
	0x1bf3 07155 (pointer_vs_value/code/benchmark_invocation_test.go:276)	MOVSD	X0, ""..autotmp_186+2128(SP)
	0x1bfc 07164 (pointer_vs_value/code/benchmark_invocation_test.go:277)	MOVSD	""..autotmp_157+872(SP), X0
	0x1c05 07173 (pointer_vs_value/code/benchmark_invocation_test.go:277)	MOVSD	X0, ""..autotmp_186+2136(SP)
	0x1c0e 07182 (pointer_vs_value/code/benchmark_invocation_test.go:278)	MOVQ	"".~R0+1512(SP), AX
	0x1c16 07190 (pointer_vs_value/code/benchmark_invocation_test.go:278)	PCDATA	$0, $3
	0x1c16 07190 (pointer_vs_value/code/benchmark_invocation_test.go:278)	PCDATA	$1, $54
	0x1c16 07190 (pointer_vs_value/code/benchmark_invocation_test.go:278)	MOVQ	"".~R0+1504(SP), CX
	0x1c1e 07198 (pointer_vs_value/code/benchmark_invocation_test.go:278)	PCDATA	$0, $0
	0x1c1e 07198 (pointer_vs_value/code/benchmark_invocation_test.go:278)	MOVQ	CX, ""..autotmp_186+2144(SP)
	0x1c26 07206 (pointer_vs_value/code/benchmark_invocation_test.go:278)	MOVQ	AX, ""..autotmp_186+2152(SP)
	0x1c2e 07214 (pointer_vs_value/code/benchmark_invocation_test.go:279)	MOVQ	"".~R0+1496(SP), AX
	0x1c36 07222 (pointer_vs_value/code/benchmark_invocation_test.go:279)	PCDATA	$0, $3
	0x1c36 07222 (pointer_vs_value/code/benchmark_invocation_test.go:279)	PCDATA	$1, $55
	0x1c36 07222 (pointer_vs_value/code/benchmark_invocation_test.go:279)	MOVQ	"".~R0+1488(SP), CX
	0x1c3e 07230 (pointer_vs_value/code/benchmark_invocation_test.go:279)	PCDATA	$0, $0
	0x1c3e 07230 (pointer_vs_value/code/benchmark_invocation_test.go:279)	MOVQ	CX, ""..autotmp_186+2160(SP)
	0x1c46 07238 (pointer_vs_value/code/benchmark_invocation_test.go:279)	MOVQ	AX, ""..autotmp_186+2168(SP)
	0x1c4e 07246 (pointer_vs_value/code/benchmark_invocation_test.go:280)	MOVQ	"".~R0+1384(SP), AX
	0x1c56 07254 (pointer_vs_value/code/benchmark_invocation_test.go:280)	PCDATA	$0, $3
	0x1c56 07254 (pointer_vs_value/code/benchmark_invocation_test.go:280)	PCDATA	$1, $56
	0x1c56 07254 (pointer_vs_value/code/benchmark_invocation_test.go:280)	MOVQ	"".~R0+1376(SP), CX
	0x1c5e 07262 (pointer_vs_value/code/benchmark_invocation_test.go:280)	PCDATA	$0, $0
	0x1c5e 07262 (pointer_vs_value/code/benchmark_invocation_test.go:280)	MOVQ	CX, ""..autotmp_186+2176(SP)
	0x1c66 07270 (pointer_vs_value/code/benchmark_invocation_test.go:280)	MOVQ	AX, ""..autotmp_186+2184(SP)
	0x1c6e 07278 (pointer_vs_value/code/benchmark_invocation_test.go:281)	MOVQ	"".~R0+1688(SP), AX
	0x1c76 07286 (pointer_vs_value/code/benchmark_invocation_test.go:281)	PCDATA	$0, $3
	0x1c76 07286 (pointer_vs_value/code/benchmark_invocation_test.go:281)	PCDATA	$1, $57
	0x1c76 07286 (pointer_vs_value/code/benchmark_invocation_test.go:281)	MOVQ	"".~R0+1680(SP), CX
	0x1c7e 07294 (pointer_vs_value/code/benchmark_invocation_test.go:281)	PCDATA	$0, $0
	0x1c7e 07294 (pointer_vs_value/code/benchmark_invocation_test.go:281)	MOVQ	CX, ""..autotmp_186+2192(SP)
	0x1c86 07302 (pointer_vs_value/code/benchmark_invocation_test.go:281)	MOVQ	AX, ""..autotmp_186+2200(SP)
	0x1c8e 07310 (pointer_vs_value/code/benchmark_invocation_test.go:282)	MOVQ	"".~R0+1672(SP), AX
	0x1c96 07318 (pointer_vs_value/code/benchmark_invocation_test.go:282)	PCDATA	$0, $3
	0x1c96 07318 (pointer_vs_value/code/benchmark_invocation_test.go:282)	PCDATA	$1, $58
	0x1c96 07318 (pointer_vs_value/code/benchmark_invocation_test.go:282)	MOVQ	"".~R0+1664(SP), CX
	0x1c9e 07326 (pointer_vs_value/code/benchmark_invocation_test.go:282)	PCDATA	$0, $0
	0x1c9e 07326 (pointer_vs_value/code/benchmark_invocation_test.go:282)	MOVQ	CX, ""..autotmp_186+2208(SP)
	0x1ca6 07334 (pointer_vs_value/code/benchmark_invocation_test.go:282)	MOVQ	AX, ""..autotmp_186+2216(SP)
	0x1cae 07342 (pointer_vs_value/code/benchmark_invocation_test.go:283)	MOVQ	"".~R0+1640(SP), AX
	0x1cb6 07350 (pointer_vs_value/code/benchmark_invocation_test.go:283)	PCDATA	$0, $3
	0x1cb6 07350 (pointer_vs_value/code/benchmark_invocation_test.go:283)	PCDATA	$1, $59
	0x1cb6 07350 (pointer_vs_value/code/benchmark_invocation_test.go:283)	MOVQ	"".~R0+1632(SP), CX
	0x1cbe 07358 (pointer_vs_value/code/benchmark_invocation_test.go:283)	PCDATA	$0, $0
	0x1cbe 07358 (pointer_vs_value/code/benchmark_invocation_test.go:283)	MOVQ	CX, ""..autotmp_186+2224(SP)
	0x1cc6 07366 (pointer_vs_value/code/benchmark_invocation_test.go:283)	MOVQ	AX, ""..autotmp_186+2232(SP)
	0x1cce 07374 (pointer_vs_value/code/benchmark_invocation_test.go:284)	MOVQ	"".~R0+1624(SP), AX
	0x1cd6 07382 (pointer_vs_value/code/benchmark_invocation_test.go:284)	PCDATA	$0, $3
	0x1cd6 07382 (pointer_vs_value/code/benchmark_invocation_test.go:284)	PCDATA	$1, $60
	0x1cd6 07382 (pointer_vs_value/code/benchmark_invocation_test.go:284)	MOVQ	"".~R0+1616(SP), CX
	0x1cde 07390 (pointer_vs_value/code/benchmark_invocation_test.go:284)	PCDATA	$0, $0
	0x1cde 07390 (pointer_vs_value/code/benchmark_invocation_test.go:284)	MOVQ	CX, ""..autotmp_186+2240(SP)
	0x1ce6 07398 (pointer_vs_value/code/benchmark_invocation_test.go:284)	MOVQ	AX, ""..autotmp_186+2248(SP)
	0x1cee 07406 (pointer_vs_value/code/benchmark_invocation_test.go:285)	MOVQ	"".~R0+1608(SP), AX
	0x1cf6 07414 (pointer_vs_value/code/benchmark_invocation_test.go:285)	PCDATA	$0, $3
	0x1cf6 07414 (pointer_vs_value/code/benchmark_invocation_test.go:285)	PCDATA	$1, $61
	0x1cf6 07414 (pointer_vs_value/code/benchmark_invocation_test.go:285)	MOVQ	"".~R0+1600(SP), CX
	0x1cfe 07422 (pointer_vs_value/code/benchmark_invocation_test.go:285)	PCDATA	$0, $0
	0x1cfe 07422 (pointer_vs_value/code/benchmark_invocation_test.go:285)	MOVQ	CX, ""..autotmp_186+2256(SP)
	0x1d06 07430 (pointer_vs_value/code/benchmark_invocation_test.go:285)	MOVQ	AX, ""..autotmp_186+2264(SP)
	0x1d0e 07438 (pointer_vs_value/code/benchmark_invocation_test.go:286)	MOVQ	"".~R0+1592(SP), AX
	0x1d16 07446 (pointer_vs_value/code/benchmark_invocation_test.go:286)	PCDATA	$0, $3
	0x1d16 07446 (pointer_vs_value/code/benchmark_invocation_test.go:286)	PCDATA	$1, $62
	0x1d16 07446 (pointer_vs_value/code/benchmark_invocation_test.go:286)	MOVQ	"".~R0+1584(SP), CX
	0x1d1e 07454 (pointer_vs_value/code/benchmark_invocation_test.go:286)	PCDATA	$0, $0
	0x1d1e 07454 (pointer_vs_value/code/benchmark_invocation_test.go:286)	MOVQ	CX, ""..autotmp_186+2272(SP)
	0x1d26 07462 (pointer_vs_value/code/benchmark_invocation_test.go:286)	MOVQ	AX, ""..autotmp_186+2280(SP)
	0x1d2e 07470 (pointer_vs_value/code/benchmark_invocation_test.go:287)	MOVQ	"".~R0+1432(SP), AX
	0x1d36 07478 (pointer_vs_value/code/benchmark_invocation_test.go:287)	PCDATA	$0, $3
	0x1d36 07478 (pointer_vs_value/code/benchmark_invocation_test.go:287)	PCDATA	$1, $63
	0x1d36 07478 (pointer_vs_value/code/benchmark_invocation_test.go:287)	MOVQ	"".~R0+1424(SP), CX
	0x1d3e 07486 (pointer_vs_value/code/benchmark_invocation_test.go:287)	PCDATA	$0, $0
	0x1d3e 07486 (pointer_vs_value/code/benchmark_invocation_test.go:287)	MOVQ	CX, ""..autotmp_186+2288(SP)
	0x1d46 07494 (pointer_vs_value/code/benchmark_invocation_test.go:287)	MOVQ	AX, ""..autotmp_186+2296(SP)
	0x1d4e 07502 (pointer_vs_value/code/benchmark_invocation_test.go:288)	MOVQ	"".~R0+1576(SP), AX
	0x1d56 07510 (pointer_vs_value/code/benchmark_invocation_test.go:288)	PCDATA	$0, $3
	0x1d56 07510 (pointer_vs_value/code/benchmark_invocation_test.go:288)	PCDATA	$1, $64
	0x1d56 07510 (pointer_vs_value/code/benchmark_invocation_test.go:288)	MOVQ	"".~R0+1568(SP), CX
	0x1d5e 07518 (pointer_vs_value/code/benchmark_invocation_test.go:288)	PCDATA	$0, $0
	0x1d5e 07518 (pointer_vs_value/code/benchmark_invocation_test.go:288)	MOVQ	CX, ""..autotmp_186+2304(SP)
	0x1d66 07526 (pointer_vs_value/code/benchmark_invocation_test.go:288)	MOVQ	AX, ""..autotmp_186+2312(SP)
	0x1d6e 07534 (pointer_vs_value/code/benchmark_invocation_test.go:289)	MOVQ	"".~R0+1560(SP), AX
	0x1d76 07542 (pointer_vs_value/code/benchmark_invocation_test.go:289)	PCDATA	$0, $3
	0x1d76 07542 (pointer_vs_value/code/benchmark_invocation_test.go:289)	PCDATA	$1, $65
	0x1d76 07542 (pointer_vs_value/code/benchmark_invocation_test.go:289)	MOVQ	"".~R0+1552(SP), CX
	0x1d7e 07550 (pointer_vs_value/code/benchmark_invocation_test.go:289)	PCDATA	$0, $0
	0x1d7e 07550 (pointer_vs_value/code/benchmark_invocation_test.go:289)	MOVQ	CX, ""..autotmp_186+2320(SP)
	0x1d86 07558 (pointer_vs_value/code/benchmark_invocation_test.go:289)	MOVQ	AX, ""..autotmp_186+2328(SP)
	0x1d8e 07566 (pointer_vs_value/code/benchmark_invocation_test.go:290)	MOVQ	"".~R0+1544(SP), AX
	0x1d96 07574 (pointer_vs_value/code/benchmark_invocation_test.go:290)	PCDATA	$0, $3
	0x1d96 07574 (pointer_vs_value/code/benchmark_invocation_test.go:290)	PCDATA	$1, $66
	0x1d96 07574 (pointer_vs_value/code/benchmark_invocation_test.go:290)	MOVQ	"".~R0+1536(SP), CX
	0x1d9e 07582 (pointer_vs_value/code/benchmark_invocation_test.go:290)	PCDATA	$0, $0
	0x1d9e 07582 (pointer_vs_value/code/benchmark_invocation_test.go:290)	MOVQ	CX, ""..autotmp_186+2336(SP)
	0x1da6 07590 (pointer_vs_value/code/benchmark_invocation_test.go:290)	MOVQ	AX, ""..autotmp_186+2344(SP)
	0x1dae 07598 (pointer_vs_value/code/benchmark_invocation_test.go:291)	MOVQ	"".~R0+1528(SP), AX
	0x1db6 07606 (pointer_vs_value/code/benchmark_invocation_test.go:291)	PCDATA	$0, $3
	0x1db6 07606 (pointer_vs_value/code/benchmark_invocation_test.go:291)	PCDATA	$1, $67
	0x1db6 07606 (pointer_vs_value/code/benchmark_invocation_test.go:291)	MOVQ	"".~R0+1520(SP), CX
	0x1dbe 07614 (pointer_vs_value/code/benchmark_invocation_test.go:291)	PCDATA	$0, $0
	0x1dbe 07614 (pointer_vs_value/code/benchmark_invocation_test.go:291)	MOVQ	CX, ""..autotmp_186+2352(SP)
	0x1dc6 07622 (pointer_vs_value/code/benchmark_invocation_test.go:291)	MOVQ	AX, ""..autotmp_186+2360(SP)
	0x1dce 07630 (pointer_vs_value/code/benchmark_invocation_test.go:292)	MOVQ	"".~R0+1480(SP), AX
	0x1dd6 07638 (pointer_vs_value/code/benchmark_invocation_test.go:292)	PCDATA	$0, $3
	0x1dd6 07638 (pointer_vs_value/code/benchmark_invocation_test.go:292)	PCDATA	$1, $68
	0x1dd6 07638 (pointer_vs_value/code/benchmark_invocation_test.go:292)	MOVQ	"".~R0+1472(SP), CX
	0x1dde 07646 (pointer_vs_value/code/benchmark_invocation_test.go:292)	PCDATA	$0, $0
	0x1dde 07646 (pointer_vs_value/code/benchmark_invocation_test.go:292)	MOVQ	CX, ""..autotmp_186+2368(SP)
	0x1de6 07654 (pointer_vs_value/code/benchmark_invocation_test.go:292)	MOVQ	AX, ""..autotmp_186+2376(SP)
	0x1dee 07662 (pointer_vs_value/code/benchmark_invocation_test.go:293)	MOVQ	"".~R0+1336(SP), AX
	0x1df6 07670 (pointer_vs_value/code/benchmark_invocation_test.go:293)	PCDATA	$0, $3
	0x1df6 07670 (pointer_vs_value/code/benchmark_invocation_test.go:293)	PCDATA	$1, $69
	0x1df6 07670 (pointer_vs_value/code/benchmark_invocation_test.go:293)	MOVQ	"".~R0+1328(SP), CX
	0x1dfe 07678 (pointer_vs_value/code/benchmark_invocation_test.go:293)	PCDATA	$0, $0
	0x1dfe 07678 (pointer_vs_value/code/benchmark_invocation_test.go:293)	MOVQ	CX, ""..autotmp_186+2384(SP)
	0x1e06 07686 (pointer_vs_value/code/benchmark_invocation_test.go:293)	MOVQ	AX, ""..autotmp_186+2392(SP)
	0x1e0e 07694 (pointer_vs_value/code/benchmark_invocation_test.go:294)	PCDATA	$0, $2
	0x1e0e 07694 (pointer_vs_value/code/benchmark_invocation_test.go:294)	MOVQ	"".~R0+1696(SP), AX
	0x1e16 07702 (pointer_vs_value/code/benchmark_invocation_test.go:294)	PCDATA	$1, $70
	0x1e16 07702 (pointer_vs_value/code/benchmark_invocation_test.go:294)	MOVQ	"".~R0+1704(SP), CX
	0x1e1e 07710 (pointer_vs_value/code/benchmark_invocation_test.go:294)	PCDATA	$0, $0
	0x1e1e 07710 (pointer_vs_value/code/benchmark_invocation_test.go:294)	MOVQ	AX, ""..autotmp_186+2400(SP)
	0x1e26 07718 (pointer_vs_value/code/benchmark_invocation_test.go:294)	MOVQ	CX, ""..autotmp_186+2408(SP)
	0x1e2e 07726 (pointer_vs_value/code/benchmark_invocation_test.go:295)	PCDATA	$0, $2
	0x1e2e 07726 (pointer_vs_value/code/benchmark_invocation_test.go:295)	MOVQ	"".~R0+1296(SP), AX
	0x1e36 07734 (pointer_vs_value/code/benchmark_invocation_test.go:295)	PCDATA	$1, $71
	0x1e36 07734 (pointer_vs_value/code/benchmark_invocation_test.go:295)	MOVQ	"".~R0+1304(SP), CX
	0x1e3e 07742 (pointer_vs_value/code/benchmark_invocation_test.go:295)	PCDATA	$0, $0
	0x1e3e 07742 (pointer_vs_value/code/benchmark_invocation_test.go:295)	MOVQ	AX, ""..autotmp_186+2416(SP)
	0x1e46 07750 (pointer_vs_value/code/benchmark_invocation_test.go:295)	MOVQ	CX, ""..autotmp_186+2424(SP)
	0x1e4e 07758 (pointer_vs_value/code/benchmark_invocation_test.go:296)	PCDATA	$0, $2
	0x1e4e 07758 (pointer_vs_value/code/benchmark_invocation_test.go:296)	MOVQ	"".~R0+1648(SP), AX
	0x1e56 07766 (pointer_vs_value/code/benchmark_invocation_test.go:296)	PCDATA	$1, $72
	0x1e56 07766 (pointer_vs_value/code/benchmark_invocation_test.go:296)	MOVQ	"".~R0+1656(SP), CX
	0x1e5e 07774 (pointer_vs_value/code/benchmark_invocation_test.go:296)	PCDATA	$0, $0
	0x1e5e 07774 (pointer_vs_value/code/benchmark_invocation_test.go:296)	MOVQ	AX, ""..autotmp_186+2432(SP)
	0x1e66 07782 (pointer_vs_value/code/benchmark_invocation_test.go:296)	MOVQ	CX, ""..autotmp_186+2440(SP)
	0x1e6e 07790 (pointer_vs_value/code/benchmark_invocation_test.go:297)	PCDATA	$0, $2
	0x1e6e 07790 (pointer_vs_value/code/benchmark_invocation_test.go:297)	MOVQ	"".~R0+1312(SP), AX
	0x1e76 07798 (pointer_vs_value/code/benchmark_invocation_test.go:297)	PCDATA	$1, $73
	0x1e76 07798 (pointer_vs_value/code/benchmark_invocation_test.go:297)	MOVQ	"".~R0+1320(SP), CX
	0x1e7e 07806 (pointer_vs_value/code/benchmark_invocation_test.go:297)	PCDATA	$0, $0
	0x1e7e 07806 (pointer_vs_value/code/benchmark_invocation_test.go:297)	MOVQ	AX, ""..autotmp_186+2448(SP)
	0x1e86 07814 (pointer_vs_value/code/benchmark_invocation_test.go:297)	MOVQ	CX, ""..autotmp_186+2456(SP)
	0x1e8e 07822 (pointer_vs_value/code/benchmark_invocation_test.go:298)	PCDATA	$0, $2
	0x1e8e 07822 (pointer_vs_value/code/benchmark_invocation_test.go:298)	MOVQ	"".~R0+1344(SP), AX
	0x1e96 07830 (pointer_vs_value/code/benchmark_invocation_test.go:298)	PCDATA	$1, $74
	0x1e96 07830 (pointer_vs_value/code/benchmark_invocation_test.go:298)	MOVQ	"".~R0+1352(SP), CX
	0x1e9e 07838 (pointer_vs_value/code/benchmark_invocation_test.go:298)	PCDATA	$0, $0
	0x1e9e 07838 (pointer_vs_value/code/benchmark_invocation_test.go:298)	MOVQ	AX, ""..autotmp_186+2464(SP)
	0x1ea6 07846 (pointer_vs_value/code/benchmark_invocation_test.go:298)	MOVQ	CX, ""..autotmp_186+2472(SP)
	0x1eae 07854 (pointer_vs_value/code/benchmark_invocation_test.go:299)	PCDATA	$0, $2
	0x1eae 07854 (pointer_vs_value/code/benchmark_invocation_test.go:299)	MOVQ	"".~R0+1360(SP), AX
	0x1eb6 07862 (pointer_vs_value/code/benchmark_invocation_test.go:299)	PCDATA	$1, $75
	0x1eb6 07862 (pointer_vs_value/code/benchmark_invocation_test.go:299)	MOVQ	"".~R0+1368(SP), CX
	0x1ebe 07870 (pointer_vs_value/code/benchmark_invocation_test.go:299)	PCDATA	$0, $0
	0x1ebe 07870 (pointer_vs_value/code/benchmark_invocation_test.go:299)	MOVQ	AX, ""..autotmp_186+2480(SP)
	0x1ec6 07878 (pointer_vs_value/code/benchmark_invocation_test.go:299)	MOVQ	CX, ""..autotmp_186+2488(SP)
	0x1ece 07886 (pointer_vs_value/code/benchmark_invocation_test.go:300)	PCDATA	$0, $2
	0x1ece 07886 (pointer_vs_value/code/benchmark_invocation_test.go:300)	MOVQ	"".~R0+1392(SP), AX
	0x1ed6 07894 (pointer_vs_value/code/benchmark_invocation_test.go:300)	PCDATA	$1, $76
	0x1ed6 07894 (pointer_vs_value/code/benchmark_invocation_test.go:300)	MOVQ	"".~R0+1400(SP), CX
	0x1ede 07902 (pointer_vs_value/code/benchmark_invocation_test.go:300)	PCDATA	$0, $0
	0x1ede 07902 (pointer_vs_value/code/benchmark_invocation_test.go:300)	MOVQ	AX, ""..autotmp_186+2496(SP)
	0x1ee6 07910 (pointer_vs_value/code/benchmark_invocation_test.go:300)	MOVQ	CX, ""..autotmp_186+2504(SP)
	0x1eee 07918 (pointer_vs_value/code/benchmark_invocation_test.go:301)	PCDATA	$0, $2
	0x1eee 07918 (pointer_vs_value/code/benchmark_invocation_test.go:301)	MOVQ	"".~R0+1408(SP), AX
	0x1ef6 07926 (pointer_vs_value/code/benchmark_invocation_test.go:301)	PCDATA	$1, $77
	0x1ef6 07926 (pointer_vs_value/code/benchmark_invocation_test.go:301)	MOVQ	"".~R0+1416(SP), CX
	0x1efe 07934 (pointer_vs_value/code/benchmark_invocation_test.go:301)	PCDATA	$0, $0
	0x1efe 07934 (pointer_vs_value/code/benchmark_invocation_test.go:301)	MOVQ	AX, ""..autotmp_186+2512(SP)
	0x1f06 07942 (pointer_vs_value/code/benchmark_invocation_test.go:301)	MOVQ	CX, ""..autotmp_186+2520(SP)
	0x1f0e 07950 (pointer_vs_value/code/benchmark_invocation_test.go:302)	PCDATA	$0, $2
	0x1f0e 07950 (pointer_vs_value/code/benchmark_invocation_test.go:302)	MOVQ	"".~R0+1440(SP), AX
	0x1f16 07958 (pointer_vs_value/code/benchmark_invocation_test.go:302)	PCDATA	$1, $78
	0x1f16 07958 (pointer_vs_value/code/benchmark_invocation_test.go:302)	MOVQ	"".~R0+1448(SP), CX
	0x1f1e 07966 (pointer_vs_value/code/benchmark_invocation_test.go:302)	PCDATA	$0, $0
	0x1f1e 07966 (pointer_vs_value/code/benchmark_invocation_test.go:302)	MOVQ	AX, ""..autotmp_186+2528(SP)
	0x1f26 07974 (pointer_vs_value/code/benchmark_invocation_test.go:302)	MOVQ	CX, ""..autotmp_186+2536(SP)
	0x1f2e 07982 (pointer_vs_value/code/benchmark_invocation_test.go:303)	PCDATA	$0, $2
	0x1f2e 07982 (pointer_vs_value/code/benchmark_invocation_test.go:303)	MOVQ	"".~R0+1456(SP), AX
	0x1f36 07990 (pointer_vs_value/code/benchmark_invocation_test.go:303)	PCDATA	$1, $79
	0x1f36 07990 (pointer_vs_value/code/benchmark_invocation_test.go:303)	MOVQ	"".~R0+1464(SP), CX
	0x1f3e 07998 (pointer_vs_value/code/benchmark_invocation_test.go:303)	PCDATA	$0, $0
	0x1f3e 07998 (pointer_vs_value/code/benchmark_invocation_test.go:303)	MOVQ	AX, ""..autotmp_186+2544(SP)
	0x1f46 08006 (pointer_vs_value/code/benchmark_invocation_test.go:303)	MOVQ	CX, ""..autotmp_186+2552(SP)
	0x1f4e 08014 (pointer_vs_value/code/benchmark_invocation_test.go:225)	PCDATA	$0, $1
	0x1f4e 08014 (pointer_vs_value/code/benchmark_invocation_test.go:225)	PCDATA	$1, $80
	0x1f4e 08014 (pointer_vs_value/code/benchmark_invocation_test.go:225)	LEAQ	"".~r0+2576(SP), DI
	0x1f56 08022 (pointer_vs_value/code/benchmark_invocation_test.go:225)	PCDATA	$0, $4
	0x1f56 08022 (pointer_vs_value/code/benchmark_invocation_test.go:225)	PCDATA	$1, $81
	0x1f56 08022 (pointer_vs_value/code/benchmark_invocation_test.go:225)	LEAQ	""..autotmp_186+1728(SP), SI
	0x1f5e 08030 (pointer_vs_value/code/benchmark_invocation_test.go:225)	PCDATA	$0, $0
	0x1f5e 08030 (pointer_vs_value/code/benchmark_invocation_test.go:225)	DUFFCOPY	$168
	0x1f71 08049 (pointer_vs_value/code/benchmark_invocation_test.go:225)	MOVQ	2560(SP), BP
	0x1f79 08057 (pointer_vs_value/code/benchmark_invocation_test.go:225)	ADDQ	$2568, SP
	0x1f80 08064 (pointer_vs_value/code/benchmark_invocation_test.go:225)	RET
	0x1f81 08065 (pointer_vs_value/code/benchmark_invocation_test.go:225)	NOP
	0x1f81 08065 (pointer_vs_value/code/benchmark_invocation_test.go:224)	PCDATA	$1, $-1
	0x1f81 08065 (pointer_vs_value/code/benchmark_invocation_test.go:224)	PCDATA	$0, $-1
	0x1f81 08065 (pointer_vs_value/code/benchmark_invocation_test.go:224)	CALL	runtime.morestack_noctxt(SB)
	0x1f86 08070 (pointer_vs_value/code/benchmark_invocation_test.go:224)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 78 f6 ff  eH..%....H..$x..
	0x0010 ff 48 3b 41 10 0f 86 66 1f 00 00 48 81 ec 08 0a  .H;A...f...H....
	0x0020 00 00 48 89 ac 24 00 0a 00 00 48 8d ac 24 00 0a  ..H..$....H..$..
	0x0030 00 00 48 8d bc 24 10 0a 00 00 0f 57 c0 48 89 6c  ..H..$.....W.H.l
	0x0040 24 f0 48 8d 6c 24 f0 e8 00 00 00 00 48 8b 6d 00  $.H.l$......H.m.
	0x0050 48 c7 84 24 d8 00 00 00 00 00 00 00 48 8b 05 00  H..$........H...
	0x0060 00 00 00 48 89 84 24 50 04 00 00 48 c7 84 24 f8  ...H..$P...H..$.
	0x0070 00 00 00 00 00 00 00 48 8b 84 24 50 04 00 00 84  .......H..$P....
	0x0080 00 48 8b 08 84 01 48 8b 49 18 48 8b 40 08 48 89  .H....H.I.H.@.H.
	0x0090 04 24 ff d1 48 8b 44 24 08 48 89 84 24 38 04 00  .$..H.D$.H..$8..
	0x00a0 00 48 89 84 24 f8 00 00 00 eb 00 48 8b 84 24 f8  .H..$......H..$.
	0x00b0 00 00 00 48 89 84 24 58 03 00 00 48 89 84 24 d8  ...H..$X...H..$.
	0x00c0 00 00 00 eb 00 48 c7 84 24 98 01 00 00 00 00 00  .....H..$.......
	0x00d0 00 48 8b 05 00 00 00 00 48 89 84 24 68 04 00 00  .H......H..$h...
	0x00e0 48 c7 84 24 a0 01 00 00 00 00 00 00 48 8b 84 24  H..$........H..$
	0x00f0 68 04 00 00 84 00 48 8b 08 84 01 48 8b 49 18 48  h.....H....H.I.H
	0x0100 8b 40 08 48 89 04 24 ff d1 48 8b 44 24 08 48 89  .@.H..$..H.D$.H.
	0x0110 84 24 38 04 00 00 48 89 84 24 a0 01 00 00 eb 00  .$8...H..$......
	0x0120 48 8b 84 24 a0 01 00 00 48 89 84 24 50 03 00 00  H..$....H..$P...
	0x0130 48 89 84 24 98 01 00 00 eb 00 48 c7 84 24 a8 01  H..$......H..$..
	0x0140 00 00 00 00 00 00 48 8b 05 00 00 00 00 48 89 84  ......H......H..
	0x0150 24 80 04 00 00 48 c7 84 24 b0 01 00 00 00 00 00  $....H..$.......
	0x0160 00 48 8b 84 24 80 04 00 00 84 00 48 8b 08 84 01  .H..$......H....
	0x0170 48 8b 49 18 48 8b 40 08 48 89 04 24 ff d1 48 8b  H.I.H.@.H..$..H.
	0x0180 44 24 08 48 89 84 24 38 04 00 00 48 89 84 24 b0  D$.H..$8...H..$.
	0x0190 01 00 00 eb 00 48 8b 84 24 b0 01 00 00 48 89 84  .....H..$....H..
	0x01a0 24 48 03 00 00 48 89 84 24 a8 01 00 00 eb 00 48  $H...H..$......H
	0x01b0 c7 84 24 b8 01 00 00 00 00 00 00 48 8b 05 00 00  ..$........H....
	0x01c0 00 00 48 89 84 24 b8 04 00 00 48 c7 84 24 90 01  ..H..$....H..$..
	0x01d0 00 00 00 00 00 00 48 8b 84 24 b8 04 00 00 84 00  ......H..$......
	0x01e0 48 8b 08 84 01 48 8b 49 18 48 8b 40 08 48 89 04  H....H.I.H.@.H..
	0x01f0 24 ff d1 48 8b 44 24 08 48 89 84 24 38 04 00 00  $..H.D$.H..$8...
	0x0200 48 89 84 24 90 01 00 00 eb 00 48 8b 84 24 90 01  H..$......H..$..
	0x0210 00 00 48 89 84 24 40 03 00 00 48 89 84 24 b8 01  ..H..$@...H..$..
	0x0220 00 00 eb 00 48 c7 84 24 80 01 00 00 00 00 00 00  ....H..$........
	0x0230 48 8b 05 00 00 00 00 48 89 84 24 e0 04 00 00 48  H......H..$....H
	0x0240 c7 84 24 78 01 00 00 00 00 00 00 48 8b 84 24 e0  ..$x.......H..$.
	0x0250 04 00 00 84 00 48 8b 08 84 01 48 8b 49 18 48 8b  .....H....H.I.H.
	0x0260 40 08 48 89 04 24 ff d1 48 8b 44 24 08 48 89 84  @.H..$..H.D$.H..
	0x0270 24 38 04 00 00 48 89 84 24 78 01 00 00 eb 00 48  $8...H..$x.....H
	0x0280 8b 84 24 78 01 00 00 48 89 84 24 38 03 00 00 48  ..$x...H..$8...H
	0x0290 89 84 24 80 01 00 00 eb 00 48 c7 84 24 70 01 00  ..$......H..$p..
	0x02a0 00 00 00 00 00 48 8b 05 00 00 00 00 48 89 84 24  .....H......H..$
	0x02b0 e8 04 00 00 48 c7 84 24 68 01 00 00 00 00 00 00  ....H..$h.......
	0x02c0 48 8b 84 24 e8 04 00 00 84 00 48 8b 08 84 01 48  H..$......H....H
	0x02d0 8b 49 18 48 8b 40 08 48 89 04 24 ff d1 48 8b 44  .I.H.@.H..$..H.D
	0x02e0 24 08 48 89 84 24 38 04 00 00 48 89 84 24 68 01  $.H..$8...H..$h.
	0x02f0 00 00 eb 00 48 8b 84 24 68 01 00 00 48 89 84 24  ....H..$h...H..$
	0x0300 30 03 00 00 48 89 84 24 70 01 00 00 eb 00 48 c7  0...H..$p.....H.
	0x0310 84 24 60 01 00 00 00 00 00 00 48 8b 05 00 00 00  .$`.......H.....
	0x0320 00 48 89 84 24 f0 04 00 00 48 c7 84 24 88 01 00  .H..$....H..$...
	0x0330 00 00 00 00 00 48 8b 84 24 f0 04 00 00 84 00 48  .....H..$......H
	0x0340 8b 08 84 01 48 8b 49 18 48 8b 40 08 48 89 04 24  ....H.I.H.@.H..$
	0x0350 ff d1 48 8b 44 24 08 48 89 84 24 38 04 00 00 48  ..H.D$.H..$8...H
	0x0360 89 84 24 88 01 00 00 eb 00 48 8b 84 24 88 01 00  ..$......H..$...
	0x0370 00 48 89 84 24 28 03 00 00 48 89 84 24 60 01 00  .H..$(...H..$`..
	0x0380 00 eb 00 48 c7 84 24 58 01 00 00 00 00 00 00 48  ...H..$X.......H
	0x0390 8b 05 00 00 00 00 48 89 84 24 88 04 00 00 48 c7  ......H..$....H.
	0x03a0 84 24 50 01 00 00 00 00 00 00 48 8b 84 24 88 04  .$P.......H..$..
	0x03b0 00 00 84 00 48 8b 08 84 01 48 8b 49 18 48 8b 40  ....H....H.I.H.@
	0x03c0 08 48 89 04 24 ff d1 48 8b 44 24 08 48 89 84 24  .H..$..H.D$.H..$
	0x03d0 38 04 00 00 48 89 84 24 50 01 00 00 eb 00 48 8b  8...H..$P.....H.
	0x03e0 84 24 50 01 00 00 48 89 84 24 20 03 00 00 48 89  .$P...H..$ ...H.
	0x03f0 84 24 58 01 00 00 eb 00 48 c7 84 24 48 01 00 00  .$X.....H..$H...
	0x0400 00 00 00 00 48 8b 05 00 00 00 00 48 89 84 24 f8  ....H......H..$.
	0x0410 04 00 00 48 c7 84 24 40 01 00 00 00 00 00 00 48  ...H..$@.......H
	0x0420 8b 84 24 f8 04 00 00 84 00 48 8b 08 84 01 48 8b  ..$......H....H.
	0x0430 49 18 48 8b 40 08 48 89 04 24 ff d1 48 8b 44 24  I.H.@.H..$..H.D$
	0x0440 08 48 89 84 24 38 04 00 00 48 89 84 24 40 01 00  .H..$8...H..$@..
	0x0450 00 eb 00 48 8b 84 24 40 01 00 00 48 89 84 24 18  ...H..$@...H..$.
	0x0460 03 00 00 48 89 84 24 48 01 00 00 eb 00 48 c7 84  ...H..$H.....H..
	0x0470 24 30 01 00 00 00 00 00 00 48 8b 05 00 00 00 00  $0.......H......
	0x0480 48 89 84 24 00 05 00 00 48 c7 84 24 28 01 00 00  H..$....H..$(...
	0x0490 00 00 00 00 48 8b 84 24 00 05 00 00 84 00 48 8b  ....H..$......H.
	0x04a0 08 84 01 48 8b 49 18 48 8b 40 08 48 89 04 24 ff  ...H.I.H.@.H..$.
	0x04b0 d1 48 8b 44 24 08 48 89 84 24 38 04 00 00 48 89  .H.D$.H..$8...H.
	0x04c0 84 24 28 01 00 00 eb 00 48 8b 84 24 28 01 00 00  .$(.....H..$(...
	0x04d0 48 89 84 24 10 03 00 00 48 89 84 24 30 01 00 00  H..$....H..$0...
	0x04e0 eb 00 48 c7 84 24 20 01 00 00 00 00 00 00 48 8b  ..H..$ .......H.
	0x04f0 05 00 00 00 00 48 89 84 24 b0 04 00 00 48 c7 84  .....H..$....H..
	0x0500 24 18 01 00 00 00 00 00 00 48 8b 84 24 b0 04 00  $........H..$...
	0x0510 00 84 00 48 8b 08 84 01 48 8b 49 18 48 8b 40 08  ...H....H.I.H.@.
	0x0520 48 89 04 24 ff d1 48 8b 44 24 08 48 89 84 24 38  H..$..H.D$.H..$8
	0x0530 04 00 00 48 89 84 24 18 01 00 00 eb 00 48 8b 84  ...H..$......H..
	0x0540 24 18 01 00 00 48 89 84 24 08 03 00 00 48 89 84  $....H..$....H..
	0x0550 24 20 01 00 00 eb 00 48 c7 84 24 10 01 00 00 00  $ .....H..$.....
	0x0560 00 00 00 48 8b 05 00 00 00 00 48 89 84 24 d8 04  ...H......H..$..
	0x0570 00 00 48 c7 84 24 08 01 00 00 00 00 00 00 48 8b  ..H..$........H.
	0x0580 84 24 d8 04 00 00 84 00 48 8b 08 84 01 48 8b 49  .$......H....H.I
	0x0590 18 48 8b 40 08 48 89 04 24 ff d1 48 8b 44 24 08  .H.@.H..$..H.D$.
	0x05a0 48 89 84 24 38 04 00 00 48 89 84 24 08 01 00 00  H..$8...H..$....
	0x05b0 eb 00 48 8b 84 24 08 01 00 00 48 89 84 24 00 03  ..H..$....H..$..
	0x05c0 00 00 48 89 84 24 10 01 00 00 eb 00 48 c7 84 24  ..H..$......H..$
	0x05d0 00 01 00 00 00 00 00 00 48 8b 05 00 00 00 00 48  ........H......H
	0x05e0 89 84 24 c0 04 00 00 48 c7 84 24 f0 00 00 00 00  ..$....H..$.....
	0x05f0 00 00 00 48 8b 84 24 c0 04 00 00 84 00 48 8b 08  ...H..$......H..
	0x0600 84 01 48 8b 49 18 48 8b 40 08 48 89 04 24 ff d1  ..H.I.H.@.H..$..
	0x0610 48 8b 44 24 08 48 89 84 24 38 04 00 00 48 89 84  H.D$.H..$8...H..
	0x0620 24 f0 00 00 00 eb 00 48 8b 84 24 f0 00 00 00 48  $......H..$....H
	0x0630 89 84 24 f8 02 00 00 48 89 84 24 00 01 00 00 eb  ..$....H..$.....
	0x0640 00 48 c7 84 24 e8 00 00 00 00 00 00 00 48 8b 05  .H..$........H..
	0x0650 00 00 00 00 48 89 84 24 a8 04 00 00 48 c7 84 24  ....H..$....H..$
	0x0660 e0 00 00 00 00 00 00 00 48 8b 84 24 a8 04 00 00  ........H..$....
	0x0670 84 00 48 8b 08 84 01 48 8b 49 18 48 8b 40 08 48  ..H....H.I.H.@.H
	0x0680 89 04 24 ff d1 48 8b 44 24 08 48 89 84 24 38 04  ..$..H.D$.H..$8.
	0x0690 00 00 48 89 84 24 e0 00 00 00 eb 00 48 8b 84 24  ..H..$......H..$
	0x06a0 e0 00 00 00 48 89 84 24 f0 02 00 00 48 89 84 24  ....H..$....H..$
	0x06b0 e8 00 00 00 eb 00 48 c7 84 24 c8 00 00 00 00 00  ......H..$......
	0x06c0 00 00 48 8b 05 00 00 00 00 48 89 84 24 90 04 00  ..H......H..$...
	0x06d0 00 48 c7 84 24 c0 00 00 00 00 00 00 00 48 8b 84  .H..$........H..
	0x06e0 24 90 04 00 00 84 00 48 8b 08 84 01 48 8b 49 18  $......H....H.I.
	0x06f0 48 8b 40 08 48 89 04 24 ff d1 48 8b 44 24 08 48  H.@.H..$..H.D$.H
	0x0700 89 84 24 38 04 00 00 48 89 84 24 c0 00 00 00 eb  ..$8...H..$.....
	0x0710 00 48 8b 84 24 c0 00 00 00 48 89 84 24 e8 02 00  .H..$....H..$...
	0x0720 00 48 89 84 24 c8 00 00 00 eb 00 48 c7 84 24 b8  .H..$......H..$.
	0x0730 00 00 00 00 00 00 00 48 8b 05 00 00 00 00 48 89  .......H......H.
	0x0740 84 24 78 04 00 00 48 c7 84 24 b0 00 00 00 00 00  .$x...H..$......
	0x0750 00 00 48 8b 84 24 78 04 00 00 84 00 48 8b 08 84  ..H..$x.....H...
	0x0760 01 48 8b 49 18 48 8b 40 08 48 89 04 24 ff d1 48  .H.I.H.@.H..$..H
	0x0770 8b 44 24 08 48 89 84 24 38 04 00 00 48 89 84 24  .D$.H..$8...H..$
	0x0780 b0 00 00 00 eb 00 48 8b 84 24 b0 00 00 00 48 89  ......H..$....H.
	0x0790 84 24 e0 02 00 00 48 89 84 24 b8 00 00 00 eb 00  .$....H..$......
	0x07a0 48 c7 84 24 a8 00 00 00 00 00 00 00 48 8b 05 00  H..$........H...
	0x07b0 00 00 00 48 89 84 24 60 04 00 00 48 c7 84 24 a0  ...H..$`...H..$.
	0x07c0 00 00 00 00 00 00 00 48 8b 84 24 60 04 00 00 84  .......H..$`....
	0x07d0 00 48 8b 08 84 01 48 8b 49 18 48 8b 40 08 48 89  .H....H.I.H.@.H.
	0x07e0 04 24 ff d1 48 8b 44 24 08 48 89 84 24 38 04 00  .$..H.D$.H..$8..
	0x07f0 00 48 89 84 24 a0 00 00 00 eb 00 48 8b 84 24 a0  .H..$......H..$.
	0x0800 00 00 00 48 89 84 24 d8 02 00 00 48 89 84 24 a8  ...H..$....H..$.
	0x0810 00 00 00 eb 00 48 c7 84 24 98 00 00 00 00 00 00  .....H..$.......
	0x0820 00 48 8b 05 00 00 00 00 48 89 84 24 48 04 00 00  .H......H..$H...
	0x0830 48 c7 84 24 90 00 00 00 00 00 00 00 48 8b 84 24  H..$........H..$
	0x0840 48 04 00 00 84 00 48 8b 08 84 01 48 8b 49 18 48  H.....H....H.I.H
	0x0850 8b 40 08 48 89 04 24 ff d1 48 8b 44 24 08 48 89  .@.H..$..H.D$.H.
	0x0860 84 24 38 04 00 00 48 89 84 24 90 00 00 00 eb 00  .$8...H..$......
	0x0870 48 8b 84 24 90 00 00 00 48 89 84 24 d0 02 00 00  H..$....H..$....
	0x0880 48 89 84 24 98 00 00 00 eb 00 48 c7 44 24 20 00  H..$......H.D$ .
	0x0890 00 00 00 48 8b 05 00 00 00 00 48 89 84 24 d0 04  ...H......H..$..
	0x08a0 00 00 48 c7 84 24 80 00 00 00 00 00 00 00 48 8b  ..H..$........H.
	0x08b0 84 24 d0 04 00 00 84 00 48 8b 08 84 01 48 8b 49  .$......H....H.I
	0x08c0 18 48 8b 40 08 48 89 04 24 ff d1 48 8b 44 24 08  .H.@.H..$..H.D$.
	0x08d0 48 89 84 24 38 04 00 00 48 89 84 24 80 00 00 00  H..$8...H..$....
	0x08e0 eb 00 48 8b 84 24 80 00 00 00 48 89 84 24 c8 02  ..H..$....H..$..
	0x08f0 00 00 48 89 44 24 20 eb 00 48 c7 44 24 68 00 00  ..H.D$ ..H.D$h..
	0x0900 00 00 48 8b 05 00 00 00 00 48 89 84 24 98 04 00  ..H......H..$...
	0x0910 00 48 c7 44 24 50 00 00 00 00 48 8b 84 24 98 04  .H.D$P....H..$..
	0x0920 00 00 84 00 48 8b 08 84 01 48 8b 49 18 48 8b 40  ....H....H.I.H.@
	0x0930 08 48 89 04 24 ff d1 48 8b 44 24 08 48 89 84 24  .H..$..H.D$.H..$
	0x0940 38 04 00 00 48 89 44 24 50 eb 00 48 8b 44 24 50  8...H.D$P..H.D$P
	0x0950 48 89 84 24 c0 02 00 00 48 89 44 24 68 eb 00 48  H..$....H.D$h..H
	0x0960 c7 44 24 48 00 00 00 00 48 8b 05 00 00 00 00 48  .D$H....H......H
	0x0970 89 84 24 58 04 00 00 48 c7 44 24 38 00 00 00 00  ..$X...H.D$8....
	0x0980 48 8b 84 24 58 04 00 00 84 00 48 8b 08 84 01 48  H..$X.....H....H
	0x0990 8b 49 18 48 8b 40 08 48 89 04 24 ff d1 48 8b 44  .I.H.@.H..$..H.D
	0x09a0 24 08 48 89 84 24 38 04 00 00 48 89 44 24 38 eb  $.H..$8...H.D$8.
	0x09b0 00 48 8b 44 24 38 48 89 84 24 b8 02 00 00 48 89  .H.D$8H..$....H.
	0x09c0 44 24 48 eb 00 48 c7 84 24 d0 00 00 00 00 00 00  D$H..H..$.......
	0x09d0 00 48 8b 05 00 00 00 00 48 89 84 24 08 05 00 00  .H......H..$....
	0x09e0 48 c7 44 24 28 00 00 00 00 48 8b 84 24 08 05 00  H.D$(....H..$...
	0x09f0 00 84 00 48 8b 08 84 01 48 8b 40 08 48 8b 49 18  ...H....H.@.H.I.
	0x0a00 48 89 04 24 ff d1 48 8b 44 24 08 48 89 84 24 38  H..$..H.D$.H..$8
	0x0a10 04 00 00 48 89 44 24 28 eb 00 48 8b 44 24 28 48  ...H.D$(..H.D$(H
	0x0a20 89 84 24 b0 02 00 00 48 89 84 24 d0 00 00 00 eb  ..$....H..$.....
	0x0a30 00 48 c7 44 24 30 00 00 00 00 48 8b 05 00 00 00  .H.D$0....H.....
	0x0a40 00 48 89 84 24 40 04 00 00 48 c7 44 24 40 00 00  .H..$@...H.D$@..
	0x0a50 00 00 48 8b 84 24 40 04 00 00 84 00 48 8b 08 84  ..H..$@.....H...
	0x0a60 01 48 8b 40 08 48 8b 49 18 48 89 04 24 ff d1 48  .H.@.H.I.H..$..H
	0x0a70 8b 44 24 08 48 89 84 24 38 04 00 00 48 89 44 24  .D$.H..$8...H.D$
	0x0a80 40 eb 00 48 8b 44 24 40 48 89 84 24 a8 02 00 00  @..H.D$@H..$....
	0x0a90 48 89 44 24 30 eb 00 48 c7 84 24 38 01 00 00 00  H.D$0..H..$8....
	0x0aa0 00 00 00 48 8b 05 00 00 00 00 48 89 84 24 70 04  ...H......H..$p.
	0x0ab0 00 00 48 c7 44 24 58 00 00 00 00 48 8b 84 24 70  ..H.D$X....H..$p
	0x0ac0 04 00 00 84 00 48 8b 08 84 01 48 8b 40 08 48 8b  .....H....H.@.H.
	0x0ad0 49 18 48 89 04 24 ff d1 48 8b 44 24 08 48 89 84  I.H..$..H.D$.H..
	0x0ae0 24 38 04 00 00 48 89 44 24 58 eb 00 48 8b 44 24  $8...H.D$X..H.D$
	0x0af0 58 48 89 84 24 a0 02 00 00 48 89 84 24 38 01 00  XH..$....H..$8..
	0x0b00 00 eb 00 48 c7 44 24 60 00 00 00 00 48 8b 05 00  ...H.D$`....H...
	0x0b10 00 00 00 48 89 84 24 a0 04 00 00 48 c7 44 24 70  ...H..$....H.D$p
	0x0b20 00 00 00 00 48 8b 84 24 a0 04 00 00 84 00 48 8b  ....H..$......H.
	0x0b30 08 84 01 48 8b 40 08 48 8b 49 18 48 89 04 24 ff  ...H.@.H.I.H..$.
	0x0b40 d1 48 8b 44 24 08 48 89 84 24 38 04 00 00 48 89  .H.D$.H..$8...H.
	0x0b50 44 24 70 eb 00 48 8b 44 24 70 48 89 84 24 98 02  D$p..H.D$pH..$..
	0x0b60 00 00 48 89 44 24 60 eb 00 48 c7 44 24 78 00 00  ..H.D$`..H.D$x..
	0x0b70 00 00 48 8b 05 00 00 00 00 48 89 84 24 c8 04 00  ..H......H..$...
	0x0b80 00 48 c7 84 24 88 00 00 00 00 00 00 00 48 8b 84  .H..$........H..
	0x0b90 24 c8 04 00 00 84 00 48 8b 08 84 01 48 8b 40 08  $......H....H.@.
	0x0ba0 48 8b 49 18 48 89 04 24 ff d1 48 8b 44 24 08 48  H.I.H..$..H.D$.H
	0x0bb0 89 84 24 38 04 00 00 48 89 84 24 88 00 00 00 eb  ..$8...H..$.....
	0x0bc0 00 48 8b 84 24 88 00 00 00 48 89 84 24 90 02 00  .H..$....H..$...
	0x0bd0 00 48 89 44 24 78 eb 00 e8 00 00 00 00 f2 0f 10  .H.D$x..........
	0x0be0 04 24 f2 0f 11 84 24 30 04 00 00 e8 00 00 00 00  .$....$0........
	0x0bf0 f2 0f 10 04 24 f2 0f 11 84 24 28 04 00 00 e8 00  ....$....$(.....
	0x0c00 00 00 00 f2 0f 10 04 24 f2 0f 11 84 24 20 04 00  .......$....$ ..
	0x0c10 00 e8 00 00 00 00 f2 0f 10 04 24 f2 0f 11 84 24  ..........$....$
	0x0c20 18 04 00 00 e8 00 00 00 00 f2 0f 10 04 24 f2 0f  .............$..
	0x0c30 11 84 24 10 04 00 00 e8 00 00 00 00 f2 0f 10 04  ..$.............
	0x0c40 24 f2 0f 11 84 24 08 04 00 00 e8 00 00 00 00 f2  $....$..........
	0x0c50 0f 10 04 24 f2 0f 11 84 24 00 04 00 00 e8 00 00  ...$....$.......
	0x0c60 00 00 f2 0f 10 04 24 f2 0f 11 84 24 f8 03 00 00  ......$....$....
	0x0c70 e8 00 00 00 00 f2 0f 10 04 24 f2 0f 11 84 24 f0  .........$....$.
	0x0c80 03 00 00 e8 00 00 00 00 f2 0f 10 04 24 f2 0f 11  ............$...
	0x0c90 84 24 e8 03 00 00 e8 00 00 00 00 f2 0f 10 04 24  .$.............$
	0x0ca0 f2 0f 11 84 24 e0 03 00 00 e8 00 00 00 00 f2 0f  ....$...........
	0x0cb0 10 04 24 f2 0f 11 84 24 d8 03 00 00 e8 00 00 00  ..$....$........
	0x0cc0 00 f2 0f 10 04 24 f2 0f 11 84 24 d0 03 00 00 e8  .....$....$.....
	0x0cd0 00 00 00 00 f2 0f 10 04 24 f2 0f 11 84 24 c8 03  ........$....$..
	0x0ce0 00 00 e8 00 00 00 00 f2 0f 10 04 24 f2 0f 11 84  ...........$....
	0x0cf0 24 c0 03 00 00 e8 00 00 00 00 f2 0f 10 04 24 f2  $.............$.
	0x0d00 0f 11 84 24 b8 03 00 00 e8 00 00 00 00 f2 0f 10  ...$............
	0x0d10 04 24 f2 0f 11 84 24 b0 03 00 00 e8 00 00 00 00  .$....$.........
	0x0d20 f2 0f 10 04 24 f2 0f 11 84 24 a8 03 00 00 e8 00  ....$....$......
	0x0d30 00 00 00 f2 0f 10 04 24 f2 0f 11 84 24 a0 03 00  .......$....$...
	0x0d40 00 e8 00 00 00 00 f2 0f 10 04 24 f2 0f 11 84 24  ..........$....$
	0x0d50 98 03 00 00 e8 00 00 00 00 f2 0f 10 04 24 f2 0f  .............$..
	0x0d60 11 84 24 90 03 00 00 e8 00 00 00 00 f2 0f 10 04  ..$.............
	0x0d70 24 f2 0f 11 84 24 88 03 00 00 e8 00 00 00 00 f2  $....$..........
	0x0d80 0f 10 04 24 f2 0f 11 84 24 80 03 00 00 e8 00 00  ...$....$.......
	0x0d90 00 00 f2 0f 10 04 24 f2 0f 11 84 24 78 03 00 00  ......$....$x...
	0x0da0 e8 00 00 00 00 f2 0f 10 04 24 f2 0f 11 84 24 70  .........$....$p
	0x0db0 03 00 00 e8 00 00 00 00 f2 0f 10 04 24 f2 0f 11  ............$...
	0x0dc0 84 24 68 03 00 00 e8 00 00 00 00 48 8b 04 24 48  .$h........H..$H
	0x0dd0 89 84 24 60 03 00 00 48 89 84 24 d0 01 00 00 0f  ..$`...H..$.....
	0x0de0 57 c0 0f 11 84 24 e0 05 00 00 48 8b 84 24 d0 01  W....$....H..$..
	0x0df0 00 00 48 89 04 24 48 c7 44 24 08 0a 00 00 00 e8  ..H..$H.D$......
	0x0e00 00 00 00 00 48 8b 44 24 18 48 8b 4c 24 10 48 89  ....H.D$.H.L$.H.
	0x0e10 8c 24 b0 06 00 00 48 89 84 24 b8 06 00 00 48 89  .$....H..$....H.
	0x0e20 8c 24 e0 05 00 00 48 89 84 24 e8 05 00 00 eb 00  .$....H..$......
	0x0e30 e8 00 00 00 00 48 8b 04 24 48 89 84 24 60 03 00  .....H..$H..$`..
	0x0e40 00 48 89 84 24 e0 01 00 00 0f 57 c0 0f 11 84 24  .H..$.....W....$
	0x0e50 d0 05 00 00 48 8b 84 24 e0 01 00 00 48 89 04 24  ....H..$....H..$
	0x0e60 48 c7 44 24 08 0a 00 00 00 e8 00 00 00 00 48 8b  H.D$..........H.
	0x0e70 44 24 18 48 8b 4c 24 10 48 89 8c 24 b0 06 00 00  D$.H.L$.H..$....
	0x0e80 48 89 84 24 b8 06 00 00 48 89 8c 24 d0 05 00 00  H..$....H..$....
	0x0e90 48 89 84 24 d8 05 00 00 eb 00 e8 00 00 00 00 48  H..$...........H
	0x0ea0 8b 04 24 48 89 84 24 60 03 00 00 48 89 84 24 f0  ..$H..$`...H..$.
	0x0eb0 01 00 00 0f 57 c0 0f 11 84 24 60 05 00 00 48 8b  ....W....$`...H.
	0x0ec0 84 24 f0 01 00 00 48 89 04 24 48 c7 44 24 08 0a  .$....H..$H.D$..
	0x0ed0 00 00 00 e8 00 00 00 00 48 8b 44 24 18 48 8b 4c  ........H.D$.H.L
	0x0ee0 24 10 48 89 8c 24 b0 06 00 00 48 89 84 24 b8 06  $.H..$....H..$..
	0x0ef0 00 00 48 89 8c 24 60 05 00 00 48 89 84 24 68 05  ..H..$`...H..$h.
	0x0f00 00 00 eb 00 e8 00 00 00 00 48 8b 04 24 48 89 84  .........H..$H..
	0x0f10 24 60 03 00 00 48 89 84 24 00 02 00 00 0f 57 c0  $`...H..$.....W.
	0x0f20 0f 11 84 24 90 06 00 00 48 8b 84 24 00 02 00 00  ...$....H..$....
	0x0f30 48 89 04 24 48 c7 44 24 08 0a 00 00 00 e8 00 00  H..$H.D$........
	0x0f40 00 00 48 8b 44 24 18 48 8b 4c 24 10 48 89 8c 24  ..H.D$.H.L$.H..$
	0x0f50 b0 06 00 00 48 89 84 24 b8 06 00 00 48 89 8c 24  ....H..$....H..$
	0x0f60 90 06 00 00 48 89 84 24 98 06 00 00 eb 00 e8 00  ....H..$........
	0x0f70 00 00 00 48 8b 04 24 48 89 84 24 60 03 00 00 48  ...H..$H..$`...H
	0x0f80 89 84 24 08 02 00 00 0f 57 c0 0f 11 84 24 80 06  ..$.....W....$..
	0x0f90 00 00 48 8b 84 24 08 02 00 00 48 89 04 24 48 c7  ..H..$....H..$H.
	0x0fa0 44 24 08 0a 00 00 00 e8 00 00 00 00 48 8b 44 24  D$..........H.D$
	0x0fb0 18 48 8b 4c 24 10 48 89 8c 24 b0 06 00 00 48 89  .H.L$.H..$....H.
	0x0fc0 84 24 b8 06 00 00 48 89 8c 24 80 06 00 00 48 89  .$....H..$....H.
	0x0fd0 84 24 88 06 00 00 eb 00 e8 00 00 00 00 48 8b 04  .$...........H..
	0x0fe0 24 48 89 84 24 60 03 00 00 48 89 84 24 10 02 00  $H..$`...H..$...
	0x0ff0 00 0f 57 c0 0f 11 84 24 60 06 00 00 48 8b 84 24  ..W....$`...H..$
	0x1000 10 02 00 00 48 89 04 24 48 c7 44 24 08 0a 00 00  ....H..$H.D$....
	0x1010 00 e8 00 00 00 00 48 8b 44 24 18 48 8b 4c 24 10  ......H.D$.H.L$.
	0x1020 48 89 8c 24 b0 06 00 00 48 89 84 24 b8 06 00 00  H..$....H..$....
	0x1030 48 89 8c 24 60 06 00 00 48 89 84 24 68 06 00 00  H..$`...H..$h...
	0x1040 eb 00 e8 00 00 00 00 48 8b 04 24 48 89 84 24 60  .......H..$H..$`
	0x1050 03 00 00 48 89 84 24 20 02 00 00 0f 57 c0 0f 11  ...H..$ ....W...
	0x1060 84 24 50 06 00 00 48 8b 84 24 20 02 00 00 48 89  .$P...H..$ ...H.
	0x1070 04 24 48 c7 44 24 08 0a 00 00 00 e8 00 00 00 00  .$H.D$..........
	0x1080 48 8b 44 24 18 48 8b 4c 24 10 48 89 8c 24 b0 06  H.D$.H.L$.H..$..
	0x1090 00 00 48 89 84 24 b8 06 00 00 48 89 8c 24 50 06  ..H..$....H..$P.
	0x10a0 00 00 48 89 84 24 58 06 00 00 eb 00 e8 00 00 00  ..H..$X.........
	0x10b0 00 48 8b 04 24 48 89 84 24 60 03 00 00 48 89 84  .H..$H..$`...H..
	0x10c0 24 70 02 00 00 0f 57 c0 0f 11 84 24 40 06 00 00  $p....W....$@...
	0x10d0 48 8b 84 24 70 02 00 00 48 89 04 24 48 c7 44 24  H..$p...H..$H.D$
	0x10e0 08 0a 00 00 00 e8 00 00 00 00 48 8b 44 24 18 48  ..........H.D$.H
	0x10f0 8b 4c 24 10 48 89 8c 24 b0 06 00 00 48 89 84 24  .L$.H..$....H..$
	0x1100 b8 06 00 00 48 89 8c 24 40 06 00 00 48 89 84 24  ....H..$@...H..$
	0x1110 48 06 00 00 eb 00 e8 00 00 00 00 48 8b 04 24 48  H..........H..$H
	0x1120 89 84 24 60 03 00 00 48 89 84 24 d8 01 00 00 0f  ..$`...H..$.....
	0x1130 57 c0 0f 11 84 24 30 06 00 00 48 8b 84 24 d8 01  W....$0...H..$..
	0x1140 00 00 48 89 04 24 48 c7 44 24 08 0a 00 00 00 e8  ..H..$H.D$......
	0x1150 00 00 00 00 48 8b 44 24 18 48 8b 4c 24 10 48 89  ....H.D$.H.L$.H.
	0x1160 8c 24 b0 06 00 00 48 89 84 24 b8 06 00 00 48 89  .$....H..$....H.
	0x1170 8c 24 30 06 00 00 48 89 84 24 38 06 00 00 eb 00  .$0...H..$8.....
	0x1180 e8 00 00 00 00 48 8b 04 24 48 89 84 24 60 03 00  .....H..$H..$`..
	0x1190 00 48 89 84 24 30 02 00 00 0f 57 c0 0f 11 84 24  .H..$0....W....$
	0x11a0 90 05 00 00 48 8b 84 24 30 02 00 00 48 89 04 24  ....H..$0...H..$
	0x11b0 48 c7 44 24 08 0a 00 00 00 e8 00 00 00 00 48 8b  H.D$..........H.
	0x11c0 44 24 18 48 8b 4c 24 10 48 89 8c 24 b0 06 00 00  D$.H.L$.H..$....
	0x11d0 48 89 84 24 b8 06 00 00 48 89 8c 24 90 05 00 00  H..$....H..$....
	0x11e0 48 89 84 24 98 05 00 00 eb 00 e8 00 00 00 00 48  H..$...........H
	0x11f0 8b 04 24 48 89 84 24 60 03 00 00 48 89 84 24 88  ..$H..$`...H..$.
	0x1200 02 00 00 0f 57 c0 0f 11 84 24 20 06 00 00 48 8b  ....W....$ ...H.
	0x1210 84 24 88 02 00 00 48 89 04 24 48 c7 44 24 08 0a  .$....H..$H.D$..
	0x1220 00 00 00 e8 00 00 00 00 48 8b 44 24 18 48 8b 4c  ........H.D$.H.L
	0x1230 24 10 48 89 8c 24 b0 06 00 00 48 89 84 24 b8 06  $.H..$....H..$..
	0x1240 00 00 48 89 8c 24 20 06 00 00 48 89 84 24 28 06  ..H..$ ...H..$(.
	0x1250 00 00 eb 00 e8 00 00 00 00 48 8b 04 24 48 89 84  .........H..$H..
	0x1260 24 60 03 00 00 48 89 84 24 40 02 00 00 0f 57 c0  $`...H..$@....W.
	0x1270 0f 11 84 24 10 06 00 00 48 8b 84 24 40 02 00 00  ...$....H..$@...
	0x1280 48 89 04 24 48 c7 44 24 08 0a 00 00 00 e8 00 00  H..$H.D$........
	0x1290 00 00 48 8b 44 24 18 48 8b 4c 24 10 48 89 8c 24  ..H.D$.H.L$.H..$
	0x12a0 b0 06 00 00 48 89 84 24 b8 06 00 00 48 89 8c 24  ....H..$....H..$
	0x12b0 10 06 00 00 48 89 84 24 18 06 00 00 eb 00 e8 00  ....H..$........
	0x12c0 00 00 00 48 8b 04 24 48 89 84 24 60 03 00 00 48  ...H..$H..$`...H
	0x12d0 89 84 24 50 02 00 00 0f 57 c0 0f 11 84 24 00 06  ..$P....W....$..
	0x12e0 00 00 48 8b 84 24 50 02 00 00 48 89 04 24 48 c7  ..H..$P...H..$H.
	0x12f0 44 24 08 0a 00 00 00 e8 00 00 00 00 48 8b 44 24  D$..........H.D$
	0x1300 18 48 8b 4c 24 10 48 89 8c 24 b0 06 00 00 48 89  .H.L$.H..$....H.
	0x1310 84 24 b8 06 00 00 48 89 8c 24 00 06 00 00 48 89  .$....H..$....H.
	0x1320 84 24 08 06 00 00 eb 00 e8 00 00 00 00 48 8b 04  .$...........H..
	0x1330 24 48 89 84 24 60 03 00 00 48 89 84 24 60 02 00  $H..$`...H..$`..
	0x1340 00 0f 57 c0 0f 11 84 24 f0 05 00 00 48 8b 84 24  ..W....$....H..$
	0x1350 60 02 00 00 48 89 04 24 48 c7 44 24 08 0a 00 00  `...H..$H.D$....
	0x1360 00 e8 00 00 00 00 48 8b 44 24 18 48 8b 4c 24 10  ......H.D$.H.L$.
	0x1370 48 89 8c 24 b0 06 00 00 48 89 84 24 b8 06 00 00  H..$....H..$....
	0x1380 48 89 8c 24 f0 05 00 00 48 89 84 24 f8 05 00 00  H..$....H..$....
	0x1390 eb 00 e8 00 00 00 00 48 8b 04 24 48 89 84 24 60  .......H..$H..$`
	0x13a0 03 00 00 48 89 84 24 78 02 00 00 0f 57 c0 0f 11  ...H..$x....W...
	0x13b0 84 24 c0 05 00 00 48 8b 84 24 78 02 00 00 48 89  .$....H..$x...H.
	0x13c0 04 24 48 c7 44 24 08 0a 00 00 00 e8 00 00 00 00  .$H.D$..........
	0x13d0 48 8b 44 24 18 48 8b 4c 24 10 48 89 8c 24 b0 06  H.D$.H.L$.H..$..
	0x13e0 00 00 48 89 84 24 b8 06 00 00 48 89 8c 24 c0 05  ..H..$....H..$..
	0x13f0 00 00 48 89 84 24 c8 05 00 00 eb 00 e8 00 00 00  ..H..$..........
	0x1400 00 48 8b 04 24 48 89 84 24 60 03 00 00 48 89 84  .H..$H..$`...H..
	0x1410 24 80 02 00 00 0f 57 c0 0f 11 84 24 30 05 00 00  $.....W....$0...
	0x1420 48 8b 84 24 80 02 00 00 48 89 04 24 48 c7 44 24  H..$....H..$H.D$
	0x1430 08 0a 00 00 00 e8 00 00 00 00 48 8b 44 24 18 48  ..........H.D$.H
	0x1440 8b 4c 24 10 48 89 8c 24 b0 06 00 00 48 89 84 24  .L$.H..$....H..$
	0x1450 b8 06 00 00 48 89 8c 24 30 05 00 00 48 89 84 24  ....H..$0...H..$
	0x1460 38 05 00 00 eb 00 e8 00 00 00 00 48 8b 04 24 48  8..........H..$H
	0x1470 89 84 24 60 03 00 00 48 89 84 24 c0 01 00 00 0f  ..$`...H..$.....
	0x1480 57 c0 0f 11 84 24 a0 06 00 00 48 8b 84 24 c0 01  W....$....H..$..
	0x1490 00 00 48 89 04 24 48 c7 44 24 08 0a 00 00 00 e8  ..H..$H.D$......
	0x14a0 00 00 00 00 48 8b 44 24 18 48 8b 4c 24 10 48 89  ....H.D$.H.L$.H.
	0x14b0 8c 24 b0 06 00 00 48 89 84 24 b8 06 00 00 48 89  .$....H..$....H.
	0x14c0 8c 24 a0 06 00 00 48 89 84 24 a8 06 00 00 eb 00  .$....H..$......
	0x14d0 e8 00 00 00 00 48 8b 04 24 48 89 84 24 60 03 00  .....H..$H..$`..
	0x14e0 00 48 89 84 24 68 02 00 00 0f 57 c0 0f 11 84 24  .H..$h....W....$
	0x14f0 10 05 00 00 48 8b 84 24 68 02 00 00 48 89 04 24  ....H..$h...H..$
	0x1500 48 c7 44 24 08 0a 00 00 00 e8 00 00 00 00 48 8b  H.D$..........H.
	0x1510 44 24 18 48 8b 4c 24 10 48 89 8c 24 b0 06 00 00  D$.H.L$.H..$....
	0x1520 48 89 84 24 b8 06 00 00 48 89 8c 24 10 05 00 00  H..$....H..$....
	0x1530 48 89 84 24 18 05 00 00 eb 00 e8 00 00 00 00 48  H..$...........H
	0x1540 8b 04 24 48 89 84 24 60 03 00 00 48 89 84 24 58  ..$H..$`...H..$X
	0x1550 02 00 00 0f 57 c0 0f 11 84 24 70 06 00 00 48 8b  ....W....$p...H.
	0x1560 84 24 58 02 00 00 48 89 04 24 48 c7 44 24 08 0a  .$X...H..$H.D$..
	0x1570 00 00 00 e8 00 00 00 00 48 8b 44 24 18 48 8b 4c  ........H.D$.H.L
	0x1580 24 10 48 89 8c 24 b0 06 00 00 48 89 84 24 b8 06  $.H..$....H..$..
	0x1590 00 00 48 89 8c 24 70 06 00 00 48 89 84 24 78 06  ..H..$p...H..$x.
	0x15a0 00 00 eb 00 e8 00 00 00 00 48 8b 04 24 48 89 84  .........H..$H..
	0x15b0 24 60 03 00 00 48 89 84 24 48 02 00 00 0f 57 c0  $`...H..$H....W.
	0x15c0 0f 11 84 24 20 05 00 00 48 8b 84 24 48 02 00 00  ...$ ...H..$H...
	0x15d0 48 89 04 24 48 c7 44 24 08 0a 00 00 00 e8 00 00  H..$H.D$........
	0x15e0 00 00 48 8b 44 24 18 48 8b 4c 24 10 48 89 8c 24  ..H.D$.H.L$.H..$
	0x15f0 b0 06 00 00 48 89 84 24 b8 06 00 00 48 89 8c 24  ....H..$....H..$
	0x1600 20 05 00 00 48 89 84 24 28 05 00 00 eb 00 e8 00   ...H..$(.......
	0x1610 00 00 00 48 8b 04 24 48 89 84 24 60 03 00 00 48  ...H..$H..$`...H
	0x1620 89 84 24 38 02 00 00 0f 57 c0 0f 11 84 24 40 05  ..$8....W....$@.
	0x1630 00 00 48 8b 84 24 38 02 00 00 48 89 04 24 48 c7  ..H..$8...H..$H.
	0x1640 44 24 08 0a 00 00 00 e8 00 00 00 00 48 8b 44 24  D$..........H.D$
	0x1650 18 48 8b 4c 24 10 48 89 8c 24 b0 06 00 00 48 89  .H.L$.H..$....H.
	0x1660 84 24 b8 06 00 00 48 89 8c 24 40 05 00 00 48 89  .$....H..$@...H.
	0x1670 84 24 48 05 00 00 eb 00 e8 00 00 00 00 48 8b 04  .$H..........H..
	0x1680 24 48 89 84 24 60 03 00 00 48 89 84 24 28 02 00  $H..$`...H..$(..
	0x1690 00 0f 57 c0 0f 11 84 24 50 05 00 00 48 8b 84 24  ..W....$P...H..$
	0x16a0 28 02 00 00 48 89 04 24 48 c7 44 24 08 0a 00 00  (...H..$H.D$....
	0x16b0 00 e8 00 00 00 00 48 8b 44 24 18 48 8b 4c 24 10  ......H.D$.H.L$.
	0x16c0 48 89 8c 24 b0 06 00 00 48 89 84 24 b8 06 00 00  H..$....H..$....
	0x16d0 48 89 8c 24 50 05 00 00 48 89 84 24 58 05 00 00  H..$P...H..$X...
	0x16e0 eb 00 e8 00 00 00 00 48 8b 04 24 48 89 84 24 60  .......H..$H..$`
	0x16f0 03 00 00 48 89 84 24 18 02 00 00 0f 57 c0 0f 11  ...H..$.....W...
	0x1700 84 24 70 05 00 00 48 8b 84 24 18 02 00 00 48 89  .$p...H..$....H.
	0x1710 04 24 48 c7 44 24 08 0a 00 00 00 e8 00 00 00 00  .$H.D$..........
	0x1720 48 8b 44 24 18 48 8b 4c 24 10 48 89 8c 24 b0 06  H.D$.H.L$.H..$..
	0x1730 00 00 48 89 84 24 b8 06 00 00 48 89 8c 24 70 05  ..H..$....H..$p.
	0x1740 00 00 48 89 84 24 78 05 00 00 eb 00 e8 00 00 00  ..H..$x.........
	0x1750 00 48 8b 04 24 48 89 84 24 60 03 00 00 48 89 84  .H..$H..$`...H..
	0x1760 24 c8 01 00 00 0f 57 c0 0f 11 84 24 80 05 00 00  $.....W....$....
	0x1770 48 8b 84 24 c8 01 00 00 48 89 04 24 48 c7 44 24  H..$....H..$H.D$
	0x1780 08 0a 00 00 00 e8 00 00 00 00 48 8b 44 24 18 48  ..........H.D$.H
	0x1790 8b 4c 24 10 48 89 8c 24 b0 06 00 00 48 89 84 24  .L$.H..$....H..$
	0x17a0 b8 06 00 00 48 89 8c 24 80 05 00 00 48 89 84 24  ....H..$....H..$
	0x17b0 88 05 00 00 eb 00 e8 00 00 00 00 48 8b 04 24 48  ...........H..$H
	0x17c0 89 84 24 60 03 00 00 48 89 84 24 f8 01 00 00 0f  ..$`...H..$.....
	0x17d0 57 c0 0f 11 84 24 a0 05 00 00 48 8b 84 24 f8 01  W....$....H..$..
	0x17e0 00 00 48 89 04 24 48 c7 44 24 08 0a 00 00 00 e8  ..H..$H.D$......
	0x17f0 00 00 00 00 48 8b 44 24 18 48 8b 4c 24 10 48 89  ....H.D$.H.L$.H.
	0x1800 8c 24 b0 06 00 00 48 89 84 24 b8 06 00 00 48 89  .$....H..$....H.
	0x1810 8c 24 a0 05 00 00 48 89 84 24 a8 05 00 00 eb 00  .$....H..$......
	0x1820 e8 00 00 00 00 48 8b 04 24 48 89 84 24 60 03 00  .....H..$H..$`..
	0x1830 00 48 89 84 24 e8 01 00 00 0f 57 c0 0f 11 84 24  .H..$.....W....$
	0x1840 b0 05 00 00 48 8b 84 24 e8 01 00 00 48 89 04 24  ....H..$....H..$
	0x1850 48 c7 44 24 08 0a 00 00 00 e8 00 00 00 00 48 8b  H.D$..........H.
	0x1860 44 24 18 48 8b 4c 24 10 48 89 8c 24 b0 06 00 00  D$.H.L$.H..$....
	0x1870 48 89 84 24 b8 06 00 00 48 89 8c 24 b0 05 00 00  H..$....H..$....
	0x1880 48 89 84 24 b8 05 00 00 eb 00 48 8d bc 24 c0 06  H..$......H..$..
	0x1890 00 00 48 8d 35 00 00 00 00 48 89 6c 24 f0 48 8d  ..H.5....H.l$.H.
	0x18a0 6c 24 f0 e8 00 00 00 00 48 8b 6d 00 48 8b 84 24  l$......H.m.H..$
	0x18b0 d8 00 00 00 48 89 84 24 c0 06 00 00 48 8b 84 24  ....H..$....H..$
	0x18c0 98 01 00 00 48 89 84 24 c8 06 00 00 48 8b 84 24  ....H..$....H..$
	0x18d0 a8 01 00 00 48 89 84 24 d0 06 00 00 48 8b 84 24  ....H..$....H..$
	0x18e0 b8 01 00 00 48 89 84 24 d8 06 00 00 48 8b 84 24  ....H..$....H..$
	0x18f0 80 01 00 00 48 89 84 24 e0 06 00 00 48 8b 84 24  ....H..$....H..$
	0x1900 70 01 00 00 48 89 84 24 e8 06 00 00 48 8b 84 24  p...H..$....H..$
	0x1910 60 01 00 00 48 89 84 24 f0 06 00 00 48 8b 84 24  `...H..$....H..$
	0x1920 58 01 00 00 48 89 84 24 f8 06 00 00 48 8b 84 24  X...H..$....H..$
	0x1930 48 01 00 00 48 89 84 24 00 07 00 00 48 8b 84 24  H...H..$....H..$
	0x1940 30 01 00 00 48 89 84 24 08 07 00 00 48 8b 84 24  0...H..$....H..$
	0x1950 20 01 00 00 48 89 84 24 10 07 00 00 48 8b 84 24   ...H..$....H..$
	0x1960 10 01 00 00 48 89 84 24 18 07 00 00 48 8b 84 24  ....H..$....H..$
	0x1970 00 01 00 00 48 89 84 24 20 07 00 00 48 8b 84 24  ....H..$ ...H..$
	0x1980 e8 00 00 00 48 89 84 24 28 07 00 00 48 8b 84 24  ....H..$(...H..$
	0x1990 c8 00 00 00 48 89 84 24 30 07 00 00 48 8b 84 24  ....H..$0...H..$
	0x19a0 b8 00 00 00 48 89 84 24 38 07 00 00 48 8b 84 24  ....H..$8...H..$
	0x19b0 a8 00 00 00 48 89 84 24 40 07 00 00 48 8b 84 24  ....H..$@...H..$
	0x19c0 98 00 00 00 48 89 84 24 48 07 00 00 48 8b 44 24  ....H..$H...H.D$
	0x19d0 20 48 89 84 24 50 07 00 00 48 8b 44 24 68 48 89   H..$P...H.D$hH.
	0x19e0 84 24 58 07 00 00 48 8b 44 24 48 48 89 84 24 60  .$X...H.D$HH..$`
	0x19f0 07 00 00 48 8b 84 24 d0 00 00 00 48 89 84 24 68  ...H..$....H..$h
	0x1a00 07 00 00 48 8b 44 24 30 48 89 84 24 70 07 00 00  ...H.D$0H..$p...
	0x1a10 48 8b 84 24 38 01 00 00 48 89 84 24 78 07 00 00  H..$8...H..$x...
	0x1a20 48 8b 44 24 60 48 89 84 24 80 07 00 00 48 8b 44  H.D$`H..$....H.D
	0x1a30 24 78 48 89 84 24 88 07 00 00 f2 0f 10 84 24 30  $xH..$........$0
	0x1a40 04 00 00 f2 0f 11 84 24 90 07 00 00 f2 0f 10 84  .......$........
	0x1a50 24 28 04 00 00 f2 0f 11 84 24 98 07 00 00 f2 0f  $(.......$......
	0x1a60 10 84 24 20 04 00 00 f2 0f 11 84 24 a0 07 00 00  ..$ .......$....
	0x1a70 f2 0f 10 84 24 18 04 00 00 f2 0f 11 84 24 a8 07  ....$........$..
	0x1a80 00 00 f2 0f 10 84 24 10 04 00 00 f2 0f 11 84 24  ......$........$
	0x1a90 b0 07 00 00 f2 0f 10 84 24 08 04 00 00 f2 0f 11  ........$.......
	0x1aa0 84 24 b8 07 00 00 f2 0f 10 84 24 00 04 00 00 f2  .$........$.....
	0x1ab0 0f 11 84 24 c0 07 00 00 f2 0f 10 84 24 f8 03 00  ...$........$...
	0x1ac0 00 f2 0f 11 84 24 c8 07 00 00 f2 0f 10 84 24 f0  .....$........$.
	0x1ad0 03 00 00 f2 0f 11 84 24 d0 07 00 00 f2 0f 10 84  .......$........
	0x1ae0 24 e8 03 00 00 f2 0f 11 84 24 d8 07 00 00 f2 0f  $........$......
	0x1af0 10 84 24 e0 03 00 00 f2 0f 11 84 24 e0 07 00 00  ..$........$....
	0x1b00 f2 0f 10 84 24 d8 03 00 00 f2 0f 11 84 24 e8 07  ....$........$..
	0x1b10 00 00 f2 0f 10 84 24 d0 03 00 00 f2 0f 11 84 24  ......$........$
	0x1b20 f0 07 00 00 f2 0f 10 84 24 c8 03 00 00 f2 0f 11  ........$.......
	0x1b30 84 24 f8 07 00 00 f2 0f 10 84 24 c0 03 00 00 f2  .$........$.....
	0x1b40 0f 11 84 24 00 08 00 00 f2 0f 10 84 24 b8 03 00  ...$........$...
	0x1b50 00 f2 0f 11 84 24 08 08 00 00 f2 0f 10 84 24 b0  .....$........$.
	0x1b60 03 00 00 f2 0f 11 84 24 10 08 00 00 f2 0f 10 84  .......$........
	0x1b70 24 a8 03 00 00 f2 0f 11 84 24 18 08 00 00 f2 0f  $........$......
	0x1b80 10 84 24 a0 03 00 00 f2 0f 11 84 24 20 08 00 00  ..$........$ ...
	0x1b90 f2 0f 10 84 24 98 03 00 00 f2 0f 11 84 24 28 08  ....$........$(.
	0x1ba0 00 00 f2 0f 10 84 24 90 03 00 00 f2 0f 11 84 24  ......$........$
	0x1bb0 30 08 00 00 f2 0f 10 84 24 88 03 00 00 f2 0f 11  0.......$.......
	0x1bc0 84 24 38 08 00 00 f2 0f 10 84 24 80 03 00 00 f2  .$8.......$.....
	0x1bd0 0f 11 84 24 40 08 00 00 f2 0f 10 84 24 78 03 00  ...$@.......$x..
	0x1be0 00 f2 0f 11 84 24 48 08 00 00 f2 0f 10 84 24 70  .....$H.......$p
	0x1bf0 03 00 00 f2 0f 11 84 24 50 08 00 00 f2 0f 10 84  .......$P.......
	0x1c00 24 68 03 00 00 f2 0f 11 84 24 58 08 00 00 48 8b  $h.......$X...H.
	0x1c10 84 24 e8 05 00 00 48 8b 8c 24 e0 05 00 00 48 89  .$....H..$....H.
	0x1c20 8c 24 60 08 00 00 48 89 84 24 68 08 00 00 48 8b  .$`...H..$h...H.
	0x1c30 84 24 d8 05 00 00 48 8b 8c 24 d0 05 00 00 48 89  .$....H..$....H.
	0x1c40 8c 24 70 08 00 00 48 89 84 24 78 08 00 00 48 8b  .$p...H..$x...H.
	0x1c50 84 24 68 05 00 00 48 8b 8c 24 60 05 00 00 48 89  .$h...H..$`...H.
	0x1c60 8c 24 80 08 00 00 48 89 84 24 88 08 00 00 48 8b  .$....H..$....H.
	0x1c70 84 24 98 06 00 00 48 8b 8c 24 90 06 00 00 48 89  .$....H..$....H.
	0x1c80 8c 24 90 08 00 00 48 89 84 24 98 08 00 00 48 8b  .$....H..$....H.
	0x1c90 84 24 88 06 00 00 48 8b 8c 24 80 06 00 00 48 89  .$....H..$....H.
	0x1ca0 8c 24 a0 08 00 00 48 89 84 24 a8 08 00 00 48 8b  .$....H..$....H.
	0x1cb0 84 24 68 06 00 00 48 8b 8c 24 60 06 00 00 48 89  .$h...H..$`...H.
	0x1cc0 8c 24 b0 08 00 00 48 89 84 24 b8 08 00 00 48 8b  .$....H..$....H.
	0x1cd0 84 24 58 06 00 00 48 8b 8c 24 50 06 00 00 48 89  .$X...H..$P...H.
	0x1ce0 8c 24 c0 08 00 00 48 89 84 24 c8 08 00 00 48 8b  .$....H..$....H.
	0x1cf0 84 24 48 06 00 00 48 8b 8c 24 40 06 00 00 48 89  .$H...H..$@...H.
	0x1d00 8c 24 d0 08 00 00 48 89 84 24 d8 08 00 00 48 8b  .$....H..$....H.
	0x1d10 84 24 38 06 00 00 48 8b 8c 24 30 06 00 00 48 89  .$8...H..$0...H.
	0x1d20 8c 24 e0 08 00 00 48 89 84 24 e8 08 00 00 48 8b  .$....H..$....H.
	0x1d30 84 24 98 05 00 00 48 8b 8c 24 90 05 00 00 48 89  .$....H..$....H.
	0x1d40 8c 24 f0 08 00 00 48 89 84 24 f8 08 00 00 48 8b  .$....H..$....H.
	0x1d50 84 24 28 06 00 00 48 8b 8c 24 20 06 00 00 48 89  .$(...H..$ ...H.
	0x1d60 8c 24 00 09 00 00 48 89 84 24 08 09 00 00 48 8b  .$....H..$....H.
	0x1d70 84 24 18 06 00 00 48 8b 8c 24 10 06 00 00 48 89  .$....H..$....H.
	0x1d80 8c 24 10 09 00 00 48 89 84 24 18 09 00 00 48 8b  .$....H..$....H.
	0x1d90 84 24 08 06 00 00 48 8b 8c 24 00 06 00 00 48 89  .$....H..$....H.
	0x1da0 8c 24 20 09 00 00 48 89 84 24 28 09 00 00 48 8b  .$ ...H..$(...H.
	0x1db0 84 24 f8 05 00 00 48 8b 8c 24 f0 05 00 00 48 89  .$....H..$....H.
	0x1dc0 8c 24 30 09 00 00 48 89 84 24 38 09 00 00 48 8b  .$0...H..$8...H.
	0x1dd0 84 24 c8 05 00 00 48 8b 8c 24 c0 05 00 00 48 89  .$....H..$....H.
	0x1de0 8c 24 40 09 00 00 48 89 84 24 48 09 00 00 48 8b  .$@...H..$H...H.
	0x1df0 84 24 38 05 00 00 48 8b 8c 24 30 05 00 00 48 89  .$8...H..$0...H.
	0x1e00 8c 24 50 09 00 00 48 89 84 24 58 09 00 00 48 8b  .$P...H..$X...H.
	0x1e10 84 24 a0 06 00 00 48 8b 8c 24 a8 06 00 00 48 89  .$....H..$....H.
	0x1e20 84 24 60 09 00 00 48 89 8c 24 68 09 00 00 48 8b  .$`...H..$h...H.
	0x1e30 84 24 10 05 00 00 48 8b 8c 24 18 05 00 00 48 89  .$....H..$....H.
	0x1e40 84 24 70 09 00 00 48 89 8c 24 78 09 00 00 48 8b  .$p...H..$x...H.
	0x1e50 84 24 70 06 00 00 48 8b 8c 24 78 06 00 00 48 89  .$p...H..$x...H.
	0x1e60 84 24 80 09 00 00 48 89 8c 24 88 09 00 00 48 8b  .$....H..$....H.
	0x1e70 84 24 20 05 00 00 48 8b 8c 24 28 05 00 00 48 89  .$ ...H..$(...H.
	0x1e80 84 24 90 09 00 00 48 89 8c 24 98 09 00 00 48 8b  .$....H..$....H.
	0x1e90 84 24 40 05 00 00 48 8b 8c 24 48 05 00 00 48 89  .$@...H..$H...H.
	0x1ea0 84 24 a0 09 00 00 48 89 8c 24 a8 09 00 00 48 8b  .$....H..$....H.
	0x1eb0 84 24 50 05 00 00 48 8b 8c 24 58 05 00 00 48 89  .$P...H..$X...H.
	0x1ec0 84 24 b0 09 00 00 48 89 8c 24 b8 09 00 00 48 8b  .$....H..$....H.
	0x1ed0 84 24 70 05 00 00 48 8b 8c 24 78 05 00 00 48 89  .$p...H..$x...H.
	0x1ee0 84 24 c0 09 00 00 48 89 8c 24 c8 09 00 00 48 8b  .$....H..$....H.
	0x1ef0 84 24 80 05 00 00 48 8b 8c 24 88 05 00 00 48 89  .$....H..$....H.
	0x1f00 84 24 d0 09 00 00 48 89 8c 24 d8 09 00 00 48 8b  .$....H..$....H.
	0x1f10 84 24 a0 05 00 00 48 8b 8c 24 a8 05 00 00 48 89  .$....H..$....H.
	0x1f20 84 24 e0 09 00 00 48 89 8c 24 e8 09 00 00 48 8b  .$....H..$....H.
	0x1f30 84 24 b0 05 00 00 48 8b 8c 24 b8 05 00 00 48 89  .$....H..$....H.
	0x1f40 84 24 f0 09 00 00 48 89 8c 24 f8 09 00 00 48 8d  .$....H..$....H.
	0x1f50 bc 24 10 0a 00 00 48 8d b4 24 c0 06 00 00 48 89  .$....H..$....H.
	0x1f60 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00 00 48 8b 6d  l$.H.l$......H.m
	0x1f70 00 48 8b ac 24 00 0a 00 00 48 81 c4 08 0a 00 00  .H..$....H......
	0x1f80 c3 e8 00 00 00 00 e9 75 e0 ff ff                 .......u...
	rel 5+4 t=16 TLS+0
	rel 72+4 t=8 runtime.duffzero+57
	rel 95+4 t=15 math/rand.globalRand+0
	rel 146+0 t=11 +0
	rel 212+4 t=15 math/rand.globalRand+0
	rel 263+0 t=11 +0
	rel 329+4 t=15 math/rand.globalRand+0
	rel 380+0 t=11 +0
	rel 446+4 t=15 math/rand.globalRand+0
	rel 497+0 t=11 +0
	rel 563+4 t=15 math/rand.globalRand+0
	rel 614+0 t=11 +0
	rel 680+4 t=15 math/rand.globalRand+0
	rel 731+0 t=11 +0
	rel 797+4 t=15 math/rand.globalRand+0
	rel 848+0 t=11 +0
	rel 914+4 t=15 math/rand.globalRand+0
	rel 965+0 t=11 +0
	rel 1031+4 t=15 math/rand.globalRand+0
	rel 1082+0 t=11 +0
	rel 1148+4 t=15 math/rand.globalRand+0
	rel 1199+0 t=11 +0
	rel 1265+4 t=15 math/rand.globalRand+0
	rel 1316+0 t=11 +0
	rel 1382+4 t=15 math/rand.globalRand+0
	rel 1433+0 t=11 +0
	rel 1499+4 t=15 math/rand.globalRand+0
	rel 1550+0 t=11 +0
	rel 1616+4 t=15 math/rand.globalRand+0
	rel 1667+0 t=11 +0
	rel 1733+4 t=15 math/rand.globalRand+0
	rel 1784+0 t=11 +0
	rel 1850+4 t=15 math/rand.globalRand+0
	rel 1901+0 t=11 +0
	rel 1967+4 t=15 math/rand.globalRand+0
	rel 2018+0 t=11 +0
	rel 2084+4 t=15 math/rand.globalRand+0
	rel 2135+0 t=11 +0
	rel 2198+4 t=15 math/rand.globalRand+0
	rel 2249+0 t=11 +0
	rel 2309+4 t=15 math/rand.globalRand+0
	rel 2357+0 t=11 +0
	rel 2411+4 t=15 math/rand.globalRand+0
	rel 2459+0 t=11 +0
	rel 2516+4 t=15 math/rand.globalRand+0
	rel 2564+0 t=11 +0
	rel 2621+4 t=15 math/rand.globalRand+0
	rel 2669+0 t=11 +0
	rel 2726+4 t=15 math/rand.globalRand+0
	rel 2774+0 t=11 +0
	rel 2831+4 t=15 math/rand.globalRand+0
	rel 2879+0 t=11 +0
	rel 2933+4 t=15 math/rand.globalRand+0
	rel 2984+0 t=11 +0
	rel 3033+4 t=8 math/rand.Float64+0
	rel 3052+4 t=8 math/rand.Float64+0
	rel 3071+4 t=8 math/rand.Float64+0
	rel 3090+4 t=8 math/rand.Float64+0
	rel 3109+4 t=8 math/rand.Float64+0
	rel 3128+4 t=8 math/rand.Float64+0
	rel 3147+4 t=8 math/rand.Float64+0
	rel 3166+4 t=8 math/rand.Float64+0
	rel 3185+4 t=8 math/rand.Float64+0
	rel 3204+4 t=8 math/rand.Float64+0
	rel 3223+4 t=8 math/rand.Float64+0
	rel 3242+4 t=8 math/rand.Float64+0
	rel 3261+4 t=8 math/rand.Float64+0
	rel 3280+4 t=8 math/rand.Float64+0
	rel 3299+4 t=8 math/rand.Float64+0
	rel 3318+4 t=8 math/rand.Float64+0
	rel 3337+4 t=8 math/rand.Float64+0
	rel 3356+4 t=8 math/rand.Float64+0
	rel 3375+4 t=8 math/rand.Float64+0
	rel 3394+4 t=8 math/rand.Float64+0
	rel 3413+4 t=8 math/rand.Float64+0
	rel 3432+4 t=8 math/rand.Float64+0
	rel 3451+4 t=8 math/rand.Float64+0
	rel 3470+4 t=8 math/rand.Float64+0
	rel 3489+4 t=8 math/rand.Float64+0
	rel 3508+4 t=8 math/rand.Float64+0
	rel 3527+4 t=8 math/rand.Int+0
	rel 3584+4 t=8 strconv.FormatInt+0
	rel 3633+4 t=8 math/rand.Int+0
	rel 3690+4 t=8 strconv.FormatInt+0
	rel 3739+4 t=8 math/rand.Int+0
	rel 3796+4 t=8 strconv.FormatInt+0
	rel 3845+4 t=8 math/rand.Int+0
	rel 3902+4 t=8 strconv.FormatInt+0
	rel 3951+4 t=8 math/rand.Int+0
	rel 4008+4 t=8 strconv.FormatInt+0
	rel 4057+4 t=8 math/rand.Int+0
	rel 4114+4 t=8 strconv.FormatInt+0
	rel 4163+4 t=8 math/rand.Int+0
	rel 4220+4 t=8 strconv.FormatInt+0
	rel 4269+4 t=8 math/rand.Int+0
	rel 4326+4 t=8 strconv.FormatInt+0
	rel 4375+4 t=8 math/rand.Int+0
	rel 4432+4 t=8 strconv.FormatInt+0
	rel 4481+4 t=8 math/rand.Int+0
	rel 4538+4 t=8 strconv.FormatInt+0
	rel 4587+4 t=8 math/rand.Int+0
	rel 4644+4 t=8 strconv.FormatInt+0
	rel 4693+4 t=8 math/rand.Int+0
	rel 4750+4 t=8 strconv.FormatInt+0
	rel 4799+4 t=8 math/rand.Int+0
	rel 4856+4 t=8 strconv.FormatInt+0
	rel 4905+4 t=8 math/rand.Int+0
	rel 4962+4 t=8 strconv.FormatInt+0
	rel 5011+4 t=8 math/rand.Int+0
	rel 5068+4 t=8 strconv.FormatInt+0
	rel 5117+4 t=8 math/rand.Int+0
	rel 5174+4 t=8 strconv.FormatInt+0
	rel 5223+4 t=8 math/rand.Int+0
	rel 5280+4 t=8 strconv.FormatInt+0
	rel 5329+4 t=8 math/rand.Int+0
	rel 5386+4 t=8 strconv.FormatInt+0
	rel 5435+4 t=8 math/rand.Int+0
	rel 5492+4 t=8 strconv.FormatInt+0
	rel 5541+4 t=8 math/rand.Int+0
	rel 5598+4 t=8 strconv.FormatInt+0
	rel 5647+4 t=8 math/rand.Int+0
	rel 5704+4 t=8 strconv.FormatInt+0
	rel 5753+4 t=8 math/rand.Int+0
	rel 5810+4 t=8 strconv.FormatInt+0
	rel 5859+4 t=8 math/rand.Int+0
	rel 5916+4 t=8 strconv.FormatInt+0
	rel 5965+4 t=8 math/rand.Int+0
	rel 6022+4 t=8 strconv.FormatInt+0
	rel 6071+4 t=8 math/rand.Int+0
	rel 6128+4 t=8 strconv.FormatInt+0
	rel 6177+4 t=8 math/rand.Int+0
	rel 6234+4 t=8 strconv.FormatInt+0
	rel 6293+4 t=15 ""..stmp_21+0
	rel 6308+4 t=8 runtime.duffcopy+168
	rel 8041+4 t=8 runtime.duffcopy+168
	rel 8066+4 t=8 runtime.morestack_noctxt+0
"".createGiga STEXT size=4473 args=0x1a0 locals=0x5d0
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:308)	TEXT	"".createGiga(SB), ABIInternal, $1488-416
	0x0000 00000 (pointer_vs_value/code/benchmark_invocation_test.go:308)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_invocation_test.go:308)	LEAQ	-1360(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_invocation_test.go:308)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_invocation_test.go:308)	JLS	4463
	0x001b 00027 (pointer_vs_value/code/benchmark_invocation_test.go:308)	SUBQ	$1488, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_invocation_test.go:308)	MOVQ	BP, 1480(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_invocation_test.go:308)	LEAQ	1480(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:308)	FUNCDATA	$0, gclocals·7310ccec7e54feda87692b3b68b170c3(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:308)	FUNCDATA	$1, gclocals·68707b0cf302758be1aae8da24a39ef7(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:308)	FUNCDATA	$2, gclocals·64b33842a01c93cba81b20f5248b3185(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:308)	PCDATA	$0, $1
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:308)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_invocation_test.go:308)	LEAQ	"".~r0+1496(SP), DI
	0x003a 00058 (pointer_vs_value/code/benchmark_invocation_test.go:308)	XORPS	X0, X0
	0x003d 00061 (pointer_vs_value/code/benchmark_invocation_test.go:308)	PCDATA	$0, $0
	0x003d 00061 (pointer_vs_value/code/benchmark_invocation_test.go:308)	LEAQ	-32(DI), DI
	0x0041 00065 (pointer_vs_value/code/benchmark_invocation_test.go:308)	DUFFZERO	$178
	0x0054 00084 (pointer_vs_value/code/benchmark_invocation_test.go:310)	MOVQ	$0, "".~R0+144(SP)
	0x0060 00096 (<unknown line number>)	NOP
	0x0060 00096 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0060 00096 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0067 00103 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0067 00103 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $1
	0x0067 00103 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1464(SP)
	0x006f 00111 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+280(SP)
	0x007b 00123 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x007b 00123 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x007b 00123 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1464(SP), AX
	0x0083 00131 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0085 00133 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0088 00136 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x008a 00138 (<unknown line number>)	NOP
	0x008a 00138 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x008e 00142 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0092 00146 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0092 00146 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0096 00150 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0098 00152 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x009d 00157 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x00a5 00165 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+280(SP)
	0x00ad 00173 ($GOROOT/src/math/rand/rand.go:299)	JMP	175
	0x00af 00175 (pointer_vs_value/code/benchmark_invocation_test.go:310)	MOVQ	"".~R0+280(SP), AX
	0x00b7 00183 (pointer_vs_value/code/benchmark_invocation_test.go:310)	MOVQ	AX, ""..autotmp_106+800(SP)
	0x00bf 00191 (pointer_vs_value/code/benchmark_invocation_test.go:310)	MOVQ	AX, "".~R0+144(SP)
	0x00c7 00199 (pointer_vs_value/code/benchmark_invocation_test.go:310)	JMP	201
	0x00c9 00201 (pointer_vs_value/code/benchmark_invocation_test.go:311)	MOVQ	$0, "".~R0+304(SP)
	0x00d5 00213 (<unknown line number>)	NOP
	0x00d5 00213 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x00d5 00213 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x00dc 00220 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x00dc 00220 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $2
	0x00dc 00220 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1440(SP)
	0x00e4 00228 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+400(SP)
	0x00f0 00240 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x00f0 00240 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x00f0 00240 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1440(SP), AX
	0x00f8 00248 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x00fa 00250 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x00fd 00253 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x00ff 00255 (<unknown line number>)	NOP
	0x00ff 00255 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0103 00259 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0107 00263 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0107 00263 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x010b 00267 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x010d 00269 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0112 00274 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x011a 00282 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+400(SP)
	0x0122 00290 ($GOROOT/src/math/rand/rand.go:299)	JMP	292
	0x0124 00292 (pointer_vs_value/code/benchmark_invocation_test.go:311)	MOVQ	"".~R0+400(SP), AX
	0x012c 00300 (pointer_vs_value/code/benchmark_invocation_test.go:311)	MOVQ	AX, ""..autotmp_107+792(SP)
	0x0134 00308 (pointer_vs_value/code/benchmark_invocation_test.go:311)	MOVQ	AX, "".~R0+304(SP)
	0x013c 00316 (pointer_vs_value/code/benchmark_invocation_test.go:311)	JMP	318
	0x013e 00318 (pointer_vs_value/code/benchmark_invocation_test.go:312)	MOVQ	$0, "".~R0+320(SP)
	0x014a 00330 (<unknown line number>)	NOP
	0x014a 00330 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x014a 00330 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0151 00337 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0151 00337 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $3
	0x0151 00337 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1416(SP)
	0x0159 00345 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+368(SP)
	0x0165 00357 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0165 00357 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0165 00357 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1416(SP), AX
	0x016d 00365 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x016f 00367 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0172 00370 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0174 00372 (<unknown line number>)	NOP
	0x0174 00372 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0178 00376 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x017c 00380 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x017c 00380 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0180 00384 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0182 00386 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0187 00391 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x018f 00399 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+368(SP)
	0x0197 00407 ($GOROOT/src/math/rand/rand.go:299)	JMP	409
	0x0199 00409 (pointer_vs_value/code/benchmark_invocation_test.go:312)	MOVQ	"".~R0+368(SP), AX
	0x01a1 00417 (pointer_vs_value/code/benchmark_invocation_test.go:312)	MOVQ	AX, ""..autotmp_108+784(SP)
	0x01a9 00425 (pointer_vs_value/code/benchmark_invocation_test.go:312)	MOVQ	AX, "".~R0+320(SP)
	0x01b1 00433 (pointer_vs_value/code/benchmark_invocation_test.go:312)	JMP	435
	0x01b3 00435 (pointer_vs_value/code/benchmark_invocation_test.go:313)	MOVQ	$0, "".~R0+360(SP)
	0x01bf 00447 (<unknown line number>)	NOP
	0x01bf 00447 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x01bf 00447 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x01c6 00454 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x01c6 00454 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $4
	0x01c6 00454 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1392(SP)
	0x01ce 00462 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+336(SP)
	0x01da 00474 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x01da 00474 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x01da 00474 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1392(SP), AX
	0x01e2 00482 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x01e4 00484 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x01e7 00487 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x01e9 00489 (<unknown line number>)	NOP
	0x01e9 00489 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x01ed 00493 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x01f1 00497 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x01f1 00497 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x01f5 00501 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x01f7 00503 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x01fc 00508 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x0204 00516 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+336(SP)
	0x020c 00524 ($GOROOT/src/math/rand/rand.go:299)	JMP	526
	0x020e 00526 (pointer_vs_value/code/benchmark_invocation_test.go:313)	MOVQ	"".~R0+336(SP), AX
	0x0216 00534 (pointer_vs_value/code/benchmark_invocation_test.go:313)	MOVQ	AX, ""..autotmp_109+776(SP)
	0x021e 00542 (pointer_vs_value/code/benchmark_invocation_test.go:313)	MOVQ	AX, "".~R0+360(SP)
	0x0226 00550 (pointer_vs_value/code/benchmark_invocation_test.go:313)	JMP	552
	0x0228 00552 (pointer_vs_value/code/benchmark_invocation_test.go:314)	MOVQ	$0, "".~R0+264(SP)
	0x0234 00564 (<unknown line number>)	NOP
	0x0234 00564 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0234 00564 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x023b 00571 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x023b 00571 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $5
	0x023b 00571 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1368(SP)
	0x0243 00579 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+240(SP)
	0x024f 00591 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x024f 00591 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x024f 00591 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1368(SP), AX
	0x0257 00599 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0259 00601 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x025c 00604 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x025e 00606 (<unknown line number>)	NOP
	0x025e 00606 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0262 00610 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0266 00614 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0266 00614 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x026a 00618 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x026c 00620 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0271 00625 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x0279 00633 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+240(SP)
	0x0281 00641 ($GOROOT/src/math/rand/rand.go:299)	JMP	643
	0x0283 00643 (pointer_vs_value/code/benchmark_invocation_test.go:314)	MOVQ	"".~R0+240(SP), AX
	0x028b 00651 (pointer_vs_value/code/benchmark_invocation_test.go:314)	MOVQ	AX, ""..autotmp_110+768(SP)
	0x0293 00659 (pointer_vs_value/code/benchmark_invocation_test.go:314)	MOVQ	AX, "".~R0+264(SP)
	0x029b 00667 (pointer_vs_value/code/benchmark_invocation_test.go:314)	JMP	669
	0x029d 00669 (pointer_vs_value/code/benchmark_invocation_test.go:315)	MOVQ	$0, "".~R0+40(SP)
	0x02a6 00678 (<unknown line number>)	NOP
	0x02a6 00678 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x02a6 00678 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x02ad 00685 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x02ad 00685 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $6
	0x02ad 00685 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1344(SP)
	0x02b5 00693 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+216(SP)
	0x02c1 00705 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x02c1 00705 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x02c1 00705 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1344(SP), AX
	0x02c9 00713 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x02cb 00715 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x02ce 00718 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x02d0 00720 (<unknown line number>)	NOP
	0x02d0 00720 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x02d4 00724 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x02d8 00728 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x02d8 00728 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x02dc 00732 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x02de 00734 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x02e3 00739 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x02eb 00747 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+216(SP)
	0x02f3 00755 ($GOROOT/src/math/rand/rand.go:299)	JMP	757
	0x02f5 00757 (pointer_vs_value/code/benchmark_invocation_test.go:315)	MOVQ	"".~R0+216(SP), AX
	0x02fd 00765 (pointer_vs_value/code/benchmark_invocation_test.go:315)	MOVQ	AX, ""..autotmp_111+760(SP)
	0x0305 00773 (pointer_vs_value/code/benchmark_invocation_test.go:315)	MOVQ	AX, "".~R0+40(SP)
	0x030a 00778 (pointer_vs_value/code/benchmark_invocation_test.go:315)	JMP	780
	0x030c 00780 (pointer_vs_value/code/benchmark_invocation_test.go:316)	MOVQ	$0, "".~R0+192(SP)
	0x0318 00792 (<unknown line number>)	NOP
	0x0318 00792 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0318 00792 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x031f 00799 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x031f 00799 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $7
	0x031f 00799 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1320(SP)
	0x0327 00807 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+168(SP)
	0x0333 00819 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0333 00819 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0333 00819 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1320(SP), AX
	0x033b 00827 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x033d 00829 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0340 00832 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0342 00834 (<unknown line number>)	NOP
	0x0342 00834 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0346 00838 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x034a 00842 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x034a 00842 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x034e 00846 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0350 00848 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0355 00853 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x035d 00861 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+168(SP)
	0x0365 00869 ($GOROOT/src/math/rand/rand.go:299)	JMP	871
	0x0367 00871 (pointer_vs_value/code/benchmark_invocation_test.go:316)	MOVQ	"".~R0+168(SP), AX
	0x036f 00879 (pointer_vs_value/code/benchmark_invocation_test.go:316)	MOVQ	AX, ""..autotmp_112+752(SP)
	0x0377 00887 (pointer_vs_value/code/benchmark_invocation_test.go:316)	MOVQ	AX, "".~R0+192(SP)
	0x037f 00895 (pointer_vs_value/code/benchmark_invocation_test.go:316)	JMP	897
	0x0381 00897 (pointer_vs_value/code/benchmark_invocation_test.go:317)	MOVQ	$0, "".~R0+136(SP)
	0x038d 00909 (<unknown line number>)	NOP
	0x038d 00909 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x038d 00909 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0394 00916 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0394 00916 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $8
	0x0394 00916 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1296(SP)
	0x039c 00924 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+112(SP)
	0x03a5 00933 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x03a5 00933 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x03a5 00933 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1296(SP), AX
	0x03ad 00941 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x03af 00943 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x03b2 00946 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x03b4 00948 (<unknown line number>)	NOP
	0x03b4 00948 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x03b8 00952 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x03bc 00956 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x03bc 00956 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x03c0 00960 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x03c2 00962 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x03c7 00967 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x03cf 00975 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+112(SP)
	0x03d4 00980 ($GOROOT/src/math/rand/rand.go:299)	JMP	982
	0x03d6 00982 (pointer_vs_value/code/benchmark_invocation_test.go:317)	MOVQ	"".~R0+112(SP), AX
	0x03db 00987 (pointer_vs_value/code/benchmark_invocation_test.go:317)	MOVQ	AX, ""..autotmp_113+744(SP)
	0x03e3 00995 (pointer_vs_value/code/benchmark_invocation_test.go:317)	MOVQ	AX, "".~R0+136(SP)
	0x03eb 01003 (pointer_vs_value/code/benchmark_invocation_test.go:317)	JMP	1005
	0x03ed 01005 (pointer_vs_value/code/benchmark_invocation_test.go:318)	MOVQ	$0, "".~R0+88(SP)
	0x03f6 01014 (<unknown line number>)	NOP
	0x03f6 01014 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x03f6 01014 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x03fd 01021 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x03fd 01021 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $9
	0x03fd 01021 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1352(SP)
	0x0405 01029 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+64(SP)
	0x040e 01038 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x040e 01038 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x040e 01038 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1352(SP), AX
	0x0416 01046 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0418 01048 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x041b 01051 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x041d 01053 (<unknown line number>)	NOP
	0x041d 01053 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0421 01057 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0425 01061 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0425 01061 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0429 01065 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x042b 01067 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0430 01072 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x0438 01080 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+64(SP)
	0x043d 01085 ($GOROOT/src/math/rand/rand.go:299)	JMP	1087
	0x043f 01087 (pointer_vs_value/code/benchmark_invocation_test.go:318)	MOVQ	"".~R0+64(SP), AX
	0x0444 01092 (pointer_vs_value/code/benchmark_invocation_test.go:318)	MOVQ	AX, ""..autotmp_114+736(SP)
	0x044c 01100 (pointer_vs_value/code/benchmark_invocation_test.go:318)	MOVQ	AX, "".~R0+88(SP)
	0x0451 01105 (pointer_vs_value/code/benchmark_invocation_test.go:318)	JMP	1107
	0x0453 01107 (pointer_vs_value/code/benchmark_invocation_test.go:319)	MOVQ	$0, "".~R0+16(SP)
	0x045c 01116 (<unknown line number>)	NOP
	0x045c 01116 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x045c 01116 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0463 01123 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0463 01123 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $10
	0x0463 01123 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1472(SP)
	0x046b 01131 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+24(SP)
	0x0474 01140 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0474 01140 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0474 01140 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1472(SP), AX
	0x047c 01148 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x047e 01150 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0481 01153 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0483 01155 (<unknown line number>)	NOP
	0x0483 01155 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0487 01159 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x048b 01163 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x048b 01163 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x048f 01167 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0491 01169 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0496 01174 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x049e 01182 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+24(SP)
	0x04a3 01187 ($GOROOT/src/math/rand/rand.go:299)	JMP	1189
	0x04a5 01189 (pointer_vs_value/code/benchmark_invocation_test.go:319)	MOVQ	"".~R0+24(SP), AX
	0x04aa 01194 (pointer_vs_value/code/benchmark_invocation_test.go:319)	MOVQ	AX, ""..autotmp_115+728(SP)
	0x04b2 01202 (pointer_vs_value/code/benchmark_invocation_test.go:319)	MOVQ	AX, "".~R0+16(SP)
	0x04b7 01207 (pointer_vs_value/code/benchmark_invocation_test.go:319)	JMP	1209
	0x04b9 01209 (pointer_vs_value/code/benchmark_invocation_test.go:320)	MOVQ	$0, "".~R0+32(SP)
	0x04c2 01218 (<unknown line number>)	NOP
	0x04c2 01218 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x04c2 01218 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x04c9 01225 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x04c9 01225 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $11
	0x04c9 01225 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1408(SP)
	0x04d1 01233 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+48(SP)
	0x04da 01242 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x04da 01242 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x04da 01242 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1408(SP), AX
	0x04e2 01250 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x04e4 01252 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x04e7 01255 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x04e9 01257 (<unknown line number>)	NOP
	0x04e9 01257 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x04ed 01261 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x04f1 01265 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x04f1 01265 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x04f5 01269 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x04f7 01271 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x04fc 01276 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x0504 01284 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+48(SP)
	0x0509 01289 ($GOROOT/src/math/rand/rand.go:299)	JMP	1291
	0x050b 01291 (pointer_vs_value/code/benchmark_invocation_test.go:320)	MOVQ	"".~R0+48(SP), AX
	0x0510 01296 (pointer_vs_value/code/benchmark_invocation_test.go:320)	MOVQ	AX, ""..autotmp_116+720(SP)
	0x0518 01304 (pointer_vs_value/code/benchmark_invocation_test.go:320)	MOVQ	AX, "".~R0+32(SP)
	0x051d 01309 (pointer_vs_value/code/benchmark_invocation_test.go:320)	JMP	1311
	0x051f 01311 (pointer_vs_value/code/benchmark_invocation_test.go:321)	MOVQ	$0, "".~R0+56(SP)
	0x0528 01320 (<unknown line number>)	NOP
	0x0528 01320 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0528 01320 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x052f 01327 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x052f 01327 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $12
	0x052f 01327 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1272(SP)
	0x0537 01335 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+72(SP)
	0x0540 01344 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0540 01344 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0540 01344 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1272(SP), AX
	0x0548 01352 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x054a 01354 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x054d 01357 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x054f 01359 (<unknown line number>)	NOP
	0x054f 01359 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0553 01363 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0557 01367 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0557 01367 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x055b 01371 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x055d 01373 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0562 01378 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x056a 01386 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+72(SP)
	0x056f 01391 ($GOROOT/src/math/rand/rand.go:299)	JMP	1393
	0x0571 01393 (pointer_vs_value/code/benchmark_invocation_test.go:321)	MOVQ	"".~R0+72(SP), AX
	0x0576 01398 (pointer_vs_value/code/benchmark_invocation_test.go:321)	MOVQ	AX, ""..autotmp_117+712(SP)
	0x057e 01406 (pointer_vs_value/code/benchmark_invocation_test.go:321)	MOVQ	AX, "".~R0+56(SP)
	0x0583 01411 (pointer_vs_value/code/benchmark_invocation_test.go:321)	JMP	1413
	0x0585 01413 (pointer_vs_value/code/benchmark_invocation_test.go:322)	MOVQ	$0, "".~R0+80(SP)
	0x058e 01422 (<unknown line number>)	NOP
	0x058e 01422 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x058e 01422 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0595 01429 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0595 01429 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $13
	0x0595 01429 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1280(SP)
	0x059d 01437 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+96(SP)
	0x05a6 01446 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x05a6 01446 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x05a6 01446 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1280(SP), AX
	0x05ae 01454 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x05b0 01456 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x05b3 01459 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x05b5 01461 (<unknown line number>)	NOP
	0x05b5 01461 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x05b9 01465 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x05bd 01469 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x05bd 01469 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x05c1 01473 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x05c3 01475 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x05c8 01480 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x05d0 01488 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+96(SP)
	0x05d5 01493 ($GOROOT/src/math/rand/rand.go:299)	JMP	1495
	0x05d7 01495 (pointer_vs_value/code/benchmark_invocation_test.go:322)	MOVQ	"".~R0+96(SP), AX
	0x05dc 01500 (pointer_vs_value/code/benchmark_invocation_test.go:322)	MOVQ	AX, ""..autotmp_118+704(SP)
	0x05e4 01508 (pointer_vs_value/code/benchmark_invocation_test.go:322)	MOVQ	AX, "".~R0+80(SP)
	0x05e9 01513 (pointer_vs_value/code/benchmark_invocation_test.go:322)	JMP	1515
	0x05eb 01515 (pointer_vs_value/code/benchmark_invocation_test.go:323)	MOVQ	$0, "".~R0+104(SP)
	0x05f4 01524 (<unknown line number>)	NOP
	0x05f4 01524 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x05f4 01524 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x05fb 01531 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x05fb 01531 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $14
	0x05fb 01531 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1288(SP)
	0x0603 01539 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+120(SP)
	0x060c 01548 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x060c 01548 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x060c 01548 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1288(SP), AX
	0x0614 01556 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0616 01558 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0619 01561 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x061b 01563 (<unknown line number>)	NOP
	0x061b 01563 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x061f 01567 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0623 01571 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0623 01571 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0627 01575 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0629 01577 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x062e 01582 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x0636 01590 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+120(SP)
	0x063b 01595 ($GOROOT/src/math/rand/rand.go:299)	JMP	1597
	0x063d 01597 (pointer_vs_value/code/benchmark_invocation_test.go:323)	MOVQ	"".~R0+120(SP), AX
	0x0642 01602 (pointer_vs_value/code/benchmark_invocation_test.go:323)	MOVQ	AX, ""..autotmp_119+696(SP)
	0x064a 01610 (pointer_vs_value/code/benchmark_invocation_test.go:323)	MOVQ	AX, "".~R0+104(SP)
	0x064f 01615 (pointer_vs_value/code/benchmark_invocation_test.go:323)	JMP	1617
	0x0651 01617 (pointer_vs_value/code/benchmark_invocation_test.go:324)	MOVQ	$0, "".~R0+128(SP)
	0x065d 01629 (<unknown line number>)	NOP
	0x065d 01629 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x065d 01629 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0664 01636 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0664 01636 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $15
	0x0664 01636 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1304(SP)
	0x066c 01644 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+152(SP)
	0x0678 01656 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0678 01656 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0678 01656 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1304(SP), AX
	0x0680 01664 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0682 01666 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0685 01669 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0687 01671 (<unknown line number>)	NOP
	0x0687 01671 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x068b 01675 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x068f 01679 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x068f 01679 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0693 01683 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0695 01685 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x069a 01690 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x06a2 01698 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+152(SP)
	0x06aa 01706 ($GOROOT/src/math/rand/rand.go:299)	JMP	1708
	0x06ac 01708 (pointer_vs_value/code/benchmark_invocation_test.go:324)	MOVQ	"".~R0+152(SP), AX
	0x06b4 01716 (pointer_vs_value/code/benchmark_invocation_test.go:324)	MOVQ	AX, ""..autotmp_120+688(SP)
	0x06bc 01724 (pointer_vs_value/code/benchmark_invocation_test.go:324)	MOVQ	AX, "".~R0+128(SP)
	0x06c4 01732 (pointer_vs_value/code/benchmark_invocation_test.go:324)	JMP	1734
	0x06c6 01734 (pointer_vs_value/code/benchmark_invocation_test.go:325)	MOVQ	$0, "".~R0+160(SP)
	0x06d2 01746 (<unknown line number>)	NOP
	0x06d2 01746 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x06d2 01746 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x06d9 01753 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x06d9 01753 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $16
	0x06d9 01753 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1312(SP)
	0x06e1 01761 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+176(SP)
	0x06ed 01773 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x06ed 01773 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x06ed 01773 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1312(SP), AX
	0x06f5 01781 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x06f7 01783 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x06fa 01786 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x06fc 01788 (<unknown line number>)	NOP
	0x06fc 01788 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0700 01792 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0704 01796 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0704 01796 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0708 01800 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x070a 01802 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x070f 01807 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x0717 01815 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+176(SP)
	0x071f 01823 ($GOROOT/src/math/rand/rand.go:299)	JMP	1825
	0x0721 01825 (pointer_vs_value/code/benchmark_invocation_test.go:325)	MOVQ	"".~R0+176(SP), AX
	0x0729 01833 (pointer_vs_value/code/benchmark_invocation_test.go:325)	MOVQ	AX, ""..autotmp_121+680(SP)
	0x0731 01841 (pointer_vs_value/code/benchmark_invocation_test.go:325)	MOVQ	AX, "".~R0+160(SP)
	0x0739 01849 (pointer_vs_value/code/benchmark_invocation_test.go:325)	JMP	1851
	0x073b 01851 (pointer_vs_value/code/benchmark_invocation_test.go:326)	MOVQ	$0, "".~R0+184(SP)
	0x0747 01863 (<unknown line number>)	NOP
	0x0747 01863 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0747 01863 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x074e 01870 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x074e 01870 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $17
	0x074e 01870 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1328(SP)
	0x0756 01878 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+200(SP)
	0x0762 01890 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0762 01890 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0762 01890 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1328(SP), AX
	0x076a 01898 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x076c 01900 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x076f 01903 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0771 01905 (<unknown line number>)	NOP
	0x0771 01905 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0775 01909 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0779 01913 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0779 01913 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x077d 01917 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x077f 01919 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0784 01924 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x078c 01932 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+200(SP)
	0x0794 01940 ($GOROOT/src/math/rand/rand.go:299)	JMP	1942
	0x0796 01942 (pointer_vs_value/code/benchmark_invocation_test.go:326)	MOVQ	"".~R0+200(SP), AX
	0x079e 01950 (pointer_vs_value/code/benchmark_invocation_test.go:326)	MOVQ	AX, ""..autotmp_122+672(SP)
	0x07a6 01958 (pointer_vs_value/code/benchmark_invocation_test.go:326)	MOVQ	AX, "".~R0+184(SP)
	0x07ae 01966 (pointer_vs_value/code/benchmark_invocation_test.go:326)	JMP	1968
	0x07b0 01968 (pointer_vs_value/code/benchmark_invocation_test.go:327)	MOVQ	$0, "".~R0+208(SP)
	0x07bc 01980 (<unknown line number>)	NOP
	0x07bc 01980 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x07bc 01980 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x07c3 01987 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x07c3 01987 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $18
	0x07c3 01987 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1336(SP)
	0x07cb 01995 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+224(SP)
	0x07d7 02007 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x07d7 02007 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x07d7 02007 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1336(SP), AX
	0x07df 02015 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x07e1 02017 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x07e4 02020 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x07e6 02022 (<unknown line number>)	NOP
	0x07e6 02022 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x07ea 02026 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x07ee 02030 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x07ee 02030 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x07f2 02034 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x07f4 02036 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x07f9 02041 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x0801 02049 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+224(SP)
	0x0809 02057 ($GOROOT/src/math/rand/rand.go:299)	JMP	2059
	0x080b 02059 (pointer_vs_value/code/benchmark_invocation_test.go:327)	MOVQ	"".~R0+224(SP), AX
	0x0813 02067 (pointer_vs_value/code/benchmark_invocation_test.go:327)	MOVQ	AX, ""..autotmp_123+664(SP)
	0x081b 02075 (pointer_vs_value/code/benchmark_invocation_test.go:327)	MOVQ	AX, "".~R0+208(SP)
	0x0823 02083 (pointer_vs_value/code/benchmark_invocation_test.go:327)	JMP	2085
	0x0825 02085 (pointer_vs_value/code/benchmark_invocation_test.go:328)	MOVQ	$0, "".~R0+232(SP)
	0x0831 02097 (<unknown line number>)	NOP
	0x0831 02097 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0831 02097 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0838 02104 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0838 02104 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $19
	0x0838 02104 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1360(SP)
	0x0840 02112 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+248(SP)
	0x084c 02124 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x084c 02124 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x084c 02124 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1360(SP), AX
	0x0854 02132 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0856 02134 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0859 02137 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x085b 02139 (<unknown line number>)	NOP
	0x085b 02139 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x085f 02143 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0863 02147 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0863 02147 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0867 02151 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0869 02153 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x086e 02158 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x0876 02166 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+248(SP)
	0x087e 02174 ($GOROOT/src/math/rand/rand.go:299)	JMP	2176
	0x0880 02176 (pointer_vs_value/code/benchmark_invocation_test.go:328)	MOVQ	"".~R0+248(SP), AX
	0x0888 02184 (pointer_vs_value/code/benchmark_invocation_test.go:328)	MOVQ	AX, ""..autotmp_124+656(SP)
	0x0890 02192 (pointer_vs_value/code/benchmark_invocation_test.go:328)	MOVQ	AX, "".~R0+232(SP)
	0x0898 02200 (pointer_vs_value/code/benchmark_invocation_test.go:328)	JMP	2202
	0x089a 02202 (pointer_vs_value/code/benchmark_invocation_test.go:329)	MOVQ	$0, "".~R0+256(SP)
	0x08a6 02214 (<unknown line number>)	NOP
	0x08a6 02214 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x08a6 02214 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x08ad 02221 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x08ad 02221 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $20
	0x08ad 02221 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1376(SP)
	0x08b5 02229 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+272(SP)
	0x08c1 02241 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x08c1 02241 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x08c1 02241 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1376(SP), AX
	0x08c9 02249 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x08cb 02251 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x08ce 02254 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x08d0 02256 (<unknown line number>)	NOP
	0x08d0 02256 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x08d4 02260 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x08d8 02264 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x08d8 02264 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x08dc 02268 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x08de 02270 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x08e3 02275 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x08eb 02283 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+272(SP)
	0x08f3 02291 ($GOROOT/src/math/rand/rand.go:299)	JMP	2293
	0x08f5 02293 (pointer_vs_value/code/benchmark_invocation_test.go:329)	MOVQ	"".~R0+272(SP), AX
	0x08fd 02301 (pointer_vs_value/code/benchmark_invocation_test.go:329)	MOVQ	AX, ""..autotmp_125+648(SP)
	0x0905 02309 (pointer_vs_value/code/benchmark_invocation_test.go:329)	MOVQ	AX, "".~R0+256(SP)
	0x090d 02317 (pointer_vs_value/code/benchmark_invocation_test.go:329)	JMP	2319
	0x090f 02319 (pointer_vs_value/code/benchmark_invocation_test.go:330)	MOVQ	$0, "".~R0+328(SP)
	0x091b 02331 (<unknown line number>)	NOP
	0x091b 02331 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x091b 02331 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0922 02338 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0922 02338 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $21
	0x0922 02338 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1384(SP)
	0x092a 02346 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+344(SP)
	0x0936 02358 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0936 02358 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0936 02358 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1384(SP), AX
	0x093e 02366 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0940 02368 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0943 02371 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0945 02373 (<unknown line number>)	NOP
	0x0945 02373 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0949 02377 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x094d 02381 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x094d 02381 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0951 02385 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0953 02387 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0958 02392 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x0960 02400 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+344(SP)
	0x0968 02408 ($GOROOT/src/math/rand/rand.go:299)	JMP	2410
	0x096a 02410 (pointer_vs_value/code/benchmark_invocation_test.go:330)	MOVQ	"".~R0+344(SP), AX
	0x0972 02418 (pointer_vs_value/code/benchmark_invocation_test.go:330)	MOVQ	AX, ""..autotmp_126+640(SP)
	0x097a 02426 (pointer_vs_value/code/benchmark_invocation_test.go:330)	MOVQ	AX, "".~R0+328(SP)
	0x0982 02434 (pointer_vs_value/code/benchmark_invocation_test.go:330)	JMP	2436
	0x0984 02436 (pointer_vs_value/code/benchmark_invocation_test.go:331)	MOVQ	$0, "".~R0+352(SP)
	0x0990 02448 (<unknown line number>)	NOP
	0x0990 02448 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0990 02448 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0997 02455 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0997 02455 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $22
	0x0997 02455 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1400(SP)
	0x099f 02463 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+416(SP)
	0x09ab 02475 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x09ab 02475 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x09ab 02475 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1400(SP), AX
	0x09b3 02483 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x09b5 02485 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x09b8 02488 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x09ba 02490 (<unknown line number>)	NOP
	0x09ba 02490 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x09be 02494 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x09c2 02498 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x09c2 02498 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x09c6 02502 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x09c8 02504 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x09cd 02509 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x09d5 02517 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+416(SP)
	0x09dd 02525 ($GOROOT/src/math/rand/rand.go:299)	JMP	2527
	0x09df 02527 (pointer_vs_value/code/benchmark_invocation_test.go:331)	MOVQ	"".~R0+416(SP), AX
	0x09e7 02535 (pointer_vs_value/code/benchmark_invocation_test.go:331)	MOVQ	AX, ""..autotmp_127+632(SP)
	0x09ef 02543 (pointer_vs_value/code/benchmark_invocation_test.go:331)	MOVQ	AX, "".~R0+352(SP)
	0x09f7 02551 (pointer_vs_value/code/benchmark_invocation_test.go:331)	JMP	2553
	0x09f9 02553 (pointer_vs_value/code/benchmark_invocation_test.go:332)	MOVQ	$0, "".~R0+376(SP)
	0x0a05 02565 (<unknown line number>)	NOP
	0x0a05 02565 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0a05 02565 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0a0c 02572 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0a0c 02572 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $23
	0x0a0c 02572 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1424(SP)
	0x0a14 02580 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+384(SP)
	0x0a20 02592 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0a20 02592 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0a20 02592 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1424(SP), AX
	0x0a28 02600 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0a2a 02602 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0a2d 02605 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0a2f 02607 (<unknown line number>)	NOP
	0x0a2f 02607 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0a33 02611 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0a37 02615 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0a37 02615 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0a3b 02619 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0a3d 02621 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0a42 02626 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x0a4a 02634 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+384(SP)
	0x0a52 02642 ($GOROOT/src/math/rand/rand.go:299)	JMP	2644
	0x0a54 02644 (pointer_vs_value/code/benchmark_invocation_test.go:332)	MOVQ	"".~R0+384(SP), AX
	0x0a5c 02652 (pointer_vs_value/code/benchmark_invocation_test.go:332)	MOVQ	AX, ""..autotmp_128+624(SP)
	0x0a64 02660 (pointer_vs_value/code/benchmark_invocation_test.go:332)	MOVQ	AX, "".~R0+376(SP)
	0x0a6c 02668 (pointer_vs_value/code/benchmark_invocation_test.go:332)	JMP	2670
	0x0a6e 02670 (pointer_vs_value/code/benchmark_invocation_test.go:333)	MOVQ	$0, "".~R0+392(SP)
	0x0a7a 02682 (<unknown line number>)	NOP
	0x0a7a 02682 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0a7a 02682 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0a81 02689 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0a81 02689 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $24
	0x0a81 02689 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1432(SP)
	0x0a89 02697 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+408(SP)
	0x0a95 02709 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0a95 02709 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0a95 02709 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1432(SP), AX
	0x0a9d 02717 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0a9f 02719 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0aa2 02722 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0aa4 02724 (<unknown line number>)	NOP
	0x0aa4 02724 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0aa8 02728 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0aac 02732 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0aac 02732 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0ab0 02736 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0ab2 02738 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0ab7 02743 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x0abf 02751 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+408(SP)
	0x0ac7 02759 ($GOROOT/src/math/rand/rand.go:299)	JMP	2761
	0x0ac9 02761 (pointer_vs_value/code/benchmark_invocation_test.go:333)	MOVQ	"".~R0+408(SP), AX
	0x0ad1 02769 (pointer_vs_value/code/benchmark_invocation_test.go:333)	MOVQ	AX, ""..autotmp_129+616(SP)
	0x0ad9 02777 (pointer_vs_value/code/benchmark_invocation_test.go:333)	MOVQ	AX, "".~R0+392(SP)
	0x0ae1 02785 (pointer_vs_value/code/benchmark_invocation_test.go:333)	JMP	2787
	0x0ae3 02787 (pointer_vs_value/code/benchmark_invocation_test.go:334)	MOVQ	$0, "".~R0+312(SP)
	0x0aef 02799 (<unknown line number>)	NOP
	0x0aef 02799 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0aef 02799 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0af6 02806 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0af6 02806 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $25
	0x0af6 02806 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1448(SP)
	0x0afe 02814 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+296(SP)
	0x0b0a 02826 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0b0a 02826 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0b0a 02826 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1448(SP), AX
	0x0b12 02834 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0b14 02836 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0b17 02839 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0b19 02841 (<unknown line number>)	NOP
	0x0b19 02841 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0b1d 02845 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0b21 02849 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0b21 02849 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0b25 02853 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0b27 02855 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0b2c 02860 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x0b34 02868 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+296(SP)
	0x0b3c 02876 ($GOROOT/src/math/rand/rand.go:299)	JMP	2878
	0x0b3e 02878 (pointer_vs_value/code/benchmark_invocation_test.go:334)	MOVQ	"".~R0+296(SP), AX
	0x0b46 02886 (pointer_vs_value/code/benchmark_invocation_test.go:334)	MOVQ	AX, ""..autotmp_130+608(SP)
	0x0b4e 02894 (pointer_vs_value/code/benchmark_invocation_test.go:334)	MOVQ	AX, "".~R0+312(SP)
	0x0b56 02902 (pointer_vs_value/code/benchmark_invocation_test.go:334)	JMP	2904
	0x0b58 02904 (pointer_vs_value/code/benchmark_invocation_test.go:335)	MOVQ	$0, "".~R0+424(SP)
	0x0b64 02916 (<unknown line number>)	NOP
	0x0b64 02916 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $2
	0x0b64 02916 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	math/rand.globalRand(SB), AX
	0x0b6b 02923 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$0, $0
	0x0b6b 02923 ($GOROOT/src/math/rand/rand.go:299)	PCDATA	$1, $26
	0x0b6b 02923 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, math/rand.r+1456(SP)
	0x0b73 02931 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	$0, "".~R0+288(SP)
	0x0b7f 02943 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $2
	0x0b7f 02943 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$1, $0
	0x0b7f 02943 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	math/rand.r+1456(SP), AX
	0x0b87 02951 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (AX)
	0x0b89 02953 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	(AX), CX
	0x0b8c 02956 ($GOROOT/src/math/rand/rand.go:85)	TESTB	AL, (CX)
	0x0b8e 02958 (<unknown line number>)	NOP
	0x0b8e 02958 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(AX), AX
	0x0b92 02962 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	24(CX), CX
	0x0b96 02966 ($GOROOT/src/math/rand/rand.go:85)	PCDATA	$0, $0
	0x0b96 02966 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, (SP)
	0x0b9a 02970 ($GOROOT/src/math/rand/rand.go:85)	CALL	CX
	0x0b9c 02972 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	8(SP), AX
	0x0ba1 02977 ($GOROOT/src/math/rand/rand.go:85)	MOVQ	AX, ""..autotmp_79+592(SP)
	0x0ba9 02985 ($GOROOT/src/math/rand/rand.go:299)	MOVQ	AX, "".~R0+288(SP)
	0x0bb1 02993 ($GOROOT/src/math/rand/rand.go:299)	JMP	2995
	0x0bb3 02995 (pointer_vs_value/code/benchmark_invocation_test.go:335)	MOVQ	"".~R0+288(SP), AX
	0x0bbb 03003 (pointer_vs_value/code/benchmark_invocation_test.go:335)	MOVQ	AX, ""..autotmp_131+600(SP)
	0x0bc3 03011 (pointer_vs_value/code/benchmark_invocation_test.go:335)	MOVQ	AX, "".~R0+424(SP)
	0x0bcb 03019 (pointer_vs_value/code/benchmark_invocation_test.go:335)	JMP	3021
	0x0bcd 03021 (pointer_vs_value/code/benchmark_invocation_test.go:336)	CALL	math/rand.Float64(SB)
	0x0bd2 03026 (pointer_vs_value/code/benchmark_invocation_test.go:336)	MOVSD	(SP), X0
	0x0bd7 03031 (pointer_vs_value/code/benchmark_invocation_test.go:336)	MOVSD	X0, ""..autotmp_80+584(SP)
	0x0be0 03040 (pointer_vs_value/code/benchmark_invocation_test.go:337)	CALL	math/rand.Float64(SB)
	0x0be5 03045 (pointer_vs_value/code/benchmark_invocation_test.go:337)	MOVSD	(SP), X0
	0x0bea 03050 (pointer_vs_value/code/benchmark_invocation_test.go:337)	MOVSD	X0, ""..autotmp_81+576(SP)
	0x0bf3 03059 (pointer_vs_value/code/benchmark_invocation_test.go:338)	CALL	math/rand.Float64(SB)
	0x0bf8 03064 (pointer_vs_value/code/benchmark_invocation_test.go:338)	MOVSD	(SP), X0
	0x0bfd 03069 (pointer_vs_value/code/benchmark_invocation_test.go:338)	MOVSD	X0, ""..autotmp_82+568(SP)
	0x0c06 03078 (pointer_vs_value/code/benchmark_invocation_test.go:339)	CALL	math/rand.Float64(SB)
	0x0c0b 03083 (pointer_vs_value/code/benchmark_invocation_test.go:339)	MOVSD	(SP), X0
	0x0c10 03088 (pointer_vs_value/code/benchmark_invocation_test.go:339)	MOVSD	X0, ""..autotmp_83+560(SP)
	0x0c19 03097 (pointer_vs_value/code/benchmark_invocation_test.go:340)	CALL	math/rand.Float64(SB)
	0x0c1e 03102 (pointer_vs_value/code/benchmark_invocation_test.go:340)	MOVSD	(SP), X0
	0x0c23 03107 (pointer_vs_value/code/benchmark_invocation_test.go:340)	MOVSD	X0, ""..autotmp_84+552(SP)
	0x0c2c 03116 (pointer_vs_value/code/benchmark_invocation_test.go:341)	CALL	math/rand.Float64(SB)
	0x0c31 03121 (pointer_vs_value/code/benchmark_invocation_test.go:341)	MOVSD	(SP), X0
	0x0c36 03126 (pointer_vs_value/code/benchmark_invocation_test.go:341)	MOVSD	X0, ""..autotmp_85+544(SP)
	0x0c3f 03135 (pointer_vs_value/code/benchmark_invocation_test.go:342)	CALL	math/rand.Float64(SB)
	0x0c44 03140 (pointer_vs_value/code/benchmark_invocation_test.go:342)	MOVSD	(SP), X0
	0x0c49 03145 (pointer_vs_value/code/benchmark_invocation_test.go:342)	MOVSD	X0, ""..autotmp_86+536(SP)
	0x0c52 03154 (pointer_vs_value/code/benchmark_invocation_test.go:343)	CALL	math/rand.Float64(SB)
	0x0c57 03159 (pointer_vs_value/code/benchmark_invocation_test.go:343)	MOVSD	(SP), X0
	0x0c5c 03164 (pointer_vs_value/code/benchmark_invocation_test.go:343)	MOVSD	X0, ""..autotmp_87+528(SP)
	0x0c65 03173 (pointer_vs_value/code/benchmark_invocation_test.go:344)	CALL	math/rand.Float64(SB)
	0x0c6a 03178 (pointer_vs_value/code/benchmark_invocation_test.go:344)	MOVSD	(SP), X0
	0x0c6f 03183 (pointer_vs_value/code/benchmark_invocation_test.go:344)	MOVSD	X0, ""..autotmp_88+520(SP)
	0x0c78 03192 (pointer_vs_value/code/benchmark_invocation_test.go:345)	CALL	math/rand.Float64(SB)
	0x0c7d 03197 (pointer_vs_value/code/benchmark_invocation_test.go:345)	MOVSD	(SP), X0
	0x0c82 03202 (pointer_vs_value/code/benchmark_invocation_test.go:345)	MOVSD	X0, ""..autotmp_89+512(SP)
	0x0c8b 03211 (pointer_vs_value/code/benchmark_invocation_test.go:346)	CALL	math/rand.Float64(SB)
	0x0c90 03216 (pointer_vs_value/code/benchmark_invocation_test.go:346)	MOVSD	(SP), X0
	0x0c95 03221 (pointer_vs_value/code/benchmark_invocation_test.go:346)	MOVSD	X0, ""..autotmp_90+504(SP)
	0x0c9e 03230 (pointer_vs_value/code/benchmark_invocation_test.go:347)	CALL	math/rand.Float64(SB)
	0x0ca3 03235 (pointer_vs_value/code/benchmark_invocation_test.go:347)	MOVSD	(SP), X0
	0x0ca8 03240 (pointer_vs_value/code/benchmark_invocation_test.go:347)	MOVSD	X0, ""..autotmp_91+496(SP)
	0x0cb1 03249 (pointer_vs_value/code/benchmark_invocation_test.go:348)	CALL	math/rand.Float64(SB)
	0x0cb6 03254 (pointer_vs_value/code/benchmark_invocation_test.go:348)	MOVSD	(SP), X0
	0x0cbb 03259 (pointer_vs_value/code/benchmark_invocation_test.go:348)	MOVSD	X0, ""..autotmp_92+488(SP)
	0x0cc4 03268 (pointer_vs_value/code/benchmark_invocation_test.go:349)	CALL	math/rand.Float64(SB)
	0x0cc9 03273 (pointer_vs_value/code/benchmark_invocation_test.go:349)	MOVSD	(SP), X0
	0x0cce 03278 (pointer_vs_value/code/benchmark_invocation_test.go:349)	MOVSD	X0, ""..autotmp_93+480(SP)
	0x0cd7 03287 (pointer_vs_value/code/benchmark_invocation_test.go:350)	CALL	math/rand.Float64(SB)
	0x0cdc 03292 (pointer_vs_value/code/benchmark_invocation_test.go:350)	MOVSD	(SP), X0
	0x0ce1 03297 (pointer_vs_value/code/benchmark_invocation_test.go:350)	MOVSD	X0, ""..autotmp_94+472(SP)
	0x0cea 03306 (pointer_vs_value/code/benchmark_invocation_test.go:351)	CALL	math/rand.Float64(SB)
	0x0cef 03311 (pointer_vs_value/code/benchmark_invocation_test.go:351)	MOVSD	(SP), X0
	0x0cf4 03316 (pointer_vs_value/code/benchmark_invocation_test.go:351)	MOVSD	X0, ""..autotmp_95+464(SP)
	0x0cfd 03325 (pointer_vs_value/code/benchmark_invocation_test.go:352)	CALL	math/rand.Float64(SB)
	0x0d02 03330 (pointer_vs_value/code/benchmark_invocation_test.go:352)	MOVSD	(SP), X0
	0x0d07 03335 (pointer_vs_value/code/benchmark_invocation_test.go:352)	MOVSD	X0, ""..autotmp_96+456(SP)
	0x0d10 03344 (pointer_vs_value/code/benchmark_invocation_test.go:353)	CALL	math/rand.Float64(SB)
	0x0d15 03349 (pointer_vs_value/code/benchmark_invocation_test.go:353)	MOVSD	(SP), X0
	0x0d1a 03354 (pointer_vs_value/code/benchmark_invocation_test.go:353)	MOVSD	X0, ""..autotmp_97+448(SP)
	0x0d23 03363 (pointer_vs_value/code/benchmark_invocation_test.go:354)	CALL	math/rand.Float64(SB)
	0x0d28 03368 (pointer_vs_value/code/benchmark_invocation_test.go:354)	MOVSD	(SP), X0
	0x0d2d 03373 (pointer_vs_value/code/benchmark_invocation_test.go:354)	MOVSD	X0, ""..autotmp_98+440(SP)
	0x0d36 03382 (pointer_vs_value/code/benchmark_invocation_test.go:355)	CALL	math/rand.Float64(SB)
	0x0d3b 03387 (pointer_vs_value/code/benchmark_invocation_test.go:355)	MOVSD	(SP), X0
	0x0d40 03392 (pointer_vs_value/code/benchmark_invocation_test.go:355)	MOVSD	X0, ""..autotmp_99+432(SP)
	0x0d49 03401 (pointer_vs_value/code/benchmark_invocation_test.go:356)	CALL	math/rand.Float64(SB)
	0x0d4e 03406 (pointer_vs_value/code/benchmark_invocation_test.go:356)	MOVSD	(SP), X0
	0x0d53 03411 (pointer_vs_value/code/benchmark_invocation_test.go:356)	MOVSD	X0, ""..autotmp_100+848(SP)
	0x0d5c 03420 (pointer_vs_value/code/benchmark_invocation_test.go:357)	CALL	math/rand.Float64(SB)
	0x0d61 03425 (pointer_vs_value/code/benchmark_invocation_test.go:357)	MOVSD	(SP), X0
	0x0d66 03430 (pointer_vs_value/code/benchmark_invocation_test.go:357)	MOVSD	X0, ""..autotmp_101+840(SP)
	0x0d6f 03439 (pointer_vs_value/code/benchmark_invocation_test.go:358)	CALL	math/rand.Float64(SB)
	0x0d74 03444 (pointer_vs_value/code/benchmark_invocation_test.go:358)	MOVSD	(SP), X0
	0x0d79 03449 (pointer_vs_value/code/benchmark_invocation_test.go:358)	MOVSD	X0, ""..autotmp_102+832(SP)
	0x0d82 03458 (pointer_vs_value/code/benchmark_invocation_test.go:359)	CALL	math/rand.Float64(SB)
	0x0d87 03463 (pointer_vs_value/code/benchmark_invocation_test.go:359)	MOVSD	(SP), X0
	0x0d8c 03468 (pointer_vs_value/code/benchmark_invocation_test.go:359)	MOVSD	X0, ""..autotmp_103+824(SP)
	0x0d95 03477 (pointer_vs_value/code/benchmark_invocation_test.go:360)	CALL	math/rand.Float64(SB)
	0x0d9a 03482 (pointer_vs_value/code/benchmark_invocation_test.go:360)	MOVSD	(SP), X0
	0x0d9f 03487 (pointer_vs_value/code/benchmark_invocation_test.go:360)	MOVSD	X0, ""..autotmp_104+816(SP)
	0x0da8 03496 (pointer_vs_value/code/benchmark_invocation_test.go:361)	CALL	math/rand.Float64(SB)
	0x0dad 03501 (pointer_vs_value/code/benchmark_invocation_test.go:361)	MOVSD	(SP), X0
	0x0db2 03506 (pointer_vs_value/code/benchmark_invocation_test.go:361)	MOVSD	X0, ""..autotmp_105+808(SP)
	0x0dbb 03515 (pointer_vs_value/code/benchmark_invocation_test.go:361)	PCDATA	$0, $1
	0x0dbb 03515 (pointer_vs_value/code/benchmark_invocation_test.go:361)	LEAQ	""..autotmp_132+856(SP), DI
	0x0dc3 03523 (pointer_vs_value/code/benchmark_invocation_test.go:361)	PCDATA	$0, $3
	0x0dc3 03523 (pointer_vs_value/code/benchmark_invocation_test.go:361)	LEAQ	""..stmp_22(SB), SI
	0x0dca 03530 (pointer_vs_value/code/benchmark_invocation_test.go:361)	PCDATA	$0, $0
	0x0dca 03530 (pointer_vs_value/code/benchmark_invocation_test.go:361)	DUFFCOPY	$532
	0x0ddd 03549 (pointer_vs_value/code/benchmark_invocation_test.go:310)	MOVQ	"".~R0+144(SP), AX
	0x0de5 03557 (pointer_vs_value/code/benchmark_invocation_test.go:310)	MOVQ	AX, ""..autotmp_132+856(SP)
	0x0ded 03565 (pointer_vs_value/code/benchmark_invocation_test.go:311)	MOVQ	"".~R0+304(SP), AX
	0x0df5 03573 (pointer_vs_value/code/benchmark_invocation_test.go:311)	MOVQ	AX, ""..autotmp_132+864(SP)
	0x0dfd 03581 (pointer_vs_value/code/benchmark_invocation_test.go:312)	MOVQ	"".~R0+320(SP), AX
	0x0e05 03589 (pointer_vs_value/code/benchmark_invocation_test.go:312)	MOVQ	AX, ""..autotmp_132+872(SP)
	0x0e0d 03597 (pointer_vs_value/code/benchmark_invocation_test.go:313)	MOVQ	"".~R0+360(SP), AX
	0x0e15 03605 (pointer_vs_value/code/benchmark_invocation_test.go:313)	MOVQ	AX, ""..autotmp_132+880(SP)
	0x0e1d 03613 (pointer_vs_value/code/benchmark_invocation_test.go:314)	MOVQ	"".~R0+264(SP), AX
	0x0e25 03621 (pointer_vs_value/code/benchmark_invocation_test.go:314)	MOVQ	AX, ""..autotmp_132+888(SP)
	0x0e2d 03629 (pointer_vs_value/code/benchmark_invocation_test.go:315)	MOVQ	"".~R0+40(SP), AX
	0x0e32 03634 (pointer_vs_value/code/benchmark_invocation_test.go:315)	MOVQ	AX, ""..autotmp_132+896(SP)
	0x0e3a 03642 (pointer_vs_value/code/benchmark_invocation_test.go:316)	MOVQ	"".~R0+192(SP), AX
	0x0e42 03650 (pointer_vs_value/code/benchmark_invocation_test.go:316)	MOVQ	AX, ""..autotmp_132+904(SP)
	0x0e4a 03658 (pointer_vs_value/code/benchmark_invocation_test.go:317)	MOVQ	"".~R0+136(SP), AX
	0x0e52 03666 (pointer_vs_value/code/benchmark_invocation_test.go:317)	MOVQ	AX, ""..autotmp_132+912(SP)
	0x0e5a 03674 (pointer_vs_value/code/benchmark_invocation_test.go:318)	MOVQ	"".~R0+88(SP), AX
	0x0e5f 03679 (pointer_vs_value/code/benchmark_invocation_test.go:318)	MOVQ	AX, ""..autotmp_132+920(SP)
	0x0e67 03687 (pointer_vs_value/code/benchmark_invocation_test.go:319)	MOVQ	"".~R0+16(SP), AX
	0x0e6c 03692 (pointer_vs_value/code/benchmark_invocation_test.go:319)	MOVQ	AX, ""..autotmp_132+928(SP)
	0x0e74 03700 (pointer_vs_value/code/benchmark_invocation_test.go:320)	MOVQ	"".~R0+32(SP), AX
	0x0e79 03705 (pointer_vs_value/code/benchmark_invocation_test.go:320)	MOVQ	AX, ""..autotmp_132+936(SP)
	0x0e81 03713 (pointer_vs_value/code/benchmark_invocation_test.go:321)	MOVQ	"".~R0+56(SP), AX
	0x0e86 03718 (pointer_vs_value/code/benchmark_invocation_test.go:321)	MOVQ	AX, ""..autotmp_132+944(SP)
	0x0e8e 03726 (pointer_vs_value/code/benchmark_invocation_test.go:322)	MOVQ	"".~R0+80(SP), AX
	0x0e93 03731 (pointer_vs_value/code/benchmark_invocation_test.go:322)	MOVQ	AX, ""..autotmp_132+952(SP)
	0x0e9b 03739 (pointer_vs_value/code/benchmark_invocation_test.go:323)	MOVQ	"".~R0+104(SP), AX
	0x0ea0 03744 (pointer_vs_value/code/benchmark_invocation_test.go:323)	MOVQ	AX, ""..autotmp_132+960(SP)
	0x0ea8 03752 (pointer_vs_value/code/benchmark_invocation_test.go:324)	MOVQ	"".~R0+128(SP), AX
	0x0eb0 03760 (pointer_vs_value/code/benchmark_invocation_test.go:324)	MOVQ	AX, ""..autotmp_132+968(SP)
	0x0eb8 03768 (pointer_vs_value/code/benchmark_invocation_test.go:325)	MOVQ	"".~R0+160(SP), AX
	0x0ec0 03776 (pointer_vs_value/code/benchmark_invocation_test.go:325)	MOVQ	AX, ""..autotmp_132+976(SP)
	0x0ec8 03784 (pointer_vs_value/code/benchmark_invocation_test.go:326)	MOVQ	"".~R0+184(SP), AX
	0x0ed0 03792 (pointer_vs_value/code/benchmark_invocation_test.go:326)	MOVQ	AX, ""..autotmp_132+984(SP)
	0x0ed8 03800 (pointer_vs_value/code/benchmark_invocation_test.go:327)	MOVQ	"".~R0+208(SP), AX
	0x0ee0 03808 (pointer_vs_value/code/benchmark_invocation_test.go:327)	MOVQ	AX, ""..autotmp_132+992(SP)
	0x0ee8 03816 (pointer_vs_value/code/benchmark_invocation_test.go:328)	MOVQ	"".~R0+232(SP), AX
	0x0ef0 03824 (pointer_vs_value/code/benchmark_invocation_test.go:328)	MOVQ	AX, ""..autotmp_132+1000(SP)
	0x0ef8 03832 (pointer_vs_value/code/benchmark_invocation_test.go:329)	MOVQ	"".~R0+256(SP), AX
	0x0f00 03840 (pointer_vs_value/code/benchmark_invocation_test.go:329)	MOVQ	AX, ""..autotmp_132+1008(SP)
	0x0f08 03848 (pointer_vs_value/code/benchmark_invocation_test.go:330)	MOVQ	"".~R0+328(SP), AX
	0x0f10 03856 (pointer_vs_value/code/benchmark_invocation_test.go:330)	MOVQ	AX, ""..autotmp_132+1016(SP)
	0x0f18 03864 (pointer_vs_value/code/benchmark_invocation_test.go:331)	MOVQ	"".~R0+352(SP), AX
	0x0f20 03872 (pointer_vs_value/code/benchmark_invocation_test.go:331)	MOVQ	AX, ""..autotmp_132+1024(SP)
	0x0f28 03880 (pointer_vs_value/code/benchmark_invocation_test.go:332)	MOVQ	"".~R0+376(SP), AX
	0x0f30 03888 (pointer_vs_value/code/benchmark_invocation_test.go:332)	MOVQ	AX, ""..autotmp_132+1032(SP)
	0x0f38 03896 (pointer_vs_value/code/benchmark_invocation_test.go:333)	MOVQ	"".~R0+392(SP), AX
	0x0f40 03904 (pointer_vs_value/code/benchmark_invocation_test.go:333)	MOVQ	AX, ""..autotmp_132+1040(SP)
	0x0f48 03912 (pointer_vs_value/code/benchmark_invocation_test.go:334)	MOVQ	"".~R0+312(SP), AX
	0x0f50 03920 (pointer_vs_value/code/benchmark_invocation_test.go:334)	MOVQ	AX, ""..autotmp_132+1048(SP)
	0x0f58 03928 (pointer_vs_value/code/benchmark_invocation_test.go:335)	MOVQ	"".~R0+424(SP), AX
	0x0f60 03936 (pointer_vs_value/code/benchmark_invocation_test.go:335)	MOVQ	AX, ""..autotmp_132+1056(SP)
	0x0f68 03944 (pointer_vs_value/code/benchmark_invocation_test.go:336)	MOVSD	""..autotmp_80+584(SP), X0
	0x0f71 03953 (pointer_vs_value/code/benchmark_invocation_test.go:336)	MOVSD	X0, ""..autotmp_132+1064(SP)
	0x0f7a 03962 (pointer_vs_value/code/benchmark_invocation_test.go:337)	MOVSD	""..autotmp_81+576(SP), X0
	0x0f83 03971 (pointer_vs_value/code/benchmark_invocation_test.go:337)	MOVSD	X0, ""..autotmp_132+1072(SP)
	0x0f8c 03980 (pointer_vs_value/code/benchmark_invocation_test.go:338)	MOVSD	""..autotmp_82+568(SP), X0
	0x0f95 03989 (pointer_vs_value/code/benchmark_invocation_test.go:338)	MOVSD	X0, ""..autotmp_132+1080(SP)
	0x0f9e 03998 (pointer_vs_value/code/benchmark_invocation_test.go:339)	MOVSD	""..autotmp_83+560(SP), X0
	0x0fa7 04007 (pointer_vs_value/code/benchmark_invocation_test.go:339)	MOVSD	X0, ""..autotmp_132+1088(SP)
	0x0fb0 04016 (pointer_vs_value/code/benchmark_invocation_test.go:340)	MOVSD	""..autotmp_84+552(SP), X0
	0x0fb9 04025 (pointer_vs_value/code/benchmark_invocation_test.go:340)	MOVSD	X0, ""..autotmp_132+1096(SP)
	0x0fc2 04034 (pointer_vs_value/code/benchmark_invocation_test.go:341)	MOVSD	""..autotmp_85+544(SP), X0
	0x0fcb 04043 (pointer_vs_value/code/benchmark_invocation_test.go:341)	MOVSD	X0, ""..autotmp_132+1104(SP)
	0x0fd4 04052 (pointer_vs_value/code/benchmark_invocation_test.go:342)	MOVSD	""..autotmp_86+536(SP), X0
	0x0fdd 04061 (pointer_vs_value/code/benchmark_invocation_test.go:342)	MOVSD	X0, ""..autotmp_132+1112(SP)
	0x0fe6 04070 (pointer_vs_value/code/benchmark_invocation_test.go:343)	MOVSD	""..autotmp_87+528(SP), X0
	0x0fef 04079 (pointer_vs_value/code/benchmark_invocation_test.go:343)	MOVSD	X0, ""..autotmp_132+1120(SP)
	0x0ff8 04088 (pointer_vs_value/code/benchmark_invocation_test.go:344)	MOVSD	""..autotmp_88+520(SP), X0
	0x1001 04097 (pointer_vs_value/code/benchmark_invocation_test.go:344)	MOVSD	X0, ""..autotmp_132+1128(SP)
	0x100a 04106 (pointer_vs_value/code/benchmark_invocation_test.go:345)	MOVSD	""..autotmp_89+512(SP), X0
	0x1013 04115 (pointer_vs_value/code/benchmark_invocation_test.go:345)	MOVSD	X0, ""..autotmp_132+1136(SP)
	0x101c 04124 (pointer_vs_value/code/benchmark_invocation_test.go:346)	MOVSD	""..autotmp_90+504(SP), X0
	0x1025 04133 (pointer_vs_value/code/benchmark_invocation_test.go:346)	MOVSD	X0, ""..autotmp_132+1144(SP)
	0x102e 04142 (pointer_vs_value/code/benchmark_invocation_test.go:347)	MOVSD	""..autotmp_91+496(SP), X0
	0x1037 04151 (pointer_vs_value/code/benchmark_invocation_test.go:347)	MOVSD	X0, ""..autotmp_132+1152(SP)
	0x1040 04160 (pointer_vs_value/code/benchmark_invocation_test.go:348)	MOVSD	""..autotmp_92+488(SP), X0
	0x1049 04169 (pointer_vs_value/code/benchmark_invocation_test.go:348)	MOVSD	X0, ""..autotmp_132+1160(SP)
	0x1052 04178 (pointer_vs_value/code/benchmark_invocation_test.go:349)	MOVSD	""..autotmp_93+480(SP), X0
	0x105b 04187 (pointer_vs_value/code/benchmark_invocation_test.go:349)	MOVSD	X0, ""..autotmp_132+1168(SP)
	0x1064 04196 (pointer_vs_value/code/benchmark_invocation_test.go:350)	MOVSD	""..autotmp_94+472(SP), X0
	0x106d 04205 (pointer_vs_value/code/benchmark_invocation_test.go:350)	MOVSD	X0, ""..autotmp_132+1176(SP)
	0x1076 04214 (pointer_vs_value/code/benchmark_invocation_test.go:351)	MOVSD	""..autotmp_95+464(SP), X0
	0x107f 04223 (pointer_vs_value/code/benchmark_invocation_test.go:351)	MOVSD	X0, ""..autotmp_132+1184(SP)
	0x1088 04232 (pointer_vs_value/code/benchmark_invocation_test.go:352)	MOVSD	""..autotmp_96+456(SP), X0
	0x1091 04241 (pointer_vs_value/code/benchmark_invocation_test.go:352)	MOVSD	X0, ""..autotmp_132+1192(SP)
	0x109a 04250 (pointer_vs_value/code/benchmark_invocation_test.go:353)	MOVSD	""..autotmp_97+448(SP), X0
	0x10a3 04259 (pointer_vs_value/code/benchmark_invocation_test.go:353)	MOVSD	X0, ""..autotmp_132+1200(SP)
	0x10ac 04268 (pointer_vs_value/code/benchmark_invocation_test.go:354)	MOVSD	""..autotmp_98+440(SP), X0
	0x10b5 04277 (pointer_vs_value/code/benchmark_invocation_test.go:354)	MOVSD	X0, ""..autotmp_132+1208(SP)
	0x10be 04286 (pointer_vs_value/code/benchmark_invocation_test.go:355)	MOVSD	""..autotmp_99+432(SP), X0
	0x10c7 04295 (pointer_vs_value/code/benchmark_invocation_test.go:355)	MOVSD	X0, ""..autotmp_132+1216(SP)
	0x10d0 04304 (pointer_vs_value/code/benchmark_invocation_test.go:356)	MOVSD	""..autotmp_100+848(SP), X0
	0x10d9 04313 (pointer_vs_value/code/benchmark_invocation_test.go:356)	MOVSD	X0, ""..autotmp_132+1224(SP)
	0x10e2 04322 (pointer_vs_value/code/benchmark_invocation_test.go:357)	MOVSD	""..autotmp_101+840(SP), X0
	0x10eb 04331 (pointer_vs_value/code/benchmark_invocation_test.go:357)	MOVSD	X0, ""..autotmp_132+1232(SP)
	0x10f4 04340 (pointer_vs_value/code/benchmark_invocation_test.go:358)	MOVSD	""..autotmp_102+832(SP), X0
	0x10fd 04349 (pointer_vs_value/code/benchmark_invocation_test.go:358)	MOVSD	X0, ""..autotmp_132+1240(SP)
	0x1106 04358 (pointer_vs_value/code/benchmark_invocation_test.go:359)	MOVSD	""..autotmp_103+824(SP), X0
	0x110f 04367 (pointer_vs_value/code/benchmark_invocation_test.go:359)	MOVSD	X0, ""..autotmp_132+1248(SP)
	0x1118 04376 (pointer_vs_value/code/benchmark_invocation_test.go:360)	MOVSD	""..autotmp_104+816(SP), X0
	0x1121 04385 (pointer_vs_value/code/benchmark_invocation_test.go:360)	MOVSD	X0, ""..autotmp_132+1256(SP)
	0x112a 04394 (pointer_vs_value/code/benchmark_invocation_test.go:361)	MOVSD	""..autotmp_105+808(SP), X0
	0x1133 04403 (pointer_vs_value/code/benchmark_invocation_test.go:361)	MOVSD	X0, ""..autotmp_132+1264(SP)
	0x113c 04412 (pointer_vs_value/code/benchmark_invocation_test.go:309)	PCDATA	$0, $1
	0x113c 04412 (pointer_vs_value/code/benchmark_invocation_test.go:309)	LEAQ	"".~r0+1496(SP), DI
	0x1144 04420 (pointer_vs_value/code/benchmark_invocation_test.go:309)	PCDATA	$0, $3
	0x1144 04420 (pointer_vs_value/code/benchmark_invocation_test.go:309)	LEAQ	""..autotmp_132+856(SP), SI
	0x114c 04428 (pointer_vs_value/code/benchmark_invocation_test.go:309)	PCDATA	$0, $0
	0x114c 04428 (pointer_vs_value/code/benchmark_invocation_test.go:309)	DUFFCOPY	$532
	0x115f 04447 (pointer_vs_value/code/benchmark_invocation_test.go:309)	MOVQ	1480(SP), BP
	0x1167 04455 (pointer_vs_value/code/benchmark_invocation_test.go:309)	ADDQ	$1488, SP
	0x116e 04462 (pointer_vs_value/code/benchmark_invocation_test.go:309)	RET
	0x116f 04463 (pointer_vs_value/code/benchmark_invocation_test.go:309)	NOP
	0x116f 04463 (pointer_vs_value/code/benchmark_invocation_test.go:308)	PCDATA	$1, $-1
	0x116f 04463 (pointer_vs_value/code/benchmark_invocation_test.go:308)	PCDATA	$0, $-1
	0x116f 04463 (pointer_vs_value/code/benchmark_invocation_test.go:308)	CALL	runtime.morestack_noctxt(SB)
	0x1174 04468 (pointer_vs_value/code/benchmark_invocation_test.go:308)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 b0 fa ff  eH..%....H..$...
	0x0010 ff 48 3b 41 10 0f 86 54 11 00 00 48 81 ec d0 05  .H;A...T...H....
	0x0020 00 00 48 89 ac 24 c8 05 00 00 48 8d ac 24 c8 05  ..H..$....H..$..
	0x0030 00 00 48 8d bc 24 d8 05 00 00 0f 57 c0 48 8d 7f  ..H..$.....W.H..
	0x0040 e0 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00 00  .H.l$.H.l$......
	0x0050 48 8b 6d 00 48 c7 84 24 90 00 00 00 00 00 00 00  H.m.H..$........
	0x0060 48 8b 05 00 00 00 00 48 89 84 24 b8 05 00 00 48  H......H..$....H
	0x0070 c7 84 24 18 01 00 00 00 00 00 00 48 8b 84 24 b8  ..$........H..$.
	0x0080 05 00 00 84 00 48 8b 08 84 01 48 8b 49 18 48 8b  .....H....H.I.H.
	0x0090 40 08 48 89 04 24 ff d1 48 8b 44 24 08 48 89 84  @.H..$..H.D$.H..
	0x00a0 24 50 02 00 00 48 89 84 24 18 01 00 00 eb 00 48  $P...H..$......H
	0x00b0 8b 84 24 18 01 00 00 48 89 84 24 20 03 00 00 48  ..$....H..$ ...H
	0x00c0 89 84 24 90 00 00 00 eb 00 48 c7 84 24 30 01 00  ..$......H..$0..
	0x00d0 00 00 00 00 00 48 8b 05 00 00 00 00 48 89 84 24  .....H......H..$
	0x00e0 a0 05 00 00 48 c7 84 24 90 01 00 00 00 00 00 00  ....H..$........
	0x00f0 48 8b 84 24 a0 05 00 00 84 00 48 8b 08 84 01 48  H..$......H....H
	0x0100 8b 49 18 48 8b 40 08 48 89 04 24 ff d1 48 8b 44  .I.H.@.H..$..H.D
	0x0110 24 08 48 89 84 24 50 02 00 00 48 89 84 24 90 01  $.H..$P...H..$..
	0x0120 00 00 eb 00 48 8b 84 24 90 01 00 00 48 89 84 24  ....H..$....H..$
	0x0130 18 03 00 00 48 89 84 24 30 01 00 00 eb 00 48 c7  ....H..$0.....H.
	0x0140 84 24 40 01 00 00 00 00 00 00 48 8b 05 00 00 00  .$@.......H.....
	0x0150 00 48 89 84 24 88 05 00 00 48 c7 84 24 70 01 00  .H..$....H..$p..
	0x0160 00 00 00 00 00 48 8b 84 24 88 05 00 00 84 00 48  .....H..$......H
	0x0170 8b 08 84 01 48 8b 49 18 48 8b 40 08 48 89 04 24  ....H.I.H.@.H..$
	0x0180 ff d1 48 8b 44 24 08 48 89 84 24 50 02 00 00 48  ..H.D$.H..$P...H
	0x0190 89 84 24 70 01 00 00 eb 00 48 8b 84 24 70 01 00  ..$p.....H..$p..
	0x01a0 00 48 89 84 24 10 03 00 00 48 89 84 24 40 01 00  .H..$....H..$@..
	0x01b0 00 eb 00 48 c7 84 24 68 01 00 00 00 00 00 00 48  ...H..$h.......H
	0x01c0 8b 05 00 00 00 00 48 89 84 24 70 05 00 00 48 c7  ......H..$p...H.
	0x01d0 84 24 50 01 00 00 00 00 00 00 48 8b 84 24 70 05  .$P.......H..$p.
	0x01e0 00 00 84 00 48 8b 08 84 01 48 8b 49 18 48 8b 40  ....H....H.I.H.@
	0x01f0 08 48 89 04 24 ff d1 48 8b 44 24 08 48 89 84 24  .H..$..H.D$.H..$
	0x0200 50 02 00 00 48 89 84 24 50 01 00 00 eb 00 48 8b  P...H..$P.....H.
	0x0210 84 24 50 01 00 00 48 89 84 24 08 03 00 00 48 89  .$P...H..$....H.
	0x0220 84 24 68 01 00 00 eb 00 48 c7 84 24 08 01 00 00  .$h.....H..$....
	0x0230 00 00 00 00 48 8b 05 00 00 00 00 48 89 84 24 58  ....H......H..$X
	0x0240 05 00 00 48 c7 84 24 f0 00 00 00 00 00 00 00 48  ...H..$........H
	0x0250 8b 84 24 58 05 00 00 84 00 48 8b 08 84 01 48 8b  ..$X.....H....H.
	0x0260 49 18 48 8b 40 08 48 89 04 24 ff d1 48 8b 44 24  I.H.@.H..$..H.D$
	0x0270 08 48 89 84 24 50 02 00 00 48 89 84 24 f0 00 00  .H..$P...H..$...
	0x0280 00 eb 00 48 8b 84 24 f0 00 00 00 48 89 84 24 00  ...H..$....H..$.
	0x0290 03 00 00 48 89 84 24 08 01 00 00 eb 00 48 c7 44  ...H..$......H.D
	0x02a0 24 28 00 00 00 00 48 8b 05 00 00 00 00 48 89 84  $(....H......H..
	0x02b0 24 40 05 00 00 48 c7 84 24 d8 00 00 00 00 00 00  $@...H..$.......
	0x02c0 00 48 8b 84 24 40 05 00 00 84 00 48 8b 08 84 01  .H..$@.....H....
	0x02d0 48 8b 49 18 48 8b 40 08 48 89 04 24 ff d1 48 8b  H.I.H.@.H..$..H.
	0x02e0 44 24 08 48 89 84 24 50 02 00 00 48 89 84 24 d8  D$.H..$P...H..$.
	0x02f0 00 00 00 eb 00 48 8b 84 24 d8 00 00 00 48 89 84  .....H..$....H..
	0x0300 24 f8 02 00 00 48 89 44 24 28 eb 00 48 c7 84 24  $....H.D$(..H..$
	0x0310 c0 00 00 00 00 00 00 00 48 8b 05 00 00 00 00 48  ........H......H
	0x0320 89 84 24 28 05 00 00 48 c7 84 24 a8 00 00 00 00  ..$(...H..$.....
	0x0330 00 00 00 48 8b 84 24 28 05 00 00 84 00 48 8b 08  ...H..$(.....H..
	0x0340 84 01 48 8b 49 18 48 8b 40 08 48 89 04 24 ff d1  ..H.I.H.@.H..$..
	0x0350 48 8b 44 24 08 48 89 84 24 50 02 00 00 48 89 84  H.D$.H..$P...H..
	0x0360 24 a8 00 00 00 eb 00 48 8b 84 24 a8 00 00 00 48  $......H..$....H
	0x0370 89 84 24 f0 02 00 00 48 89 84 24 c0 00 00 00 eb  ..$....H..$.....
	0x0380 00 48 c7 84 24 88 00 00 00 00 00 00 00 48 8b 05  .H..$........H..
	0x0390 00 00 00 00 48 89 84 24 10 05 00 00 48 c7 44 24  ....H..$....H.D$
	0x03a0 70 00 00 00 00 48 8b 84 24 10 05 00 00 84 00 48  p....H..$......H
	0x03b0 8b 08 84 01 48 8b 49 18 48 8b 40 08 48 89 04 24  ....H.I.H.@.H..$
	0x03c0 ff d1 48 8b 44 24 08 48 89 84 24 50 02 00 00 48  ..H.D$.H..$P...H
	0x03d0 89 44 24 70 eb 00 48 8b 44 24 70 48 89 84 24 e8  .D$p..H.D$pH..$.
	0x03e0 02 00 00 48 89 84 24 88 00 00 00 eb 00 48 c7 44  ...H..$......H.D
	0x03f0 24 58 00 00 00 00 48 8b 05 00 00 00 00 48 89 84  $X....H......H..
	0x0400 24 48 05 00 00 48 c7 44 24 40 00 00 00 00 48 8b  $H...H.D$@....H.
	0x0410 84 24 48 05 00 00 84 00 48 8b 08 84 01 48 8b 49  .$H.....H....H.I
	0x0420 18 48 8b 40 08 48 89 04 24 ff d1 48 8b 44 24 08  .H.@.H..$..H.D$.
	0x0430 48 89 84 24 50 02 00 00 48 89 44 24 40 eb 00 48  H..$P...H.D$@..H
	0x0440 8b 44 24 40 48 89 84 24 e0 02 00 00 48 89 44 24  .D$@H..$....H.D$
	0x0450 58 eb 00 48 c7 44 24 10 00 00 00 00 48 8b 05 00  X..H.D$.....H...
	0x0460 00 00 00 48 89 84 24 c0 05 00 00 48 c7 44 24 18  ...H..$....H.D$.
	0x0470 00 00 00 00 48 8b 84 24 c0 05 00 00 84 00 48 8b  ....H..$......H.
	0x0480 08 84 01 48 8b 49 18 48 8b 40 08 48 89 04 24 ff  ...H.I.H.@.H..$.
	0x0490 d1 48 8b 44 24 08 48 89 84 24 50 02 00 00 48 89  .H.D$.H..$P...H.
	0x04a0 44 24 18 eb 00 48 8b 44 24 18 48 89 84 24 d8 02  D$...H.D$.H..$..
	0x04b0 00 00 48 89 44 24 10 eb 00 48 c7 44 24 20 00 00  ..H.D$...H.D$ ..
	0x04c0 00 00 48 8b 05 00 00 00 00 48 89 84 24 80 05 00  ..H......H..$...
	0x04d0 00 48 c7 44 24 30 00 00 00 00 48 8b 84 24 80 05  .H.D$0....H..$..
	0x04e0 00 00 84 00 48 8b 08 84 01 48 8b 49 18 48 8b 40  ....H....H.I.H.@
	0x04f0 08 48 89 04 24 ff d1 48 8b 44 24 08 48 89 84 24  .H..$..H.D$.H..$
	0x0500 50 02 00 00 48 89 44 24 30 eb 00 48 8b 44 24 30  P...H.D$0..H.D$0
	0x0510 48 89 84 24 d0 02 00 00 48 89 44 24 20 eb 00 48  H..$....H.D$ ..H
	0x0520 c7 44 24 38 00 00 00 00 48 8b 05 00 00 00 00 48  .D$8....H......H
	0x0530 89 84 24 f8 04 00 00 48 c7 44 24 48 00 00 00 00  ..$....H.D$H....
	0x0540 48 8b 84 24 f8 04 00 00 84 00 48 8b 08 84 01 48  H..$......H....H
	0x0550 8b 40 08 48 8b 49 18 48 89 04 24 ff d1 48 8b 44  .@.H.I.H..$..H.D
	0x0560 24 08 48 89 84 24 50 02 00 00 48 89 44 24 48 eb  $.H..$P...H.D$H.
	0x0570 00 48 8b 44 24 48 48 89 84 24 c8 02 00 00 48 89  .H.D$HH..$....H.
	0x0580 44 24 38 eb 00 48 c7 44 24 50 00 00 00 00 48 8b  D$8..H.D$P....H.
	0x0590 05 00 00 00 00 48 89 84 24 00 05 00 00 48 c7 44  .....H..$....H.D
	0x05a0 24 60 00 00 00 00 48 8b 84 24 00 05 00 00 84 00  $`....H..$......
	0x05b0 48 8b 08 84 01 48 8b 40 08 48 8b 49 18 48 89 04  H....H.@.H.I.H..
	0x05c0 24 ff d1 48 8b 44 24 08 48 89 84 24 50 02 00 00  $..H.D$.H..$P...
	0x05d0 48 89 44 24 60 eb 00 48 8b 44 24 60 48 89 84 24  H.D$`..H.D$`H..$
	0x05e0 c0 02 00 00 48 89 44 24 50 eb 00 48 c7 44 24 68  ....H.D$P..H.D$h
	0x05f0 00 00 00 00 48 8b 05 00 00 00 00 48 89 84 24 08  ....H......H..$.
	0x0600 05 00 00 48 c7 44 24 78 00 00 00 00 48 8b 84 24  ...H.D$x....H..$
	0x0610 08 05 00 00 84 00 48 8b 08 84 01 48 8b 40 08 48  ......H....H.@.H
	0x0620 8b 49 18 48 89 04 24 ff d1 48 8b 44 24 08 48 89  .I.H..$..H.D$.H.
	0x0630 84 24 50 02 00 00 48 89 44 24 78 eb 00 48 8b 44  .$P...H.D$x..H.D
	0x0640 24 78 48 89 84 24 b8 02 00 00 48 89 44 24 68 eb  $xH..$....H.D$h.
	0x0650 00 48 c7 84 24 80 00 00 00 00 00 00 00 48 8b 05  .H..$........H..
	0x0660 00 00 00 00 48 89 84 24 18 05 00 00 48 c7 84 24  ....H..$....H..$
	0x0670 98 00 00 00 00 00 00 00 48 8b 84 24 18 05 00 00  ........H..$....
	0x0680 84 00 48 8b 08 84 01 48 8b 40 08 48 8b 49 18 48  ..H....H.@.H.I.H
	0x0690 89 04 24 ff d1 48 8b 44 24 08 48 89 84 24 50 02  ..$..H.D$.H..$P.
	0x06a0 00 00 48 89 84 24 98 00 00 00 eb 00 48 8b 84 24  ..H..$......H..$
	0x06b0 98 00 00 00 48 89 84 24 b0 02 00 00 48 89 84 24  ....H..$....H..$
	0x06c0 80 00 00 00 eb 00 48 c7 84 24 a0 00 00 00 00 00  ......H..$......
	0x06d0 00 00 48 8b 05 00 00 00 00 48 89 84 24 20 05 00  ..H......H..$ ..
	0x06e0 00 48 c7 84 24 b0 00 00 00 00 00 00 00 48 8b 84  .H..$........H..
	0x06f0 24 20 05 00 00 84 00 48 8b 08 84 01 48 8b 40 08  $ .....H....H.@.
	0x0700 48 8b 49 18 48 89 04 24 ff d1 48 8b 44 24 08 48  H.I.H..$..H.D$.H
	0x0710 89 84 24 50 02 00 00 48 89 84 24 b0 00 00 00 eb  ..$P...H..$.....
	0x0720 00 48 8b 84 24 b0 00 00 00 48 89 84 24 a8 02 00  .H..$....H..$...
	0x0730 00 48 89 84 24 a0 00 00 00 eb 00 48 c7 84 24 b8  .H..$......H..$.
	0x0740 00 00 00 00 00 00 00 48 8b 05 00 00 00 00 48 89  .......H......H.
	0x0750 84 24 30 05 00 00 48 c7 84 24 c8 00 00 00 00 00  .$0...H..$......
	0x0760 00 00 48 8b 84 24 30 05 00 00 84 00 48 8b 08 84  ..H..$0.....H...
	0x0770 01 48 8b 40 08 48 8b 49 18 48 89 04 24 ff d1 48  .H.@.H.I.H..$..H
	0x0780 8b 44 24 08 48 89 84 24 50 02 00 00 48 89 84 24  .D$.H..$P...H..$
	0x0790 c8 00 00 00 eb 00 48 8b 84 24 c8 00 00 00 48 89  ......H..$....H.
	0x07a0 84 24 a0 02 00 00 48 89 84 24 b8 00 00 00 eb 00  .$....H..$......
	0x07b0 48 c7 84 24 d0 00 00 00 00 00 00 00 48 8b 05 00  H..$........H...
	0x07c0 00 00 00 48 89 84 24 38 05 00 00 48 c7 84 24 e0  ...H..$8...H..$.
	0x07d0 00 00 00 00 00 00 00 48 8b 84 24 38 05 00 00 84  .......H..$8....
	0x07e0 00 48 8b 08 84 01 48 8b 40 08 48 8b 49 18 48 89  .H....H.@.H.I.H.
	0x07f0 04 24 ff d1 48 8b 44 24 08 48 89 84 24 50 02 00  .$..H.D$.H..$P..
	0x0800 00 48 89 84 24 e0 00 00 00 eb 00 48 8b 84 24 e0  .H..$......H..$.
	0x0810 00 00 00 48 89 84 24 98 02 00 00 48 89 84 24 d0  ...H..$....H..$.
	0x0820 00 00 00 eb 00 48 c7 84 24 e8 00 00 00 00 00 00  .....H..$.......
	0x0830 00 48 8b 05 00 00 00 00 48 89 84 24 50 05 00 00  .H......H..$P...
	0x0840 48 c7 84 24 f8 00 00 00 00 00 00 00 48 8b 84 24  H..$........H..$
	0x0850 50 05 00 00 84 00 48 8b 08 84 01 48 8b 49 18 48  P.....H....H.I.H
	0x0860 8b 40 08 48 89 04 24 ff d1 48 8b 44 24 08 48 89  .@.H..$..H.D$.H.
	0x0870 84 24 50 02 00 00 48 89 84 24 f8 00 00 00 eb 00  .$P...H..$......
	0x0880 48 8b 84 24 f8 00 00 00 48 89 84 24 90 02 00 00  H..$....H..$....
	0x0890 48 89 84 24 e8 00 00 00 eb 00 48 c7 84 24 00 01  H..$......H..$..
	0x08a0 00 00 00 00 00 00 48 8b 05 00 00 00 00 48 89 84  ......H......H..
	0x08b0 24 60 05 00 00 48 c7 84 24 10 01 00 00 00 00 00  $`...H..$.......
	0x08c0 00 48 8b 84 24 60 05 00 00 84 00 48 8b 08 84 01  .H..$`.....H....
	0x08d0 48 8b 49 18 48 8b 40 08 48 89 04 24 ff d1 48 8b  H.I.H.@.H..$..H.
	0x08e0 44 24 08 48 89 84 24 50 02 00 00 48 89 84 24 10  D$.H..$P...H..$.
	0x08f0 01 00 00 eb 00 48 8b 84 24 10 01 00 00 48 89 84  .....H..$....H..
	0x0900 24 88 02 00 00 48 89 84 24 00 01 00 00 eb 00 48  $....H..$......H
	0x0910 c7 84 24 48 01 00 00 00 00 00 00 48 8b 05 00 00  ..$H.......H....
	0x0920 00 00 48 89 84 24 68 05 00 00 48 c7 84 24 58 01  ..H..$h...H..$X.
	0x0930 00 00 00 00 00 00 48 8b 84 24 68 05 00 00 84 00  ......H..$h.....
	0x0940 48 8b 08 84 01 48 8b 49 18 48 8b 40 08 48 89 04  H....H.I.H.@.H..
	0x0950 24 ff d1 48 8b 44 24 08 48 89 84 24 50 02 00 00  $..H.D$.H..$P...
	0x0960 48 89 84 24 58 01 00 00 eb 00 48 8b 84 24 58 01  H..$X.....H..$X.
	0x0970 00 00 48 89 84 24 80 02 00 00 48 89 84 24 48 01  ..H..$....H..$H.
	0x0980 00 00 eb 00 48 c7 84 24 60 01 00 00 00 00 00 00  ....H..$`.......
	0x0990 48 8b 05 00 00 00 00 48 89 84 24 78 05 00 00 48  H......H..$x...H
	0x09a0 c7 84 24 a0 01 00 00 00 00 00 00 48 8b 84 24 78  ..$........H..$x
	0x09b0 05 00 00 84 00 48 8b 08 84 01 48 8b 40 08 48 8b  .....H....H.@.H.
	0x09c0 49 18 48 89 04 24 ff d1 48 8b 44 24 08 48 89 84  I.H..$..H.D$.H..
	0x09d0 24 50 02 00 00 48 89 84 24 a0 01 00 00 eb 00 48  $P...H..$......H
	0x09e0 8b 84 24 a0 01 00 00 48 89 84 24 78 02 00 00 48  ..$....H..$x...H
	0x09f0 89 84 24 60 01 00 00 eb 00 48 c7 84 24 78 01 00  ..$`.....H..$x..
	0x0a00 00 00 00 00 00 48 8b 05 00 00 00 00 48 89 84 24  .....H......H..$
	0x0a10 90 05 00 00 48 c7 84 24 80 01 00 00 00 00 00 00  ....H..$........
	0x0a20 48 8b 84 24 90 05 00 00 84 00 48 8b 08 84 01 48  H..$......H....H
	0x0a30 8b 40 08 48 8b 49 18 48 89 04 24 ff d1 48 8b 44  .@.H.I.H..$..H.D
	0x0a40 24 08 48 89 84 24 50 02 00 00 48 89 84 24 80 01  $.H..$P...H..$..
	0x0a50 00 00 eb 00 48 8b 84 24 80 01 00 00 48 89 84 24  ....H..$....H..$
	0x0a60 70 02 00 00 48 89 84 24 78 01 00 00 eb 00 48 c7  p...H..$x.....H.
	0x0a70 84 24 88 01 00 00 00 00 00 00 48 8b 05 00 00 00  .$........H.....
	0x0a80 00 48 89 84 24 98 05 00 00 48 c7 84 24 98 01 00  .H..$....H..$...
	0x0a90 00 00 00 00 00 48 8b 84 24 98 05 00 00 84 00 48  .....H..$......H
	0x0aa0 8b 08 84 01 48 8b 40 08 48 8b 49 18 48 89 04 24  ....H.@.H.I.H..$
	0x0ab0 ff d1 48 8b 44 24 08 48 89 84 24 50 02 00 00 48  ..H.D$.H..$P...H
	0x0ac0 89 84 24 98 01 00 00 eb 00 48 8b 84 24 98 01 00  ..$......H..$...
	0x0ad0 00 48 89 84 24 68 02 00 00 48 89 84 24 88 01 00  .H..$h...H..$...
	0x0ae0 00 eb 00 48 c7 84 24 38 01 00 00 00 00 00 00 48  ...H..$8.......H
	0x0af0 8b 05 00 00 00 00 48 89 84 24 a8 05 00 00 48 c7  ......H..$....H.
	0x0b00 84 24 28 01 00 00 00 00 00 00 48 8b 84 24 a8 05  .$(.......H..$..
	0x0b10 00 00 84 00 48 8b 08 84 01 48 8b 40 08 48 8b 49  ....H....H.@.H.I
	0x0b20 18 48 89 04 24 ff d1 48 8b 44 24 08 48 89 84 24  .H..$..H.D$.H..$
	0x0b30 50 02 00 00 48 89 84 24 28 01 00 00 eb 00 48 8b  P...H..$(.....H.
	0x0b40 84 24 28 01 00 00 48 89 84 24 60 02 00 00 48 89  .$(...H..$`...H.
	0x0b50 84 24 38 01 00 00 eb 00 48 c7 84 24 a8 01 00 00  .$8.....H..$....
	0x0b60 00 00 00 00 48 8b 05 00 00 00 00 48 89 84 24 b0  ....H......H..$.
	0x0b70 05 00 00 48 c7 84 24 20 01 00 00 00 00 00 00 48  ...H..$ .......H
	0x0b80 8b 84 24 b0 05 00 00 84 00 48 8b 08 84 01 48 8b  ..$......H....H.
	0x0b90 40 08 48 8b 49 18 48 89 04 24 ff d1 48 8b 44 24  @.H.I.H..$..H.D$
	0x0ba0 08 48 89 84 24 50 02 00 00 48 89 84 24 20 01 00  .H..$P...H..$ ..
	0x0bb0 00 eb 00 48 8b 84 24 20 01 00 00 48 89 84 24 58  ...H..$ ...H..$X
	0x0bc0 02 00 00 48 89 84 24 a8 01 00 00 eb 00 e8 00 00  ...H..$.........
	0x0bd0 00 00 f2 0f 10 04 24 f2 0f 11 84 24 48 02 00 00  ......$....$H...
	0x0be0 e8 00 00 00 00 f2 0f 10 04 24 f2 0f 11 84 24 40  .........$....$@
	0x0bf0 02 00 00 e8 00 00 00 00 f2 0f 10 04 24 f2 0f 11  ............$...
	0x0c00 84 24 38 02 00 00 e8 00 00 00 00 f2 0f 10 04 24  .$8............$
	0x0c10 f2 0f 11 84 24 30 02 00 00 e8 00 00 00 00 f2 0f  ....$0..........
	0x0c20 10 04 24 f2 0f 11 84 24 28 02 00 00 e8 00 00 00  ..$....$(.......
	0x0c30 00 f2 0f 10 04 24 f2 0f 11 84 24 20 02 00 00 e8  .....$....$ ....
	0x0c40 00 00 00 00 f2 0f 10 04 24 f2 0f 11 84 24 18 02  ........$....$..
	0x0c50 00 00 e8 00 00 00 00 f2 0f 10 04 24 f2 0f 11 84  ...........$....
	0x0c60 24 10 02 00 00 e8 00 00 00 00 f2 0f 10 04 24 f2  $.............$.
	0x0c70 0f 11 84 24 08 02 00 00 e8 00 00 00 00 f2 0f 10  ...$............
	0x0c80 04 24 f2 0f 11 84 24 00 02 00 00 e8 00 00 00 00  .$....$.........
	0x0c90 f2 0f 10 04 24 f2 0f 11 84 24 f8 01 00 00 e8 00  ....$....$......
	0x0ca0 00 00 00 f2 0f 10 04 24 f2 0f 11 84 24 f0 01 00  .......$....$...
	0x0cb0 00 e8 00 00 00 00 f2 0f 10 04 24 f2 0f 11 84 24  ..........$....$
	0x0cc0 e8 01 00 00 e8 00 00 00 00 f2 0f 10 04 24 f2 0f  .............$..
	0x0cd0 11 84 24 e0 01 00 00 e8 00 00 00 00 f2 0f 10 04  ..$.............
	0x0ce0 24 f2 0f 11 84 24 d8 01 00 00 e8 00 00 00 00 f2  $....$..........
	0x0cf0 0f 10 04 24 f2 0f 11 84 24 d0 01 00 00 e8 00 00  ...$....$.......
	0x0d00 00 00 f2 0f 10 04 24 f2 0f 11 84 24 c8 01 00 00  ......$....$....
	0x0d10 e8 00 00 00 00 f2 0f 10 04 24 f2 0f 11 84 24 c0  .........$....$.
	0x0d20 01 00 00 e8 00 00 00 00 f2 0f 10 04 24 f2 0f 11  ............$...
	0x0d30 84 24 b8 01 00 00 e8 00 00 00 00 f2 0f 10 04 24  .$.............$
	0x0d40 f2 0f 11 84 24 b0 01 00 00 e8 00 00 00 00 f2 0f  ....$...........
	0x0d50 10 04 24 f2 0f 11 84 24 50 03 00 00 e8 00 00 00  ..$....$P.......
	0x0d60 00 f2 0f 10 04 24 f2 0f 11 84 24 48 03 00 00 e8  .....$....$H....
	0x0d70 00 00 00 00 f2 0f 10 04 24 f2 0f 11 84 24 40 03  ........$....$@.
	0x0d80 00 00 e8 00 00 00 00 f2 0f 10 04 24 f2 0f 11 84  ...........$....
	0x0d90 24 38 03 00 00 e8 00 00 00 00 f2 0f 10 04 24 f2  $8............$.
	0x0da0 0f 11 84 24 30 03 00 00 e8 00 00 00 00 f2 0f 10  ...$0...........
	0x0db0 04 24 f2 0f 11 84 24 28 03 00 00 48 8d bc 24 58  .$....$(...H..$X
	0x0dc0 03 00 00 48 8d 35 00 00 00 00 48 89 6c 24 f0 48  ...H.5....H.l$.H
	0x0dd0 8d 6c 24 f0 e8 00 00 00 00 48 8b 6d 00 48 8b 84  .l$......H.m.H..
	0x0de0 24 90 00 00 00 48 89 84 24 58 03 00 00 48 8b 84  $....H..$X...H..
	0x0df0 24 30 01 00 00 48 89 84 24 60 03 00 00 48 8b 84  $0...H..$`...H..
	0x0e00 24 40 01 00 00 48 89 84 24 68 03 00 00 48 8b 84  $@...H..$h...H..
	0x0e10 24 68 01 00 00 48 89 84 24 70 03 00 00 48 8b 84  $h...H..$p...H..
	0x0e20 24 08 01 00 00 48 89 84 24 78 03 00 00 48 8b 44  $....H..$x...H.D
	0x0e30 24 28 48 89 84 24 80 03 00 00 48 8b 84 24 c0 00  $(H..$....H..$..
	0x0e40 00 00 48 89 84 24 88 03 00 00 48 8b 84 24 88 00  ..H..$....H..$..
	0x0e50 00 00 48 89 84 24 90 03 00 00 48 8b 44 24 58 48  ..H..$....H.D$XH
	0x0e60 89 84 24 98 03 00 00 48 8b 44 24 10 48 89 84 24  ..$....H.D$.H..$
	0x0e70 a0 03 00 00 48 8b 44 24 20 48 89 84 24 a8 03 00  ....H.D$ H..$...
	0x0e80 00 48 8b 44 24 38 48 89 84 24 b0 03 00 00 48 8b  .H.D$8H..$....H.
	0x0e90 44 24 50 48 89 84 24 b8 03 00 00 48 8b 44 24 68  D$PH..$....H.D$h
	0x0ea0 48 89 84 24 c0 03 00 00 48 8b 84 24 80 00 00 00  H..$....H..$....
	0x0eb0 48 89 84 24 c8 03 00 00 48 8b 84 24 a0 00 00 00  H..$....H..$....
	0x0ec0 48 89 84 24 d0 03 00 00 48 8b 84 24 b8 00 00 00  H..$....H..$....
	0x0ed0 48 89 84 24 d8 03 00 00 48 8b 84 24 d0 00 00 00  H..$....H..$....
	0x0ee0 48 89 84 24 e0 03 00 00 48 8b 84 24 e8 00 00 00  H..$....H..$....
	0x0ef0 48 89 84 24 e8 03 00 00 48 8b 84 24 00 01 00 00  H..$....H..$....
	0x0f00 48 89 84 24 f0 03 00 00 48 8b 84 24 48 01 00 00  H..$....H..$H...
	0x0f10 48 89 84 24 f8 03 00 00 48 8b 84 24 60 01 00 00  H..$....H..$`...
	0x0f20 48 89 84 24 00 04 00 00 48 8b 84 24 78 01 00 00  H..$....H..$x...
	0x0f30 48 89 84 24 08 04 00 00 48 8b 84 24 88 01 00 00  H..$....H..$....
	0x0f40 48 89 84 24 10 04 00 00 48 8b 84 24 38 01 00 00  H..$....H..$8...
	0x0f50 48 89 84 24 18 04 00 00 48 8b 84 24 a8 01 00 00  H..$....H..$....
	0x0f60 48 89 84 24 20 04 00 00 f2 0f 10 84 24 48 02 00  H..$ .......$H..
	0x0f70 00 f2 0f 11 84 24 28 04 00 00 f2 0f 10 84 24 40  .....$(.......$@
	0x0f80 02 00 00 f2 0f 11 84 24 30 04 00 00 f2 0f 10 84  .......$0.......
	0x0f90 24 38 02 00 00 f2 0f 11 84 24 38 04 00 00 f2 0f  $8.......$8.....
	0x0fa0 10 84 24 30 02 00 00 f2 0f 11 84 24 40 04 00 00  ..$0.......$@...
	0x0fb0 f2 0f 10 84 24 28 02 00 00 f2 0f 11 84 24 48 04  ....$(.......$H.
	0x0fc0 00 00 f2 0f 10 84 24 20 02 00 00 f2 0f 11 84 24  ......$ .......$
	0x0fd0 50 04 00 00 f2 0f 10 84 24 18 02 00 00 f2 0f 11  P.......$.......
	0x0fe0 84 24 58 04 00 00 f2 0f 10 84 24 10 02 00 00 f2  .$X.......$.....
	0x0ff0 0f 11 84 24 60 04 00 00 f2 0f 10 84 24 08 02 00  ...$`.......$...
	0x1000 00 f2 0f 11 84 24 68 04 00 00 f2 0f 10 84 24 00  .....$h.......$.
	0x1010 02 00 00 f2 0f 11 84 24 70 04 00 00 f2 0f 10 84  .......$p.......
	0x1020 24 f8 01 00 00 f2 0f 11 84 24 78 04 00 00 f2 0f  $........$x.....
	0x1030 10 84 24 f0 01 00 00 f2 0f 11 84 24 80 04 00 00  ..$........$....
	0x1040 f2 0f 10 84 24 e8 01 00 00 f2 0f 11 84 24 88 04  ....$........$..
	0x1050 00 00 f2 0f 10 84 24 e0 01 00 00 f2 0f 11 84 24  ......$........$
	0x1060 90 04 00 00 f2 0f 10 84 24 d8 01 00 00 f2 0f 11  ........$.......
	0x1070 84 24 98 04 00 00 f2 0f 10 84 24 d0 01 00 00 f2  .$........$.....
	0x1080 0f 11 84 24 a0 04 00 00 f2 0f 10 84 24 c8 01 00  ...$........$...
	0x1090 00 f2 0f 11 84 24 a8 04 00 00 f2 0f 10 84 24 c0  .....$........$.
	0x10a0 01 00 00 f2 0f 11 84 24 b0 04 00 00 f2 0f 10 84  .......$........
	0x10b0 24 b8 01 00 00 f2 0f 11 84 24 b8 04 00 00 f2 0f  $........$......
	0x10c0 10 84 24 b0 01 00 00 f2 0f 11 84 24 c0 04 00 00  ..$........$....
	0x10d0 f2 0f 10 84 24 50 03 00 00 f2 0f 11 84 24 c8 04  ....$P.......$..
	0x10e0 00 00 f2 0f 10 84 24 48 03 00 00 f2 0f 11 84 24  ......$H.......$
	0x10f0 d0 04 00 00 f2 0f 10 84 24 40 03 00 00 f2 0f 11  ........$@......
	0x1100 84 24 d8 04 00 00 f2 0f 10 84 24 38 03 00 00 f2  .$........$8....
	0x1110 0f 11 84 24 e0 04 00 00 f2 0f 10 84 24 30 03 00  ...$........$0..
	0x1120 00 f2 0f 11 84 24 e8 04 00 00 f2 0f 10 84 24 28  .....$........$(
	0x1130 03 00 00 f2 0f 11 84 24 f0 04 00 00 48 8d bc 24  .......$....H..$
	0x1140 d8 05 00 00 48 8d b4 24 58 03 00 00 48 89 6c 24  ....H..$X...H.l$
	0x1150 f0 48 8d 6c 24 f0 e8 00 00 00 00 48 8b 6d 00 48  .H.l$......H.m.H
	0x1160 8b ac 24 c8 05 00 00 48 81 c4 d0 05 00 00 c3 e8  ..$....H........
	0x1170 00 00 00 00 e9 87 ee ff ff                       .........
	rel 5+4 t=16 TLS+0
	rel 76+4 t=8 runtime.duffzero+178
	rel 99+4 t=15 math/rand.globalRand+0
	rel 150+0 t=11 +0
	rel 216+4 t=15 math/rand.globalRand+0
	rel 267+0 t=11 +0
	rel 333+4 t=15 math/rand.globalRand+0
	rel 384+0 t=11 +0
	rel 450+4 t=15 math/rand.globalRand+0
	rel 501+0 t=11 +0
	rel 567+4 t=15 math/rand.globalRand+0
	rel 618+0 t=11 +0
	rel 681+4 t=15 math/rand.globalRand+0
	rel 732+0 t=11 +0
	rel 795+4 t=15 math/rand.globalRand+0
	rel 846+0 t=11 +0
	rel 912+4 t=15 math/rand.globalRand+0
	rel 960+0 t=11 +0
	rel 1017+4 t=15 math/rand.globalRand+0
	rel 1065+0 t=11 +0
	rel 1119+4 t=15 math/rand.globalRand+0
	rel 1167+0 t=11 +0
	rel 1221+4 t=15 math/rand.globalRand+0
	rel 1269+0 t=11 +0
	rel 1323+4 t=15 math/rand.globalRand+0
	rel 1371+0 t=11 +0
	rel 1425+4 t=15 math/rand.globalRand+0
	rel 1473+0 t=11 +0
	rel 1527+4 t=15 math/rand.globalRand+0
	rel 1575+0 t=11 +0
	rel 1632+4 t=15 math/rand.globalRand+0
	rel 1683+0 t=11 +0
	rel 1749+4 t=15 math/rand.globalRand+0
	rel 1800+0 t=11 +0
	rel 1866+4 t=15 math/rand.globalRand+0
	rel 1917+0 t=11 +0
	rel 1983+4 t=15 math/rand.globalRand+0
	rel 2034+0 t=11 +0
	rel 2100+4 t=15 math/rand.globalRand+0
	rel 2151+0 t=11 +0
	rel 2217+4 t=15 math/rand.globalRand+0
	rel 2268+0 t=11 +0
	rel 2334+4 t=15 math/rand.globalRand+0
	rel 2385+0 t=11 +0
	rel 2451+4 t=15 math/rand.globalRand+0
	rel 2502+0 t=11 +0
	rel 2568+4 t=15 math/rand.globalRand+0
	rel 2619+0 t=11 +0
	rel 2685+4 t=15 math/rand.globalRand+0
	rel 2736+0 t=11 +0
	rel 2802+4 t=15 math/rand.globalRand+0
	rel 2853+0 t=11 +0
	rel 2919+4 t=15 math/rand.globalRand+0
	rel 2970+0 t=11 +0
	rel 3022+4 t=8 math/rand.Float64+0
	rel 3041+4 t=8 math/rand.Float64+0
	rel 3060+4 t=8 math/rand.Float64+0
	rel 3079+4 t=8 math/rand.Float64+0
	rel 3098+4 t=8 math/rand.Float64+0
	rel 3117+4 t=8 math/rand.Float64+0
	rel 3136+4 t=8 math/rand.Float64+0
	rel 3155+4 t=8 math/rand.Float64+0
	rel 3174+4 t=8 math/rand.Float64+0
	rel 3193+4 t=8 math/rand.Float64+0
	rel 3212+4 t=8 math/rand.Float64+0
	rel 3231+4 t=8 math/rand.Float64+0
	rel 3250+4 t=8 math/rand.Float64+0
	rel 3269+4 t=8 math/rand.Float64+0
	rel 3288+4 t=8 math/rand.Float64+0
	rel 3307+4 t=8 math/rand.Float64+0
	rel 3326+4 t=8 math/rand.Float64+0
	rel 3345+4 t=8 math/rand.Float64+0
	rel 3364+4 t=8 math/rand.Float64+0
	rel 3383+4 t=8 math/rand.Float64+0
	rel 3402+4 t=8 math/rand.Float64+0
	rel 3421+4 t=8 math/rand.Float64+0
	rel 3440+4 t=8 math/rand.Float64+0
	rel 3459+4 t=8 math/rand.Float64+0
	rel 3478+4 t=8 math/rand.Float64+0
	rel 3497+4 t=8 math/rand.Float64+0
	rel 3526+4 t=15 ""..stmp_22+0
	rel 3541+4 t=8 runtime.duffcopy+532
	rel 4439+4 t=8 runtime.duffcopy+532
	rel 4464+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkMicro_Iter STEXT size=803 args=0x8 locals=0x138
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:9)	TEXT	"".BenchmarkMicro_Iter(SB), ABIInternal, $312-8
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:9)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_iter_test.go:9)	LEAQ	-184(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_iter_test.go:9)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_iter_test.go:9)	JLS	793
	0x001b 00027 (pointer_vs_value/code/benchmark_iter_test.go:9)	SUBQ	$312, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_iter_test.go:9)	MOVQ	BP, 304(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_iter_test.go:9)	LEAQ	304(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:9)	FUNCDATA	$0, gclocals·280f5f1a80fa13c3d75c87f7c396d461(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:9)	FUNCDATA	$1, gclocals·2fba0d18e3c0524a612c61a89e5a5d1d(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:9)	FUNCDATA	$2, gclocals·c1ff80de5d851c57919e6de5599e7aaf(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:9)	FUNCDATA	$3, "".BenchmarkMicro_Iter.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:11)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:11)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:11)	CALL	"".createMicro(SB)
	0x0037 00055 (pointer_vs_value/code/benchmark_iter_test.go:11)	MOVSD	8(SP), X0
	0x003d 00061 (pointer_vs_value/code/benchmark_iter_test.go:11)	MOVQ	(SP), AX
	0x0041 00065 (pointer_vs_value/code/benchmark_iter_test.go:11)	MOVQ	AX, "".o+80(SP)
	0x0046 00070 (pointer_vs_value/code/benchmark_iter_test.go:11)	MOVSD	X0, "".o+88(SP)
	0x004c 00076 (pointer_vs_value/code/benchmark_iter_test.go:13)	MOVQ	$0, "".i+32(SP)
	0x0055 00085 (pointer_vs_value/code/benchmark_iter_test.go:13)	PCDATA	$0, $-2
	0x0055 00085 (pointer_vs_value/code/benchmark_iter_test.go:13)	PCDATA	$1, $-2
	0x0055 00085 (pointer_vs_value/code/benchmark_iter_test.go:13)	JMP	87
	0x0057 00087 (pointer_vs_value/code/benchmark_iter_test.go:13)	PCDATA	$0, $1
	0x0057 00087 (pointer_vs_value/code/benchmark_iter_test.go:13)	PCDATA	$1, $0
	0x0057 00087 (pointer_vs_value/code/benchmark_iter_test.go:13)	MOVQ	"".b+320(SP), AX
	0x005f 00095 (pointer_vs_value/code/benchmark_iter_test.go:13)	TESTB	AL, (AX)
	0x0061 00097 (pointer_vs_value/code/benchmark_iter_test.go:13)	PCDATA	$0, $0
	0x0061 00097 (pointer_vs_value/code/benchmark_iter_test.go:13)	MOVQ	264(AX), AX
	0x0068 00104 (pointer_vs_value/code/benchmark_iter_test.go:13)	CMPQ	"".i+32(SP), AX
	0x006d 00109 (pointer_vs_value/code/benchmark_iter_test.go:13)	JLT	116
	0x006f 00111 (pointer_vs_value/code/benchmark_iter_test.go:13)	JMP	777
	0x0074 00116 (pointer_vs_value/code/benchmark_iter_test.go:14)	MOVQ	$0, "".a+48(SP)
	0x007d 00125 (pointer_vs_value/code/benchmark_iter_test.go:14)	JMP	127
	0x007f 00127 (pointer_vs_value/code/benchmark_iter_test.go:14)	CMPQ	"".a+48(SP), $100000000
	0x0088 00136 (pointer_vs_value/code/benchmark_iter_test.go:14)	JLT	143
	0x008a 00138 (pointer_vs_value/code/benchmark_iter_test.go:14)	JMP	757
	0x008f 00143 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVQ	"".o+80(SP), AX
	0x0094 00148 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVSD	"".o+88(SP), X0
	0x009a 00154 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVQ	AX, "".o+96(SP)
	0x009f 00159 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVSD	X0, "".o+104(SP)
	0x00a5 00165 (pointer_vs_value/code/benchmark_iter_test.go:15)	XORPS	X0, X0
	0x00a8 00168 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVSD	X0, "".~r1+24(SP)
	0x00ae 00174 (pointer_vs_value/code/benchmark_iter_test.go:15)	XORPS	X1, X1
	0x00b1 00177 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVUPS	X1, "".~r2+136(SP)
	0x00b9 00185 (<unknown line number>)	NOP
	0x00b9 00185 (pointer_vs_value/code/func.go:8)	MOVSD	"".o+104(SP), X1
	0x00bf 00191 (pointer_vs_value/code/func.go:8)	UCOMISD	X0, X1
	0x00c3 00195 (pointer_vs_value/code/func.go:8)	JNE	696
	0x00c9 00201 (pointer_vs_value/code/func.go:8)	JPC	208
	0x00cb 00203 (pointer_vs_value/code/func.go:8)	JMP	696
	0x00d0 00208 (pointer_vs_value/code/func.go:9)	PCDATA	$0, $1
	0x00d0 00208 (pointer_vs_value/code/func.go:9)	PCDATA	$1, $1
	0x00d0 00208 (pointer_vs_value/code/func.go:9)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x00d7 00215 (pointer_vs_value/code/func.go:9)	PCDATA	$0, $0
	0x00d7 00215 (pointer_vs_value/code/func.go:9)	MOVQ	AX, errors.text+168(SP)
	0x00df 00223 (pointer_vs_value/code/func.go:9)	MOVQ	$22, errors.text+176(SP)
	0x00eb 00235 (pointer_vs_value/code/func.go:9)	XORPS	X1, X1
	0x00ee 00238 (pointer_vs_value/code/func.go:9)	MOVUPS	X1, "".~R0+152(SP)
	0x00f6 00246 (<unknown line number>)	NOP
	0x00f6 00246 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $2
	0x00f6 00246 ($GOROOT/src/errors/errors.go:59)	XORPS	X1, X1
	0x00f9 00249 ($GOROOT/src/errors/errors.go:59)	MOVUPS	X1, ""..autotmp_16+248(SP)
	0x0101 00257 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $2
	0x0101 00257 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $1
	0x0101 00257 ($GOROOT/src/errors/errors.go:59)	LEAQ	""..autotmp_16+248(SP), CX
	0x0109 00265 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_15+120(SP)
	0x010e 00270 ($GOROOT/src/errors/errors.go:59)	TESTB	AL, (CX)
	0x0110 00272 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+176(SP), DX
	0x0118 00280 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x0118 00280 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $0
	0x0118 00280 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+168(SP), BX
	0x0120 00288 ($GOROOT/src/errors/errors.go:59)	MOVQ	DX, ""..autotmp_16+256(SP)
	0x0128 00296 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $2
	0x0128 00296 ($GOROOT/src/errors/errors.go:59)	MOVQ	BX, ""..autotmp_16+248(SP)
	0x0130 00304 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_13+128(SP)
	0x0138 00312 (pointer_vs_value/code/func.go:9)	PCDATA	$0, $4
	0x0138 00312 (pointer_vs_value/code/func.go:9)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x013f 00319 (pointer_vs_value/code/func.go:9)	MOVQ	DX, ""..autotmp_17+232(SP)
	0x0147 00327 (pointer_vs_value/code/func.go:9)	MOVQ	CX, ""..autotmp_17+240(SP)
	0x014f 00335 (pointer_vs_value/code/func.go:9)	PCDATA	$0, $2
	0x014f 00335 (pointer_vs_value/code/func.go:9)	PCDATA	$1, $3
	0x014f 00335 (pointer_vs_value/code/func.go:9)	MOVQ	DX, "".~R0+152(SP)
	0x0157 00343 (pointer_vs_value/code/func.go:9)	PCDATA	$0, $0
	0x0157 00343 (pointer_vs_value/code/func.go:9)	MOVQ	CX, "".~R0+160(SP)
	0x015f 00351 (pointer_vs_value/code/func.go:9)	JMP	353
	0x0161 00353 (pointer_vs_value/code/benchmark_iter_test.go:15)	PCDATA	$0, $2
	0x0161 00353 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVQ	"".~R0+160(SP), CX
	0x0169 00361 (pointer_vs_value/code/benchmark_iter_test.go:15)	PCDATA	$1, $0
	0x0169 00361 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVQ	"".~R0+152(SP), BX
	0x0171 00369 (pointer_vs_value/code/benchmark_iter_test.go:15)	PCDATA	$1, $4
	0x0171 00369 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVQ	BX, ""..autotmp_18+216(SP)
	0x0179 00377 (pointer_vs_value/code/benchmark_iter_test.go:15)	PCDATA	$0, $0
	0x0179 00377 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVQ	CX, ""..autotmp_18+224(SP)
	0x0181 00385 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVSD	X0, "".~r1+24(SP)
	0x0187 00391 (pointer_vs_value/code/benchmark_iter_test.go:15)	PCDATA	$0, $2
	0x0187 00391 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVQ	""..autotmp_18+224(SP), CX
	0x018f 00399 (pointer_vs_value/code/benchmark_iter_test.go:15)	PCDATA	$1, $0
	0x018f 00399 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVQ	""..autotmp_18+216(SP), BX
	0x0197 00407 (pointer_vs_value/code/benchmark_iter_test.go:15)	PCDATA	$1, $5
	0x0197 00407 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVQ	BX, "".~r2+136(SP)
	0x019f 00415 (pointer_vs_value/code/benchmark_iter_test.go:15)	PCDATA	$0, $0
	0x019f 00415 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVQ	CX, "".~r2+144(SP)
	0x01a7 00423 (pointer_vs_value/code/benchmark_iter_test.go:15)	JMP	425
	0x01a9 00425 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVSD	"".~r1+24(SP), X1
	0x01af 00431 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVSD	X1, ""..autotmp_20+64(SP)
	0x01b5 00437 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVSD	X1, ""..autotmp_4+56(SP)
	0x01bb 00443 (pointer_vs_value/code/benchmark_iter_test.go:15)	PCDATA	$0, $2
	0x01bb 00443 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVQ	"".~r2+144(SP), CX
	0x01c3 00451 (pointer_vs_value/code/benchmark_iter_test.go:15)	PCDATA	$1, $0
	0x01c3 00451 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVQ	"".~r2+136(SP), BX
	0x01cb 00459 (pointer_vs_value/code/benchmark_iter_test.go:15)	PCDATA	$1, $6
	0x01cb 00459 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVQ	BX, ""..autotmp_5+200(SP)
	0x01d3 00467 (pointer_vs_value/code/benchmark_iter_test.go:15)	PCDATA	$0, $0
	0x01d3 00467 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVQ	CX, ""..autotmp_5+208(SP)
	0x01db 00475 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVSD	""..autotmp_4+56(SP), X1
	0x01e1 00481 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVSD	X1, "".f+40(SP)
	0x01e7 00487 (pointer_vs_value/code/benchmark_iter_test.go:15)	PCDATA	$0, $2
	0x01e7 00487 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVQ	""..autotmp_5+208(SP), CX
	0x01ef 00495 (pointer_vs_value/code/benchmark_iter_test.go:15)	PCDATA	$1, $0
	0x01ef 00495 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVQ	""..autotmp_5+200(SP), BX
	0x01f7 00503 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVQ	BX, "".err+184(SP)
	0x01ff 00511 (pointer_vs_value/code/benchmark_iter_test.go:15)	PCDATA	$0, $0
	0x01ff 00511 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVQ	CX, "".err+192(SP)
	0x0207 00519 (<unknown line number>)	NOP
	0x0207 00519 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	BX, BX
	0x020a 00522 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	529
	0x020c 00524 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	694
	0x0211 00529 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $7
	0x0211 00529 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X1, X1
	0x0214 00532 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X1, ""..autotmp_14+264(SP)
	0x021c 00540 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $2
	0x021c 00540 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $0
	0x021c 00540 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_14+264(SP), CX
	0x0224 00548 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_22+112(SP)
	0x0229 00553 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x022b 00555 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x022b 00555 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), BX
	0x0232 00562 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $2
	0x0232 00562 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	BX, ""..autotmp_14+264(SP)
	0x023a 00570 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $5
	0x023a 00570 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_23(SB), SI
	0x0241 00577 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $2
	0x0241 00577 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	SI, ""..autotmp_14+272(SP)
	0x0249 00585 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x024b 00587 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	589
	0x024d 00589 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_21+280(SP)
	0x0255 00597 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_21+288(SP)
	0x0261 00609 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_21+296(SP)
	0x026d 00621 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x026d 00621 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, (SP)
	0x0271 00625 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x027a 00634 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x0283 00643 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x0288 00648 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	650
	0x028a 00650 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x0292 00658 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+40(SP), X0
	0x0298 00664 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x02a0 00672 (pointer_vs_value/code/benchmark_iter_test.go:15)	JMP	674
	0x02a2 00674 (pointer_vs_value/code/benchmark_iter_test.go:14)	PCDATA	$0, $-2
	0x02a2 00674 (pointer_vs_value/code/benchmark_iter_test.go:14)	PCDATA	$1, $-2
	0x02a2 00674 (pointer_vs_value/code/benchmark_iter_test.go:14)	JMP	676
	0x02a4 00676 (pointer_vs_value/code/benchmark_iter_test.go:14)	PCDATA	$0, $0
	0x02a4 00676 (pointer_vs_value/code/benchmark_iter_test.go:14)	PCDATA	$1, $0
	0x02a4 00676 (pointer_vs_value/code/benchmark_iter_test.go:14)	MOVQ	"".a+48(SP), AX
	0x02a9 00681 (pointer_vs_value/code/benchmark_iter_test.go:14)	INCQ	AX
	0x02ac 00684 (pointer_vs_value/code/benchmark_iter_test.go:14)	MOVQ	AX, "".a+48(SP)
	0x02b1 00689 (pointer_vs_value/code/benchmark_iter_test.go:14)	JMP	127
	0x02b6 00694 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x02b6 00694 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x02b6 00694 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	650
	0x02b8 00696 (pointer_vs_value/code/func.go:11)	PCDATA	$0, $0
	0x02b8 00696 (pointer_vs_value/code/func.go:11)	PCDATA	$1, $0
	0x02b8 00696 (pointer_vs_value/code/func.go:11)	MOVQ	"".o+96(SP), CX
	0x02bd 00701 (pointer_vs_value/code/func.go:11)	XORPS	X1, X1
	0x02c0 00704 (pointer_vs_value/code/func.go:11)	CVTSQ2SD	CX, X1
	0x02c5 00709 (pointer_vs_value/code/func.go:11)	DIVSD	"".o+104(SP), X1
	0x02cb 00715 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVSD	X1, ""..autotmp_19+72(SP)
	0x02d1 00721 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVSD	X1, "".~r1+24(SP)
	0x02d7 00727 (pointer_vs_value/code/benchmark_iter_test.go:15)	PCDATA	$1, $5
	0x02d7 00727 (pointer_vs_value/code/benchmark_iter_test.go:15)	XORPS	X1, X1
	0x02da 00730 (pointer_vs_value/code/benchmark_iter_test.go:15)	MOVUPS	X1, "".~r2+136(SP)
	0x02e2 00738 (pointer_vs_value/code/benchmark_iter_test.go:15)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x02e9 00745 (pointer_vs_value/code/benchmark_iter_test.go:15)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x02f0 00752 (pointer_vs_value/code/benchmark_iter_test.go:15)	JMP	425
	0x02f5 00757 (pointer_vs_value/code/benchmark_iter_test.go:13)	PCDATA	$0, $-2
	0x02f5 00757 (pointer_vs_value/code/benchmark_iter_test.go:13)	PCDATA	$1, $-2
	0x02f5 00757 (pointer_vs_value/code/benchmark_iter_test.go:13)	JMP	759
	0x02f7 00759 (pointer_vs_value/code/benchmark_iter_test.go:13)	PCDATA	$0, $0
	0x02f7 00759 (pointer_vs_value/code/benchmark_iter_test.go:13)	PCDATA	$1, $0
	0x02f7 00759 (pointer_vs_value/code/benchmark_iter_test.go:13)	MOVQ	"".i+32(SP), AX
	0x02fc 00764 (pointer_vs_value/code/benchmark_iter_test.go:13)	INCQ	AX
	0x02ff 00767 (pointer_vs_value/code/benchmark_iter_test.go:13)	MOVQ	AX, "".i+32(SP)
	0x0304 00772 (pointer_vs_value/code/benchmark_iter_test.go:13)	JMP	87
	0x0309 00777 (<unknown line number>)	PCDATA	$0, $-2
	0x0309 00777 (<unknown line number>)	PCDATA	$1, $-2
	0x0309 00777 (<unknown line number>)	MOVQ	304(SP), BP
	0x0311 00785 (<unknown line number>)	ADDQ	$312, SP
	0x0318 00792 (<unknown line number>)	RET
	0x0319 00793 (<unknown line number>)	NOP
	0x0319 00793 (pointer_vs_value/code/benchmark_iter_test.go:9)	PCDATA	$1, $-1
	0x0319 00793 (pointer_vs_value/code/benchmark_iter_test.go:9)	PCDATA	$0, $-1
	0x0319 00793 (pointer_vs_value/code/benchmark_iter_test.go:9)	CALL	runtime.morestack_noctxt(SB)
	0x031e 00798 (pointer_vs_value/code/benchmark_iter_test.go:9)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 48 ff ff  eH..%....H..$H..
	0x0010 ff 48 3b 41 10 0f 86 fe 02 00 00 48 81 ec 38 01  .H;A.......H..8.
	0x0020 00 00 48 89 ac 24 30 01 00 00 48 8d ac 24 30 01  ..H..$0...H..$0.
	0x0030 00 00 e8 00 00 00 00 f2 0f 10 44 24 08 48 8b 04  ..........D$.H..
	0x0040 24 48 89 44 24 50 f2 0f 11 44 24 58 48 c7 44 24  $H.D$P...D$XH.D$
	0x0050 20 00 00 00 00 eb 00 48 8b 84 24 40 01 00 00 84   ......H..$@....
	0x0060 00 48 8b 80 08 01 00 00 48 39 44 24 20 7c 05 e9  .H......H9D$ |..
	0x0070 95 02 00 00 48 c7 44 24 30 00 00 00 00 eb 00 48  ....H.D$0......H
	0x0080 81 7c 24 30 00 e1 f5 05 7c 05 e9 66 02 00 00 48  .|$0....|..f...H
	0x0090 8b 44 24 50 f2 0f 10 44 24 58 48 89 44 24 60 f2  .D$P...D$XH.D$`.
	0x00a0 0f 11 44 24 68 0f 57 c0 f2 0f 11 44 24 18 0f 57  ..D$h.W....D$..W
	0x00b0 c9 0f 11 8c 24 88 00 00 00 f2 0f 10 4c 24 68 66  ....$.......L$hf
	0x00c0 0f 2e c8 0f 85 ef 01 00 00 7b 05 e9 e8 01 00 00  .........{......
	0x00d0 48 8d 05 00 00 00 00 48 89 84 24 a8 00 00 00 48  H......H..$....H
	0x00e0 c7 84 24 b0 00 00 00 16 00 00 00 0f 57 c9 0f 11  ..$.........W...
	0x00f0 8c 24 98 00 00 00 0f 57 c9 0f 11 8c 24 f8 00 00  .$.....W....$...
	0x0100 00 48 8d 8c 24 f8 00 00 00 48 89 4c 24 78 84 01  .H..$....H.L$x..
	0x0110 48 8b 94 24 b0 00 00 00 48 8b 9c 24 a8 00 00 00  H..$....H..$....
	0x0120 48 89 94 24 00 01 00 00 48 89 9c 24 f8 00 00 00  H..$....H..$....
	0x0130 48 89 8c 24 80 00 00 00 48 8d 15 00 00 00 00 48  H..$....H......H
	0x0140 89 94 24 e8 00 00 00 48 89 8c 24 f0 00 00 00 48  ..$....H..$....H
	0x0150 89 94 24 98 00 00 00 48 89 8c 24 a0 00 00 00 eb  ..$....H..$.....
	0x0160 00 48 8b 8c 24 a0 00 00 00 48 8b 9c 24 98 00 00  .H..$....H..$...
	0x0170 00 48 89 9c 24 d8 00 00 00 48 89 8c 24 e0 00 00  .H..$....H..$...
	0x0180 00 f2 0f 11 44 24 18 48 8b 8c 24 e0 00 00 00 48  ....D$.H..$....H
	0x0190 8b 9c 24 d8 00 00 00 48 89 9c 24 88 00 00 00 48  ..$....H..$....H
	0x01a0 89 8c 24 90 00 00 00 eb 00 f2 0f 10 4c 24 18 f2  ..$.........L$..
	0x01b0 0f 11 4c 24 40 f2 0f 11 4c 24 38 48 8b 8c 24 90  ..L$@...L$8H..$.
	0x01c0 00 00 00 48 8b 9c 24 88 00 00 00 48 89 9c 24 c8  ...H..$....H..$.
	0x01d0 00 00 00 48 89 8c 24 d0 00 00 00 f2 0f 10 4c 24  ...H..$.......L$
	0x01e0 38 f2 0f 11 4c 24 28 48 8b 8c 24 d0 00 00 00 48  8...L$(H..$....H
	0x01f0 8b 9c 24 c8 00 00 00 48 89 9c 24 b8 00 00 00 48  ..$....H..$....H
	0x0200 89 8c 24 c0 00 00 00 48 85 db 75 05 e9 a5 00 00  ..$....H..u.....
	0x0210 00 0f 57 c9 0f 11 8c 24 08 01 00 00 48 8d 8c 24  ..W....$....H..$
	0x0220 08 01 00 00 48 89 4c 24 70 84 01 48 8d 1d 00 00  ....H.L$p..H....
	0x0230 00 00 48 89 9c 24 08 01 00 00 48 8d 35 00 00 00  ..H..$....H.5...
	0x0240 00 48 89 b4 24 10 01 00 00 84 01 eb 00 48 89 8c  .H..$........H..
	0x0250 24 18 01 00 00 48 c7 84 24 20 01 00 00 01 00 00  $....H..$ ......
	0x0260 00 48 c7 84 24 28 01 00 00 01 00 00 00 48 89 0c  .H..$(.......H..
	0x0270 24 48 c7 44 24 08 01 00 00 00 48 c7 44 24 10 01  $H.D$.....H.D$..
	0x0280 00 00 00 e8 00 00 00 00 eb 00 f2 0f 10 05 00 00  ................
	0x0290 00 00 f2 0f 58 44 24 28 f2 0f 11 05 00 00 00 00  ....XD$(........
	0x02a0 eb 00 eb 00 48 8b 44 24 30 48 ff c0 48 89 44 24  ....H.D$0H..H.D$
	0x02b0 30 e9 c9 fd ff ff eb d2 48 8b 4c 24 60 0f 57 c9  0.......H.L$`.W.
	0x02c0 f2 48 0f 2a c9 f2 0f 5e 4c 24 68 f2 0f 11 4c 24  .H.*...^L$h...L$
	0x02d0 48 f2 0f 11 4c 24 18 0f 57 c9 0f 11 8c 24 88 00  H...L$..W....$..
	0x02e0 00 00 48 8d 05 00 00 00 00 48 8d 15 00 00 00 00  ..H......H......
	0x02f0 e9 b4 fe ff ff eb 00 48 8b 44 24 20 48 ff c0 48  .......H.D$ H..H
	0x0300 89 44 24 20 e9 4e fd ff ff 48 8b ac 24 30 01 00  .D$ .N...H..$0..
	0x0310 00 48 81 c4 38 01 00 00 c3 e8 00 00 00 00 e9 dd  .H..8...........
	0x0320 fc ff ff                                         ...
	rel 5+4 t=16 TLS+0
	rel 51+4 t=8 "".createMicro+0
	rel 211+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 315+4 t=15 go.itab.*errors.errorString,error+0
	rel 558+4 t=15 type.string+0
	rel 573+4 t=15 ""..stmp_23+0
	rel 644+4 t=8 log.Fatal+0
	rel 654+4 t=15 "".F+0
	rel 668+4 t=15 "".F+0
	rel 741+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 748+4 t=15 go.itab.*errors.errorString,error+0
	rel 794+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkMicroP_Iter STEXT size=813 args=0x8 locals=0x138
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:21)	TEXT	"".BenchmarkMicroP_Iter(SB), ABIInternal, $312-8
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:21)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_iter_test.go:21)	LEAQ	-184(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_iter_test.go:21)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_iter_test.go:21)	JLS	803
	0x001b 00027 (pointer_vs_value/code/benchmark_iter_test.go:21)	SUBQ	$312, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_iter_test.go:21)	MOVQ	BP, 304(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_iter_test.go:21)	LEAQ	304(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:21)	FUNCDATA	$0, gclocals·bb2ddec3984c001925e1824edd6d6bcf(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:21)	FUNCDATA	$1, gclocals·3add79447fae350bd519a2cf4ce3d6d4(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:21)	FUNCDATA	$2, gclocals·461fb64e646d1cd7131d277febeb23b5(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:21)	FUNCDATA	$3, "".BenchmarkMicroP_Iter.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:23)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:23)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:23)	CALL	"".createMicro(SB)
	0x0037 00055 (pointer_vs_value/code/benchmark_iter_test.go:23)	MOVSD	8(SP), X0
	0x003d 00061 (pointer_vs_value/code/benchmark_iter_test.go:23)	MOVQ	(SP), AX
	0x0041 00065 (pointer_vs_value/code/benchmark_iter_test.go:23)	MOVQ	AX, "".o+80(SP)
	0x0046 00070 (pointer_vs_value/code/benchmark_iter_test.go:23)	MOVSD	X0, "".o+88(SP)
	0x004c 00076 (pointer_vs_value/code/benchmark_iter_test.go:25)	MOVQ	$0, "".i+32(SP)
	0x0055 00085 (pointer_vs_value/code/benchmark_iter_test.go:25)	PCDATA	$0, $-2
	0x0055 00085 (pointer_vs_value/code/benchmark_iter_test.go:25)	PCDATA	$1, $-2
	0x0055 00085 (pointer_vs_value/code/benchmark_iter_test.go:25)	JMP	87
	0x0057 00087 (pointer_vs_value/code/benchmark_iter_test.go:25)	PCDATA	$0, $1
	0x0057 00087 (pointer_vs_value/code/benchmark_iter_test.go:25)	PCDATA	$1, $0
	0x0057 00087 (pointer_vs_value/code/benchmark_iter_test.go:25)	MOVQ	"".b+320(SP), AX
	0x005f 00095 (pointer_vs_value/code/benchmark_iter_test.go:25)	TESTB	AL, (AX)
	0x0061 00097 (pointer_vs_value/code/benchmark_iter_test.go:25)	PCDATA	$0, $0
	0x0061 00097 (pointer_vs_value/code/benchmark_iter_test.go:25)	MOVQ	264(AX), AX
	0x0068 00104 (pointer_vs_value/code/benchmark_iter_test.go:25)	CMPQ	"".i+32(SP), AX
	0x006d 00109 (pointer_vs_value/code/benchmark_iter_test.go:25)	JLT	116
	0x006f 00111 (pointer_vs_value/code/benchmark_iter_test.go:25)	JMP	787
	0x0074 00116 (pointer_vs_value/code/benchmark_iter_test.go:26)	MOVQ	$0, "".a+48(SP)
	0x007d 00125 (pointer_vs_value/code/benchmark_iter_test.go:26)	JMP	127
	0x007f 00127 (pointer_vs_value/code/benchmark_iter_test.go:26)	CMPQ	"".a+48(SP), $100000000
	0x0088 00136 (pointer_vs_value/code/benchmark_iter_test.go:26)	JLT	143
	0x008a 00138 (pointer_vs_value/code/benchmark_iter_test.go:26)	JMP	767
	0x008f 00143 (pointer_vs_value/code/benchmark_iter_test.go:27)	PCDATA	$0, $1
	0x008f 00143 (pointer_vs_value/code/benchmark_iter_test.go:27)	LEAQ	"".o+80(SP), AX
	0x0094 00148 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVQ	AX, ""..autotmp_15+120(SP)
	0x0099 00153 (pointer_vs_value/code/benchmark_iter_test.go:27)	PCDATA	$0, $0
	0x0099 00153 (pointer_vs_value/code/benchmark_iter_test.go:27)	PCDATA	$1, $1
	0x0099 00153 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVQ	AX, "".o+96(SP)
	0x009e 00158 (pointer_vs_value/code/benchmark_iter_test.go:27)	XORPS	X0, X0
	0x00a1 00161 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVSD	X0, "".~r1+24(SP)
	0x00a7 00167 (pointer_vs_value/code/benchmark_iter_test.go:27)	XORPS	X1, X1
	0x00aa 00170 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVUPS	X1, "".~r2+136(SP)
	0x00b2 00178 (pointer_vs_value/code/func.go:52)	PCDATA	$0, $1
	0x00b2 00178 (pointer_vs_value/code/func.go:52)	MOVQ	"".o+96(SP), AX
	0x00b7 00183 (pointer_vs_value/code/func.go:52)	TESTB	AL, (AX)
	0x00b9 00185 (<unknown line number>)	NOP
	0x00b9 00185 (pointer_vs_value/code/func.go:52)	PCDATA	$0, $0
	0x00b9 00185 (pointer_vs_value/code/func.go:52)	MOVSD	8(AX), X1
	0x00be 00190 (pointer_vs_value/code/func.go:52)	UCOMISD	X0, X1
	0x00c2 00194 (pointer_vs_value/code/func.go:52)	JNE	695
	0x00c8 00200 (pointer_vs_value/code/func.go:52)	JPC	207
	0x00ca 00202 (pointer_vs_value/code/func.go:52)	JMP	695
	0x00cf 00207 (pointer_vs_value/code/func.go:53)	PCDATA	$0, $1
	0x00cf 00207 (pointer_vs_value/code/func.go:53)	PCDATA	$1, $2
	0x00cf 00207 (pointer_vs_value/code/func.go:53)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x00d6 00214 (pointer_vs_value/code/func.go:53)	PCDATA	$0, $0
	0x00d6 00214 (pointer_vs_value/code/func.go:53)	MOVQ	AX, errors.text+168(SP)
	0x00de 00222 (pointer_vs_value/code/func.go:53)	MOVQ	$22, errors.text+176(SP)
	0x00ea 00234 (pointer_vs_value/code/func.go:53)	XORPS	X1, X1
	0x00ed 00237 (pointer_vs_value/code/func.go:53)	MOVUPS	X1, "".~R0+152(SP)
	0x00f5 00245 (<unknown line number>)	NOP
	0x00f5 00245 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x00f5 00245 ($GOROOT/src/errors/errors.go:59)	XORPS	X1, X1
	0x00f8 00248 ($GOROOT/src/errors/errors.go:59)	MOVUPS	X1, ""..autotmp_17+248(SP)
	0x0100 00256 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $2
	0x0100 00256 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $2
	0x0100 00256 ($GOROOT/src/errors/errors.go:59)	LEAQ	""..autotmp_17+248(SP), CX
	0x0108 00264 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_16+112(SP)
	0x010d 00269 ($GOROOT/src/errors/errors.go:59)	TESTB	AL, (CX)
	0x010f 00271 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+176(SP), DX
	0x0117 00279 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x0117 00279 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $0
	0x0117 00279 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+168(SP), BX
	0x011f 00287 ($GOROOT/src/errors/errors.go:59)	MOVQ	DX, ""..autotmp_17+256(SP)
	0x0127 00295 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $2
	0x0127 00295 ($GOROOT/src/errors/errors.go:59)	MOVQ	BX, ""..autotmp_17+248(SP)
	0x012f 00303 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_13+128(SP)
	0x0137 00311 (pointer_vs_value/code/func.go:53)	PCDATA	$0, $4
	0x0137 00311 (pointer_vs_value/code/func.go:53)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x013e 00318 (pointer_vs_value/code/func.go:53)	MOVQ	DX, ""..autotmp_18+232(SP)
	0x0146 00326 (pointer_vs_value/code/func.go:53)	MOVQ	CX, ""..autotmp_18+240(SP)
	0x014e 00334 (pointer_vs_value/code/func.go:53)	PCDATA	$0, $2
	0x014e 00334 (pointer_vs_value/code/func.go:53)	PCDATA	$1, $4
	0x014e 00334 (pointer_vs_value/code/func.go:53)	MOVQ	DX, "".~R0+152(SP)
	0x0156 00342 (pointer_vs_value/code/func.go:53)	PCDATA	$0, $0
	0x0156 00342 (pointer_vs_value/code/func.go:53)	MOVQ	CX, "".~R0+160(SP)
	0x015e 00350 (pointer_vs_value/code/func.go:53)	JMP	352
	0x0160 00352 (pointer_vs_value/code/benchmark_iter_test.go:27)	PCDATA	$0, $2
	0x0160 00352 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVQ	"".~R0+160(SP), CX
	0x0168 00360 (pointer_vs_value/code/benchmark_iter_test.go:27)	PCDATA	$1, $0
	0x0168 00360 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVQ	"".~R0+152(SP), BX
	0x0170 00368 (pointer_vs_value/code/benchmark_iter_test.go:27)	PCDATA	$1, $5
	0x0170 00368 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVQ	BX, ""..autotmp_19+216(SP)
	0x0178 00376 (pointer_vs_value/code/benchmark_iter_test.go:27)	PCDATA	$0, $0
	0x0178 00376 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVQ	CX, ""..autotmp_19+224(SP)
	0x0180 00384 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVSD	X0, "".~r1+24(SP)
	0x0186 00390 (pointer_vs_value/code/benchmark_iter_test.go:27)	PCDATA	$0, $2
	0x0186 00390 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVQ	""..autotmp_19+224(SP), CX
	0x018e 00398 (pointer_vs_value/code/benchmark_iter_test.go:27)	PCDATA	$1, $0
	0x018e 00398 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVQ	""..autotmp_19+216(SP), BX
	0x0196 00406 (pointer_vs_value/code/benchmark_iter_test.go:27)	PCDATA	$1, $6
	0x0196 00406 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVQ	BX, "".~r2+136(SP)
	0x019e 00414 (pointer_vs_value/code/benchmark_iter_test.go:27)	PCDATA	$0, $0
	0x019e 00414 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVQ	CX, "".~r2+144(SP)
	0x01a6 00422 (pointer_vs_value/code/benchmark_iter_test.go:27)	JMP	424
	0x01a8 00424 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVSD	"".~r1+24(SP), X1
	0x01ae 00430 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVSD	X1, ""..autotmp_21+64(SP)
	0x01b4 00436 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVSD	X1, ""..autotmp_4+56(SP)
	0x01ba 00442 (pointer_vs_value/code/benchmark_iter_test.go:27)	PCDATA	$0, $2
	0x01ba 00442 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVQ	"".~r2+144(SP), CX
	0x01c2 00450 (pointer_vs_value/code/benchmark_iter_test.go:27)	PCDATA	$1, $0
	0x01c2 00450 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVQ	"".~r2+136(SP), BX
	0x01ca 00458 (pointer_vs_value/code/benchmark_iter_test.go:27)	PCDATA	$1, $7
	0x01ca 00458 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVQ	BX, ""..autotmp_5+200(SP)
	0x01d2 00466 (pointer_vs_value/code/benchmark_iter_test.go:27)	PCDATA	$0, $0
	0x01d2 00466 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVQ	CX, ""..autotmp_5+208(SP)
	0x01da 00474 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVSD	""..autotmp_4+56(SP), X1
	0x01e0 00480 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVSD	X1, "".f+40(SP)
	0x01e6 00486 (pointer_vs_value/code/benchmark_iter_test.go:27)	PCDATA	$0, $2
	0x01e6 00486 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVQ	""..autotmp_5+208(SP), CX
	0x01ee 00494 (pointer_vs_value/code/benchmark_iter_test.go:27)	PCDATA	$1, $0
	0x01ee 00494 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVQ	""..autotmp_5+200(SP), BX
	0x01f6 00502 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVQ	BX, "".err+184(SP)
	0x01fe 00510 (pointer_vs_value/code/benchmark_iter_test.go:27)	PCDATA	$0, $0
	0x01fe 00510 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVQ	CX, "".err+192(SP)
	0x0206 00518 (<unknown line number>)	NOP
	0x0206 00518 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	BX, BX
	0x0209 00521 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	528
	0x020b 00523 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	693
	0x0210 00528 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $8
	0x0210 00528 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X1, X1
	0x0213 00531 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X1, ""..autotmp_14+264(SP)
	0x021b 00539 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $2
	0x021b 00539 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $0
	0x021b 00539 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_14+264(SP), CX
	0x0223 00547 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_23+104(SP)
	0x0228 00552 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x022a 00554 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x022a 00554 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), BX
	0x0231 00561 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $2
	0x0231 00561 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	BX, ""..autotmp_14+264(SP)
	0x0239 00569 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $5
	0x0239 00569 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_24(SB), SI
	0x0240 00576 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $2
	0x0240 00576 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	SI, ""..autotmp_14+272(SP)
	0x0248 00584 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x024a 00586 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	588
	0x024c 00588 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_22+280(SP)
	0x0254 00596 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_22+288(SP)
	0x0260 00608 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_22+296(SP)
	0x026c 00620 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x026c 00620 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, (SP)
	0x0270 00624 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x0279 00633 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x0282 00642 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x0287 00647 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	649
	0x0289 00649 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x0291 00657 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+40(SP), X0
	0x0297 00663 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x029f 00671 (pointer_vs_value/code/benchmark_iter_test.go:27)	JMP	673
	0x02a1 00673 (pointer_vs_value/code/benchmark_iter_test.go:26)	PCDATA	$0, $-2
	0x02a1 00673 (pointer_vs_value/code/benchmark_iter_test.go:26)	PCDATA	$1, $-2
	0x02a1 00673 (pointer_vs_value/code/benchmark_iter_test.go:26)	JMP	675
	0x02a3 00675 (pointer_vs_value/code/benchmark_iter_test.go:26)	PCDATA	$0, $0
	0x02a3 00675 (pointer_vs_value/code/benchmark_iter_test.go:26)	PCDATA	$1, $0
	0x02a3 00675 (pointer_vs_value/code/benchmark_iter_test.go:26)	MOVQ	"".a+48(SP), AX
	0x02a8 00680 (pointer_vs_value/code/benchmark_iter_test.go:26)	INCQ	AX
	0x02ab 00683 (pointer_vs_value/code/benchmark_iter_test.go:26)	MOVQ	AX, "".a+48(SP)
	0x02b0 00688 (pointer_vs_value/code/benchmark_iter_test.go:26)	JMP	127
	0x02b5 00693 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x02b5 00693 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x02b5 00693 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	649
	0x02b7 00695 (pointer_vs_value/code/func.go:55)	PCDATA	$0, $2
	0x02b7 00695 (pointer_vs_value/code/func.go:55)	PCDATA	$1, $1
	0x02b7 00695 (pointer_vs_value/code/func.go:55)	MOVQ	"".o+96(SP), CX
	0x02bc 00700 (pointer_vs_value/code/func.go:55)	TESTB	AL, (CX)
	0x02be 00702 (pointer_vs_value/code/func.go:55)	PCDATA	$0, $3
	0x02be 00702 (pointer_vs_value/code/func.go:55)	PCDATA	$1, $0
	0x02be 00702 (pointer_vs_value/code/func.go:55)	MOVQ	"".o+96(SP), BX
	0x02c3 00707 (pointer_vs_value/code/func.go:55)	TESTB	AL, (BX)
	0x02c5 00709 (pointer_vs_value/code/func.go:55)	PCDATA	$0, $6
	0x02c5 00709 (pointer_vs_value/code/func.go:55)	MOVQ	(CX), CX
	0x02c8 00712 (pointer_vs_value/code/func.go:55)	XORPS	X1, X1
	0x02cb 00715 (pointer_vs_value/code/func.go:55)	CVTSQ2SD	CX, X1
	0x02d0 00720 (pointer_vs_value/code/func.go:55)	PCDATA	$0, $0
	0x02d0 00720 (pointer_vs_value/code/func.go:55)	DIVSD	8(BX), X1
	0x02d5 00725 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVSD	X1, ""..autotmp_20+72(SP)
	0x02db 00731 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVSD	X1, "".~r1+24(SP)
	0x02e1 00737 (pointer_vs_value/code/benchmark_iter_test.go:27)	PCDATA	$1, $6
	0x02e1 00737 (pointer_vs_value/code/benchmark_iter_test.go:27)	XORPS	X1, X1
	0x02e4 00740 (pointer_vs_value/code/benchmark_iter_test.go:27)	MOVUPS	X1, "".~r2+136(SP)
	0x02ec 00748 (pointer_vs_value/code/benchmark_iter_test.go:27)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x02f3 00755 (pointer_vs_value/code/benchmark_iter_test.go:27)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x02fa 00762 (pointer_vs_value/code/benchmark_iter_test.go:27)	JMP	424
	0x02ff 00767 (pointer_vs_value/code/benchmark_iter_test.go:25)	PCDATA	$0, $-2
	0x02ff 00767 (pointer_vs_value/code/benchmark_iter_test.go:25)	PCDATA	$1, $-2
	0x02ff 00767 (pointer_vs_value/code/benchmark_iter_test.go:25)	JMP	769
	0x0301 00769 (pointer_vs_value/code/benchmark_iter_test.go:25)	PCDATA	$0, $0
	0x0301 00769 (pointer_vs_value/code/benchmark_iter_test.go:25)	PCDATA	$1, $0
	0x0301 00769 (pointer_vs_value/code/benchmark_iter_test.go:25)	MOVQ	"".i+32(SP), AX
	0x0306 00774 (pointer_vs_value/code/benchmark_iter_test.go:25)	INCQ	AX
	0x0309 00777 (pointer_vs_value/code/benchmark_iter_test.go:25)	MOVQ	AX, "".i+32(SP)
	0x030e 00782 (pointer_vs_value/code/benchmark_iter_test.go:25)	JMP	87
	0x0313 00787 (<unknown line number>)	PCDATA	$0, $-2
	0x0313 00787 (<unknown line number>)	PCDATA	$1, $-2
	0x0313 00787 (<unknown line number>)	MOVQ	304(SP), BP
	0x031b 00795 (<unknown line number>)	ADDQ	$312, SP
	0x0322 00802 (<unknown line number>)	RET
	0x0323 00803 (<unknown line number>)	NOP
	0x0323 00803 (pointer_vs_value/code/benchmark_iter_test.go:21)	PCDATA	$1, $-1
	0x0323 00803 (pointer_vs_value/code/benchmark_iter_test.go:21)	PCDATA	$0, $-1
	0x0323 00803 (pointer_vs_value/code/benchmark_iter_test.go:21)	CALL	runtime.morestack_noctxt(SB)
	0x0328 00808 (pointer_vs_value/code/benchmark_iter_test.go:21)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 48 ff ff  eH..%....H..$H..
	0x0010 ff 48 3b 41 10 0f 86 08 03 00 00 48 81 ec 38 01  .H;A.......H..8.
	0x0020 00 00 48 89 ac 24 30 01 00 00 48 8d ac 24 30 01  ..H..$0...H..$0.
	0x0030 00 00 e8 00 00 00 00 f2 0f 10 44 24 08 48 8b 04  ..........D$.H..
	0x0040 24 48 89 44 24 50 f2 0f 11 44 24 58 48 c7 44 24  $H.D$P...D$XH.D$
	0x0050 20 00 00 00 00 eb 00 48 8b 84 24 40 01 00 00 84   ......H..$@....
	0x0060 00 48 8b 80 08 01 00 00 48 39 44 24 20 7c 05 e9  .H......H9D$ |..
	0x0070 9f 02 00 00 48 c7 44 24 30 00 00 00 00 eb 00 48  ....H.D$0......H
	0x0080 81 7c 24 30 00 e1 f5 05 7c 05 e9 70 02 00 00 48  .|$0....|..p...H
	0x0090 8d 44 24 50 48 89 44 24 78 48 89 44 24 60 0f 57  .D$PH.D$xH.D$`.W
	0x00a0 c0 f2 0f 11 44 24 18 0f 57 c9 0f 11 8c 24 88 00  ....D$..W....$..
	0x00b0 00 00 48 8b 44 24 60 84 00 f2 0f 10 48 08 66 0f  ..H.D$`.....H.f.
	0x00c0 2e c8 0f 85 ef 01 00 00 7b 05 e9 e8 01 00 00 48  ........{......H
	0x00d0 8d 05 00 00 00 00 48 89 84 24 a8 00 00 00 48 c7  ......H..$....H.
	0x00e0 84 24 b0 00 00 00 16 00 00 00 0f 57 c9 0f 11 8c  .$.........W....
	0x00f0 24 98 00 00 00 0f 57 c9 0f 11 8c 24 f8 00 00 00  $.....W....$....
	0x0100 48 8d 8c 24 f8 00 00 00 48 89 4c 24 70 84 01 48  H..$....H.L$p..H
	0x0110 8b 94 24 b0 00 00 00 48 8b 9c 24 a8 00 00 00 48  ..$....H..$....H
	0x0120 89 94 24 00 01 00 00 48 89 9c 24 f8 00 00 00 48  ..$....H..$....H
	0x0130 89 8c 24 80 00 00 00 48 8d 15 00 00 00 00 48 89  ..$....H......H.
	0x0140 94 24 e8 00 00 00 48 89 8c 24 f0 00 00 00 48 89  .$....H..$....H.
	0x0150 94 24 98 00 00 00 48 89 8c 24 a0 00 00 00 eb 00  .$....H..$......
	0x0160 48 8b 8c 24 a0 00 00 00 48 8b 9c 24 98 00 00 00  H..$....H..$....
	0x0170 48 89 9c 24 d8 00 00 00 48 89 8c 24 e0 00 00 00  H..$....H..$....
	0x0180 f2 0f 11 44 24 18 48 8b 8c 24 e0 00 00 00 48 8b  ...D$.H..$....H.
	0x0190 9c 24 d8 00 00 00 48 89 9c 24 88 00 00 00 48 89  .$....H..$....H.
	0x01a0 8c 24 90 00 00 00 eb 00 f2 0f 10 4c 24 18 f2 0f  .$.........L$...
	0x01b0 11 4c 24 40 f2 0f 11 4c 24 38 48 8b 8c 24 90 00  .L$@...L$8H..$..
	0x01c0 00 00 48 8b 9c 24 88 00 00 00 48 89 9c 24 c8 00  ..H..$....H..$..
	0x01d0 00 00 48 89 8c 24 d0 00 00 00 f2 0f 10 4c 24 38  ..H..$.......L$8
	0x01e0 f2 0f 11 4c 24 28 48 8b 8c 24 d0 00 00 00 48 8b  ...L$(H..$....H.
	0x01f0 9c 24 c8 00 00 00 48 89 9c 24 b8 00 00 00 48 89  .$....H..$....H.
	0x0200 8c 24 c0 00 00 00 48 85 db 75 05 e9 a5 00 00 00  .$....H..u......
	0x0210 0f 57 c9 0f 11 8c 24 08 01 00 00 48 8d 8c 24 08  .W....$....H..$.
	0x0220 01 00 00 48 89 4c 24 68 84 01 48 8d 1d 00 00 00  ...H.L$h..H.....
	0x0230 00 48 89 9c 24 08 01 00 00 48 8d 35 00 00 00 00  .H..$....H.5....
	0x0240 48 89 b4 24 10 01 00 00 84 01 eb 00 48 89 8c 24  H..$........H..$
	0x0250 18 01 00 00 48 c7 84 24 20 01 00 00 01 00 00 00  ....H..$ .......
	0x0260 48 c7 84 24 28 01 00 00 01 00 00 00 48 89 0c 24  H..$(.......H..$
	0x0270 48 c7 44 24 08 01 00 00 00 48 c7 44 24 10 01 00  H.D$.....H.D$...
	0x0280 00 00 e8 00 00 00 00 eb 00 f2 0f 10 05 00 00 00  ................
	0x0290 00 f2 0f 58 44 24 28 f2 0f 11 05 00 00 00 00 eb  ...XD$(.........
	0x02a0 00 eb 00 48 8b 44 24 30 48 ff c0 48 89 44 24 30  ...H.D$0H..H.D$0
	0x02b0 e9 ca fd ff ff eb d2 48 8b 4c 24 60 84 01 48 8b  .......H.L$`..H.
	0x02c0 5c 24 60 84 03 48 8b 09 0f 57 c9 f2 48 0f 2a c9  \$`..H...W..H.*.
	0x02d0 f2 0f 5e 4b 08 f2 0f 11 4c 24 48 f2 0f 11 4c 24  ..^K....L$H...L$
	0x02e0 18 0f 57 c9 0f 11 8c 24 88 00 00 00 48 8d 05 00  ..W....$....H...
	0x02f0 00 00 00 48 8d 15 00 00 00 00 e9 a9 fe ff ff eb  ...H............
	0x0300 00 48 8b 44 24 20 48 ff c0 48 89 44 24 20 e9 44  .H.D$ H..H.D$ .D
	0x0310 fd ff ff 48 8b ac 24 30 01 00 00 48 81 c4 38 01  ...H..$0...H..8.
	0x0320 00 00 c3 e8 00 00 00 00 e9 d3 fc ff ff           .............
	rel 5+4 t=16 TLS+0
	rel 51+4 t=8 "".createMicro+0
	rel 210+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 314+4 t=15 go.itab.*errors.errorString,error+0
	rel 557+4 t=15 type.string+0
	rel 572+4 t=15 ""..stmp_24+0
	rel 643+4 t=8 log.Fatal+0
	rel 653+4 t=15 "".F+0
	rel 667+4 t=15 "".F+0
	rel 751+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 758+4 t=15 go.itab.*errors.errorString,error+0
	rel 804+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkMicroIfc_Iter STEXT size=552 args=0x8 locals=0xc8
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:33)	TEXT	"".BenchmarkMicroIfc_Iter(SB), ABIInternal, $200-8
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:33)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_iter_test.go:33)	LEAQ	-72(SP), AX
	0x000e 00014 (pointer_vs_value/code/benchmark_iter_test.go:33)	CMPQ	AX, 16(CX)
	0x0012 00018 (pointer_vs_value/code/benchmark_iter_test.go:33)	JLS	542
	0x0018 00024 (pointer_vs_value/code/benchmark_iter_test.go:33)	SUBQ	$200, SP
	0x001f 00031 (pointer_vs_value/code/benchmark_iter_test.go:33)	MOVQ	BP, 192(SP)
	0x0027 00039 (pointer_vs_value/code/benchmark_iter_test.go:33)	LEAQ	192(SP), BP
	0x002f 00047 (pointer_vs_value/code/benchmark_iter_test.go:33)	FUNCDATA	$0, gclocals·73de87619823f6747f37fd4c152f5b42(SB)
	0x002f 00047 (pointer_vs_value/code/benchmark_iter_test.go:33)	FUNCDATA	$1, gclocals·5656cec2d04c5a84ade886586cb39011(SB)
	0x002f 00047 (pointer_vs_value/code/benchmark_iter_test.go:33)	FUNCDATA	$2, gclocals·39c35ed93fc31b84b0c48f70fc1139f4(SB)
	0x002f 00047 (pointer_vs_value/code/benchmark_iter_test.go:33)	FUNCDATA	$3, "".BenchmarkMicroIfc_Iter.stkobj(SB)
	0x002f 00047 (pointer_vs_value/code/benchmark_iter_test.go:35)	PCDATA	$0, $1
	0x002f 00047 (pointer_vs_value/code/benchmark_iter_test.go:35)	PCDATA	$1, $0
	0x002f 00047 (pointer_vs_value/code/benchmark_iter_test.go:35)	LEAQ	type."".micro(SB), AX
	0x0036 00054 (pointer_vs_value/code/benchmark_iter_test.go:35)	PCDATA	$0, $0
	0x0036 00054 (pointer_vs_value/code/benchmark_iter_test.go:35)	MOVQ	AX, (SP)
	0x003a 00058 (pointer_vs_value/code/benchmark_iter_test.go:35)	CALL	runtime.newobject(SB)
	0x003f 00063 (pointer_vs_value/code/benchmark_iter_test.go:35)	PCDATA	$0, $1
	0x003f 00063 (pointer_vs_value/code/benchmark_iter_test.go:35)	MOVQ	8(SP), AX
	0x0044 00068 (pointer_vs_value/code/benchmark_iter_test.go:35)	PCDATA	$0, $0
	0x0044 00068 (pointer_vs_value/code/benchmark_iter_test.go:35)	PCDATA	$1, $1
	0x0044 00068 (pointer_vs_value/code/benchmark_iter_test.go:35)	MOVQ	AX, "".&o+96(SP)
	0x0049 00073 (pointer_vs_value/code/benchmark_iter_test.go:35)	CALL	"".createMicro(SB)
	0x004e 00078 (pointer_vs_value/code/benchmark_iter_test.go:35)	PCDATA	$0, $1
	0x004e 00078 (pointer_vs_value/code/benchmark_iter_test.go:35)	MOVQ	"".&o+96(SP), AX
	0x0053 00083 (pointer_vs_value/code/benchmark_iter_test.go:35)	MOVSD	8(SP), X0
	0x0059 00089 (pointer_vs_value/code/benchmark_iter_test.go:35)	MOVQ	(SP), CX
	0x005d 00093 (pointer_vs_value/code/benchmark_iter_test.go:35)	MOVQ	CX, (AX)
	0x0060 00096 (pointer_vs_value/code/benchmark_iter_test.go:35)	PCDATA	$0, $0
	0x0060 00096 (pointer_vs_value/code/benchmark_iter_test.go:35)	MOVSD	X0, 8(AX)
	0x0065 00101 (pointer_vs_value/code/benchmark_iter_test.go:37)	MOVQ	$0, "".i+40(SP)
	0x006e 00110 (pointer_vs_value/code/benchmark_iter_test.go:37)	JMP	112
	0x0070 00112 (pointer_vs_value/code/benchmark_iter_test.go:37)	PCDATA	$0, $1
	0x0070 00112 (pointer_vs_value/code/benchmark_iter_test.go:37)	MOVQ	"".b+208(SP), AX
	0x0078 00120 (pointer_vs_value/code/benchmark_iter_test.go:37)	TESTB	AL, (AX)
	0x007a 00122 (pointer_vs_value/code/benchmark_iter_test.go:37)	PCDATA	$0, $0
	0x007a 00122 (pointer_vs_value/code/benchmark_iter_test.go:37)	MOVQ	264(AX), AX
	0x0081 00129 (pointer_vs_value/code/benchmark_iter_test.go:37)	CMPQ	"".i+40(SP), AX
	0x0086 00134 (pointer_vs_value/code/benchmark_iter_test.go:37)	JLT	141
	0x0088 00136 (pointer_vs_value/code/benchmark_iter_test.go:37)	JMP	526
	0x008d 00141 (pointer_vs_value/code/benchmark_iter_test.go:38)	MOVQ	$0, "".a+56(SP)
	0x0096 00150 (pointer_vs_value/code/benchmark_iter_test.go:38)	JMP	152
	0x0098 00152 (pointer_vs_value/code/benchmark_iter_test.go:38)	CMPQ	"".a+56(SP), $100000000
	0x00a1 00161 (pointer_vs_value/code/benchmark_iter_test.go:38)	JLT	168
	0x00a3 00163 (pointer_vs_value/code/benchmark_iter_test.go:38)	JMP	506
	0x00a8 00168 (pointer_vs_value/code/benchmark_iter_test.go:39)	PCDATA	$0, $1
	0x00a8 00168 (pointer_vs_value/code/benchmark_iter_test.go:39)	MOVQ	"".&o+96(SP), AX
	0x00ad 00173 (pointer_vs_value/code/benchmark_iter_test.go:39)	PCDATA	$0, $0
	0x00ad 00173 (pointer_vs_value/code/benchmark_iter_test.go:39)	PCDATA	$1, $2
	0x00ad 00173 (pointer_vs_value/code/benchmark_iter_test.go:39)	MOVQ	AX, ""..autotmp_9+80(SP)
	0x00b2 00178 (pointer_vs_value/code/benchmark_iter_test.go:39)	XORPS	X0, X0
	0x00b5 00181 (pointer_vs_value/code/benchmark_iter_test.go:39)	MOVUPS	X0, ""..autotmp_11+152(SP)
	0x00bd 00189 (pointer_vs_value/code/benchmark_iter_test.go:39)	PCDATA	$0, $1
	0x00bd 00189 (pointer_vs_value/code/benchmark_iter_test.go:39)	PCDATA	$1, $1
	0x00bd 00189 (pointer_vs_value/code/benchmark_iter_test.go:39)	MOVQ	""..autotmp_9+80(SP), AX
	0x00c2 00194 (pointer_vs_value/code/benchmark_iter_test.go:39)	PCDATA	$0, $2
	0x00c2 00194 (pointer_vs_value/code/benchmark_iter_test.go:39)	LEAQ	go.itab.*"".micro,"".obj(SB), CX
	0x00c9 00201 (pointer_vs_value/code/benchmark_iter_test.go:39)	PCDATA	$0, $1
	0x00c9 00201 (pointer_vs_value/code/benchmark_iter_test.go:39)	MOVQ	CX, (SP)
	0x00cd 00205 (pointer_vs_value/code/benchmark_iter_test.go:39)	PCDATA	$0, $0
	0x00cd 00205 (pointer_vs_value/code/benchmark_iter_test.go:39)	MOVQ	AX, 8(SP)
	0x00d2 00210 (pointer_vs_value/code/benchmark_iter_test.go:39)	CALL	"".calcIfc(SB)
	0x00d7 00215 (pointer_vs_value/code/benchmark_iter_test.go:39)	MOVSD	16(SP), X0
	0x00dd 00221 (pointer_vs_value/code/benchmark_iter_test.go:39)	MOVSD	X0, ""..autotmp_10+72(SP)
	0x00e3 00227 (pointer_vs_value/code/benchmark_iter_test.go:39)	PCDATA	$0, $1
	0x00e3 00227 (pointer_vs_value/code/benchmark_iter_test.go:39)	MOVQ	32(SP), AX
	0x00e8 00232 (pointer_vs_value/code/benchmark_iter_test.go:39)	MOVQ	24(SP), CX
	0x00ed 00237 (pointer_vs_value/code/benchmark_iter_test.go:39)	PCDATA	$1, $3
	0x00ed 00237 (pointer_vs_value/code/benchmark_iter_test.go:39)	MOVQ	CX, ""..autotmp_11+152(SP)
	0x00f5 00245 (pointer_vs_value/code/benchmark_iter_test.go:39)	PCDATA	$0, $0
	0x00f5 00245 (pointer_vs_value/code/benchmark_iter_test.go:39)	MOVQ	AX, ""..autotmp_11+160(SP)
	0x00fd 00253 (pointer_vs_value/code/benchmark_iter_test.go:39)	MOVSD	""..autotmp_10+72(SP), X0
	0x0103 00259 (pointer_vs_value/code/benchmark_iter_test.go:39)	MOVSD	X0, ""..autotmp_4+64(SP)
	0x0109 00265 (pointer_vs_value/code/benchmark_iter_test.go:39)	MOVQ	""..autotmp_11+152(SP), AX
	0x0111 00273 (pointer_vs_value/code/benchmark_iter_test.go:39)	PCDATA	$0, $3
	0x0111 00273 (pointer_vs_value/code/benchmark_iter_test.go:39)	PCDATA	$1, $1
	0x0111 00273 (pointer_vs_value/code/benchmark_iter_test.go:39)	MOVQ	""..autotmp_11+160(SP), CX
	0x0119 00281 (pointer_vs_value/code/benchmark_iter_test.go:39)	PCDATA	$1, $4
	0x0119 00281 (pointer_vs_value/code/benchmark_iter_test.go:39)	MOVQ	AX, ""..autotmp_5+120(SP)
	0x011e 00286 (pointer_vs_value/code/benchmark_iter_test.go:39)	PCDATA	$0, $0
	0x011e 00286 (pointer_vs_value/code/benchmark_iter_test.go:39)	MOVQ	CX, ""..autotmp_5+128(SP)
	0x0126 00294 (pointer_vs_value/code/benchmark_iter_test.go:39)	MOVSD	""..autotmp_4+64(SP), X0
	0x012c 00300 (pointer_vs_value/code/benchmark_iter_test.go:39)	MOVSD	X0, "".f+48(SP)
	0x0132 00306 (pointer_vs_value/code/benchmark_iter_test.go:39)	MOVQ	""..autotmp_5+120(SP), AX
	0x0137 00311 (pointer_vs_value/code/benchmark_iter_test.go:39)	PCDATA	$0, $3
	0x0137 00311 (pointer_vs_value/code/benchmark_iter_test.go:39)	PCDATA	$1, $1
	0x0137 00311 (pointer_vs_value/code/benchmark_iter_test.go:39)	MOVQ	""..autotmp_5+128(SP), CX
	0x013f 00319 (pointer_vs_value/code/benchmark_iter_test.go:39)	MOVQ	AX, "".err+104(SP)
	0x0144 00324 (pointer_vs_value/code/benchmark_iter_test.go:39)	PCDATA	$0, $0
	0x0144 00324 (pointer_vs_value/code/benchmark_iter_test.go:39)	MOVQ	CX, "".err+112(SP)
	0x0149 00329 (<unknown line number>)	NOP
	0x0149 00329 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	AX, AX
	0x014c 00332 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	339
	0x014e 00334 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	504
	0x0153 00339 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $5
	0x0153 00339 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X0, X0
	0x0156 00342 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X0, ""..autotmp_12+136(SP)
	0x015e 00350 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x015e 00350 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x015e 00350 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_12+136(SP), AX
	0x0166 00358 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_14+88(SP)
	0x016b 00363 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x016d 00365 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $2
	0x016d 00365 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), CX
	0x0174 00372 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x0174 00372 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_12+136(SP)
	0x017c 00380 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x017c 00380 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_25(SB), DX
	0x0183 00387 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x0183 00387 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	DX, ""..autotmp_12+144(SP)
	0x018b 00395 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x018d 00397 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	399
	0x018f 00399 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_13+168(SP)
	0x0197 00407 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_13+176(SP)
	0x01a3 00419 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_13+184(SP)
	0x01af 00431 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x01af 00431 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, (SP)
	0x01b3 00435 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x01bc 00444 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x01c5 00453 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x01ca 00458 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	460
	0x01cc 00460 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x01d4 00468 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+48(SP), X0
	0x01da 00474 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x01e2 00482 (pointer_vs_value/code/benchmark_iter_test.go:39)	JMP	484
	0x01e4 00484 (pointer_vs_value/code/benchmark_iter_test.go:38)	PCDATA	$0, $-2
	0x01e4 00484 (pointer_vs_value/code/benchmark_iter_test.go:38)	PCDATA	$1, $-2
	0x01e4 00484 (pointer_vs_value/code/benchmark_iter_test.go:38)	JMP	486
	0x01e6 00486 (pointer_vs_value/code/benchmark_iter_test.go:38)	PCDATA	$0, $0
	0x01e6 00486 (pointer_vs_value/code/benchmark_iter_test.go:38)	PCDATA	$1, $1
	0x01e6 00486 (pointer_vs_value/code/benchmark_iter_test.go:38)	MOVQ	"".a+56(SP), AX
	0x01eb 00491 (pointer_vs_value/code/benchmark_iter_test.go:38)	INCQ	AX
	0x01ee 00494 (pointer_vs_value/code/benchmark_iter_test.go:38)	MOVQ	AX, "".a+56(SP)
	0x01f3 00499 (pointer_vs_value/code/benchmark_iter_test.go:38)	JMP	152
	0x01f8 00504 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x01f8 00504 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x01f8 00504 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	460
	0x01fa 00506 (pointer_vs_value/code/benchmark_iter_test.go:37)	JMP	508
	0x01fc 00508 (pointer_vs_value/code/benchmark_iter_test.go:37)	PCDATA	$0, $0
	0x01fc 00508 (pointer_vs_value/code/benchmark_iter_test.go:37)	PCDATA	$1, $1
	0x01fc 00508 (pointer_vs_value/code/benchmark_iter_test.go:37)	MOVQ	"".i+40(SP), AX
	0x0201 00513 (pointer_vs_value/code/benchmark_iter_test.go:37)	INCQ	AX
	0x0204 00516 (pointer_vs_value/code/benchmark_iter_test.go:37)	MOVQ	AX, "".i+40(SP)
	0x0209 00521 (pointer_vs_value/code/benchmark_iter_test.go:37)	JMP	112
	0x020e 00526 (<unknown line number>)	PCDATA	$0, $-2
	0x020e 00526 (<unknown line number>)	PCDATA	$1, $-2
	0x020e 00526 (<unknown line number>)	MOVQ	192(SP), BP
	0x0216 00534 (<unknown line number>)	ADDQ	$200, SP
	0x021d 00541 (<unknown line number>)	RET
	0x021e 00542 (<unknown line number>)	NOP
	0x021e 00542 (pointer_vs_value/code/benchmark_iter_test.go:33)	PCDATA	$1, $-1
	0x021e 00542 (pointer_vs_value/code/benchmark_iter_test.go:33)	PCDATA	$0, $-1
	0x021e 00542 (pointer_vs_value/code/benchmark_iter_test.go:33)	CALL	runtime.morestack_noctxt(SB)
	0x0223 00547 (pointer_vs_value/code/benchmark_iter_test.go:33)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 44 24 b8 48 3b  eH..%....H.D$.H;
	0x0010 41 10 0f 86 06 02 00 00 48 81 ec c8 00 00 00 48  A.......H......H
	0x0020 89 ac 24 c0 00 00 00 48 8d ac 24 c0 00 00 00 48  ..$....H..$....H
	0x0030 8d 05 00 00 00 00 48 89 04 24 e8 00 00 00 00 48  ......H..$.....H
	0x0040 8b 44 24 08 48 89 44 24 60 e8 00 00 00 00 48 8b  .D$.H.D$`.....H.
	0x0050 44 24 60 f2 0f 10 44 24 08 48 8b 0c 24 48 89 08  D$`...D$.H..$H..
	0x0060 f2 0f 11 40 08 48 c7 44 24 28 00 00 00 00 eb 00  ...@.H.D$(......
	0x0070 48 8b 84 24 d0 00 00 00 84 00 48 8b 80 08 01 00  H..$......H.....
	0x0080 00 48 39 44 24 28 7c 05 e9 81 01 00 00 48 c7 44  .H9D$(|......H.D
	0x0090 24 38 00 00 00 00 eb 00 48 81 7c 24 38 00 e1 f5  $8......H.|$8...
	0x00a0 05 7c 05 e9 52 01 00 00 48 8b 44 24 60 48 89 44  .|..R...H.D$`H.D
	0x00b0 24 50 0f 57 c0 0f 11 84 24 98 00 00 00 48 8b 44  $P.W....$....H.D
	0x00c0 24 50 48 8d 0d 00 00 00 00 48 89 0c 24 48 89 44  $PH......H..$H.D
	0x00d0 24 08 e8 00 00 00 00 f2 0f 10 44 24 10 f2 0f 11  $.........D$....
	0x00e0 44 24 48 48 8b 44 24 20 48 8b 4c 24 18 48 89 8c  D$HH.D$ H.L$.H..
	0x00f0 24 98 00 00 00 48 89 84 24 a0 00 00 00 f2 0f 10  $....H..$.......
	0x0100 44 24 48 f2 0f 11 44 24 40 48 8b 84 24 98 00 00  D$H...D$@H..$...
	0x0110 00 48 8b 8c 24 a0 00 00 00 48 89 44 24 78 48 89  .H..$....H.D$xH.
	0x0120 8c 24 80 00 00 00 f2 0f 10 44 24 40 f2 0f 11 44  .$.......D$@...D
	0x0130 24 30 48 8b 44 24 78 48 8b 8c 24 80 00 00 00 48  $0H.D$xH..$....H
	0x0140 89 44 24 68 48 89 4c 24 70 48 85 c0 75 05 e9 a5  .D$hH.L$pH..u...
	0x0150 00 00 00 0f 57 c0 0f 11 84 24 88 00 00 00 48 8d  ....W....$....H.
	0x0160 84 24 88 00 00 00 48 89 44 24 58 84 00 48 8d 0d  .$....H.D$X..H..
	0x0170 00 00 00 00 48 89 8c 24 88 00 00 00 48 8d 15 00  ....H..$....H...
	0x0180 00 00 00 48 89 94 24 90 00 00 00 84 00 eb 00 48  ...H..$........H
	0x0190 89 84 24 a8 00 00 00 48 c7 84 24 b0 00 00 00 01  ..$....H..$.....
	0x01a0 00 00 00 48 c7 84 24 b8 00 00 00 01 00 00 00 48  ...H..$........H
	0x01b0 89 04 24 48 c7 44 24 08 01 00 00 00 48 c7 44 24  ..$H.D$.....H.D$
	0x01c0 10 01 00 00 00 e8 00 00 00 00 eb 00 f2 0f 10 05  ................
	0x01d0 00 00 00 00 f2 0f 58 44 24 30 f2 0f 11 05 00 00  ......XD$0......
	0x01e0 00 00 eb 00 eb 00 48 8b 44 24 38 48 ff c0 48 89  ......H.D$8H..H.
	0x01f0 44 24 38 e9 a0 fe ff ff eb d2 eb 00 48 8b 44 24  D$8.........H.D$
	0x0200 28 48 ff c0 48 89 44 24 28 e9 62 fe ff ff 48 8b  (H..H.D$(.b...H.
	0x0210 ac 24 c0 00 00 00 48 81 c4 c8 00 00 00 c3 e8 00  .$....H.........
	0x0220 00 00 00 e9 d8 fd ff ff                          ........
	rel 5+4 t=16 TLS+0
	rel 50+4 t=15 type."".micro+0
	rel 59+4 t=8 runtime.newobject+0
	rel 74+4 t=8 "".createMicro+0
	rel 197+4 t=15 go.itab.*"".micro,"".obj+0
	rel 211+4 t=8 "".calcIfc+0
	rel 368+4 t=15 type.string+0
	rel 383+4 t=15 ""..stmp_25+0
	rel 454+4 t=8 log.Fatal+0
	rel 464+4 t=15 "".F+0
	rel 478+4 t=15 "".F+0
	rel 543+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkTiny_Iter STEXT size=867 args=0x8 locals=0x160
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:45)	TEXT	"".BenchmarkTiny_Iter(SB), ABIInternal, $352-8
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:45)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_iter_test.go:45)	LEAQ	-224(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_iter_test.go:45)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_iter_test.go:45)	JLS	857
	0x001b 00027 (pointer_vs_value/code/benchmark_iter_test.go:45)	SUBQ	$352, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_iter_test.go:45)	MOVQ	BP, 344(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_iter_test.go:45)	LEAQ	344(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:45)	FUNCDATA	$0, gclocals·d1d75e5bd153dd111cd8f1bc3c181073(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:45)	FUNCDATA	$1, gclocals·30a0f38bf34086f07ba2626f551541f2(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:45)	FUNCDATA	$2, gclocals·bb9a4421951f5635946b6e69c264fd07(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:45)	FUNCDATA	$3, "".BenchmarkTiny_Iter.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:47)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:47)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:47)	CALL	"".createTiny(SB)
	0x0037 00055 (pointer_vs_value/code/benchmark_iter_test.go:47)	MOVSD	8(SP), X0
	0x003d 00061 (pointer_vs_value/code/benchmark_iter_test.go:47)	MOVQ	(SP), AX
	0x0041 00065 (pointer_vs_value/code/benchmark_iter_test.go:47)	PCDATA	$0, $1
	0x0041 00065 (pointer_vs_value/code/benchmark_iter_test.go:47)	MOVQ	16(SP), CX
	0x0046 00070 (pointer_vs_value/code/benchmark_iter_test.go:47)	MOVQ	24(SP), DX
	0x004b 00075 (pointer_vs_value/code/benchmark_iter_test.go:47)	PCDATA	$1, $1
	0x004b 00075 (pointer_vs_value/code/benchmark_iter_test.go:47)	MOVQ	AX, "".o+280(SP)
	0x0053 00083 (pointer_vs_value/code/benchmark_iter_test.go:47)	MOVSD	X0, "".o+288(SP)
	0x005c 00092 (pointer_vs_value/code/benchmark_iter_test.go:47)	PCDATA	$0, $0
	0x005c 00092 (pointer_vs_value/code/benchmark_iter_test.go:47)	MOVQ	CX, "".o+296(SP)
	0x0064 00100 (pointer_vs_value/code/benchmark_iter_test.go:47)	MOVQ	DX, "".o+304(SP)
	0x006c 00108 (pointer_vs_value/code/benchmark_iter_test.go:49)	MOVQ	$0, "".i+40(SP)
	0x0075 00117 (pointer_vs_value/code/benchmark_iter_test.go:49)	PCDATA	$0, $-2
	0x0075 00117 (pointer_vs_value/code/benchmark_iter_test.go:49)	PCDATA	$1, $-2
	0x0075 00117 (pointer_vs_value/code/benchmark_iter_test.go:49)	JMP	119
	0x0077 00119 (pointer_vs_value/code/benchmark_iter_test.go:49)	PCDATA	$0, $2
	0x0077 00119 (pointer_vs_value/code/benchmark_iter_test.go:49)	PCDATA	$1, $1
	0x0077 00119 (pointer_vs_value/code/benchmark_iter_test.go:49)	MOVQ	"".b+360(SP), AX
	0x007f 00127 (pointer_vs_value/code/benchmark_iter_test.go:49)	TESTB	AL, (AX)
	0x0081 00129 (pointer_vs_value/code/benchmark_iter_test.go:49)	PCDATA	$0, $0
	0x0081 00129 (pointer_vs_value/code/benchmark_iter_test.go:49)	MOVQ	264(AX), AX
	0x0088 00136 (pointer_vs_value/code/benchmark_iter_test.go:49)	CMPQ	"".i+40(SP), AX
	0x008d 00141 (pointer_vs_value/code/benchmark_iter_test.go:49)	JLT	148
	0x008f 00143 (pointer_vs_value/code/benchmark_iter_test.go:49)	JMP	841
	0x0094 00148 (pointer_vs_value/code/benchmark_iter_test.go:50)	MOVQ	$0, "".a+56(SP)
	0x009d 00157 (pointer_vs_value/code/benchmark_iter_test.go:50)	JMP	159
	0x009f 00159 (pointer_vs_value/code/benchmark_iter_test.go:50)	CMPQ	"".a+56(SP), $100000000
	0x00a8 00168 (pointer_vs_value/code/benchmark_iter_test.go:50)	JLT	175
	0x00aa 00170 (pointer_vs_value/code/benchmark_iter_test.go:50)	JMP	821
	0x00af 00175 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVQ	"".o+304(SP), AX
	0x00b7 00183 (pointer_vs_value/code/benchmark_iter_test.go:51)	PCDATA	$0, $1
	0x00b7 00183 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVQ	"".o+296(SP), CX
	0x00bf 00191 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVQ	"".o+280(SP), DX
	0x00c7 00199 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVSD	"".o+288(SP), X0
	0x00d0 00208 (pointer_vs_value/code/benchmark_iter_test.go:51)	PCDATA	$1, $2
	0x00d0 00208 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVQ	DX, "".o+312(SP)
	0x00d8 00216 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVSD	X0, "".o+320(SP)
	0x00e1 00225 (pointer_vs_value/code/benchmark_iter_test.go:51)	PCDATA	$0, $0
	0x00e1 00225 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVQ	CX, "".o+328(SP)
	0x00e9 00233 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVQ	AX, "".o+336(SP)
	0x00f1 00241 (pointer_vs_value/code/benchmark_iter_test.go:51)	XORPS	X0, X0
	0x00f4 00244 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVSD	X0, "".~r1+32(SP)
	0x00fa 00250 (pointer_vs_value/code/benchmark_iter_test.go:51)	XORPS	X1, X1
	0x00fd 00253 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVUPS	X1, "".~r2+112(SP)
	0x0102 00258 (<unknown line number>)	NOP
	0x0102 00258 (pointer_vs_value/code/func.go:15)	MOVSD	"".o+320(SP), X1
	0x010b 00267 (pointer_vs_value/code/func.go:15)	UCOMISD	X0, X1
	0x010f 00271 (pointer_vs_value/code/func.go:15)	JNE	757
	0x0115 00277 (pointer_vs_value/code/func.go:15)	JPC	284
	0x0117 00279 (pointer_vs_value/code/func.go:15)	JMP	757
	0x011c 00284 (pointer_vs_value/code/func.go:16)	PCDATA	$0, $2
	0x011c 00284 (pointer_vs_value/code/func.go:16)	PCDATA	$1, $3
	0x011c 00284 (pointer_vs_value/code/func.go:16)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x0123 00291 (pointer_vs_value/code/func.go:16)	PCDATA	$0, $0
	0x0123 00291 (pointer_vs_value/code/func.go:16)	MOVQ	AX, errors.text+144(SP)
	0x012b 00299 (pointer_vs_value/code/func.go:16)	MOVQ	$22, errors.text+152(SP)
	0x0137 00311 (pointer_vs_value/code/func.go:16)	XORPS	X1, X1
	0x013a 00314 (pointer_vs_value/code/func.go:16)	MOVUPS	X1, "".~R0+128(SP)
	0x0142 00322 (<unknown line number>)	NOP
	0x0142 00322 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x0142 00322 ($GOROOT/src/errors/errors.go:59)	XORPS	X1, X1
	0x0145 00325 ($GOROOT/src/errors/errors.go:59)	MOVUPS	X1, ""..autotmp_16+224(SP)
	0x014d 00333 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x014d 00333 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x014d 00333 ($GOROOT/src/errors/errors.go:59)	LEAQ	""..autotmp_16+224(SP), CX
	0x0155 00341 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_15+96(SP)
	0x015a 00346 ($GOROOT/src/errors/errors.go:59)	TESTB	AL, (CX)
	0x015c 00348 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x015c 00348 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+144(SP), DX
	0x0164 00356 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $1
	0x0164 00356 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+152(SP), BX
	0x016c 00364 ($GOROOT/src/errors/errors.go:59)	MOVQ	BX, ""..autotmp_16+232(SP)
	0x0174 00372 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x0174 00372 ($GOROOT/src/errors/errors.go:59)	MOVQ	DX, ""..autotmp_16+224(SP)
	0x017c 00380 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_13+104(SP)
	0x0181 00385 (pointer_vs_value/code/func.go:16)	PCDATA	$0, $3
	0x0181 00385 (pointer_vs_value/code/func.go:16)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x0188 00392 (pointer_vs_value/code/func.go:16)	MOVQ	DX, ""..autotmp_17+208(SP)
	0x0190 00400 (pointer_vs_value/code/func.go:16)	MOVQ	CX, ""..autotmp_17+216(SP)
	0x0198 00408 (pointer_vs_value/code/func.go:16)	PCDATA	$0, $1
	0x0198 00408 (pointer_vs_value/code/func.go:16)	PCDATA	$1, $5
	0x0198 00408 (pointer_vs_value/code/func.go:16)	MOVQ	DX, "".~R0+128(SP)
	0x01a0 00416 (pointer_vs_value/code/func.go:16)	PCDATA	$0, $0
	0x01a0 00416 (pointer_vs_value/code/func.go:16)	MOVQ	CX, "".~R0+136(SP)
	0x01a8 00424 (pointer_vs_value/code/func.go:16)	JMP	426
	0x01aa 00426 (pointer_vs_value/code/benchmark_iter_test.go:51)	PCDATA	$0, $1
	0x01aa 00426 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVQ	"".~R0+136(SP), CX
	0x01b2 00434 (pointer_vs_value/code/benchmark_iter_test.go:51)	PCDATA	$1, $1
	0x01b2 00434 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVQ	"".~R0+128(SP), BX
	0x01ba 00442 (pointer_vs_value/code/benchmark_iter_test.go:51)	PCDATA	$1, $6
	0x01ba 00442 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVQ	BX, ""..autotmp_18+192(SP)
	0x01c2 00450 (pointer_vs_value/code/benchmark_iter_test.go:51)	PCDATA	$0, $0
	0x01c2 00450 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVQ	CX, ""..autotmp_18+200(SP)
	0x01ca 00458 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVSD	X0, "".~r1+32(SP)
	0x01d0 00464 (pointer_vs_value/code/benchmark_iter_test.go:51)	PCDATA	$0, $1
	0x01d0 00464 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVQ	""..autotmp_18+200(SP), CX
	0x01d8 00472 (pointer_vs_value/code/benchmark_iter_test.go:51)	PCDATA	$1, $1
	0x01d8 00472 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVQ	""..autotmp_18+192(SP), BX
	0x01e0 00480 (pointer_vs_value/code/benchmark_iter_test.go:51)	PCDATA	$1, $7
	0x01e0 00480 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVQ	BX, "".~r2+112(SP)
	0x01e5 00485 (pointer_vs_value/code/benchmark_iter_test.go:51)	PCDATA	$0, $0
	0x01e5 00485 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVQ	CX, "".~r2+120(SP)
	0x01ea 00490 (pointer_vs_value/code/benchmark_iter_test.go:51)	JMP	492
	0x01ec 00492 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVSD	"".~r1+32(SP), X1
	0x01f2 00498 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVSD	X1, ""..autotmp_20+72(SP)
	0x01f8 00504 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVSD	X1, ""..autotmp_4+64(SP)
	0x01fe 00510 (pointer_vs_value/code/benchmark_iter_test.go:51)	PCDATA	$0, $1
	0x01fe 00510 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVQ	"".~r2+120(SP), CX
	0x0203 00515 (pointer_vs_value/code/benchmark_iter_test.go:51)	PCDATA	$1, $1
	0x0203 00515 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVQ	"".~r2+112(SP), BX
	0x0208 00520 (pointer_vs_value/code/benchmark_iter_test.go:51)	PCDATA	$1, $8
	0x0208 00520 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVQ	BX, ""..autotmp_5+176(SP)
	0x0210 00528 (pointer_vs_value/code/benchmark_iter_test.go:51)	PCDATA	$0, $0
	0x0210 00528 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVQ	CX, ""..autotmp_5+184(SP)
	0x0218 00536 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVSD	""..autotmp_4+64(SP), X1
	0x021e 00542 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVSD	X1, "".f+48(SP)
	0x0224 00548 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVQ	""..autotmp_5+176(SP), CX
	0x022c 00556 (pointer_vs_value/code/benchmark_iter_test.go:51)	PCDATA	$0, $4
	0x022c 00556 (pointer_vs_value/code/benchmark_iter_test.go:51)	PCDATA	$1, $1
	0x022c 00556 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVQ	""..autotmp_5+184(SP), BX
	0x0234 00564 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVQ	CX, "".err+160(SP)
	0x023c 00572 (pointer_vs_value/code/benchmark_iter_test.go:51)	PCDATA	$0, $0
	0x023c 00572 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVQ	BX, "".err+168(SP)
	0x0244 00580 (<unknown line number>)	NOP
	0x0244 00580 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	CX, CX
	0x0247 00583 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	590
	0x0249 00585 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	755
	0x024e 00590 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $9
	0x024e 00590 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X1, X1
	0x0251 00593 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X1, ""..autotmp_14+240(SP)
	0x0259 00601 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x0259 00601 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x0259 00601 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_14+240(SP), CX
	0x0261 00609 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_22+88(SP)
	0x0266 00614 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x0268 00616 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $5
	0x0268 00616 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), BX
	0x026f 00623 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x026f 00623 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	BX, ""..autotmp_14+240(SP)
	0x0277 00631 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $6
	0x0277 00631 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_26(SB), SI
	0x027e 00638 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x027e 00638 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	SI, ""..autotmp_14+248(SP)
	0x0286 00646 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x0288 00648 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	650
	0x028a 00650 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_21+256(SP)
	0x0292 00658 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_21+264(SP)
	0x029e 00670 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_21+272(SP)
	0x02aa 00682 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x02aa 00682 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, (SP)
	0x02ae 00686 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x02b7 00695 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x02c0 00704 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x02c5 00709 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	711
	0x02c7 00711 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x02cf 00719 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+48(SP), X0
	0x02d5 00725 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x02dd 00733 (pointer_vs_value/code/benchmark_iter_test.go:51)	JMP	735
	0x02df 00735 (pointer_vs_value/code/benchmark_iter_test.go:50)	PCDATA	$0, $-2
	0x02df 00735 (pointer_vs_value/code/benchmark_iter_test.go:50)	PCDATA	$1, $-2
	0x02df 00735 (pointer_vs_value/code/benchmark_iter_test.go:50)	JMP	737
	0x02e1 00737 (pointer_vs_value/code/benchmark_iter_test.go:50)	PCDATA	$0, $0
	0x02e1 00737 (pointer_vs_value/code/benchmark_iter_test.go:50)	PCDATA	$1, $1
	0x02e1 00737 (pointer_vs_value/code/benchmark_iter_test.go:50)	MOVQ	"".a+56(SP), AX
	0x02e6 00742 (pointer_vs_value/code/benchmark_iter_test.go:50)	INCQ	AX
	0x02e9 00745 (pointer_vs_value/code/benchmark_iter_test.go:50)	MOVQ	AX, "".a+56(SP)
	0x02ee 00750 (pointer_vs_value/code/benchmark_iter_test.go:50)	JMP	159
	0x02f3 00755 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x02f3 00755 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x02f3 00755 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	711
	0x02f5 00757 (pointer_vs_value/code/func.go:18)	PCDATA	$0, $0
	0x02f5 00757 (pointer_vs_value/code/func.go:18)	PCDATA	$1, $2
	0x02f5 00757 (pointer_vs_value/code/func.go:18)	MOVQ	"".o+312(SP), CX
	0x02fd 00765 (pointer_vs_value/code/func.go:18)	XORPS	X1, X1
	0x0300 00768 (pointer_vs_value/code/func.go:18)	CVTSQ2SD	CX, X1
	0x0305 00773 (pointer_vs_value/code/func.go:18)	PCDATA	$1, $1
	0x0305 00773 (pointer_vs_value/code/func.go:18)	DIVSD	"".o+320(SP), X1
	0x030e 00782 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVSD	X1, ""..autotmp_19+80(SP)
	0x0314 00788 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVSD	X1, "".~r1+32(SP)
	0x031a 00794 (pointer_vs_value/code/benchmark_iter_test.go:51)	PCDATA	$1, $7
	0x031a 00794 (pointer_vs_value/code/benchmark_iter_test.go:51)	XORPS	X1, X1
	0x031d 00797 (pointer_vs_value/code/benchmark_iter_test.go:51)	MOVUPS	X1, "".~r2+112(SP)
	0x0322 00802 (pointer_vs_value/code/benchmark_iter_test.go:51)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x0329 00809 (pointer_vs_value/code/benchmark_iter_test.go:51)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x0330 00816 (pointer_vs_value/code/benchmark_iter_test.go:51)	JMP	492
	0x0335 00821 (pointer_vs_value/code/benchmark_iter_test.go:49)	PCDATA	$0, $-2
	0x0335 00821 (pointer_vs_value/code/benchmark_iter_test.go:49)	PCDATA	$1, $-2
	0x0335 00821 (pointer_vs_value/code/benchmark_iter_test.go:49)	JMP	823
	0x0337 00823 (pointer_vs_value/code/benchmark_iter_test.go:49)	PCDATA	$0, $0
	0x0337 00823 (pointer_vs_value/code/benchmark_iter_test.go:49)	PCDATA	$1, $1
	0x0337 00823 (pointer_vs_value/code/benchmark_iter_test.go:49)	MOVQ	"".i+40(SP), AX
	0x033c 00828 (pointer_vs_value/code/benchmark_iter_test.go:49)	INCQ	AX
	0x033f 00831 (pointer_vs_value/code/benchmark_iter_test.go:49)	MOVQ	AX, "".i+40(SP)
	0x0344 00836 (pointer_vs_value/code/benchmark_iter_test.go:49)	JMP	119
	0x0349 00841 (<unknown line number>)	PCDATA	$0, $-2
	0x0349 00841 (<unknown line number>)	PCDATA	$1, $-2
	0x0349 00841 (<unknown line number>)	MOVQ	344(SP), BP
	0x0351 00849 (<unknown line number>)	ADDQ	$352, SP
	0x0358 00856 (<unknown line number>)	RET
	0x0359 00857 (<unknown line number>)	NOP
	0x0359 00857 (pointer_vs_value/code/benchmark_iter_test.go:45)	PCDATA	$1, $-1
	0x0359 00857 (pointer_vs_value/code/benchmark_iter_test.go:45)	PCDATA	$0, $-1
	0x0359 00857 (pointer_vs_value/code/benchmark_iter_test.go:45)	CALL	runtime.morestack_noctxt(SB)
	0x035e 00862 (pointer_vs_value/code/benchmark_iter_test.go:45)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 20 ff ff  eH..%....H..$ ..
	0x0010 ff 48 3b 41 10 0f 86 3e 03 00 00 48 81 ec 60 01  .H;A...>...H..`.
	0x0020 00 00 48 89 ac 24 58 01 00 00 48 8d ac 24 58 01  ..H..$X...H..$X.
	0x0030 00 00 e8 00 00 00 00 f2 0f 10 44 24 08 48 8b 04  ..........D$.H..
	0x0040 24 48 8b 4c 24 10 48 8b 54 24 18 48 89 84 24 18  $H.L$.H.T$.H..$.
	0x0050 01 00 00 f2 0f 11 84 24 20 01 00 00 48 89 8c 24  .......$ ...H..$
	0x0060 28 01 00 00 48 89 94 24 30 01 00 00 48 c7 44 24  (...H..$0...H.D$
	0x0070 28 00 00 00 00 eb 00 48 8b 84 24 68 01 00 00 84  (......H..$h....
	0x0080 00 48 8b 80 08 01 00 00 48 39 44 24 28 7c 05 e9  .H......H9D$(|..
	0x0090 b5 02 00 00 48 c7 44 24 38 00 00 00 00 eb 00 48  ....H.D$8......H
	0x00a0 81 7c 24 38 00 e1 f5 05 7c 05 e9 86 02 00 00 48  .|$8....|......H
	0x00b0 8b 84 24 30 01 00 00 48 8b 8c 24 28 01 00 00 48  ..$0...H..$(...H
	0x00c0 8b 94 24 18 01 00 00 f2 0f 10 84 24 20 01 00 00  ..$........$ ...
	0x00d0 48 89 94 24 38 01 00 00 f2 0f 11 84 24 40 01 00  H..$8.......$@..
	0x00e0 00 48 89 8c 24 48 01 00 00 48 89 84 24 50 01 00  .H..$H...H..$P..
	0x00f0 00 0f 57 c0 f2 0f 11 44 24 20 0f 57 c9 0f 11 4c  ..W....D$ .W...L
	0x0100 24 70 f2 0f 10 8c 24 40 01 00 00 66 0f 2e c8 0f  $p....$@...f....
	0x0110 85 e0 01 00 00 7b 05 e9 d9 01 00 00 48 8d 05 00  .....{......H...
	0x0120 00 00 00 48 89 84 24 90 00 00 00 48 c7 84 24 98  ...H..$....H..$.
	0x0130 00 00 00 16 00 00 00 0f 57 c9 0f 11 8c 24 80 00  ........W....$..
	0x0140 00 00 0f 57 c9 0f 11 8c 24 e0 00 00 00 48 8d 8c  ...W....$....H..
	0x0150 24 e0 00 00 00 48 89 4c 24 60 84 01 48 8b 94 24  $....H.L$`..H..$
	0x0160 90 00 00 00 48 8b 9c 24 98 00 00 00 48 89 9c 24  ....H..$....H..$
	0x0170 e8 00 00 00 48 89 94 24 e0 00 00 00 48 89 4c 24  ....H..$....H.L$
	0x0180 68 48 8d 15 00 00 00 00 48 89 94 24 d0 00 00 00  hH......H..$....
	0x0190 48 89 8c 24 d8 00 00 00 48 89 94 24 80 00 00 00  H..$....H..$....
	0x01a0 48 89 8c 24 88 00 00 00 eb 00 48 8b 8c 24 88 00  H..$......H..$..
	0x01b0 00 00 48 8b 9c 24 80 00 00 00 48 89 9c 24 c0 00  ..H..$....H..$..
	0x01c0 00 00 48 89 8c 24 c8 00 00 00 f2 0f 11 44 24 20  ..H..$.......D$ 
	0x01d0 48 8b 8c 24 c8 00 00 00 48 8b 9c 24 c0 00 00 00  H..$....H..$....
	0x01e0 48 89 5c 24 70 48 89 4c 24 78 eb 00 f2 0f 10 4c  H.\$pH.L$x.....L
	0x01f0 24 20 f2 0f 11 4c 24 48 f2 0f 11 4c 24 40 48 8b  $ ...L$H...L$@H.
	0x0200 4c 24 78 48 8b 5c 24 70 48 89 9c 24 b0 00 00 00  L$xH.\$pH..$....
	0x0210 48 89 8c 24 b8 00 00 00 f2 0f 10 4c 24 40 f2 0f  H..$.......L$@..
	0x0220 11 4c 24 30 48 8b 8c 24 b0 00 00 00 48 8b 9c 24  .L$0H..$....H..$
	0x0230 b8 00 00 00 48 89 8c 24 a0 00 00 00 48 89 9c 24  ....H..$....H..$
	0x0240 a8 00 00 00 48 85 c9 75 05 e9 a5 00 00 00 0f 57  ....H..u.......W
	0x0250 c9 0f 11 8c 24 f0 00 00 00 48 8d 8c 24 f0 00 00  ....$....H..$...
	0x0260 00 48 89 4c 24 58 84 01 48 8d 1d 00 00 00 00 48  .H.L$X..H......H
	0x0270 89 9c 24 f0 00 00 00 48 8d 35 00 00 00 00 48 89  ..$....H.5....H.
	0x0280 b4 24 f8 00 00 00 84 01 eb 00 48 89 8c 24 00 01  .$........H..$..
	0x0290 00 00 48 c7 84 24 08 01 00 00 01 00 00 00 48 c7  ..H..$........H.
	0x02a0 84 24 10 01 00 00 01 00 00 00 48 89 0c 24 48 c7  .$........H..$H.
	0x02b0 44 24 08 01 00 00 00 48 c7 44 24 10 01 00 00 00  D$.....H.D$.....
	0x02c0 e8 00 00 00 00 eb 00 f2 0f 10 05 00 00 00 00 f2  ................
	0x02d0 0f 58 44 24 30 f2 0f 11 05 00 00 00 00 eb 00 eb  .XD$0...........
	0x02e0 00 48 8b 44 24 38 48 ff c0 48 89 44 24 38 e9 ac  .H.D$8H..H.D$8..
	0x02f0 fd ff ff eb d2 48 8b 8c 24 38 01 00 00 0f 57 c9  .....H..$8....W.
	0x0300 f2 48 0f 2a c9 f2 0f 5e 8c 24 40 01 00 00 f2 0f  .H.*...^.$@.....
	0x0310 11 4c 24 50 f2 0f 11 4c 24 20 0f 57 c9 0f 11 4c  .L$P...L$ .W...L
	0x0320 24 70 48 8d 05 00 00 00 00 48 8d 15 00 00 00 00  $pH......H......
	0x0330 e9 b7 fe ff ff eb 00 48 8b 44 24 28 48 ff c0 48  .......H.D$(H..H
	0x0340 89 44 24 28 e9 2e fd ff ff 48 8b ac 24 58 01 00  .D$(.....H..$X..
	0x0350 00 48 81 c4 60 01 00 00 c3 e8 00 00 00 00 e9 9d  .H..`...........
	0x0360 fc ff ff                                         ...
	rel 5+4 t=16 TLS+0
	rel 51+4 t=8 "".createTiny+0
	rel 287+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 388+4 t=15 go.itab.*errors.errorString,error+0
	rel 619+4 t=15 type.string+0
	rel 634+4 t=15 ""..stmp_26+0
	rel 705+4 t=8 log.Fatal+0
	rel 715+4 t=15 "".F+0
	rel 729+4 t=15 "".F+0
	rel 805+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 812+4 t=15 go.itab.*errors.errorString,error+0
	rel 858+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkTinyP_Iter STEXT size=845 args=0x8 locals=0x150
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:57)	TEXT	"".BenchmarkTinyP_Iter(SB), ABIInternal, $336-8
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:57)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_iter_test.go:57)	LEAQ	-208(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_iter_test.go:57)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_iter_test.go:57)	JLS	835
	0x001b 00027 (pointer_vs_value/code/benchmark_iter_test.go:57)	SUBQ	$336, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_iter_test.go:57)	MOVQ	BP, 328(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_iter_test.go:57)	LEAQ	328(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:57)	FUNCDATA	$0, gclocals·d1d75e5bd153dd111cd8f1bc3c181073(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:57)	FUNCDATA	$1, gclocals·2b79edb639adb9b9ade62f47577a91f4(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:57)	FUNCDATA	$2, gclocals·bb9a4421951f5635946b6e69c264fd07(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:57)	FUNCDATA	$3, "".BenchmarkTinyP_Iter.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:59)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:59)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:59)	CALL	"".createTiny(SB)
	0x0037 00055 (pointer_vs_value/code/benchmark_iter_test.go:59)	MOVSD	8(SP), X0
	0x003d 00061 (pointer_vs_value/code/benchmark_iter_test.go:59)	MOVQ	(SP), AX
	0x0041 00065 (pointer_vs_value/code/benchmark_iter_test.go:59)	PCDATA	$0, $1
	0x0041 00065 (pointer_vs_value/code/benchmark_iter_test.go:59)	MOVQ	16(SP), CX
	0x0046 00070 (pointer_vs_value/code/benchmark_iter_test.go:59)	MOVQ	24(SP), DX
	0x004b 00075 (pointer_vs_value/code/benchmark_iter_test.go:59)	PCDATA	$1, $1
	0x004b 00075 (pointer_vs_value/code/benchmark_iter_test.go:59)	MOVQ	AX, "".o+296(SP)
	0x0053 00083 (pointer_vs_value/code/benchmark_iter_test.go:59)	MOVSD	X0, "".o+304(SP)
	0x005c 00092 (pointer_vs_value/code/benchmark_iter_test.go:59)	PCDATA	$0, $0
	0x005c 00092 (pointer_vs_value/code/benchmark_iter_test.go:59)	MOVQ	CX, "".o+312(SP)
	0x0064 00100 (pointer_vs_value/code/benchmark_iter_test.go:59)	MOVQ	DX, "".o+320(SP)
	0x006c 00108 (pointer_vs_value/code/benchmark_iter_test.go:61)	MOVQ	$0, "".i+40(SP)
	0x0075 00117 (pointer_vs_value/code/benchmark_iter_test.go:61)	PCDATA	$0, $-2
	0x0075 00117 (pointer_vs_value/code/benchmark_iter_test.go:61)	PCDATA	$1, $-2
	0x0075 00117 (pointer_vs_value/code/benchmark_iter_test.go:61)	JMP	119
	0x0077 00119 (pointer_vs_value/code/benchmark_iter_test.go:61)	PCDATA	$0, $2
	0x0077 00119 (pointer_vs_value/code/benchmark_iter_test.go:61)	PCDATA	$1, $1
	0x0077 00119 (pointer_vs_value/code/benchmark_iter_test.go:61)	MOVQ	"".b+344(SP), AX
	0x007f 00127 (pointer_vs_value/code/benchmark_iter_test.go:61)	TESTB	AL, (AX)
	0x0081 00129 (pointer_vs_value/code/benchmark_iter_test.go:61)	PCDATA	$0, $0
	0x0081 00129 (pointer_vs_value/code/benchmark_iter_test.go:61)	MOVQ	264(AX), AX
	0x0088 00136 (pointer_vs_value/code/benchmark_iter_test.go:61)	CMPQ	"".i+40(SP), AX
	0x008d 00141 (pointer_vs_value/code/benchmark_iter_test.go:61)	JLT	148
	0x008f 00143 (pointer_vs_value/code/benchmark_iter_test.go:61)	JMP	819
	0x0094 00148 (pointer_vs_value/code/benchmark_iter_test.go:62)	MOVQ	$0, "".a+56(SP)
	0x009d 00157 (pointer_vs_value/code/benchmark_iter_test.go:62)	JMP	159
	0x009f 00159 (pointer_vs_value/code/benchmark_iter_test.go:62)	CMPQ	"".a+56(SP), $100000000
	0x00a8 00168 (pointer_vs_value/code/benchmark_iter_test.go:62)	JLT	175
	0x00aa 00170 (pointer_vs_value/code/benchmark_iter_test.go:62)	JMP	799
	0x00af 00175 (pointer_vs_value/code/benchmark_iter_test.go:63)	PCDATA	$0, $2
	0x00af 00175 (pointer_vs_value/code/benchmark_iter_test.go:63)	LEAQ	"".o+296(SP), AX
	0x00b7 00183 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVQ	AX, ""..autotmp_15+112(SP)
	0x00bc 00188 (pointer_vs_value/code/benchmark_iter_test.go:63)	PCDATA	$0, $0
	0x00bc 00188 (pointer_vs_value/code/benchmark_iter_test.go:63)	PCDATA	$1, $2
	0x00bc 00188 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVQ	AX, "".o+88(SP)
	0x00c1 00193 (pointer_vs_value/code/benchmark_iter_test.go:63)	XORPS	X0, X0
	0x00c4 00196 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVSD	X0, "".~r1+32(SP)
	0x00ca 00202 (pointer_vs_value/code/benchmark_iter_test.go:63)	XORPS	X1, X1
	0x00cd 00205 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVUPS	X1, "".~r2+128(SP)
	0x00d5 00213 (pointer_vs_value/code/func.go:59)	PCDATA	$0, $2
	0x00d5 00213 (pointer_vs_value/code/func.go:59)	MOVQ	"".o+88(SP), AX
	0x00da 00218 (pointer_vs_value/code/func.go:59)	TESTB	AL, (AX)
	0x00dc 00220 (<unknown line number>)	NOP
	0x00dc 00220 (pointer_vs_value/code/func.go:59)	PCDATA	$0, $0
	0x00dc 00220 (pointer_vs_value/code/func.go:59)	MOVSD	8(AX), X1
	0x00e1 00225 (pointer_vs_value/code/func.go:59)	UCOMISD	X0, X1
	0x00e5 00229 (pointer_vs_value/code/func.go:59)	JNE	727
	0x00eb 00235 (pointer_vs_value/code/func.go:59)	JPC	242
	0x00ed 00237 (pointer_vs_value/code/func.go:59)	JMP	727
	0x00f2 00242 (pointer_vs_value/code/func.go:60)	PCDATA	$0, $2
	0x00f2 00242 (pointer_vs_value/code/func.go:60)	PCDATA	$1, $3
	0x00f2 00242 (pointer_vs_value/code/func.go:60)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x00f9 00249 (pointer_vs_value/code/func.go:60)	PCDATA	$0, $0
	0x00f9 00249 (pointer_vs_value/code/func.go:60)	MOVQ	AX, errors.text+160(SP)
	0x0101 00257 (pointer_vs_value/code/func.go:60)	MOVQ	$22, errors.text+168(SP)
	0x010d 00269 (pointer_vs_value/code/func.go:60)	XORPS	X1, X1
	0x0110 00272 (pointer_vs_value/code/func.go:60)	MOVUPS	X1, "".~R0+144(SP)
	0x0118 00280 (<unknown line number>)	NOP
	0x0118 00280 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x0118 00280 ($GOROOT/src/errors/errors.go:59)	XORPS	X1, X1
	0x011b 00283 ($GOROOT/src/errors/errors.go:59)	MOVUPS	X1, ""..autotmp_17+240(SP)
	0x0123 00291 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x0123 00291 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x0123 00291 ($GOROOT/src/errors/errors.go:59)	LEAQ	""..autotmp_17+240(SP), CX
	0x012b 00299 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_16+104(SP)
	0x0130 00304 ($GOROOT/src/errors/errors.go:59)	TESTB	AL, (CX)
	0x0132 00306 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x0132 00306 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+160(SP), DX
	0x013a 00314 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $1
	0x013a 00314 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+168(SP), BX
	0x0142 00322 ($GOROOT/src/errors/errors.go:59)	MOVQ	BX, ""..autotmp_17+248(SP)
	0x014a 00330 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x014a 00330 ($GOROOT/src/errors/errors.go:59)	MOVQ	DX, ""..autotmp_17+240(SP)
	0x0152 00338 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_13+120(SP)
	0x0157 00343 (pointer_vs_value/code/func.go:60)	PCDATA	$0, $3
	0x0157 00343 (pointer_vs_value/code/func.go:60)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x015e 00350 (pointer_vs_value/code/func.go:60)	MOVQ	DX, ""..autotmp_18+224(SP)
	0x0166 00358 (pointer_vs_value/code/func.go:60)	MOVQ	CX, ""..autotmp_18+232(SP)
	0x016e 00366 (pointer_vs_value/code/func.go:60)	PCDATA	$0, $1
	0x016e 00366 (pointer_vs_value/code/func.go:60)	PCDATA	$1, $5
	0x016e 00366 (pointer_vs_value/code/func.go:60)	MOVQ	DX, "".~R0+144(SP)
	0x0176 00374 (pointer_vs_value/code/func.go:60)	PCDATA	$0, $0
	0x0176 00374 (pointer_vs_value/code/func.go:60)	MOVQ	CX, "".~R0+152(SP)
	0x017e 00382 (pointer_vs_value/code/func.go:60)	JMP	384
	0x0180 00384 (pointer_vs_value/code/benchmark_iter_test.go:63)	PCDATA	$0, $1
	0x0180 00384 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVQ	"".~R0+152(SP), CX
	0x0188 00392 (pointer_vs_value/code/benchmark_iter_test.go:63)	PCDATA	$1, $1
	0x0188 00392 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVQ	"".~R0+144(SP), BX
	0x0190 00400 (pointer_vs_value/code/benchmark_iter_test.go:63)	PCDATA	$1, $6
	0x0190 00400 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVQ	BX, ""..autotmp_19+208(SP)
	0x0198 00408 (pointer_vs_value/code/benchmark_iter_test.go:63)	PCDATA	$0, $0
	0x0198 00408 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVQ	CX, ""..autotmp_19+216(SP)
	0x01a0 00416 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVSD	X0, "".~r1+32(SP)
	0x01a6 00422 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVQ	""..autotmp_19+208(SP), CX
	0x01ae 00430 (pointer_vs_value/code/benchmark_iter_test.go:63)	PCDATA	$0, $4
	0x01ae 00430 (pointer_vs_value/code/benchmark_iter_test.go:63)	PCDATA	$1, $1
	0x01ae 00430 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVQ	""..autotmp_19+216(SP), BX
	0x01b6 00438 (pointer_vs_value/code/benchmark_iter_test.go:63)	PCDATA	$1, $7
	0x01b6 00438 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVQ	CX, "".~r2+128(SP)
	0x01be 00446 (pointer_vs_value/code/benchmark_iter_test.go:63)	PCDATA	$0, $0
	0x01be 00446 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVQ	BX, "".~r2+136(SP)
	0x01c6 00454 (pointer_vs_value/code/benchmark_iter_test.go:63)	JMP	456
	0x01c8 00456 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVSD	"".~r1+32(SP), X1
	0x01ce 00462 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVSD	X1, ""..autotmp_21+72(SP)
	0x01d4 00468 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVSD	X1, ""..autotmp_4+64(SP)
	0x01da 00474 (pointer_vs_value/code/benchmark_iter_test.go:63)	PCDATA	$0, $1
	0x01da 00474 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVQ	"".~r2+136(SP), CX
	0x01e2 00482 (pointer_vs_value/code/benchmark_iter_test.go:63)	PCDATA	$1, $1
	0x01e2 00482 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVQ	"".~r2+128(SP), BX
	0x01ea 00490 (pointer_vs_value/code/benchmark_iter_test.go:63)	PCDATA	$1, $8
	0x01ea 00490 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVQ	BX, ""..autotmp_5+192(SP)
	0x01f2 00498 (pointer_vs_value/code/benchmark_iter_test.go:63)	PCDATA	$0, $0
	0x01f2 00498 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVQ	CX, ""..autotmp_5+200(SP)
	0x01fa 00506 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVSD	""..autotmp_4+64(SP), X1
	0x0200 00512 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVSD	X1, "".f+48(SP)
	0x0206 00518 (pointer_vs_value/code/benchmark_iter_test.go:63)	PCDATA	$0, $1
	0x0206 00518 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVQ	""..autotmp_5+200(SP), CX
	0x020e 00526 (pointer_vs_value/code/benchmark_iter_test.go:63)	PCDATA	$1, $1
	0x020e 00526 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVQ	""..autotmp_5+192(SP), BX
	0x0216 00534 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVQ	BX, "".err+176(SP)
	0x021e 00542 (pointer_vs_value/code/benchmark_iter_test.go:63)	PCDATA	$0, $0
	0x021e 00542 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVQ	CX, "".err+184(SP)
	0x0226 00550 (<unknown line number>)	NOP
	0x0226 00550 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	BX, BX
	0x0229 00553 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	560
	0x022b 00555 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	725
	0x0230 00560 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $9
	0x0230 00560 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X1, X1
	0x0233 00563 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X1, ""..autotmp_14+256(SP)
	0x023b 00571 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x023b 00571 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x023b 00571 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_14+256(SP), CX
	0x0243 00579 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_23+96(SP)
	0x0248 00584 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x024a 00586 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $5
	0x024a 00586 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), BX
	0x0251 00593 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x0251 00593 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	BX, ""..autotmp_14+256(SP)
	0x0259 00601 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $6
	0x0259 00601 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_27(SB), SI
	0x0260 00608 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x0260 00608 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	SI, ""..autotmp_14+264(SP)
	0x0268 00616 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x026a 00618 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	620
	0x026c 00620 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_22+272(SP)
	0x0274 00628 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_22+280(SP)
	0x0280 00640 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_22+288(SP)
	0x028c 00652 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x028c 00652 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, (SP)
	0x0290 00656 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x0299 00665 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x02a2 00674 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x02a7 00679 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	681
	0x02a9 00681 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x02b1 00689 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+48(SP), X0
	0x02b7 00695 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x02bf 00703 (pointer_vs_value/code/benchmark_iter_test.go:63)	JMP	705
	0x02c1 00705 (pointer_vs_value/code/benchmark_iter_test.go:62)	PCDATA	$0, $-2
	0x02c1 00705 (pointer_vs_value/code/benchmark_iter_test.go:62)	PCDATA	$1, $-2
	0x02c1 00705 (pointer_vs_value/code/benchmark_iter_test.go:62)	JMP	707
	0x02c3 00707 (pointer_vs_value/code/benchmark_iter_test.go:62)	PCDATA	$0, $0
	0x02c3 00707 (pointer_vs_value/code/benchmark_iter_test.go:62)	PCDATA	$1, $1
	0x02c3 00707 (pointer_vs_value/code/benchmark_iter_test.go:62)	MOVQ	"".a+56(SP), AX
	0x02c8 00712 (pointer_vs_value/code/benchmark_iter_test.go:62)	INCQ	AX
	0x02cb 00715 (pointer_vs_value/code/benchmark_iter_test.go:62)	MOVQ	AX, "".a+56(SP)
	0x02d0 00720 (pointer_vs_value/code/benchmark_iter_test.go:62)	JMP	159
	0x02d5 00725 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x02d5 00725 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x02d5 00725 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	681
	0x02d7 00727 (pointer_vs_value/code/func.go:62)	PCDATA	$0, $1
	0x02d7 00727 (pointer_vs_value/code/func.go:62)	PCDATA	$1, $2
	0x02d7 00727 (pointer_vs_value/code/func.go:62)	MOVQ	"".o+88(SP), CX
	0x02dc 00732 (pointer_vs_value/code/func.go:62)	TESTB	AL, (CX)
	0x02de 00734 (pointer_vs_value/code/func.go:62)	PCDATA	$0, $5
	0x02de 00734 (pointer_vs_value/code/func.go:62)	PCDATA	$1, $1
	0x02de 00734 (pointer_vs_value/code/func.go:62)	MOVQ	"".o+88(SP), BX
	0x02e3 00739 (pointer_vs_value/code/func.go:62)	TESTB	AL, (BX)
	0x02e5 00741 (pointer_vs_value/code/func.go:62)	PCDATA	$0, $4
	0x02e5 00741 (pointer_vs_value/code/func.go:62)	MOVQ	(CX), CX
	0x02e8 00744 (pointer_vs_value/code/func.go:62)	XORPS	X1, X1
	0x02eb 00747 (pointer_vs_value/code/func.go:62)	CVTSQ2SD	CX, X1
	0x02f0 00752 (pointer_vs_value/code/func.go:62)	PCDATA	$0, $0
	0x02f0 00752 (pointer_vs_value/code/func.go:62)	DIVSD	8(BX), X1
	0x02f5 00757 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVSD	X1, ""..autotmp_20+80(SP)
	0x02fb 00763 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVSD	X1, "".~r1+32(SP)
	0x0301 00769 (pointer_vs_value/code/benchmark_iter_test.go:63)	PCDATA	$1, $7
	0x0301 00769 (pointer_vs_value/code/benchmark_iter_test.go:63)	XORPS	X1, X1
	0x0304 00772 (pointer_vs_value/code/benchmark_iter_test.go:63)	MOVUPS	X1, "".~r2+128(SP)
	0x030c 00780 (pointer_vs_value/code/benchmark_iter_test.go:63)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x0313 00787 (pointer_vs_value/code/benchmark_iter_test.go:63)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x031a 00794 (pointer_vs_value/code/benchmark_iter_test.go:63)	JMP	456
	0x031f 00799 (pointer_vs_value/code/benchmark_iter_test.go:61)	PCDATA	$0, $-2
	0x031f 00799 (pointer_vs_value/code/benchmark_iter_test.go:61)	PCDATA	$1, $-2
	0x031f 00799 (pointer_vs_value/code/benchmark_iter_test.go:61)	JMP	801
	0x0321 00801 (pointer_vs_value/code/benchmark_iter_test.go:61)	PCDATA	$0, $0
	0x0321 00801 (pointer_vs_value/code/benchmark_iter_test.go:61)	PCDATA	$1, $1
	0x0321 00801 (pointer_vs_value/code/benchmark_iter_test.go:61)	MOVQ	"".i+40(SP), AX
	0x0326 00806 (pointer_vs_value/code/benchmark_iter_test.go:61)	INCQ	AX
	0x0329 00809 (pointer_vs_value/code/benchmark_iter_test.go:61)	MOVQ	AX, "".i+40(SP)
	0x032e 00814 (pointer_vs_value/code/benchmark_iter_test.go:61)	JMP	119
	0x0333 00819 (<unknown line number>)	PCDATA	$0, $-2
	0x0333 00819 (<unknown line number>)	PCDATA	$1, $-2
	0x0333 00819 (<unknown line number>)	MOVQ	328(SP), BP
	0x033b 00827 (<unknown line number>)	ADDQ	$336, SP
	0x0342 00834 (<unknown line number>)	RET
	0x0343 00835 (<unknown line number>)	NOP
	0x0343 00835 (pointer_vs_value/code/benchmark_iter_test.go:57)	PCDATA	$1, $-1
	0x0343 00835 (pointer_vs_value/code/benchmark_iter_test.go:57)	PCDATA	$0, $-1
	0x0343 00835 (pointer_vs_value/code/benchmark_iter_test.go:57)	CALL	runtime.morestack_noctxt(SB)
	0x0348 00840 (pointer_vs_value/code/benchmark_iter_test.go:57)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 30 ff ff  eH..%....H..$0..
	0x0010 ff 48 3b 41 10 0f 86 28 03 00 00 48 81 ec 50 01  .H;A...(...H..P.
	0x0020 00 00 48 89 ac 24 48 01 00 00 48 8d ac 24 48 01  ..H..$H...H..$H.
	0x0030 00 00 e8 00 00 00 00 f2 0f 10 44 24 08 48 8b 04  ..........D$.H..
	0x0040 24 48 8b 4c 24 10 48 8b 54 24 18 48 89 84 24 28  $H.L$.H.T$.H..$(
	0x0050 01 00 00 f2 0f 11 84 24 30 01 00 00 48 89 8c 24  .......$0...H..$
	0x0060 38 01 00 00 48 89 94 24 40 01 00 00 48 c7 44 24  8...H..$@...H.D$
	0x0070 28 00 00 00 00 eb 00 48 8b 84 24 58 01 00 00 84  (......H..$X....
	0x0080 00 48 8b 80 08 01 00 00 48 39 44 24 28 7c 05 e9  .H......H9D$(|..
	0x0090 9f 02 00 00 48 c7 44 24 38 00 00 00 00 eb 00 48  ....H.D$8......H
	0x00a0 81 7c 24 38 00 e1 f5 05 7c 05 e9 70 02 00 00 48  .|$8....|..p...H
	0x00b0 8d 84 24 28 01 00 00 48 89 44 24 70 48 89 44 24  ..$(...H.D$pH.D$
	0x00c0 58 0f 57 c0 f2 0f 11 44 24 20 0f 57 c9 0f 11 8c  X.W....D$ .W....
	0x00d0 24 80 00 00 00 48 8b 44 24 58 84 00 f2 0f 10 48  $....H.D$X.....H
	0x00e0 08 66 0f 2e c8 0f 85 ec 01 00 00 7b 05 e9 e5 01  .f.........{....
	0x00f0 00 00 48 8d 05 00 00 00 00 48 89 84 24 a0 00 00  ..H......H..$...
	0x0100 00 48 c7 84 24 a8 00 00 00 16 00 00 00 0f 57 c9  .H..$.........W.
	0x0110 0f 11 8c 24 90 00 00 00 0f 57 c9 0f 11 8c 24 f0  ...$.....W....$.
	0x0120 00 00 00 48 8d 8c 24 f0 00 00 00 48 89 4c 24 68  ...H..$....H.L$h
	0x0130 84 01 48 8b 94 24 a0 00 00 00 48 8b 9c 24 a8 00  ..H..$....H..$..
	0x0140 00 00 48 89 9c 24 f8 00 00 00 48 89 94 24 f0 00  ..H..$....H..$..
	0x0150 00 00 48 89 4c 24 78 48 8d 15 00 00 00 00 48 89  ..H.L$xH......H.
	0x0160 94 24 e0 00 00 00 48 89 8c 24 e8 00 00 00 48 89  .$....H..$....H.
	0x0170 94 24 90 00 00 00 48 89 8c 24 98 00 00 00 eb 00  .$....H..$......
	0x0180 48 8b 8c 24 98 00 00 00 48 8b 9c 24 90 00 00 00  H..$....H..$....
	0x0190 48 89 9c 24 d0 00 00 00 48 89 8c 24 d8 00 00 00  H..$....H..$....
	0x01a0 f2 0f 11 44 24 20 48 8b 8c 24 d0 00 00 00 48 8b  ...D$ H..$....H.
	0x01b0 9c 24 d8 00 00 00 48 89 8c 24 80 00 00 00 48 89  .$....H..$....H.
	0x01c0 9c 24 88 00 00 00 eb 00 f2 0f 10 4c 24 20 f2 0f  .$.........L$ ..
	0x01d0 11 4c 24 48 f2 0f 11 4c 24 40 48 8b 8c 24 88 00  .L$H...L$@H..$..
	0x01e0 00 00 48 8b 9c 24 80 00 00 00 48 89 9c 24 c0 00  ..H..$....H..$..
	0x01f0 00 00 48 89 8c 24 c8 00 00 00 f2 0f 10 4c 24 40  ..H..$.......L$@
	0x0200 f2 0f 11 4c 24 30 48 8b 8c 24 c8 00 00 00 48 8b  ...L$0H..$....H.
	0x0210 9c 24 c0 00 00 00 48 89 9c 24 b0 00 00 00 48 89  .$....H..$....H.
	0x0220 8c 24 b8 00 00 00 48 85 db 75 05 e9 a5 00 00 00  .$....H..u......
	0x0230 0f 57 c9 0f 11 8c 24 00 01 00 00 48 8d 8c 24 00  .W....$....H..$.
	0x0240 01 00 00 48 89 4c 24 60 84 01 48 8d 1d 00 00 00  ...H.L$`..H.....
	0x0250 00 48 89 9c 24 00 01 00 00 48 8d 35 00 00 00 00  .H..$....H.5....
	0x0260 48 89 b4 24 08 01 00 00 84 01 eb 00 48 89 8c 24  H..$........H..$
	0x0270 10 01 00 00 48 c7 84 24 18 01 00 00 01 00 00 00  ....H..$........
	0x0280 48 c7 84 24 20 01 00 00 01 00 00 00 48 89 0c 24  H..$ .......H..$
	0x0290 48 c7 44 24 08 01 00 00 00 48 c7 44 24 10 01 00  H.D$.....H.D$...
	0x02a0 00 00 e8 00 00 00 00 eb 00 f2 0f 10 05 00 00 00  ................
	0x02b0 00 f2 0f 58 44 24 30 f2 0f 11 05 00 00 00 00 eb  ...XD$0.........
	0x02c0 00 eb 00 48 8b 44 24 38 48 ff c0 48 89 44 24 38  ...H.D$8H..H.D$8
	0x02d0 e9 ca fd ff ff eb d2 48 8b 4c 24 58 84 01 48 8b  .......H.L$X..H.
	0x02e0 5c 24 58 84 03 48 8b 09 0f 57 c9 f2 48 0f 2a c9  \$X..H...W..H.*.
	0x02f0 f2 0f 5e 4b 08 f2 0f 11 4c 24 50 f2 0f 11 4c 24  ..^K....L$P...L$
	0x0300 20 0f 57 c9 0f 11 8c 24 80 00 00 00 48 8d 05 00   .W....$....H...
	0x0310 00 00 00 48 8d 15 00 00 00 00 e9 a9 fe ff ff eb  ...H............
	0x0320 00 48 8b 44 24 28 48 ff c0 48 89 44 24 28 e9 44  .H.D$(H..H.D$(.D
	0x0330 fd ff ff 48 8b ac 24 48 01 00 00 48 81 c4 50 01  ...H..$H...H..P.
	0x0340 00 00 c3 e8 00 00 00 00 e9 b3 fc ff ff           .............
	rel 5+4 t=16 TLS+0
	rel 51+4 t=8 "".createTiny+0
	rel 245+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 346+4 t=15 go.itab.*errors.errorString,error+0
	rel 589+4 t=15 type.string+0
	rel 604+4 t=15 ""..stmp_27+0
	rel 675+4 t=8 log.Fatal+0
	rel 685+4 t=15 "".F+0
	rel 699+4 t=15 "".F+0
	rel 783+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 790+4 t=15 go.itab.*errors.errorString,error+0
	rel 836+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkTinyIfc_Iter STEXT size=603 args=0x8 locals=0xc8
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:69)	TEXT	"".BenchmarkTinyIfc_Iter(SB), ABIInternal, $200-8
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:69)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_iter_test.go:69)	LEAQ	-72(SP), AX
	0x000e 00014 (pointer_vs_value/code/benchmark_iter_test.go:69)	CMPQ	AX, 16(CX)
	0x0012 00018 (pointer_vs_value/code/benchmark_iter_test.go:69)	JLS	593
	0x0018 00024 (pointer_vs_value/code/benchmark_iter_test.go:69)	SUBQ	$200, SP
	0x001f 00031 (pointer_vs_value/code/benchmark_iter_test.go:69)	MOVQ	BP, 192(SP)
	0x0027 00039 (pointer_vs_value/code/benchmark_iter_test.go:69)	LEAQ	192(SP), BP
	0x002f 00047 (pointer_vs_value/code/benchmark_iter_test.go:69)	FUNCDATA	$0, gclocals·73de87619823f6747f37fd4c152f5b42(SB)
	0x002f 00047 (pointer_vs_value/code/benchmark_iter_test.go:69)	FUNCDATA	$1, gclocals·5656cec2d04c5a84ade886586cb39011(SB)
	0x002f 00047 (pointer_vs_value/code/benchmark_iter_test.go:69)	FUNCDATA	$2, gclocals·ac54cb40544120234c399b823c9a65b5(SB)
	0x002f 00047 (pointer_vs_value/code/benchmark_iter_test.go:69)	FUNCDATA	$3, "".BenchmarkTinyIfc_Iter.stkobj(SB)
	0x002f 00047 (pointer_vs_value/code/benchmark_iter_test.go:71)	PCDATA	$0, $1
	0x002f 00047 (pointer_vs_value/code/benchmark_iter_test.go:71)	PCDATA	$1, $0
	0x002f 00047 (pointer_vs_value/code/benchmark_iter_test.go:71)	LEAQ	type."".tiny(SB), AX
	0x0036 00054 (pointer_vs_value/code/benchmark_iter_test.go:71)	PCDATA	$0, $0
	0x0036 00054 (pointer_vs_value/code/benchmark_iter_test.go:71)	MOVQ	AX, (SP)
	0x003a 00058 (pointer_vs_value/code/benchmark_iter_test.go:71)	CALL	runtime.newobject(SB)
	0x003f 00063 (pointer_vs_value/code/benchmark_iter_test.go:71)	PCDATA	$0, $1
	0x003f 00063 (pointer_vs_value/code/benchmark_iter_test.go:71)	MOVQ	8(SP), AX
	0x0044 00068 (pointer_vs_value/code/benchmark_iter_test.go:71)	PCDATA	$0, $0
	0x0044 00068 (pointer_vs_value/code/benchmark_iter_test.go:71)	PCDATA	$1, $1
	0x0044 00068 (pointer_vs_value/code/benchmark_iter_test.go:71)	MOVQ	AX, "".&o+96(SP)
	0x0049 00073 (pointer_vs_value/code/benchmark_iter_test.go:71)	CALL	"".createTiny(SB)
	0x004e 00078 (pointer_vs_value/code/benchmark_iter_test.go:71)	PCDATA	$0, $1
	0x004e 00078 (pointer_vs_value/code/benchmark_iter_test.go:71)	MOVQ	"".&o+96(SP), AX
	0x0053 00083 (pointer_vs_value/code/benchmark_iter_test.go:71)	MOVSD	8(SP), X0
	0x0059 00089 (pointer_vs_value/code/benchmark_iter_test.go:71)	MOVQ	(SP), CX
	0x005d 00093 (pointer_vs_value/code/benchmark_iter_test.go:71)	PCDATA	$0, $2
	0x005d 00093 (pointer_vs_value/code/benchmark_iter_test.go:71)	MOVQ	16(SP), DX
	0x0062 00098 (pointer_vs_value/code/benchmark_iter_test.go:71)	MOVQ	24(SP), BX
	0x0067 00103 (pointer_vs_value/code/benchmark_iter_test.go:71)	MOVQ	CX, (AX)
	0x006a 00106 (pointer_vs_value/code/benchmark_iter_test.go:71)	MOVSD	X0, 8(AX)
	0x006f 00111 (pointer_vs_value/code/benchmark_iter_test.go:71)	MOVQ	BX, 24(AX)
	0x0073 00115 (pointer_vs_value/code/benchmark_iter_test.go:71)	PCDATA	$0, $3
	0x0073 00115 (pointer_vs_value/code/benchmark_iter_test.go:71)	LEAQ	16(AX), DI
	0x0077 00119 (pointer_vs_value/code/benchmark_iter_test.go:71)	PCDATA	$0, $-2
	0x0077 00119 (pointer_vs_value/code/benchmark_iter_test.go:71)	PCDATA	$1, $-2
	0x0077 00119 (pointer_vs_value/code/benchmark_iter_test.go:71)	CMPL	runtime.writeBarrier(SB), $0
	0x007e 00126 (pointer_vs_value/code/benchmark_iter_test.go:71)	JEQ	133
	0x0080 00128 (pointer_vs_value/code/benchmark_iter_test.go:71)	JMP	580
	0x0085 00133 (pointer_vs_value/code/benchmark_iter_test.go:71)	MOVQ	DX, 16(AX)
	0x0089 00137 (pointer_vs_value/code/benchmark_iter_test.go:71)	JMP	139
	0x008b 00139 (pointer_vs_value/code/benchmark_iter_test.go:73)	PCDATA	$0, $0
	0x008b 00139 (pointer_vs_value/code/benchmark_iter_test.go:73)	PCDATA	$1, $1
	0x008b 00139 (pointer_vs_value/code/benchmark_iter_test.go:73)	MOVQ	$0, "".i+40(SP)
	0x0094 00148 (pointer_vs_value/code/benchmark_iter_test.go:73)	JMP	150
	0x0096 00150 (pointer_vs_value/code/benchmark_iter_test.go:73)	PCDATA	$0, $1
	0x0096 00150 (pointer_vs_value/code/benchmark_iter_test.go:73)	MOVQ	"".b+208(SP), AX
	0x009e 00158 (pointer_vs_value/code/benchmark_iter_test.go:73)	TESTB	AL, (AX)
	0x00a0 00160 (pointer_vs_value/code/benchmark_iter_test.go:73)	PCDATA	$0, $0
	0x00a0 00160 (pointer_vs_value/code/benchmark_iter_test.go:73)	MOVQ	264(AX), AX
	0x00a7 00167 (pointer_vs_value/code/benchmark_iter_test.go:73)	CMPQ	"".i+40(SP), AX
	0x00ac 00172 (pointer_vs_value/code/benchmark_iter_test.go:73)	JLT	179
	0x00ae 00174 (pointer_vs_value/code/benchmark_iter_test.go:73)	JMP	564
	0x00b3 00179 (pointer_vs_value/code/benchmark_iter_test.go:74)	MOVQ	$0, "".a+56(SP)
	0x00bc 00188 (pointer_vs_value/code/benchmark_iter_test.go:74)	JMP	190
	0x00be 00190 (pointer_vs_value/code/benchmark_iter_test.go:74)	CMPQ	"".a+56(SP), $100000000
	0x00c7 00199 (pointer_vs_value/code/benchmark_iter_test.go:74)	JLT	206
	0x00c9 00201 (pointer_vs_value/code/benchmark_iter_test.go:74)	JMP	544
	0x00ce 00206 (pointer_vs_value/code/benchmark_iter_test.go:75)	PCDATA	$0, $1
	0x00ce 00206 (pointer_vs_value/code/benchmark_iter_test.go:75)	MOVQ	"".&o+96(SP), AX
	0x00d3 00211 (pointer_vs_value/code/benchmark_iter_test.go:75)	PCDATA	$0, $0
	0x00d3 00211 (pointer_vs_value/code/benchmark_iter_test.go:75)	PCDATA	$1, $2
	0x00d3 00211 (pointer_vs_value/code/benchmark_iter_test.go:75)	MOVQ	AX, ""..autotmp_9+80(SP)
	0x00d8 00216 (pointer_vs_value/code/benchmark_iter_test.go:75)	XORPS	X0, X0
	0x00db 00219 (pointer_vs_value/code/benchmark_iter_test.go:75)	MOVUPS	X0, ""..autotmp_11+152(SP)
	0x00e3 00227 (pointer_vs_value/code/benchmark_iter_test.go:75)	PCDATA	$0, $1
	0x00e3 00227 (pointer_vs_value/code/benchmark_iter_test.go:75)	PCDATA	$1, $1
	0x00e3 00227 (pointer_vs_value/code/benchmark_iter_test.go:75)	MOVQ	""..autotmp_9+80(SP), AX
	0x00e8 00232 (pointer_vs_value/code/benchmark_iter_test.go:75)	PCDATA	$0, $4
	0x00e8 00232 (pointer_vs_value/code/benchmark_iter_test.go:75)	LEAQ	go.itab.*"".tiny,"".obj(SB), CX
	0x00ef 00239 (pointer_vs_value/code/benchmark_iter_test.go:75)	PCDATA	$0, $1
	0x00ef 00239 (pointer_vs_value/code/benchmark_iter_test.go:75)	MOVQ	CX, (SP)
	0x00f3 00243 (pointer_vs_value/code/benchmark_iter_test.go:75)	PCDATA	$0, $0
	0x00f3 00243 (pointer_vs_value/code/benchmark_iter_test.go:75)	MOVQ	AX, 8(SP)
	0x00f8 00248 (pointer_vs_value/code/benchmark_iter_test.go:75)	CALL	"".calcIfc(SB)
	0x00fd 00253 (pointer_vs_value/code/benchmark_iter_test.go:75)	MOVSD	16(SP), X0
	0x0103 00259 (pointer_vs_value/code/benchmark_iter_test.go:75)	MOVSD	X0, ""..autotmp_10+72(SP)
	0x0109 00265 (pointer_vs_value/code/benchmark_iter_test.go:75)	MOVQ	24(SP), AX
	0x010e 00270 (pointer_vs_value/code/benchmark_iter_test.go:75)	PCDATA	$0, $5
	0x010e 00270 (pointer_vs_value/code/benchmark_iter_test.go:75)	MOVQ	32(SP), CX
	0x0113 00275 (pointer_vs_value/code/benchmark_iter_test.go:75)	PCDATA	$1, $3
	0x0113 00275 (pointer_vs_value/code/benchmark_iter_test.go:75)	MOVQ	AX, ""..autotmp_11+152(SP)
	0x011b 00283 (pointer_vs_value/code/benchmark_iter_test.go:75)	PCDATA	$0, $0
	0x011b 00283 (pointer_vs_value/code/benchmark_iter_test.go:75)	MOVQ	CX, ""..autotmp_11+160(SP)
	0x0123 00291 (pointer_vs_value/code/benchmark_iter_test.go:75)	MOVSD	""..autotmp_10+72(SP), X0
	0x0129 00297 (pointer_vs_value/code/benchmark_iter_test.go:75)	MOVSD	X0, ""..autotmp_4+64(SP)
	0x012f 00303 (pointer_vs_value/code/benchmark_iter_test.go:75)	PCDATA	$0, $1
	0x012f 00303 (pointer_vs_value/code/benchmark_iter_test.go:75)	MOVQ	""..autotmp_11+160(SP), AX
	0x0137 00311 (pointer_vs_value/code/benchmark_iter_test.go:75)	PCDATA	$1, $1
	0x0137 00311 (pointer_vs_value/code/benchmark_iter_test.go:75)	MOVQ	""..autotmp_11+152(SP), CX
	0x013f 00319 (pointer_vs_value/code/benchmark_iter_test.go:75)	PCDATA	$1, $4
	0x013f 00319 (pointer_vs_value/code/benchmark_iter_test.go:75)	MOVQ	CX, ""..autotmp_5+120(SP)
	0x0144 00324 (pointer_vs_value/code/benchmark_iter_test.go:75)	PCDATA	$0, $0
	0x0144 00324 (pointer_vs_value/code/benchmark_iter_test.go:75)	MOVQ	AX, ""..autotmp_5+128(SP)
	0x014c 00332 (pointer_vs_value/code/benchmark_iter_test.go:75)	MOVSD	""..autotmp_4+64(SP), X0
	0x0152 00338 (pointer_vs_value/code/benchmark_iter_test.go:75)	MOVSD	X0, "".f+48(SP)
	0x0158 00344 (pointer_vs_value/code/benchmark_iter_test.go:75)	PCDATA	$0, $1
	0x0158 00344 (pointer_vs_value/code/benchmark_iter_test.go:75)	MOVQ	""..autotmp_5+128(SP), AX
	0x0160 00352 (pointer_vs_value/code/benchmark_iter_test.go:75)	PCDATA	$1, $1
	0x0160 00352 (pointer_vs_value/code/benchmark_iter_test.go:75)	MOVQ	""..autotmp_5+120(SP), CX
	0x0165 00357 (pointer_vs_value/code/benchmark_iter_test.go:75)	MOVQ	CX, "".err+104(SP)
	0x016a 00362 (pointer_vs_value/code/benchmark_iter_test.go:75)	PCDATA	$0, $0
	0x016a 00362 (pointer_vs_value/code/benchmark_iter_test.go:75)	MOVQ	AX, "".err+112(SP)
	0x016f 00367 (<unknown line number>)	NOP
	0x016f 00367 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	CX, CX
	0x0172 00370 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	377
	0x0174 00372 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	542
	0x0179 00377 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $5
	0x0179 00377 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X0, X0
	0x017c 00380 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X0, ""..autotmp_12+136(SP)
	0x0184 00388 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x0184 00388 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x0184 00388 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_12+136(SP), AX
	0x018c 00396 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_14+88(SP)
	0x0191 00401 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x0193 00403 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x0193 00403 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), CX
	0x019a 00410 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x019a 00410 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_12+136(SP)
	0x01a2 00418 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $2
	0x01a2 00418 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_28(SB), DX
	0x01a9 00425 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x01a9 00425 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	DX, ""..autotmp_12+144(SP)
	0x01b1 00433 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x01b3 00435 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	437
	0x01b5 00437 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_13+168(SP)
	0x01bd 00445 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_13+176(SP)
	0x01c9 00457 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_13+184(SP)
	0x01d5 00469 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x01d5 00469 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, (SP)
	0x01d9 00473 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x01e2 00482 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x01eb 00491 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x01f0 00496 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	498
	0x01f2 00498 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x01fa 00506 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+48(SP), X0
	0x0200 00512 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x0208 00520 (pointer_vs_value/code/benchmark_iter_test.go:75)	JMP	522
	0x020a 00522 (pointer_vs_value/code/benchmark_iter_test.go:74)	PCDATA	$0, $-2
	0x020a 00522 (pointer_vs_value/code/benchmark_iter_test.go:74)	PCDATA	$1, $-2
	0x020a 00522 (pointer_vs_value/code/benchmark_iter_test.go:74)	JMP	524
	0x020c 00524 (pointer_vs_value/code/benchmark_iter_test.go:74)	PCDATA	$0, $0
	0x020c 00524 (pointer_vs_value/code/benchmark_iter_test.go:74)	PCDATA	$1, $1
	0x020c 00524 (pointer_vs_value/code/benchmark_iter_test.go:74)	MOVQ	"".a+56(SP), AX
	0x0211 00529 (pointer_vs_value/code/benchmark_iter_test.go:74)	INCQ	AX
	0x0214 00532 (pointer_vs_value/code/benchmark_iter_test.go:74)	MOVQ	AX, "".a+56(SP)
	0x0219 00537 (pointer_vs_value/code/benchmark_iter_test.go:74)	JMP	190
	0x021e 00542 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x021e 00542 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x021e 00542 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	498
	0x0220 00544 (pointer_vs_value/code/benchmark_iter_test.go:73)	JMP	546
	0x0222 00546 (pointer_vs_value/code/benchmark_iter_test.go:73)	PCDATA	$0, $0
	0x0222 00546 (pointer_vs_value/code/benchmark_iter_test.go:73)	PCDATA	$1, $1
	0x0222 00546 (pointer_vs_value/code/benchmark_iter_test.go:73)	MOVQ	"".i+40(SP), AX
	0x0227 00551 (pointer_vs_value/code/benchmark_iter_test.go:73)	INCQ	AX
	0x022a 00554 (pointer_vs_value/code/benchmark_iter_test.go:73)	MOVQ	AX, "".i+40(SP)
	0x022f 00559 (pointer_vs_value/code/benchmark_iter_test.go:73)	JMP	150
	0x0234 00564 (<unknown line number>)	PCDATA	$0, $-2
	0x0234 00564 (<unknown line number>)	PCDATA	$1, $-2
	0x0234 00564 (<unknown line number>)	MOVQ	192(SP), BP
	0x023c 00572 (<unknown line number>)	ADDQ	$200, SP
	0x0243 00579 (<unknown line number>)	RET
	0x0244 00580 (pointer_vs_value/code/benchmark_iter_test.go:71)	MOVQ	DX, AX
	0x0247 00583 (pointer_vs_value/code/benchmark_iter_test.go:71)	CALL	runtime.gcWriteBarrier(SB)
	0x024c 00588 (pointer_vs_value/code/benchmark_iter_test.go:71)	JMP	139
	0x0251 00593 (pointer_vs_value/code/benchmark_iter_test.go:71)	NOP
	0x0251 00593 (pointer_vs_value/code/benchmark_iter_test.go:69)	PCDATA	$1, $-1
	0x0251 00593 (pointer_vs_value/code/benchmark_iter_test.go:69)	PCDATA	$0, $-1
	0x0251 00593 (pointer_vs_value/code/benchmark_iter_test.go:69)	CALL	runtime.morestack_noctxt(SB)
	0x0256 00598 (pointer_vs_value/code/benchmark_iter_test.go:69)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 44 24 b8 48 3b  eH..%....H.D$.H;
	0x0010 41 10 0f 86 39 02 00 00 48 81 ec c8 00 00 00 48  A...9...H......H
	0x0020 89 ac 24 c0 00 00 00 48 8d ac 24 c0 00 00 00 48  ..$....H..$....H
	0x0030 8d 05 00 00 00 00 48 89 04 24 e8 00 00 00 00 48  ......H..$.....H
	0x0040 8b 44 24 08 48 89 44 24 60 e8 00 00 00 00 48 8b  .D$.H.D$`.....H.
	0x0050 44 24 60 f2 0f 10 44 24 08 48 8b 0c 24 48 8b 54  D$`...D$.H..$H.T
	0x0060 24 10 48 8b 5c 24 18 48 89 08 f2 0f 11 40 08 48  $.H.\$.H.....@.H
	0x0070 89 58 18 48 8d 78 10 83 3d 00 00 00 00 00 74 05  .X.H.x..=.....t.
	0x0080 e9 bf 01 00 00 48 89 50 10 eb 00 48 c7 44 24 28  .....H.P...H.D$(
	0x0090 00 00 00 00 eb 00 48 8b 84 24 d0 00 00 00 84 00  ......H..$......
	0x00a0 48 8b 80 08 01 00 00 48 39 44 24 28 7c 05 e9 81  H......H9D$(|...
	0x00b0 01 00 00 48 c7 44 24 38 00 00 00 00 eb 00 48 81  ...H.D$8......H.
	0x00c0 7c 24 38 00 e1 f5 05 7c 05 e9 52 01 00 00 48 8b  |$8....|..R...H.
	0x00d0 44 24 60 48 89 44 24 50 0f 57 c0 0f 11 84 24 98  D$`H.D$P.W....$.
	0x00e0 00 00 00 48 8b 44 24 50 48 8d 0d 00 00 00 00 48  ...H.D$PH......H
	0x00f0 89 0c 24 48 89 44 24 08 e8 00 00 00 00 f2 0f 10  ..$H.D$.........
	0x0100 44 24 10 f2 0f 11 44 24 48 48 8b 44 24 18 48 8b  D$....D$HH.D$.H.
	0x0110 4c 24 20 48 89 84 24 98 00 00 00 48 89 8c 24 a0  L$ H..$....H..$.
	0x0120 00 00 00 f2 0f 10 44 24 48 f2 0f 11 44 24 40 48  ......D$H...D$@H
	0x0130 8b 84 24 a0 00 00 00 48 8b 8c 24 98 00 00 00 48  ..$....H..$....H
	0x0140 89 4c 24 78 48 89 84 24 80 00 00 00 f2 0f 10 44  .L$xH..$.......D
	0x0150 24 40 f2 0f 11 44 24 30 48 8b 84 24 80 00 00 00  $@...D$0H..$....
	0x0160 48 8b 4c 24 78 48 89 4c 24 68 48 89 44 24 70 48  H.L$xH.L$hH.D$pH
	0x0170 85 c9 75 05 e9 a5 00 00 00 0f 57 c0 0f 11 84 24  ..u.......W....$
	0x0180 88 00 00 00 48 8d 84 24 88 00 00 00 48 89 44 24  ....H..$....H.D$
	0x0190 58 84 00 48 8d 0d 00 00 00 00 48 89 8c 24 88 00  X..H......H..$..
	0x01a0 00 00 48 8d 15 00 00 00 00 48 89 94 24 90 00 00  ..H......H..$...
	0x01b0 00 84 00 eb 00 48 89 84 24 a8 00 00 00 48 c7 84  .....H..$....H..
	0x01c0 24 b0 00 00 00 01 00 00 00 48 c7 84 24 b8 00 00  $........H..$...
	0x01d0 00 01 00 00 00 48 89 04 24 48 c7 44 24 08 01 00  .....H..$H.D$...
	0x01e0 00 00 48 c7 44 24 10 01 00 00 00 e8 00 00 00 00  ..H.D$..........
	0x01f0 eb 00 f2 0f 10 05 00 00 00 00 f2 0f 58 44 24 30  ............XD$0
	0x0200 f2 0f 11 05 00 00 00 00 eb 00 eb 00 48 8b 44 24  ............H.D$
	0x0210 38 48 ff c0 48 89 44 24 38 e9 a0 fe ff ff eb d2  8H..H.D$8.......
	0x0220 eb 00 48 8b 44 24 28 48 ff c0 48 89 44 24 28 e9  ..H.D$(H..H.D$(.
	0x0230 62 fe ff ff 48 8b ac 24 c0 00 00 00 48 81 c4 c8  b...H..$....H...
	0x0240 00 00 00 c3 48 89 d0 e8 00 00 00 00 e9 3a fe ff  ....H........:..
	0x0250 ff e8 00 00 00 00 e9 a5 fd ff ff                 ...........
	rel 5+4 t=16 TLS+0
	rel 50+4 t=15 type."".tiny+0
	rel 59+4 t=8 runtime.newobject+0
	rel 74+4 t=8 "".createTiny+0
	rel 121+4 t=15 runtime.writeBarrier+-1
	rel 235+4 t=15 go.itab.*"".tiny,"".obj+0
	rel 249+4 t=8 "".calcIfc+0
	rel 406+4 t=15 type.string+0
	rel 421+4 t=15 ""..stmp_28+0
	rel 492+4 t=8 log.Fatal+0
	rel 502+4 t=15 "".F+0
	rel 516+4 t=15 "".F+0
	rel 584+4 t=8 runtime.gcWriteBarrier+0
	rel 594+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkMini_Iter STEXT size=852 args=0x8 locals=0x220
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:81)	TEXT	"".BenchmarkMini_Iter(SB), ABIInternal, $544-8
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:81)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_iter_test.go:81)	LEAQ	-416(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_iter_test.go:81)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_iter_test.go:81)	JLS	842
	0x001b 00027 (pointer_vs_value/code/benchmark_iter_test.go:81)	SUBQ	$544, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_iter_test.go:81)	MOVQ	BP, 536(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_iter_test.go:81)	LEAQ	536(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:81)	FUNCDATA	$0, gclocals·d1d75e5bd153dd111cd8f1bc3c181073(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:81)	FUNCDATA	$1, gclocals·e58ea31edad5aeb6777e10ccbbd72170(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:81)	FUNCDATA	$2, gclocals·312acb76b4abc33b200226485697de53(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:81)	FUNCDATA	$3, "".BenchmarkMini_Iter.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:83)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:83)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:83)	CALL	"".createMini(SB)
	0x0037 00055 (pointer_vs_value/code/benchmark_iter_test.go:83)	PCDATA	$0, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_iter_test.go:83)	PCDATA	$1, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_iter_test.go:83)	LEAQ	"".o+344(SP), DI
	0x003f 00063 (pointer_vs_value/code/benchmark_iter_test.go:83)	MOVQ	SP, SI
	0x0042 00066 (pointer_vs_value/code/benchmark_iter_test.go:83)	PCDATA	$0, $0
	0x0042 00066 (pointer_vs_value/code/benchmark_iter_test.go:83)	DUFFCOPY	$812
	0x0055 00085 (pointer_vs_value/code/benchmark_iter_test.go:85)	MOVQ	$0, "".i+104(SP)
	0x005e 00094 (pointer_vs_value/code/benchmark_iter_test.go:85)	PCDATA	$0, $-2
	0x005e 00094 (pointer_vs_value/code/benchmark_iter_test.go:85)	PCDATA	$1, $-2
	0x005e 00094 (pointer_vs_value/code/benchmark_iter_test.go:85)	JMP	96
	0x0060 00096 (pointer_vs_value/code/benchmark_iter_test.go:85)	PCDATA	$0, $2
	0x0060 00096 (pointer_vs_value/code/benchmark_iter_test.go:85)	PCDATA	$1, $1
	0x0060 00096 (pointer_vs_value/code/benchmark_iter_test.go:85)	MOVQ	"".b+552(SP), AX
	0x0068 00104 (pointer_vs_value/code/benchmark_iter_test.go:85)	TESTB	AL, (AX)
	0x006a 00106 (pointer_vs_value/code/benchmark_iter_test.go:85)	PCDATA	$0, $0
	0x006a 00106 (pointer_vs_value/code/benchmark_iter_test.go:85)	MOVQ	264(AX), AX
	0x0071 00113 (pointer_vs_value/code/benchmark_iter_test.go:85)	CMPQ	"".i+104(SP), AX
	0x0076 00118 (pointer_vs_value/code/benchmark_iter_test.go:85)	JLT	125
	0x0078 00120 (pointer_vs_value/code/benchmark_iter_test.go:85)	JMP	826
	0x007d 00125 (pointer_vs_value/code/benchmark_iter_test.go:86)	MOVQ	$0, "".a+120(SP)
	0x0086 00134 (pointer_vs_value/code/benchmark_iter_test.go:86)	JMP	136
	0x0088 00136 (pointer_vs_value/code/benchmark_iter_test.go:86)	CMPQ	"".a+120(SP), $100000000
	0x0091 00145 (pointer_vs_value/code/benchmark_iter_test.go:86)	JLT	152
	0x0093 00147 (pointer_vs_value/code/benchmark_iter_test.go:86)	JMP	806
	0x0098 00152 (pointer_vs_value/code/benchmark_iter_test.go:87)	PCDATA	$0, $1
	0x0098 00152 (pointer_vs_value/code/benchmark_iter_test.go:87)	PCDATA	$1, $2
	0x0098 00152 (pointer_vs_value/code/benchmark_iter_test.go:87)	LEAQ	"".o+440(SP), DI
	0x00a0 00160 (pointer_vs_value/code/benchmark_iter_test.go:87)	PCDATA	$0, $3
	0x00a0 00160 (pointer_vs_value/code/benchmark_iter_test.go:87)	LEAQ	"".o+344(SP), SI
	0x00a8 00168 (pointer_vs_value/code/benchmark_iter_test.go:87)	PCDATA	$0, $0
	0x00a8 00168 (pointer_vs_value/code/benchmark_iter_test.go:87)	DUFFCOPY	$812
	0x00bb 00187 (pointer_vs_value/code/benchmark_iter_test.go:87)	XORPS	X0, X0
	0x00be 00190 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVSD	X0, "".~r1+96(SP)
	0x00c4 00196 (pointer_vs_value/code/benchmark_iter_test.go:87)	XORPS	X1, X1
	0x00c7 00199 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVUPS	X1, "".~r2+176(SP)
	0x00cf 00207 (<unknown line number>)	NOP
	0x00cf 00207 (pointer_vs_value/code/func.go:22)	MOVSD	"".o+464(SP), X1
	0x00d8 00216 (pointer_vs_value/code/func.go:22)	UCOMISD	X0, X1
	0x00dc 00220 (pointer_vs_value/code/func.go:22)	JNE	736
	0x00e2 00226 (pointer_vs_value/code/func.go:22)	JPC	233
	0x00e4 00228 (pointer_vs_value/code/func.go:22)	JMP	736
	0x00e9 00233 (pointer_vs_value/code/func.go:23)	PCDATA	$0, $2
	0x00e9 00233 (pointer_vs_value/code/func.go:23)	PCDATA	$1, $3
	0x00e9 00233 (pointer_vs_value/code/func.go:23)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x00f0 00240 (pointer_vs_value/code/func.go:23)	PCDATA	$0, $0
	0x00f0 00240 (pointer_vs_value/code/func.go:23)	MOVQ	AX, errors.text+208(SP)
	0x00f8 00248 (pointer_vs_value/code/func.go:23)	MOVQ	$22, errors.text+216(SP)
	0x0104 00260 (pointer_vs_value/code/func.go:23)	XORPS	X1, X1
	0x0107 00263 (pointer_vs_value/code/func.go:23)	MOVUPS	X1, "".~R0+192(SP)
	0x010f 00271 (<unknown line number>)	NOP
	0x010f 00271 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x010f 00271 ($GOROOT/src/errors/errors.go:59)	XORPS	X1, X1
	0x0112 00274 ($GOROOT/src/errors/errors.go:59)	MOVUPS	X1, ""..autotmp_16+288(SP)
	0x011a 00282 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $4
	0x011a 00282 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x011a 00282 ($GOROOT/src/errors/errors.go:59)	LEAQ	""..autotmp_16+288(SP), CX
	0x0122 00290 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_15+160(SP)
	0x012a 00298 ($GOROOT/src/errors/errors.go:59)	TESTB	AL, (CX)
	0x012c 00300 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+216(SP), DX
	0x0134 00308 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $5
	0x0134 00308 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $1
	0x0134 00308 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+208(SP), BX
	0x013c 00316 ($GOROOT/src/errors/errors.go:59)	MOVQ	DX, ""..autotmp_16+296(SP)
	0x0144 00324 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $4
	0x0144 00324 ($GOROOT/src/errors/errors.go:59)	MOVQ	BX, ""..autotmp_16+288(SP)
	0x014c 00332 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_13+168(SP)
	0x0154 00340 (pointer_vs_value/code/func.go:23)	PCDATA	$0, $6
	0x0154 00340 (pointer_vs_value/code/func.go:23)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x015b 00347 (pointer_vs_value/code/func.go:23)	MOVQ	DX, ""..autotmp_17+272(SP)
	0x0163 00355 (pointer_vs_value/code/func.go:23)	MOVQ	CX, ""..autotmp_17+280(SP)
	0x016b 00363 (pointer_vs_value/code/func.go:23)	PCDATA	$0, $4
	0x016b 00363 (pointer_vs_value/code/func.go:23)	PCDATA	$1, $5
	0x016b 00363 (pointer_vs_value/code/func.go:23)	MOVQ	DX, "".~R0+192(SP)
	0x0173 00371 (pointer_vs_value/code/func.go:23)	PCDATA	$0, $0
	0x0173 00371 (pointer_vs_value/code/func.go:23)	MOVQ	CX, "".~R0+200(SP)
	0x017b 00379 (pointer_vs_value/code/func.go:23)	JMP	381
	0x017d 00381 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVQ	"".~R0+192(SP), CX
	0x0185 00389 (pointer_vs_value/code/benchmark_iter_test.go:87)	PCDATA	$0, $7
	0x0185 00389 (pointer_vs_value/code/benchmark_iter_test.go:87)	PCDATA	$1, $1
	0x0185 00389 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVQ	"".~R0+200(SP), BX
	0x018d 00397 (pointer_vs_value/code/benchmark_iter_test.go:87)	PCDATA	$1, $6
	0x018d 00397 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVQ	CX, ""..autotmp_18+256(SP)
	0x0195 00405 (pointer_vs_value/code/benchmark_iter_test.go:87)	PCDATA	$0, $0
	0x0195 00405 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVQ	BX, ""..autotmp_18+264(SP)
	0x019d 00413 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVSD	X0, "".~r1+96(SP)
	0x01a3 00419 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVQ	""..autotmp_18+256(SP), CX
	0x01ab 00427 (pointer_vs_value/code/benchmark_iter_test.go:87)	PCDATA	$0, $7
	0x01ab 00427 (pointer_vs_value/code/benchmark_iter_test.go:87)	PCDATA	$1, $1
	0x01ab 00427 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVQ	""..autotmp_18+264(SP), BX
	0x01b3 00435 (pointer_vs_value/code/benchmark_iter_test.go:87)	PCDATA	$1, $7
	0x01b3 00435 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVQ	CX, "".~r2+176(SP)
	0x01bb 00443 (pointer_vs_value/code/benchmark_iter_test.go:87)	PCDATA	$0, $0
	0x01bb 00443 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVQ	BX, "".~r2+184(SP)
	0x01c3 00451 (pointer_vs_value/code/benchmark_iter_test.go:87)	JMP	453
	0x01c5 00453 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVSD	"".~r1+96(SP), X1
	0x01cb 00459 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVSD	X1, ""..autotmp_20+136(SP)
	0x01d4 00468 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVSD	X1, ""..autotmp_4+128(SP)
	0x01dd 00477 (pointer_vs_value/code/benchmark_iter_test.go:87)	PCDATA	$0, $4
	0x01dd 00477 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVQ	"".~r2+184(SP), CX
	0x01e5 00485 (pointer_vs_value/code/benchmark_iter_test.go:87)	PCDATA	$1, $1
	0x01e5 00485 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVQ	"".~r2+176(SP), BX
	0x01ed 00493 (pointer_vs_value/code/benchmark_iter_test.go:87)	PCDATA	$1, $8
	0x01ed 00493 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVQ	BX, ""..autotmp_5+240(SP)
	0x01f5 00501 (pointer_vs_value/code/benchmark_iter_test.go:87)	PCDATA	$0, $0
	0x01f5 00501 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVQ	CX, ""..autotmp_5+248(SP)
	0x01fd 00509 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVSD	""..autotmp_4+128(SP), X1
	0x0206 00518 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVSD	X1, "".f+112(SP)
	0x020c 00524 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVQ	""..autotmp_5+240(SP), CX
	0x0214 00532 (pointer_vs_value/code/benchmark_iter_test.go:87)	PCDATA	$0, $7
	0x0214 00532 (pointer_vs_value/code/benchmark_iter_test.go:87)	PCDATA	$1, $1
	0x0214 00532 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVQ	""..autotmp_5+248(SP), BX
	0x021c 00540 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVQ	CX, "".err+224(SP)
	0x0224 00548 (pointer_vs_value/code/benchmark_iter_test.go:87)	PCDATA	$0, $0
	0x0224 00548 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVQ	BX, "".err+232(SP)
	0x022c 00556 (<unknown line number>)	NOP
	0x022c 00556 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	CX, CX
	0x022f 00559 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	566
	0x0231 00561 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	734
	0x0236 00566 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $9
	0x0236 00566 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X1, X1
	0x0239 00569 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X1, ""..autotmp_14+304(SP)
	0x0241 00577 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x0241 00577 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x0241 00577 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_14+304(SP), CX
	0x0249 00585 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_22+152(SP)
	0x0251 00593 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x0253 00595 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $5
	0x0253 00595 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), BX
	0x025a 00602 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x025a 00602 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	BX, ""..autotmp_14+304(SP)
	0x0262 00610 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $8
	0x0262 00610 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_29(SB), SI
	0x0269 00617 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x0269 00617 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	SI, ""..autotmp_14+312(SP)
	0x0271 00625 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x0273 00627 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	629
	0x0275 00629 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_21+320(SP)
	0x027d 00637 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_21+328(SP)
	0x0289 00649 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_21+336(SP)
	0x0295 00661 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x0295 00661 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, (SP)
	0x0299 00665 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x02a2 00674 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x02ab 00683 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x02b0 00688 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	690
	0x02b2 00690 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x02ba 00698 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+112(SP), X0
	0x02c0 00704 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x02c8 00712 (pointer_vs_value/code/benchmark_iter_test.go:87)	JMP	714
	0x02ca 00714 (pointer_vs_value/code/benchmark_iter_test.go:86)	PCDATA	$0, $-2
	0x02ca 00714 (pointer_vs_value/code/benchmark_iter_test.go:86)	PCDATA	$1, $-2
	0x02ca 00714 (pointer_vs_value/code/benchmark_iter_test.go:86)	JMP	716
	0x02cc 00716 (pointer_vs_value/code/benchmark_iter_test.go:86)	PCDATA	$0, $0
	0x02cc 00716 (pointer_vs_value/code/benchmark_iter_test.go:86)	PCDATA	$1, $1
	0x02cc 00716 (pointer_vs_value/code/benchmark_iter_test.go:86)	MOVQ	"".a+120(SP), AX
	0x02d1 00721 (pointer_vs_value/code/benchmark_iter_test.go:86)	INCQ	AX
	0x02d4 00724 (pointer_vs_value/code/benchmark_iter_test.go:86)	MOVQ	AX, "".a+120(SP)
	0x02d9 00729 (pointer_vs_value/code/benchmark_iter_test.go:86)	JMP	136
	0x02de 00734 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x02de 00734 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x02de 00734 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	690
	0x02e0 00736 (pointer_vs_value/code/func.go:25)	PCDATA	$0, $0
	0x02e0 00736 (pointer_vs_value/code/func.go:25)	PCDATA	$1, $2
	0x02e0 00736 (pointer_vs_value/code/func.go:25)	MOVQ	"".o+440(SP), CX
	0x02e8 00744 (pointer_vs_value/code/func.go:25)	XORPS	X1, X1
	0x02eb 00747 (pointer_vs_value/code/func.go:25)	CVTSQ2SD	CX, X1
	0x02f0 00752 (pointer_vs_value/code/func.go:25)	PCDATA	$1, $1
	0x02f0 00752 (pointer_vs_value/code/func.go:25)	DIVSD	"".o+464(SP), X1
	0x02f9 00761 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVSD	X1, ""..autotmp_19+144(SP)
	0x0302 00770 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVSD	X1, "".~r1+96(SP)
	0x0308 00776 (pointer_vs_value/code/benchmark_iter_test.go:87)	PCDATA	$1, $7
	0x0308 00776 (pointer_vs_value/code/benchmark_iter_test.go:87)	XORPS	X1, X1
	0x030b 00779 (pointer_vs_value/code/benchmark_iter_test.go:87)	MOVUPS	X1, "".~r2+176(SP)
	0x0313 00787 (pointer_vs_value/code/benchmark_iter_test.go:87)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x031a 00794 (pointer_vs_value/code/benchmark_iter_test.go:87)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x0321 00801 (pointer_vs_value/code/benchmark_iter_test.go:87)	JMP	453
	0x0326 00806 (pointer_vs_value/code/benchmark_iter_test.go:85)	PCDATA	$0, $-2
	0x0326 00806 (pointer_vs_value/code/benchmark_iter_test.go:85)	PCDATA	$1, $-2
	0x0326 00806 (pointer_vs_value/code/benchmark_iter_test.go:85)	JMP	808
	0x0328 00808 (pointer_vs_value/code/benchmark_iter_test.go:85)	PCDATA	$0, $0
	0x0328 00808 (pointer_vs_value/code/benchmark_iter_test.go:85)	PCDATA	$1, $1
	0x0328 00808 (pointer_vs_value/code/benchmark_iter_test.go:85)	MOVQ	"".i+104(SP), AX
	0x032d 00813 (pointer_vs_value/code/benchmark_iter_test.go:85)	INCQ	AX
	0x0330 00816 (pointer_vs_value/code/benchmark_iter_test.go:85)	MOVQ	AX, "".i+104(SP)
	0x0335 00821 (pointer_vs_value/code/benchmark_iter_test.go:85)	JMP	96
	0x033a 00826 (<unknown line number>)	PCDATA	$0, $-2
	0x033a 00826 (<unknown line number>)	PCDATA	$1, $-2
	0x033a 00826 (<unknown line number>)	MOVQ	536(SP), BP
	0x0342 00834 (<unknown line number>)	ADDQ	$544, SP
	0x0349 00841 (<unknown line number>)	RET
	0x034a 00842 (<unknown line number>)	NOP
	0x034a 00842 (pointer_vs_value/code/benchmark_iter_test.go:81)	PCDATA	$1, $-1
	0x034a 00842 (pointer_vs_value/code/benchmark_iter_test.go:81)	PCDATA	$0, $-1
	0x034a 00842 (pointer_vs_value/code/benchmark_iter_test.go:81)	CALL	runtime.morestack_noctxt(SB)
	0x034f 00847 (pointer_vs_value/code/benchmark_iter_test.go:81)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 60 fe ff  eH..%....H..$`..
	0x0010 ff 48 3b 41 10 0f 86 2f 03 00 00 48 81 ec 20 02  .H;A.../...H.. .
	0x0020 00 00 48 89 ac 24 18 02 00 00 48 8d ac 24 18 02  ..H..$....H..$..
	0x0030 00 00 e8 00 00 00 00 48 8d bc 24 58 01 00 00 48  .......H..$X...H
	0x0040 89 e6 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00  ..H.l$.H.l$.....
	0x0050 00 48 8b 6d 00 48 c7 44 24 68 00 00 00 00 eb 00  .H.m.H.D$h......
	0x0060 48 8b 84 24 28 02 00 00 84 00 48 8b 80 08 01 00  H..$(.....H.....
	0x0070 00 48 39 44 24 68 7c 05 e9 bd 02 00 00 48 c7 44  .H9D$h|......H.D
	0x0080 24 78 00 00 00 00 eb 00 48 81 7c 24 78 00 e1 f5  $x......H.|$x...
	0x0090 05 7c 05 e9 8e 02 00 00 48 8d bc 24 b8 01 00 00  .|......H..$....
	0x00a0 48 8d b4 24 58 01 00 00 48 89 6c 24 f0 48 8d 6c  H..$X...H.l$.H.l
	0x00b0 24 f0 e8 00 00 00 00 48 8b 6d 00 0f 57 c0 f2 0f  $......H.m..W...
	0x00c0 11 44 24 60 0f 57 c9 0f 11 8c 24 b0 00 00 00 f2  .D$`.W....$.....
	0x00d0 0f 10 8c 24 d0 01 00 00 66 0f 2e c8 0f 85 fe 01  ...$....f.......
	0x00e0 00 00 7b 05 e9 f7 01 00 00 48 8d 05 00 00 00 00  ..{......H......
	0x00f0 48 89 84 24 d0 00 00 00 48 c7 84 24 d8 00 00 00  H..$....H..$....
	0x0100 16 00 00 00 0f 57 c9 0f 11 8c 24 c0 00 00 00 0f  .....W....$.....
	0x0110 57 c9 0f 11 8c 24 20 01 00 00 48 8d 8c 24 20 01  W....$ ...H..$ .
	0x0120 00 00 48 89 8c 24 a0 00 00 00 84 01 48 8b 94 24  ..H..$......H..$
	0x0130 d8 00 00 00 48 8b 9c 24 d0 00 00 00 48 89 94 24  ....H..$....H..$
	0x0140 28 01 00 00 48 89 9c 24 20 01 00 00 48 89 8c 24  (...H..$ ...H..$
	0x0150 a8 00 00 00 48 8d 15 00 00 00 00 48 89 94 24 10  ....H......H..$.
	0x0160 01 00 00 48 89 8c 24 18 01 00 00 48 89 94 24 c0  ...H..$....H..$.
	0x0170 00 00 00 48 89 8c 24 c8 00 00 00 eb 00 48 8b 8c  ...H..$......H..
	0x0180 24 c0 00 00 00 48 8b 9c 24 c8 00 00 00 48 89 8c  $....H..$....H..
	0x0190 24 00 01 00 00 48 89 9c 24 08 01 00 00 f2 0f 11  $....H..$.......
	0x01a0 44 24 60 48 8b 8c 24 00 01 00 00 48 8b 9c 24 08  D$`H..$....H..$.
	0x01b0 01 00 00 48 89 8c 24 b0 00 00 00 48 89 9c 24 b8  ...H..$....H..$.
	0x01c0 00 00 00 eb 00 f2 0f 10 4c 24 60 f2 0f 11 8c 24  ........L$`....$
	0x01d0 88 00 00 00 f2 0f 11 8c 24 80 00 00 00 48 8b 8c  ........$....H..
	0x01e0 24 b8 00 00 00 48 8b 9c 24 b0 00 00 00 48 89 9c  $....H..$....H..
	0x01f0 24 f0 00 00 00 48 89 8c 24 f8 00 00 00 f2 0f 10  $....H..$.......
	0x0200 8c 24 80 00 00 00 f2 0f 11 4c 24 70 48 8b 8c 24  .$.......L$pH..$
	0x0210 f0 00 00 00 48 8b 9c 24 f8 00 00 00 48 89 8c 24  ....H..$....H..$
	0x0220 e0 00 00 00 48 89 9c 24 e8 00 00 00 48 85 c9 75  ....H..$....H..u
	0x0230 05 e9 a8 00 00 00 0f 57 c9 0f 11 8c 24 30 01 00  .......W....$0..
	0x0240 00 48 8d 8c 24 30 01 00 00 48 89 8c 24 98 00 00  .H..$0...H..$...
	0x0250 00 84 01 48 8d 1d 00 00 00 00 48 89 9c 24 30 01  ...H......H..$0.
	0x0260 00 00 48 8d 35 00 00 00 00 48 89 b4 24 38 01 00  ..H.5....H..$8..
	0x0270 00 84 01 eb 00 48 89 8c 24 40 01 00 00 48 c7 84  .....H..$@...H..
	0x0280 24 48 01 00 00 01 00 00 00 48 c7 84 24 50 01 00  $H.......H..$P..
	0x0290 00 01 00 00 00 48 89 0c 24 48 c7 44 24 08 01 00  .....H..$H.D$...
	0x02a0 00 00 48 c7 44 24 10 01 00 00 00 e8 00 00 00 00  ..H.D$..........
	0x02b0 eb 00 f2 0f 10 05 00 00 00 00 f2 0f 58 44 24 70  ............XD$p
	0x02c0 f2 0f 11 05 00 00 00 00 eb 00 eb 00 48 8b 44 24  ............H.D$
	0x02d0 78 48 ff c0 48 89 44 24 78 e9 aa fd ff ff eb d2  xH..H.D$x.......
	0x02e0 48 8b 8c 24 b8 01 00 00 0f 57 c9 f2 48 0f 2a c9  H..$.....W..H.*.
	0x02f0 f2 0f 5e 8c 24 d0 01 00 00 f2 0f 11 8c 24 90 00  ..^.$........$..
	0x0300 00 00 f2 0f 11 4c 24 60 0f 57 c9 0f 11 8c 24 b0  .....L$`.W....$.
	0x0310 00 00 00 48 8d 05 00 00 00 00 48 8d 15 00 00 00  ...H......H.....
	0x0320 00 e9 9f fe ff ff eb 00 48 8b 44 24 68 48 ff c0  ........H.D$hH..
	0x0330 48 89 44 24 68 e9 26 fd ff ff 48 8b ac 24 18 02  H.D$h.&...H..$..
	0x0340 00 00 48 81 c4 20 02 00 00 c3 e8 00 00 00 00 e9  ..H.. ..........
	0x0350 ac fc ff ff                                      ....
	rel 5+4 t=16 TLS+0
	rel 51+4 t=8 "".createMini+0
	rel 77+4 t=8 runtime.duffcopy+812
	rel 179+4 t=8 runtime.duffcopy+812
	rel 236+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 343+4 t=15 go.itab.*errors.errorString,error+0
	rel 598+4 t=15 type.string+0
	rel 613+4 t=15 ""..stmp_29+0
	rel 684+4 t=8 log.Fatal+0
	rel 694+4 t=15 "".F+0
	rel 708+4 t=15 "".F+0
	rel 790+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 797+4 t=15 go.itab.*errors.errorString,error+0
	rel 843+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkMiniP_Iter STEXT size=858 args=0x8 locals=0x1d0
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:93)	TEXT	"".BenchmarkMiniP_Iter(SB), ABIInternal, $464-8
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:93)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_iter_test.go:93)	LEAQ	-336(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_iter_test.go:93)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_iter_test.go:93)	JLS	848
	0x001b 00027 (pointer_vs_value/code/benchmark_iter_test.go:93)	SUBQ	$464, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_iter_test.go:93)	MOVQ	BP, 456(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_iter_test.go:93)	LEAQ	456(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:93)	FUNCDATA	$0, gclocals·d1d75e5bd153dd111cd8f1bc3c181073(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:93)	FUNCDATA	$1, gclocals·2d77827c72aac2ee2a2aa6f5489d6f1c(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:93)	FUNCDATA	$2, gclocals·b0e64627e016c4f22ade44055db6bcad(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:93)	FUNCDATA	$3, "".BenchmarkMiniP_Iter.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:95)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:95)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:95)	CALL	"".createMini(SB)
	0x0037 00055 (pointer_vs_value/code/benchmark_iter_test.go:95)	PCDATA	$0, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_iter_test.go:95)	PCDATA	$1, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_iter_test.go:95)	LEAQ	"".o+360(SP), DI
	0x003f 00063 (pointer_vs_value/code/benchmark_iter_test.go:95)	MOVQ	SP, SI
	0x0042 00066 (pointer_vs_value/code/benchmark_iter_test.go:95)	PCDATA	$0, $0
	0x0042 00066 (pointer_vs_value/code/benchmark_iter_test.go:95)	DUFFCOPY	$812
	0x0055 00085 (pointer_vs_value/code/benchmark_iter_test.go:97)	MOVQ	$0, "".i+104(SP)
	0x005e 00094 (pointer_vs_value/code/benchmark_iter_test.go:97)	PCDATA	$0, $-2
	0x005e 00094 (pointer_vs_value/code/benchmark_iter_test.go:97)	PCDATA	$1, $-2
	0x005e 00094 (pointer_vs_value/code/benchmark_iter_test.go:97)	JMP	96
	0x0060 00096 (pointer_vs_value/code/benchmark_iter_test.go:97)	PCDATA	$0, $2
	0x0060 00096 (pointer_vs_value/code/benchmark_iter_test.go:97)	PCDATA	$1, $1
	0x0060 00096 (pointer_vs_value/code/benchmark_iter_test.go:97)	MOVQ	"".b+472(SP), AX
	0x0068 00104 (pointer_vs_value/code/benchmark_iter_test.go:97)	TESTB	AL, (AX)
	0x006a 00106 (pointer_vs_value/code/benchmark_iter_test.go:97)	PCDATA	$0, $0
	0x006a 00106 (pointer_vs_value/code/benchmark_iter_test.go:97)	MOVQ	264(AX), AX
	0x0071 00113 (pointer_vs_value/code/benchmark_iter_test.go:97)	CMPQ	"".i+104(SP), AX
	0x0076 00118 (pointer_vs_value/code/benchmark_iter_test.go:97)	JLT	125
	0x0078 00120 (pointer_vs_value/code/benchmark_iter_test.go:97)	JMP	832
	0x007d 00125 (pointer_vs_value/code/benchmark_iter_test.go:98)	MOVQ	$0, "".a+120(SP)
	0x0086 00134 (pointer_vs_value/code/benchmark_iter_test.go:98)	JMP	136
	0x0088 00136 (pointer_vs_value/code/benchmark_iter_test.go:98)	CMPQ	"".a+120(SP), $100000000
	0x0091 00145 (pointer_vs_value/code/benchmark_iter_test.go:98)	JLT	152
	0x0093 00147 (pointer_vs_value/code/benchmark_iter_test.go:98)	JMP	812
	0x0098 00152 (pointer_vs_value/code/benchmark_iter_test.go:99)	PCDATA	$0, $2
	0x0098 00152 (pointer_vs_value/code/benchmark_iter_test.go:99)	LEAQ	"".o+360(SP), AX
	0x00a0 00160 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVQ	AX, ""..autotmp_15+176(SP)
	0x00a8 00168 (pointer_vs_value/code/benchmark_iter_test.go:99)	PCDATA	$0, $0
	0x00a8 00168 (pointer_vs_value/code/benchmark_iter_test.go:99)	PCDATA	$1, $2
	0x00a8 00168 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVQ	AX, "".o+152(SP)
	0x00b0 00176 (pointer_vs_value/code/benchmark_iter_test.go:99)	XORPS	X0, X0
	0x00b3 00179 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVSD	X0, "".~r1+96(SP)
	0x00b9 00185 (pointer_vs_value/code/benchmark_iter_test.go:99)	XORPS	X1, X1
	0x00bc 00188 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVUPS	X1, "".~r2+192(SP)
	0x00c4 00196 (pointer_vs_value/code/func.go:66)	PCDATA	$0, $2
	0x00c4 00196 (pointer_vs_value/code/func.go:66)	MOVQ	"".o+152(SP), AX
	0x00cc 00204 (pointer_vs_value/code/func.go:66)	TESTB	AL, (AX)
	0x00ce 00206 (<unknown line number>)	NOP
	0x00ce 00206 (pointer_vs_value/code/func.go:66)	PCDATA	$0, $0
	0x00ce 00206 (pointer_vs_value/code/func.go:66)	MOVSD	24(AX), X1
	0x00d3 00211 (pointer_vs_value/code/func.go:66)	UCOMISD	X0, X1
	0x00d7 00215 (pointer_vs_value/code/func.go:66)	JNE	731
	0x00dd 00221 (pointer_vs_value/code/func.go:66)	JPC	228
	0x00df 00223 (pointer_vs_value/code/func.go:66)	JMP	731
	0x00e4 00228 (pointer_vs_value/code/func.go:67)	PCDATA	$0, $2
	0x00e4 00228 (pointer_vs_value/code/func.go:67)	PCDATA	$1, $3
	0x00e4 00228 (pointer_vs_value/code/func.go:67)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x00eb 00235 (pointer_vs_value/code/func.go:67)	PCDATA	$0, $0
	0x00eb 00235 (pointer_vs_value/code/func.go:67)	MOVQ	AX, errors.text+224(SP)
	0x00f3 00243 (pointer_vs_value/code/func.go:67)	MOVQ	$22, errors.text+232(SP)
	0x00ff 00255 (pointer_vs_value/code/func.go:67)	XORPS	X1, X1
	0x0102 00258 (pointer_vs_value/code/func.go:67)	MOVUPS	X1, "".~R0+208(SP)
	0x010a 00266 (<unknown line number>)	NOP
	0x010a 00266 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x010a 00266 ($GOROOT/src/errors/errors.go:59)	XORPS	X1, X1
	0x010d 00269 ($GOROOT/src/errors/errors.go:59)	MOVUPS	X1, ""..autotmp_17+304(SP)
	0x0115 00277 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x0115 00277 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x0115 00277 ($GOROOT/src/errors/errors.go:59)	LEAQ	""..autotmp_17+304(SP), CX
	0x011d 00285 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_16+168(SP)
	0x0125 00293 ($GOROOT/src/errors/errors.go:59)	TESTB	AL, (CX)
	0x0127 00295 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+232(SP), DX
	0x012f 00303 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $4
	0x012f 00303 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $1
	0x012f 00303 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+224(SP), BX
	0x0137 00311 ($GOROOT/src/errors/errors.go:59)	MOVQ	DX, ""..autotmp_17+312(SP)
	0x013f 00319 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x013f 00319 ($GOROOT/src/errors/errors.go:59)	MOVQ	BX, ""..autotmp_17+304(SP)
	0x0147 00327 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_13+184(SP)
	0x014f 00335 (pointer_vs_value/code/func.go:67)	PCDATA	$0, $5
	0x014f 00335 (pointer_vs_value/code/func.go:67)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x0156 00342 (pointer_vs_value/code/func.go:67)	MOVQ	DX, ""..autotmp_18+288(SP)
	0x015e 00350 (pointer_vs_value/code/func.go:67)	MOVQ	CX, ""..autotmp_18+296(SP)
	0x0166 00358 (pointer_vs_value/code/func.go:67)	PCDATA	$0, $3
	0x0166 00358 (pointer_vs_value/code/func.go:67)	PCDATA	$1, $5
	0x0166 00358 (pointer_vs_value/code/func.go:67)	MOVQ	DX, "".~R0+208(SP)
	0x016e 00366 (pointer_vs_value/code/func.go:67)	PCDATA	$0, $0
	0x016e 00366 (pointer_vs_value/code/func.go:67)	MOVQ	CX, "".~R0+216(SP)
	0x0176 00374 (pointer_vs_value/code/func.go:67)	JMP	376
	0x0178 00376 (pointer_vs_value/code/benchmark_iter_test.go:99)	PCDATA	$0, $3
	0x0178 00376 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVQ	"".~R0+216(SP), CX
	0x0180 00384 (pointer_vs_value/code/benchmark_iter_test.go:99)	PCDATA	$1, $1
	0x0180 00384 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVQ	"".~R0+208(SP), BX
	0x0188 00392 (pointer_vs_value/code/benchmark_iter_test.go:99)	PCDATA	$1, $6
	0x0188 00392 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVQ	BX, ""..autotmp_19+272(SP)
	0x0190 00400 (pointer_vs_value/code/benchmark_iter_test.go:99)	PCDATA	$0, $0
	0x0190 00400 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVQ	CX, ""..autotmp_19+280(SP)
	0x0198 00408 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVSD	X0, "".~r1+96(SP)
	0x019e 00414 (pointer_vs_value/code/benchmark_iter_test.go:99)	PCDATA	$0, $3
	0x019e 00414 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVQ	""..autotmp_19+280(SP), CX
	0x01a6 00422 (pointer_vs_value/code/benchmark_iter_test.go:99)	PCDATA	$1, $1
	0x01a6 00422 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVQ	""..autotmp_19+272(SP), BX
	0x01ae 00430 (pointer_vs_value/code/benchmark_iter_test.go:99)	PCDATA	$1, $7
	0x01ae 00430 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVQ	BX, "".~r2+192(SP)
	0x01b6 00438 (pointer_vs_value/code/benchmark_iter_test.go:99)	PCDATA	$0, $0
	0x01b6 00438 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVQ	CX, "".~r2+200(SP)
	0x01be 00446 (pointer_vs_value/code/benchmark_iter_test.go:99)	JMP	448
	0x01c0 00448 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVSD	"".~r1+96(SP), X1
	0x01c6 00454 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVSD	X1, ""..autotmp_21+136(SP)
	0x01cf 00463 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVSD	X1, ""..autotmp_4+128(SP)
	0x01d8 00472 (pointer_vs_value/code/benchmark_iter_test.go:99)	PCDATA	$0, $3
	0x01d8 00472 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVQ	"".~r2+200(SP), CX
	0x01e0 00480 (pointer_vs_value/code/benchmark_iter_test.go:99)	PCDATA	$1, $1
	0x01e0 00480 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVQ	"".~r2+192(SP), BX
	0x01e8 00488 (pointer_vs_value/code/benchmark_iter_test.go:99)	PCDATA	$1, $8
	0x01e8 00488 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVQ	BX, ""..autotmp_5+256(SP)
	0x01f0 00496 (pointer_vs_value/code/benchmark_iter_test.go:99)	PCDATA	$0, $0
	0x01f0 00496 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVQ	CX, ""..autotmp_5+264(SP)
	0x01f8 00504 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVSD	""..autotmp_4+128(SP), X1
	0x0201 00513 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVSD	X1, "".f+112(SP)
	0x0207 00519 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVQ	""..autotmp_5+256(SP), CX
	0x020f 00527 (pointer_vs_value/code/benchmark_iter_test.go:99)	PCDATA	$0, $6
	0x020f 00527 (pointer_vs_value/code/benchmark_iter_test.go:99)	PCDATA	$1, $1
	0x020f 00527 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVQ	""..autotmp_5+264(SP), BX
	0x0217 00535 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVQ	CX, "".err+240(SP)
	0x021f 00543 (pointer_vs_value/code/benchmark_iter_test.go:99)	PCDATA	$0, $0
	0x021f 00543 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVQ	BX, "".err+248(SP)
	0x0227 00551 (<unknown line number>)	NOP
	0x0227 00551 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	CX, CX
	0x022a 00554 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	561
	0x022c 00556 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	729
	0x0231 00561 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $9
	0x0231 00561 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X1, X1
	0x0234 00564 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X1, ""..autotmp_14+320(SP)
	0x023c 00572 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x023c 00572 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x023c 00572 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_14+320(SP), CX
	0x0244 00580 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_23+160(SP)
	0x024c 00588 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x024e 00590 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x024e 00590 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), BX
	0x0255 00597 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x0255 00597 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	BX, ""..autotmp_14+320(SP)
	0x025d 00605 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $7
	0x025d 00605 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_30(SB), SI
	0x0264 00612 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x0264 00612 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	SI, ""..autotmp_14+328(SP)
	0x026c 00620 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x026e 00622 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	624
	0x0270 00624 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_22+336(SP)
	0x0278 00632 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_22+344(SP)
	0x0284 00644 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_22+352(SP)
	0x0290 00656 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x0290 00656 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, (SP)
	0x0294 00660 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x029d 00669 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x02a6 00678 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x02ab 00683 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	685
	0x02ad 00685 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x02b5 00693 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+112(SP), X0
	0x02bb 00699 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x02c3 00707 (pointer_vs_value/code/benchmark_iter_test.go:99)	JMP	709
	0x02c5 00709 (pointer_vs_value/code/benchmark_iter_test.go:98)	PCDATA	$0, $-2
	0x02c5 00709 (pointer_vs_value/code/benchmark_iter_test.go:98)	PCDATA	$1, $-2
	0x02c5 00709 (pointer_vs_value/code/benchmark_iter_test.go:98)	JMP	711
	0x02c7 00711 (pointer_vs_value/code/benchmark_iter_test.go:98)	PCDATA	$0, $0
	0x02c7 00711 (pointer_vs_value/code/benchmark_iter_test.go:98)	PCDATA	$1, $1
	0x02c7 00711 (pointer_vs_value/code/benchmark_iter_test.go:98)	MOVQ	"".a+120(SP), AX
	0x02cc 00716 (pointer_vs_value/code/benchmark_iter_test.go:98)	INCQ	AX
	0x02cf 00719 (pointer_vs_value/code/benchmark_iter_test.go:98)	MOVQ	AX, "".a+120(SP)
	0x02d4 00724 (pointer_vs_value/code/benchmark_iter_test.go:98)	JMP	136
	0x02d9 00729 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x02d9 00729 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x02d9 00729 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	685
	0x02db 00731 (pointer_vs_value/code/func.go:69)	PCDATA	$0, $3
	0x02db 00731 (pointer_vs_value/code/func.go:69)	PCDATA	$1, $2
	0x02db 00731 (pointer_vs_value/code/func.go:69)	MOVQ	"".o+152(SP), CX
	0x02e3 00739 (pointer_vs_value/code/func.go:69)	TESTB	AL, (CX)
	0x02e5 00741 (pointer_vs_value/code/func.go:69)	PCDATA	$0, $4
	0x02e5 00741 (pointer_vs_value/code/func.go:69)	PCDATA	$1, $1
	0x02e5 00741 (pointer_vs_value/code/func.go:69)	MOVQ	"".o+152(SP), BX
	0x02ed 00749 (pointer_vs_value/code/func.go:69)	TESTB	AL, (BX)
	0x02ef 00751 (pointer_vs_value/code/func.go:69)	PCDATA	$0, $6
	0x02ef 00751 (pointer_vs_value/code/func.go:69)	MOVQ	(CX), CX
	0x02f2 00754 (pointer_vs_value/code/func.go:69)	XORPS	X1, X1
	0x02f5 00757 (pointer_vs_value/code/func.go:69)	CVTSQ2SD	CX, X1
	0x02fa 00762 (pointer_vs_value/code/func.go:69)	PCDATA	$0, $0
	0x02fa 00762 (pointer_vs_value/code/func.go:69)	DIVSD	24(BX), X1
	0x02ff 00767 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVSD	X1, ""..autotmp_20+144(SP)
	0x0308 00776 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVSD	X1, "".~r1+96(SP)
	0x030e 00782 (pointer_vs_value/code/benchmark_iter_test.go:99)	PCDATA	$1, $7
	0x030e 00782 (pointer_vs_value/code/benchmark_iter_test.go:99)	XORPS	X1, X1
	0x0311 00785 (pointer_vs_value/code/benchmark_iter_test.go:99)	MOVUPS	X1, "".~r2+192(SP)
	0x0319 00793 (pointer_vs_value/code/benchmark_iter_test.go:99)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x0320 00800 (pointer_vs_value/code/benchmark_iter_test.go:99)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x0327 00807 (pointer_vs_value/code/benchmark_iter_test.go:99)	JMP	448
	0x032c 00812 (pointer_vs_value/code/benchmark_iter_test.go:97)	PCDATA	$0, $-2
	0x032c 00812 (pointer_vs_value/code/benchmark_iter_test.go:97)	PCDATA	$1, $-2
	0x032c 00812 (pointer_vs_value/code/benchmark_iter_test.go:97)	JMP	814
	0x032e 00814 (pointer_vs_value/code/benchmark_iter_test.go:97)	PCDATA	$0, $0
	0x032e 00814 (pointer_vs_value/code/benchmark_iter_test.go:97)	PCDATA	$1, $1
	0x032e 00814 (pointer_vs_value/code/benchmark_iter_test.go:97)	MOVQ	"".i+104(SP), AX
	0x0333 00819 (pointer_vs_value/code/benchmark_iter_test.go:97)	INCQ	AX
	0x0336 00822 (pointer_vs_value/code/benchmark_iter_test.go:97)	MOVQ	AX, "".i+104(SP)
	0x033b 00827 (pointer_vs_value/code/benchmark_iter_test.go:97)	JMP	96
	0x0340 00832 (<unknown line number>)	PCDATA	$0, $-2
	0x0340 00832 (<unknown line number>)	PCDATA	$1, $-2
	0x0340 00832 (<unknown line number>)	MOVQ	456(SP), BP
	0x0348 00840 (<unknown line number>)	ADDQ	$464, SP
	0x034f 00847 (<unknown line number>)	RET
	0x0350 00848 (<unknown line number>)	NOP
	0x0350 00848 (pointer_vs_value/code/benchmark_iter_test.go:93)	PCDATA	$1, $-1
	0x0350 00848 (pointer_vs_value/code/benchmark_iter_test.go:93)	PCDATA	$0, $-1
	0x0350 00848 (pointer_vs_value/code/benchmark_iter_test.go:93)	CALL	runtime.morestack_noctxt(SB)
	0x0355 00853 (pointer_vs_value/code/benchmark_iter_test.go:93)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 b0 fe ff  eH..%....H..$...
	0x0010 ff 48 3b 41 10 0f 86 35 03 00 00 48 81 ec d0 01  .H;A...5...H....
	0x0020 00 00 48 89 ac 24 c8 01 00 00 48 8d ac 24 c8 01  ..H..$....H..$..
	0x0030 00 00 e8 00 00 00 00 48 8d bc 24 68 01 00 00 48  .......H..$h...H
	0x0040 89 e6 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00  ..H.l$.H.l$.....
	0x0050 00 48 8b 6d 00 48 c7 44 24 68 00 00 00 00 eb 00  .H.m.H.D$h......
	0x0060 48 8b 84 24 d8 01 00 00 84 00 48 8b 80 08 01 00  H..$......H.....
	0x0070 00 48 39 44 24 68 7c 05 e9 c3 02 00 00 48 c7 44  .H9D$h|......H.D
	0x0080 24 78 00 00 00 00 eb 00 48 81 7c 24 78 00 e1 f5  $x......H.|$x...
	0x0090 05 7c 05 e9 94 02 00 00 48 8d 84 24 68 01 00 00  .|......H..$h...
	0x00a0 48 89 84 24 b0 00 00 00 48 89 84 24 98 00 00 00  H..$....H..$....
	0x00b0 0f 57 c0 f2 0f 11 44 24 60 0f 57 c9 0f 11 8c 24  .W....D$`.W....$
	0x00c0 c0 00 00 00 48 8b 84 24 98 00 00 00 84 00 f2 0f  ....H..$........
	0x00d0 10 48 18 66 0f 2e c8 0f 85 fe 01 00 00 7b 05 e9  .H.f.........{..
	0x00e0 f7 01 00 00 48 8d 05 00 00 00 00 48 89 84 24 e0  ....H......H..$.
	0x00f0 00 00 00 48 c7 84 24 e8 00 00 00 16 00 00 00 0f  ...H..$.........
	0x0100 57 c9 0f 11 8c 24 d0 00 00 00 0f 57 c9 0f 11 8c  W....$.....W....
	0x0110 24 30 01 00 00 48 8d 8c 24 30 01 00 00 48 89 8c  $0...H..$0...H..
	0x0120 24 a8 00 00 00 84 01 48 8b 94 24 e8 00 00 00 48  $......H..$....H
	0x0130 8b 9c 24 e0 00 00 00 48 89 94 24 38 01 00 00 48  ..$....H..$8...H
	0x0140 89 9c 24 30 01 00 00 48 89 8c 24 b8 00 00 00 48  ..$0...H..$....H
	0x0150 8d 15 00 00 00 00 48 89 94 24 20 01 00 00 48 89  ......H..$ ...H.
	0x0160 8c 24 28 01 00 00 48 89 94 24 d0 00 00 00 48 89  .$(...H..$....H.
	0x0170 8c 24 d8 00 00 00 eb 00 48 8b 8c 24 d8 00 00 00  .$......H..$....
	0x0180 48 8b 9c 24 d0 00 00 00 48 89 9c 24 10 01 00 00  H..$....H..$....
	0x0190 48 89 8c 24 18 01 00 00 f2 0f 11 44 24 60 48 8b  H..$.......D$`H.
	0x01a0 8c 24 18 01 00 00 48 8b 9c 24 10 01 00 00 48 89  .$....H..$....H.
	0x01b0 9c 24 c0 00 00 00 48 89 8c 24 c8 00 00 00 eb 00  .$....H..$......
	0x01c0 f2 0f 10 4c 24 60 f2 0f 11 8c 24 88 00 00 00 f2  ...L$`....$.....
	0x01d0 0f 11 8c 24 80 00 00 00 48 8b 8c 24 c8 00 00 00  ...$....H..$....
	0x01e0 48 8b 9c 24 c0 00 00 00 48 89 9c 24 00 01 00 00  H..$....H..$....
	0x01f0 48 89 8c 24 08 01 00 00 f2 0f 10 8c 24 80 00 00  H..$........$...
	0x0200 00 f2 0f 11 4c 24 70 48 8b 8c 24 00 01 00 00 48  ....L$pH..$....H
	0x0210 8b 9c 24 08 01 00 00 48 89 8c 24 f0 00 00 00 48  ..$....H..$....H
	0x0220 89 9c 24 f8 00 00 00 48 85 c9 75 05 e9 a8 00 00  ..$....H..u.....
	0x0230 00 0f 57 c9 0f 11 8c 24 40 01 00 00 48 8d 8c 24  ..W....$@...H..$
	0x0240 40 01 00 00 48 89 8c 24 a0 00 00 00 84 01 48 8d  @...H..$......H.
	0x0250 1d 00 00 00 00 48 89 9c 24 40 01 00 00 48 8d 35  .....H..$@...H.5
	0x0260 00 00 00 00 48 89 b4 24 48 01 00 00 84 01 eb 00  ....H..$H.......
	0x0270 48 89 8c 24 50 01 00 00 48 c7 84 24 58 01 00 00  H..$P...H..$X...
	0x0280 01 00 00 00 48 c7 84 24 60 01 00 00 01 00 00 00  ....H..$`.......
	0x0290 48 89 0c 24 48 c7 44 24 08 01 00 00 00 48 c7 44  H..$H.D$.....H.D
	0x02a0 24 10 01 00 00 00 e8 00 00 00 00 eb 00 f2 0f 10  $...............
	0x02b0 05 00 00 00 00 f2 0f 58 44 24 70 f2 0f 11 05 00  .......XD$p.....
	0x02c0 00 00 00 eb 00 eb 00 48 8b 44 24 78 48 ff c0 48  .......H.D$xH..H
	0x02d0 89 44 24 78 e9 af fd ff ff eb d2 48 8b 8c 24 98  .D$x.......H..$.
	0x02e0 00 00 00 84 01 48 8b 9c 24 98 00 00 00 84 03 48  .....H..$......H
	0x02f0 8b 09 0f 57 c9 f2 48 0f 2a c9 f2 0f 5e 4b 18 f2  ...W..H.*...^K..
	0x0300 0f 11 8c 24 90 00 00 00 f2 0f 11 4c 24 60 0f 57  ...$.......L$`.W
	0x0310 c9 0f 11 8c 24 c0 00 00 00 48 8d 05 00 00 00 00  ....$....H......
	0x0320 48 8d 15 00 00 00 00 e9 94 fe ff ff eb 00 48 8b  H.............H.
	0x0330 44 24 68 48 ff c0 48 89 44 24 68 e9 20 fd ff ff  D$hH..H.D$h. ...
	0x0340 48 8b ac 24 c8 01 00 00 48 81 c4 d0 01 00 00 c3  H..$....H.......
	0x0350 e8 00 00 00 00 e9 a6 fc ff ff                    ..........
	rel 5+4 t=16 TLS+0
	rel 51+4 t=8 "".createMini+0
	rel 77+4 t=8 runtime.duffcopy+812
	rel 231+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 338+4 t=15 go.itab.*errors.errorString,error+0
	rel 593+4 t=15 type.string+0
	rel 608+4 t=15 ""..stmp_30+0
	rel 679+4 t=8 log.Fatal+0
	rel 689+4 t=15 "".F+0
	rel 703+4 t=15 "".F+0
	rel 796+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 803+4 t=15 go.itab.*errors.errorString,error+0
	rel 849+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkMiniIfc_Iter STEXT size=683 args=0x8 locals=0x160
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:105)	TEXT	"".BenchmarkMiniIfc_Iter(SB), ABIInternal, $352-8
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:105)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_iter_test.go:105)	LEAQ	-224(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_iter_test.go:105)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_iter_test.go:105)	JLS	673
	0x001b 00027 (pointer_vs_value/code/benchmark_iter_test.go:105)	SUBQ	$352, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_iter_test.go:105)	MOVQ	BP, 344(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_iter_test.go:105)	LEAQ	344(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:105)	FUNCDATA	$0, gclocals·73de87619823f6747f37fd4c152f5b42(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:105)	FUNCDATA	$1, gclocals·7bca89e3bb189ba87f0830382ea54ec7(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:105)	FUNCDATA	$2, gclocals·437d171b9e6f84c40356e01ae02b710f(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:105)	FUNCDATA	$3, "".BenchmarkMiniIfc_Iter.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:107)	PCDATA	$0, $1
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:107)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:107)	LEAQ	type."".mini(SB), AX
	0x0039 00057 (pointer_vs_value/code/benchmark_iter_test.go:107)	PCDATA	$0, $0
	0x0039 00057 (pointer_vs_value/code/benchmark_iter_test.go:107)	MOVQ	AX, (SP)
	0x003d 00061 (pointer_vs_value/code/benchmark_iter_test.go:107)	CALL	runtime.newobject(SB)
	0x0042 00066 (pointer_vs_value/code/benchmark_iter_test.go:107)	PCDATA	$0, $1
	0x0042 00066 (pointer_vs_value/code/benchmark_iter_test.go:107)	MOVQ	8(SP), AX
	0x0047 00071 (pointer_vs_value/code/benchmark_iter_test.go:107)	PCDATA	$0, $0
	0x0047 00071 (pointer_vs_value/code/benchmark_iter_test.go:107)	PCDATA	$1, $1
	0x0047 00071 (pointer_vs_value/code/benchmark_iter_test.go:107)	MOVQ	AX, "".&o+152(SP)
	0x004f 00079 (pointer_vs_value/code/benchmark_iter_test.go:107)	CALL	"".createMini(SB)
	0x0054 00084 (pointer_vs_value/code/benchmark_iter_test.go:107)	PCDATA	$0, $2
	0x0054 00084 (pointer_vs_value/code/benchmark_iter_test.go:107)	MOVQ	"".&o+152(SP), DI
	0x005c 00092 (pointer_vs_value/code/benchmark_iter_test.go:107)	PCDATA	$0, $-2
	0x005c 00092 (pointer_vs_value/code/benchmark_iter_test.go:107)	PCDATA	$1, $-2
	0x005c 00092 (pointer_vs_value/code/benchmark_iter_test.go:107)	CMPL	runtime.writeBarrier(SB), $0
	0x0063 00099 (pointer_vs_value/code/benchmark_iter_test.go:107)	JEQ	106
	0x0065 00101 (pointer_vs_value/code/benchmark_iter_test.go:107)	JMP	601
	0x006a 00106 (pointer_vs_value/code/benchmark_iter_test.go:107)	MOVQ	SP, SI
	0x006d 00109 (pointer_vs_value/code/benchmark_iter_test.go:107)	DUFFCOPY	$812
	0x0080 00128 (pointer_vs_value/code/benchmark_iter_test.go:107)	JMP	130
	0x0082 00130 (pointer_vs_value/code/benchmark_iter_test.go:109)	PCDATA	$0, $0
	0x0082 00130 (pointer_vs_value/code/benchmark_iter_test.go:109)	PCDATA	$1, $1
	0x0082 00130 (pointer_vs_value/code/benchmark_iter_test.go:109)	MOVQ	$0, "".i+96(SP)
	0x008b 00139 (pointer_vs_value/code/benchmark_iter_test.go:109)	JMP	141
	0x008d 00141 (pointer_vs_value/code/benchmark_iter_test.go:109)	PCDATA	$0, $1
	0x008d 00141 (pointer_vs_value/code/benchmark_iter_test.go:109)	MOVQ	"".b+360(SP), AX
	0x0095 00149 (pointer_vs_value/code/benchmark_iter_test.go:109)	TESTB	AL, (AX)
	0x0097 00151 (pointer_vs_value/code/benchmark_iter_test.go:109)	PCDATA	$0, $0
	0x0097 00151 (pointer_vs_value/code/benchmark_iter_test.go:109)	MOVQ	264(AX), AX
	0x009e 00158 (pointer_vs_value/code/benchmark_iter_test.go:109)	CMPQ	"".i+96(SP), AX
	0x00a3 00163 (pointer_vs_value/code/benchmark_iter_test.go:109)	JLT	170
	0x00a5 00165 (pointer_vs_value/code/benchmark_iter_test.go:109)	JMP	585
	0x00aa 00170 (pointer_vs_value/code/benchmark_iter_test.go:110)	MOVQ	$0, "".a+112(SP)
	0x00b3 00179 (pointer_vs_value/code/benchmark_iter_test.go:110)	JMP	181
	0x00b5 00181 (pointer_vs_value/code/benchmark_iter_test.go:110)	CMPQ	"".a+112(SP), $100000000
	0x00be 00190 (pointer_vs_value/code/benchmark_iter_test.go:110)	JLT	197
	0x00c0 00192 (pointer_vs_value/code/benchmark_iter_test.go:110)	JMP	565
	0x00c5 00197 (pointer_vs_value/code/benchmark_iter_test.go:111)	PCDATA	$0, $1
	0x00c5 00197 (pointer_vs_value/code/benchmark_iter_test.go:111)	MOVQ	"".&o+152(SP), AX
	0x00cd 00205 (pointer_vs_value/code/benchmark_iter_test.go:111)	PCDATA	$0, $0
	0x00cd 00205 (pointer_vs_value/code/benchmark_iter_test.go:111)	PCDATA	$1, $2
	0x00cd 00205 (pointer_vs_value/code/benchmark_iter_test.go:111)	MOVQ	AX, ""..autotmp_9+136(SP)
	0x00d5 00213 (pointer_vs_value/code/benchmark_iter_test.go:111)	XORPS	X0, X0
	0x00d8 00216 (pointer_vs_value/code/benchmark_iter_test.go:111)	MOVUPS	X0, ""..autotmp_11+208(SP)
	0x00e0 00224 (pointer_vs_value/code/benchmark_iter_test.go:111)	PCDATA	$0, $1
	0x00e0 00224 (pointer_vs_value/code/benchmark_iter_test.go:111)	PCDATA	$1, $1
	0x00e0 00224 (pointer_vs_value/code/benchmark_iter_test.go:111)	MOVQ	""..autotmp_9+136(SP), AX
	0x00e8 00232 (pointer_vs_value/code/benchmark_iter_test.go:111)	PCDATA	$0, $3
	0x00e8 00232 (pointer_vs_value/code/benchmark_iter_test.go:111)	LEAQ	go.itab.*"".mini,"".obj(SB), CX
	0x00ef 00239 (pointer_vs_value/code/benchmark_iter_test.go:111)	PCDATA	$0, $1
	0x00ef 00239 (pointer_vs_value/code/benchmark_iter_test.go:111)	MOVQ	CX, (SP)
	0x00f3 00243 (pointer_vs_value/code/benchmark_iter_test.go:111)	PCDATA	$0, $0
	0x00f3 00243 (pointer_vs_value/code/benchmark_iter_test.go:111)	MOVQ	AX, 8(SP)
	0x00f8 00248 (pointer_vs_value/code/benchmark_iter_test.go:111)	CALL	"".calcIfc(SB)
	0x00fd 00253 (pointer_vs_value/code/benchmark_iter_test.go:111)	MOVSD	16(SP), X0
	0x0103 00259 (pointer_vs_value/code/benchmark_iter_test.go:111)	MOVSD	X0, ""..autotmp_10+128(SP)
	0x010c 00268 (pointer_vs_value/code/benchmark_iter_test.go:111)	PCDATA	$0, $1
	0x010c 00268 (pointer_vs_value/code/benchmark_iter_test.go:111)	MOVQ	32(SP), AX
	0x0111 00273 (pointer_vs_value/code/benchmark_iter_test.go:111)	MOVQ	24(SP), CX
	0x0116 00278 (pointer_vs_value/code/benchmark_iter_test.go:111)	PCDATA	$1, $3
	0x0116 00278 (pointer_vs_value/code/benchmark_iter_test.go:111)	MOVQ	CX, ""..autotmp_11+208(SP)
	0x011e 00286 (pointer_vs_value/code/benchmark_iter_test.go:111)	PCDATA	$0, $0
	0x011e 00286 (pointer_vs_value/code/benchmark_iter_test.go:111)	MOVQ	AX, ""..autotmp_11+216(SP)
	0x0126 00294 (pointer_vs_value/code/benchmark_iter_test.go:111)	MOVSD	""..autotmp_10+128(SP), X0
	0x012f 00303 (pointer_vs_value/code/benchmark_iter_test.go:111)	MOVSD	X0, ""..autotmp_4+120(SP)
	0x0135 00309 (pointer_vs_value/code/benchmark_iter_test.go:111)	PCDATA	$0, $1
	0x0135 00309 (pointer_vs_value/code/benchmark_iter_test.go:111)	MOVQ	""..autotmp_11+216(SP), AX
	0x013d 00317 (pointer_vs_value/code/benchmark_iter_test.go:111)	PCDATA	$1, $1
	0x013d 00317 (pointer_vs_value/code/benchmark_iter_test.go:111)	MOVQ	""..autotmp_11+208(SP), CX
	0x0145 00325 (pointer_vs_value/code/benchmark_iter_test.go:111)	PCDATA	$1, $4
	0x0145 00325 (pointer_vs_value/code/benchmark_iter_test.go:111)	MOVQ	CX, ""..autotmp_5+176(SP)
	0x014d 00333 (pointer_vs_value/code/benchmark_iter_test.go:111)	PCDATA	$0, $0
	0x014d 00333 (pointer_vs_value/code/benchmark_iter_test.go:111)	MOVQ	AX, ""..autotmp_5+184(SP)
	0x0155 00341 (pointer_vs_value/code/benchmark_iter_test.go:111)	MOVSD	""..autotmp_4+120(SP), X0
	0x015b 00347 (pointer_vs_value/code/benchmark_iter_test.go:111)	MOVSD	X0, "".f+104(SP)
	0x0161 00353 (pointer_vs_value/code/benchmark_iter_test.go:111)	PCDATA	$0, $1
	0x0161 00353 (pointer_vs_value/code/benchmark_iter_test.go:111)	MOVQ	""..autotmp_5+184(SP), AX
	0x0169 00361 (pointer_vs_value/code/benchmark_iter_test.go:111)	PCDATA	$1, $1
	0x0169 00361 (pointer_vs_value/code/benchmark_iter_test.go:111)	MOVQ	""..autotmp_5+176(SP), CX
	0x0171 00369 (pointer_vs_value/code/benchmark_iter_test.go:111)	MOVQ	CX, "".err+160(SP)
	0x0179 00377 (pointer_vs_value/code/benchmark_iter_test.go:111)	PCDATA	$0, $0
	0x0179 00377 (pointer_vs_value/code/benchmark_iter_test.go:111)	MOVQ	AX, "".err+168(SP)
	0x0181 00385 (<unknown line number>)	NOP
	0x0181 00385 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	CX, CX
	0x0184 00388 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	395
	0x0186 00390 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	563
	0x018b 00395 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $5
	0x018b 00395 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X0, X0
	0x018e 00398 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X0, ""..autotmp_12+192(SP)
	0x0196 00406 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x0196 00406 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x0196 00406 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_12+192(SP), AX
	0x019e 00414 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_14+144(SP)
	0x01a6 00422 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x01a8 00424 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x01a8 00424 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), CX
	0x01af 00431 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x01af 00431 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_12+192(SP)
	0x01b7 00439 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x01b7 00439 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_31(SB), DX
	0x01be 00446 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x01be 00446 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	DX, ""..autotmp_12+200(SP)
	0x01c6 00454 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x01c8 00456 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	458
	0x01ca 00458 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_13+224(SP)
	0x01d2 00466 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_13+232(SP)
	0x01de 00478 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_13+240(SP)
	0x01ea 00490 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x01ea 00490 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, (SP)
	0x01ee 00494 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x01f7 00503 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x0200 00512 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x0205 00517 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	519
	0x0207 00519 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x020f 00527 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+104(SP), X0
	0x0215 00533 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x021d 00541 (pointer_vs_value/code/benchmark_iter_test.go:111)	JMP	543
	0x021f 00543 (pointer_vs_value/code/benchmark_iter_test.go:110)	PCDATA	$0, $-2
	0x021f 00543 (pointer_vs_value/code/benchmark_iter_test.go:110)	PCDATA	$1, $-2
	0x021f 00543 (pointer_vs_value/code/benchmark_iter_test.go:110)	JMP	545
	0x0221 00545 (pointer_vs_value/code/benchmark_iter_test.go:110)	PCDATA	$0, $0
	0x0221 00545 (pointer_vs_value/code/benchmark_iter_test.go:110)	PCDATA	$1, $1
	0x0221 00545 (pointer_vs_value/code/benchmark_iter_test.go:110)	MOVQ	"".a+112(SP), AX
	0x0226 00550 (pointer_vs_value/code/benchmark_iter_test.go:110)	INCQ	AX
	0x0229 00553 (pointer_vs_value/code/benchmark_iter_test.go:110)	MOVQ	AX, "".a+112(SP)
	0x022e 00558 (pointer_vs_value/code/benchmark_iter_test.go:110)	JMP	181
	0x0233 00563 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x0233 00563 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x0233 00563 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	519
	0x0235 00565 (pointer_vs_value/code/benchmark_iter_test.go:109)	JMP	567
	0x0237 00567 (pointer_vs_value/code/benchmark_iter_test.go:109)	PCDATA	$0, $0
	0x0237 00567 (pointer_vs_value/code/benchmark_iter_test.go:109)	PCDATA	$1, $1
	0x0237 00567 (pointer_vs_value/code/benchmark_iter_test.go:109)	MOVQ	"".i+96(SP), AX
	0x023c 00572 (pointer_vs_value/code/benchmark_iter_test.go:109)	INCQ	AX
	0x023f 00575 (pointer_vs_value/code/benchmark_iter_test.go:109)	MOVQ	AX, "".i+96(SP)
	0x0244 00580 (pointer_vs_value/code/benchmark_iter_test.go:109)	JMP	141
	0x0249 00585 (<unknown line number>)	PCDATA	$0, $-2
	0x0249 00585 (<unknown line number>)	PCDATA	$1, $-2
	0x0249 00585 (<unknown line number>)	MOVQ	344(SP), BP
	0x0251 00593 (<unknown line number>)	ADDQ	$352, SP
	0x0258 00600 (<unknown line number>)	RET
	0x0259 00601 (pointer_vs_value/code/benchmark_iter_test.go:107)	MOVQ	DI, AX
	0x025c 00604 (pointer_vs_value/code/benchmark_iter_test.go:107)	LEAQ	""..autotmp_15+248(SP), DI
	0x0264 00612 (pointer_vs_value/code/benchmark_iter_test.go:107)	MOVQ	SP, SI
	0x0267 00615 (pointer_vs_value/code/benchmark_iter_test.go:107)	DUFFCOPY	$812
	0x027a 00634 (pointer_vs_value/code/benchmark_iter_test.go:107)	LEAQ	type."".mini(SB), CX
	0x0281 00641 (pointer_vs_value/code/benchmark_iter_test.go:107)	MOVQ	CX, (SP)
	0x0285 00645 (pointer_vs_value/code/benchmark_iter_test.go:107)	MOVQ	AX, 8(SP)
	0x028a 00650 (pointer_vs_value/code/benchmark_iter_test.go:107)	LEAQ	""..autotmp_15+248(SP), AX
	0x0292 00658 (pointer_vs_value/code/benchmark_iter_test.go:107)	MOVQ	AX, 16(SP)
	0x0297 00663 (pointer_vs_value/code/benchmark_iter_test.go:107)	CALL	runtime.typedmemmove(SB)
	0x029c 00668 (pointer_vs_value/code/benchmark_iter_test.go:107)	JMP	130
	0x02a1 00673 (pointer_vs_value/code/benchmark_iter_test.go:107)	NOP
	0x02a1 00673 (pointer_vs_value/code/benchmark_iter_test.go:105)	PCDATA	$1, $-1
	0x02a1 00673 (pointer_vs_value/code/benchmark_iter_test.go:105)	PCDATA	$0, $-1
	0x02a1 00673 (pointer_vs_value/code/benchmark_iter_test.go:105)	CALL	runtime.morestack_noctxt(SB)
	0x02a6 00678 (pointer_vs_value/code/benchmark_iter_test.go:105)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 20 ff ff  eH..%....H..$ ..
	0x0010 ff 48 3b 41 10 0f 86 86 02 00 00 48 81 ec 60 01  .H;A.......H..`.
	0x0020 00 00 48 89 ac 24 58 01 00 00 48 8d ac 24 58 01  ..H..$X...H..$X.
	0x0030 00 00 48 8d 05 00 00 00 00 48 89 04 24 e8 00 00  ..H......H..$...
	0x0040 00 00 48 8b 44 24 08 48 89 84 24 98 00 00 00 e8  ..H.D$.H..$.....
	0x0050 00 00 00 00 48 8b bc 24 98 00 00 00 83 3d 00 00  ....H..$.....=..
	0x0060 00 00 00 74 05 e9 ef 01 00 00 48 89 e6 48 89 6c  ...t......H..H.l
	0x0070 24 f0 48 8d 6c 24 f0 e8 00 00 00 00 48 8b 6d 00  $.H.l$......H.m.
	0x0080 eb 00 48 c7 44 24 60 00 00 00 00 eb 00 48 8b 84  ..H.D$`......H..
	0x0090 24 68 01 00 00 84 00 48 8b 80 08 01 00 00 48 39  $h.....H......H9
	0x00a0 44 24 60 7c 05 e9 9f 01 00 00 48 c7 44 24 70 00  D$`|......H.D$p.
	0x00b0 00 00 00 eb 00 48 81 7c 24 70 00 e1 f5 05 7c 05  .....H.|$p....|.
	0x00c0 e9 70 01 00 00 48 8b 84 24 98 00 00 00 48 89 84  .p...H..$....H..
	0x00d0 24 88 00 00 00 0f 57 c0 0f 11 84 24 d0 00 00 00  $.....W....$....
	0x00e0 48 8b 84 24 88 00 00 00 48 8d 0d 00 00 00 00 48  H..$....H......H
	0x00f0 89 0c 24 48 89 44 24 08 e8 00 00 00 00 f2 0f 10  ..$H.D$.........
	0x0100 44 24 10 f2 0f 11 84 24 80 00 00 00 48 8b 44 24  D$.....$....H.D$
	0x0110 20 48 8b 4c 24 18 48 89 8c 24 d0 00 00 00 48 89   H.L$.H..$....H.
	0x0120 84 24 d8 00 00 00 f2 0f 10 84 24 80 00 00 00 f2  .$........$.....
	0x0130 0f 11 44 24 78 48 8b 84 24 d8 00 00 00 48 8b 8c  ..D$xH..$....H..
	0x0140 24 d0 00 00 00 48 89 8c 24 b0 00 00 00 48 89 84  $....H..$....H..
	0x0150 24 b8 00 00 00 f2 0f 10 44 24 78 f2 0f 11 44 24  $.......D$x...D$
	0x0160 68 48 8b 84 24 b8 00 00 00 48 8b 8c 24 b0 00 00  hH..$....H..$...
	0x0170 00 48 89 8c 24 a0 00 00 00 48 89 84 24 a8 00 00  .H..$....H..$...
	0x0180 00 48 85 c9 75 05 e9 a8 00 00 00 0f 57 c0 0f 11  .H..u.......W...
	0x0190 84 24 c0 00 00 00 48 8d 84 24 c0 00 00 00 48 89  .$....H..$....H.
	0x01a0 84 24 90 00 00 00 84 00 48 8d 0d 00 00 00 00 48  .$......H......H
	0x01b0 89 8c 24 c0 00 00 00 48 8d 15 00 00 00 00 48 89  ..$....H......H.
	0x01c0 94 24 c8 00 00 00 84 00 eb 00 48 89 84 24 e0 00  .$........H..$..
	0x01d0 00 00 48 c7 84 24 e8 00 00 00 01 00 00 00 48 c7  ..H..$........H.
	0x01e0 84 24 f0 00 00 00 01 00 00 00 48 89 04 24 48 c7  .$........H..$H.
	0x01f0 44 24 08 01 00 00 00 48 c7 44 24 10 01 00 00 00  D$.....H.D$.....
	0x0200 e8 00 00 00 00 eb 00 f2 0f 10 05 00 00 00 00 f2  ................
	0x0210 0f 58 44 24 68 f2 0f 11 05 00 00 00 00 eb 00 eb  .XD$h...........
	0x0220 00 48 8b 44 24 70 48 ff c0 48 89 44 24 70 e9 82  .H.D$pH..H.D$p..
	0x0230 fe ff ff eb d2 eb 00 48 8b 44 24 60 48 ff c0 48  .......H.D$`H..H
	0x0240 89 44 24 60 e9 44 fe ff ff 48 8b ac 24 58 01 00  .D$`.D...H..$X..
	0x0250 00 48 81 c4 60 01 00 00 c3 48 89 f8 48 8d bc 24  .H..`....H..H..$
	0x0260 f8 00 00 00 48 89 e6 48 89 6c 24 f0 48 8d 6c 24  ....H..H.l$.H.l$
	0x0270 f0 e8 00 00 00 00 48 8b 6d 00 48 8d 0d 00 00 00  ......H.m.H.....
	0x0280 00 48 89 0c 24 48 89 44 24 08 48 8d 84 24 f8 00  .H..$H.D$.H..$..
	0x0290 00 00 48 89 44 24 10 e8 00 00 00 00 e9 e1 fd ff  ..H.D$..........
	0x02a0 ff e8 00 00 00 00 e9 55 fd ff ff                 .......U...
	rel 5+4 t=16 TLS+0
	rel 53+4 t=15 type."".mini+0
	rel 62+4 t=8 runtime.newobject+0
	rel 80+4 t=8 "".createMini+0
	rel 94+4 t=15 runtime.writeBarrier+-1
	rel 120+4 t=8 runtime.duffcopy+812
	rel 235+4 t=15 go.itab.*"".mini,"".obj+0
	rel 249+4 t=8 "".calcIfc+0
	rel 427+4 t=15 type.string+0
	rel 442+4 t=15 ""..stmp_31+0
	rel 513+4 t=8 log.Fatal+0
	rel 523+4 t=15 "".F+0
	rel 537+4 t=15 "".F+0
	rel 626+4 t=8 runtime.duffcopy+812
	rel 637+4 t=15 type."".mini+0
	rel 664+4 t=8 runtime.typedmemmove+0
	rel 674+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkMega_Iter STEXT size=894 args=0x8 locals=0x520
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:117)	TEXT	"".BenchmarkMega_Iter(SB), ABIInternal, $1312-8
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:117)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_iter_test.go:117)	LEAQ	-1184(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_iter_test.go:117)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_iter_test.go:117)	JLS	884
	0x001b 00027 (pointer_vs_value/code/benchmark_iter_test.go:117)	SUBQ	$1312, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_iter_test.go:117)	MOVQ	BP, 1304(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_iter_test.go:117)	LEAQ	1304(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:117)	FUNCDATA	$0, gclocals·d1d75e5bd153dd111cd8f1bc3c181073(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:117)	FUNCDATA	$1, gclocals·7f2bfb2f00688c30463a33c8baab9522(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:117)	FUNCDATA	$2, gclocals·312acb76b4abc33b200226485697de53(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:117)	FUNCDATA	$3, "".BenchmarkMega_Iter.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:119)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:119)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:119)	CALL	"".createMega(SB)
	0x0037 00055 (pointer_vs_value/code/benchmark_iter_test.go:119)	PCDATA	$0, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_iter_test.go:119)	PCDATA	$1, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_iter_test.go:119)	LEAQ	"".o+600(SP), DI
	0x003f 00063 (pointer_vs_value/code/benchmark_iter_test.go:119)	MOVQ	SP, SI
	0x0042 00066 (pointer_vs_value/code/benchmark_iter_test.go:119)	PCDATA	$0, $0
	0x0042 00066 (pointer_vs_value/code/benchmark_iter_test.go:119)	DUFFCOPY	$588
	0x0055 00085 (pointer_vs_value/code/benchmark_iter_test.go:121)	MOVQ	$0, "".i+360(SP)
	0x0061 00097 (pointer_vs_value/code/benchmark_iter_test.go:121)	PCDATA	$0, $-2
	0x0061 00097 (pointer_vs_value/code/benchmark_iter_test.go:121)	PCDATA	$1, $-2
	0x0061 00097 (pointer_vs_value/code/benchmark_iter_test.go:121)	JMP	99
	0x0063 00099 (pointer_vs_value/code/benchmark_iter_test.go:121)	PCDATA	$0, $2
	0x0063 00099 (pointer_vs_value/code/benchmark_iter_test.go:121)	PCDATA	$1, $1
	0x0063 00099 (pointer_vs_value/code/benchmark_iter_test.go:121)	MOVQ	"".b+1320(SP), AX
	0x006b 00107 (pointer_vs_value/code/benchmark_iter_test.go:121)	TESTB	AL, (AX)
	0x006d 00109 (pointer_vs_value/code/benchmark_iter_test.go:121)	PCDATA	$0, $0
	0x006d 00109 (pointer_vs_value/code/benchmark_iter_test.go:121)	MOVQ	264(AX), AX
	0x0074 00116 (pointer_vs_value/code/benchmark_iter_test.go:121)	CMPQ	"".i+360(SP), AX
	0x007c 00124 (pointer_vs_value/code/benchmark_iter_test.go:121)	JLT	131
	0x007e 00126 (pointer_vs_value/code/benchmark_iter_test.go:121)	JMP	868
	0x0083 00131 (pointer_vs_value/code/benchmark_iter_test.go:122)	MOVQ	$0, "".a+376(SP)
	0x008f 00143 (pointer_vs_value/code/benchmark_iter_test.go:122)	JMP	145
	0x0091 00145 (pointer_vs_value/code/benchmark_iter_test.go:122)	CMPQ	"".a+376(SP), $100000000
	0x009d 00157 (pointer_vs_value/code/benchmark_iter_test.go:122)	JLT	164
	0x009f 00159 (pointer_vs_value/code/benchmark_iter_test.go:122)	JMP	842
	0x00a4 00164 (pointer_vs_value/code/benchmark_iter_test.go:123)	PCDATA	$0, $1
	0x00a4 00164 (pointer_vs_value/code/benchmark_iter_test.go:123)	PCDATA	$1, $2
	0x00a4 00164 (pointer_vs_value/code/benchmark_iter_test.go:123)	LEAQ	"".o+952(SP), DI
	0x00ac 00172 (pointer_vs_value/code/benchmark_iter_test.go:123)	PCDATA	$0, $3
	0x00ac 00172 (pointer_vs_value/code/benchmark_iter_test.go:123)	LEAQ	"".o+600(SP), SI
	0x00b4 00180 (pointer_vs_value/code/benchmark_iter_test.go:123)	PCDATA	$0, $0
	0x00b4 00180 (pointer_vs_value/code/benchmark_iter_test.go:123)	DUFFCOPY	$588
	0x00c7 00199 (pointer_vs_value/code/benchmark_iter_test.go:123)	XORPS	X0, X0
	0x00ca 00202 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVSD	X0, "".~r1+352(SP)
	0x00d3 00211 (pointer_vs_value/code/benchmark_iter_test.go:123)	XORPS	X1, X1
	0x00d6 00214 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVUPS	X1, "".~r2+432(SP)
	0x00de 00222 (<unknown line number>)	NOP
	0x00de 00222 (pointer_vs_value/code/func.go:29)	MOVSD	"".o+1040(SP), X1
	0x00e7 00231 (pointer_vs_value/code/func.go:29)	UCOMISD	X0, X1
	0x00eb 00235 (pointer_vs_value/code/func.go:29)	JNE	769
	0x00f1 00241 (pointer_vs_value/code/func.go:29)	JPC	248
	0x00f3 00243 (pointer_vs_value/code/func.go:29)	JMP	769
	0x00f8 00248 (pointer_vs_value/code/func.go:30)	PCDATA	$0, $2
	0x00f8 00248 (pointer_vs_value/code/func.go:30)	PCDATA	$1, $3
	0x00f8 00248 (pointer_vs_value/code/func.go:30)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x00ff 00255 (pointer_vs_value/code/func.go:30)	PCDATA	$0, $0
	0x00ff 00255 (pointer_vs_value/code/func.go:30)	MOVQ	AX, errors.text+464(SP)
	0x0107 00263 (pointer_vs_value/code/func.go:30)	MOVQ	$22, errors.text+472(SP)
	0x0113 00275 (pointer_vs_value/code/func.go:30)	XORPS	X1, X1
	0x0116 00278 (pointer_vs_value/code/func.go:30)	MOVUPS	X1, "".~R0+448(SP)
	0x011e 00286 (<unknown line number>)	NOP
	0x011e 00286 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x011e 00286 ($GOROOT/src/errors/errors.go:59)	XORPS	X1, X1
	0x0121 00289 ($GOROOT/src/errors/errors.go:59)	MOVUPS	X1, ""..autotmp_16+544(SP)
	0x0129 00297 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $4
	0x0129 00297 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x0129 00297 ($GOROOT/src/errors/errors.go:59)	LEAQ	""..autotmp_16+544(SP), CX
	0x0131 00305 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_15+416(SP)
	0x0139 00313 ($GOROOT/src/errors/errors.go:59)	TESTB	AL, (CX)
	0x013b 00315 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+472(SP), DX
	0x0143 00323 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $5
	0x0143 00323 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $1
	0x0143 00323 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+464(SP), BX
	0x014b 00331 ($GOROOT/src/errors/errors.go:59)	MOVQ	DX, ""..autotmp_16+552(SP)
	0x0153 00339 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $4
	0x0153 00339 ($GOROOT/src/errors/errors.go:59)	MOVQ	BX, ""..autotmp_16+544(SP)
	0x015b 00347 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_13+424(SP)
	0x0163 00355 (pointer_vs_value/code/func.go:30)	PCDATA	$0, $6
	0x0163 00355 (pointer_vs_value/code/func.go:30)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x016a 00362 (pointer_vs_value/code/func.go:30)	MOVQ	DX, ""..autotmp_17+528(SP)
	0x0172 00370 (pointer_vs_value/code/func.go:30)	MOVQ	CX, ""..autotmp_17+536(SP)
	0x017a 00378 (pointer_vs_value/code/func.go:30)	PCDATA	$0, $4
	0x017a 00378 (pointer_vs_value/code/func.go:30)	PCDATA	$1, $5
	0x017a 00378 (pointer_vs_value/code/func.go:30)	MOVQ	DX, "".~R0+448(SP)
	0x0182 00386 (pointer_vs_value/code/func.go:30)	PCDATA	$0, $0
	0x0182 00386 (pointer_vs_value/code/func.go:30)	MOVQ	CX, "".~R0+456(SP)
	0x018a 00394 (pointer_vs_value/code/func.go:30)	JMP	396
	0x018c 00396 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVQ	"".~R0+448(SP), CX
	0x0194 00404 (pointer_vs_value/code/benchmark_iter_test.go:123)	PCDATA	$0, $7
	0x0194 00404 (pointer_vs_value/code/benchmark_iter_test.go:123)	PCDATA	$1, $1
	0x0194 00404 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVQ	"".~R0+456(SP), BX
	0x019c 00412 (pointer_vs_value/code/benchmark_iter_test.go:123)	PCDATA	$1, $6
	0x019c 00412 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVQ	CX, ""..autotmp_18+512(SP)
	0x01a4 00420 (pointer_vs_value/code/benchmark_iter_test.go:123)	PCDATA	$0, $0
	0x01a4 00420 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVQ	BX, ""..autotmp_18+520(SP)
	0x01ac 00428 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVSD	X0, "".~r1+352(SP)
	0x01b5 00437 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVQ	""..autotmp_18+512(SP), CX
	0x01bd 00445 (pointer_vs_value/code/benchmark_iter_test.go:123)	PCDATA	$0, $7
	0x01bd 00445 (pointer_vs_value/code/benchmark_iter_test.go:123)	PCDATA	$1, $1
	0x01bd 00445 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVQ	""..autotmp_18+520(SP), BX
	0x01c5 00453 (pointer_vs_value/code/benchmark_iter_test.go:123)	PCDATA	$1, $7
	0x01c5 00453 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVQ	CX, "".~r2+432(SP)
	0x01cd 00461 (pointer_vs_value/code/benchmark_iter_test.go:123)	PCDATA	$0, $0
	0x01cd 00461 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVQ	BX, "".~r2+440(SP)
	0x01d5 00469 (pointer_vs_value/code/benchmark_iter_test.go:123)	JMP	471
	0x01d7 00471 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVSD	"".~r1+352(SP), X1
	0x01e0 00480 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVSD	X1, ""..autotmp_20+392(SP)
	0x01e9 00489 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVSD	X1, ""..autotmp_4+384(SP)
	0x01f2 00498 (pointer_vs_value/code/benchmark_iter_test.go:123)	PCDATA	$0, $4
	0x01f2 00498 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVQ	"".~r2+440(SP), CX
	0x01fa 00506 (pointer_vs_value/code/benchmark_iter_test.go:123)	PCDATA	$1, $1
	0x01fa 00506 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVQ	"".~r2+432(SP), BX
	0x0202 00514 (pointer_vs_value/code/benchmark_iter_test.go:123)	PCDATA	$1, $8
	0x0202 00514 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVQ	BX, ""..autotmp_5+496(SP)
	0x020a 00522 (pointer_vs_value/code/benchmark_iter_test.go:123)	PCDATA	$0, $0
	0x020a 00522 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVQ	CX, ""..autotmp_5+504(SP)
	0x0212 00530 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVSD	""..autotmp_4+384(SP), X1
	0x021b 00539 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVSD	X1, "".f+368(SP)
	0x0224 00548 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVQ	""..autotmp_5+496(SP), CX
	0x022c 00556 (pointer_vs_value/code/benchmark_iter_test.go:123)	PCDATA	$0, $7
	0x022c 00556 (pointer_vs_value/code/benchmark_iter_test.go:123)	PCDATA	$1, $1
	0x022c 00556 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVQ	""..autotmp_5+504(SP), BX
	0x0234 00564 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVQ	CX, "".err+480(SP)
	0x023c 00572 (pointer_vs_value/code/benchmark_iter_test.go:123)	PCDATA	$0, $0
	0x023c 00572 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVQ	BX, "".err+488(SP)
	0x0244 00580 (<unknown line number>)	NOP
	0x0244 00580 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	CX, CX
	0x0247 00583 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	590
	0x0249 00585 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	767
	0x024e 00590 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $9
	0x024e 00590 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X1, X1
	0x0251 00593 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X1, ""..autotmp_14+560(SP)
	0x0259 00601 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x0259 00601 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x0259 00601 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_14+560(SP), CX
	0x0261 00609 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_22+408(SP)
	0x0269 00617 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x026b 00619 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $5
	0x026b 00619 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), BX
	0x0272 00626 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x0272 00626 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	BX, ""..autotmp_14+560(SP)
	0x027a 00634 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $8
	0x027a 00634 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_32(SB), SI
	0x0281 00641 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x0281 00641 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	SI, ""..autotmp_14+568(SP)
	0x0289 00649 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x028b 00651 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	653
	0x028d 00653 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_21+576(SP)
	0x0295 00661 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_21+584(SP)
	0x02a1 00673 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_21+592(SP)
	0x02ad 00685 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x02ad 00685 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, (SP)
	0x02b1 00689 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x02ba 00698 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x02c3 00707 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x02c8 00712 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	714
	0x02ca 00714 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x02d2 00722 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+368(SP), X0
	0x02db 00731 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x02e3 00739 (pointer_vs_value/code/benchmark_iter_test.go:123)	JMP	741
	0x02e5 00741 (pointer_vs_value/code/benchmark_iter_test.go:122)	PCDATA	$0, $-2
	0x02e5 00741 (pointer_vs_value/code/benchmark_iter_test.go:122)	PCDATA	$1, $-2
	0x02e5 00741 (pointer_vs_value/code/benchmark_iter_test.go:122)	JMP	743
	0x02e7 00743 (pointer_vs_value/code/benchmark_iter_test.go:122)	PCDATA	$0, $0
	0x02e7 00743 (pointer_vs_value/code/benchmark_iter_test.go:122)	PCDATA	$1, $1
	0x02e7 00743 (pointer_vs_value/code/benchmark_iter_test.go:122)	MOVQ	"".a+376(SP), AX
	0x02ef 00751 (pointer_vs_value/code/benchmark_iter_test.go:122)	INCQ	AX
	0x02f2 00754 (pointer_vs_value/code/benchmark_iter_test.go:122)	MOVQ	AX, "".a+376(SP)
	0x02fa 00762 (pointer_vs_value/code/benchmark_iter_test.go:122)	JMP	145
	0x02ff 00767 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x02ff 00767 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x02ff 00767 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	714
	0x0301 00769 (pointer_vs_value/code/func.go:32)	PCDATA	$0, $0
	0x0301 00769 (pointer_vs_value/code/func.go:32)	PCDATA	$1, $2
	0x0301 00769 (pointer_vs_value/code/func.go:32)	MOVQ	"".o+952(SP), CX
	0x0309 00777 (pointer_vs_value/code/func.go:32)	XORPS	X1, X1
	0x030c 00780 (pointer_vs_value/code/func.go:32)	CVTSQ2SD	CX, X1
	0x0311 00785 (pointer_vs_value/code/func.go:32)	PCDATA	$1, $1
	0x0311 00785 (pointer_vs_value/code/func.go:32)	DIVSD	"".o+1040(SP), X1
	0x031a 00794 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVSD	X1, ""..autotmp_19+400(SP)
	0x0323 00803 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVSD	X1, "".~r1+352(SP)
	0x032c 00812 (pointer_vs_value/code/benchmark_iter_test.go:123)	PCDATA	$1, $7
	0x032c 00812 (pointer_vs_value/code/benchmark_iter_test.go:123)	XORPS	X1, X1
	0x032f 00815 (pointer_vs_value/code/benchmark_iter_test.go:123)	MOVUPS	X1, "".~r2+432(SP)
	0x0337 00823 (pointer_vs_value/code/benchmark_iter_test.go:123)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x033e 00830 (pointer_vs_value/code/benchmark_iter_test.go:123)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x0345 00837 (pointer_vs_value/code/benchmark_iter_test.go:123)	JMP	471
	0x034a 00842 (pointer_vs_value/code/benchmark_iter_test.go:121)	PCDATA	$0, $-2
	0x034a 00842 (pointer_vs_value/code/benchmark_iter_test.go:121)	PCDATA	$1, $-2
	0x034a 00842 (pointer_vs_value/code/benchmark_iter_test.go:121)	JMP	844
	0x034c 00844 (pointer_vs_value/code/benchmark_iter_test.go:121)	PCDATA	$0, $0
	0x034c 00844 (pointer_vs_value/code/benchmark_iter_test.go:121)	PCDATA	$1, $1
	0x034c 00844 (pointer_vs_value/code/benchmark_iter_test.go:121)	MOVQ	"".i+360(SP), AX
	0x0354 00852 (pointer_vs_value/code/benchmark_iter_test.go:121)	INCQ	AX
	0x0357 00855 (pointer_vs_value/code/benchmark_iter_test.go:121)	MOVQ	AX, "".i+360(SP)
	0x035f 00863 (pointer_vs_value/code/benchmark_iter_test.go:121)	JMP	99
	0x0364 00868 (<unknown line number>)	PCDATA	$0, $-2
	0x0364 00868 (<unknown line number>)	PCDATA	$1, $-2
	0x0364 00868 (<unknown line number>)	MOVQ	1304(SP), BP
	0x036c 00876 (<unknown line number>)	ADDQ	$1312, SP
	0x0373 00883 (<unknown line number>)	RET
	0x0374 00884 (<unknown line number>)	NOP
	0x0374 00884 (pointer_vs_value/code/benchmark_iter_test.go:117)	PCDATA	$1, $-1
	0x0374 00884 (pointer_vs_value/code/benchmark_iter_test.go:117)	PCDATA	$0, $-1
	0x0374 00884 (pointer_vs_value/code/benchmark_iter_test.go:117)	CALL	runtime.morestack_noctxt(SB)
	0x0379 00889 (pointer_vs_value/code/benchmark_iter_test.go:117)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 60 fb ff  eH..%....H..$`..
	0x0010 ff 48 3b 41 10 0f 86 59 03 00 00 48 81 ec 20 05  .H;A...Y...H.. .
	0x0020 00 00 48 89 ac 24 18 05 00 00 48 8d ac 24 18 05  ..H..$....H..$..
	0x0030 00 00 e8 00 00 00 00 48 8d bc 24 58 02 00 00 48  .......H..$X...H
	0x0040 89 e6 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00  ..H.l$.H.l$.....
	0x0050 00 48 8b 6d 00 48 c7 84 24 68 01 00 00 00 00 00  .H.m.H..$h......
	0x0060 00 eb 00 48 8b 84 24 28 05 00 00 84 00 48 8b 80  ...H..$(.....H..
	0x0070 08 01 00 00 48 39 84 24 68 01 00 00 7c 05 e9 e1  ....H9.$h...|...
	0x0080 02 00 00 48 c7 84 24 78 01 00 00 00 00 00 00 eb  ...H..$x........
	0x0090 00 48 81 bc 24 78 01 00 00 00 e1 f5 05 7c 05 e9  .H..$x.......|..
	0x00a0 a6 02 00 00 48 8d bc 24 b8 03 00 00 48 8d b4 24  ....H..$....H..$
	0x00b0 58 02 00 00 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00  X...H.l$.H.l$...
	0x00c0 00 00 00 48 8b 6d 00 0f 57 c0 f2 0f 11 84 24 60  ...H.m..W.....$`
	0x00d0 01 00 00 0f 57 c9 0f 11 8c 24 b0 01 00 00 f2 0f  ....W....$......
	0x00e0 10 8c 24 10 04 00 00 66 0f 2e c8 0f 85 10 02 00  ..$....f........
	0x00f0 00 7b 05 e9 09 02 00 00 48 8d 05 00 00 00 00 48  .{......H......H
	0x0100 89 84 24 d0 01 00 00 48 c7 84 24 d8 01 00 00 16  ..$....H..$.....
	0x0110 00 00 00 0f 57 c9 0f 11 8c 24 c0 01 00 00 0f 57  ....W....$.....W
	0x0120 c9 0f 11 8c 24 20 02 00 00 48 8d 8c 24 20 02 00  ....$ ...H..$ ..
	0x0130 00 48 89 8c 24 a0 01 00 00 84 01 48 8b 94 24 d8  .H..$......H..$.
	0x0140 01 00 00 48 8b 9c 24 d0 01 00 00 48 89 94 24 28  ...H..$....H..$(
	0x0150 02 00 00 48 89 9c 24 20 02 00 00 48 89 8c 24 a8  ...H..$ ...H..$.
	0x0160 01 00 00 48 8d 15 00 00 00 00 48 89 94 24 10 02  ...H......H..$..
	0x0170 00 00 48 89 8c 24 18 02 00 00 48 89 94 24 c0 01  ..H..$....H..$..
	0x0180 00 00 48 89 8c 24 c8 01 00 00 eb 00 48 8b 8c 24  ..H..$......H..$
	0x0190 c0 01 00 00 48 8b 9c 24 c8 01 00 00 48 89 8c 24  ....H..$....H..$
	0x01a0 00 02 00 00 48 89 9c 24 08 02 00 00 f2 0f 11 84  ....H..$........
	0x01b0 24 60 01 00 00 48 8b 8c 24 00 02 00 00 48 8b 9c  $`...H..$....H..
	0x01c0 24 08 02 00 00 48 89 8c 24 b0 01 00 00 48 89 9c  $....H..$....H..
	0x01d0 24 b8 01 00 00 eb 00 f2 0f 10 8c 24 60 01 00 00  $..........$`...
	0x01e0 f2 0f 11 8c 24 88 01 00 00 f2 0f 11 8c 24 80 01  ....$........$..
	0x01f0 00 00 48 8b 8c 24 b8 01 00 00 48 8b 9c 24 b0 01  ..H..$....H..$..
	0x0200 00 00 48 89 9c 24 f0 01 00 00 48 89 8c 24 f8 01  ..H..$....H..$..
	0x0210 00 00 f2 0f 10 8c 24 80 01 00 00 f2 0f 11 8c 24  ......$........$
	0x0220 70 01 00 00 48 8b 8c 24 f0 01 00 00 48 8b 9c 24  p...H..$....H..$
	0x0230 f8 01 00 00 48 89 8c 24 e0 01 00 00 48 89 9c 24  ....H..$....H..$
	0x0240 e8 01 00 00 48 85 c9 75 05 e9 b1 00 00 00 0f 57  ....H..u.......W
	0x0250 c9 0f 11 8c 24 30 02 00 00 48 8d 8c 24 30 02 00  ....$0...H..$0..
	0x0260 00 48 89 8c 24 98 01 00 00 84 01 48 8d 1d 00 00  .H..$......H....
	0x0270 00 00 48 89 9c 24 30 02 00 00 48 8d 35 00 00 00  ..H..$0...H.5...
	0x0280 00 48 89 b4 24 38 02 00 00 84 01 eb 00 48 89 8c  .H..$8.......H..
	0x0290 24 40 02 00 00 48 c7 84 24 48 02 00 00 01 00 00  $@...H..$H......
	0x02a0 00 48 c7 84 24 50 02 00 00 01 00 00 00 48 89 0c  .H..$P.......H..
	0x02b0 24 48 c7 44 24 08 01 00 00 00 48 c7 44 24 10 01  $H.D$.....H.D$..
	0x02c0 00 00 00 e8 00 00 00 00 eb 00 f2 0f 10 05 00 00  ................
	0x02d0 00 00 f2 0f 58 84 24 70 01 00 00 f2 0f 11 05 00  ....X.$p........
	0x02e0 00 00 00 eb 00 eb 00 48 8b 84 24 78 01 00 00 48  .......H..$x...H
	0x02f0 ff c0 48 89 84 24 78 01 00 00 e9 92 fd ff ff eb  ..H..$x.........
	0x0300 c9 48 8b 8c 24 b8 03 00 00 0f 57 c9 f2 48 0f 2a  .H..$.....W..H.*
	0x0310 c9 f2 0f 5e 8c 24 10 04 00 00 f2 0f 11 8c 24 90  ...^.$........$.
	0x0320 01 00 00 f2 0f 11 8c 24 60 01 00 00 0f 57 c9 0f  .......$`....W..
	0x0330 11 8c 24 b0 01 00 00 48 8d 05 00 00 00 00 48 8d  ..$....H......H.
	0x0340 15 00 00 00 00 e9 8d fe ff ff eb 00 48 8b 84 24  ............H..$
	0x0350 68 01 00 00 48 ff c0 48 89 84 24 68 01 00 00 e9  h...H..H..$h....
	0x0360 ff fc ff ff 48 8b ac 24 18 05 00 00 48 81 c4 20  ....H..$....H.. 
	0x0370 05 00 00 c3 e8 00 00 00 00 e9 82 fc ff ff        ..............
	rel 5+4 t=16 TLS+0
	rel 51+4 t=8 "".createMega+0
	rel 77+4 t=8 runtime.duffcopy+588
	rel 191+4 t=8 runtime.duffcopy+588
	rel 251+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 358+4 t=15 go.itab.*errors.errorString,error+0
	rel 622+4 t=15 type.string+0
	rel 637+4 t=15 ""..stmp_32+0
	rel 708+4 t=8 log.Fatal+0
	rel 718+4 t=15 "".F+0
	rel 735+4 t=15 "".F+0
	rel 826+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 833+4 t=15 go.itab.*errors.errorString,error+0
	rel 885+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkMegaP_Iter STEXT size=900 args=0x8 locals=0x3d0
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:129)	TEXT	"".BenchmarkMegaP_Iter(SB), ABIInternal, $976-8
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:129)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_iter_test.go:129)	LEAQ	-848(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_iter_test.go:129)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_iter_test.go:129)	JLS	890
	0x001b 00027 (pointer_vs_value/code/benchmark_iter_test.go:129)	SUBQ	$976, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_iter_test.go:129)	MOVQ	BP, 968(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_iter_test.go:129)	LEAQ	968(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:129)	FUNCDATA	$0, gclocals·d1d75e5bd153dd111cd8f1bc3c181073(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:129)	FUNCDATA	$1, gclocals·6b59c8a27568fd049968347912e05aff(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:129)	FUNCDATA	$2, gclocals·b0e64627e016c4f22ade44055db6bcad(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:129)	FUNCDATA	$3, "".BenchmarkMegaP_Iter.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:131)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:131)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:131)	CALL	"".createMega(SB)
	0x0037 00055 (pointer_vs_value/code/benchmark_iter_test.go:131)	PCDATA	$0, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_iter_test.go:131)	PCDATA	$1, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_iter_test.go:131)	LEAQ	"".o+616(SP), DI
	0x003f 00063 (pointer_vs_value/code/benchmark_iter_test.go:131)	MOVQ	SP, SI
	0x0042 00066 (pointer_vs_value/code/benchmark_iter_test.go:131)	PCDATA	$0, $0
	0x0042 00066 (pointer_vs_value/code/benchmark_iter_test.go:131)	DUFFCOPY	$588
	0x0055 00085 (pointer_vs_value/code/benchmark_iter_test.go:133)	MOVQ	$0, "".i+360(SP)
	0x0061 00097 (pointer_vs_value/code/benchmark_iter_test.go:133)	PCDATA	$0, $-2
	0x0061 00097 (pointer_vs_value/code/benchmark_iter_test.go:133)	PCDATA	$1, $-2
	0x0061 00097 (pointer_vs_value/code/benchmark_iter_test.go:133)	JMP	99
	0x0063 00099 (pointer_vs_value/code/benchmark_iter_test.go:133)	PCDATA	$0, $2
	0x0063 00099 (pointer_vs_value/code/benchmark_iter_test.go:133)	PCDATA	$1, $1
	0x0063 00099 (pointer_vs_value/code/benchmark_iter_test.go:133)	MOVQ	"".b+984(SP), AX
	0x006b 00107 (pointer_vs_value/code/benchmark_iter_test.go:133)	TESTB	AL, (AX)
	0x006d 00109 (pointer_vs_value/code/benchmark_iter_test.go:133)	PCDATA	$0, $0
	0x006d 00109 (pointer_vs_value/code/benchmark_iter_test.go:133)	MOVQ	264(AX), AX
	0x0074 00116 (pointer_vs_value/code/benchmark_iter_test.go:133)	CMPQ	"".i+360(SP), AX
	0x007c 00124 (pointer_vs_value/code/benchmark_iter_test.go:133)	JLT	131
	0x007e 00126 (pointer_vs_value/code/benchmark_iter_test.go:133)	JMP	874
	0x0083 00131 (pointer_vs_value/code/benchmark_iter_test.go:134)	MOVQ	$0, "".a+376(SP)
	0x008f 00143 (pointer_vs_value/code/benchmark_iter_test.go:134)	JMP	145
	0x0091 00145 (pointer_vs_value/code/benchmark_iter_test.go:134)	CMPQ	"".a+376(SP), $100000000
	0x009d 00157 (pointer_vs_value/code/benchmark_iter_test.go:134)	JLT	164
	0x009f 00159 (pointer_vs_value/code/benchmark_iter_test.go:134)	JMP	848
	0x00a4 00164 (pointer_vs_value/code/benchmark_iter_test.go:135)	PCDATA	$0, $2
	0x00a4 00164 (pointer_vs_value/code/benchmark_iter_test.go:135)	LEAQ	"".o+616(SP), AX
	0x00ac 00172 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVQ	AX, ""..autotmp_15+432(SP)
	0x00b4 00180 (pointer_vs_value/code/benchmark_iter_test.go:135)	PCDATA	$0, $0
	0x00b4 00180 (pointer_vs_value/code/benchmark_iter_test.go:135)	PCDATA	$1, $2
	0x00b4 00180 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVQ	AX, "".o+408(SP)
	0x00bc 00188 (pointer_vs_value/code/benchmark_iter_test.go:135)	XORPS	X0, X0
	0x00bf 00191 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVSD	X0, "".~r1+352(SP)
	0x00c8 00200 (pointer_vs_value/code/benchmark_iter_test.go:135)	XORPS	X1, X1
	0x00cb 00203 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVUPS	X1, "".~r2+448(SP)
	0x00d3 00211 (pointer_vs_value/code/func.go:73)	PCDATA	$0, $2
	0x00d3 00211 (pointer_vs_value/code/func.go:73)	MOVQ	"".o+408(SP), AX
	0x00db 00219 (pointer_vs_value/code/func.go:73)	TESTB	AL, (AX)
	0x00dd 00221 (<unknown line number>)	NOP
	0x00dd 00221 (pointer_vs_value/code/func.go:73)	PCDATA	$0, $0
	0x00dd 00221 (pointer_vs_value/code/func.go:73)	MOVSD	88(AX), X1
	0x00e2 00226 (pointer_vs_value/code/func.go:73)	UCOMISD	X0, X1
	0x00e6 00230 (pointer_vs_value/code/func.go:73)	JNE	764
	0x00ec 00236 (pointer_vs_value/code/func.go:73)	JPC	243
	0x00ee 00238 (pointer_vs_value/code/func.go:73)	JMP	764
	0x00f3 00243 (pointer_vs_value/code/func.go:74)	PCDATA	$0, $2
	0x00f3 00243 (pointer_vs_value/code/func.go:74)	PCDATA	$1, $3
	0x00f3 00243 (pointer_vs_value/code/func.go:74)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x00fa 00250 (pointer_vs_value/code/func.go:74)	PCDATA	$0, $0
	0x00fa 00250 (pointer_vs_value/code/func.go:74)	MOVQ	AX, errors.text+480(SP)
	0x0102 00258 (pointer_vs_value/code/func.go:74)	MOVQ	$22, errors.text+488(SP)
	0x010e 00270 (pointer_vs_value/code/func.go:74)	XORPS	X1, X1
	0x0111 00273 (pointer_vs_value/code/func.go:74)	MOVUPS	X1, "".~R0+464(SP)
	0x0119 00281 (<unknown line number>)	NOP
	0x0119 00281 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x0119 00281 ($GOROOT/src/errors/errors.go:59)	XORPS	X1, X1
	0x011c 00284 ($GOROOT/src/errors/errors.go:59)	MOVUPS	X1, ""..autotmp_17+560(SP)
	0x0124 00292 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x0124 00292 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x0124 00292 ($GOROOT/src/errors/errors.go:59)	LEAQ	""..autotmp_17+560(SP), CX
	0x012c 00300 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_16+424(SP)
	0x0134 00308 ($GOROOT/src/errors/errors.go:59)	TESTB	AL, (CX)
	0x0136 00310 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+488(SP), DX
	0x013e 00318 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $4
	0x013e 00318 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $1
	0x013e 00318 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+480(SP), BX
	0x0146 00326 ($GOROOT/src/errors/errors.go:59)	MOVQ	DX, ""..autotmp_17+568(SP)
	0x014e 00334 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x014e 00334 ($GOROOT/src/errors/errors.go:59)	MOVQ	BX, ""..autotmp_17+560(SP)
	0x0156 00342 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_13+440(SP)
	0x015e 00350 (pointer_vs_value/code/func.go:74)	PCDATA	$0, $5
	0x015e 00350 (pointer_vs_value/code/func.go:74)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x0165 00357 (pointer_vs_value/code/func.go:74)	MOVQ	DX, ""..autotmp_18+544(SP)
	0x016d 00365 (pointer_vs_value/code/func.go:74)	MOVQ	CX, ""..autotmp_18+552(SP)
	0x0175 00373 (pointer_vs_value/code/func.go:74)	PCDATA	$0, $3
	0x0175 00373 (pointer_vs_value/code/func.go:74)	PCDATA	$1, $5
	0x0175 00373 (pointer_vs_value/code/func.go:74)	MOVQ	DX, "".~R0+464(SP)
	0x017d 00381 (pointer_vs_value/code/func.go:74)	PCDATA	$0, $0
	0x017d 00381 (pointer_vs_value/code/func.go:74)	MOVQ	CX, "".~R0+472(SP)
	0x0185 00389 (pointer_vs_value/code/func.go:74)	JMP	391
	0x0187 00391 (pointer_vs_value/code/benchmark_iter_test.go:135)	PCDATA	$0, $3
	0x0187 00391 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVQ	"".~R0+472(SP), CX
	0x018f 00399 (pointer_vs_value/code/benchmark_iter_test.go:135)	PCDATA	$1, $1
	0x018f 00399 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVQ	"".~R0+464(SP), BX
	0x0197 00407 (pointer_vs_value/code/benchmark_iter_test.go:135)	PCDATA	$1, $6
	0x0197 00407 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVQ	BX, ""..autotmp_19+528(SP)
	0x019f 00415 (pointer_vs_value/code/benchmark_iter_test.go:135)	PCDATA	$0, $0
	0x019f 00415 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVQ	CX, ""..autotmp_19+536(SP)
	0x01a7 00423 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVSD	X0, "".~r1+352(SP)
	0x01b0 00432 (pointer_vs_value/code/benchmark_iter_test.go:135)	PCDATA	$0, $3
	0x01b0 00432 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVQ	""..autotmp_19+536(SP), CX
	0x01b8 00440 (pointer_vs_value/code/benchmark_iter_test.go:135)	PCDATA	$1, $1
	0x01b8 00440 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVQ	""..autotmp_19+528(SP), BX
	0x01c0 00448 (pointer_vs_value/code/benchmark_iter_test.go:135)	PCDATA	$1, $7
	0x01c0 00448 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVQ	BX, "".~r2+448(SP)
	0x01c8 00456 (pointer_vs_value/code/benchmark_iter_test.go:135)	PCDATA	$0, $0
	0x01c8 00456 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVQ	CX, "".~r2+456(SP)
	0x01d0 00464 (pointer_vs_value/code/benchmark_iter_test.go:135)	JMP	466
	0x01d2 00466 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVSD	"".~r1+352(SP), X1
	0x01db 00475 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVSD	X1, ""..autotmp_21+392(SP)
	0x01e4 00484 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVSD	X1, ""..autotmp_4+384(SP)
	0x01ed 00493 (pointer_vs_value/code/benchmark_iter_test.go:135)	PCDATA	$0, $3
	0x01ed 00493 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVQ	"".~r2+456(SP), CX
	0x01f5 00501 (pointer_vs_value/code/benchmark_iter_test.go:135)	PCDATA	$1, $1
	0x01f5 00501 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVQ	"".~r2+448(SP), BX
	0x01fd 00509 (pointer_vs_value/code/benchmark_iter_test.go:135)	PCDATA	$1, $8
	0x01fd 00509 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVQ	BX, ""..autotmp_5+512(SP)
	0x0205 00517 (pointer_vs_value/code/benchmark_iter_test.go:135)	PCDATA	$0, $0
	0x0205 00517 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVQ	CX, ""..autotmp_5+520(SP)
	0x020d 00525 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVSD	""..autotmp_4+384(SP), X1
	0x0216 00534 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVSD	X1, "".f+368(SP)
	0x021f 00543 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVQ	""..autotmp_5+512(SP), CX
	0x0227 00551 (pointer_vs_value/code/benchmark_iter_test.go:135)	PCDATA	$0, $6
	0x0227 00551 (pointer_vs_value/code/benchmark_iter_test.go:135)	PCDATA	$1, $1
	0x0227 00551 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVQ	""..autotmp_5+520(SP), BX
	0x022f 00559 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVQ	CX, "".err+496(SP)
	0x0237 00567 (pointer_vs_value/code/benchmark_iter_test.go:135)	PCDATA	$0, $0
	0x0237 00567 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVQ	BX, "".err+504(SP)
	0x023f 00575 (<unknown line number>)	NOP
	0x023f 00575 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	CX, CX
	0x0242 00578 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	585
	0x0244 00580 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	762
	0x0249 00585 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $9
	0x0249 00585 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X1, X1
	0x024c 00588 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X1, ""..autotmp_14+576(SP)
	0x0254 00596 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x0254 00596 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x0254 00596 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_14+576(SP), CX
	0x025c 00604 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_23+416(SP)
	0x0264 00612 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x0266 00614 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x0266 00614 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), BX
	0x026d 00621 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x026d 00621 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	BX, ""..autotmp_14+576(SP)
	0x0275 00629 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $7
	0x0275 00629 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_33(SB), SI
	0x027c 00636 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x027c 00636 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	SI, ""..autotmp_14+584(SP)
	0x0284 00644 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x0286 00646 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	648
	0x0288 00648 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_22+592(SP)
	0x0290 00656 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_22+600(SP)
	0x029c 00668 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_22+608(SP)
	0x02a8 00680 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x02a8 00680 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, (SP)
	0x02ac 00684 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x02b5 00693 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x02be 00702 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x02c3 00707 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	709
	0x02c5 00709 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x02cd 00717 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+368(SP), X0
	0x02d6 00726 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x02de 00734 (pointer_vs_value/code/benchmark_iter_test.go:135)	JMP	736
	0x02e0 00736 (pointer_vs_value/code/benchmark_iter_test.go:134)	PCDATA	$0, $-2
	0x02e0 00736 (pointer_vs_value/code/benchmark_iter_test.go:134)	PCDATA	$1, $-2
	0x02e0 00736 (pointer_vs_value/code/benchmark_iter_test.go:134)	JMP	738
	0x02e2 00738 (pointer_vs_value/code/benchmark_iter_test.go:134)	PCDATA	$0, $0
	0x02e2 00738 (pointer_vs_value/code/benchmark_iter_test.go:134)	PCDATA	$1, $1
	0x02e2 00738 (pointer_vs_value/code/benchmark_iter_test.go:134)	MOVQ	"".a+376(SP), AX
	0x02ea 00746 (pointer_vs_value/code/benchmark_iter_test.go:134)	INCQ	AX
	0x02ed 00749 (pointer_vs_value/code/benchmark_iter_test.go:134)	MOVQ	AX, "".a+376(SP)
	0x02f5 00757 (pointer_vs_value/code/benchmark_iter_test.go:134)	JMP	145
	0x02fa 00762 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x02fa 00762 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x02fa 00762 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	709
	0x02fc 00764 (pointer_vs_value/code/func.go:76)	PCDATA	$0, $3
	0x02fc 00764 (pointer_vs_value/code/func.go:76)	PCDATA	$1, $2
	0x02fc 00764 (pointer_vs_value/code/func.go:76)	MOVQ	"".o+408(SP), CX
	0x0304 00772 (pointer_vs_value/code/func.go:76)	TESTB	AL, (CX)
	0x0306 00774 (pointer_vs_value/code/func.go:76)	PCDATA	$0, $4
	0x0306 00774 (pointer_vs_value/code/func.go:76)	PCDATA	$1, $1
	0x0306 00774 (pointer_vs_value/code/func.go:76)	MOVQ	"".o+408(SP), BX
	0x030e 00782 (pointer_vs_value/code/func.go:76)	TESTB	AL, (BX)
	0x0310 00784 (pointer_vs_value/code/func.go:76)	PCDATA	$0, $6
	0x0310 00784 (pointer_vs_value/code/func.go:76)	MOVQ	(CX), CX
	0x0313 00787 (pointer_vs_value/code/func.go:76)	XORPS	X1, X1
	0x0316 00790 (pointer_vs_value/code/func.go:76)	CVTSQ2SD	CX, X1
	0x031b 00795 (pointer_vs_value/code/func.go:76)	PCDATA	$0, $0
	0x031b 00795 (pointer_vs_value/code/func.go:76)	DIVSD	88(BX), X1
	0x0320 00800 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVSD	X1, ""..autotmp_20+400(SP)
	0x0329 00809 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVSD	X1, "".~r1+352(SP)
	0x0332 00818 (pointer_vs_value/code/benchmark_iter_test.go:135)	PCDATA	$1, $7
	0x0332 00818 (pointer_vs_value/code/benchmark_iter_test.go:135)	XORPS	X1, X1
	0x0335 00821 (pointer_vs_value/code/benchmark_iter_test.go:135)	MOVUPS	X1, "".~r2+448(SP)
	0x033d 00829 (pointer_vs_value/code/benchmark_iter_test.go:135)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x0344 00836 (pointer_vs_value/code/benchmark_iter_test.go:135)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x034b 00843 (pointer_vs_value/code/benchmark_iter_test.go:135)	JMP	466
	0x0350 00848 (pointer_vs_value/code/benchmark_iter_test.go:133)	PCDATA	$0, $-2
	0x0350 00848 (pointer_vs_value/code/benchmark_iter_test.go:133)	PCDATA	$1, $-2
	0x0350 00848 (pointer_vs_value/code/benchmark_iter_test.go:133)	JMP	850
	0x0352 00850 (pointer_vs_value/code/benchmark_iter_test.go:133)	PCDATA	$0, $0
	0x0352 00850 (pointer_vs_value/code/benchmark_iter_test.go:133)	PCDATA	$1, $1
	0x0352 00850 (pointer_vs_value/code/benchmark_iter_test.go:133)	MOVQ	"".i+360(SP), AX
	0x035a 00858 (pointer_vs_value/code/benchmark_iter_test.go:133)	INCQ	AX
	0x035d 00861 (pointer_vs_value/code/benchmark_iter_test.go:133)	MOVQ	AX, "".i+360(SP)
	0x0365 00869 (pointer_vs_value/code/benchmark_iter_test.go:133)	JMP	99
	0x036a 00874 (<unknown line number>)	PCDATA	$0, $-2
	0x036a 00874 (<unknown line number>)	PCDATA	$1, $-2
	0x036a 00874 (<unknown line number>)	MOVQ	968(SP), BP
	0x0372 00882 (<unknown line number>)	ADDQ	$976, SP
	0x0379 00889 (<unknown line number>)	RET
	0x037a 00890 (<unknown line number>)	NOP
	0x037a 00890 (pointer_vs_value/code/benchmark_iter_test.go:129)	PCDATA	$1, $-1
	0x037a 00890 (pointer_vs_value/code/benchmark_iter_test.go:129)	PCDATA	$0, $-1
	0x037a 00890 (pointer_vs_value/code/benchmark_iter_test.go:129)	CALL	runtime.morestack_noctxt(SB)
	0x037f 00895 (pointer_vs_value/code/benchmark_iter_test.go:129)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 b0 fc ff  eH..%....H..$...
	0x0010 ff 48 3b 41 10 0f 86 5f 03 00 00 48 81 ec d0 03  .H;A..._...H....
	0x0020 00 00 48 89 ac 24 c8 03 00 00 48 8d ac 24 c8 03  ..H..$....H..$..
	0x0030 00 00 e8 00 00 00 00 48 8d bc 24 68 02 00 00 48  .......H..$h...H
	0x0040 89 e6 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00  ..H.l$.H.l$.....
	0x0050 00 48 8b 6d 00 48 c7 84 24 68 01 00 00 00 00 00  .H.m.H..$h......
	0x0060 00 eb 00 48 8b 84 24 d8 03 00 00 84 00 48 8b 80  ...H..$......H..
	0x0070 08 01 00 00 48 39 84 24 68 01 00 00 7c 05 e9 e7  ....H9.$h...|...
	0x0080 02 00 00 48 c7 84 24 78 01 00 00 00 00 00 00 eb  ...H..$x........
	0x0090 00 48 81 bc 24 78 01 00 00 00 e1 f5 05 7c 05 e9  .H..$x.......|..
	0x00a0 ac 02 00 00 48 8d 84 24 68 02 00 00 48 89 84 24  ....H..$h...H..$
	0x00b0 b0 01 00 00 48 89 84 24 98 01 00 00 0f 57 c0 f2  ....H..$.....W..
	0x00c0 0f 11 84 24 60 01 00 00 0f 57 c9 0f 11 8c 24 c0  ...$`....W....$.
	0x00d0 01 00 00 48 8b 84 24 98 01 00 00 84 00 f2 0f 10  ...H..$.........
	0x00e0 48 58 66 0f 2e c8 0f 85 10 02 00 00 7b 05 e9 09  HXf.........{...
	0x00f0 02 00 00 48 8d 05 00 00 00 00 48 89 84 24 e0 01  ...H......H..$..
	0x0100 00 00 48 c7 84 24 e8 01 00 00 16 00 00 00 0f 57  ..H..$.........W
	0x0110 c9 0f 11 8c 24 d0 01 00 00 0f 57 c9 0f 11 8c 24  ....$.....W....$
	0x0120 30 02 00 00 48 8d 8c 24 30 02 00 00 48 89 8c 24  0...H..$0...H..$
	0x0130 a8 01 00 00 84 01 48 8b 94 24 e8 01 00 00 48 8b  ......H..$....H.
	0x0140 9c 24 e0 01 00 00 48 89 94 24 38 02 00 00 48 89  .$....H..$8...H.
	0x0150 9c 24 30 02 00 00 48 89 8c 24 b8 01 00 00 48 8d  .$0...H..$....H.
	0x0160 15 00 00 00 00 48 89 94 24 20 02 00 00 48 89 8c  .....H..$ ...H..
	0x0170 24 28 02 00 00 48 89 94 24 d0 01 00 00 48 89 8c  $(...H..$....H..
	0x0180 24 d8 01 00 00 eb 00 48 8b 8c 24 d8 01 00 00 48  $......H..$....H
	0x0190 8b 9c 24 d0 01 00 00 48 89 9c 24 10 02 00 00 48  ..$....H..$....H
	0x01a0 89 8c 24 18 02 00 00 f2 0f 11 84 24 60 01 00 00  ..$........$`...
	0x01b0 48 8b 8c 24 18 02 00 00 48 8b 9c 24 10 02 00 00  H..$....H..$....
	0x01c0 48 89 9c 24 c0 01 00 00 48 89 8c 24 c8 01 00 00  H..$....H..$....
	0x01d0 eb 00 f2 0f 10 8c 24 60 01 00 00 f2 0f 11 8c 24  ......$`.......$
	0x01e0 88 01 00 00 f2 0f 11 8c 24 80 01 00 00 48 8b 8c  ........$....H..
	0x01f0 24 c8 01 00 00 48 8b 9c 24 c0 01 00 00 48 89 9c  $....H..$....H..
	0x0200 24 00 02 00 00 48 89 8c 24 08 02 00 00 f2 0f 10  $....H..$.......
	0x0210 8c 24 80 01 00 00 f2 0f 11 8c 24 70 01 00 00 48  .$........$p...H
	0x0220 8b 8c 24 00 02 00 00 48 8b 9c 24 08 02 00 00 48  ..$....H..$....H
	0x0230 89 8c 24 f0 01 00 00 48 89 9c 24 f8 01 00 00 48  ..$....H..$....H
	0x0240 85 c9 75 05 e9 b1 00 00 00 0f 57 c9 0f 11 8c 24  ..u.......W....$
	0x0250 40 02 00 00 48 8d 8c 24 40 02 00 00 48 89 8c 24  @...H..$@...H..$
	0x0260 a0 01 00 00 84 01 48 8d 1d 00 00 00 00 48 89 9c  ......H......H..
	0x0270 24 40 02 00 00 48 8d 35 00 00 00 00 48 89 b4 24  $@...H.5....H..$
	0x0280 48 02 00 00 84 01 eb 00 48 89 8c 24 50 02 00 00  H.......H..$P...
	0x0290 48 c7 84 24 58 02 00 00 01 00 00 00 48 c7 84 24  H..$X.......H..$
	0x02a0 60 02 00 00 01 00 00 00 48 89 0c 24 48 c7 44 24  `.......H..$H.D$
	0x02b0 08 01 00 00 00 48 c7 44 24 10 01 00 00 00 e8 00  .....H.D$.......
	0x02c0 00 00 00 eb 00 f2 0f 10 05 00 00 00 00 f2 0f 58  ...............X
	0x02d0 84 24 70 01 00 00 f2 0f 11 05 00 00 00 00 eb 00  .$p.............
	0x02e0 eb 00 48 8b 84 24 78 01 00 00 48 ff c0 48 89 84  ..H..$x...H..H..
	0x02f0 24 78 01 00 00 e9 97 fd ff ff eb c9 48 8b 8c 24  $x..........H..$
	0x0300 98 01 00 00 84 01 48 8b 9c 24 98 01 00 00 84 03  ......H..$......
	0x0310 48 8b 09 0f 57 c9 f2 48 0f 2a c9 f2 0f 5e 4b 58  H...W..H.*...^KX
	0x0320 f2 0f 11 8c 24 90 01 00 00 f2 0f 11 8c 24 60 01  ....$........$`.
	0x0330 00 00 0f 57 c9 0f 11 8c 24 c0 01 00 00 48 8d 05  ...W....$....H..
	0x0340 00 00 00 00 48 8d 15 00 00 00 00 e9 82 fe ff ff  ....H...........
	0x0350 eb 00 48 8b 84 24 68 01 00 00 48 ff c0 48 89 84  ..H..$h...H..H..
	0x0360 24 68 01 00 00 e9 f9 fc ff ff 48 8b ac 24 c8 03  $h........H..$..
	0x0370 00 00 48 81 c4 d0 03 00 00 c3 e8 00 00 00 00 e9  ..H.............
	0x0380 7c fc ff ff                                      |...
	rel 5+4 t=16 TLS+0
	rel 51+4 t=8 "".createMega+0
	rel 77+4 t=8 runtime.duffcopy+588
	rel 246+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 353+4 t=15 go.itab.*errors.errorString,error+0
	rel 617+4 t=15 type.string+0
	rel 632+4 t=15 ""..stmp_33+0
	rel 703+4 t=8 log.Fatal+0
	rel 713+4 t=15 "".F+0
	rel 730+4 t=15 "".F+0
	rel 832+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 839+4 t=15 go.itab.*errors.errorString,error+0
	rel 891+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkMegaIfc_Iter STEXT size=719 args=0x8 locals=0x360
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:141)	TEXT	"".BenchmarkMegaIfc_Iter(SB), ABIInternal, $864-8
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:141)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_iter_test.go:141)	LEAQ	-736(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_iter_test.go:141)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_iter_test.go:141)	JLS	709
	0x001b 00027 (pointer_vs_value/code/benchmark_iter_test.go:141)	SUBQ	$864, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_iter_test.go:141)	MOVQ	BP, 856(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_iter_test.go:141)	LEAQ	856(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:141)	FUNCDATA	$0, gclocals·73de87619823f6747f37fd4c152f5b42(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:141)	FUNCDATA	$1, gclocals·52d62297ee1fe28d67c61808da6a453e(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:141)	FUNCDATA	$2, gclocals·437d171b9e6f84c40356e01ae02b710f(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:141)	FUNCDATA	$3, "".BenchmarkMegaIfc_Iter.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:143)	PCDATA	$0, $1
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:143)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:143)	LEAQ	type."".mega(SB), AX
	0x0039 00057 (pointer_vs_value/code/benchmark_iter_test.go:143)	PCDATA	$0, $0
	0x0039 00057 (pointer_vs_value/code/benchmark_iter_test.go:143)	MOVQ	AX, (SP)
	0x003d 00061 (pointer_vs_value/code/benchmark_iter_test.go:143)	CALL	runtime.newobject(SB)
	0x0042 00066 (pointer_vs_value/code/benchmark_iter_test.go:143)	PCDATA	$0, $1
	0x0042 00066 (pointer_vs_value/code/benchmark_iter_test.go:143)	MOVQ	8(SP), AX
	0x0047 00071 (pointer_vs_value/code/benchmark_iter_test.go:143)	PCDATA	$0, $0
	0x0047 00071 (pointer_vs_value/code/benchmark_iter_test.go:143)	PCDATA	$1, $1
	0x0047 00071 (pointer_vs_value/code/benchmark_iter_test.go:143)	MOVQ	AX, "".&o+408(SP)
	0x004f 00079 (pointer_vs_value/code/benchmark_iter_test.go:143)	CALL	"".createMega(SB)
	0x0054 00084 (pointer_vs_value/code/benchmark_iter_test.go:143)	PCDATA	$0, $2
	0x0054 00084 (pointer_vs_value/code/benchmark_iter_test.go:143)	MOVQ	"".&o+408(SP), DI
	0x005c 00092 (pointer_vs_value/code/benchmark_iter_test.go:143)	PCDATA	$0, $-2
	0x005c 00092 (pointer_vs_value/code/benchmark_iter_test.go:143)	PCDATA	$1, $-2
	0x005c 00092 (pointer_vs_value/code/benchmark_iter_test.go:143)	CMPL	runtime.writeBarrier(SB), $0
	0x0063 00099 (pointer_vs_value/code/benchmark_iter_test.go:143)	JEQ	106
	0x0065 00101 (pointer_vs_value/code/benchmark_iter_test.go:143)	JMP	637
	0x006a 00106 (pointer_vs_value/code/benchmark_iter_test.go:143)	MOVQ	SP, SI
	0x006d 00109 (pointer_vs_value/code/benchmark_iter_test.go:143)	DUFFCOPY	$588
	0x0080 00128 (pointer_vs_value/code/benchmark_iter_test.go:143)	JMP	130
	0x0082 00130 (pointer_vs_value/code/benchmark_iter_test.go:145)	PCDATA	$0, $0
	0x0082 00130 (pointer_vs_value/code/benchmark_iter_test.go:145)	PCDATA	$1, $1
	0x0082 00130 (pointer_vs_value/code/benchmark_iter_test.go:145)	MOVQ	$0, "".i+352(SP)
	0x008e 00142 (pointer_vs_value/code/benchmark_iter_test.go:145)	JMP	144
	0x0090 00144 (pointer_vs_value/code/benchmark_iter_test.go:145)	PCDATA	$0, $1
	0x0090 00144 (pointer_vs_value/code/benchmark_iter_test.go:145)	MOVQ	"".b+872(SP), AX
	0x0098 00152 (pointer_vs_value/code/benchmark_iter_test.go:145)	TESTB	AL, (AX)
	0x009a 00154 (pointer_vs_value/code/benchmark_iter_test.go:145)	PCDATA	$0, $0
	0x009a 00154 (pointer_vs_value/code/benchmark_iter_test.go:145)	MOVQ	264(AX), AX
	0x00a1 00161 (pointer_vs_value/code/benchmark_iter_test.go:145)	CMPQ	"".i+352(SP), AX
	0x00a9 00169 (pointer_vs_value/code/benchmark_iter_test.go:145)	JLT	176
	0x00ab 00171 (pointer_vs_value/code/benchmark_iter_test.go:145)	JMP	621
	0x00b0 00176 (pointer_vs_value/code/benchmark_iter_test.go:146)	MOVQ	$0, "".a+368(SP)
	0x00bc 00188 (pointer_vs_value/code/benchmark_iter_test.go:146)	JMP	190
	0x00be 00190 (pointer_vs_value/code/benchmark_iter_test.go:146)	CMPQ	"".a+368(SP), $100000000
	0x00ca 00202 (pointer_vs_value/code/benchmark_iter_test.go:146)	JLT	209
	0x00cc 00204 (pointer_vs_value/code/benchmark_iter_test.go:146)	JMP	595
	0x00d1 00209 (pointer_vs_value/code/benchmark_iter_test.go:147)	PCDATA	$0, $1
	0x00d1 00209 (pointer_vs_value/code/benchmark_iter_test.go:147)	MOVQ	"".&o+408(SP), AX
	0x00d9 00217 (pointer_vs_value/code/benchmark_iter_test.go:147)	PCDATA	$0, $0
	0x00d9 00217 (pointer_vs_value/code/benchmark_iter_test.go:147)	PCDATA	$1, $2
	0x00d9 00217 (pointer_vs_value/code/benchmark_iter_test.go:147)	MOVQ	AX, ""..autotmp_9+392(SP)
	0x00e1 00225 (pointer_vs_value/code/benchmark_iter_test.go:147)	XORPS	X0, X0
	0x00e4 00228 (pointer_vs_value/code/benchmark_iter_test.go:147)	MOVUPS	X0, ""..autotmp_11+464(SP)
	0x00ec 00236 (pointer_vs_value/code/benchmark_iter_test.go:147)	PCDATA	$0, $1
	0x00ec 00236 (pointer_vs_value/code/benchmark_iter_test.go:147)	PCDATA	$1, $1
	0x00ec 00236 (pointer_vs_value/code/benchmark_iter_test.go:147)	MOVQ	""..autotmp_9+392(SP), AX
	0x00f4 00244 (pointer_vs_value/code/benchmark_iter_test.go:147)	PCDATA	$0, $3
	0x00f4 00244 (pointer_vs_value/code/benchmark_iter_test.go:147)	LEAQ	go.itab.*"".mega,"".obj(SB), CX
	0x00fb 00251 (pointer_vs_value/code/benchmark_iter_test.go:147)	PCDATA	$0, $1
	0x00fb 00251 (pointer_vs_value/code/benchmark_iter_test.go:147)	MOVQ	CX, (SP)
	0x00ff 00255 (pointer_vs_value/code/benchmark_iter_test.go:147)	PCDATA	$0, $0
	0x00ff 00255 (pointer_vs_value/code/benchmark_iter_test.go:147)	MOVQ	AX, 8(SP)
	0x0104 00260 (pointer_vs_value/code/benchmark_iter_test.go:147)	CALL	"".calcIfc(SB)
	0x0109 00265 (pointer_vs_value/code/benchmark_iter_test.go:147)	MOVSD	16(SP), X0
	0x010f 00271 (pointer_vs_value/code/benchmark_iter_test.go:147)	MOVSD	X0, ""..autotmp_10+384(SP)
	0x0118 00280 (pointer_vs_value/code/benchmark_iter_test.go:147)	PCDATA	$0, $1
	0x0118 00280 (pointer_vs_value/code/benchmark_iter_test.go:147)	MOVQ	32(SP), AX
	0x011d 00285 (pointer_vs_value/code/benchmark_iter_test.go:147)	MOVQ	24(SP), CX
	0x0122 00290 (pointer_vs_value/code/benchmark_iter_test.go:147)	PCDATA	$1, $3
	0x0122 00290 (pointer_vs_value/code/benchmark_iter_test.go:147)	MOVQ	CX, ""..autotmp_11+464(SP)
	0x012a 00298 (pointer_vs_value/code/benchmark_iter_test.go:147)	PCDATA	$0, $0
	0x012a 00298 (pointer_vs_value/code/benchmark_iter_test.go:147)	MOVQ	AX, ""..autotmp_11+472(SP)
	0x0132 00306 (pointer_vs_value/code/benchmark_iter_test.go:147)	MOVSD	""..autotmp_10+384(SP), X0
	0x013b 00315 (pointer_vs_value/code/benchmark_iter_test.go:147)	MOVSD	X0, ""..autotmp_4+376(SP)
	0x0144 00324 (pointer_vs_value/code/benchmark_iter_test.go:147)	PCDATA	$0, $1
	0x0144 00324 (pointer_vs_value/code/benchmark_iter_test.go:147)	MOVQ	""..autotmp_11+472(SP), AX
	0x014c 00332 (pointer_vs_value/code/benchmark_iter_test.go:147)	PCDATA	$1, $1
	0x014c 00332 (pointer_vs_value/code/benchmark_iter_test.go:147)	MOVQ	""..autotmp_11+464(SP), CX
	0x0154 00340 (pointer_vs_value/code/benchmark_iter_test.go:147)	PCDATA	$1, $4
	0x0154 00340 (pointer_vs_value/code/benchmark_iter_test.go:147)	MOVQ	CX, ""..autotmp_5+432(SP)
	0x015c 00348 (pointer_vs_value/code/benchmark_iter_test.go:147)	PCDATA	$0, $0
	0x015c 00348 (pointer_vs_value/code/benchmark_iter_test.go:147)	MOVQ	AX, ""..autotmp_5+440(SP)
	0x0164 00356 (pointer_vs_value/code/benchmark_iter_test.go:147)	MOVSD	""..autotmp_4+376(SP), X0
	0x016d 00365 (pointer_vs_value/code/benchmark_iter_test.go:147)	MOVSD	X0, "".f+360(SP)
	0x0176 00374 (pointer_vs_value/code/benchmark_iter_test.go:147)	PCDATA	$0, $1
	0x0176 00374 (pointer_vs_value/code/benchmark_iter_test.go:147)	MOVQ	""..autotmp_5+440(SP), AX
	0x017e 00382 (pointer_vs_value/code/benchmark_iter_test.go:147)	PCDATA	$1, $1
	0x017e 00382 (pointer_vs_value/code/benchmark_iter_test.go:147)	MOVQ	""..autotmp_5+432(SP), CX
	0x0186 00390 (pointer_vs_value/code/benchmark_iter_test.go:147)	MOVQ	CX, "".err+416(SP)
	0x018e 00398 (pointer_vs_value/code/benchmark_iter_test.go:147)	PCDATA	$0, $0
	0x018e 00398 (pointer_vs_value/code/benchmark_iter_test.go:147)	MOVQ	AX, "".err+424(SP)
	0x0196 00406 (<unknown line number>)	NOP
	0x0196 00406 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	CX, CX
	0x0199 00409 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	416
	0x019b 00411 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	593
	0x01a0 00416 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $5
	0x01a0 00416 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X0, X0
	0x01a3 00419 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X0, ""..autotmp_12+448(SP)
	0x01ab 00427 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x01ab 00427 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x01ab 00427 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_12+448(SP), AX
	0x01b3 00435 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_14+400(SP)
	0x01bb 00443 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x01bd 00445 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x01bd 00445 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), CX
	0x01c4 00452 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x01c4 00452 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_12+448(SP)
	0x01cc 00460 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x01cc 00460 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_34(SB), DX
	0x01d3 00467 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x01d3 00467 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	DX, ""..autotmp_12+456(SP)
	0x01db 00475 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x01dd 00477 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	479
	0x01df 00479 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_13+480(SP)
	0x01e7 00487 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_13+488(SP)
	0x01f3 00499 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_13+496(SP)
	0x01ff 00511 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x01ff 00511 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, (SP)
	0x0203 00515 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x020c 00524 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x0215 00533 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x021a 00538 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	540
	0x021c 00540 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x0224 00548 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+360(SP), X0
	0x022d 00557 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x0235 00565 (pointer_vs_value/code/benchmark_iter_test.go:147)	JMP	567
	0x0237 00567 (pointer_vs_value/code/benchmark_iter_test.go:146)	PCDATA	$0, $-2
	0x0237 00567 (pointer_vs_value/code/benchmark_iter_test.go:146)	PCDATA	$1, $-2
	0x0237 00567 (pointer_vs_value/code/benchmark_iter_test.go:146)	JMP	569
	0x0239 00569 (pointer_vs_value/code/benchmark_iter_test.go:146)	PCDATA	$0, $0
	0x0239 00569 (pointer_vs_value/code/benchmark_iter_test.go:146)	PCDATA	$1, $1
	0x0239 00569 (pointer_vs_value/code/benchmark_iter_test.go:146)	MOVQ	"".a+368(SP), AX
	0x0241 00577 (pointer_vs_value/code/benchmark_iter_test.go:146)	INCQ	AX
	0x0244 00580 (pointer_vs_value/code/benchmark_iter_test.go:146)	MOVQ	AX, "".a+368(SP)
	0x024c 00588 (pointer_vs_value/code/benchmark_iter_test.go:146)	JMP	190
	0x0251 00593 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x0251 00593 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x0251 00593 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	540
	0x0253 00595 (pointer_vs_value/code/benchmark_iter_test.go:145)	JMP	597
	0x0255 00597 (pointer_vs_value/code/benchmark_iter_test.go:145)	PCDATA	$0, $0
	0x0255 00597 (pointer_vs_value/code/benchmark_iter_test.go:145)	PCDATA	$1, $1
	0x0255 00597 (pointer_vs_value/code/benchmark_iter_test.go:145)	MOVQ	"".i+352(SP), AX
	0x025d 00605 (pointer_vs_value/code/benchmark_iter_test.go:145)	INCQ	AX
	0x0260 00608 (pointer_vs_value/code/benchmark_iter_test.go:145)	MOVQ	AX, "".i+352(SP)
	0x0268 00616 (pointer_vs_value/code/benchmark_iter_test.go:145)	JMP	144
	0x026d 00621 (<unknown line number>)	PCDATA	$0, $-2
	0x026d 00621 (<unknown line number>)	PCDATA	$1, $-2
	0x026d 00621 (<unknown line number>)	MOVQ	856(SP), BP
	0x0275 00629 (<unknown line number>)	ADDQ	$864, SP
	0x027c 00636 (<unknown line number>)	RET
	0x027d 00637 (pointer_vs_value/code/benchmark_iter_test.go:143)	MOVQ	DI, AX
	0x0280 00640 (pointer_vs_value/code/benchmark_iter_test.go:143)	LEAQ	""..autotmp_15+504(SP), DI
	0x0288 00648 (pointer_vs_value/code/benchmark_iter_test.go:143)	MOVQ	SP, SI
	0x028b 00651 (pointer_vs_value/code/benchmark_iter_test.go:143)	DUFFCOPY	$588
	0x029e 00670 (pointer_vs_value/code/benchmark_iter_test.go:143)	LEAQ	type."".mega(SB), CX
	0x02a5 00677 (pointer_vs_value/code/benchmark_iter_test.go:143)	MOVQ	CX, (SP)
	0x02a9 00681 (pointer_vs_value/code/benchmark_iter_test.go:143)	MOVQ	AX, 8(SP)
	0x02ae 00686 (pointer_vs_value/code/benchmark_iter_test.go:143)	LEAQ	""..autotmp_15+504(SP), AX
	0x02b6 00694 (pointer_vs_value/code/benchmark_iter_test.go:143)	MOVQ	AX, 16(SP)
	0x02bb 00699 (pointer_vs_value/code/benchmark_iter_test.go:143)	CALL	runtime.typedmemmove(SB)
	0x02c0 00704 (pointer_vs_value/code/benchmark_iter_test.go:143)	JMP	130
	0x02c5 00709 (pointer_vs_value/code/benchmark_iter_test.go:143)	NOP
	0x02c5 00709 (pointer_vs_value/code/benchmark_iter_test.go:141)	PCDATA	$1, $-1
	0x02c5 00709 (pointer_vs_value/code/benchmark_iter_test.go:141)	PCDATA	$0, $-1
	0x02c5 00709 (pointer_vs_value/code/benchmark_iter_test.go:141)	CALL	runtime.morestack_noctxt(SB)
	0x02ca 00714 (pointer_vs_value/code/benchmark_iter_test.go:141)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 20 fd ff  eH..%....H..$ ..
	0x0010 ff 48 3b 41 10 0f 86 aa 02 00 00 48 81 ec 60 03  .H;A.......H..`.
	0x0020 00 00 48 89 ac 24 58 03 00 00 48 8d ac 24 58 03  ..H..$X...H..$X.
	0x0030 00 00 48 8d 05 00 00 00 00 48 89 04 24 e8 00 00  ..H......H..$...
	0x0040 00 00 48 8b 44 24 08 48 89 84 24 98 01 00 00 e8  ..H.D$.H..$.....
	0x0050 00 00 00 00 48 8b bc 24 98 01 00 00 83 3d 00 00  ....H..$.....=..
	0x0060 00 00 00 74 05 e9 13 02 00 00 48 89 e6 48 89 6c  ...t......H..H.l
	0x0070 24 f0 48 8d 6c 24 f0 e8 00 00 00 00 48 8b 6d 00  $.H.l$......H.m.
	0x0080 eb 00 48 c7 84 24 60 01 00 00 00 00 00 00 eb 00  ..H..$`.........
	0x0090 48 8b 84 24 68 03 00 00 84 00 48 8b 80 08 01 00  H..$h.....H.....
	0x00a0 00 48 39 84 24 60 01 00 00 7c 05 e9 bd 01 00 00  .H9.$`...|......
	0x00b0 48 c7 84 24 70 01 00 00 00 00 00 00 eb 00 48 81  H..$p.........H.
	0x00c0 bc 24 70 01 00 00 00 e1 f5 05 7c 05 e9 82 01 00  .$p.......|.....
	0x00d0 00 48 8b 84 24 98 01 00 00 48 89 84 24 88 01 00  .H..$....H..$...
	0x00e0 00 0f 57 c0 0f 11 84 24 d0 01 00 00 48 8b 84 24  ..W....$....H..$
	0x00f0 88 01 00 00 48 8d 0d 00 00 00 00 48 89 0c 24 48  ....H......H..$H
	0x0100 89 44 24 08 e8 00 00 00 00 f2 0f 10 44 24 10 f2  .D$.........D$..
	0x0110 0f 11 84 24 80 01 00 00 48 8b 44 24 20 48 8b 4c  ...$....H.D$ H.L
	0x0120 24 18 48 89 8c 24 d0 01 00 00 48 89 84 24 d8 01  $.H..$....H..$..
	0x0130 00 00 f2 0f 10 84 24 80 01 00 00 f2 0f 11 84 24  ......$........$
	0x0140 78 01 00 00 48 8b 84 24 d8 01 00 00 48 8b 8c 24  x...H..$....H..$
	0x0150 d0 01 00 00 48 89 8c 24 b0 01 00 00 48 89 84 24  ....H..$....H..$
	0x0160 b8 01 00 00 f2 0f 10 84 24 78 01 00 00 f2 0f 11  ........$x......
	0x0170 84 24 68 01 00 00 48 8b 84 24 b8 01 00 00 48 8b  .$h...H..$....H.
	0x0180 8c 24 b0 01 00 00 48 89 8c 24 a0 01 00 00 48 89  .$....H..$....H.
	0x0190 84 24 a8 01 00 00 48 85 c9 75 05 e9 b1 00 00 00  .$....H..u......
	0x01a0 0f 57 c0 0f 11 84 24 c0 01 00 00 48 8d 84 24 c0  .W....$....H..$.
	0x01b0 01 00 00 48 89 84 24 90 01 00 00 84 00 48 8d 0d  ...H..$......H..
	0x01c0 00 00 00 00 48 89 8c 24 c0 01 00 00 48 8d 15 00  ....H..$....H...
	0x01d0 00 00 00 48 89 94 24 c8 01 00 00 84 00 eb 00 48  ...H..$........H
	0x01e0 89 84 24 e0 01 00 00 48 c7 84 24 e8 01 00 00 01  ..$....H..$.....
	0x01f0 00 00 00 48 c7 84 24 f0 01 00 00 01 00 00 00 48  ...H..$........H
	0x0200 89 04 24 48 c7 44 24 08 01 00 00 00 48 c7 44 24  ..$H.D$.....H.D$
	0x0210 10 01 00 00 00 e8 00 00 00 00 eb 00 f2 0f 10 05  ................
	0x0220 00 00 00 00 f2 0f 58 84 24 68 01 00 00 f2 0f 11  ......X.$h......
	0x0230 05 00 00 00 00 eb 00 eb 00 48 8b 84 24 70 01 00  .........H..$p..
	0x0240 00 48 ff c0 48 89 84 24 70 01 00 00 e9 6d fe ff  .H..H..$p....m..
	0x0250 ff eb c9 eb 00 48 8b 84 24 60 01 00 00 48 ff c0  .....H..$`...H..
	0x0260 48 89 84 24 60 01 00 00 e9 23 fe ff ff 48 8b ac  H..$`....#...H..
	0x0270 24 58 03 00 00 48 81 c4 60 03 00 00 c3 48 89 f8  $X...H..`....H..
	0x0280 48 8d bc 24 f8 01 00 00 48 89 e6 48 89 6c 24 f0  H..$....H..H.l$.
	0x0290 48 8d 6c 24 f0 e8 00 00 00 00 48 8b 6d 00 48 8d  H.l$......H.m.H.
	0x02a0 0d 00 00 00 00 48 89 0c 24 48 89 44 24 08 48 8d  .....H..$H.D$.H.
	0x02b0 84 24 f8 01 00 00 48 89 44 24 10 e8 00 00 00 00  .$....H.D$......
	0x02c0 e9 bd fd ff ff e8 00 00 00 00 e9 31 fd ff ff     ...........1...
	rel 5+4 t=16 TLS+0
	rel 53+4 t=15 type."".mega+0
	rel 62+4 t=8 runtime.newobject+0
	rel 80+4 t=8 "".createMega+0
	rel 94+4 t=15 runtime.writeBarrier+-1
	rel 120+4 t=8 runtime.duffcopy+588
	rel 247+4 t=15 go.itab.*"".mega,"".obj+0
	rel 261+4 t=8 "".calcIfc+0
	rel 448+4 t=15 type.string+0
	rel 463+4 t=15 ""..stmp_34+0
	rel 534+4 t=8 log.Fatal+0
	rel 544+4 t=15 "".F+0
	rel 561+4 t=15 "".F+0
	rel 662+4 t=8 runtime.duffcopy+588
	rel 673+4 t=15 type."".mega+0
	rel 700+4 t=8 runtime.typedmemmove+0
	rel 710+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkTera_Iter STEXT size=894 args=0x8 locals=0xac0
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:153)	TEXT	"".BenchmarkTera_Iter(SB), ABIInternal, $2752-8
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:153)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_iter_test.go:153)	LEAQ	-2624(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_iter_test.go:153)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_iter_test.go:153)	JLS	884
	0x001b 00027 (pointer_vs_value/code/benchmark_iter_test.go:153)	SUBQ	$2752, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_iter_test.go:153)	MOVQ	BP, 2744(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_iter_test.go:153)	LEAQ	2744(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:153)	FUNCDATA	$0, gclocals·d1d75e5bd153dd111cd8f1bc3c181073(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:153)	FUNCDATA	$1, gclocals·3ffc5ed95677960d5151ed06b380c724(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:153)	FUNCDATA	$2, gclocals·312acb76b4abc33b200226485697de53(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:153)	FUNCDATA	$3, "".BenchmarkTera_Iter.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:155)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:155)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:155)	CALL	"".createTera(SB)
	0x0037 00055 (pointer_vs_value/code/benchmark_iter_test.go:155)	PCDATA	$0, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_iter_test.go:155)	PCDATA	$1, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_iter_test.go:155)	LEAQ	"".o+1080(SP), DI
	0x003f 00063 (pointer_vs_value/code/benchmark_iter_test.go:155)	MOVQ	SP, SI
	0x0042 00066 (pointer_vs_value/code/benchmark_iter_test.go:155)	PCDATA	$0, $0
	0x0042 00066 (pointer_vs_value/code/benchmark_iter_test.go:155)	DUFFCOPY	$168
	0x0055 00085 (pointer_vs_value/code/benchmark_iter_test.go:157)	MOVQ	$0, "".i+840(SP)
	0x0061 00097 (pointer_vs_value/code/benchmark_iter_test.go:157)	PCDATA	$0, $-2
	0x0061 00097 (pointer_vs_value/code/benchmark_iter_test.go:157)	PCDATA	$1, $-2
	0x0061 00097 (pointer_vs_value/code/benchmark_iter_test.go:157)	JMP	99
	0x0063 00099 (pointer_vs_value/code/benchmark_iter_test.go:157)	PCDATA	$0, $2
	0x0063 00099 (pointer_vs_value/code/benchmark_iter_test.go:157)	PCDATA	$1, $1
	0x0063 00099 (pointer_vs_value/code/benchmark_iter_test.go:157)	MOVQ	"".b+2760(SP), AX
	0x006b 00107 (pointer_vs_value/code/benchmark_iter_test.go:157)	TESTB	AL, (AX)
	0x006d 00109 (pointer_vs_value/code/benchmark_iter_test.go:157)	PCDATA	$0, $0
	0x006d 00109 (pointer_vs_value/code/benchmark_iter_test.go:157)	MOVQ	264(AX), AX
	0x0074 00116 (pointer_vs_value/code/benchmark_iter_test.go:157)	CMPQ	"".i+840(SP), AX
	0x007c 00124 (pointer_vs_value/code/benchmark_iter_test.go:157)	JLT	131
	0x007e 00126 (pointer_vs_value/code/benchmark_iter_test.go:157)	JMP	868
	0x0083 00131 (pointer_vs_value/code/benchmark_iter_test.go:158)	MOVQ	$0, "".a+856(SP)
	0x008f 00143 (pointer_vs_value/code/benchmark_iter_test.go:158)	JMP	145
	0x0091 00145 (pointer_vs_value/code/benchmark_iter_test.go:158)	CMPQ	"".a+856(SP), $100000000
	0x009d 00157 (pointer_vs_value/code/benchmark_iter_test.go:158)	JLT	164
	0x009f 00159 (pointer_vs_value/code/benchmark_iter_test.go:158)	JMP	842
	0x00a4 00164 (pointer_vs_value/code/benchmark_iter_test.go:159)	PCDATA	$0, $1
	0x00a4 00164 (pointer_vs_value/code/benchmark_iter_test.go:159)	PCDATA	$1, $2
	0x00a4 00164 (pointer_vs_value/code/benchmark_iter_test.go:159)	LEAQ	"".o+1912(SP), DI
	0x00ac 00172 (pointer_vs_value/code/benchmark_iter_test.go:159)	PCDATA	$0, $3
	0x00ac 00172 (pointer_vs_value/code/benchmark_iter_test.go:159)	LEAQ	"".o+1080(SP), SI
	0x00b4 00180 (pointer_vs_value/code/benchmark_iter_test.go:159)	PCDATA	$0, $0
	0x00b4 00180 (pointer_vs_value/code/benchmark_iter_test.go:159)	DUFFCOPY	$168
	0x00c7 00199 (pointer_vs_value/code/benchmark_iter_test.go:159)	XORPS	X0, X0
	0x00ca 00202 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVSD	X0, "".~r1+832(SP)
	0x00d3 00211 (pointer_vs_value/code/benchmark_iter_test.go:159)	XORPS	X1, X1
	0x00d6 00214 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVUPS	X1, "".~r2+912(SP)
	0x00de 00222 (<unknown line number>)	NOP
	0x00de 00222 (pointer_vs_value/code/func.go:36)	MOVSD	"".o+2120(SP), X1
	0x00e7 00231 (pointer_vs_value/code/func.go:36)	UCOMISD	X0, X1
	0x00eb 00235 (pointer_vs_value/code/func.go:36)	JNE	769
	0x00f1 00241 (pointer_vs_value/code/func.go:36)	JPC	248
	0x00f3 00243 (pointer_vs_value/code/func.go:36)	JMP	769
	0x00f8 00248 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $2
	0x00f8 00248 (pointer_vs_value/code/func.go:37)	PCDATA	$1, $3
	0x00f8 00248 (pointer_vs_value/code/func.go:37)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x00ff 00255 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $0
	0x00ff 00255 (pointer_vs_value/code/func.go:37)	MOVQ	AX, errors.text+944(SP)
	0x0107 00263 (pointer_vs_value/code/func.go:37)	MOVQ	$22, errors.text+952(SP)
	0x0113 00275 (pointer_vs_value/code/func.go:37)	XORPS	X1, X1
	0x0116 00278 (pointer_vs_value/code/func.go:37)	MOVUPS	X1, "".~R0+928(SP)
	0x011e 00286 (<unknown line number>)	NOP
	0x011e 00286 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x011e 00286 ($GOROOT/src/errors/errors.go:59)	XORPS	X1, X1
	0x0121 00289 ($GOROOT/src/errors/errors.go:59)	MOVUPS	X1, ""..autotmp_16+1024(SP)
	0x0129 00297 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $4
	0x0129 00297 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x0129 00297 ($GOROOT/src/errors/errors.go:59)	LEAQ	""..autotmp_16+1024(SP), CX
	0x0131 00305 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_15+896(SP)
	0x0139 00313 ($GOROOT/src/errors/errors.go:59)	TESTB	AL, (CX)
	0x013b 00315 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+952(SP), DX
	0x0143 00323 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $5
	0x0143 00323 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $1
	0x0143 00323 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+944(SP), BX
	0x014b 00331 ($GOROOT/src/errors/errors.go:59)	MOVQ	DX, ""..autotmp_16+1032(SP)
	0x0153 00339 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $4
	0x0153 00339 ($GOROOT/src/errors/errors.go:59)	MOVQ	BX, ""..autotmp_16+1024(SP)
	0x015b 00347 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_13+904(SP)
	0x0163 00355 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $6
	0x0163 00355 (pointer_vs_value/code/func.go:37)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x016a 00362 (pointer_vs_value/code/func.go:37)	MOVQ	DX, ""..autotmp_17+1008(SP)
	0x0172 00370 (pointer_vs_value/code/func.go:37)	MOVQ	CX, ""..autotmp_17+1016(SP)
	0x017a 00378 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $4
	0x017a 00378 (pointer_vs_value/code/func.go:37)	PCDATA	$1, $5
	0x017a 00378 (pointer_vs_value/code/func.go:37)	MOVQ	DX, "".~R0+928(SP)
	0x0182 00386 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $0
	0x0182 00386 (pointer_vs_value/code/func.go:37)	MOVQ	CX, "".~R0+936(SP)
	0x018a 00394 (pointer_vs_value/code/func.go:37)	JMP	396
	0x018c 00396 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVQ	"".~R0+928(SP), CX
	0x0194 00404 (pointer_vs_value/code/benchmark_iter_test.go:159)	PCDATA	$0, $7
	0x0194 00404 (pointer_vs_value/code/benchmark_iter_test.go:159)	PCDATA	$1, $1
	0x0194 00404 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVQ	"".~R0+936(SP), BX
	0x019c 00412 (pointer_vs_value/code/benchmark_iter_test.go:159)	PCDATA	$1, $6
	0x019c 00412 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVQ	CX, ""..autotmp_18+992(SP)
	0x01a4 00420 (pointer_vs_value/code/benchmark_iter_test.go:159)	PCDATA	$0, $0
	0x01a4 00420 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVQ	BX, ""..autotmp_18+1000(SP)
	0x01ac 00428 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVSD	X0, "".~r1+832(SP)
	0x01b5 00437 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVQ	""..autotmp_18+992(SP), CX
	0x01bd 00445 (pointer_vs_value/code/benchmark_iter_test.go:159)	PCDATA	$0, $7
	0x01bd 00445 (pointer_vs_value/code/benchmark_iter_test.go:159)	PCDATA	$1, $1
	0x01bd 00445 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVQ	""..autotmp_18+1000(SP), BX
	0x01c5 00453 (pointer_vs_value/code/benchmark_iter_test.go:159)	PCDATA	$1, $7
	0x01c5 00453 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVQ	CX, "".~r2+912(SP)
	0x01cd 00461 (pointer_vs_value/code/benchmark_iter_test.go:159)	PCDATA	$0, $0
	0x01cd 00461 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVQ	BX, "".~r2+920(SP)
	0x01d5 00469 (pointer_vs_value/code/benchmark_iter_test.go:159)	JMP	471
	0x01d7 00471 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVSD	"".~r1+832(SP), X1
	0x01e0 00480 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVSD	X1, ""..autotmp_20+872(SP)
	0x01e9 00489 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVSD	X1, ""..autotmp_4+864(SP)
	0x01f2 00498 (pointer_vs_value/code/benchmark_iter_test.go:159)	PCDATA	$0, $4
	0x01f2 00498 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVQ	"".~r2+920(SP), CX
	0x01fa 00506 (pointer_vs_value/code/benchmark_iter_test.go:159)	PCDATA	$1, $1
	0x01fa 00506 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVQ	"".~r2+912(SP), BX
	0x0202 00514 (pointer_vs_value/code/benchmark_iter_test.go:159)	PCDATA	$1, $8
	0x0202 00514 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVQ	BX, ""..autotmp_5+976(SP)
	0x020a 00522 (pointer_vs_value/code/benchmark_iter_test.go:159)	PCDATA	$0, $0
	0x020a 00522 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVQ	CX, ""..autotmp_5+984(SP)
	0x0212 00530 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVSD	""..autotmp_4+864(SP), X1
	0x021b 00539 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVSD	X1, "".f+848(SP)
	0x0224 00548 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVQ	""..autotmp_5+976(SP), CX
	0x022c 00556 (pointer_vs_value/code/benchmark_iter_test.go:159)	PCDATA	$0, $7
	0x022c 00556 (pointer_vs_value/code/benchmark_iter_test.go:159)	PCDATA	$1, $1
	0x022c 00556 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVQ	""..autotmp_5+984(SP), BX
	0x0234 00564 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVQ	CX, "".err+960(SP)
	0x023c 00572 (pointer_vs_value/code/benchmark_iter_test.go:159)	PCDATA	$0, $0
	0x023c 00572 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVQ	BX, "".err+968(SP)
	0x0244 00580 (<unknown line number>)	NOP
	0x0244 00580 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	CX, CX
	0x0247 00583 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	590
	0x0249 00585 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	767
	0x024e 00590 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $9
	0x024e 00590 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X1, X1
	0x0251 00593 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X1, ""..autotmp_14+1040(SP)
	0x0259 00601 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x0259 00601 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x0259 00601 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_14+1040(SP), CX
	0x0261 00609 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_22+888(SP)
	0x0269 00617 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x026b 00619 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $5
	0x026b 00619 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), BX
	0x0272 00626 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x0272 00626 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	BX, ""..autotmp_14+1040(SP)
	0x027a 00634 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $8
	0x027a 00634 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_35(SB), SI
	0x0281 00641 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x0281 00641 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	SI, ""..autotmp_14+1048(SP)
	0x0289 00649 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x028b 00651 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	653
	0x028d 00653 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_21+1056(SP)
	0x0295 00661 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_21+1064(SP)
	0x02a1 00673 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_21+1072(SP)
	0x02ad 00685 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x02ad 00685 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, (SP)
	0x02b1 00689 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x02ba 00698 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x02c3 00707 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x02c8 00712 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	714
	0x02ca 00714 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x02d2 00722 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+848(SP), X0
	0x02db 00731 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x02e3 00739 (pointer_vs_value/code/benchmark_iter_test.go:159)	JMP	741
	0x02e5 00741 (pointer_vs_value/code/benchmark_iter_test.go:158)	PCDATA	$0, $-2
	0x02e5 00741 (pointer_vs_value/code/benchmark_iter_test.go:158)	PCDATA	$1, $-2
	0x02e5 00741 (pointer_vs_value/code/benchmark_iter_test.go:158)	JMP	743
	0x02e7 00743 (pointer_vs_value/code/benchmark_iter_test.go:158)	PCDATA	$0, $0
	0x02e7 00743 (pointer_vs_value/code/benchmark_iter_test.go:158)	PCDATA	$1, $1
	0x02e7 00743 (pointer_vs_value/code/benchmark_iter_test.go:158)	MOVQ	"".a+856(SP), AX
	0x02ef 00751 (pointer_vs_value/code/benchmark_iter_test.go:158)	INCQ	AX
	0x02f2 00754 (pointer_vs_value/code/benchmark_iter_test.go:158)	MOVQ	AX, "".a+856(SP)
	0x02fa 00762 (pointer_vs_value/code/benchmark_iter_test.go:158)	JMP	145
	0x02ff 00767 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x02ff 00767 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x02ff 00767 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	714
	0x0301 00769 (pointer_vs_value/code/func.go:39)	PCDATA	$0, $0
	0x0301 00769 (pointer_vs_value/code/func.go:39)	PCDATA	$1, $2
	0x0301 00769 (pointer_vs_value/code/func.go:39)	MOVQ	"".o+1912(SP), CX
	0x0309 00777 (pointer_vs_value/code/func.go:39)	XORPS	X1, X1
	0x030c 00780 (pointer_vs_value/code/func.go:39)	CVTSQ2SD	CX, X1
	0x0311 00785 (pointer_vs_value/code/func.go:39)	PCDATA	$1, $1
	0x0311 00785 (pointer_vs_value/code/func.go:39)	DIVSD	"".o+2120(SP), X1
	0x031a 00794 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVSD	X1, ""..autotmp_19+880(SP)
	0x0323 00803 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVSD	X1, "".~r1+832(SP)
	0x032c 00812 (pointer_vs_value/code/benchmark_iter_test.go:159)	PCDATA	$1, $7
	0x032c 00812 (pointer_vs_value/code/benchmark_iter_test.go:159)	XORPS	X1, X1
	0x032f 00815 (pointer_vs_value/code/benchmark_iter_test.go:159)	MOVUPS	X1, "".~r2+912(SP)
	0x0337 00823 (pointer_vs_value/code/benchmark_iter_test.go:159)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x033e 00830 (pointer_vs_value/code/benchmark_iter_test.go:159)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x0345 00837 (pointer_vs_value/code/benchmark_iter_test.go:159)	JMP	471
	0x034a 00842 (pointer_vs_value/code/benchmark_iter_test.go:157)	PCDATA	$0, $-2
	0x034a 00842 (pointer_vs_value/code/benchmark_iter_test.go:157)	PCDATA	$1, $-2
	0x034a 00842 (pointer_vs_value/code/benchmark_iter_test.go:157)	JMP	844
	0x034c 00844 (pointer_vs_value/code/benchmark_iter_test.go:157)	PCDATA	$0, $0
	0x034c 00844 (pointer_vs_value/code/benchmark_iter_test.go:157)	PCDATA	$1, $1
	0x034c 00844 (pointer_vs_value/code/benchmark_iter_test.go:157)	MOVQ	"".i+840(SP), AX
	0x0354 00852 (pointer_vs_value/code/benchmark_iter_test.go:157)	INCQ	AX
	0x0357 00855 (pointer_vs_value/code/benchmark_iter_test.go:157)	MOVQ	AX, "".i+840(SP)
	0x035f 00863 (pointer_vs_value/code/benchmark_iter_test.go:157)	JMP	99
	0x0364 00868 (<unknown line number>)	PCDATA	$0, $-2
	0x0364 00868 (<unknown line number>)	PCDATA	$1, $-2
	0x0364 00868 (<unknown line number>)	MOVQ	2744(SP), BP
	0x036c 00876 (<unknown line number>)	ADDQ	$2752, SP
	0x0373 00883 (<unknown line number>)	RET
	0x0374 00884 (<unknown line number>)	NOP
	0x0374 00884 (pointer_vs_value/code/benchmark_iter_test.go:153)	PCDATA	$1, $-1
	0x0374 00884 (pointer_vs_value/code/benchmark_iter_test.go:153)	PCDATA	$0, $-1
	0x0374 00884 (pointer_vs_value/code/benchmark_iter_test.go:153)	CALL	runtime.morestack_noctxt(SB)
	0x0379 00889 (pointer_vs_value/code/benchmark_iter_test.go:153)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 c0 f5 ff  eH..%....H..$...
	0x0010 ff 48 3b 41 10 0f 86 59 03 00 00 48 81 ec c0 0a  .H;A...Y...H....
	0x0020 00 00 48 89 ac 24 b8 0a 00 00 48 8d ac 24 b8 0a  ..H..$....H..$..
	0x0030 00 00 e8 00 00 00 00 48 8d bc 24 38 04 00 00 48  .......H..$8...H
	0x0040 89 e6 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00  ..H.l$.H.l$.....
	0x0050 00 48 8b 6d 00 48 c7 84 24 48 03 00 00 00 00 00  .H.m.H..$H......
	0x0060 00 eb 00 48 8b 84 24 c8 0a 00 00 84 00 48 8b 80  ...H..$......H..
	0x0070 08 01 00 00 48 39 84 24 48 03 00 00 7c 05 e9 e1  ....H9.$H...|...
	0x0080 02 00 00 48 c7 84 24 58 03 00 00 00 00 00 00 eb  ...H..$X........
	0x0090 00 48 81 bc 24 58 03 00 00 00 e1 f5 05 7c 05 e9  .H..$X.......|..
	0x00a0 a6 02 00 00 48 8d bc 24 78 07 00 00 48 8d b4 24  ....H..$x...H..$
	0x00b0 38 04 00 00 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00  8...H.l$.H.l$...
	0x00c0 00 00 00 48 8b 6d 00 0f 57 c0 f2 0f 11 84 24 40  ...H.m..W.....$@
	0x00d0 03 00 00 0f 57 c9 0f 11 8c 24 90 03 00 00 f2 0f  ....W....$......
	0x00e0 10 8c 24 48 08 00 00 66 0f 2e c8 0f 85 10 02 00  ..$H...f........
	0x00f0 00 7b 05 e9 09 02 00 00 48 8d 05 00 00 00 00 48  .{......H......H
	0x0100 89 84 24 b0 03 00 00 48 c7 84 24 b8 03 00 00 16  ..$....H..$.....
	0x0110 00 00 00 0f 57 c9 0f 11 8c 24 a0 03 00 00 0f 57  ....W....$.....W
	0x0120 c9 0f 11 8c 24 00 04 00 00 48 8d 8c 24 00 04 00  ....$....H..$...
	0x0130 00 48 89 8c 24 80 03 00 00 84 01 48 8b 94 24 b8  .H..$......H..$.
	0x0140 03 00 00 48 8b 9c 24 b0 03 00 00 48 89 94 24 08  ...H..$....H..$.
	0x0150 04 00 00 48 89 9c 24 00 04 00 00 48 89 8c 24 88  ...H..$....H..$.
	0x0160 03 00 00 48 8d 15 00 00 00 00 48 89 94 24 f0 03  ...H......H..$..
	0x0170 00 00 48 89 8c 24 f8 03 00 00 48 89 94 24 a0 03  ..H..$....H..$..
	0x0180 00 00 48 89 8c 24 a8 03 00 00 eb 00 48 8b 8c 24  ..H..$......H..$
	0x0190 a0 03 00 00 48 8b 9c 24 a8 03 00 00 48 89 8c 24  ....H..$....H..$
	0x01a0 e0 03 00 00 48 89 9c 24 e8 03 00 00 f2 0f 11 84  ....H..$........
	0x01b0 24 40 03 00 00 48 8b 8c 24 e0 03 00 00 48 8b 9c  $@...H..$....H..
	0x01c0 24 e8 03 00 00 48 89 8c 24 90 03 00 00 48 89 9c  $....H..$....H..
	0x01d0 24 98 03 00 00 eb 00 f2 0f 10 8c 24 40 03 00 00  $..........$@...
	0x01e0 f2 0f 11 8c 24 68 03 00 00 f2 0f 11 8c 24 60 03  ....$h.......$`.
	0x01f0 00 00 48 8b 8c 24 98 03 00 00 48 8b 9c 24 90 03  ..H..$....H..$..
	0x0200 00 00 48 89 9c 24 d0 03 00 00 48 89 8c 24 d8 03  ..H..$....H..$..
	0x0210 00 00 f2 0f 10 8c 24 60 03 00 00 f2 0f 11 8c 24  ......$`.......$
	0x0220 50 03 00 00 48 8b 8c 24 d0 03 00 00 48 8b 9c 24  P...H..$....H..$
	0x0230 d8 03 00 00 48 89 8c 24 c0 03 00 00 48 89 9c 24  ....H..$....H..$
	0x0240 c8 03 00 00 48 85 c9 75 05 e9 b1 00 00 00 0f 57  ....H..u.......W
	0x0250 c9 0f 11 8c 24 10 04 00 00 48 8d 8c 24 10 04 00  ....$....H..$...
	0x0260 00 48 89 8c 24 78 03 00 00 84 01 48 8d 1d 00 00  .H..$x.....H....
	0x0270 00 00 48 89 9c 24 10 04 00 00 48 8d 35 00 00 00  ..H..$....H.5...
	0x0280 00 48 89 b4 24 18 04 00 00 84 01 eb 00 48 89 8c  .H..$........H..
	0x0290 24 20 04 00 00 48 c7 84 24 28 04 00 00 01 00 00  $ ...H..$(......
	0x02a0 00 48 c7 84 24 30 04 00 00 01 00 00 00 48 89 0c  .H..$0.......H..
	0x02b0 24 48 c7 44 24 08 01 00 00 00 48 c7 44 24 10 01  $H.D$.....H.D$..
	0x02c0 00 00 00 e8 00 00 00 00 eb 00 f2 0f 10 05 00 00  ................
	0x02d0 00 00 f2 0f 58 84 24 50 03 00 00 f2 0f 11 05 00  ....X.$P........
	0x02e0 00 00 00 eb 00 eb 00 48 8b 84 24 58 03 00 00 48  .......H..$X...H
	0x02f0 ff c0 48 89 84 24 58 03 00 00 e9 92 fd ff ff eb  ..H..$X.........
	0x0300 c9 48 8b 8c 24 78 07 00 00 0f 57 c9 f2 48 0f 2a  .H..$x....W..H.*
	0x0310 c9 f2 0f 5e 8c 24 48 08 00 00 f2 0f 11 8c 24 70  ...^.$H.......$p
	0x0320 03 00 00 f2 0f 11 8c 24 40 03 00 00 0f 57 c9 0f  .......$@....W..
	0x0330 11 8c 24 90 03 00 00 48 8d 05 00 00 00 00 48 8d  ..$....H......H.
	0x0340 15 00 00 00 00 e9 8d fe ff ff eb 00 48 8b 84 24  ............H..$
	0x0350 48 03 00 00 48 ff c0 48 89 84 24 48 03 00 00 e9  H...H..H..$H....
	0x0360 ff fc ff ff 48 8b ac 24 b8 0a 00 00 48 81 c4 c0  ....H..$....H...
	0x0370 0a 00 00 c3 e8 00 00 00 00 e9 82 fc ff ff        ..............
	rel 5+4 t=16 TLS+0
	rel 51+4 t=8 "".createTera+0
	rel 77+4 t=8 runtime.duffcopy+168
	rel 191+4 t=8 runtime.duffcopy+168
	rel 251+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 358+4 t=15 go.itab.*errors.errorString,error+0
	rel 622+4 t=15 type.string+0
	rel 637+4 t=15 ""..stmp_35+0
	rel 708+4 t=8 log.Fatal+0
	rel 718+4 t=15 "".F+0
	rel 735+4 t=15 "".F+0
	rel 826+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 833+4 t=15 go.itab.*errors.errorString,error+0
	rel 885+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkTeraP_Iter STEXT size=906 args=0x8 locals=0x790
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:165)	TEXT	"".BenchmarkTeraP_Iter(SB), ABIInternal, $1936-8
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:165)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_iter_test.go:165)	LEAQ	-1808(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_iter_test.go:165)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_iter_test.go:165)	JLS	896
	0x001b 00027 (pointer_vs_value/code/benchmark_iter_test.go:165)	SUBQ	$1936, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_iter_test.go:165)	MOVQ	BP, 1928(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_iter_test.go:165)	LEAQ	1928(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:165)	FUNCDATA	$0, gclocals·d1d75e5bd153dd111cd8f1bc3c181073(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:165)	FUNCDATA	$1, gclocals·23e2d8290dcda2759e89083815bda6b5(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:165)	FUNCDATA	$2, gclocals·b0e64627e016c4f22ade44055db6bcad(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:165)	FUNCDATA	$3, "".BenchmarkTeraP_Iter.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:167)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:167)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:167)	CALL	"".createTera(SB)
	0x0037 00055 (pointer_vs_value/code/benchmark_iter_test.go:167)	PCDATA	$0, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_iter_test.go:167)	PCDATA	$1, $1
	0x0037 00055 (pointer_vs_value/code/benchmark_iter_test.go:167)	LEAQ	"".o+1096(SP), DI
	0x003f 00063 (pointer_vs_value/code/benchmark_iter_test.go:167)	MOVQ	SP, SI
	0x0042 00066 (pointer_vs_value/code/benchmark_iter_test.go:167)	PCDATA	$0, $0
	0x0042 00066 (pointer_vs_value/code/benchmark_iter_test.go:167)	DUFFCOPY	$168
	0x0055 00085 (pointer_vs_value/code/benchmark_iter_test.go:169)	MOVQ	$0, "".i+840(SP)
	0x0061 00097 (pointer_vs_value/code/benchmark_iter_test.go:169)	PCDATA	$0, $-2
	0x0061 00097 (pointer_vs_value/code/benchmark_iter_test.go:169)	PCDATA	$1, $-2
	0x0061 00097 (pointer_vs_value/code/benchmark_iter_test.go:169)	JMP	99
	0x0063 00099 (pointer_vs_value/code/benchmark_iter_test.go:169)	PCDATA	$0, $2
	0x0063 00099 (pointer_vs_value/code/benchmark_iter_test.go:169)	PCDATA	$1, $1
	0x0063 00099 (pointer_vs_value/code/benchmark_iter_test.go:169)	MOVQ	"".b+1944(SP), AX
	0x006b 00107 (pointer_vs_value/code/benchmark_iter_test.go:169)	TESTB	AL, (AX)
	0x006d 00109 (pointer_vs_value/code/benchmark_iter_test.go:169)	PCDATA	$0, $0
	0x006d 00109 (pointer_vs_value/code/benchmark_iter_test.go:169)	MOVQ	264(AX), AX
	0x0074 00116 (pointer_vs_value/code/benchmark_iter_test.go:169)	CMPQ	"".i+840(SP), AX
	0x007c 00124 (pointer_vs_value/code/benchmark_iter_test.go:169)	JLT	131
	0x007e 00126 (pointer_vs_value/code/benchmark_iter_test.go:169)	JMP	880
	0x0083 00131 (pointer_vs_value/code/benchmark_iter_test.go:170)	MOVQ	$0, "".a+856(SP)
	0x008f 00143 (pointer_vs_value/code/benchmark_iter_test.go:170)	JMP	145
	0x0091 00145 (pointer_vs_value/code/benchmark_iter_test.go:170)	CMPQ	"".a+856(SP), $100000000
	0x009d 00157 (pointer_vs_value/code/benchmark_iter_test.go:170)	JLT	164
	0x009f 00159 (pointer_vs_value/code/benchmark_iter_test.go:170)	JMP	854
	0x00a4 00164 (pointer_vs_value/code/benchmark_iter_test.go:171)	PCDATA	$0, $2
	0x00a4 00164 (pointer_vs_value/code/benchmark_iter_test.go:171)	LEAQ	"".o+1096(SP), AX
	0x00ac 00172 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVQ	AX, ""..autotmp_15+912(SP)
	0x00b4 00180 (pointer_vs_value/code/benchmark_iter_test.go:171)	PCDATA	$0, $0
	0x00b4 00180 (pointer_vs_value/code/benchmark_iter_test.go:171)	PCDATA	$1, $2
	0x00b4 00180 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVQ	AX, "".o+888(SP)
	0x00bc 00188 (pointer_vs_value/code/benchmark_iter_test.go:171)	XORPS	X0, X0
	0x00bf 00191 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVSD	X0, "".~r1+832(SP)
	0x00c8 00200 (pointer_vs_value/code/benchmark_iter_test.go:171)	XORPS	X1, X1
	0x00cb 00203 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVUPS	X1, "".~r2+928(SP)
	0x00d3 00211 (pointer_vs_value/code/func.go:80)	PCDATA	$0, $2
	0x00d3 00211 (pointer_vs_value/code/func.go:80)	MOVQ	"".o+888(SP), AX
	0x00db 00219 (pointer_vs_value/code/func.go:80)	TESTB	AL, (AX)
	0x00dd 00221 (<unknown line number>)	NOP
	0x00dd 00221 (pointer_vs_value/code/func.go:80)	PCDATA	$0, $0
	0x00dd 00221 (pointer_vs_value/code/func.go:80)	MOVSD	208(AX), X1
	0x00e5 00229 (pointer_vs_value/code/func.go:80)	UCOMISD	X0, X1
	0x00e9 00233 (pointer_vs_value/code/func.go:80)	JNE	767
	0x00ef 00239 (pointer_vs_value/code/func.go:80)	JPC	246
	0x00f1 00241 (pointer_vs_value/code/func.go:80)	JMP	767
	0x00f6 00246 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $2
	0x00f6 00246 (pointer_vs_value/code/func.go:81)	PCDATA	$1, $3
	0x00f6 00246 (pointer_vs_value/code/func.go:81)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x00fd 00253 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $0
	0x00fd 00253 (pointer_vs_value/code/func.go:81)	MOVQ	AX, errors.text+960(SP)
	0x0105 00261 (pointer_vs_value/code/func.go:81)	MOVQ	$22, errors.text+968(SP)
	0x0111 00273 (pointer_vs_value/code/func.go:81)	XORPS	X1, X1
	0x0114 00276 (pointer_vs_value/code/func.go:81)	MOVUPS	X1, "".~R0+944(SP)
	0x011c 00284 (<unknown line number>)	NOP
	0x011c 00284 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x011c 00284 ($GOROOT/src/errors/errors.go:59)	XORPS	X1, X1
	0x011f 00287 ($GOROOT/src/errors/errors.go:59)	MOVUPS	X1, ""..autotmp_17+1040(SP)
	0x0127 00295 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x0127 00295 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x0127 00295 ($GOROOT/src/errors/errors.go:59)	LEAQ	""..autotmp_17+1040(SP), CX
	0x012f 00303 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_16+904(SP)
	0x0137 00311 ($GOROOT/src/errors/errors.go:59)	TESTB	AL, (CX)
	0x0139 00313 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+968(SP), DX
	0x0141 00321 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $4
	0x0141 00321 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $1
	0x0141 00321 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+960(SP), BX
	0x0149 00329 ($GOROOT/src/errors/errors.go:59)	MOVQ	DX, ""..autotmp_17+1048(SP)
	0x0151 00337 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x0151 00337 ($GOROOT/src/errors/errors.go:59)	MOVQ	BX, ""..autotmp_17+1040(SP)
	0x0159 00345 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_13+920(SP)
	0x0161 00353 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $5
	0x0161 00353 (pointer_vs_value/code/func.go:81)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x0168 00360 (pointer_vs_value/code/func.go:81)	MOVQ	DX, ""..autotmp_18+1024(SP)
	0x0170 00368 (pointer_vs_value/code/func.go:81)	MOVQ	CX, ""..autotmp_18+1032(SP)
	0x0178 00376 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $3
	0x0178 00376 (pointer_vs_value/code/func.go:81)	PCDATA	$1, $5
	0x0178 00376 (pointer_vs_value/code/func.go:81)	MOVQ	DX, "".~R0+944(SP)
	0x0180 00384 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $0
	0x0180 00384 (pointer_vs_value/code/func.go:81)	MOVQ	CX, "".~R0+952(SP)
	0x0188 00392 (pointer_vs_value/code/func.go:81)	JMP	394
	0x018a 00394 (pointer_vs_value/code/benchmark_iter_test.go:171)	PCDATA	$0, $3
	0x018a 00394 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVQ	"".~R0+952(SP), CX
	0x0192 00402 (pointer_vs_value/code/benchmark_iter_test.go:171)	PCDATA	$1, $1
	0x0192 00402 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVQ	"".~R0+944(SP), BX
	0x019a 00410 (pointer_vs_value/code/benchmark_iter_test.go:171)	PCDATA	$1, $6
	0x019a 00410 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVQ	BX, ""..autotmp_19+1008(SP)
	0x01a2 00418 (pointer_vs_value/code/benchmark_iter_test.go:171)	PCDATA	$0, $0
	0x01a2 00418 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVQ	CX, ""..autotmp_19+1016(SP)
	0x01aa 00426 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVSD	X0, "".~r1+832(SP)
	0x01b3 00435 (pointer_vs_value/code/benchmark_iter_test.go:171)	PCDATA	$0, $3
	0x01b3 00435 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVQ	""..autotmp_19+1016(SP), CX
	0x01bb 00443 (pointer_vs_value/code/benchmark_iter_test.go:171)	PCDATA	$1, $1
	0x01bb 00443 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVQ	""..autotmp_19+1008(SP), BX
	0x01c3 00451 (pointer_vs_value/code/benchmark_iter_test.go:171)	PCDATA	$1, $7
	0x01c3 00451 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVQ	BX, "".~r2+928(SP)
	0x01cb 00459 (pointer_vs_value/code/benchmark_iter_test.go:171)	PCDATA	$0, $0
	0x01cb 00459 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVQ	CX, "".~r2+936(SP)
	0x01d3 00467 (pointer_vs_value/code/benchmark_iter_test.go:171)	JMP	469
	0x01d5 00469 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVSD	"".~r1+832(SP), X1
	0x01de 00478 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVSD	X1, ""..autotmp_21+872(SP)
	0x01e7 00487 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVSD	X1, ""..autotmp_4+864(SP)
	0x01f0 00496 (pointer_vs_value/code/benchmark_iter_test.go:171)	PCDATA	$0, $3
	0x01f0 00496 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVQ	"".~r2+936(SP), CX
	0x01f8 00504 (pointer_vs_value/code/benchmark_iter_test.go:171)	PCDATA	$1, $1
	0x01f8 00504 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVQ	"".~r2+928(SP), BX
	0x0200 00512 (pointer_vs_value/code/benchmark_iter_test.go:171)	PCDATA	$1, $8
	0x0200 00512 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVQ	BX, ""..autotmp_5+992(SP)
	0x0208 00520 (pointer_vs_value/code/benchmark_iter_test.go:171)	PCDATA	$0, $0
	0x0208 00520 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVQ	CX, ""..autotmp_5+1000(SP)
	0x0210 00528 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVSD	""..autotmp_4+864(SP), X1
	0x0219 00537 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVSD	X1, "".f+848(SP)
	0x0222 00546 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVQ	""..autotmp_5+992(SP), CX
	0x022a 00554 (pointer_vs_value/code/benchmark_iter_test.go:171)	PCDATA	$0, $6
	0x022a 00554 (pointer_vs_value/code/benchmark_iter_test.go:171)	PCDATA	$1, $1
	0x022a 00554 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVQ	""..autotmp_5+1000(SP), BX
	0x0232 00562 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVQ	CX, "".err+976(SP)
	0x023a 00570 (pointer_vs_value/code/benchmark_iter_test.go:171)	PCDATA	$0, $0
	0x023a 00570 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVQ	BX, "".err+984(SP)
	0x0242 00578 (<unknown line number>)	NOP
	0x0242 00578 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	CX, CX
	0x0245 00581 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	588
	0x0247 00583 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	765
	0x024c 00588 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $9
	0x024c 00588 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X1, X1
	0x024f 00591 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X1, ""..autotmp_14+1056(SP)
	0x0257 00599 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x0257 00599 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x0257 00599 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_14+1056(SP), CX
	0x025f 00607 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_23+896(SP)
	0x0267 00615 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x0269 00617 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x0269 00617 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), BX
	0x0270 00624 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x0270 00624 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	BX, ""..autotmp_14+1056(SP)
	0x0278 00632 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $7
	0x0278 00632 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_36(SB), SI
	0x027f 00639 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x027f 00639 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	SI, ""..autotmp_14+1064(SP)
	0x0287 00647 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (CX)
	0x0289 00649 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	651
	0x028b 00651 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_22+1072(SP)
	0x0293 00659 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_22+1080(SP)
	0x029f 00671 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_22+1088(SP)
	0x02ab 00683 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x02ab 00683 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, (SP)
	0x02af 00687 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x02b8 00696 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x02c1 00705 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x02c6 00710 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	712
	0x02c8 00712 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x02d0 00720 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+848(SP), X0
	0x02d9 00729 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x02e1 00737 (pointer_vs_value/code/benchmark_iter_test.go:171)	JMP	739
	0x02e3 00739 (pointer_vs_value/code/benchmark_iter_test.go:170)	PCDATA	$0, $-2
	0x02e3 00739 (pointer_vs_value/code/benchmark_iter_test.go:170)	PCDATA	$1, $-2
	0x02e3 00739 (pointer_vs_value/code/benchmark_iter_test.go:170)	JMP	741
	0x02e5 00741 (pointer_vs_value/code/benchmark_iter_test.go:170)	PCDATA	$0, $0
	0x02e5 00741 (pointer_vs_value/code/benchmark_iter_test.go:170)	PCDATA	$1, $1
	0x02e5 00741 (pointer_vs_value/code/benchmark_iter_test.go:170)	MOVQ	"".a+856(SP), AX
	0x02ed 00749 (pointer_vs_value/code/benchmark_iter_test.go:170)	INCQ	AX
	0x02f0 00752 (pointer_vs_value/code/benchmark_iter_test.go:170)	MOVQ	AX, "".a+856(SP)
	0x02f8 00760 (pointer_vs_value/code/benchmark_iter_test.go:170)	JMP	145
	0x02fd 00765 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x02fd 00765 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x02fd 00765 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	712
	0x02ff 00767 (pointer_vs_value/code/func.go:83)	PCDATA	$0, $3
	0x02ff 00767 (pointer_vs_value/code/func.go:83)	PCDATA	$1, $2
	0x02ff 00767 (pointer_vs_value/code/func.go:83)	MOVQ	"".o+888(SP), CX
	0x0307 00775 (pointer_vs_value/code/func.go:83)	TESTB	AL, (CX)
	0x0309 00777 (pointer_vs_value/code/func.go:83)	PCDATA	$0, $4
	0x0309 00777 (pointer_vs_value/code/func.go:83)	PCDATA	$1, $1
	0x0309 00777 (pointer_vs_value/code/func.go:83)	MOVQ	"".o+888(SP), BX
	0x0311 00785 (pointer_vs_value/code/func.go:83)	TESTB	AL, (BX)
	0x0313 00787 (pointer_vs_value/code/func.go:83)	PCDATA	$0, $6
	0x0313 00787 (pointer_vs_value/code/func.go:83)	MOVQ	(CX), CX
	0x0316 00790 (pointer_vs_value/code/func.go:83)	XORPS	X1, X1
	0x0319 00793 (pointer_vs_value/code/func.go:83)	CVTSQ2SD	CX, X1
	0x031e 00798 (pointer_vs_value/code/func.go:83)	PCDATA	$0, $0
	0x031e 00798 (pointer_vs_value/code/func.go:83)	DIVSD	208(BX), X1
	0x0326 00806 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVSD	X1, ""..autotmp_20+880(SP)
	0x032f 00815 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVSD	X1, "".~r1+832(SP)
	0x0338 00824 (pointer_vs_value/code/benchmark_iter_test.go:171)	PCDATA	$1, $7
	0x0338 00824 (pointer_vs_value/code/benchmark_iter_test.go:171)	XORPS	X1, X1
	0x033b 00827 (pointer_vs_value/code/benchmark_iter_test.go:171)	MOVUPS	X1, "".~r2+928(SP)
	0x0343 00835 (pointer_vs_value/code/benchmark_iter_test.go:171)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x034a 00842 (pointer_vs_value/code/benchmark_iter_test.go:171)	LEAQ	go.itab.*errors.errorString,error(SB), DX
	0x0351 00849 (pointer_vs_value/code/benchmark_iter_test.go:171)	JMP	469
	0x0356 00854 (pointer_vs_value/code/benchmark_iter_test.go:169)	PCDATA	$0, $-2
	0x0356 00854 (pointer_vs_value/code/benchmark_iter_test.go:169)	PCDATA	$1, $-2
	0x0356 00854 (pointer_vs_value/code/benchmark_iter_test.go:169)	JMP	856
	0x0358 00856 (pointer_vs_value/code/benchmark_iter_test.go:169)	PCDATA	$0, $0
	0x0358 00856 (pointer_vs_value/code/benchmark_iter_test.go:169)	PCDATA	$1, $1
	0x0358 00856 (pointer_vs_value/code/benchmark_iter_test.go:169)	MOVQ	"".i+840(SP), AX
	0x0360 00864 (pointer_vs_value/code/benchmark_iter_test.go:169)	INCQ	AX
	0x0363 00867 (pointer_vs_value/code/benchmark_iter_test.go:169)	MOVQ	AX, "".i+840(SP)
	0x036b 00875 (pointer_vs_value/code/benchmark_iter_test.go:169)	JMP	99
	0x0370 00880 (<unknown line number>)	PCDATA	$0, $-2
	0x0370 00880 (<unknown line number>)	PCDATA	$1, $-2
	0x0370 00880 (<unknown line number>)	MOVQ	1928(SP), BP
	0x0378 00888 (<unknown line number>)	ADDQ	$1936, SP
	0x037f 00895 (<unknown line number>)	RET
	0x0380 00896 (<unknown line number>)	NOP
	0x0380 00896 (pointer_vs_value/code/benchmark_iter_test.go:165)	PCDATA	$1, $-1
	0x0380 00896 (pointer_vs_value/code/benchmark_iter_test.go:165)	PCDATA	$0, $-1
	0x0380 00896 (pointer_vs_value/code/benchmark_iter_test.go:165)	CALL	runtime.morestack_noctxt(SB)
	0x0385 00901 (pointer_vs_value/code/benchmark_iter_test.go:165)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 f0 f8 ff  eH..%....H..$...
	0x0010 ff 48 3b 41 10 0f 86 65 03 00 00 48 81 ec 90 07  .H;A...e...H....
	0x0020 00 00 48 89 ac 24 88 07 00 00 48 8d ac 24 88 07  ..H..$....H..$..
	0x0030 00 00 e8 00 00 00 00 48 8d bc 24 48 04 00 00 48  .......H..$H...H
	0x0040 89 e6 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00  ..H.l$.H.l$.....
	0x0050 00 48 8b 6d 00 48 c7 84 24 48 03 00 00 00 00 00  .H.m.H..$H......
	0x0060 00 eb 00 48 8b 84 24 98 07 00 00 84 00 48 8b 80  ...H..$......H..
	0x0070 08 01 00 00 48 39 84 24 48 03 00 00 7c 05 e9 ed  ....H9.$H...|...
	0x0080 02 00 00 48 c7 84 24 58 03 00 00 00 00 00 00 eb  ...H..$X........
	0x0090 00 48 81 bc 24 58 03 00 00 00 e1 f5 05 7c 05 e9  .H..$X.......|..
	0x00a0 b2 02 00 00 48 8d 84 24 48 04 00 00 48 89 84 24  ....H..$H...H..$
	0x00b0 90 03 00 00 48 89 84 24 78 03 00 00 0f 57 c0 f2  ....H..$x....W..
	0x00c0 0f 11 84 24 40 03 00 00 0f 57 c9 0f 11 8c 24 a0  ...$@....W....$.
	0x00d0 03 00 00 48 8b 84 24 78 03 00 00 84 00 f2 0f 10  ...H..$x........
	0x00e0 88 d0 00 00 00 66 0f 2e c8 0f 85 10 02 00 00 7b  .....f.........{
	0x00f0 05 e9 09 02 00 00 48 8d 05 00 00 00 00 48 89 84  ......H......H..
	0x0100 24 c0 03 00 00 48 c7 84 24 c8 03 00 00 16 00 00  $....H..$.......
	0x0110 00 0f 57 c9 0f 11 8c 24 b0 03 00 00 0f 57 c9 0f  ..W....$.....W..
	0x0120 11 8c 24 10 04 00 00 48 8d 8c 24 10 04 00 00 48  ..$....H..$....H
	0x0130 89 8c 24 88 03 00 00 84 01 48 8b 94 24 c8 03 00  ..$......H..$...
	0x0140 00 48 8b 9c 24 c0 03 00 00 48 89 94 24 18 04 00  .H..$....H..$...
	0x0150 00 48 89 9c 24 10 04 00 00 48 89 8c 24 98 03 00  .H..$....H..$...
	0x0160 00 48 8d 15 00 00 00 00 48 89 94 24 00 04 00 00  .H......H..$....
	0x0170 48 89 8c 24 08 04 00 00 48 89 94 24 b0 03 00 00  H..$....H..$....
	0x0180 48 89 8c 24 b8 03 00 00 eb 00 48 8b 8c 24 b8 03  H..$......H..$..
	0x0190 00 00 48 8b 9c 24 b0 03 00 00 48 89 9c 24 f0 03  ..H..$....H..$..
	0x01a0 00 00 48 89 8c 24 f8 03 00 00 f2 0f 11 84 24 40  ..H..$........$@
	0x01b0 03 00 00 48 8b 8c 24 f8 03 00 00 48 8b 9c 24 f0  ...H..$....H..$.
	0x01c0 03 00 00 48 89 9c 24 a0 03 00 00 48 89 8c 24 a8  ...H..$....H..$.
	0x01d0 03 00 00 eb 00 f2 0f 10 8c 24 40 03 00 00 f2 0f  .........$@.....
	0x01e0 11 8c 24 68 03 00 00 f2 0f 11 8c 24 60 03 00 00  ..$h.......$`...
	0x01f0 48 8b 8c 24 a8 03 00 00 48 8b 9c 24 a0 03 00 00  H..$....H..$....
	0x0200 48 89 9c 24 e0 03 00 00 48 89 8c 24 e8 03 00 00  H..$....H..$....
	0x0210 f2 0f 10 8c 24 60 03 00 00 f2 0f 11 8c 24 50 03  ....$`.......$P.
	0x0220 00 00 48 8b 8c 24 e0 03 00 00 48 8b 9c 24 e8 03  ..H..$....H..$..
	0x0230 00 00 48 89 8c 24 d0 03 00 00 48 89 9c 24 d8 03  ..H..$....H..$..
	0x0240 00 00 48 85 c9 75 05 e9 b1 00 00 00 0f 57 c9 0f  ..H..u.......W..
	0x0250 11 8c 24 20 04 00 00 48 8d 8c 24 20 04 00 00 48  ..$ ...H..$ ...H
	0x0260 89 8c 24 80 03 00 00 84 01 48 8d 1d 00 00 00 00  ..$......H......
	0x0270 48 89 9c 24 20 04 00 00 48 8d 35 00 00 00 00 48  H..$ ...H.5....H
	0x0280 89 b4 24 28 04 00 00 84 01 eb 00 48 89 8c 24 30  ..$(.......H..$0
	0x0290 04 00 00 48 c7 84 24 38 04 00 00 01 00 00 00 48  ...H..$8.......H
	0x02a0 c7 84 24 40 04 00 00 01 00 00 00 48 89 0c 24 48  ..$@.......H..$H
	0x02b0 c7 44 24 08 01 00 00 00 48 c7 44 24 10 01 00 00  .D$.....H.D$....
	0x02c0 00 e8 00 00 00 00 eb 00 f2 0f 10 05 00 00 00 00  ................
	0x02d0 f2 0f 58 84 24 50 03 00 00 f2 0f 11 05 00 00 00  ..X.$P..........
	0x02e0 00 eb 00 eb 00 48 8b 84 24 58 03 00 00 48 ff c0  .....H..$X...H..
	0x02f0 48 89 84 24 58 03 00 00 e9 94 fd ff ff eb c9 48  H..$X..........H
	0x0300 8b 8c 24 78 03 00 00 84 01 48 8b 9c 24 78 03 00  ..$x.....H..$x..
	0x0310 00 84 03 48 8b 09 0f 57 c9 f2 48 0f 2a c9 f2 0f  ...H...W..H.*...
	0x0320 5e 8b d0 00 00 00 f2 0f 11 8c 24 70 03 00 00 f2  ^.........$p....
	0x0330 0f 11 8c 24 40 03 00 00 0f 57 c9 0f 11 8c 24 a0  ...$@....W....$.
	0x0340 03 00 00 48 8d 05 00 00 00 00 48 8d 15 00 00 00  ...H......H.....
	0x0350 00 e9 7f fe ff ff eb 00 48 8b 84 24 48 03 00 00  ........H..$H...
	0x0360 48 ff c0 48 89 84 24 48 03 00 00 e9 f3 fc ff ff  H..H..$H........
	0x0370 48 8b ac 24 88 07 00 00 48 81 c4 90 07 00 00 c3  H..$....H.......
	0x0380 e8 00 00 00 00 e9 76 fc ff ff                    ......v...
	rel 5+4 t=16 TLS+0
	rel 51+4 t=8 "".createTera+0
	rel 77+4 t=8 runtime.duffcopy+168
	rel 249+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 356+4 t=15 go.itab.*errors.errorString,error+0
	rel 620+4 t=15 type.string+0
	rel 635+4 t=15 ""..stmp_36+0
	rel 706+4 t=8 log.Fatal+0
	rel 716+4 t=15 "".F+0
	rel 733+4 t=15 "".F+0
	rel 838+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 845+4 t=15 go.itab.*errors.errorString,error+0
	rel 897+4 t=8 runtime.morestack_noctxt+0
"".BenchmarkTeraIfc_Iter STEXT size=719 args=0x8 locals=0x720
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:177)	TEXT	"".BenchmarkTeraIfc_Iter(SB), ABIInternal, $1824-8
	0x0000 00000 (pointer_vs_value/code/benchmark_iter_test.go:177)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/benchmark_iter_test.go:177)	LEAQ	-1696(SP), AX
	0x0011 00017 (pointer_vs_value/code/benchmark_iter_test.go:177)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/benchmark_iter_test.go:177)	JLS	709
	0x001b 00027 (pointer_vs_value/code/benchmark_iter_test.go:177)	SUBQ	$1824, SP
	0x0022 00034 (pointer_vs_value/code/benchmark_iter_test.go:177)	MOVQ	BP, 1816(SP)
	0x002a 00042 (pointer_vs_value/code/benchmark_iter_test.go:177)	LEAQ	1816(SP), BP
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:177)	FUNCDATA	$0, gclocals·73de87619823f6747f37fd4c152f5b42(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:177)	FUNCDATA	$1, gclocals·75eb9047c64157d7f284fa6df3ad33a3(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:177)	FUNCDATA	$2, gclocals·437d171b9e6f84c40356e01ae02b710f(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:177)	FUNCDATA	$3, "".BenchmarkTeraIfc_Iter.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:179)	PCDATA	$0, $1
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:179)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/benchmark_iter_test.go:179)	LEAQ	type."".tera(SB), AX
	0x0039 00057 (pointer_vs_value/code/benchmark_iter_test.go:179)	PCDATA	$0, $0
	0x0039 00057 (pointer_vs_value/code/benchmark_iter_test.go:179)	MOVQ	AX, (SP)
	0x003d 00061 (pointer_vs_value/code/benchmark_iter_test.go:179)	CALL	runtime.newobject(SB)
	0x0042 00066 (pointer_vs_value/code/benchmark_iter_test.go:179)	PCDATA	$0, $1
	0x0042 00066 (pointer_vs_value/code/benchmark_iter_test.go:179)	MOVQ	8(SP), AX
	0x0047 00071 (pointer_vs_value/code/benchmark_iter_test.go:179)	PCDATA	$0, $0
	0x0047 00071 (pointer_vs_value/code/benchmark_iter_test.go:179)	PCDATA	$1, $1
	0x0047 00071 (pointer_vs_value/code/benchmark_iter_test.go:179)	MOVQ	AX, "".&o+888(SP)
	0x004f 00079 (pointer_vs_value/code/benchmark_iter_test.go:179)	CALL	"".createTera(SB)
	0x0054 00084 (pointer_vs_value/code/benchmark_iter_test.go:179)	PCDATA	$0, $2
	0x0054 00084 (pointer_vs_value/code/benchmark_iter_test.go:179)	MOVQ	"".&o+888(SP), DI
	0x005c 00092 (pointer_vs_value/code/benchmark_iter_test.go:179)	PCDATA	$0, $-2
	0x005c 00092 (pointer_vs_value/code/benchmark_iter_test.go:179)	PCDATA	$1, $-2
	0x005c 00092 (pointer_vs_value/code/benchmark_iter_test.go:179)	CMPL	runtime.writeBarrier(SB), $0
	0x0063 00099 (pointer_vs_value/code/benchmark_iter_test.go:179)	JEQ	106
	0x0065 00101 (pointer_vs_value/code/benchmark_iter_test.go:179)	JMP	637
	0x006a 00106 (pointer_vs_value/code/benchmark_iter_test.go:179)	MOVQ	SP, SI
	0x006d 00109 (pointer_vs_value/code/benchmark_iter_test.go:179)	DUFFCOPY	$168
	0x0080 00128 (pointer_vs_value/code/benchmark_iter_test.go:179)	JMP	130
	0x0082 00130 (pointer_vs_value/code/benchmark_iter_test.go:181)	PCDATA	$0, $0
	0x0082 00130 (pointer_vs_value/code/benchmark_iter_test.go:181)	PCDATA	$1, $1
	0x0082 00130 (pointer_vs_value/code/benchmark_iter_test.go:181)	MOVQ	$0, "".i+832(SP)
	0x008e 00142 (pointer_vs_value/code/benchmark_iter_test.go:181)	JMP	144
	0x0090 00144 (pointer_vs_value/code/benchmark_iter_test.go:181)	PCDATA	$0, $1
	0x0090 00144 (pointer_vs_value/code/benchmark_iter_test.go:181)	MOVQ	"".b+1832(SP), AX
	0x0098 00152 (pointer_vs_value/code/benchmark_iter_test.go:181)	TESTB	AL, (AX)
	0x009a 00154 (pointer_vs_value/code/benchmark_iter_test.go:181)	PCDATA	$0, $0
	0x009a 00154 (pointer_vs_value/code/benchmark_iter_test.go:181)	MOVQ	264(AX), AX
	0x00a1 00161 (pointer_vs_value/code/benchmark_iter_test.go:181)	CMPQ	"".i+832(SP), AX
	0x00a9 00169 (pointer_vs_value/code/benchmark_iter_test.go:181)	JLT	176
	0x00ab 00171 (pointer_vs_value/code/benchmark_iter_test.go:181)	JMP	621
	0x00b0 00176 (pointer_vs_value/code/benchmark_iter_test.go:182)	MOVQ	$0, "".a+848(SP)
	0x00bc 00188 (pointer_vs_value/code/benchmark_iter_test.go:182)	JMP	190
	0x00be 00190 (pointer_vs_value/code/benchmark_iter_test.go:182)	CMPQ	"".a+848(SP), $100000000
	0x00ca 00202 (pointer_vs_value/code/benchmark_iter_test.go:182)	JLT	209
	0x00cc 00204 (pointer_vs_value/code/benchmark_iter_test.go:182)	JMP	595
	0x00d1 00209 (pointer_vs_value/code/benchmark_iter_test.go:183)	PCDATA	$0, $1
	0x00d1 00209 (pointer_vs_value/code/benchmark_iter_test.go:183)	MOVQ	"".&o+888(SP), AX
	0x00d9 00217 (pointer_vs_value/code/benchmark_iter_test.go:183)	PCDATA	$0, $0
	0x00d9 00217 (pointer_vs_value/code/benchmark_iter_test.go:183)	PCDATA	$1, $2
	0x00d9 00217 (pointer_vs_value/code/benchmark_iter_test.go:183)	MOVQ	AX, ""..autotmp_9+872(SP)
	0x00e1 00225 (pointer_vs_value/code/benchmark_iter_test.go:183)	XORPS	X0, X0
	0x00e4 00228 (pointer_vs_value/code/benchmark_iter_test.go:183)	MOVUPS	X0, ""..autotmp_11+944(SP)
	0x00ec 00236 (pointer_vs_value/code/benchmark_iter_test.go:183)	PCDATA	$0, $1
	0x00ec 00236 (pointer_vs_value/code/benchmark_iter_test.go:183)	PCDATA	$1, $1
	0x00ec 00236 (pointer_vs_value/code/benchmark_iter_test.go:183)	MOVQ	""..autotmp_9+872(SP), AX
	0x00f4 00244 (pointer_vs_value/code/benchmark_iter_test.go:183)	PCDATA	$0, $3
	0x00f4 00244 (pointer_vs_value/code/benchmark_iter_test.go:183)	LEAQ	go.itab.*"".tera,"".obj(SB), CX
	0x00fb 00251 (pointer_vs_value/code/benchmark_iter_test.go:183)	PCDATA	$0, $1
	0x00fb 00251 (pointer_vs_value/code/benchmark_iter_test.go:183)	MOVQ	CX, (SP)
	0x00ff 00255 (pointer_vs_value/code/benchmark_iter_test.go:183)	PCDATA	$0, $0
	0x00ff 00255 (pointer_vs_value/code/benchmark_iter_test.go:183)	MOVQ	AX, 8(SP)
	0x0104 00260 (pointer_vs_value/code/benchmark_iter_test.go:183)	CALL	"".calcIfc(SB)
	0x0109 00265 (pointer_vs_value/code/benchmark_iter_test.go:183)	MOVSD	16(SP), X0
	0x010f 00271 (pointer_vs_value/code/benchmark_iter_test.go:183)	MOVSD	X0, ""..autotmp_10+864(SP)
	0x0118 00280 (pointer_vs_value/code/benchmark_iter_test.go:183)	PCDATA	$0, $1
	0x0118 00280 (pointer_vs_value/code/benchmark_iter_test.go:183)	MOVQ	32(SP), AX
	0x011d 00285 (pointer_vs_value/code/benchmark_iter_test.go:183)	MOVQ	24(SP), CX
	0x0122 00290 (pointer_vs_value/code/benchmark_iter_test.go:183)	PCDATA	$1, $3
	0x0122 00290 (pointer_vs_value/code/benchmark_iter_test.go:183)	MOVQ	CX, ""..autotmp_11+944(SP)
	0x012a 00298 (pointer_vs_value/code/benchmark_iter_test.go:183)	PCDATA	$0, $0
	0x012a 00298 (pointer_vs_value/code/benchmark_iter_test.go:183)	MOVQ	AX, ""..autotmp_11+952(SP)
	0x0132 00306 (pointer_vs_value/code/benchmark_iter_test.go:183)	MOVSD	""..autotmp_10+864(SP), X0
	0x013b 00315 (pointer_vs_value/code/benchmark_iter_test.go:183)	MOVSD	X0, ""..autotmp_4+856(SP)
	0x0144 00324 (pointer_vs_value/code/benchmark_iter_test.go:183)	PCDATA	$0, $1
	0x0144 00324 (pointer_vs_value/code/benchmark_iter_test.go:183)	MOVQ	""..autotmp_11+952(SP), AX
	0x014c 00332 (pointer_vs_value/code/benchmark_iter_test.go:183)	PCDATA	$1, $1
	0x014c 00332 (pointer_vs_value/code/benchmark_iter_test.go:183)	MOVQ	""..autotmp_11+944(SP), CX
	0x0154 00340 (pointer_vs_value/code/benchmark_iter_test.go:183)	PCDATA	$1, $4
	0x0154 00340 (pointer_vs_value/code/benchmark_iter_test.go:183)	MOVQ	CX, ""..autotmp_5+912(SP)
	0x015c 00348 (pointer_vs_value/code/benchmark_iter_test.go:183)	PCDATA	$0, $0
	0x015c 00348 (pointer_vs_value/code/benchmark_iter_test.go:183)	MOVQ	AX, ""..autotmp_5+920(SP)
	0x0164 00356 (pointer_vs_value/code/benchmark_iter_test.go:183)	MOVSD	""..autotmp_4+856(SP), X0
	0x016d 00365 (pointer_vs_value/code/benchmark_iter_test.go:183)	MOVSD	X0, "".f+840(SP)
	0x0176 00374 (pointer_vs_value/code/benchmark_iter_test.go:183)	PCDATA	$0, $1
	0x0176 00374 (pointer_vs_value/code/benchmark_iter_test.go:183)	MOVQ	""..autotmp_5+920(SP), AX
	0x017e 00382 (pointer_vs_value/code/benchmark_iter_test.go:183)	PCDATA	$1, $1
	0x017e 00382 (pointer_vs_value/code/benchmark_iter_test.go:183)	MOVQ	""..autotmp_5+912(SP), CX
	0x0186 00390 (pointer_vs_value/code/benchmark_iter_test.go:183)	MOVQ	CX, "".err+896(SP)
	0x018e 00398 (pointer_vs_value/code/benchmark_iter_test.go:183)	PCDATA	$0, $0
	0x018e 00398 (pointer_vs_value/code/benchmark_iter_test.go:183)	MOVQ	AX, "".err+904(SP)
	0x0196 00406 (<unknown line number>)	NOP
	0x0196 00406 (pointer_vs_value/code/benchmark_invocation_test.go:149)	TESTQ	CX, CX
	0x0199 00409 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JNE	416
	0x019b 00411 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	593
	0x01a0 00416 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $5
	0x01a0 00416 (pointer_vs_value/code/benchmark_invocation_test.go:150)	XORPS	X0, X0
	0x01a3 00419 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVUPS	X0, ""..autotmp_12+928(SP)
	0x01ab 00427 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x01ab 00427 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$1, $1
	0x01ab 00427 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..autotmp_12+928(SP), AX
	0x01b3 00435 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_14+880(SP)
	0x01bb 00443 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x01bd 00445 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $3
	0x01bd 00445 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	type.string(SB), CX
	0x01c4 00452 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x01c4 00452 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	CX, ""..autotmp_12+928(SP)
	0x01cc 00460 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $4
	0x01cc 00460 (pointer_vs_value/code/benchmark_invocation_test.go:150)	LEAQ	""..stmp_37(SB), DX
	0x01d3 00467 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $1
	0x01d3 00467 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	DX, ""..autotmp_12+936(SP)
	0x01db 00475 (pointer_vs_value/code/benchmark_invocation_test.go:150)	TESTB	AL, (AX)
	0x01dd 00477 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	479
	0x01df 00479 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, ""..autotmp_13+960(SP)
	0x01e7 00487 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_13+968(SP)
	0x01f3 00499 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, ""..autotmp_13+976(SP)
	0x01ff 00511 (pointer_vs_value/code/benchmark_invocation_test.go:150)	PCDATA	$0, $0
	0x01ff 00511 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	AX, (SP)
	0x0203 00515 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 8(SP)
	0x020c 00524 (pointer_vs_value/code/benchmark_invocation_test.go:150)	MOVQ	$1, 16(SP)
	0x0215 00533 (pointer_vs_value/code/benchmark_invocation_test.go:150)	CALL	log.Fatal(SB)
	0x021a 00538 (pointer_vs_value/code/benchmark_invocation_test.go:150)	JMP	540
	0x021c 00540 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	"".F(SB), X0
	0x0224 00548 (pointer_vs_value/code/benchmark_invocation_test.go:152)	ADDSD	"".f+840(SP), X0
	0x022d 00557 (pointer_vs_value/code/benchmark_invocation_test.go:152)	MOVSD	X0, "".F(SB)
	0x0235 00565 (pointer_vs_value/code/benchmark_iter_test.go:183)	JMP	567
	0x0237 00567 (pointer_vs_value/code/benchmark_iter_test.go:182)	PCDATA	$0, $-2
	0x0237 00567 (pointer_vs_value/code/benchmark_iter_test.go:182)	PCDATA	$1, $-2
	0x0237 00567 (pointer_vs_value/code/benchmark_iter_test.go:182)	JMP	569
	0x0239 00569 (pointer_vs_value/code/benchmark_iter_test.go:182)	PCDATA	$0, $0
	0x0239 00569 (pointer_vs_value/code/benchmark_iter_test.go:182)	PCDATA	$1, $1
	0x0239 00569 (pointer_vs_value/code/benchmark_iter_test.go:182)	MOVQ	"".a+848(SP), AX
	0x0241 00577 (pointer_vs_value/code/benchmark_iter_test.go:182)	INCQ	AX
	0x0244 00580 (pointer_vs_value/code/benchmark_iter_test.go:182)	MOVQ	AX, "".a+848(SP)
	0x024c 00588 (pointer_vs_value/code/benchmark_iter_test.go:182)	JMP	190
	0x0251 00593 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$0, $-2
	0x0251 00593 (pointer_vs_value/code/benchmark_invocation_test.go:149)	PCDATA	$1, $-2
	0x0251 00593 (pointer_vs_value/code/benchmark_invocation_test.go:149)	JMP	540
	0x0253 00595 (pointer_vs_value/code/benchmark_iter_test.go:181)	JMP	597
	0x0255 00597 (pointer_vs_value/code/benchmark_iter_test.go:181)	PCDATA	$0, $0
	0x0255 00597 (pointer_vs_value/code/benchmark_iter_test.go:181)	PCDATA	$1, $1
	0x0255 00597 (pointer_vs_value/code/benchmark_iter_test.go:181)	MOVQ	"".i+832(SP), AX
	0x025d 00605 (pointer_vs_value/code/benchmark_iter_test.go:181)	INCQ	AX
	0x0260 00608 (pointer_vs_value/code/benchmark_iter_test.go:181)	MOVQ	AX, "".i+832(SP)
	0x0268 00616 (pointer_vs_value/code/benchmark_iter_test.go:181)	JMP	144
	0x026d 00621 (<unknown line number>)	PCDATA	$0, $-2
	0x026d 00621 (<unknown line number>)	PCDATA	$1, $-2
	0x026d 00621 (<unknown line number>)	MOVQ	1816(SP), BP
	0x0275 00629 (<unknown line number>)	ADDQ	$1824, SP
	0x027c 00636 (<unknown line number>)	RET
	0x027d 00637 (pointer_vs_value/code/benchmark_iter_test.go:179)	MOVQ	DI, AX
	0x0280 00640 (pointer_vs_value/code/benchmark_iter_test.go:179)	LEAQ	""..autotmp_15+984(SP), DI
	0x0288 00648 (pointer_vs_value/code/benchmark_iter_test.go:179)	MOVQ	SP, SI
	0x028b 00651 (pointer_vs_value/code/benchmark_iter_test.go:179)	DUFFCOPY	$168
	0x029e 00670 (pointer_vs_value/code/benchmark_iter_test.go:179)	LEAQ	type."".tera(SB), CX
	0x02a5 00677 (pointer_vs_value/code/benchmark_iter_test.go:179)	MOVQ	CX, (SP)
	0x02a9 00681 (pointer_vs_value/code/benchmark_iter_test.go:179)	MOVQ	AX, 8(SP)
	0x02ae 00686 (pointer_vs_value/code/benchmark_iter_test.go:179)	LEAQ	""..autotmp_15+984(SP), AX
	0x02b6 00694 (pointer_vs_value/code/benchmark_iter_test.go:179)	MOVQ	AX, 16(SP)
	0x02bb 00699 (pointer_vs_value/code/benchmark_iter_test.go:179)	CALL	runtime.typedmemmove(SB)
	0x02c0 00704 (pointer_vs_value/code/benchmark_iter_test.go:179)	JMP	130
	0x02c5 00709 (pointer_vs_value/code/benchmark_iter_test.go:179)	NOP
	0x02c5 00709 (pointer_vs_value/code/benchmark_iter_test.go:177)	PCDATA	$1, $-1
	0x02c5 00709 (pointer_vs_value/code/benchmark_iter_test.go:177)	PCDATA	$0, $-1
	0x02c5 00709 (pointer_vs_value/code/benchmark_iter_test.go:177)	CALL	runtime.morestack_noctxt(SB)
	0x02ca 00714 (pointer_vs_value/code/benchmark_iter_test.go:177)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 60 f9 ff  eH..%....H..$`..
	0x0010 ff 48 3b 41 10 0f 86 aa 02 00 00 48 81 ec 20 07  .H;A.......H.. .
	0x0020 00 00 48 89 ac 24 18 07 00 00 48 8d ac 24 18 07  ..H..$....H..$..
	0x0030 00 00 48 8d 05 00 00 00 00 48 89 04 24 e8 00 00  ..H......H..$...
	0x0040 00 00 48 8b 44 24 08 48 89 84 24 78 03 00 00 e8  ..H.D$.H..$x....
	0x0050 00 00 00 00 48 8b bc 24 78 03 00 00 83 3d 00 00  ....H..$x....=..
	0x0060 00 00 00 74 05 e9 13 02 00 00 48 89 e6 48 89 6c  ...t......H..H.l
	0x0070 24 f0 48 8d 6c 24 f0 e8 00 00 00 00 48 8b 6d 00  $.H.l$......H.m.
	0x0080 eb 00 48 c7 84 24 40 03 00 00 00 00 00 00 eb 00  ..H..$@.........
	0x0090 48 8b 84 24 28 07 00 00 84 00 48 8b 80 08 01 00  H..$(.....H.....
	0x00a0 00 48 39 84 24 40 03 00 00 7c 05 e9 bd 01 00 00  .H9.$@...|......
	0x00b0 48 c7 84 24 50 03 00 00 00 00 00 00 eb 00 48 81  H..$P.........H.
	0x00c0 bc 24 50 03 00 00 00 e1 f5 05 7c 05 e9 82 01 00  .$P.......|.....
	0x00d0 00 48 8b 84 24 78 03 00 00 48 89 84 24 68 03 00  .H..$x...H..$h..
	0x00e0 00 0f 57 c0 0f 11 84 24 b0 03 00 00 48 8b 84 24  ..W....$....H..$
	0x00f0 68 03 00 00 48 8d 0d 00 00 00 00 48 89 0c 24 48  h...H......H..$H
	0x0100 89 44 24 08 e8 00 00 00 00 f2 0f 10 44 24 10 f2  .D$.........D$..
	0x0110 0f 11 84 24 60 03 00 00 48 8b 44 24 20 48 8b 4c  ...$`...H.D$ H.L
	0x0120 24 18 48 89 8c 24 b0 03 00 00 48 89 84 24 b8 03  $.H..$....H..$..
	0x0130 00 00 f2 0f 10 84 24 60 03 00 00 f2 0f 11 84 24  ......$`.......$
	0x0140 58 03 00 00 48 8b 84 24 b8 03 00 00 48 8b 8c 24  X...H..$....H..$
	0x0150 b0 03 00 00 48 89 8c 24 90 03 00 00 48 89 84 24  ....H..$....H..$
	0x0160 98 03 00 00 f2 0f 10 84 24 58 03 00 00 f2 0f 11  ........$X......
	0x0170 84 24 48 03 00 00 48 8b 84 24 98 03 00 00 48 8b  .$H...H..$....H.
	0x0180 8c 24 90 03 00 00 48 89 8c 24 80 03 00 00 48 89  .$....H..$....H.
	0x0190 84 24 88 03 00 00 48 85 c9 75 05 e9 b1 00 00 00  .$....H..u......
	0x01a0 0f 57 c0 0f 11 84 24 a0 03 00 00 48 8d 84 24 a0  .W....$....H..$.
	0x01b0 03 00 00 48 89 84 24 70 03 00 00 84 00 48 8d 0d  ...H..$p.....H..
	0x01c0 00 00 00 00 48 89 8c 24 a0 03 00 00 48 8d 15 00  ....H..$....H...
	0x01d0 00 00 00 48 89 94 24 a8 03 00 00 84 00 eb 00 48  ...H..$........H
	0x01e0 89 84 24 c0 03 00 00 48 c7 84 24 c8 03 00 00 01  ..$....H..$.....
	0x01f0 00 00 00 48 c7 84 24 d0 03 00 00 01 00 00 00 48  ...H..$........H
	0x0200 89 04 24 48 c7 44 24 08 01 00 00 00 48 c7 44 24  ..$H.D$.....H.D$
	0x0210 10 01 00 00 00 e8 00 00 00 00 eb 00 f2 0f 10 05  ................
	0x0220 00 00 00 00 f2 0f 58 84 24 48 03 00 00 f2 0f 11  ......X.$H......
	0x0230 05 00 00 00 00 eb 00 eb 00 48 8b 84 24 50 03 00  .........H..$P..
	0x0240 00 48 ff c0 48 89 84 24 50 03 00 00 e9 6d fe ff  .H..H..$P....m..
	0x0250 ff eb c9 eb 00 48 8b 84 24 40 03 00 00 48 ff c0  .....H..$@...H..
	0x0260 48 89 84 24 40 03 00 00 e9 23 fe ff ff 48 8b ac  H..$@....#...H..
	0x0270 24 18 07 00 00 48 81 c4 20 07 00 00 c3 48 89 f8  $....H.. ....H..
	0x0280 48 8d bc 24 d8 03 00 00 48 89 e6 48 89 6c 24 f0  H..$....H..H.l$.
	0x0290 48 8d 6c 24 f0 e8 00 00 00 00 48 8b 6d 00 48 8d  H.l$......H.m.H.
	0x02a0 0d 00 00 00 00 48 89 0c 24 48 89 44 24 08 48 8d  .....H..$H.D$.H.
	0x02b0 84 24 d8 03 00 00 48 89 44 24 10 e8 00 00 00 00  .$....H.D$......
	0x02c0 e9 bd fd ff ff e8 00 00 00 00 e9 31 fd ff ff     ...........1...
	rel 5+4 t=16 TLS+0
	rel 53+4 t=15 type."".tera+0
	rel 62+4 t=8 runtime.newobject+0
	rel 80+4 t=8 "".createTera+0
	rel 94+4 t=15 runtime.writeBarrier+-1
	rel 120+4 t=8 runtime.duffcopy+168
	rel 247+4 t=15 go.itab.*"".tera,"".obj+0
	rel 261+4 t=8 "".calcIfc+0
	rel 448+4 t=15 type.string+0
	rel 463+4 t=15 ""..stmp_37+0
	rel 534+4 t=8 log.Fatal+0
	rel 544+4 t=15 "".F+0
	rel 561+4 t=15 "".F+0
	rel 662+4 t=8 runtime.duffcopy+168
	rel 673+4 t=15 type."".tera+0
	rel 700+4 t=8 runtime.typedmemmove+0
	rel 710+4 t=8 runtime.morestack_noctxt+0
"".calcMicro STEXT size=302 args=0x28 locals=0x58
	0x0000 00000 (pointer_vs_value/code/func.go:7)	TEXT	"".calcMicro(SB), ABIInternal, $88-40
	0x0000 00000 (pointer_vs_value/code/func.go:7)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/func.go:7)	CMPQ	SP, 16(CX)
	0x000d 00013 (pointer_vs_value/code/func.go:7)	JLS	292
	0x0013 00019 (pointer_vs_value/code/func.go:7)	SUBQ	$88, SP
	0x0017 00023 (pointer_vs_value/code/func.go:7)	MOVQ	BP, 80(SP)
	0x001c 00028 (pointer_vs_value/code/func.go:7)	LEAQ	80(SP), BP
	0x0021 00033 (pointer_vs_value/code/func.go:7)	FUNCDATA	$0, gclocals·93a03b66991fbacd0832258df0b070ca(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:7)	FUNCDATA	$1, gclocals·01e1b63536c25b40df1463d614d33c5c(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:7)	FUNCDATA	$2, gclocals·2a7a16a1870e896beb8f3e3383a645e4(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:7)	PCDATA	$0, $0
	0x0021 00033 (pointer_vs_value/code/func.go:7)	PCDATA	$1, $0
	0x0021 00033 (pointer_vs_value/code/func.go:7)	XORPS	X0, X0
	0x0024 00036 (pointer_vs_value/code/func.go:7)	MOVSD	X0, "".~r1+112(SP)
	0x002a 00042 (pointer_vs_value/code/func.go:7)	XORPS	X1, X1
	0x002d 00045 (pointer_vs_value/code/func.go:7)	MOVUPS	X1, "".~r2+120(SP)
	0x0032 00050 (pointer_vs_value/code/func.go:8)	MOVSD	"".o+104(SP), X1
	0x0038 00056 (pointer_vs_value/code/func.go:8)	UCOMISD	X0, X1
	0x003c 00060 (pointer_vs_value/code/func.go:8)	JNE	249
	0x0042 00066 (pointer_vs_value/code/func.go:8)	JPC	73
	0x0044 00068 (pointer_vs_value/code/func.go:8)	JMP	249
	0x0049 00073 (pointer_vs_value/code/func.go:9)	PCDATA	$0, $1
	0x0049 00073 (pointer_vs_value/code/func.go:9)	PCDATA	$1, $1
	0x0049 00073 (pointer_vs_value/code/func.go:9)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x0050 00080 (pointer_vs_value/code/func.go:9)	PCDATA	$0, $0
	0x0050 00080 (pointer_vs_value/code/func.go:9)	MOVQ	AX, errors.text+48(SP)
	0x0055 00085 (pointer_vs_value/code/func.go:9)	MOVQ	$22, errors.text+56(SP)
	0x005e 00094 (pointer_vs_value/code/func.go:9)	XORPS	X0, X0
	0x0061 00097 (pointer_vs_value/code/func.go:9)	MOVUPS	X0, "".~R0+32(SP)
	0x0066 00102 (<unknown line number>)	NOP
	0x0066 00102 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x0066 00102 ($GOROOT/src/errors/errors.go:59)	LEAQ	type.errors.errorString(SB), AX
	0x006d 00109 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $0
	0x006d 00109 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, (SP)
	0x0071 00113 ($GOROOT/src/errors/errors.go:59)	CALL	runtime.newobject(SB)
	0x0076 00118 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $2
	0x0076 00118 ($GOROOT/src/errors/errors.go:59)	MOVQ	8(SP), DI
	0x007b 00123 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $2
	0x007b 00123 ($GOROOT/src/errors/errors.go:59)	MOVQ	DI, ""..autotmp_6+16(SP)
	0x0080 00128 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+56(SP), AX
	0x0085 00133 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x0085 00133 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x0085 00133 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+48(SP), CX
	0x008a 00138 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, 8(DI)
	0x008e 00142 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $-2
	0x008e 00142 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $-2
	0x008e 00142 ($GOROOT/src/errors/errors.go:59)	CMPL	runtime.writeBarrier(SB), $0
	0x0095 00149 ($GOROOT/src/errors/errors.go:59)	JEQ	153
	0x0097 00151 ($GOROOT/src/errors/errors.go:59)	JMP	239
	0x0099 00153 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, (DI)
	0x009c 00156 ($GOROOT/src/errors/errors.go:59)	JMP	158
	0x009e 00158 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x009e 00158 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $0
	0x009e 00158 ($GOROOT/src/errors/errors.go:59)	MOVQ	""..autotmp_6+16(SP), AX
	0x00a3 00163 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, ""..autotmp_5+24(SP)
	0x00a8 00168 (pointer_vs_value/code/func.go:9)	PCDATA	$0, $4
	0x00a8 00168 (pointer_vs_value/code/func.go:9)	LEAQ	go.itab.*errors.errorString,error(SB), CX
	0x00af 00175 (pointer_vs_value/code/func.go:9)	MOVQ	CX, ""..autotmp_7+64(SP)
	0x00b4 00180 (pointer_vs_value/code/func.go:9)	MOVQ	AX, ""..autotmp_7+72(SP)
	0x00b9 00185 (pointer_vs_value/code/func.go:9)	PCDATA	$0, $1
	0x00b9 00185 (pointer_vs_value/code/func.go:9)	PCDATA	$1, $4
	0x00b9 00185 (pointer_vs_value/code/func.go:9)	MOVQ	CX, "".~R0+32(SP)
	0x00be 00190 (pointer_vs_value/code/func.go:9)	PCDATA	$0, $0
	0x00be 00190 (pointer_vs_value/code/func.go:9)	MOVQ	AX, "".~R0+40(SP)
	0x00c3 00195 (pointer_vs_value/code/func.go:9)	JMP	197
	0x00c5 00197 (pointer_vs_value/code/func.go:9)	XORPS	X0, X0
	0x00c8 00200 (pointer_vs_value/code/func.go:9)	MOVSD	X0, "".~r1+112(SP)
	0x00ce 00206 (pointer_vs_value/code/func.go:9)	MOVQ	"".~R0+32(SP), AX
	0x00d3 00211 (pointer_vs_value/code/func.go:9)	PCDATA	$0, $5
	0x00d3 00211 (pointer_vs_value/code/func.go:9)	PCDATA	$1, $0
	0x00d3 00211 (pointer_vs_value/code/func.go:9)	MOVQ	"".~R0+40(SP), CX
	0x00d8 00216 (pointer_vs_value/code/func.go:9)	PCDATA	$1, $5
	0x00d8 00216 (pointer_vs_value/code/func.go:9)	MOVQ	AX, "".~r2+120(SP)
	0x00dd 00221 (pointer_vs_value/code/func.go:9)	PCDATA	$0, $0
	0x00dd 00221 (pointer_vs_value/code/func.go:9)	MOVQ	CX, "".~r2+128(SP)
	0x00e5 00229 (pointer_vs_value/code/func.go:9)	MOVQ	80(SP), BP
	0x00ea 00234 (pointer_vs_value/code/func.go:9)	ADDQ	$88, SP
	0x00ee 00238 (pointer_vs_value/code/func.go:9)	RET
	0x00ef 00239 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $-2
	0x00ef 00239 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $-2
	0x00ef 00239 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, AX
	0x00f2 00242 ($GOROOT/src/errors/errors.go:59)	CALL	runtime.gcWriteBarrier(SB)
	0x00f7 00247 ($GOROOT/src/errors/errors.go:59)	JMP	158
	0x00f9 00249 (pointer_vs_value/code/func.go:11)	PCDATA	$0, $0
	0x00f9 00249 (pointer_vs_value/code/func.go:11)	PCDATA	$1, $0
	0x00f9 00249 (pointer_vs_value/code/func.go:11)	MOVQ	"".o+96(SP), AX
	0x00fe 00254 (pointer_vs_value/code/func.go:11)	XORPS	X0, X0
	0x0101 00257 (pointer_vs_value/code/func.go:11)	CVTSQ2SD	AX, X0
	0x0106 00262 (pointer_vs_value/code/func.go:11)	DIVSD	"".o+104(SP), X0
	0x010c 00268 (pointer_vs_value/code/func.go:11)	MOVSD	X0, "".~r1+112(SP)
	0x0112 00274 (pointer_vs_value/code/func.go:11)	PCDATA	$1, $5
	0x0112 00274 (pointer_vs_value/code/func.go:11)	XORPS	X0, X0
	0x0115 00277 (pointer_vs_value/code/func.go:11)	MOVUPS	X0, "".~r2+120(SP)
	0x011a 00282 (pointer_vs_value/code/func.go:11)	MOVQ	80(SP), BP
	0x011f 00287 (pointer_vs_value/code/func.go:11)	ADDQ	$88, SP
	0x0123 00291 (pointer_vs_value/code/func.go:11)	RET
	0x0124 00292 (pointer_vs_value/code/func.go:11)	NOP
	0x0124 00292 (pointer_vs_value/code/func.go:7)	PCDATA	$1, $-1
	0x0124 00292 (pointer_vs_value/code/func.go:7)	PCDATA	$0, $-1
	0x0124 00292 (pointer_vs_value/code/func.go:7)	CALL	runtime.morestack_noctxt(SB)
	0x0129 00297 (pointer_vs_value/code/func.go:7)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 11  eH..%....H;a....
	0x0010 01 00 00 48 83 ec 58 48 89 6c 24 50 48 8d 6c 24  ...H..XH.l$PH.l$
	0x0020 50 0f 57 c0 f2 0f 11 44 24 70 0f 57 c9 0f 11 4c  P.W....D$p.W...L
	0x0030 24 78 f2 0f 10 4c 24 68 66 0f 2e c8 0f 85 b7 00  $x...L$hf.......
	0x0040 00 00 7b 05 e9 b0 00 00 00 48 8d 05 00 00 00 00  ..{......H......
	0x0050 48 89 44 24 30 48 c7 44 24 38 16 00 00 00 0f 57  H.D$0H.D$8.....W
	0x0060 c0 0f 11 44 24 20 48 8d 05 00 00 00 00 48 89 04  ...D$ H......H..
	0x0070 24 e8 00 00 00 00 48 8b 7c 24 08 48 89 7c 24 10  $.....H.|$.H.|$.
	0x0080 48 8b 44 24 38 48 8b 4c 24 30 48 89 47 08 83 3d  H.D$8H.L$0H.G..=
	0x0090 00 00 00 00 00 74 02 eb 56 48 89 0f eb 00 48 8b  .....t..VH....H.
	0x00a0 44 24 10 48 89 44 24 18 48 8d 0d 00 00 00 00 48  D$.H.D$.H......H
	0x00b0 89 4c 24 40 48 89 44 24 48 48 89 4c 24 20 48 89  .L$@H.D$HH.L$ H.
	0x00c0 44 24 28 eb 00 0f 57 c0 f2 0f 11 44 24 70 48 8b  D$(...W....D$pH.
	0x00d0 44 24 20 48 8b 4c 24 28 48 89 44 24 78 48 89 8c  D$ H.L$(H.D$xH..
	0x00e0 24 80 00 00 00 48 8b 6c 24 50 48 83 c4 58 c3 48  $....H.l$PH..X.H
	0x00f0 89 c8 e8 00 00 00 00 eb a5 48 8b 44 24 60 0f 57  .........H.D$`.W
	0x0100 c0 f2 48 0f 2a c0 f2 0f 5e 44 24 68 f2 0f 11 44  ..H.*...^D$h...D
	0x0110 24 70 0f 57 c0 0f 11 44 24 78 48 8b 6c 24 50 48  $p.W...D$xH.l$PH
	0x0120 83 c4 58 c3 e8 00 00 00 00 e9 d2 fe ff ff        ..X...........
	rel 5+4 t=16 TLS+0
	rel 76+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 105+4 t=15 type.errors.errorString+0
	rel 114+4 t=8 runtime.newobject+0
	rel 144+4 t=15 runtime.writeBarrier+-1
	rel 171+4 t=15 go.itab.*errors.errorString,error+0
	rel 243+4 t=8 runtime.gcWriteBarrier+0
	rel 293+4 t=8 runtime.morestack_noctxt+0
"".calcTiny STEXT size=320 args=0x38 locals=0x58
	0x0000 00000 (pointer_vs_value/code/func.go:14)	TEXT	"".calcTiny(SB), ABIInternal, $88-56
	0x0000 00000 (pointer_vs_value/code/func.go:14)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/func.go:14)	CMPQ	SP, 16(CX)
	0x000d 00013 (pointer_vs_value/code/func.go:14)	JLS	310
	0x0013 00019 (pointer_vs_value/code/func.go:14)	SUBQ	$88, SP
	0x0017 00023 (pointer_vs_value/code/func.go:14)	MOVQ	BP, 80(SP)
	0x001c 00028 (pointer_vs_value/code/func.go:14)	LEAQ	80(SP), BP
	0x0021 00033 (pointer_vs_value/code/func.go:14)	FUNCDATA	$0, gclocals·12675c0b32afa565be5dd9326bfb8b94(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:14)	FUNCDATA	$1, gclocals·ca4617d647f88ce0ec7dd4d79922985d(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:14)	FUNCDATA	$2, gclocals·2a7a16a1870e896beb8f3e3383a645e4(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:14)	PCDATA	$0, $0
	0x0021 00033 (pointer_vs_value/code/func.go:14)	PCDATA	$1, $0
	0x0021 00033 (pointer_vs_value/code/func.go:14)	XORPS	X0, X0
	0x0024 00036 (pointer_vs_value/code/func.go:14)	MOVSD	X0, "".~r1+128(SP)
	0x002d 00045 (pointer_vs_value/code/func.go:14)	XORPS	X1, X1
	0x0030 00048 (pointer_vs_value/code/func.go:14)	MOVUPS	X1, "".~r2+136(SP)
	0x0038 00056 (pointer_vs_value/code/func.go:15)	MOVSD	"".o+104(SP), X1
	0x003e 00062 (pointer_vs_value/code/func.go:15)	UCOMISD	X0, X1
	0x0042 00066 (pointer_vs_value/code/func.go:15)	JNE	261
	0x0048 00072 (pointer_vs_value/code/func.go:15)	JPC	79
	0x004a 00074 (pointer_vs_value/code/func.go:15)	JMP	261
	0x004f 00079 (pointer_vs_value/code/func.go:16)	PCDATA	$0, $1
	0x004f 00079 (pointer_vs_value/code/func.go:16)	PCDATA	$1, $1
	0x004f 00079 (pointer_vs_value/code/func.go:16)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x0056 00086 (pointer_vs_value/code/func.go:16)	PCDATA	$0, $0
	0x0056 00086 (pointer_vs_value/code/func.go:16)	MOVQ	AX, errors.text+48(SP)
	0x005b 00091 (pointer_vs_value/code/func.go:16)	MOVQ	$22, errors.text+56(SP)
	0x0064 00100 (pointer_vs_value/code/func.go:16)	XORPS	X0, X0
	0x0067 00103 (pointer_vs_value/code/func.go:16)	MOVUPS	X0, "".~R0+32(SP)
	0x006c 00108 (<unknown line number>)	NOP
	0x006c 00108 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x006c 00108 ($GOROOT/src/errors/errors.go:59)	LEAQ	type.errors.errorString(SB), AX
	0x0073 00115 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $0
	0x0073 00115 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, (SP)
	0x0077 00119 ($GOROOT/src/errors/errors.go:59)	CALL	runtime.newobject(SB)
	0x007c 00124 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $2
	0x007c 00124 ($GOROOT/src/errors/errors.go:59)	MOVQ	8(SP), DI
	0x0081 00129 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $2
	0x0081 00129 ($GOROOT/src/errors/errors.go:59)	MOVQ	DI, ""..autotmp_6+16(SP)
	0x0086 00134 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+56(SP), AX
	0x008b 00139 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x008b 00139 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x008b 00139 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+48(SP), CX
	0x0090 00144 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, 8(DI)
	0x0094 00148 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $-2
	0x0094 00148 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $-2
	0x0094 00148 ($GOROOT/src/errors/errors.go:59)	CMPL	runtime.writeBarrier(SB), $0
	0x009b 00155 ($GOROOT/src/errors/errors.go:59)	JEQ	159
	0x009d 00157 ($GOROOT/src/errors/errors.go:59)	JMP	251
	0x009f 00159 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, (DI)
	0x00a2 00162 ($GOROOT/src/errors/errors.go:59)	JMP	164
	0x00a4 00164 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x00a4 00164 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x00a4 00164 ($GOROOT/src/errors/errors.go:59)	MOVQ	""..autotmp_6+16(SP), AX
	0x00a9 00169 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, ""..autotmp_5+24(SP)
	0x00ae 00174 (pointer_vs_value/code/func.go:16)	PCDATA	$0, $4
	0x00ae 00174 (pointer_vs_value/code/func.go:16)	LEAQ	go.itab.*errors.errorString,error(SB), CX
	0x00b5 00181 (pointer_vs_value/code/func.go:16)	MOVQ	CX, ""..autotmp_7+64(SP)
	0x00ba 00186 (pointer_vs_value/code/func.go:16)	MOVQ	AX, ""..autotmp_7+72(SP)
	0x00bf 00191 (pointer_vs_value/code/func.go:16)	PCDATA	$0, $1
	0x00bf 00191 (pointer_vs_value/code/func.go:16)	PCDATA	$1, $5
	0x00bf 00191 (pointer_vs_value/code/func.go:16)	MOVQ	CX, "".~R0+32(SP)
	0x00c4 00196 (pointer_vs_value/code/func.go:16)	PCDATA	$0, $0
	0x00c4 00196 (pointer_vs_value/code/func.go:16)	MOVQ	AX, "".~R0+40(SP)
	0x00c9 00201 (pointer_vs_value/code/func.go:16)	JMP	203
	0x00cb 00203 (pointer_vs_value/code/func.go:16)	XORPS	X0, X0
	0x00ce 00206 (pointer_vs_value/code/func.go:16)	MOVSD	X0, "".~r1+128(SP)
	0x00d7 00215 (pointer_vs_value/code/func.go:16)	MOVQ	"".~R0+32(SP), AX
	0x00dc 00220 (pointer_vs_value/code/func.go:16)	PCDATA	$0, $5
	0x00dc 00220 (pointer_vs_value/code/func.go:16)	PCDATA	$1, $4
	0x00dc 00220 (pointer_vs_value/code/func.go:16)	MOVQ	"".~R0+40(SP), CX
	0x00e1 00225 (pointer_vs_value/code/func.go:16)	PCDATA	$1, $6
	0x00e1 00225 (pointer_vs_value/code/func.go:16)	MOVQ	AX, "".~r2+136(SP)
	0x00e9 00233 (pointer_vs_value/code/func.go:16)	PCDATA	$0, $0
	0x00e9 00233 (pointer_vs_value/code/func.go:16)	MOVQ	CX, "".~r2+144(SP)
	0x00f1 00241 (pointer_vs_value/code/func.go:16)	MOVQ	80(SP), BP
	0x00f6 00246 (pointer_vs_value/code/func.go:16)	ADDQ	$88, SP
	0x00fa 00250 (pointer_vs_value/code/func.go:16)	RET
	0x00fb 00251 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $-2
	0x00fb 00251 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $-2
	0x00fb 00251 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, AX
	0x00fe 00254 ($GOROOT/src/errors/errors.go:59)	CALL	runtime.gcWriteBarrier(SB)
	0x0103 00259 ($GOROOT/src/errors/errors.go:59)	JMP	164
	0x0105 00261 (pointer_vs_value/code/func.go:18)	PCDATA	$0, $0
	0x0105 00261 (pointer_vs_value/code/func.go:18)	PCDATA	$1, $0
	0x0105 00261 (pointer_vs_value/code/func.go:18)	MOVQ	"".o+96(SP), AX
	0x010a 00266 (pointer_vs_value/code/func.go:18)	XORPS	X0, X0
	0x010d 00269 (pointer_vs_value/code/func.go:18)	CVTSQ2SD	AX, X0
	0x0112 00274 (pointer_vs_value/code/func.go:18)	PCDATA	$1, $4
	0x0112 00274 (pointer_vs_value/code/func.go:18)	DIVSD	"".o+104(SP), X0
	0x0118 00280 (pointer_vs_value/code/func.go:18)	MOVSD	X0, "".~r1+128(SP)
	0x0121 00289 (pointer_vs_value/code/func.go:18)	PCDATA	$1, $6
	0x0121 00289 (pointer_vs_value/code/func.go:18)	XORPS	X0, X0
	0x0124 00292 (pointer_vs_value/code/func.go:18)	MOVUPS	X0, "".~r2+136(SP)
	0x012c 00300 (pointer_vs_value/code/func.go:18)	MOVQ	80(SP), BP
	0x0131 00305 (pointer_vs_value/code/func.go:18)	ADDQ	$88, SP
	0x0135 00309 (pointer_vs_value/code/func.go:18)	RET
	0x0136 00310 (pointer_vs_value/code/func.go:18)	NOP
	0x0136 00310 (pointer_vs_value/code/func.go:14)	PCDATA	$1, $-1
	0x0136 00310 (pointer_vs_value/code/func.go:14)	PCDATA	$0, $-1
	0x0136 00310 (pointer_vs_value/code/func.go:14)	CALL	runtime.morestack_noctxt(SB)
	0x013b 00315 (pointer_vs_value/code/func.go:14)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 23  eH..%....H;a...#
	0x0010 01 00 00 48 83 ec 58 48 89 6c 24 50 48 8d 6c 24  ...H..XH.l$PH.l$
	0x0020 50 0f 57 c0 f2 0f 11 84 24 80 00 00 00 0f 57 c9  P.W.....$.....W.
	0x0030 0f 11 8c 24 88 00 00 00 f2 0f 10 4c 24 68 66 0f  ...$.......L$hf.
	0x0040 2e c8 0f 85 bd 00 00 00 7b 05 e9 b6 00 00 00 48  ........{......H
	0x0050 8d 05 00 00 00 00 48 89 44 24 30 48 c7 44 24 38  ......H.D$0H.D$8
	0x0060 16 00 00 00 0f 57 c0 0f 11 44 24 20 48 8d 05 00  .....W...D$ H...
	0x0070 00 00 00 48 89 04 24 e8 00 00 00 00 48 8b 7c 24  ...H..$.....H.|$
	0x0080 08 48 89 7c 24 10 48 8b 44 24 38 48 8b 4c 24 30  .H.|$.H.D$8H.L$0
	0x0090 48 89 47 08 83 3d 00 00 00 00 00 74 02 eb 5c 48  H.G..=.....t..\H
	0x00a0 89 0f eb 00 48 8b 44 24 10 48 89 44 24 18 48 8d  ....H.D$.H.D$.H.
	0x00b0 0d 00 00 00 00 48 89 4c 24 40 48 89 44 24 48 48  .....H.L$@H.D$HH
	0x00c0 89 4c 24 20 48 89 44 24 28 eb 00 0f 57 c0 f2 0f  .L$ H.D$(...W...
	0x00d0 11 84 24 80 00 00 00 48 8b 44 24 20 48 8b 4c 24  ..$....H.D$ H.L$
	0x00e0 28 48 89 84 24 88 00 00 00 48 89 8c 24 90 00 00  (H..$....H..$...
	0x00f0 00 48 8b 6c 24 50 48 83 c4 58 c3 48 89 c8 e8 00  .H.l$PH..X.H....
	0x0100 00 00 00 eb 9f 48 8b 44 24 60 0f 57 c0 f2 48 0f  .....H.D$`.W..H.
	0x0110 2a c0 f2 0f 5e 44 24 68 f2 0f 11 84 24 80 00 00  *...^D$h....$...
	0x0120 00 0f 57 c0 0f 11 84 24 88 00 00 00 48 8b 6c 24  ..W....$....H.l$
	0x0130 50 48 83 c4 58 c3 e8 00 00 00 00 e9 c0 fe ff ff  PH..X...........
	rel 5+4 t=16 TLS+0
	rel 82+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 111+4 t=15 type.errors.errorString+0
	rel 120+4 t=8 runtime.newobject+0
	rel 150+4 t=15 runtime.writeBarrier+-1
	rel 177+4 t=15 go.itab.*errors.errorString,error+0
	rel 255+4 t=8 runtime.gcWriteBarrier+0
	rel 311+4 t=8 runtime.morestack_noctxt+0
"".calcMini STEXT size=320 args=0x78 locals=0x58
	0x0000 00000 (pointer_vs_value/code/func.go:21)	TEXT	"".calcMini(SB), ABIInternal, $88-120
	0x0000 00000 (pointer_vs_value/code/func.go:21)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/func.go:21)	CMPQ	SP, 16(CX)
	0x000d 00013 (pointer_vs_value/code/func.go:21)	JLS	310
	0x0013 00019 (pointer_vs_value/code/func.go:21)	SUBQ	$88, SP
	0x0017 00023 (pointer_vs_value/code/func.go:21)	MOVQ	BP, 80(SP)
	0x001c 00028 (pointer_vs_value/code/func.go:21)	LEAQ	80(SP), BP
	0x0021 00033 (pointer_vs_value/code/func.go:21)	FUNCDATA	$0, gclocals·855e2a05fb21bccb1db92a1d6cfa5452(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:21)	FUNCDATA	$1, gclocals·ca4617d647f88ce0ec7dd4d79922985d(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:21)	FUNCDATA	$2, gclocals·2a7a16a1870e896beb8f3e3383a645e4(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:21)	PCDATA	$0, $0
	0x0021 00033 (pointer_vs_value/code/func.go:21)	PCDATA	$1, $0
	0x0021 00033 (pointer_vs_value/code/func.go:21)	XORPS	X0, X0
	0x0024 00036 (pointer_vs_value/code/func.go:21)	MOVSD	X0, "".~r1+192(SP)
	0x002d 00045 (pointer_vs_value/code/func.go:21)	XORPS	X1, X1
	0x0030 00048 (pointer_vs_value/code/func.go:21)	MOVUPS	X1, "".~r2+200(SP)
	0x0038 00056 (pointer_vs_value/code/func.go:22)	MOVSD	"".o+120(SP), X1
	0x003e 00062 (pointer_vs_value/code/func.go:22)	UCOMISD	X0, X1
	0x0042 00066 (pointer_vs_value/code/func.go:22)	JNE	261
	0x0048 00072 (pointer_vs_value/code/func.go:22)	JPC	79
	0x004a 00074 (pointer_vs_value/code/func.go:22)	JMP	261
	0x004f 00079 (pointer_vs_value/code/func.go:23)	PCDATA	$0, $1
	0x004f 00079 (pointer_vs_value/code/func.go:23)	PCDATA	$1, $1
	0x004f 00079 (pointer_vs_value/code/func.go:23)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x0056 00086 (pointer_vs_value/code/func.go:23)	PCDATA	$0, $0
	0x0056 00086 (pointer_vs_value/code/func.go:23)	MOVQ	AX, errors.text+48(SP)
	0x005b 00091 (pointer_vs_value/code/func.go:23)	MOVQ	$22, errors.text+56(SP)
	0x0064 00100 (pointer_vs_value/code/func.go:23)	XORPS	X0, X0
	0x0067 00103 (pointer_vs_value/code/func.go:23)	MOVUPS	X0, "".~R0+32(SP)
	0x006c 00108 (<unknown line number>)	NOP
	0x006c 00108 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x006c 00108 ($GOROOT/src/errors/errors.go:59)	LEAQ	type.errors.errorString(SB), AX
	0x0073 00115 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $0
	0x0073 00115 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, (SP)
	0x0077 00119 ($GOROOT/src/errors/errors.go:59)	CALL	runtime.newobject(SB)
	0x007c 00124 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $2
	0x007c 00124 ($GOROOT/src/errors/errors.go:59)	MOVQ	8(SP), DI
	0x0081 00129 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $2
	0x0081 00129 ($GOROOT/src/errors/errors.go:59)	MOVQ	DI, ""..autotmp_6+16(SP)
	0x0086 00134 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+56(SP), AX
	0x008b 00139 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x008b 00139 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x008b 00139 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+48(SP), CX
	0x0090 00144 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, 8(DI)
	0x0094 00148 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $-2
	0x0094 00148 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $-2
	0x0094 00148 ($GOROOT/src/errors/errors.go:59)	CMPL	runtime.writeBarrier(SB), $0
	0x009b 00155 ($GOROOT/src/errors/errors.go:59)	JEQ	159
	0x009d 00157 ($GOROOT/src/errors/errors.go:59)	JMP	251
	0x009f 00159 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, (DI)
	0x00a2 00162 ($GOROOT/src/errors/errors.go:59)	JMP	164
	0x00a4 00164 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x00a4 00164 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x00a4 00164 ($GOROOT/src/errors/errors.go:59)	MOVQ	""..autotmp_6+16(SP), AX
	0x00a9 00169 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, ""..autotmp_5+24(SP)
	0x00ae 00174 (pointer_vs_value/code/func.go:23)	PCDATA	$0, $4
	0x00ae 00174 (pointer_vs_value/code/func.go:23)	LEAQ	go.itab.*errors.errorString,error(SB), CX
	0x00b5 00181 (pointer_vs_value/code/func.go:23)	MOVQ	CX, ""..autotmp_7+64(SP)
	0x00ba 00186 (pointer_vs_value/code/func.go:23)	MOVQ	AX, ""..autotmp_7+72(SP)
	0x00bf 00191 (pointer_vs_value/code/func.go:23)	PCDATA	$0, $1
	0x00bf 00191 (pointer_vs_value/code/func.go:23)	PCDATA	$1, $5
	0x00bf 00191 (pointer_vs_value/code/func.go:23)	MOVQ	CX, "".~R0+32(SP)
	0x00c4 00196 (pointer_vs_value/code/func.go:23)	PCDATA	$0, $0
	0x00c4 00196 (pointer_vs_value/code/func.go:23)	MOVQ	AX, "".~R0+40(SP)
	0x00c9 00201 (pointer_vs_value/code/func.go:23)	JMP	203
	0x00cb 00203 (pointer_vs_value/code/func.go:23)	XORPS	X0, X0
	0x00ce 00206 (pointer_vs_value/code/func.go:23)	MOVSD	X0, "".~r1+192(SP)
	0x00d7 00215 (pointer_vs_value/code/func.go:23)	MOVQ	"".~R0+32(SP), AX
	0x00dc 00220 (pointer_vs_value/code/func.go:23)	PCDATA	$0, $5
	0x00dc 00220 (pointer_vs_value/code/func.go:23)	PCDATA	$1, $4
	0x00dc 00220 (pointer_vs_value/code/func.go:23)	MOVQ	"".~R0+40(SP), CX
	0x00e1 00225 (pointer_vs_value/code/func.go:23)	PCDATA	$1, $6
	0x00e1 00225 (pointer_vs_value/code/func.go:23)	MOVQ	AX, "".~r2+200(SP)
	0x00e9 00233 (pointer_vs_value/code/func.go:23)	PCDATA	$0, $0
	0x00e9 00233 (pointer_vs_value/code/func.go:23)	MOVQ	CX, "".~r2+208(SP)
	0x00f1 00241 (pointer_vs_value/code/func.go:23)	MOVQ	80(SP), BP
	0x00f6 00246 (pointer_vs_value/code/func.go:23)	ADDQ	$88, SP
	0x00fa 00250 (pointer_vs_value/code/func.go:23)	RET
	0x00fb 00251 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $-2
	0x00fb 00251 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $-2
	0x00fb 00251 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, AX
	0x00fe 00254 ($GOROOT/src/errors/errors.go:59)	CALL	runtime.gcWriteBarrier(SB)
	0x0103 00259 ($GOROOT/src/errors/errors.go:59)	JMP	164
	0x0105 00261 (pointer_vs_value/code/func.go:25)	PCDATA	$0, $0
	0x0105 00261 (pointer_vs_value/code/func.go:25)	PCDATA	$1, $0
	0x0105 00261 (pointer_vs_value/code/func.go:25)	MOVQ	"".o+96(SP), AX
	0x010a 00266 (pointer_vs_value/code/func.go:25)	XORPS	X0, X0
	0x010d 00269 (pointer_vs_value/code/func.go:25)	CVTSQ2SD	AX, X0
	0x0112 00274 (pointer_vs_value/code/func.go:25)	PCDATA	$1, $4
	0x0112 00274 (pointer_vs_value/code/func.go:25)	DIVSD	"".o+120(SP), X0
	0x0118 00280 (pointer_vs_value/code/func.go:25)	MOVSD	X0, "".~r1+192(SP)
	0x0121 00289 (pointer_vs_value/code/func.go:25)	PCDATA	$1, $6
	0x0121 00289 (pointer_vs_value/code/func.go:25)	XORPS	X0, X0
	0x0124 00292 (pointer_vs_value/code/func.go:25)	MOVUPS	X0, "".~r2+200(SP)
	0x012c 00300 (pointer_vs_value/code/func.go:25)	MOVQ	80(SP), BP
	0x0131 00305 (pointer_vs_value/code/func.go:25)	ADDQ	$88, SP
	0x0135 00309 (pointer_vs_value/code/func.go:25)	RET
	0x0136 00310 (pointer_vs_value/code/func.go:25)	NOP
	0x0136 00310 (pointer_vs_value/code/func.go:21)	PCDATA	$1, $-1
	0x0136 00310 (pointer_vs_value/code/func.go:21)	PCDATA	$0, $-1
	0x0136 00310 (pointer_vs_value/code/func.go:21)	CALL	runtime.morestack_noctxt(SB)
	0x013b 00315 (pointer_vs_value/code/func.go:21)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 23  eH..%....H;a...#
	0x0010 01 00 00 48 83 ec 58 48 89 6c 24 50 48 8d 6c 24  ...H..XH.l$PH.l$
	0x0020 50 0f 57 c0 f2 0f 11 84 24 c0 00 00 00 0f 57 c9  P.W.....$.....W.
	0x0030 0f 11 8c 24 c8 00 00 00 f2 0f 10 4c 24 78 66 0f  ...$.......L$xf.
	0x0040 2e c8 0f 85 bd 00 00 00 7b 05 e9 b6 00 00 00 48  ........{......H
	0x0050 8d 05 00 00 00 00 48 89 44 24 30 48 c7 44 24 38  ......H.D$0H.D$8
	0x0060 16 00 00 00 0f 57 c0 0f 11 44 24 20 48 8d 05 00  .....W...D$ H...
	0x0070 00 00 00 48 89 04 24 e8 00 00 00 00 48 8b 7c 24  ...H..$.....H.|$
	0x0080 08 48 89 7c 24 10 48 8b 44 24 38 48 8b 4c 24 30  .H.|$.H.D$8H.L$0
	0x0090 48 89 47 08 83 3d 00 00 00 00 00 74 02 eb 5c 48  H.G..=.....t..\H
	0x00a0 89 0f eb 00 48 8b 44 24 10 48 89 44 24 18 48 8d  ....H.D$.H.D$.H.
	0x00b0 0d 00 00 00 00 48 89 4c 24 40 48 89 44 24 48 48  .....H.L$@H.D$HH
	0x00c0 89 4c 24 20 48 89 44 24 28 eb 00 0f 57 c0 f2 0f  .L$ H.D$(...W...
	0x00d0 11 84 24 c0 00 00 00 48 8b 44 24 20 48 8b 4c 24  ..$....H.D$ H.L$
	0x00e0 28 48 89 84 24 c8 00 00 00 48 89 8c 24 d0 00 00  (H..$....H..$...
	0x00f0 00 48 8b 6c 24 50 48 83 c4 58 c3 48 89 c8 e8 00  .H.l$PH..X.H....
	0x0100 00 00 00 eb 9f 48 8b 44 24 60 0f 57 c0 f2 48 0f  .....H.D$`.W..H.
	0x0110 2a c0 f2 0f 5e 44 24 78 f2 0f 11 84 24 c0 00 00  *...^D$x....$...
	0x0120 00 0f 57 c0 0f 11 84 24 c8 00 00 00 48 8b 6c 24  ..W....$....H.l$
	0x0130 50 48 83 c4 58 c3 e8 00 00 00 00 e9 c0 fe ff ff  PH..X...........
	rel 5+4 t=16 TLS+0
	rel 82+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 111+4 t=15 type.errors.errorString+0
	rel 120+4 t=8 runtime.newobject+0
	rel 150+4 t=15 runtime.writeBarrier+-1
	rel 177+4 t=15 go.itab.*errors.errorString,error+0
	rel 255+4 t=8 runtime.gcWriteBarrier+0
	rel 311+4 t=8 runtime.morestack_noctxt+0
"".calcMega STEXT size=326 args=0x178 locals=0x58
	0x0000 00000 (pointer_vs_value/code/func.go:28)	TEXT	"".calcMega(SB), ABIInternal, $88-376
	0x0000 00000 (pointer_vs_value/code/func.go:28)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/func.go:28)	CMPQ	SP, 16(CX)
	0x000d 00013 (pointer_vs_value/code/func.go:28)	JLS	316
	0x0013 00019 (pointer_vs_value/code/func.go:28)	SUBQ	$88, SP
	0x0017 00023 (pointer_vs_value/code/func.go:28)	MOVQ	BP, 80(SP)
	0x001c 00028 (pointer_vs_value/code/func.go:28)	LEAQ	80(SP), BP
	0x0021 00033 (pointer_vs_value/code/func.go:28)	FUNCDATA	$0, gclocals·a2af2cfb12dc787b391ce2c78f419d87(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:28)	FUNCDATA	$1, gclocals·ca4617d647f88ce0ec7dd4d79922985d(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:28)	FUNCDATA	$2, gclocals·2a7a16a1870e896beb8f3e3383a645e4(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:28)	PCDATA	$0, $0
	0x0021 00033 (pointer_vs_value/code/func.go:28)	PCDATA	$1, $0
	0x0021 00033 (pointer_vs_value/code/func.go:28)	XORPS	X0, X0
	0x0024 00036 (pointer_vs_value/code/func.go:28)	MOVSD	X0, "".~r1+448(SP)
	0x002d 00045 (pointer_vs_value/code/func.go:28)	XORPS	X1, X1
	0x0030 00048 (pointer_vs_value/code/func.go:28)	MOVUPS	X1, "".~r2+456(SP)
	0x0038 00056 (pointer_vs_value/code/func.go:29)	MOVSD	"".o+184(SP), X1
	0x0041 00065 (pointer_vs_value/code/func.go:29)	UCOMISD	X0, X1
	0x0045 00069 (pointer_vs_value/code/func.go:29)	JNE	264
	0x004b 00075 (pointer_vs_value/code/func.go:29)	JPC	82
	0x004d 00077 (pointer_vs_value/code/func.go:29)	JMP	264
	0x0052 00082 (pointer_vs_value/code/func.go:30)	PCDATA	$0, $1
	0x0052 00082 (pointer_vs_value/code/func.go:30)	PCDATA	$1, $1
	0x0052 00082 (pointer_vs_value/code/func.go:30)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x0059 00089 (pointer_vs_value/code/func.go:30)	PCDATA	$0, $0
	0x0059 00089 (pointer_vs_value/code/func.go:30)	MOVQ	AX, errors.text+48(SP)
	0x005e 00094 (pointer_vs_value/code/func.go:30)	MOVQ	$22, errors.text+56(SP)
	0x0067 00103 (pointer_vs_value/code/func.go:30)	XORPS	X0, X0
	0x006a 00106 (pointer_vs_value/code/func.go:30)	MOVUPS	X0, "".~R0+32(SP)
	0x006f 00111 (<unknown line number>)	NOP
	0x006f 00111 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x006f 00111 ($GOROOT/src/errors/errors.go:59)	LEAQ	type.errors.errorString(SB), AX
	0x0076 00118 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $0
	0x0076 00118 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, (SP)
	0x007a 00122 ($GOROOT/src/errors/errors.go:59)	CALL	runtime.newobject(SB)
	0x007f 00127 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $2
	0x007f 00127 ($GOROOT/src/errors/errors.go:59)	MOVQ	8(SP), DI
	0x0084 00132 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $2
	0x0084 00132 ($GOROOT/src/errors/errors.go:59)	MOVQ	DI, ""..autotmp_6+16(SP)
	0x0089 00137 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+56(SP), AX
	0x008e 00142 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x008e 00142 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x008e 00142 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+48(SP), CX
	0x0093 00147 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, 8(DI)
	0x0097 00151 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $-2
	0x0097 00151 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $-2
	0x0097 00151 ($GOROOT/src/errors/errors.go:59)	CMPL	runtime.writeBarrier(SB), $0
	0x009e 00158 ($GOROOT/src/errors/errors.go:59)	JEQ	162
	0x00a0 00160 ($GOROOT/src/errors/errors.go:59)	JMP	254
	0x00a2 00162 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, (DI)
	0x00a5 00165 ($GOROOT/src/errors/errors.go:59)	JMP	167
	0x00a7 00167 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x00a7 00167 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x00a7 00167 ($GOROOT/src/errors/errors.go:59)	MOVQ	""..autotmp_6+16(SP), AX
	0x00ac 00172 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, ""..autotmp_5+24(SP)
	0x00b1 00177 (pointer_vs_value/code/func.go:30)	PCDATA	$0, $4
	0x00b1 00177 (pointer_vs_value/code/func.go:30)	LEAQ	go.itab.*errors.errorString,error(SB), CX
	0x00b8 00184 (pointer_vs_value/code/func.go:30)	MOVQ	CX, ""..autotmp_7+64(SP)
	0x00bd 00189 (pointer_vs_value/code/func.go:30)	MOVQ	AX, ""..autotmp_7+72(SP)
	0x00c2 00194 (pointer_vs_value/code/func.go:30)	PCDATA	$0, $1
	0x00c2 00194 (pointer_vs_value/code/func.go:30)	PCDATA	$1, $5
	0x00c2 00194 (pointer_vs_value/code/func.go:30)	MOVQ	CX, "".~R0+32(SP)
	0x00c7 00199 (pointer_vs_value/code/func.go:30)	PCDATA	$0, $0
	0x00c7 00199 (pointer_vs_value/code/func.go:30)	MOVQ	AX, "".~R0+40(SP)
	0x00cc 00204 (pointer_vs_value/code/func.go:30)	JMP	206
	0x00ce 00206 (pointer_vs_value/code/func.go:30)	XORPS	X0, X0
	0x00d1 00209 (pointer_vs_value/code/func.go:30)	MOVSD	X0, "".~r1+448(SP)
	0x00da 00218 (pointer_vs_value/code/func.go:30)	MOVQ	"".~R0+32(SP), AX
	0x00df 00223 (pointer_vs_value/code/func.go:30)	PCDATA	$0, $5
	0x00df 00223 (pointer_vs_value/code/func.go:30)	PCDATA	$1, $4
	0x00df 00223 (pointer_vs_value/code/func.go:30)	MOVQ	"".~R0+40(SP), CX
	0x00e4 00228 (pointer_vs_value/code/func.go:30)	PCDATA	$1, $6
	0x00e4 00228 (pointer_vs_value/code/func.go:30)	MOVQ	AX, "".~r2+456(SP)
	0x00ec 00236 (pointer_vs_value/code/func.go:30)	PCDATA	$0, $0
	0x00ec 00236 (pointer_vs_value/code/func.go:30)	MOVQ	CX, "".~r2+464(SP)
	0x00f4 00244 (pointer_vs_value/code/func.go:30)	MOVQ	80(SP), BP
	0x00f9 00249 (pointer_vs_value/code/func.go:30)	ADDQ	$88, SP
	0x00fd 00253 (pointer_vs_value/code/func.go:30)	RET
	0x00fe 00254 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $-2
	0x00fe 00254 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $-2
	0x00fe 00254 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, AX
	0x0101 00257 ($GOROOT/src/errors/errors.go:59)	CALL	runtime.gcWriteBarrier(SB)
	0x0106 00262 ($GOROOT/src/errors/errors.go:59)	JMP	167
	0x0108 00264 (pointer_vs_value/code/func.go:32)	PCDATA	$0, $0
	0x0108 00264 (pointer_vs_value/code/func.go:32)	PCDATA	$1, $0
	0x0108 00264 (pointer_vs_value/code/func.go:32)	MOVQ	"".o+96(SP), AX
	0x010d 00269 (pointer_vs_value/code/func.go:32)	XORPS	X0, X0
	0x0110 00272 (pointer_vs_value/code/func.go:32)	CVTSQ2SD	AX, X0
	0x0115 00277 (pointer_vs_value/code/func.go:32)	PCDATA	$1, $4
	0x0115 00277 (pointer_vs_value/code/func.go:32)	DIVSD	"".o+184(SP), X0
	0x011e 00286 (pointer_vs_value/code/func.go:32)	MOVSD	X0, "".~r1+448(SP)
	0x0127 00295 (pointer_vs_value/code/func.go:32)	PCDATA	$1, $6
	0x0127 00295 (pointer_vs_value/code/func.go:32)	XORPS	X0, X0
	0x012a 00298 (pointer_vs_value/code/func.go:32)	MOVUPS	X0, "".~r2+456(SP)
	0x0132 00306 (pointer_vs_value/code/func.go:32)	MOVQ	80(SP), BP
	0x0137 00311 (pointer_vs_value/code/func.go:32)	ADDQ	$88, SP
	0x013b 00315 (pointer_vs_value/code/func.go:32)	RET
	0x013c 00316 (pointer_vs_value/code/func.go:32)	NOP
	0x013c 00316 (pointer_vs_value/code/func.go:28)	PCDATA	$1, $-1
	0x013c 00316 (pointer_vs_value/code/func.go:28)	PCDATA	$0, $-1
	0x013c 00316 (pointer_vs_value/code/func.go:28)	CALL	runtime.morestack_noctxt(SB)
	0x0141 00321 (pointer_vs_value/code/func.go:28)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 29  eH..%....H;a...)
	0x0010 01 00 00 48 83 ec 58 48 89 6c 24 50 48 8d 6c 24  ...H..XH.l$PH.l$
	0x0020 50 0f 57 c0 f2 0f 11 84 24 c0 01 00 00 0f 57 c9  P.W.....$.....W.
	0x0030 0f 11 8c 24 c8 01 00 00 f2 0f 10 8c 24 b8 00 00  ...$........$...
	0x0040 00 66 0f 2e c8 0f 85 bd 00 00 00 7b 05 e9 b6 00  .f.........{....
	0x0050 00 00 48 8d 05 00 00 00 00 48 89 44 24 30 48 c7  ..H......H.D$0H.
	0x0060 44 24 38 16 00 00 00 0f 57 c0 0f 11 44 24 20 48  D$8.....W...D$ H
	0x0070 8d 05 00 00 00 00 48 89 04 24 e8 00 00 00 00 48  ......H..$.....H
	0x0080 8b 7c 24 08 48 89 7c 24 10 48 8b 44 24 38 48 8b  .|$.H.|$.H.D$8H.
	0x0090 4c 24 30 48 89 47 08 83 3d 00 00 00 00 00 74 02  L$0H.G..=.....t.
	0x00a0 eb 5c 48 89 0f eb 00 48 8b 44 24 10 48 89 44 24  .\H....H.D$.H.D$
	0x00b0 18 48 8d 0d 00 00 00 00 48 89 4c 24 40 48 89 44  .H......H.L$@H.D
	0x00c0 24 48 48 89 4c 24 20 48 89 44 24 28 eb 00 0f 57  $HH.L$ H.D$(...W
	0x00d0 c0 f2 0f 11 84 24 c0 01 00 00 48 8b 44 24 20 48  .....$....H.D$ H
	0x00e0 8b 4c 24 28 48 89 84 24 c8 01 00 00 48 89 8c 24  .L$(H..$....H..$
	0x00f0 d0 01 00 00 48 8b 6c 24 50 48 83 c4 58 c3 48 89  ....H.l$PH..X.H.
	0x0100 c8 e8 00 00 00 00 eb 9f 48 8b 44 24 60 0f 57 c0  ........H.D$`.W.
	0x0110 f2 48 0f 2a c0 f2 0f 5e 84 24 b8 00 00 00 f2 0f  .H.*...^.$......
	0x0120 11 84 24 c0 01 00 00 0f 57 c0 0f 11 84 24 c8 01  ..$.....W....$..
	0x0130 00 00 48 8b 6c 24 50 48 83 c4 58 c3 e8 00 00 00  ..H.l$PH..X.....
	0x0140 00 e9 ba fe ff ff                                ......
	rel 5+4 t=16 TLS+0
	rel 85+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 114+4 t=15 type.errors.errorString+0
	rel 123+4 t=8 runtime.newobject+0
	rel 153+4 t=15 runtime.writeBarrier+-1
	rel 180+4 t=15 go.itab.*errors.errorString,error+0
	rel 258+4 t=8 runtime.gcWriteBarrier+0
	rel 317+4 t=8 runtime.morestack_noctxt+0
"".calcTera STEXT size=326 args=0x358 locals=0x58
	0x0000 00000 (pointer_vs_value/code/func.go:35)	TEXT	"".calcTera(SB), ABIInternal, $88-856
	0x0000 00000 (pointer_vs_value/code/func.go:35)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/func.go:35)	CMPQ	SP, 16(CX)
	0x000d 00013 (pointer_vs_value/code/func.go:35)	JLS	316
	0x0013 00019 (pointer_vs_value/code/func.go:35)	SUBQ	$88, SP
	0x0017 00023 (pointer_vs_value/code/func.go:35)	MOVQ	BP, 80(SP)
	0x001c 00028 (pointer_vs_value/code/func.go:35)	LEAQ	80(SP), BP
	0x0021 00033 (pointer_vs_value/code/func.go:35)	FUNCDATA	$0, gclocals·364c52b22ed9143fe1f71107940cfe00(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:35)	FUNCDATA	$1, gclocals·ca4617d647f88ce0ec7dd4d79922985d(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:35)	FUNCDATA	$2, gclocals·2a7a16a1870e896beb8f3e3383a645e4(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:35)	PCDATA	$0, $0
	0x0021 00033 (pointer_vs_value/code/func.go:35)	PCDATA	$1, $0
	0x0021 00033 (pointer_vs_value/code/func.go:35)	XORPS	X0, X0
	0x0024 00036 (pointer_vs_value/code/func.go:35)	MOVSD	X0, "".~r1+928(SP)
	0x002d 00045 (pointer_vs_value/code/func.go:35)	XORPS	X1, X1
	0x0030 00048 (pointer_vs_value/code/func.go:35)	MOVUPS	X1, "".~r2+936(SP)
	0x0038 00056 (pointer_vs_value/code/func.go:36)	MOVSD	"".o+304(SP), X1
	0x0041 00065 (pointer_vs_value/code/func.go:36)	UCOMISD	X0, X1
	0x0045 00069 (pointer_vs_value/code/func.go:36)	JNE	264
	0x004b 00075 (pointer_vs_value/code/func.go:36)	JPC	82
	0x004d 00077 (pointer_vs_value/code/func.go:36)	JMP	264
	0x0052 00082 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $1
	0x0052 00082 (pointer_vs_value/code/func.go:37)	PCDATA	$1, $1
	0x0052 00082 (pointer_vs_value/code/func.go:37)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x0059 00089 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $0
	0x0059 00089 (pointer_vs_value/code/func.go:37)	MOVQ	AX, errors.text+48(SP)
	0x005e 00094 (pointer_vs_value/code/func.go:37)	MOVQ	$22, errors.text+56(SP)
	0x0067 00103 (pointer_vs_value/code/func.go:37)	XORPS	X0, X0
	0x006a 00106 (pointer_vs_value/code/func.go:37)	MOVUPS	X0, "".~R0+32(SP)
	0x006f 00111 (<unknown line number>)	NOP
	0x006f 00111 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x006f 00111 ($GOROOT/src/errors/errors.go:59)	LEAQ	type.errors.errorString(SB), AX
	0x0076 00118 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $0
	0x0076 00118 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, (SP)
	0x007a 00122 ($GOROOT/src/errors/errors.go:59)	CALL	runtime.newobject(SB)
	0x007f 00127 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $2
	0x007f 00127 ($GOROOT/src/errors/errors.go:59)	MOVQ	8(SP), DI
	0x0084 00132 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $2
	0x0084 00132 ($GOROOT/src/errors/errors.go:59)	MOVQ	DI, ""..autotmp_6+16(SP)
	0x0089 00137 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+56(SP), AX
	0x008e 00142 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x008e 00142 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x008e 00142 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+48(SP), CX
	0x0093 00147 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, 8(DI)
	0x0097 00151 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $-2
	0x0097 00151 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $-2
	0x0097 00151 ($GOROOT/src/errors/errors.go:59)	CMPL	runtime.writeBarrier(SB), $0
	0x009e 00158 ($GOROOT/src/errors/errors.go:59)	JEQ	162
	0x00a0 00160 ($GOROOT/src/errors/errors.go:59)	JMP	254
	0x00a2 00162 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, (DI)
	0x00a5 00165 ($GOROOT/src/errors/errors.go:59)	JMP	167
	0x00a7 00167 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x00a7 00167 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x00a7 00167 ($GOROOT/src/errors/errors.go:59)	MOVQ	""..autotmp_6+16(SP), AX
	0x00ac 00172 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, ""..autotmp_5+24(SP)
	0x00b1 00177 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $4
	0x00b1 00177 (pointer_vs_value/code/func.go:37)	LEAQ	go.itab.*errors.errorString,error(SB), CX
	0x00b8 00184 (pointer_vs_value/code/func.go:37)	MOVQ	CX, ""..autotmp_7+64(SP)
	0x00bd 00189 (pointer_vs_value/code/func.go:37)	MOVQ	AX, ""..autotmp_7+72(SP)
	0x00c2 00194 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $1
	0x00c2 00194 (pointer_vs_value/code/func.go:37)	PCDATA	$1, $5
	0x00c2 00194 (pointer_vs_value/code/func.go:37)	MOVQ	CX, "".~R0+32(SP)
	0x00c7 00199 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $0
	0x00c7 00199 (pointer_vs_value/code/func.go:37)	MOVQ	AX, "".~R0+40(SP)
	0x00cc 00204 (pointer_vs_value/code/func.go:37)	JMP	206
	0x00ce 00206 (pointer_vs_value/code/func.go:37)	XORPS	X0, X0
	0x00d1 00209 (pointer_vs_value/code/func.go:37)	MOVSD	X0, "".~r1+928(SP)
	0x00da 00218 (pointer_vs_value/code/func.go:37)	MOVQ	"".~R0+32(SP), AX
	0x00df 00223 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $5
	0x00df 00223 (pointer_vs_value/code/func.go:37)	PCDATA	$1, $4
	0x00df 00223 (pointer_vs_value/code/func.go:37)	MOVQ	"".~R0+40(SP), CX
	0x00e4 00228 (pointer_vs_value/code/func.go:37)	PCDATA	$1, $6
	0x00e4 00228 (pointer_vs_value/code/func.go:37)	MOVQ	AX, "".~r2+936(SP)
	0x00ec 00236 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $0
	0x00ec 00236 (pointer_vs_value/code/func.go:37)	MOVQ	CX, "".~r2+944(SP)
	0x00f4 00244 (pointer_vs_value/code/func.go:37)	MOVQ	80(SP), BP
	0x00f9 00249 (pointer_vs_value/code/func.go:37)	ADDQ	$88, SP
	0x00fd 00253 (pointer_vs_value/code/func.go:37)	RET
	0x00fe 00254 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $-2
	0x00fe 00254 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $-2
	0x00fe 00254 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, AX
	0x0101 00257 ($GOROOT/src/errors/errors.go:59)	CALL	runtime.gcWriteBarrier(SB)
	0x0106 00262 ($GOROOT/src/errors/errors.go:59)	JMP	167
	0x0108 00264 (pointer_vs_value/code/func.go:39)	PCDATA	$0, $0
	0x0108 00264 (pointer_vs_value/code/func.go:39)	PCDATA	$1, $0
	0x0108 00264 (pointer_vs_value/code/func.go:39)	MOVQ	"".o+96(SP), AX
	0x010d 00269 (pointer_vs_value/code/func.go:39)	XORPS	X0, X0
	0x0110 00272 (pointer_vs_value/code/func.go:39)	CVTSQ2SD	AX, X0
	0x0115 00277 (pointer_vs_value/code/func.go:39)	PCDATA	$1, $4
	0x0115 00277 (pointer_vs_value/code/func.go:39)	DIVSD	"".o+304(SP), X0
	0x011e 00286 (pointer_vs_value/code/func.go:39)	MOVSD	X0, "".~r1+928(SP)
	0x0127 00295 (pointer_vs_value/code/func.go:39)	PCDATA	$1, $6
	0x0127 00295 (pointer_vs_value/code/func.go:39)	XORPS	X0, X0
	0x012a 00298 (pointer_vs_value/code/func.go:39)	MOVUPS	X0, "".~r2+936(SP)
	0x0132 00306 (pointer_vs_value/code/func.go:39)	MOVQ	80(SP), BP
	0x0137 00311 (pointer_vs_value/code/func.go:39)	ADDQ	$88, SP
	0x013b 00315 (pointer_vs_value/code/func.go:39)	RET
	0x013c 00316 (pointer_vs_value/code/func.go:39)	NOP
	0x013c 00316 (pointer_vs_value/code/func.go:35)	PCDATA	$1, $-1
	0x013c 00316 (pointer_vs_value/code/func.go:35)	PCDATA	$0, $-1
	0x013c 00316 (pointer_vs_value/code/func.go:35)	CALL	runtime.morestack_noctxt(SB)
	0x0141 00321 (pointer_vs_value/code/func.go:35)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 29  eH..%....H;a...)
	0x0010 01 00 00 48 83 ec 58 48 89 6c 24 50 48 8d 6c 24  ...H..XH.l$PH.l$
	0x0020 50 0f 57 c0 f2 0f 11 84 24 a0 03 00 00 0f 57 c9  P.W.....$.....W.
	0x0030 0f 11 8c 24 a8 03 00 00 f2 0f 10 8c 24 30 01 00  ...$........$0..
	0x0040 00 66 0f 2e c8 0f 85 bd 00 00 00 7b 05 e9 b6 00  .f.........{....
	0x0050 00 00 48 8d 05 00 00 00 00 48 89 44 24 30 48 c7  ..H......H.D$0H.
	0x0060 44 24 38 16 00 00 00 0f 57 c0 0f 11 44 24 20 48  D$8.....W...D$ H
	0x0070 8d 05 00 00 00 00 48 89 04 24 e8 00 00 00 00 48  ......H..$.....H
	0x0080 8b 7c 24 08 48 89 7c 24 10 48 8b 44 24 38 48 8b  .|$.H.|$.H.D$8H.
	0x0090 4c 24 30 48 89 47 08 83 3d 00 00 00 00 00 74 02  L$0H.G..=.....t.
	0x00a0 eb 5c 48 89 0f eb 00 48 8b 44 24 10 48 89 44 24  .\H....H.D$.H.D$
	0x00b0 18 48 8d 0d 00 00 00 00 48 89 4c 24 40 48 89 44  .H......H.L$@H.D
	0x00c0 24 48 48 89 4c 24 20 48 89 44 24 28 eb 00 0f 57  $HH.L$ H.D$(...W
	0x00d0 c0 f2 0f 11 84 24 a0 03 00 00 48 8b 44 24 20 48  .....$....H.D$ H
	0x00e0 8b 4c 24 28 48 89 84 24 a8 03 00 00 48 89 8c 24  .L$(H..$....H..$
	0x00f0 b0 03 00 00 48 8b 6c 24 50 48 83 c4 58 c3 48 89  ....H.l$PH..X.H.
	0x0100 c8 e8 00 00 00 00 eb 9f 48 8b 44 24 60 0f 57 c0  ........H.D$`.W.
	0x0110 f2 48 0f 2a c0 f2 0f 5e 84 24 30 01 00 00 f2 0f  .H.*...^.$0.....
	0x0120 11 84 24 a0 03 00 00 0f 57 c0 0f 11 84 24 a8 03  ..$.....W....$..
	0x0130 00 00 48 8b 6c 24 50 48 83 c4 58 c3 e8 00 00 00  ..H.l$PH..X.....
	0x0140 00 e9 ba fe ff ff                                ......
	rel 5+4 t=16 TLS+0
	rel 85+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 114+4 t=15 type.errors.errorString+0
	rel 123+4 t=8 runtime.newobject+0
	rel 153+4 t=15 runtime.writeBarrier+-1
	rel 180+4 t=15 go.itab.*errors.errorString,error+0
	rel 258+4 t=8 runtime.gcWriteBarrier+0
	rel 317+4 t=8 runtime.morestack_noctxt+0
"".calcIfc STEXT size=414 args=0x28 locals=0x68
	0x0000 00000 (pointer_vs_value/code/func.go:44)	TEXT	"".calcIfc(SB), ABIInternal, $104-40
	0x0000 00000 (pointer_vs_value/code/func.go:44)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/func.go:44)	CMPQ	SP, 16(CX)
	0x000d 00013 (pointer_vs_value/code/func.go:44)	JLS	404
	0x0013 00019 (pointer_vs_value/code/func.go:44)	SUBQ	$104, SP
	0x0017 00023 (pointer_vs_value/code/func.go:44)	MOVQ	BP, 96(SP)
	0x001c 00028 (pointer_vs_value/code/func.go:44)	LEAQ	96(SP), BP
	0x0021 00033 (pointer_vs_value/code/func.go:44)	FUNCDATA	$0, gclocals·e4f415227c8379b30facea9e8ee24e2d(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:44)	FUNCDATA	$1, gclocals·de0cd1bd26f978591085f5c78e695bd6(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:44)	FUNCDATA	$2, gclocals·3a085371a6341a1fa06545600518c631(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:44)	PCDATA	$0, $0
	0x0021 00033 (pointer_vs_value/code/func.go:44)	PCDATA	$1, $0
	0x0021 00033 (pointer_vs_value/code/func.go:44)	XORPS	X0, X0
	0x0024 00036 (pointer_vs_value/code/func.go:44)	MOVSD	X0, "".~r1+128(SP)
	0x002d 00045 (pointer_vs_value/code/func.go:44)	XORPS	X1, X1
	0x0030 00048 (pointer_vs_value/code/func.go:44)	MOVUPS	X1, "".~r2+136(SP)
	0x0038 00056 (pointer_vs_value/code/func.go:45)	MOVQ	"".o+112(SP), AX
	0x003d 00061 (pointer_vs_value/code/func.go:45)	TESTB	AL, (AX)
	0x003f 00063 (pointer_vs_value/code/func.go:45)	MOVQ	24(AX), AX
	0x0043 00067 (pointer_vs_value/code/func.go:45)	PCDATA	$0, $1
	0x0043 00067 (pointer_vs_value/code/func.go:45)	MOVQ	"".o+120(SP), CX
	0x0048 00072 (pointer_vs_value/code/func.go:45)	PCDATA	$0, $0
	0x0048 00072 (pointer_vs_value/code/func.go:45)	MOVQ	CX, (SP)
	0x004c 00076 (pointer_vs_value/code/func.go:45)	CALL	AX
	0x004e 00078 (pointer_vs_value/code/func.go:45)	MOVSD	8(SP), X0
	0x0054 00084 (pointer_vs_value/code/func.go:45)	MOVSD	X0, ""..autotmp_5+24(SP)
	0x005a 00090 (pointer_vs_value/code/func.go:45)	XORPS	X1, X1
	0x005d 00093 (pointer_vs_value/code/func.go:45)	UCOMISD	X1, X0
	0x0061 00097 (pointer_vs_value/code/func.go:45)	JNE	289
	0x0067 00103 (pointer_vs_value/code/func.go:45)	JPC	110
	0x0069 00105 (pointer_vs_value/code/func.go:45)	JMP	289
	0x006e 00110 (pointer_vs_value/code/func.go:46)	PCDATA	$0, $2
	0x006e 00110 (pointer_vs_value/code/func.go:46)	PCDATA	$1, $2
	0x006e 00110 (pointer_vs_value/code/func.go:46)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x0075 00117 (pointer_vs_value/code/func.go:46)	PCDATA	$0, $0
	0x0075 00117 (pointer_vs_value/code/func.go:46)	MOVQ	AX, errors.text+64(SP)
	0x007a 00122 (pointer_vs_value/code/func.go:46)	MOVQ	$22, errors.text+72(SP)
	0x0083 00131 (pointer_vs_value/code/func.go:46)	XORPS	X0, X0
	0x0086 00134 (pointer_vs_value/code/func.go:46)	MOVUPS	X0, "".~R0+48(SP)
	0x008b 00139 (<unknown line number>)	NOP
	0x008b 00139 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $2
	0x008b 00139 ($GOROOT/src/errors/errors.go:59)	LEAQ	type.errors.errorString(SB), AX
	0x0092 00146 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $0
	0x0092 00146 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, (SP)
	0x0096 00150 ($GOROOT/src/errors/errors.go:59)	CALL	runtime.newobject(SB)
	0x009b 00155 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x009b 00155 ($GOROOT/src/errors/errors.go:59)	MOVQ	8(SP), DI
	0x00a0 00160 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x00a0 00160 ($GOROOT/src/errors/errors.go:59)	MOVQ	DI, ""..autotmp_8+32(SP)
	0x00a5 00165 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $4
	0x00a5 00165 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+64(SP), AX
	0x00aa 00170 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x00aa 00170 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+72(SP), CX
	0x00af 00175 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, 8(DI)
	0x00b3 00179 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $-2
	0x00b3 00179 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $-2
	0x00b3 00179 ($GOROOT/src/errors/errors.go:59)	CMPL	runtime.writeBarrier(SB), $0
	0x00ba 00186 ($GOROOT/src/errors/errors.go:59)	JEQ	190
	0x00bc 00188 ($GOROOT/src/errors/errors.go:59)	JMP	282
	0x00be 00190 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, (DI)
	0x00c1 00193 ($GOROOT/src/errors/errors.go:59)	JMP	195
	0x00c3 00195 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $2
	0x00c3 00195 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $1
	0x00c3 00195 ($GOROOT/src/errors/errors.go:59)	MOVQ	""..autotmp_8+32(SP), AX
	0x00c8 00200 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, ""..autotmp_6+40(SP)
	0x00cd 00205 (pointer_vs_value/code/func.go:46)	PCDATA	$0, $5
	0x00cd 00205 (pointer_vs_value/code/func.go:46)	LEAQ	go.itab.*errors.errorString,error(SB), CX
	0x00d4 00212 (pointer_vs_value/code/func.go:46)	MOVQ	CX, ""..autotmp_9+80(SP)
	0x00d9 00217 (pointer_vs_value/code/func.go:46)	MOVQ	AX, ""..autotmp_9+88(SP)
	0x00de 00222 (pointer_vs_value/code/func.go:46)	PCDATA	$0, $2
	0x00de 00222 (pointer_vs_value/code/func.go:46)	PCDATA	$1, $5
	0x00de 00222 (pointer_vs_value/code/func.go:46)	MOVQ	CX, "".~R0+48(SP)
	0x00e3 00227 (pointer_vs_value/code/func.go:46)	PCDATA	$0, $0
	0x00e3 00227 (pointer_vs_value/code/func.go:46)	MOVQ	AX, "".~R0+56(SP)
	0x00e8 00232 (pointer_vs_value/code/func.go:46)	JMP	234
	0x00ea 00234 (pointer_vs_value/code/func.go:46)	XORPS	X0, X0
	0x00ed 00237 (pointer_vs_value/code/func.go:46)	MOVSD	X0, "".~r1+128(SP)
	0x00f6 00246 (pointer_vs_value/code/func.go:46)	MOVQ	"".~R0+48(SP), AX
	0x00fb 00251 (pointer_vs_value/code/func.go:46)	PCDATA	$0, $1
	0x00fb 00251 (pointer_vs_value/code/func.go:46)	PCDATA	$1, $1
	0x00fb 00251 (pointer_vs_value/code/func.go:46)	MOVQ	"".~R0+56(SP), CX
	0x0100 00256 (pointer_vs_value/code/func.go:46)	PCDATA	$1, $6
	0x0100 00256 (pointer_vs_value/code/func.go:46)	MOVQ	AX, "".~r2+136(SP)
	0x0108 00264 (pointer_vs_value/code/func.go:46)	PCDATA	$0, $0
	0x0108 00264 (pointer_vs_value/code/func.go:46)	MOVQ	CX, "".~r2+144(SP)
	0x0110 00272 (pointer_vs_value/code/func.go:46)	MOVQ	96(SP), BP
	0x0115 00277 (pointer_vs_value/code/func.go:46)	ADDQ	$104, SP
	0x0119 00281 (pointer_vs_value/code/func.go:46)	RET
	0x011a 00282 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $-2
	0x011a 00282 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $-2
	0x011a 00282 ($GOROOT/src/errors/errors.go:59)	CALL	runtime.gcWriteBarrier(SB)
	0x011f 00287 ($GOROOT/src/errors/errors.go:59)	JMP	195
	0x0121 00289 (pointer_vs_value/code/func.go:48)	PCDATA	$0, $0
	0x0121 00289 (pointer_vs_value/code/func.go:48)	PCDATA	$1, $0
	0x0121 00289 (pointer_vs_value/code/func.go:48)	JMP	291
	0x0123 00291 (pointer_vs_value/code/func.go:48)	MOVQ	"".o+112(SP), AX
	0x0128 00296 (pointer_vs_value/code/func.go:48)	TESTB	AL, (AX)
	0x012a 00298 (pointer_vs_value/code/func.go:48)	PCDATA	$0, $1
	0x012a 00298 (pointer_vs_value/code/func.go:48)	MOVQ	"".o+120(SP), CX
	0x012f 00303 (pointer_vs_value/code/func.go:48)	MOVQ	32(AX), AX
	0x0133 00307 (pointer_vs_value/code/func.go:48)	PCDATA	$0, $0
	0x0133 00307 (pointer_vs_value/code/func.go:48)	MOVQ	CX, (SP)
	0x0137 00311 (pointer_vs_value/code/func.go:48)	CALL	AX
	0x0139 00313 (pointer_vs_value/code/func.go:48)	MOVQ	8(SP), AX
	0x013e 00318 (pointer_vs_value/code/func.go:48)	MOVQ	AX, ""..autotmp_7+16(SP)
	0x0143 00323 (pointer_vs_value/code/func.go:48)	MOVQ	"".o+112(SP), AX
	0x0148 00328 (pointer_vs_value/code/func.go:48)	TESTB	AL, (AX)
	0x014a 00330 (pointer_vs_value/code/func.go:48)	PCDATA	$0, $1
	0x014a 00330 (pointer_vs_value/code/func.go:48)	PCDATA	$1, $1
	0x014a 00330 (pointer_vs_value/code/func.go:48)	MOVQ	"".o+120(SP), CX
	0x014f 00335 (pointer_vs_value/code/func.go:48)	MOVQ	24(AX), AX
	0x0153 00339 (pointer_vs_value/code/func.go:48)	PCDATA	$0, $0
	0x0153 00339 (pointer_vs_value/code/func.go:48)	MOVQ	CX, (SP)
	0x0157 00343 (pointer_vs_value/code/func.go:48)	CALL	AX
	0x0159 00345 (pointer_vs_value/code/func.go:48)	MOVSD	8(SP), X0
	0x015f 00351 (pointer_vs_value/code/func.go:48)	MOVSD	X0, ""..autotmp_5+24(SP)
	0x0165 00357 (pointer_vs_value/code/func.go:48)	MOVQ	""..autotmp_7+16(SP), AX
	0x016a 00362 (pointer_vs_value/code/func.go:48)	XORPS	X1, X1
	0x016d 00365 (pointer_vs_value/code/func.go:48)	CVTSQ2SD	AX, X1
	0x0172 00370 (pointer_vs_value/code/func.go:48)	DIVSD	X0, X1
	0x0176 00374 (pointer_vs_value/code/func.go:48)	MOVSD	X1, "".~r1+128(SP)
	0x017f 00383 (pointer_vs_value/code/func.go:48)	PCDATA	$1, $6
	0x017f 00383 (pointer_vs_value/code/func.go:48)	XORPS	X0, X0
	0x0182 00386 (pointer_vs_value/code/func.go:48)	MOVUPS	X0, "".~r2+136(SP)
	0x018a 00394 (pointer_vs_value/code/func.go:48)	MOVQ	96(SP), BP
	0x018f 00399 (pointer_vs_value/code/func.go:48)	ADDQ	$104, SP
	0x0193 00403 (pointer_vs_value/code/func.go:48)	RET
	0x0194 00404 (pointer_vs_value/code/func.go:48)	NOP
	0x0194 00404 (pointer_vs_value/code/func.go:44)	PCDATA	$1, $-1
	0x0194 00404 (pointer_vs_value/code/func.go:44)	PCDATA	$0, $-1
	0x0194 00404 (pointer_vs_value/code/func.go:44)	CALL	runtime.morestack_noctxt(SB)
	0x0199 00409 (pointer_vs_value/code/func.go:44)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 81  eH..%....H;a....
	0x0010 01 00 00 48 83 ec 68 48 89 6c 24 60 48 8d 6c 24  ...H..hH.l$`H.l$
	0x0020 60 0f 57 c0 f2 0f 11 84 24 80 00 00 00 0f 57 c9  `.W.....$.....W.
	0x0030 0f 11 8c 24 88 00 00 00 48 8b 44 24 70 84 00 48  ...$....H.D$p..H
	0x0040 8b 40 18 48 8b 4c 24 78 48 89 0c 24 ff d0 f2 0f  .@.H.L$xH..$....
	0x0050 10 44 24 08 f2 0f 11 44 24 18 0f 57 c9 66 0f 2e  .D$....D$..W.f..
	0x0060 c1 0f 85 ba 00 00 00 7b 05 e9 b3 00 00 00 48 8d  .......{......H.
	0x0070 05 00 00 00 00 48 89 44 24 40 48 c7 44 24 48 16  .....H.D$@H.D$H.
	0x0080 00 00 00 0f 57 c0 0f 11 44 24 30 48 8d 05 00 00  ....W...D$0H....
	0x0090 00 00 48 89 04 24 e8 00 00 00 00 48 8b 7c 24 08  ..H..$.....H.|$.
	0x00a0 48 89 7c 24 20 48 8b 44 24 40 48 8b 4c 24 48 48  H.|$ H.D$@H.L$HH
	0x00b0 89 4f 08 83 3d 00 00 00 00 00 74 02 eb 5c 48 89  .O..=.....t..\H.
	0x00c0 07 eb 00 48 8b 44 24 20 48 89 44 24 28 48 8d 0d  ...H.D$ H.D$(H..
	0x00d0 00 00 00 00 48 89 4c 24 50 48 89 44 24 58 48 89  ....H.L$PH.D$XH.
	0x00e0 4c 24 30 48 89 44 24 38 eb 00 0f 57 c0 f2 0f 11  L$0H.D$8...W....
	0x00f0 84 24 80 00 00 00 48 8b 44 24 30 48 8b 4c 24 38  .$....H.D$0H.L$8
	0x0100 48 89 84 24 88 00 00 00 48 89 8c 24 90 00 00 00  H..$....H..$....
	0x0110 48 8b 6c 24 60 48 83 c4 68 c3 e8 00 00 00 00 eb  H.l$`H..h.......
	0x0120 a2 eb 00 48 8b 44 24 70 84 00 48 8b 4c 24 78 48  ...H.D$p..H.L$xH
	0x0130 8b 40 20 48 89 0c 24 ff d0 48 8b 44 24 08 48 89  .@ H..$..H.D$.H.
	0x0140 44 24 10 48 8b 44 24 70 84 00 48 8b 4c 24 78 48  D$.H.D$p..H.L$xH
	0x0150 8b 40 18 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2  .@.H..$.....D$..
	0x0160 0f 11 44 24 18 48 8b 44 24 10 0f 57 c9 f2 48 0f  ..D$.H.D$..W..H.
	0x0170 2a c8 f2 0f 5e c8 f2 0f 11 8c 24 80 00 00 00 0f  *...^.....$.....
	0x0180 57 c0 0f 11 84 24 88 00 00 00 48 8b 6c 24 60 48  W....$....H.l$`H
	0x0190 83 c4 68 c3 e8 00 00 00 00 e9 62 fe ff ff        ..h.......b...
	rel 5+4 t=16 TLS+0
	rel 76+0 t=11 +0
	rel 113+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 142+4 t=15 type.errors.errorString+0
	rel 151+4 t=8 runtime.newobject+0
	rel 181+4 t=15 runtime.writeBarrier+-1
	rel 208+4 t=15 go.itab.*errors.errorString,error+0
	rel 283+4 t=8 runtime.gcWriteBarrier+0
	rel 311+0 t=11 +0
	rel 343+0 t=11 +0
	rel 405+4 t=8 runtime.morestack_noctxt+0
"".calcMicroP STEXT size=316 args=0x20 locals=0x58
	0x0000 00000 (pointer_vs_value/code/func.go:51)	TEXT	"".calcMicroP(SB), ABIInternal, $88-32
	0x0000 00000 (pointer_vs_value/code/func.go:51)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/func.go:51)	CMPQ	SP, 16(CX)
	0x000d 00013 (pointer_vs_value/code/func.go:51)	JLS	306
	0x0013 00019 (pointer_vs_value/code/func.go:51)	SUBQ	$88, SP
	0x0017 00023 (pointer_vs_value/code/func.go:51)	MOVQ	BP, 80(SP)
	0x001c 00028 (pointer_vs_value/code/func.go:51)	LEAQ	80(SP), BP
	0x0021 00033 (pointer_vs_value/code/func.go:51)	FUNCDATA	$0, gclocals·9f1eb185e5da802c5a4c3f86f3341582(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:51)	FUNCDATA	$1, gclocals·ca4617d647f88ce0ec7dd4d79922985d(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:51)	FUNCDATA	$2, gclocals·2a7a16a1870e896beb8f3e3383a645e4(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:51)	PCDATA	$0, $0
	0x0021 00033 (pointer_vs_value/code/func.go:51)	PCDATA	$1, $0
	0x0021 00033 (pointer_vs_value/code/func.go:51)	XORPS	X0, X0
	0x0024 00036 (pointer_vs_value/code/func.go:51)	MOVSD	X0, "".~r1+104(SP)
	0x002a 00042 (pointer_vs_value/code/func.go:51)	XORPS	X1, X1
	0x002d 00045 (pointer_vs_value/code/func.go:51)	MOVUPS	X1, "".~r2+112(SP)
	0x0032 00050 (pointer_vs_value/code/func.go:52)	PCDATA	$0, $1
	0x0032 00050 (pointer_vs_value/code/func.go:52)	MOVQ	"".o+96(SP), AX
	0x0037 00055 (pointer_vs_value/code/func.go:52)	TESTB	AL, (AX)
	0x0039 00057 (pointer_vs_value/code/func.go:52)	PCDATA	$0, $0
	0x0039 00057 (pointer_vs_value/code/func.go:52)	MOVSD	8(AX), X1
	0x003e 00062 (pointer_vs_value/code/func.go:52)	UCOMISD	X0, X1
	0x0042 00066 (pointer_vs_value/code/func.go:52)	JNE	252
	0x0048 00072 (pointer_vs_value/code/func.go:52)	JPC	79
	0x004a 00074 (pointer_vs_value/code/func.go:52)	JMP	252
	0x004f 00079 (pointer_vs_value/code/func.go:53)	PCDATA	$0, $1
	0x004f 00079 (pointer_vs_value/code/func.go:53)	PCDATA	$1, $1
	0x004f 00079 (pointer_vs_value/code/func.go:53)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x0056 00086 (pointer_vs_value/code/func.go:53)	PCDATA	$0, $0
	0x0056 00086 (pointer_vs_value/code/func.go:53)	MOVQ	AX, errors.text+48(SP)
	0x005b 00091 (pointer_vs_value/code/func.go:53)	MOVQ	$22, errors.text+56(SP)
	0x0064 00100 (pointer_vs_value/code/func.go:53)	XORPS	X0, X0
	0x0067 00103 (pointer_vs_value/code/func.go:53)	MOVUPS	X0, "".~R0+32(SP)
	0x006c 00108 (<unknown line number>)	NOP
	0x006c 00108 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x006c 00108 ($GOROOT/src/errors/errors.go:59)	LEAQ	type.errors.errorString(SB), AX
	0x0073 00115 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $0
	0x0073 00115 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, (SP)
	0x0077 00119 ($GOROOT/src/errors/errors.go:59)	CALL	runtime.newobject(SB)
	0x007c 00124 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $2
	0x007c 00124 ($GOROOT/src/errors/errors.go:59)	MOVQ	8(SP), DI
	0x0081 00129 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $2
	0x0081 00129 ($GOROOT/src/errors/errors.go:59)	MOVQ	DI, ""..autotmp_6+16(SP)
	0x0086 00134 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+56(SP), AX
	0x008b 00139 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x008b 00139 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x008b 00139 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+48(SP), CX
	0x0090 00144 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, 8(DI)
	0x0094 00148 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $-2
	0x0094 00148 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $-2
	0x0094 00148 ($GOROOT/src/errors/errors.go:59)	CMPL	runtime.writeBarrier(SB), $0
	0x009b 00155 ($GOROOT/src/errors/errors.go:59)	JEQ	159
	0x009d 00157 ($GOROOT/src/errors/errors.go:59)	JMP	242
	0x009f 00159 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, (DI)
	0x00a2 00162 ($GOROOT/src/errors/errors.go:59)	JMP	164
	0x00a4 00164 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x00a4 00164 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x00a4 00164 ($GOROOT/src/errors/errors.go:59)	MOVQ	""..autotmp_6+16(SP), AX
	0x00a9 00169 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, ""..autotmp_5+24(SP)
	0x00ae 00174 (pointer_vs_value/code/func.go:53)	PCDATA	$0, $4
	0x00ae 00174 (pointer_vs_value/code/func.go:53)	LEAQ	go.itab.*errors.errorString,error(SB), CX
	0x00b5 00181 (pointer_vs_value/code/func.go:53)	MOVQ	CX, ""..autotmp_7+64(SP)
	0x00ba 00186 (pointer_vs_value/code/func.go:53)	MOVQ	AX, ""..autotmp_7+72(SP)
	0x00bf 00191 (pointer_vs_value/code/func.go:53)	PCDATA	$0, $1
	0x00bf 00191 (pointer_vs_value/code/func.go:53)	PCDATA	$1, $5
	0x00bf 00191 (pointer_vs_value/code/func.go:53)	MOVQ	CX, "".~R0+32(SP)
	0x00c4 00196 (pointer_vs_value/code/func.go:53)	PCDATA	$0, $0
	0x00c4 00196 (pointer_vs_value/code/func.go:53)	MOVQ	AX, "".~R0+40(SP)
	0x00c9 00201 (pointer_vs_value/code/func.go:53)	JMP	203
	0x00cb 00203 (pointer_vs_value/code/func.go:53)	XORPS	X0, X0
	0x00ce 00206 (pointer_vs_value/code/func.go:53)	MOVSD	X0, "".~r1+104(SP)
	0x00d4 00212 (pointer_vs_value/code/func.go:53)	MOVQ	"".~R0+32(SP), AX
	0x00d9 00217 (pointer_vs_value/code/func.go:53)	PCDATA	$0, $5
	0x00d9 00217 (pointer_vs_value/code/func.go:53)	PCDATA	$1, $4
	0x00d9 00217 (pointer_vs_value/code/func.go:53)	MOVQ	"".~R0+40(SP), CX
	0x00de 00222 (pointer_vs_value/code/func.go:53)	PCDATA	$1, $6
	0x00de 00222 (pointer_vs_value/code/func.go:53)	MOVQ	AX, "".~r2+112(SP)
	0x00e3 00227 (pointer_vs_value/code/func.go:53)	PCDATA	$0, $0
	0x00e3 00227 (pointer_vs_value/code/func.go:53)	MOVQ	CX, "".~r2+120(SP)
	0x00e8 00232 (pointer_vs_value/code/func.go:53)	MOVQ	80(SP), BP
	0x00ed 00237 (pointer_vs_value/code/func.go:53)	ADDQ	$88, SP
	0x00f1 00241 (pointer_vs_value/code/func.go:53)	RET
	0x00f2 00242 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $-2
	0x00f2 00242 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $-2
	0x00f2 00242 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, AX
	0x00f5 00245 ($GOROOT/src/errors/errors.go:59)	CALL	runtime.gcWriteBarrier(SB)
	0x00fa 00250 ($GOROOT/src/errors/errors.go:59)	JMP	164
	0x00fc 00252 (pointer_vs_value/code/func.go:55)	PCDATA	$0, $1
	0x00fc 00252 (pointer_vs_value/code/func.go:55)	PCDATA	$1, $0
	0x00fc 00252 (pointer_vs_value/code/func.go:55)	MOVQ	"".o+96(SP), AX
	0x0101 00257 (pointer_vs_value/code/func.go:55)	TESTB	AL, (AX)
	0x0103 00259 (pointer_vs_value/code/func.go:55)	PCDATA	$0, $4
	0x0103 00259 (pointer_vs_value/code/func.go:55)	PCDATA	$1, $4
	0x0103 00259 (pointer_vs_value/code/func.go:55)	MOVQ	"".o+96(SP), CX
	0x0108 00264 (pointer_vs_value/code/func.go:55)	TESTB	AL, (CX)
	0x010a 00266 (pointer_vs_value/code/func.go:55)	PCDATA	$0, $5
	0x010a 00266 (pointer_vs_value/code/func.go:55)	MOVQ	(AX), AX
	0x010d 00269 (pointer_vs_value/code/func.go:55)	XORPS	X0, X0
	0x0110 00272 (pointer_vs_value/code/func.go:55)	CVTSQ2SD	AX, X0
	0x0115 00277 (pointer_vs_value/code/func.go:55)	PCDATA	$0, $0
	0x0115 00277 (pointer_vs_value/code/func.go:55)	DIVSD	8(CX), X0
	0x011a 00282 (pointer_vs_value/code/func.go:55)	MOVSD	X0, "".~r1+104(SP)
	0x0120 00288 (pointer_vs_value/code/func.go:55)	PCDATA	$1, $6
	0x0120 00288 (pointer_vs_value/code/func.go:55)	XORPS	X0, X0
	0x0123 00291 (pointer_vs_value/code/func.go:55)	MOVUPS	X0, "".~r2+112(SP)
	0x0128 00296 (pointer_vs_value/code/func.go:55)	MOVQ	80(SP), BP
	0x012d 00301 (pointer_vs_value/code/func.go:55)	ADDQ	$88, SP
	0x0131 00305 (pointer_vs_value/code/func.go:55)	RET
	0x0132 00306 (pointer_vs_value/code/func.go:55)	NOP
	0x0132 00306 (pointer_vs_value/code/func.go:51)	PCDATA	$1, $-1
	0x0132 00306 (pointer_vs_value/code/func.go:51)	PCDATA	$0, $-1
	0x0132 00306 (pointer_vs_value/code/func.go:51)	CALL	runtime.morestack_noctxt(SB)
	0x0137 00311 (pointer_vs_value/code/func.go:51)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 1f  eH..%....H;a....
	0x0010 01 00 00 48 83 ec 58 48 89 6c 24 50 48 8d 6c 24  ...H..XH.l$PH.l$
	0x0020 50 0f 57 c0 f2 0f 11 44 24 68 0f 57 c9 0f 11 4c  P.W....D$h.W...L
	0x0030 24 70 48 8b 44 24 60 84 00 f2 0f 10 48 08 66 0f  $pH.D$`.....H.f.
	0x0040 2e c8 0f 85 b4 00 00 00 7b 05 e9 ad 00 00 00 48  ........{......H
	0x0050 8d 05 00 00 00 00 48 89 44 24 30 48 c7 44 24 38  ......H.D$0H.D$8
	0x0060 16 00 00 00 0f 57 c0 0f 11 44 24 20 48 8d 05 00  .....W...D$ H...
	0x0070 00 00 00 48 89 04 24 e8 00 00 00 00 48 8b 7c 24  ...H..$.....H.|$
	0x0080 08 48 89 7c 24 10 48 8b 44 24 38 48 8b 4c 24 30  .H.|$.H.D$8H.L$0
	0x0090 48 89 47 08 83 3d 00 00 00 00 00 74 02 eb 53 48  H.G..=.....t..SH
	0x00a0 89 0f eb 00 48 8b 44 24 10 48 89 44 24 18 48 8d  ....H.D$.H.D$.H.
	0x00b0 0d 00 00 00 00 48 89 4c 24 40 48 89 44 24 48 48  .....H.L$@H.D$HH
	0x00c0 89 4c 24 20 48 89 44 24 28 eb 00 0f 57 c0 f2 0f  .L$ H.D$(...W...
	0x00d0 11 44 24 68 48 8b 44 24 20 48 8b 4c 24 28 48 89  .D$hH.D$ H.L$(H.
	0x00e0 44 24 70 48 89 4c 24 78 48 8b 6c 24 50 48 83 c4  D$pH.L$xH.l$PH..
	0x00f0 58 c3 48 89 c8 e8 00 00 00 00 eb a8 48 8b 44 24  X.H.........H.D$
	0x0100 60 84 00 48 8b 4c 24 60 84 01 48 8b 00 0f 57 c0  `..H.L$`..H...W.
	0x0110 f2 48 0f 2a c0 f2 0f 5e 41 08 f2 0f 11 44 24 68  .H.*...^A....D$h
	0x0120 0f 57 c0 0f 11 44 24 70 48 8b 6c 24 50 48 83 c4  .W...D$pH.l$PH..
	0x0130 58 c3 e8 00 00 00 00 e9 c4 fe ff ff              X...........
	rel 5+4 t=16 TLS+0
	rel 82+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 111+4 t=15 type.errors.errorString+0
	rel 120+4 t=8 runtime.newobject+0
	rel 150+4 t=15 runtime.writeBarrier+-1
	rel 177+4 t=15 go.itab.*errors.errorString,error+0
	rel 246+4 t=8 runtime.gcWriteBarrier+0
	rel 307+4 t=8 runtime.morestack_noctxt+0
"".calcTinyP STEXT size=316 args=0x20 locals=0x58
	0x0000 00000 (pointer_vs_value/code/func.go:58)	TEXT	"".calcTinyP(SB), ABIInternal, $88-32
	0x0000 00000 (pointer_vs_value/code/func.go:58)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/func.go:58)	CMPQ	SP, 16(CX)
	0x000d 00013 (pointer_vs_value/code/func.go:58)	JLS	306
	0x0013 00019 (pointer_vs_value/code/func.go:58)	SUBQ	$88, SP
	0x0017 00023 (pointer_vs_value/code/func.go:58)	MOVQ	BP, 80(SP)
	0x001c 00028 (pointer_vs_value/code/func.go:58)	LEAQ	80(SP), BP
	0x0021 00033 (pointer_vs_value/code/func.go:58)	FUNCDATA	$0, gclocals·9f1eb185e5da802c5a4c3f86f3341582(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:58)	FUNCDATA	$1, gclocals·ca4617d647f88ce0ec7dd4d79922985d(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:58)	FUNCDATA	$2, gclocals·2a7a16a1870e896beb8f3e3383a645e4(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:58)	PCDATA	$0, $0
	0x0021 00033 (pointer_vs_value/code/func.go:58)	PCDATA	$1, $0
	0x0021 00033 (pointer_vs_value/code/func.go:58)	XORPS	X0, X0
	0x0024 00036 (pointer_vs_value/code/func.go:58)	MOVSD	X0, "".~r1+104(SP)
	0x002a 00042 (pointer_vs_value/code/func.go:58)	XORPS	X1, X1
	0x002d 00045 (pointer_vs_value/code/func.go:58)	MOVUPS	X1, "".~r2+112(SP)
	0x0032 00050 (pointer_vs_value/code/func.go:59)	PCDATA	$0, $1
	0x0032 00050 (pointer_vs_value/code/func.go:59)	MOVQ	"".o+96(SP), AX
	0x0037 00055 (pointer_vs_value/code/func.go:59)	TESTB	AL, (AX)
	0x0039 00057 (pointer_vs_value/code/func.go:59)	PCDATA	$0, $0
	0x0039 00057 (pointer_vs_value/code/func.go:59)	MOVSD	8(AX), X1
	0x003e 00062 (pointer_vs_value/code/func.go:59)	UCOMISD	X0, X1
	0x0042 00066 (pointer_vs_value/code/func.go:59)	JNE	252
	0x0048 00072 (pointer_vs_value/code/func.go:59)	JPC	79
	0x004a 00074 (pointer_vs_value/code/func.go:59)	JMP	252
	0x004f 00079 (pointer_vs_value/code/func.go:60)	PCDATA	$0, $1
	0x004f 00079 (pointer_vs_value/code/func.go:60)	PCDATA	$1, $1
	0x004f 00079 (pointer_vs_value/code/func.go:60)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x0056 00086 (pointer_vs_value/code/func.go:60)	PCDATA	$0, $0
	0x0056 00086 (pointer_vs_value/code/func.go:60)	MOVQ	AX, errors.text+48(SP)
	0x005b 00091 (pointer_vs_value/code/func.go:60)	MOVQ	$22, errors.text+56(SP)
	0x0064 00100 (pointer_vs_value/code/func.go:60)	XORPS	X0, X0
	0x0067 00103 (pointer_vs_value/code/func.go:60)	MOVUPS	X0, "".~R0+32(SP)
	0x006c 00108 (<unknown line number>)	NOP
	0x006c 00108 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x006c 00108 ($GOROOT/src/errors/errors.go:59)	LEAQ	type.errors.errorString(SB), AX
	0x0073 00115 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $0
	0x0073 00115 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, (SP)
	0x0077 00119 ($GOROOT/src/errors/errors.go:59)	CALL	runtime.newobject(SB)
	0x007c 00124 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $2
	0x007c 00124 ($GOROOT/src/errors/errors.go:59)	MOVQ	8(SP), DI
	0x0081 00129 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $2
	0x0081 00129 ($GOROOT/src/errors/errors.go:59)	MOVQ	DI, ""..autotmp_6+16(SP)
	0x0086 00134 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+56(SP), AX
	0x008b 00139 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x008b 00139 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x008b 00139 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+48(SP), CX
	0x0090 00144 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, 8(DI)
	0x0094 00148 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $-2
	0x0094 00148 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $-2
	0x0094 00148 ($GOROOT/src/errors/errors.go:59)	CMPL	runtime.writeBarrier(SB), $0
	0x009b 00155 ($GOROOT/src/errors/errors.go:59)	JEQ	159
	0x009d 00157 ($GOROOT/src/errors/errors.go:59)	JMP	242
	0x009f 00159 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, (DI)
	0x00a2 00162 ($GOROOT/src/errors/errors.go:59)	JMP	164
	0x00a4 00164 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x00a4 00164 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x00a4 00164 ($GOROOT/src/errors/errors.go:59)	MOVQ	""..autotmp_6+16(SP), AX
	0x00a9 00169 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, ""..autotmp_5+24(SP)
	0x00ae 00174 (pointer_vs_value/code/func.go:60)	PCDATA	$0, $4
	0x00ae 00174 (pointer_vs_value/code/func.go:60)	LEAQ	go.itab.*errors.errorString,error(SB), CX
	0x00b5 00181 (pointer_vs_value/code/func.go:60)	MOVQ	CX, ""..autotmp_7+64(SP)
	0x00ba 00186 (pointer_vs_value/code/func.go:60)	MOVQ	AX, ""..autotmp_7+72(SP)
	0x00bf 00191 (pointer_vs_value/code/func.go:60)	PCDATA	$0, $1
	0x00bf 00191 (pointer_vs_value/code/func.go:60)	PCDATA	$1, $5
	0x00bf 00191 (pointer_vs_value/code/func.go:60)	MOVQ	CX, "".~R0+32(SP)
	0x00c4 00196 (pointer_vs_value/code/func.go:60)	PCDATA	$0, $0
	0x00c4 00196 (pointer_vs_value/code/func.go:60)	MOVQ	AX, "".~R0+40(SP)
	0x00c9 00201 (pointer_vs_value/code/func.go:60)	JMP	203
	0x00cb 00203 (pointer_vs_value/code/func.go:60)	XORPS	X0, X0
	0x00ce 00206 (pointer_vs_value/code/func.go:60)	MOVSD	X0, "".~r1+104(SP)
	0x00d4 00212 (pointer_vs_value/code/func.go:60)	MOVQ	"".~R0+32(SP), AX
	0x00d9 00217 (pointer_vs_value/code/func.go:60)	PCDATA	$0, $5
	0x00d9 00217 (pointer_vs_value/code/func.go:60)	PCDATA	$1, $4
	0x00d9 00217 (pointer_vs_value/code/func.go:60)	MOVQ	"".~R0+40(SP), CX
	0x00de 00222 (pointer_vs_value/code/func.go:60)	PCDATA	$1, $6
	0x00de 00222 (pointer_vs_value/code/func.go:60)	MOVQ	AX, "".~r2+112(SP)
	0x00e3 00227 (pointer_vs_value/code/func.go:60)	PCDATA	$0, $0
	0x00e3 00227 (pointer_vs_value/code/func.go:60)	MOVQ	CX, "".~r2+120(SP)
	0x00e8 00232 (pointer_vs_value/code/func.go:60)	MOVQ	80(SP), BP
	0x00ed 00237 (pointer_vs_value/code/func.go:60)	ADDQ	$88, SP
	0x00f1 00241 (pointer_vs_value/code/func.go:60)	RET
	0x00f2 00242 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $-2
	0x00f2 00242 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $-2
	0x00f2 00242 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, AX
	0x00f5 00245 ($GOROOT/src/errors/errors.go:59)	CALL	runtime.gcWriteBarrier(SB)
	0x00fa 00250 ($GOROOT/src/errors/errors.go:59)	JMP	164
	0x00fc 00252 (pointer_vs_value/code/func.go:62)	PCDATA	$0, $1
	0x00fc 00252 (pointer_vs_value/code/func.go:62)	PCDATA	$1, $0
	0x00fc 00252 (pointer_vs_value/code/func.go:62)	MOVQ	"".o+96(SP), AX
	0x0101 00257 (pointer_vs_value/code/func.go:62)	TESTB	AL, (AX)
	0x0103 00259 (pointer_vs_value/code/func.go:62)	PCDATA	$0, $4
	0x0103 00259 (pointer_vs_value/code/func.go:62)	PCDATA	$1, $4
	0x0103 00259 (pointer_vs_value/code/func.go:62)	MOVQ	"".o+96(SP), CX
	0x0108 00264 (pointer_vs_value/code/func.go:62)	TESTB	AL, (CX)
	0x010a 00266 (pointer_vs_value/code/func.go:62)	PCDATA	$0, $5
	0x010a 00266 (pointer_vs_value/code/func.go:62)	MOVQ	(AX), AX
	0x010d 00269 (pointer_vs_value/code/func.go:62)	XORPS	X0, X0
	0x0110 00272 (pointer_vs_value/code/func.go:62)	CVTSQ2SD	AX, X0
	0x0115 00277 (pointer_vs_value/code/func.go:62)	PCDATA	$0, $0
	0x0115 00277 (pointer_vs_value/code/func.go:62)	DIVSD	8(CX), X0
	0x011a 00282 (pointer_vs_value/code/func.go:62)	MOVSD	X0, "".~r1+104(SP)
	0x0120 00288 (pointer_vs_value/code/func.go:62)	PCDATA	$1, $6
	0x0120 00288 (pointer_vs_value/code/func.go:62)	XORPS	X0, X0
	0x0123 00291 (pointer_vs_value/code/func.go:62)	MOVUPS	X0, "".~r2+112(SP)
	0x0128 00296 (pointer_vs_value/code/func.go:62)	MOVQ	80(SP), BP
	0x012d 00301 (pointer_vs_value/code/func.go:62)	ADDQ	$88, SP
	0x0131 00305 (pointer_vs_value/code/func.go:62)	RET
	0x0132 00306 (pointer_vs_value/code/func.go:62)	NOP
	0x0132 00306 (pointer_vs_value/code/func.go:58)	PCDATA	$1, $-1
	0x0132 00306 (pointer_vs_value/code/func.go:58)	PCDATA	$0, $-1
	0x0132 00306 (pointer_vs_value/code/func.go:58)	CALL	runtime.morestack_noctxt(SB)
	0x0137 00311 (pointer_vs_value/code/func.go:58)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 1f  eH..%....H;a....
	0x0010 01 00 00 48 83 ec 58 48 89 6c 24 50 48 8d 6c 24  ...H..XH.l$PH.l$
	0x0020 50 0f 57 c0 f2 0f 11 44 24 68 0f 57 c9 0f 11 4c  P.W....D$h.W...L
	0x0030 24 70 48 8b 44 24 60 84 00 f2 0f 10 48 08 66 0f  $pH.D$`.....H.f.
	0x0040 2e c8 0f 85 b4 00 00 00 7b 05 e9 ad 00 00 00 48  ........{......H
	0x0050 8d 05 00 00 00 00 48 89 44 24 30 48 c7 44 24 38  ......H.D$0H.D$8
	0x0060 16 00 00 00 0f 57 c0 0f 11 44 24 20 48 8d 05 00  .....W...D$ H...
	0x0070 00 00 00 48 89 04 24 e8 00 00 00 00 48 8b 7c 24  ...H..$.....H.|$
	0x0080 08 48 89 7c 24 10 48 8b 44 24 38 48 8b 4c 24 30  .H.|$.H.D$8H.L$0
	0x0090 48 89 47 08 83 3d 00 00 00 00 00 74 02 eb 53 48  H.G..=.....t..SH
	0x00a0 89 0f eb 00 48 8b 44 24 10 48 89 44 24 18 48 8d  ....H.D$.H.D$.H.
	0x00b0 0d 00 00 00 00 48 89 4c 24 40 48 89 44 24 48 48  .....H.L$@H.D$HH
	0x00c0 89 4c 24 20 48 89 44 24 28 eb 00 0f 57 c0 f2 0f  .L$ H.D$(...W...
	0x00d0 11 44 24 68 48 8b 44 24 20 48 8b 4c 24 28 48 89  .D$hH.D$ H.L$(H.
	0x00e0 44 24 70 48 89 4c 24 78 48 8b 6c 24 50 48 83 c4  D$pH.L$xH.l$PH..
	0x00f0 58 c3 48 89 c8 e8 00 00 00 00 eb a8 48 8b 44 24  X.H.........H.D$
	0x0100 60 84 00 48 8b 4c 24 60 84 01 48 8b 00 0f 57 c0  `..H.L$`..H...W.
	0x0110 f2 48 0f 2a c0 f2 0f 5e 41 08 f2 0f 11 44 24 68  .H.*...^A....D$h
	0x0120 0f 57 c0 0f 11 44 24 70 48 8b 6c 24 50 48 83 c4  .W...D$pH.l$PH..
	0x0130 58 c3 e8 00 00 00 00 e9 c4 fe ff ff              X...........
	rel 5+4 t=16 TLS+0
	rel 82+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 111+4 t=15 type.errors.errorString+0
	rel 120+4 t=8 runtime.newobject+0
	rel 150+4 t=15 runtime.writeBarrier+-1
	rel 177+4 t=15 go.itab.*errors.errorString,error+0
	rel 246+4 t=8 runtime.gcWriteBarrier+0
	rel 307+4 t=8 runtime.morestack_noctxt+0
"".calcMiniP STEXT size=316 args=0x20 locals=0x58
	0x0000 00000 (pointer_vs_value/code/func.go:65)	TEXT	"".calcMiniP(SB), ABIInternal, $88-32
	0x0000 00000 (pointer_vs_value/code/func.go:65)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/func.go:65)	CMPQ	SP, 16(CX)
	0x000d 00013 (pointer_vs_value/code/func.go:65)	JLS	306
	0x0013 00019 (pointer_vs_value/code/func.go:65)	SUBQ	$88, SP
	0x0017 00023 (pointer_vs_value/code/func.go:65)	MOVQ	BP, 80(SP)
	0x001c 00028 (pointer_vs_value/code/func.go:65)	LEAQ	80(SP), BP
	0x0021 00033 (pointer_vs_value/code/func.go:65)	FUNCDATA	$0, gclocals·9f1eb185e5da802c5a4c3f86f3341582(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:65)	FUNCDATA	$1, gclocals·ca4617d647f88ce0ec7dd4d79922985d(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:65)	FUNCDATA	$2, gclocals·2a7a16a1870e896beb8f3e3383a645e4(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:65)	PCDATA	$0, $0
	0x0021 00033 (pointer_vs_value/code/func.go:65)	PCDATA	$1, $0
	0x0021 00033 (pointer_vs_value/code/func.go:65)	XORPS	X0, X0
	0x0024 00036 (pointer_vs_value/code/func.go:65)	MOVSD	X0, "".~r1+104(SP)
	0x002a 00042 (pointer_vs_value/code/func.go:65)	XORPS	X1, X1
	0x002d 00045 (pointer_vs_value/code/func.go:65)	MOVUPS	X1, "".~r2+112(SP)
	0x0032 00050 (pointer_vs_value/code/func.go:66)	PCDATA	$0, $1
	0x0032 00050 (pointer_vs_value/code/func.go:66)	MOVQ	"".o+96(SP), AX
	0x0037 00055 (pointer_vs_value/code/func.go:66)	TESTB	AL, (AX)
	0x0039 00057 (pointer_vs_value/code/func.go:66)	PCDATA	$0, $0
	0x0039 00057 (pointer_vs_value/code/func.go:66)	MOVSD	24(AX), X1
	0x003e 00062 (pointer_vs_value/code/func.go:66)	UCOMISD	X0, X1
	0x0042 00066 (pointer_vs_value/code/func.go:66)	JNE	252
	0x0048 00072 (pointer_vs_value/code/func.go:66)	JPC	79
	0x004a 00074 (pointer_vs_value/code/func.go:66)	JMP	252
	0x004f 00079 (pointer_vs_value/code/func.go:67)	PCDATA	$0, $1
	0x004f 00079 (pointer_vs_value/code/func.go:67)	PCDATA	$1, $1
	0x004f 00079 (pointer_vs_value/code/func.go:67)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x0056 00086 (pointer_vs_value/code/func.go:67)	PCDATA	$0, $0
	0x0056 00086 (pointer_vs_value/code/func.go:67)	MOVQ	AX, errors.text+48(SP)
	0x005b 00091 (pointer_vs_value/code/func.go:67)	MOVQ	$22, errors.text+56(SP)
	0x0064 00100 (pointer_vs_value/code/func.go:67)	XORPS	X0, X0
	0x0067 00103 (pointer_vs_value/code/func.go:67)	MOVUPS	X0, "".~R0+32(SP)
	0x006c 00108 (<unknown line number>)	NOP
	0x006c 00108 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x006c 00108 ($GOROOT/src/errors/errors.go:59)	LEAQ	type.errors.errorString(SB), AX
	0x0073 00115 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $0
	0x0073 00115 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, (SP)
	0x0077 00119 ($GOROOT/src/errors/errors.go:59)	CALL	runtime.newobject(SB)
	0x007c 00124 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $2
	0x007c 00124 ($GOROOT/src/errors/errors.go:59)	MOVQ	8(SP), DI
	0x0081 00129 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $2
	0x0081 00129 ($GOROOT/src/errors/errors.go:59)	MOVQ	DI, ""..autotmp_6+16(SP)
	0x0086 00134 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+56(SP), AX
	0x008b 00139 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x008b 00139 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x008b 00139 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+48(SP), CX
	0x0090 00144 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, 8(DI)
	0x0094 00148 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $-2
	0x0094 00148 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $-2
	0x0094 00148 ($GOROOT/src/errors/errors.go:59)	CMPL	runtime.writeBarrier(SB), $0
	0x009b 00155 ($GOROOT/src/errors/errors.go:59)	JEQ	159
	0x009d 00157 ($GOROOT/src/errors/errors.go:59)	JMP	242
	0x009f 00159 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, (DI)
	0x00a2 00162 ($GOROOT/src/errors/errors.go:59)	JMP	164
	0x00a4 00164 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x00a4 00164 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x00a4 00164 ($GOROOT/src/errors/errors.go:59)	MOVQ	""..autotmp_6+16(SP), AX
	0x00a9 00169 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, ""..autotmp_5+24(SP)
	0x00ae 00174 (pointer_vs_value/code/func.go:67)	PCDATA	$0, $4
	0x00ae 00174 (pointer_vs_value/code/func.go:67)	LEAQ	go.itab.*errors.errorString,error(SB), CX
	0x00b5 00181 (pointer_vs_value/code/func.go:67)	MOVQ	CX, ""..autotmp_7+64(SP)
	0x00ba 00186 (pointer_vs_value/code/func.go:67)	MOVQ	AX, ""..autotmp_7+72(SP)
	0x00bf 00191 (pointer_vs_value/code/func.go:67)	PCDATA	$0, $1
	0x00bf 00191 (pointer_vs_value/code/func.go:67)	PCDATA	$1, $5
	0x00bf 00191 (pointer_vs_value/code/func.go:67)	MOVQ	CX, "".~R0+32(SP)
	0x00c4 00196 (pointer_vs_value/code/func.go:67)	PCDATA	$0, $0
	0x00c4 00196 (pointer_vs_value/code/func.go:67)	MOVQ	AX, "".~R0+40(SP)
	0x00c9 00201 (pointer_vs_value/code/func.go:67)	JMP	203
	0x00cb 00203 (pointer_vs_value/code/func.go:67)	XORPS	X0, X0
	0x00ce 00206 (pointer_vs_value/code/func.go:67)	MOVSD	X0, "".~r1+104(SP)
	0x00d4 00212 (pointer_vs_value/code/func.go:67)	MOVQ	"".~R0+32(SP), AX
	0x00d9 00217 (pointer_vs_value/code/func.go:67)	PCDATA	$0, $5
	0x00d9 00217 (pointer_vs_value/code/func.go:67)	PCDATA	$1, $4
	0x00d9 00217 (pointer_vs_value/code/func.go:67)	MOVQ	"".~R0+40(SP), CX
	0x00de 00222 (pointer_vs_value/code/func.go:67)	PCDATA	$1, $6
	0x00de 00222 (pointer_vs_value/code/func.go:67)	MOVQ	AX, "".~r2+112(SP)
	0x00e3 00227 (pointer_vs_value/code/func.go:67)	PCDATA	$0, $0
	0x00e3 00227 (pointer_vs_value/code/func.go:67)	MOVQ	CX, "".~r2+120(SP)
	0x00e8 00232 (pointer_vs_value/code/func.go:67)	MOVQ	80(SP), BP
	0x00ed 00237 (pointer_vs_value/code/func.go:67)	ADDQ	$88, SP
	0x00f1 00241 (pointer_vs_value/code/func.go:67)	RET
	0x00f2 00242 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $-2
	0x00f2 00242 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $-2
	0x00f2 00242 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, AX
	0x00f5 00245 ($GOROOT/src/errors/errors.go:59)	CALL	runtime.gcWriteBarrier(SB)
	0x00fa 00250 ($GOROOT/src/errors/errors.go:59)	JMP	164
	0x00fc 00252 (pointer_vs_value/code/func.go:69)	PCDATA	$0, $1
	0x00fc 00252 (pointer_vs_value/code/func.go:69)	PCDATA	$1, $0
	0x00fc 00252 (pointer_vs_value/code/func.go:69)	MOVQ	"".o+96(SP), AX
	0x0101 00257 (pointer_vs_value/code/func.go:69)	TESTB	AL, (AX)
	0x0103 00259 (pointer_vs_value/code/func.go:69)	PCDATA	$0, $4
	0x0103 00259 (pointer_vs_value/code/func.go:69)	PCDATA	$1, $4
	0x0103 00259 (pointer_vs_value/code/func.go:69)	MOVQ	"".o+96(SP), CX
	0x0108 00264 (pointer_vs_value/code/func.go:69)	TESTB	AL, (CX)
	0x010a 00266 (pointer_vs_value/code/func.go:69)	PCDATA	$0, $5
	0x010a 00266 (pointer_vs_value/code/func.go:69)	MOVQ	(AX), AX
	0x010d 00269 (pointer_vs_value/code/func.go:69)	XORPS	X0, X0
	0x0110 00272 (pointer_vs_value/code/func.go:69)	CVTSQ2SD	AX, X0
	0x0115 00277 (pointer_vs_value/code/func.go:69)	PCDATA	$0, $0
	0x0115 00277 (pointer_vs_value/code/func.go:69)	DIVSD	24(CX), X0
	0x011a 00282 (pointer_vs_value/code/func.go:69)	MOVSD	X0, "".~r1+104(SP)
	0x0120 00288 (pointer_vs_value/code/func.go:69)	PCDATA	$1, $6
	0x0120 00288 (pointer_vs_value/code/func.go:69)	XORPS	X0, X0
	0x0123 00291 (pointer_vs_value/code/func.go:69)	MOVUPS	X0, "".~r2+112(SP)
	0x0128 00296 (pointer_vs_value/code/func.go:69)	MOVQ	80(SP), BP
	0x012d 00301 (pointer_vs_value/code/func.go:69)	ADDQ	$88, SP
	0x0131 00305 (pointer_vs_value/code/func.go:69)	RET
	0x0132 00306 (pointer_vs_value/code/func.go:69)	NOP
	0x0132 00306 (pointer_vs_value/code/func.go:65)	PCDATA	$1, $-1
	0x0132 00306 (pointer_vs_value/code/func.go:65)	PCDATA	$0, $-1
	0x0132 00306 (pointer_vs_value/code/func.go:65)	CALL	runtime.morestack_noctxt(SB)
	0x0137 00311 (pointer_vs_value/code/func.go:65)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 1f  eH..%....H;a....
	0x0010 01 00 00 48 83 ec 58 48 89 6c 24 50 48 8d 6c 24  ...H..XH.l$PH.l$
	0x0020 50 0f 57 c0 f2 0f 11 44 24 68 0f 57 c9 0f 11 4c  P.W....D$h.W...L
	0x0030 24 70 48 8b 44 24 60 84 00 f2 0f 10 48 18 66 0f  $pH.D$`.....H.f.
	0x0040 2e c8 0f 85 b4 00 00 00 7b 05 e9 ad 00 00 00 48  ........{......H
	0x0050 8d 05 00 00 00 00 48 89 44 24 30 48 c7 44 24 38  ......H.D$0H.D$8
	0x0060 16 00 00 00 0f 57 c0 0f 11 44 24 20 48 8d 05 00  .....W...D$ H...
	0x0070 00 00 00 48 89 04 24 e8 00 00 00 00 48 8b 7c 24  ...H..$.....H.|$
	0x0080 08 48 89 7c 24 10 48 8b 44 24 38 48 8b 4c 24 30  .H.|$.H.D$8H.L$0
	0x0090 48 89 47 08 83 3d 00 00 00 00 00 74 02 eb 53 48  H.G..=.....t..SH
	0x00a0 89 0f eb 00 48 8b 44 24 10 48 89 44 24 18 48 8d  ....H.D$.H.D$.H.
	0x00b0 0d 00 00 00 00 48 89 4c 24 40 48 89 44 24 48 48  .....H.L$@H.D$HH
	0x00c0 89 4c 24 20 48 89 44 24 28 eb 00 0f 57 c0 f2 0f  .L$ H.D$(...W...
	0x00d0 11 44 24 68 48 8b 44 24 20 48 8b 4c 24 28 48 89  .D$hH.D$ H.L$(H.
	0x00e0 44 24 70 48 89 4c 24 78 48 8b 6c 24 50 48 83 c4  D$pH.L$xH.l$PH..
	0x00f0 58 c3 48 89 c8 e8 00 00 00 00 eb a8 48 8b 44 24  X.H.........H.D$
	0x0100 60 84 00 48 8b 4c 24 60 84 01 48 8b 00 0f 57 c0  `..H.L$`..H...W.
	0x0110 f2 48 0f 2a c0 f2 0f 5e 41 18 f2 0f 11 44 24 68  .H.*...^A....D$h
	0x0120 0f 57 c0 0f 11 44 24 70 48 8b 6c 24 50 48 83 c4  .W...D$pH.l$PH..
	0x0130 58 c3 e8 00 00 00 00 e9 c4 fe ff ff              X...........
	rel 5+4 t=16 TLS+0
	rel 82+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 111+4 t=15 type.errors.errorString+0
	rel 120+4 t=8 runtime.newobject+0
	rel 150+4 t=15 runtime.writeBarrier+-1
	rel 177+4 t=15 go.itab.*errors.errorString,error+0
	rel 246+4 t=8 runtime.gcWriteBarrier+0
	rel 307+4 t=8 runtime.morestack_noctxt+0
"".calcMegaP STEXT size=316 args=0x20 locals=0x58
	0x0000 00000 (pointer_vs_value/code/func.go:72)	TEXT	"".calcMegaP(SB), ABIInternal, $88-32
	0x0000 00000 (pointer_vs_value/code/func.go:72)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/func.go:72)	CMPQ	SP, 16(CX)
	0x000d 00013 (pointer_vs_value/code/func.go:72)	JLS	306
	0x0013 00019 (pointer_vs_value/code/func.go:72)	SUBQ	$88, SP
	0x0017 00023 (pointer_vs_value/code/func.go:72)	MOVQ	BP, 80(SP)
	0x001c 00028 (pointer_vs_value/code/func.go:72)	LEAQ	80(SP), BP
	0x0021 00033 (pointer_vs_value/code/func.go:72)	FUNCDATA	$0, gclocals·9f1eb185e5da802c5a4c3f86f3341582(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:72)	FUNCDATA	$1, gclocals·ca4617d647f88ce0ec7dd4d79922985d(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:72)	FUNCDATA	$2, gclocals·2a7a16a1870e896beb8f3e3383a645e4(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:72)	PCDATA	$0, $0
	0x0021 00033 (pointer_vs_value/code/func.go:72)	PCDATA	$1, $0
	0x0021 00033 (pointer_vs_value/code/func.go:72)	XORPS	X0, X0
	0x0024 00036 (pointer_vs_value/code/func.go:72)	MOVSD	X0, "".~r1+104(SP)
	0x002a 00042 (pointer_vs_value/code/func.go:72)	XORPS	X1, X1
	0x002d 00045 (pointer_vs_value/code/func.go:72)	MOVUPS	X1, "".~r2+112(SP)
	0x0032 00050 (pointer_vs_value/code/func.go:73)	PCDATA	$0, $1
	0x0032 00050 (pointer_vs_value/code/func.go:73)	MOVQ	"".o+96(SP), AX
	0x0037 00055 (pointer_vs_value/code/func.go:73)	TESTB	AL, (AX)
	0x0039 00057 (pointer_vs_value/code/func.go:73)	PCDATA	$0, $0
	0x0039 00057 (pointer_vs_value/code/func.go:73)	MOVSD	88(AX), X1
	0x003e 00062 (pointer_vs_value/code/func.go:73)	UCOMISD	X0, X1
	0x0042 00066 (pointer_vs_value/code/func.go:73)	JNE	252
	0x0048 00072 (pointer_vs_value/code/func.go:73)	JPC	79
	0x004a 00074 (pointer_vs_value/code/func.go:73)	JMP	252
	0x004f 00079 (pointer_vs_value/code/func.go:74)	PCDATA	$0, $1
	0x004f 00079 (pointer_vs_value/code/func.go:74)	PCDATA	$1, $1
	0x004f 00079 (pointer_vs_value/code/func.go:74)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x0056 00086 (pointer_vs_value/code/func.go:74)	PCDATA	$0, $0
	0x0056 00086 (pointer_vs_value/code/func.go:74)	MOVQ	AX, errors.text+48(SP)
	0x005b 00091 (pointer_vs_value/code/func.go:74)	MOVQ	$22, errors.text+56(SP)
	0x0064 00100 (pointer_vs_value/code/func.go:74)	XORPS	X0, X0
	0x0067 00103 (pointer_vs_value/code/func.go:74)	MOVUPS	X0, "".~R0+32(SP)
	0x006c 00108 (<unknown line number>)	NOP
	0x006c 00108 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x006c 00108 ($GOROOT/src/errors/errors.go:59)	LEAQ	type.errors.errorString(SB), AX
	0x0073 00115 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $0
	0x0073 00115 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, (SP)
	0x0077 00119 ($GOROOT/src/errors/errors.go:59)	CALL	runtime.newobject(SB)
	0x007c 00124 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $2
	0x007c 00124 ($GOROOT/src/errors/errors.go:59)	MOVQ	8(SP), DI
	0x0081 00129 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $2
	0x0081 00129 ($GOROOT/src/errors/errors.go:59)	MOVQ	DI, ""..autotmp_6+16(SP)
	0x0086 00134 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+56(SP), AX
	0x008b 00139 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x008b 00139 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x008b 00139 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+48(SP), CX
	0x0090 00144 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, 8(DI)
	0x0094 00148 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $-2
	0x0094 00148 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $-2
	0x0094 00148 ($GOROOT/src/errors/errors.go:59)	CMPL	runtime.writeBarrier(SB), $0
	0x009b 00155 ($GOROOT/src/errors/errors.go:59)	JEQ	159
	0x009d 00157 ($GOROOT/src/errors/errors.go:59)	JMP	242
	0x009f 00159 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, (DI)
	0x00a2 00162 ($GOROOT/src/errors/errors.go:59)	JMP	164
	0x00a4 00164 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x00a4 00164 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x00a4 00164 ($GOROOT/src/errors/errors.go:59)	MOVQ	""..autotmp_6+16(SP), AX
	0x00a9 00169 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, ""..autotmp_5+24(SP)
	0x00ae 00174 (pointer_vs_value/code/func.go:74)	PCDATA	$0, $4
	0x00ae 00174 (pointer_vs_value/code/func.go:74)	LEAQ	go.itab.*errors.errorString,error(SB), CX
	0x00b5 00181 (pointer_vs_value/code/func.go:74)	MOVQ	CX, ""..autotmp_7+64(SP)
	0x00ba 00186 (pointer_vs_value/code/func.go:74)	MOVQ	AX, ""..autotmp_7+72(SP)
	0x00bf 00191 (pointer_vs_value/code/func.go:74)	PCDATA	$0, $1
	0x00bf 00191 (pointer_vs_value/code/func.go:74)	PCDATA	$1, $5
	0x00bf 00191 (pointer_vs_value/code/func.go:74)	MOVQ	CX, "".~R0+32(SP)
	0x00c4 00196 (pointer_vs_value/code/func.go:74)	PCDATA	$0, $0
	0x00c4 00196 (pointer_vs_value/code/func.go:74)	MOVQ	AX, "".~R0+40(SP)
	0x00c9 00201 (pointer_vs_value/code/func.go:74)	JMP	203
	0x00cb 00203 (pointer_vs_value/code/func.go:74)	XORPS	X0, X0
	0x00ce 00206 (pointer_vs_value/code/func.go:74)	MOVSD	X0, "".~r1+104(SP)
	0x00d4 00212 (pointer_vs_value/code/func.go:74)	MOVQ	"".~R0+32(SP), AX
	0x00d9 00217 (pointer_vs_value/code/func.go:74)	PCDATA	$0, $5
	0x00d9 00217 (pointer_vs_value/code/func.go:74)	PCDATA	$1, $4
	0x00d9 00217 (pointer_vs_value/code/func.go:74)	MOVQ	"".~R0+40(SP), CX
	0x00de 00222 (pointer_vs_value/code/func.go:74)	PCDATA	$1, $6
	0x00de 00222 (pointer_vs_value/code/func.go:74)	MOVQ	AX, "".~r2+112(SP)
	0x00e3 00227 (pointer_vs_value/code/func.go:74)	PCDATA	$0, $0
	0x00e3 00227 (pointer_vs_value/code/func.go:74)	MOVQ	CX, "".~r2+120(SP)
	0x00e8 00232 (pointer_vs_value/code/func.go:74)	MOVQ	80(SP), BP
	0x00ed 00237 (pointer_vs_value/code/func.go:74)	ADDQ	$88, SP
	0x00f1 00241 (pointer_vs_value/code/func.go:74)	RET
	0x00f2 00242 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $-2
	0x00f2 00242 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $-2
	0x00f2 00242 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, AX
	0x00f5 00245 ($GOROOT/src/errors/errors.go:59)	CALL	runtime.gcWriteBarrier(SB)
	0x00fa 00250 ($GOROOT/src/errors/errors.go:59)	JMP	164
	0x00fc 00252 (pointer_vs_value/code/func.go:76)	PCDATA	$0, $1
	0x00fc 00252 (pointer_vs_value/code/func.go:76)	PCDATA	$1, $0
	0x00fc 00252 (pointer_vs_value/code/func.go:76)	MOVQ	"".o+96(SP), AX
	0x0101 00257 (pointer_vs_value/code/func.go:76)	TESTB	AL, (AX)
	0x0103 00259 (pointer_vs_value/code/func.go:76)	PCDATA	$0, $4
	0x0103 00259 (pointer_vs_value/code/func.go:76)	PCDATA	$1, $4
	0x0103 00259 (pointer_vs_value/code/func.go:76)	MOVQ	"".o+96(SP), CX
	0x0108 00264 (pointer_vs_value/code/func.go:76)	TESTB	AL, (CX)
	0x010a 00266 (pointer_vs_value/code/func.go:76)	PCDATA	$0, $5
	0x010a 00266 (pointer_vs_value/code/func.go:76)	MOVQ	(AX), AX
	0x010d 00269 (pointer_vs_value/code/func.go:76)	XORPS	X0, X0
	0x0110 00272 (pointer_vs_value/code/func.go:76)	CVTSQ2SD	AX, X0
	0x0115 00277 (pointer_vs_value/code/func.go:76)	PCDATA	$0, $0
	0x0115 00277 (pointer_vs_value/code/func.go:76)	DIVSD	88(CX), X0
	0x011a 00282 (pointer_vs_value/code/func.go:76)	MOVSD	X0, "".~r1+104(SP)
	0x0120 00288 (pointer_vs_value/code/func.go:76)	PCDATA	$1, $6
	0x0120 00288 (pointer_vs_value/code/func.go:76)	XORPS	X0, X0
	0x0123 00291 (pointer_vs_value/code/func.go:76)	MOVUPS	X0, "".~r2+112(SP)
	0x0128 00296 (pointer_vs_value/code/func.go:76)	MOVQ	80(SP), BP
	0x012d 00301 (pointer_vs_value/code/func.go:76)	ADDQ	$88, SP
	0x0131 00305 (pointer_vs_value/code/func.go:76)	RET
	0x0132 00306 (pointer_vs_value/code/func.go:76)	NOP
	0x0132 00306 (pointer_vs_value/code/func.go:72)	PCDATA	$1, $-1
	0x0132 00306 (pointer_vs_value/code/func.go:72)	PCDATA	$0, $-1
	0x0132 00306 (pointer_vs_value/code/func.go:72)	CALL	runtime.morestack_noctxt(SB)
	0x0137 00311 (pointer_vs_value/code/func.go:72)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 1f  eH..%....H;a....
	0x0010 01 00 00 48 83 ec 58 48 89 6c 24 50 48 8d 6c 24  ...H..XH.l$PH.l$
	0x0020 50 0f 57 c0 f2 0f 11 44 24 68 0f 57 c9 0f 11 4c  P.W....D$h.W...L
	0x0030 24 70 48 8b 44 24 60 84 00 f2 0f 10 48 58 66 0f  $pH.D$`.....HXf.
	0x0040 2e c8 0f 85 b4 00 00 00 7b 05 e9 ad 00 00 00 48  ........{......H
	0x0050 8d 05 00 00 00 00 48 89 44 24 30 48 c7 44 24 38  ......H.D$0H.D$8
	0x0060 16 00 00 00 0f 57 c0 0f 11 44 24 20 48 8d 05 00  .....W...D$ H...
	0x0070 00 00 00 48 89 04 24 e8 00 00 00 00 48 8b 7c 24  ...H..$.....H.|$
	0x0080 08 48 89 7c 24 10 48 8b 44 24 38 48 8b 4c 24 30  .H.|$.H.D$8H.L$0
	0x0090 48 89 47 08 83 3d 00 00 00 00 00 74 02 eb 53 48  H.G..=.....t..SH
	0x00a0 89 0f eb 00 48 8b 44 24 10 48 89 44 24 18 48 8d  ....H.D$.H.D$.H.
	0x00b0 0d 00 00 00 00 48 89 4c 24 40 48 89 44 24 48 48  .....H.L$@H.D$HH
	0x00c0 89 4c 24 20 48 89 44 24 28 eb 00 0f 57 c0 f2 0f  .L$ H.D$(...W...
	0x00d0 11 44 24 68 48 8b 44 24 20 48 8b 4c 24 28 48 89  .D$hH.D$ H.L$(H.
	0x00e0 44 24 70 48 89 4c 24 78 48 8b 6c 24 50 48 83 c4  D$pH.L$xH.l$PH..
	0x00f0 58 c3 48 89 c8 e8 00 00 00 00 eb a8 48 8b 44 24  X.H.........H.D$
	0x0100 60 84 00 48 8b 4c 24 60 84 01 48 8b 00 0f 57 c0  `..H.L$`..H...W.
	0x0110 f2 48 0f 2a c0 f2 0f 5e 41 58 f2 0f 11 44 24 68  .H.*...^AX...D$h
	0x0120 0f 57 c0 0f 11 44 24 70 48 8b 6c 24 50 48 83 c4  .W...D$pH.l$PH..
	0x0130 58 c3 e8 00 00 00 00 e9 c4 fe ff ff              X...........
	rel 5+4 t=16 TLS+0
	rel 82+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 111+4 t=15 type.errors.errorString+0
	rel 120+4 t=8 runtime.newobject+0
	rel 150+4 t=15 runtime.writeBarrier+-1
	rel 177+4 t=15 go.itab.*errors.errorString,error+0
	rel 246+4 t=8 runtime.gcWriteBarrier+0
	rel 307+4 t=8 runtime.morestack_noctxt+0
"".calcTeraP STEXT size=322 args=0x20 locals=0x58
	0x0000 00000 (pointer_vs_value/code/func.go:79)	TEXT	"".calcTeraP(SB), ABIInternal, $88-32
	0x0000 00000 (pointer_vs_value/code/func.go:79)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/func.go:79)	CMPQ	SP, 16(CX)
	0x000d 00013 (pointer_vs_value/code/func.go:79)	JLS	312
	0x0013 00019 (pointer_vs_value/code/func.go:79)	SUBQ	$88, SP
	0x0017 00023 (pointer_vs_value/code/func.go:79)	MOVQ	BP, 80(SP)
	0x001c 00028 (pointer_vs_value/code/func.go:79)	LEAQ	80(SP), BP
	0x0021 00033 (pointer_vs_value/code/func.go:79)	FUNCDATA	$0, gclocals·9f1eb185e5da802c5a4c3f86f3341582(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:79)	FUNCDATA	$1, gclocals·ca4617d647f88ce0ec7dd4d79922985d(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:79)	FUNCDATA	$2, gclocals·2a7a16a1870e896beb8f3e3383a645e4(SB)
	0x0021 00033 (pointer_vs_value/code/func.go:79)	PCDATA	$0, $0
	0x0021 00033 (pointer_vs_value/code/func.go:79)	PCDATA	$1, $0
	0x0021 00033 (pointer_vs_value/code/func.go:79)	XORPS	X0, X0
	0x0024 00036 (pointer_vs_value/code/func.go:79)	MOVSD	X0, "".~r1+104(SP)
	0x002a 00042 (pointer_vs_value/code/func.go:79)	XORPS	X1, X1
	0x002d 00045 (pointer_vs_value/code/func.go:79)	MOVUPS	X1, "".~r2+112(SP)
	0x0032 00050 (pointer_vs_value/code/func.go:80)	PCDATA	$0, $1
	0x0032 00050 (pointer_vs_value/code/func.go:80)	MOVQ	"".o+96(SP), AX
	0x0037 00055 (pointer_vs_value/code/func.go:80)	TESTB	AL, (AX)
	0x0039 00057 (pointer_vs_value/code/func.go:80)	PCDATA	$0, $0
	0x0039 00057 (pointer_vs_value/code/func.go:80)	MOVSD	208(AX), X1
	0x0041 00065 (pointer_vs_value/code/func.go:80)	UCOMISD	X0, X1
	0x0045 00069 (pointer_vs_value/code/func.go:80)	JNE	255
	0x004b 00075 (pointer_vs_value/code/func.go:80)	JPC	82
	0x004d 00077 (pointer_vs_value/code/func.go:80)	JMP	255
	0x0052 00082 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $1
	0x0052 00082 (pointer_vs_value/code/func.go:81)	PCDATA	$1, $1
	0x0052 00082 (pointer_vs_value/code/func.go:81)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x0059 00089 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $0
	0x0059 00089 (pointer_vs_value/code/func.go:81)	MOVQ	AX, errors.text+48(SP)
	0x005e 00094 (pointer_vs_value/code/func.go:81)	MOVQ	$22, errors.text+56(SP)
	0x0067 00103 (pointer_vs_value/code/func.go:81)	XORPS	X0, X0
	0x006a 00106 (pointer_vs_value/code/func.go:81)	MOVUPS	X0, "".~R0+32(SP)
	0x006f 00111 (<unknown line number>)	NOP
	0x006f 00111 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x006f 00111 ($GOROOT/src/errors/errors.go:59)	LEAQ	type.errors.errorString(SB), AX
	0x0076 00118 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $0
	0x0076 00118 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, (SP)
	0x007a 00122 ($GOROOT/src/errors/errors.go:59)	CALL	runtime.newobject(SB)
	0x007f 00127 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $2
	0x007f 00127 ($GOROOT/src/errors/errors.go:59)	MOVQ	8(SP), DI
	0x0084 00132 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $2
	0x0084 00132 ($GOROOT/src/errors/errors.go:59)	MOVQ	DI, ""..autotmp_6+16(SP)
	0x0089 00137 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+56(SP), AX
	0x008e 00142 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x008e 00142 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x008e 00142 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+48(SP), CX
	0x0093 00147 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, 8(DI)
	0x0097 00151 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $-2
	0x0097 00151 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $-2
	0x0097 00151 ($GOROOT/src/errors/errors.go:59)	CMPL	runtime.writeBarrier(SB), $0
	0x009e 00158 ($GOROOT/src/errors/errors.go:59)	JEQ	162
	0x00a0 00160 ($GOROOT/src/errors/errors.go:59)	JMP	245
	0x00a2 00162 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, (DI)
	0x00a5 00165 ($GOROOT/src/errors/errors.go:59)	JMP	167
	0x00a7 00167 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x00a7 00167 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x00a7 00167 ($GOROOT/src/errors/errors.go:59)	MOVQ	""..autotmp_6+16(SP), AX
	0x00ac 00172 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, ""..autotmp_5+24(SP)
	0x00b1 00177 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $4
	0x00b1 00177 (pointer_vs_value/code/func.go:81)	LEAQ	go.itab.*errors.errorString,error(SB), CX
	0x00b8 00184 (pointer_vs_value/code/func.go:81)	MOVQ	CX, ""..autotmp_7+64(SP)
	0x00bd 00189 (pointer_vs_value/code/func.go:81)	MOVQ	AX, ""..autotmp_7+72(SP)
	0x00c2 00194 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $1
	0x00c2 00194 (pointer_vs_value/code/func.go:81)	PCDATA	$1, $5
	0x00c2 00194 (pointer_vs_value/code/func.go:81)	MOVQ	CX, "".~R0+32(SP)
	0x00c7 00199 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $0
	0x00c7 00199 (pointer_vs_value/code/func.go:81)	MOVQ	AX, "".~R0+40(SP)
	0x00cc 00204 (pointer_vs_value/code/func.go:81)	JMP	206
	0x00ce 00206 (pointer_vs_value/code/func.go:81)	XORPS	X0, X0
	0x00d1 00209 (pointer_vs_value/code/func.go:81)	MOVSD	X0, "".~r1+104(SP)
	0x00d7 00215 (pointer_vs_value/code/func.go:81)	MOVQ	"".~R0+32(SP), AX
	0x00dc 00220 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $5
	0x00dc 00220 (pointer_vs_value/code/func.go:81)	PCDATA	$1, $4
	0x00dc 00220 (pointer_vs_value/code/func.go:81)	MOVQ	"".~R0+40(SP), CX
	0x00e1 00225 (pointer_vs_value/code/func.go:81)	PCDATA	$1, $6
	0x00e1 00225 (pointer_vs_value/code/func.go:81)	MOVQ	AX, "".~r2+112(SP)
	0x00e6 00230 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $0
	0x00e6 00230 (pointer_vs_value/code/func.go:81)	MOVQ	CX, "".~r2+120(SP)
	0x00eb 00235 (pointer_vs_value/code/func.go:81)	MOVQ	80(SP), BP
	0x00f0 00240 (pointer_vs_value/code/func.go:81)	ADDQ	$88, SP
	0x00f4 00244 (pointer_vs_value/code/func.go:81)	RET
	0x00f5 00245 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $-2
	0x00f5 00245 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $-2
	0x00f5 00245 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, AX
	0x00f8 00248 ($GOROOT/src/errors/errors.go:59)	CALL	runtime.gcWriteBarrier(SB)
	0x00fd 00253 ($GOROOT/src/errors/errors.go:59)	JMP	167
	0x00ff 00255 (pointer_vs_value/code/func.go:83)	PCDATA	$0, $1
	0x00ff 00255 (pointer_vs_value/code/func.go:83)	PCDATA	$1, $0
	0x00ff 00255 (pointer_vs_value/code/func.go:83)	MOVQ	"".o+96(SP), AX
	0x0104 00260 (pointer_vs_value/code/func.go:83)	TESTB	AL, (AX)
	0x0106 00262 (pointer_vs_value/code/func.go:83)	PCDATA	$0, $4
	0x0106 00262 (pointer_vs_value/code/func.go:83)	PCDATA	$1, $4
	0x0106 00262 (pointer_vs_value/code/func.go:83)	MOVQ	"".o+96(SP), CX
	0x010b 00267 (pointer_vs_value/code/func.go:83)	TESTB	AL, (CX)
	0x010d 00269 (pointer_vs_value/code/func.go:83)	PCDATA	$0, $5
	0x010d 00269 (pointer_vs_value/code/func.go:83)	MOVQ	(AX), AX
	0x0110 00272 (pointer_vs_value/code/func.go:83)	XORPS	X0, X0
	0x0113 00275 (pointer_vs_value/code/func.go:83)	CVTSQ2SD	AX, X0
	0x0118 00280 (pointer_vs_value/code/func.go:83)	PCDATA	$0, $0
	0x0118 00280 (pointer_vs_value/code/func.go:83)	DIVSD	208(CX), X0
	0x0120 00288 (pointer_vs_value/code/func.go:83)	MOVSD	X0, "".~r1+104(SP)
	0x0126 00294 (pointer_vs_value/code/func.go:83)	PCDATA	$1, $6
	0x0126 00294 (pointer_vs_value/code/func.go:83)	XORPS	X0, X0
	0x0129 00297 (pointer_vs_value/code/func.go:83)	MOVUPS	X0, "".~r2+112(SP)
	0x012e 00302 (pointer_vs_value/code/func.go:83)	MOVQ	80(SP), BP
	0x0133 00307 (pointer_vs_value/code/func.go:83)	ADDQ	$88, SP
	0x0137 00311 (pointer_vs_value/code/func.go:83)	RET
	0x0138 00312 (pointer_vs_value/code/func.go:83)	NOP
	0x0138 00312 (pointer_vs_value/code/func.go:79)	PCDATA	$1, $-1
	0x0138 00312 (pointer_vs_value/code/func.go:79)	PCDATA	$0, $-1
	0x0138 00312 (pointer_vs_value/code/func.go:79)	CALL	runtime.morestack_noctxt(SB)
	0x013d 00317 (pointer_vs_value/code/func.go:79)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 25  eH..%....H;a...%
	0x0010 01 00 00 48 83 ec 58 48 89 6c 24 50 48 8d 6c 24  ...H..XH.l$PH.l$
	0x0020 50 0f 57 c0 f2 0f 11 44 24 68 0f 57 c9 0f 11 4c  P.W....D$h.W...L
	0x0030 24 70 48 8b 44 24 60 84 00 f2 0f 10 88 d0 00 00  $pH.D$`.........
	0x0040 00 66 0f 2e c8 0f 85 b4 00 00 00 7b 05 e9 ad 00  .f.........{....
	0x0050 00 00 48 8d 05 00 00 00 00 48 89 44 24 30 48 c7  ..H......H.D$0H.
	0x0060 44 24 38 16 00 00 00 0f 57 c0 0f 11 44 24 20 48  D$8.....W...D$ H
	0x0070 8d 05 00 00 00 00 48 89 04 24 e8 00 00 00 00 48  ......H..$.....H
	0x0080 8b 7c 24 08 48 89 7c 24 10 48 8b 44 24 38 48 8b  .|$.H.|$.H.D$8H.
	0x0090 4c 24 30 48 89 47 08 83 3d 00 00 00 00 00 74 02  L$0H.G..=.....t.
	0x00a0 eb 53 48 89 0f eb 00 48 8b 44 24 10 48 89 44 24  .SH....H.D$.H.D$
	0x00b0 18 48 8d 0d 00 00 00 00 48 89 4c 24 40 48 89 44  .H......H.L$@H.D
	0x00c0 24 48 48 89 4c 24 20 48 89 44 24 28 eb 00 0f 57  $HH.L$ H.D$(...W
	0x00d0 c0 f2 0f 11 44 24 68 48 8b 44 24 20 48 8b 4c 24  ....D$hH.D$ H.L$
	0x00e0 28 48 89 44 24 70 48 89 4c 24 78 48 8b 6c 24 50  (H.D$pH.L$xH.l$P
	0x00f0 48 83 c4 58 c3 48 89 c8 e8 00 00 00 00 eb a8 48  H..X.H.........H
	0x0100 8b 44 24 60 84 00 48 8b 4c 24 60 84 01 48 8b 00  .D$`..H.L$`..H..
	0x0110 0f 57 c0 f2 48 0f 2a c0 f2 0f 5e 81 d0 00 00 00  .W..H.*...^.....
	0x0120 f2 0f 11 44 24 68 0f 57 c0 0f 11 44 24 70 48 8b  ...D$h.W...D$pH.
	0x0130 6c 24 50 48 83 c4 58 c3 e8 00 00 00 00 e9 be fe  l$PH..X.........
	0x0140 ff ff                                            ..
	rel 5+4 t=16 TLS+0
	rel 85+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 114+4 t=15 type.errors.errorString+0
	rel 123+4 t=8 runtime.newobject+0
	rel 153+4 t=15 runtime.writeBarrier+-1
	rel 180+4 t=15 go.itab.*errors.errorString,error+0
	rel 249+4 t=8 runtime.gcWriteBarrier+0
	rel 313+4 t=8 runtime.morestack_noctxt+0
"".calcGiga STEXT nosplit size=453 args=0x1b8 locals=0x0
	0x0000 00000 (pointer_vs_value/code/func.go:87)	TEXT	"".calcGiga(SB), NOSPLIT|ABIInternal, $0-440
	0x0000 00000 (pointer_vs_value/code/func.go:87)	FUNCDATA	$0, gclocals·42dd1bc3608cb7c562579c114807c0ab(SB)
	0x0000 00000 (pointer_vs_value/code/func.go:87)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/func.go:87)	FUNCDATA	$2, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x0000 00000 (pointer_vs_value/code/func.go:87)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/func.go:87)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/func.go:87)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/func.go:87)	MOVSD	X0, "".~r1+424(SP)
	0x000c 00012 (pointer_vs_value/code/func.go:87)	XORPS	X0, X0
	0x000f 00015 (pointer_vs_value/code/func.go:87)	MOVUPS	X0, "".~r2+432(SP)
	0x0017 00023 (pointer_vs_value/code/func.go:90)	MOVQ	"".o+8(SP), AX
	0x001c 00028 (pointer_vs_value/code/func.go:90)	ADDQ	"".o+16(SP), AX
	0x0021 00033 (pointer_vs_value/code/func.go:90)	ADDQ	"".o+24(SP), AX
	0x0026 00038 (pointer_vs_value/code/func.go:90)	ADDQ	"".o+32(SP), AX
	0x002b 00043 (pointer_vs_value/code/func.go:90)	ADDQ	"".o+40(SP), AX
	0x0030 00048 (pointer_vs_value/code/func.go:90)	ADDQ	"".o+48(SP), AX
	0x0035 00053 (pointer_vs_value/code/func.go:90)	ADDQ	"".o+56(SP), AX
	0x003a 00058 (pointer_vs_value/code/func.go:90)	ADDQ	"".o+64(SP), AX
	0x003f 00063 (pointer_vs_value/code/func.go:90)	ADDQ	"".o+72(SP), AX
	0x0044 00068 (pointer_vs_value/code/func.go:90)	ADDQ	"".o+80(SP), AX
	0x0049 00073 (pointer_vs_value/code/func.go:91)	ADDQ	"".o+88(SP), AX
	0x004e 00078 (pointer_vs_value/code/func.go:91)	ADDQ	"".o+96(SP), AX
	0x0053 00083 (pointer_vs_value/code/func.go:91)	ADDQ	"".o+104(SP), AX
	0x0058 00088 (pointer_vs_value/code/func.go:91)	ADDQ	"".o+112(SP), AX
	0x005d 00093 (pointer_vs_value/code/func.go:91)	ADDQ	"".o+120(SP), AX
	0x0062 00098 (pointer_vs_value/code/func.go:91)	ADDQ	"".o+128(SP), AX
	0x006a 00106 (pointer_vs_value/code/func.go:91)	ADDQ	"".o+136(SP), AX
	0x0072 00114 (pointer_vs_value/code/func.go:91)	ADDQ	"".o+144(SP), AX
	0x007a 00122 (pointer_vs_value/code/func.go:92)	ADDQ	"".o+152(SP), AX
	0x0082 00130 (pointer_vs_value/code/func.go:92)	ADDQ	"".o+160(SP), AX
	0x008a 00138 (pointer_vs_value/code/func.go:92)	ADDQ	"".o+168(SP), AX
	0x0092 00146 (pointer_vs_value/code/func.go:92)	ADDQ	"".o+176(SP), AX
	0x009a 00154 (pointer_vs_value/code/func.go:92)	ADDQ	"".o+192(SP), AX
	0x00a2 00162 (pointer_vs_value/code/func.go:92)	ADDQ	"".o+184(SP), AX
	0x00aa 00170 (pointer_vs_value/code/func.go:92)	ADDQ	"".o+200(SP), AX
	0x00b2 00178 (pointer_vs_value/code/func.go:92)	ADDQ	"".o+208(SP), AX
	0x00ba 00186 (pointer_vs_value/code/func.go:93)	MOVSD	"".o+216(SP), X0
	0x00c3 00195 (pointer_vs_value/code/func.go:93)	ADDSD	"".o+224(SP), X0
	0x00cc 00204 (pointer_vs_value/code/func.go:93)	ADDSD	"".o+232(SP), X0
	0x00d5 00213 (pointer_vs_value/code/func.go:93)	ADDSD	"".o+240(SP), X0
	0x00de 00222 (pointer_vs_value/code/func.go:93)	ADDSD	"".o+248(SP), X0
	0x00e7 00231 (pointer_vs_value/code/func.go:93)	ADDSD	"".o+256(SP), X0
	0x00f0 00240 (pointer_vs_value/code/func.go:93)	ADDSD	"".o+264(SP), X0
	0x00f9 00249 (pointer_vs_value/code/func.go:93)	ADDSD	"".o+272(SP), X0
	0x0102 00258 (pointer_vs_value/code/func.go:93)	ADDSD	"".o+280(SP), X0
	0x010b 00267 (pointer_vs_value/code/func.go:93)	ADDSD	"".o+288(SP), X0
	0x0114 00276 (pointer_vs_value/code/func.go:94)	ADDSD	"".o+296(SP), X0
	0x011d 00285 (pointer_vs_value/code/func.go:94)	ADDSD	"".o+304(SP), X0
	0x0126 00294 (pointer_vs_value/code/func.go:94)	ADDSD	"".o+312(SP), X0
	0x012f 00303 (pointer_vs_value/code/func.go:94)	ADDSD	"".o+320(SP), X0
	0x0138 00312 (pointer_vs_value/code/func.go:94)	ADDSD	"".o+328(SP), X0
	0x0141 00321 (pointer_vs_value/code/func.go:94)	ADDSD	"".o+336(SP), X0
	0x014a 00330 (pointer_vs_value/code/func.go:94)	ADDSD	"".o+344(SP), X0
	0x0153 00339 (pointer_vs_value/code/func.go:94)	ADDSD	"".o+352(SP), X0
	0x015c 00348 (pointer_vs_value/code/func.go:95)	ADDSD	"".o+360(SP), X0
	0x0165 00357 (pointer_vs_value/code/func.go:95)	ADDSD	"".o+368(SP), X0
	0x016e 00366 (pointer_vs_value/code/func.go:95)	ADDSD	"".o+376(SP), X0
	0x0177 00375 (pointer_vs_value/code/func.go:95)	ADDSD	"".o+384(SP), X0
	0x0180 00384 (pointer_vs_value/code/func.go:95)	ADDSD	"".o+400(SP), X0
	0x0189 00393 (pointer_vs_value/code/func.go:95)	ADDSD	"".o+392(SP), X0
	0x0192 00402 (pointer_vs_value/code/func.go:95)	ADDSD	"".o+408(SP), X0
	0x019b 00411 (pointer_vs_value/code/func.go:95)	ADDSD	"".o+416(SP), X0
	0x01a4 00420 (pointer_vs_value/code/func.go:89)	XORPS	X1, X1
	0x01a7 00423 (pointer_vs_value/code/func.go:89)	CVTSQ2SD	AX, X1
	0x01ac 00428 (pointer_vs_value/code/func.go:92)	DIVSD	X0, X1
	0x01b0 00432 (pointer_vs_value/code/func.go:89)	MOVSD	X1, "".~r1+424(SP)
	0x01b9 00441 (pointer_vs_value/code/func.go:89)	PCDATA	$1, $1
	0x01b9 00441 (pointer_vs_value/code/func.go:89)	XORPS	X0, X0
	0x01bc 00444 (pointer_vs_value/code/func.go:89)	MOVUPS	X0, "".~r2+432(SP)
	0x01c4 00452 (pointer_vs_value/code/func.go:89)	RET
	0x0000 0f 57 c0 f2 0f 11 84 24 a8 01 00 00 0f 57 c0 0f  .W.....$.....W..
	0x0010 11 84 24 b0 01 00 00 48 8b 44 24 08 48 03 44 24  ..$....H.D$.H.D$
	0x0020 10 48 03 44 24 18 48 03 44 24 20 48 03 44 24 28  .H.D$.H.D$ H.D$(
	0x0030 48 03 44 24 30 48 03 44 24 38 48 03 44 24 40 48  H.D$0H.D$8H.D$@H
	0x0040 03 44 24 48 48 03 44 24 50 48 03 44 24 58 48 03  .D$HH.D$PH.D$XH.
	0x0050 44 24 60 48 03 44 24 68 48 03 44 24 70 48 03 44  D$`H.D$hH.D$pH.D
	0x0060 24 78 48 03 84 24 80 00 00 00 48 03 84 24 88 00  $xH..$....H..$..
	0x0070 00 00 48 03 84 24 90 00 00 00 48 03 84 24 98 00  ..H..$....H..$..
	0x0080 00 00 48 03 84 24 a0 00 00 00 48 03 84 24 a8 00  ..H..$....H..$..
	0x0090 00 00 48 03 84 24 b0 00 00 00 48 03 84 24 c0 00  ..H..$....H..$..
	0x00a0 00 00 48 03 84 24 b8 00 00 00 48 03 84 24 c8 00  ..H..$....H..$..
	0x00b0 00 00 48 03 84 24 d0 00 00 00 f2 0f 10 84 24 d8  ..H..$........$.
	0x00c0 00 00 00 f2 0f 58 84 24 e0 00 00 00 f2 0f 58 84  .....X.$......X.
	0x00d0 24 e8 00 00 00 f2 0f 58 84 24 f0 00 00 00 f2 0f  $......X.$......
	0x00e0 58 84 24 f8 00 00 00 f2 0f 58 84 24 00 01 00 00  X.$......X.$....
	0x00f0 f2 0f 58 84 24 08 01 00 00 f2 0f 58 84 24 10 01  ..X.$......X.$..
	0x0100 00 00 f2 0f 58 84 24 18 01 00 00 f2 0f 58 84 24  ....X.$......X.$
	0x0110 20 01 00 00 f2 0f 58 84 24 28 01 00 00 f2 0f 58   .....X.$(.....X
	0x0120 84 24 30 01 00 00 f2 0f 58 84 24 38 01 00 00 f2  .$0.....X.$8....
	0x0130 0f 58 84 24 40 01 00 00 f2 0f 58 84 24 48 01 00  .X.$@.....X.$H..
	0x0140 00 f2 0f 58 84 24 50 01 00 00 f2 0f 58 84 24 58  ...X.$P.....X.$X
	0x0150 01 00 00 f2 0f 58 84 24 60 01 00 00 f2 0f 58 84  .....X.$`.....X.
	0x0160 24 68 01 00 00 f2 0f 58 84 24 70 01 00 00 f2 0f  $h.....X.$p.....
	0x0170 58 84 24 78 01 00 00 f2 0f 58 84 24 80 01 00 00  X.$x.....X.$....
	0x0180 f2 0f 58 84 24 90 01 00 00 f2 0f 58 84 24 88 01  ..X.$......X.$..
	0x0190 00 00 f2 0f 58 84 24 98 01 00 00 f2 0f 58 84 24  ....X.$......X.$
	0x01a0 a0 01 00 00 0f 57 c9 f2 48 0f 2a c8 f2 0f 5e c8  .....W..H.*...^.
	0x01b0 f2 0f 11 8c 24 a8 01 00 00 0f 57 c0 0f 11 84 24  ....$.....W....$
	0x01c0 b0 01 00 00 c3                                   .....
"".calcGigaP STEXT size=1552 args=0x20 locals=0x138
	0x0000 00000 (pointer_vs_value/code/func.go:98)	TEXT	"".calcGigaP(SB), ABIInternal, $312-32
	0x0000 00000 (pointer_vs_value/code/func.go:98)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/func.go:98)	LEAQ	-184(SP), AX
	0x0011 00017 (pointer_vs_value/code/func.go:98)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/func.go:98)	JLS	1542
	0x001b 00027 (pointer_vs_value/code/func.go:98)	SUBQ	$312, SP
	0x0022 00034 (pointer_vs_value/code/func.go:98)	MOVQ	BP, 304(SP)
	0x002a 00042 (pointer_vs_value/code/func.go:98)	LEAQ	304(SP), BP
	0x0032 00050 (pointer_vs_value/code/func.go:98)	FUNCDATA	$0, gclocals·767d1ff6f5a1932f052a9e13faca1605(SB)
	0x0032 00050 (pointer_vs_value/code/func.go:98)	FUNCDATA	$1, gclocals·7e76762d733f76bea714d043c48f0bd7(SB)
	0x0032 00050 (pointer_vs_value/code/func.go:98)	FUNCDATA	$2, gclocals·0bdf114aa3827f57b753ac60b6cba547(SB)
	0x0032 00050 (pointer_vs_value/code/func.go:98)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/func.go:98)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/func.go:98)	XORPS	X0, X0
	0x0035 00053 (pointer_vs_value/code/func.go:98)	MOVSD	X0, "".~r1+328(SP)
	0x003e 00062 (pointer_vs_value/code/func.go:98)	XORPS	X0, X0
	0x0041 00065 (pointer_vs_value/code/func.go:98)	MOVUPS	X0, "".~r2+336(SP)
	0x0049 00073 (pointer_vs_value/code/func.go:101)	PCDATA	$0, $1
	0x0049 00073 (pointer_vs_value/code/func.go:101)	MOVQ	"".o+320(SP), AX
	0x0051 00081 (pointer_vs_value/code/func.go:101)	TESTB	AL, (AX)
	0x0053 00083 (pointer_vs_value/code/func.go:101)	PCDATA	$0, $2
	0x0053 00083 (pointer_vs_value/code/func.go:101)	MOVQ	"".o+320(SP), CX
	0x005b 00091 (pointer_vs_value/code/func.go:101)	TESTB	AL, (CX)
	0x005d 00093 (pointer_vs_value/code/func.go:101)	PCDATA	$0, $3
	0x005d 00093 (pointer_vs_value/code/func.go:101)	MOVQ	"".o+320(SP), DX
	0x0065 00101 (pointer_vs_value/code/func.go:101)	TESTB	AL, (DX)
	0x0067 00103 (pointer_vs_value/code/func.go:101)	PCDATA	$0, $4
	0x0067 00103 (pointer_vs_value/code/func.go:101)	MOVQ	"".o+320(SP), BX
	0x006f 00111 (pointer_vs_value/code/func.go:101)	TESTB	AL, (BX)
	0x0071 00113 (pointer_vs_value/code/func.go:101)	PCDATA	$0, $5
	0x0071 00113 (pointer_vs_value/code/func.go:101)	MOVQ	"".o+320(SP), SI
	0x0079 00121 (pointer_vs_value/code/func.go:101)	TESTB	AL, (SI)
	0x007b 00123 (pointer_vs_value/code/func.go:101)	PCDATA	$0, $6
	0x007b 00123 (pointer_vs_value/code/func.go:101)	MOVQ	"".o+320(SP), DI
	0x0083 00131 (pointer_vs_value/code/func.go:101)	TESTB	AL, (DI)
	0x0085 00133 (pointer_vs_value/code/func.go:101)	PCDATA	$0, $7
	0x0085 00133 (pointer_vs_value/code/func.go:101)	MOVQ	"".o+320(SP), R8
	0x008d 00141 (pointer_vs_value/code/func.go:101)	TESTB	AL, (R8)
	0x0090 00144 (pointer_vs_value/code/func.go:101)	PCDATA	$0, $8
	0x0090 00144 (pointer_vs_value/code/func.go:101)	MOVQ	"".o+320(SP), R9
	0x0098 00152 (pointer_vs_value/code/func.go:101)	TESTB	AL, (R9)
	0x009b 00155 (pointer_vs_value/code/func.go:101)	PCDATA	$0, $9
	0x009b 00155 (pointer_vs_value/code/func.go:101)	MOVQ	"".o+320(SP), R10
	0x00a3 00163 (pointer_vs_value/code/func.go:101)	TESTB	AL, (R10)
	0x00a6 00166 (pointer_vs_value/code/func.go:102)	PCDATA	$0, $10
	0x00a6 00166 (pointer_vs_value/code/func.go:102)	MOVQ	"".o+320(SP), R11
	0x00ae 00174 (pointer_vs_value/code/func.go:102)	TESTB	AL, (R11)
	0x00b1 00177 (pointer_vs_value/code/func.go:102)	PCDATA	$0, $11
	0x00b1 00177 (pointer_vs_value/code/func.go:102)	MOVQ	"".o+320(SP), R12
	0x00b9 00185 (pointer_vs_value/code/func.go:102)	TESTB	AL, (R12)
	0x00bd 00189 (pointer_vs_value/code/func.go:102)	PCDATA	$0, $12
	0x00bd 00189 (pointer_vs_value/code/func.go:102)	MOVQ	"".o+320(SP), R13
	0x00c5 00197 (pointer_vs_value/code/func.go:102)	TESTB	AL, (R13)
	0x00c9 00201 (pointer_vs_value/code/func.go:102)	PCDATA	$0, $13
	0x00c9 00201 (pointer_vs_value/code/func.go:102)	MOVQ	"".o+320(SP), R14
	0x00d1 00209 (pointer_vs_value/code/func.go:102)	TESTB	AL, (R14)
	0x00d4 00212 (pointer_vs_value/code/func.go:102)	PCDATA	$0, $14
	0x00d4 00212 (pointer_vs_value/code/func.go:102)	MOVQ	"".o+320(SP), R15
	0x00dc 00220 (pointer_vs_value/code/func.go:102)	PCDATA	$1, $1
	0x00dc 00220 (pointer_vs_value/code/func.go:102)	MOVQ	R15, ""..autotmp_3+136(SP)
	0x00e4 00228 (pointer_vs_value/code/func.go:102)	PCDATA	$0, $13
	0x00e4 00228 (pointer_vs_value/code/func.go:102)	TESTB	AL, (R15)
	0x00e7 00231 (pointer_vs_value/code/func.go:102)	PCDATA	$0, $14
	0x00e7 00231 (pointer_vs_value/code/func.go:102)	MOVQ	"".o+320(SP), R15
	0x00ef 00239 (pointer_vs_value/code/func.go:102)	PCDATA	$1, $2
	0x00ef 00239 (pointer_vs_value/code/func.go:102)	MOVQ	R15, ""..autotmp_4+48(SP)
	0x00f4 00244 (pointer_vs_value/code/func.go:102)	PCDATA	$0, $13
	0x00f4 00244 (pointer_vs_value/code/func.go:102)	TESTB	AL, (R15)
	0x00f7 00247 (pointer_vs_value/code/func.go:102)	PCDATA	$0, $14
	0x00f7 00247 (pointer_vs_value/code/func.go:102)	MOVQ	"".o+320(SP), R15
	0x00ff 00255 (pointer_vs_value/code/func.go:102)	PCDATA	$1, $3
	0x00ff 00255 (pointer_vs_value/code/func.go:102)	MOVQ	R15, ""..autotmp_5+32(SP)
	0x0104 00260 (pointer_vs_value/code/func.go:102)	PCDATA	$0, $13
	0x0104 00260 (pointer_vs_value/code/func.go:102)	TESTB	AL, (R15)
	0x0107 00263 (pointer_vs_value/code/func.go:102)	PCDATA	$0, $14
	0x0107 00263 (pointer_vs_value/code/func.go:102)	MOVQ	"".o+320(SP), R15
	0x010f 00271 (pointer_vs_value/code/func.go:102)	PCDATA	$1, $4
	0x010f 00271 (pointer_vs_value/code/func.go:102)	MOVQ	R15, ""..autotmp_6+24(SP)
	0x0114 00276 (pointer_vs_value/code/func.go:102)	PCDATA	$0, $13
	0x0114 00276 (pointer_vs_value/code/func.go:102)	TESTB	AL, (R15)
	0x0117 00279 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $14
	0x0117 00279 (pointer_vs_value/code/func.go:103)	MOVQ	"".o+320(SP), R15
	0x011f 00287 (pointer_vs_value/code/func.go:103)	PCDATA	$1, $5
	0x011f 00287 (pointer_vs_value/code/func.go:103)	MOVQ	R15, ""..autotmp_7+16(SP)
	0x0124 00292 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $13
	0x0124 00292 (pointer_vs_value/code/func.go:103)	TESTB	AL, (R15)
	0x0127 00295 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $14
	0x0127 00295 (pointer_vs_value/code/func.go:103)	MOVQ	"".o+320(SP), R15
	0x012f 00303 (pointer_vs_value/code/func.go:103)	PCDATA	$1, $6
	0x012f 00303 (pointer_vs_value/code/func.go:103)	MOVQ	R15, ""..autotmp_8+8(SP)
	0x0134 00308 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $13
	0x0134 00308 (pointer_vs_value/code/func.go:103)	TESTB	AL, (R15)
	0x0137 00311 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $14
	0x0137 00311 (pointer_vs_value/code/func.go:103)	MOVQ	"".o+320(SP), R15
	0x013f 00319 (pointer_vs_value/code/func.go:103)	PCDATA	$1, $7
	0x013f 00319 (pointer_vs_value/code/func.go:103)	MOVQ	R15, ""..autotmp_9(SP)
	0x0143 00323 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $13
	0x0143 00323 (pointer_vs_value/code/func.go:103)	TESTB	AL, (R15)
	0x0146 00326 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $14
	0x0146 00326 (pointer_vs_value/code/func.go:103)	MOVQ	"".o+320(SP), R15
	0x014e 00334 (pointer_vs_value/code/func.go:103)	PCDATA	$1, $8
	0x014e 00334 (pointer_vs_value/code/func.go:103)	MOVQ	R15, ""..autotmp_10+296(SP)
	0x0156 00342 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $13
	0x0156 00342 (pointer_vs_value/code/func.go:103)	TESTB	AL, (R15)
	0x0159 00345 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $14
	0x0159 00345 (pointer_vs_value/code/func.go:103)	MOVQ	"".o+320(SP), R15
	0x0161 00353 (pointer_vs_value/code/func.go:103)	PCDATA	$1, $9
	0x0161 00353 (pointer_vs_value/code/func.go:103)	MOVQ	R15, ""..autotmp_11+288(SP)
	0x0169 00361 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $13
	0x0169 00361 (pointer_vs_value/code/func.go:103)	TESTB	AL, (R15)
	0x016c 00364 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $14
	0x016c 00364 (pointer_vs_value/code/func.go:103)	MOVQ	"".o+320(SP), R15
	0x0174 00372 (pointer_vs_value/code/func.go:103)	PCDATA	$1, $10
	0x0174 00372 (pointer_vs_value/code/func.go:103)	MOVQ	R15, ""..autotmp_12+280(SP)
	0x017c 00380 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $13
	0x017c 00380 (pointer_vs_value/code/func.go:103)	TESTB	AL, (R15)
	0x017f 00383 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $14
	0x017f 00383 (pointer_vs_value/code/func.go:103)	MOVQ	"".o+320(SP), R15
	0x0187 00391 (pointer_vs_value/code/func.go:103)	PCDATA	$1, $11
	0x0187 00391 (pointer_vs_value/code/func.go:103)	MOVQ	R15, ""..autotmp_13+272(SP)
	0x018f 00399 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $13
	0x018f 00399 (pointer_vs_value/code/func.go:103)	TESTB	AL, (R15)
	0x0192 00402 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $14
	0x0192 00402 (pointer_vs_value/code/func.go:103)	MOVQ	"".o+320(SP), R15
	0x019a 00410 (pointer_vs_value/code/func.go:103)	PCDATA	$1, $12
	0x019a 00410 (pointer_vs_value/code/func.go:103)	MOVQ	R15, ""..autotmp_14+264(SP)
	0x01a2 00418 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $13
	0x01a2 00418 (pointer_vs_value/code/func.go:103)	TESTB	AL, (R15)
	0x01a5 00421 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $14
	0x01a5 00421 (pointer_vs_value/code/func.go:103)	MOVQ	"".o+320(SP), R15
	0x01ad 00429 (pointer_vs_value/code/func.go:103)	PCDATA	$1, $13
	0x01ad 00429 (pointer_vs_value/code/func.go:103)	MOVQ	R15, ""..autotmp_15+256(SP)
	0x01b5 00437 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $13
	0x01b5 00437 (pointer_vs_value/code/func.go:103)	TESTB	AL, (R15)
	0x01b8 00440 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $14
	0x01b8 00440 (pointer_vs_value/code/func.go:104)	MOVQ	"".o+320(SP), R15
	0x01c0 00448 (pointer_vs_value/code/func.go:104)	PCDATA	$1, $14
	0x01c0 00448 (pointer_vs_value/code/func.go:104)	MOVQ	R15, ""..autotmp_16+248(SP)
	0x01c8 00456 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $13
	0x01c8 00456 (pointer_vs_value/code/func.go:104)	TESTB	AL, (R15)
	0x01cb 00459 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $14
	0x01cb 00459 (pointer_vs_value/code/func.go:104)	MOVQ	"".o+320(SP), R15
	0x01d3 00467 (pointer_vs_value/code/func.go:104)	PCDATA	$1, $15
	0x01d3 00467 (pointer_vs_value/code/func.go:104)	MOVQ	R15, ""..autotmp_17+240(SP)
	0x01db 00475 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $13
	0x01db 00475 (pointer_vs_value/code/func.go:104)	TESTB	AL, (R15)
	0x01de 00478 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $14
	0x01de 00478 (pointer_vs_value/code/func.go:104)	MOVQ	"".o+320(SP), R15
	0x01e6 00486 (pointer_vs_value/code/func.go:104)	PCDATA	$1, $16
	0x01e6 00486 (pointer_vs_value/code/func.go:104)	MOVQ	R15, ""..autotmp_18+232(SP)
	0x01ee 00494 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $13
	0x01ee 00494 (pointer_vs_value/code/func.go:104)	TESTB	AL, (R15)
	0x01f1 00497 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $14
	0x01f1 00497 (pointer_vs_value/code/func.go:104)	MOVQ	"".o+320(SP), R15
	0x01f9 00505 (pointer_vs_value/code/func.go:104)	PCDATA	$1, $17
	0x01f9 00505 (pointer_vs_value/code/func.go:104)	MOVQ	R15, ""..autotmp_19+224(SP)
	0x0201 00513 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $13
	0x0201 00513 (pointer_vs_value/code/func.go:104)	TESTB	AL, (R15)
	0x0204 00516 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $14
	0x0204 00516 (pointer_vs_value/code/func.go:104)	MOVQ	"".o+320(SP), R15
	0x020c 00524 (pointer_vs_value/code/func.go:104)	PCDATA	$1, $18
	0x020c 00524 (pointer_vs_value/code/func.go:104)	MOVQ	R15, ""..autotmp_20+216(SP)
	0x0214 00532 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $13
	0x0214 00532 (pointer_vs_value/code/func.go:104)	TESTB	AL, (R15)
	0x0217 00535 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $14
	0x0217 00535 (pointer_vs_value/code/func.go:104)	MOVQ	"".o+320(SP), R15
	0x021f 00543 (pointer_vs_value/code/func.go:104)	PCDATA	$1, $19
	0x021f 00543 (pointer_vs_value/code/func.go:104)	MOVQ	R15, ""..autotmp_21+208(SP)
	0x0227 00551 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $13
	0x0227 00551 (pointer_vs_value/code/func.go:104)	TESTB	AL, (R15)
	0x022a 00554 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $14
	0x022a 00554 (pointer_vs_value/code/func.go:104)	MOVQ	"".o+320(SP), R15
	0x0232 00562 (pointer_vs_value/code/func.go:104)	PCDATA	$1, $20
	0x0232 00562 (pointer_vs_value/code/func.go:104)	MOVQ	R15, ""..autotmp_22+200(SP)
	0x023a 00570 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $13
	0x023a 00570 (pointer_vs_value/code/func.go:104)	TESTB	AL, (R15)
	0x023d 00573 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $14
	0x023d 00573 (pointer_vs_value/code/func.go:104)	MOVQ	"".o+320(SP), R15
	0x0245 00581 (pointer_vs_value/code/func.go:104)	PCDATA	$1, $21
	0x0245 00581 (pointer_vs_value/code/func.go:104)	MOVQ	R15, ""..autotmp_23+192(SP)
	0x024d 00589 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $13
	0x024d 00589 (pointer_vs_value/code/func.go:104)	TESTB	AL, (R15)
	0x0250 00592 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $14
	0x0250 00592 (pointer_vs_value/code/func.go:104)	MOVQ	"".o+320(SP), R15
	0x0258 00600 (pointer_vs_value/code/func.go:104)	PCDATA	$1, $22
	0x0258 00600 (pointer_vs_value/code/func.go:104)	MOVQ	R15, ""..autotmp_24+184(SP)
	0x0260 00608 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $13
	0x0260 00608 (pointer_vs_value/code/func.go:104)	TESTB	AL, (R15)
	0x0263 00611 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $14
	0x0263 00611 (pointer_vs_value/code/func.go:105)	MOVQ	"".o+320(SP), R15
	0x026b 00619 (pointer_vs_value/code/func.go:105)	PCDATA	$1, $23
	0x026b 00619 (pointer_vs_value/code/func.go:105)	MOVQ	R15, ""..autotmp_25+176(SP)
	0x0273 00627 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $13
	0x0273 00627 (pointer_vs_value/code/func.go:105)	TESTB	AL, (R15)
	0x0276 00630 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $14
	0x0276 00630 (pointer_vs_value/code/func.go:105)	MOVQ	"".o+320(SP), R15
	0x027e 00638 (pointer_vs_value/code/func.go:105)	PCDATA	$1, $24
	0x027e 00638 (pointer_vs_value/code/func.go:105)	MOVQ	R15, ""..autotmp_26+168(SP)
	0x0286 00646 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $13
	0x0286 00646 (pointer_vs_value/code/func.go:105)	TESTB	AL, (R15)
	0x0289 00649 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $14
	0x0289 00649 (pointer_vs_value/code/func.go:105)	MOVQ	"".o+320(SP), R15
	0x0291 00657 (pointer_vs_value/code/func.go:105)	PCDATA	$1, $25
	0x0291 00657 (pointer_vs_value/code/func.go:105)	MOVQ	R15, ""..autotmp_27+160(SP)
	0x0299 00665 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $13
	0x0299 00665 (pointer_vs_value/code/func.go:105)	TESTB	AL, (R15)
	0x029c 00668 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $14
	0x029c 00668 (pointer_vs_value/code/func.go:105)	MOVQ	"".o+320(SP), R15
	0x02a4 00676 (pointer_vs_value/code/func.go:105)	PCDATA	$1, $26
	0x02a4 00676 (pointer_vs_value/code/func.go:105)	MOVQ	R15, ""..autotmp_28+152(SP)
	0x02ac 00684 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $13
	0x02ac 00684 (pointer_vs_value/code/func.go:105)	TESTB	AL, (R15)
	0x02af 00687 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $14
	0x02af 00687 (pointer_vs_value/code/func.go:105)	MOVQ	"".o+320(SP), R15
	0x02b7 00695 (pointer_vs_value/code/func.go:105)	PCDATA	$1, $27
	0x02b7 00695 (pointer_vs_value/code/func.go:105)	MOVQ	R15, ""..autotmp_29+144(SP)
	0x02bf 00703 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $13
	0x02bf 00703 (pointer_vs_value/code/func.go:105)	TESTB	AL, (R15)
	0x02c2 00706 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $14
	0x02c2 00706 (pointer_vs_value/code/func.go:105)	MOVQ	"".o+320(SP), R15
	0x02ca 00714 (pointer_vs_value/code/func.go:105)	PCDATA	$1, $28
	0x02ca 00714 (pointer_vs_value/code/func.go:105)	MOVQ	R15, ""..autotmp_30+128(SP)
	0x02d2 00722 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $13
	0x02d2 00722 (pointer_vs_value/code/func.go:105)	TESTB	AL, (R15)
	0x02d5 00725 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $14
	0x02d5 00725 (pointer_vs_value/code/func.go:105)	MOVQ	"".o+320(SP), R15
	0x02dd 00733 (pointer_vs_value/code/func.go:105)	PCDATA	$1, $29
	0x02dd 00733 (pointer_vs_value/code/func.go:105)	MOVQ	R15, ""..autotmp_31+120(SP)
	0x02e2 00738 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $13
	0x02e2 00738 (pointer_vs_value/code/func.go:105)	TESTB	AL, (R15)
	0x02e5 00741 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $14
	0x02e5 00741 (pointer_vs_value/code/func.go:105)	MOVQ	"".o+320(SP), R15
	0x02ed 00749 (pointer_vs_value/code/func.go:105)	PCDATA	$1, $30
	0x02ed 00749 (pointer_vs_value/code/func.go:105)	MOVQ	R15, ""..autotmp_32+112(SP)
	0x02f2 00754 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $13
	0x02f2 00754 (pointer_vs_value/code/func.go:105)	TESTB	AL, (R15)
	0x02f5 00757 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $14
	0x02f5 00757 (pointer_vs_value/code/func.go:106)	MOVQ	"".o+320(SP), R15
	0x02fd 00765 (pointer_vs_value/code/func.go:106)	PCDATA	$1, $31
	0x02fd 00765 (pointer_vs_value/code/func.go:106)	MOVQ	R15, ""..autotmp_33+104(SP)
	0x0302 00770 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $13
	0x0302 00770 (pointer_vs_value/code/func.go:106)	TESTB	AL, (R15)
	0x0305 00773 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $14
	0x0305 00773 (pointer_vs_value/code/func.go:106)	MOVQ	"".o+320(SP), R15
	0x030d 00781 (pointer_vs_value/code/func.go:106)	PCDATA	$1, $32
	0x030d 00781 (pointer_vs_value/code/func.go:106)	MOVQ	R15, ""..autotmp_34+96(SP)
	0x0312 00786 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $13
	0x0312 00786 (pointer_vs_value/code/func.go:106)	TESTB	AL, (R15)
	0x0315 00789 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $14
	0x0315 00789 (pointer_vs_value/code/func.go:106)	MOVQ	"".o+320(SP), R15
	0x031d 00797 (pointer_vs_value/code/func.go:106)	PCDATA	$1, $33
	0x031d 00797 (pointer_vs_value/code/func.go:106)	MOVQ	R15, ""..autotmp_35+88(SP)
	0x0322 00802 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $13
	0x0322 00802 (pointer_vs_value/code/func.go:106)	TESTB	AL, (R15)
	0x0325 00805 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $14
	0x0325 00805 (pointer_vs_value/code/func.go:106)	MOVQ	"".o+320(SP), R15
	0x032d 00813 (pointer_vs_value/code/func.go:106)	PCDATA	$1, $34
	0x032d 00813 (pointer_vs_value/code/func.go:106)	MOVQ	R15, ""..autotmp_36+80(SP)
	0x0332 00818 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $13
	0x0332 00818 (pointer_vs_value/code/func.go:106)	TESTB	AL, (R15)
	0x0335 00821 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $14
	0x0335 00821 (pointer_vs_value/code/func.go:106)	MOVQ	"".o+320(SP), R15
	0x033d 00829 (pointer_vs_value/code/func.go:106)	PCDATA	$1, $35
	0x033d 00829 (pointer_vs_value/code/func.go:106)	MOVQ	R15, ""..autotmp_37+72(SP)
	0x0342 00834 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $13
	0x0342 00834 (pointer_vs_value/code/func.go:106)	TESTB	AL, (R15)
	0x0345 00837 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $14
	0x0345 00837 (pointer_vs_value/code/func.go:106)	MOVQ	"".o+320(SP), R15
	0x034d 00845 (pointer_vs_value/code/func.go:106)	PCDATA	$1, $36
	0x034d 00845 (pointer_vs_value/code/func.go:106)	MOVQ	R15, ""..autotmp_38+64(SP)
	0x0352 00850 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $13
	0x0352 00850 (pointer_vs_value/code/func.go:106)	TESTB	AL, (R15)
	0x0355 00853 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $14
	0x0355 00853 (pointer_vs_value/code/func.go:106)	MOVQ	"".o+320(SP), R15
	0x035d 00861 (pointer_vs_value/code/func.go:106)	PCDATA	$1, $37
	0x035d 00861 (pointer_vs_value/code/func.go:106)	MOVQ	R15, ""..autotmp_39+56(SP)
	0x0362 00866 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $13
	0x0362 00866 (pointer_vs_value/code/func.go:106)	TESTB	AL, (R15)
	0x0365 00869 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $14
	0x0365 00869 (pointer_vs_value/code/func.go:106)	MOVQ	"".o+320(SP), R15
	0x036d 00877 (pointer_vs_value/code/func.go:106)	PCDATA	$1, $38
	0x036d 00877 (pointer_vs_value/code/func.go:106)	MOVQ	R15, ""..autotmp_40+40(SP)
	0x0372 00882 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $13
	0x0372 00882 (pointer_vs_value/code/func.go:106)	TESTB	AL, (R15)
	0x0375 00885 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $14
	0x0375 00885 (pointer_vs_value/code/func.go:106)	PCDATA	$1, $39
	0x0375 00885 (pointer_vs_value/code/func.go:106)	MOVQ	"".o+320(SP), R15
	0x037d 00893 (pointer_vs_value/code/func.go:106)	TESTB	AL, (R15)
	0x0380 00896 (pointer_vs_value/code/func.go:101)	PCDATA	$0, $15
	0x0380 00896 (pointer_vs_value/code/func.go:101)	MOVQ	(AX), AX
	0x0383 00899 (pointer_vs_value/code/func.go:101)	PCDATA	$0, $16
	0x0383 00899 (pointer_vs_value/code/func.go:101)	ADDQ	8(CX), AX
	0x0387 00903 (pointer_vs_value/code/func.go:101)	PCDATA	$0, $17
	0x0387 00903 (pointer_vs_value/code/func.go:101)	ADDQ	16(DX), AX
	0x038b 00907 (pointer_vs_value/code/func.go:101)	PCDATA	$0, $18
	0x038b 00907 (pointer_vs_value/code/func.go:101)	ADDQ	24(BX), AX
	0x038f 00911 (pointer_vs_value/code/func.go:101)	PCDATA	$0, $19
	0x038f 00911 (pointer_vs_value/code/func.go:101)	ADDQ	32(SI), AX
	0x0393 00915 (pointer_vs_value/code/func.go:101)	PCDATA	$0, $20
	0x0393 00915 (pointer_vs_value/code/func.go:101)	ADDQ	40(DI), AX
	0x0397 00919 (pointer_vs_value/code/func.go:101)	PCDATA	$0, $21
	0x0397 00919 (pointer_vs_value/code/func.go:101)	ADDQ	48(R8), AX
	0x039b 00923 (pointer_vs_value/code/func.go:101)	PCDATA	$0, $22
	0x039b 00923 (pointer_vs_value/code/func.go:101)	ADDQ	56(R9), AX
	0x039f 00927 (pointer_vs_value/code/func.go:101)	PCDATA	$0, $23
	0x039f 00927 (pointer_vs_value/code/func.go:101)	ADDQ	64(R10), AX
	0x03a3 00931 (pointer_vs_value/code/func.go:101)	PCDATA	$0, $24
	0x03a3 00931 (pointer_vs_value/code/func.go:101)	ADDQ	72(R11), AX
	0x03a7 00935 (pointer_vs_value/code/func.go:102)	PCDATA	$0, $25
	0x03a7 00935 (pointer_vs_value/code/func.go:102)	ADDQ	80(R12), AX
	0x03ac 00940 (pointer_vs_value/code/func.go:102)	PCDATA	$0, $26
	0x03ac 00940 (pointer_vs_value/code/func.go:102)	ADDQ	88(R13), AX
	0x03b0 00944 (pointer_vs_value/code/func.go:102)	PCDATA	$0, $27
	0x03b0 00944 (pointer_vs_value/code/func.go:102)	ADDQ	96(R14), AX
	0x03b4 00948 (pointer_vs_value/code/func.go:102)	PCDATA	$0, $28
	0x03b4 00948 (pointer_vs_value/code/func.go:102)	PCDATA	$1, $40
	0x03b4 00948 (pointer_vs_value/code/func.go:102)	MOVQ	""..autotmp_3+136(SP), CX
	0x03bc 00956 (pointer_vs_value/code/func.go:102)	PCDATA	$0, $27
	0x03bc 00956 (pointer_vs_value/code/func.go:102)	ADDQ	104(CX), AX
	0x03c0 00960 (pointer_vs_value/code/func.go:102)	PCDATA	$0, $28
	0x03c0 00960 (pointer_vs_value/code/func.go:102)	PCDATA	$1, $41
	0x03c0 00960 (pointer_vs_value/code/func.go:102)	MOVQ	""..autotmp_4+48(SP), CX
	0x03c5 00965 (pointer_vs_value/code/func.go:102)	PCDATA	$0, $27
	0x03c5 00965 (pointer_vs_value/code/func.go:102)	ADDQ	112(CX), AX
	0x03c9 00969 (pointer_vs_value/code/func.go:102)	PCDATA	$0, $28
	0x03c9 00969 (pointer_vs_value/code/func.go:102)	PCDATA	$1, $42
	0x03c9 00969 (pointer_vs_value/code/func.go:102)	MOVQ	""..autotmp_5+32(SP), CX
	0x03ce 00974 (pointer_vs_value/code/func.go:102)	PCDATA	$0, $27
	0x03ce 00974 (pointer_vs_value/code/func.go:102)	ADDQ	120(CX), AX
	0x03d2 00978 (pointer_vs_value/code/func.go:102)	PCDATA	$0, $28
	0x03d2 00978 (pointer_vs_value/code/func.go:102)	PCDATA	$1, $43
	0x03d2 00978 (pointer_vs_value/code/func.go:102)	MOVQ	""..autotmp_6+24(SP), CX
	0x03d7 00983 (pointer_vs_value/code/func.go:102)	PCDATA	$0, $27
	0x03d7 00983 (pointer_vs_value/code/func.go:102)	ADDQ	128(CX), AX
	0x03de 00990 (pointer_vs_value/code/func.go:102)	PCDATA	$0, $28
	0x03de 00990 (pointer_vs_value/code/func.go:102)	PCDATA	$1, $44
	0x03de 00990 (pointer_vs_value/code/func.go:102)	MOVQ	""..autotmp_7+16(SP), CX
	0x03e3 00995 (pointer_vs_value/code/func.go:102)	PCDATA	$0, $27
	0x03e3 00995 (pointer_vs_value/code/func.go:102)	ADDQ	136(CX), AX
	0x03ea 01002 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $28
	0x03ea 01002 (pointer_vs_value/code/func.go:103)	PCDATA	$1, $45
	0x03ea 01002 (pointer_vs_value/code/func.go:103)	MOVQ	""..autotmp_8+8(SP), CX
	0x03ef 01007 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $27
	0x03ef 01007 (pointer_vs_value/code/func.go:103)	ADDQ	144(CX), AX
	0x03f6 01014 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $28
	0x03f6 01014 (pointer_vs_value/code/func.go:103)	PCDATA	$1, $46
	0x03f6 01014 (pointer_vs_value/code/func.go:103)	MOVQ	""..autotmp_9(SP), CX
	0x03fa 01018 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $27
	0x03fa 01018 (pointer_vs_value/code/func.go:103)	ADDQ	152(CX), AX
	0x0401 01025 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $28
	0x0401 01025 (pointer_vs_value/code/func.go:103)	PCDATA	$1, $47
	0x0401 01025 (pointer_vs_value/code/func.go:103)	MOVQ	""..autotmp_10+296(SP), CX
	0x0409 01033 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $27
	0x0409 01033 (pointer_vs_value/code/func.go:103)	ADDQ	160(CX), AX
	0x0410 01040 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $28
	0x0410 01040 (pointer_vs_value/code/func.go:103)	PCDATA	$1, $48
	0x0410 01040 (pointer_vs_value/code/func.go:103)	MOVQ	""..autotmp_11+288(SP), CX
	0x0418 01048 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $27
	0x0418 01048 (pointer_vs_value/code/func.go:103)	ADDQ	168(CX), AX
	0x041f 01055 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $28
	0x041f 01055 (pointer_vs_value/code/func.go:103)	PCDATA	$1, $49
	0x041f 01055 (pointer_vs_value/code/func.go:103)	MOVQ	""..autotmp_12+280(SP), CX
	0x0427 01063 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $27
	0x0427 01063 (pointer_vs_value/code/func.go:103)	ADDQ	184(CX), AX
	0x042e 01070 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $28
	0x042e 01070 (pointer_vs_value/code/func.go:103)	PCDATA	$1, $50
	0x042e 01070 (pointer_vs_value/code/func.go:103)	MOVQ	""..autotmp_13+272(SP), CX
	0x0436 01078 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $27
	0x0436 01078 (pointer_vs_value/code/func.go:103)	ADDQ	176(CX), AX
	0x043d 01085 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $28
	0x043d 01085 (pointer_vs_value/code/func.go:103)	PCDATA	$1, $51
	0x043d 01085 (pointer_vs_value/code/func.go:103)	MOVQ	""..autotmp_14+264(SP), CX
	0x0445 01093 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $27
	0x0445 01093 (pointer_vs_value/code/func.go:103)	ADDQ	192(CX), AX
	0x044c 01100 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $28
	0x044c 01100 (pointer_vs_value/code/func.go:103)	PCDATA	$1, $52
	0x044c 01100 (pointer_vs_value/code/func.go:103)	MOVQ	""..autotmp_15+256(SP), CX
	0x0454 01108 (pointer_vs_value/code/func.go:103)	PCDATA	$0, $27
	0x0454 01108 (pointer_vs_value/code/func.go:103)	ADDQ	200(CX), AX
	0x045b 01115 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $28
	0x045b 01115 (pointer_vs_value/code/func.go:104)	PCDATA	$1, $53
	0x045b 01115 (pointer_vs_value/code/func.go:104)	MOVQ	""..autotmp_16+248(SP), CX
	0x0463 01123 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $27
	0x0463 01123 (pointer_vs_value/code/func.go:104)	MOVSD	208(CX), X0
	0x046b 01131 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $28
	0x046b 01131 (pointer_vs_value/code/func.go:104)	PCDATA	$1, $54
	0x046b 01131 (pointer_vs_value/code/func.go:104)	MOVQ	""..autotmp_17+240(SP), CX
	0x0473 01139 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $27
	0x0473 01139 (pointer_vs_value/code/func.go:104)	ADDSD	216(CX), X0
	0x047b 01147 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $28
	0x047b 01147 (pointer_vs_value/code/func.go:104)	PCDATA	$1, $55
	0x047b 01147 (pointer_vs_value/code/func.go:104)	MOVQ	""..autotmp_18+232(SP), CX
	0x0483 01155 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $27
	0x0483 01155 (pointer_vs_value/code/func.go:104)	ADDSD	224(CX), X0
	0x048b 01163 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $28
	0x048b 01163 (pointer_vs_value/code/func.go:104)	PCDATA	$1, $56
	0x048b 01163 (pointer_vs_value/code/func.go:104)	MOVQ	""..autotmp_19+224(SP), CX
	0x0493 01171 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $27
	0x0493 01171 (pointer_vs_value/code/func.go:104)	ADDSD	232(CX), X0
	0x049b 01179 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $28
	0x049b 01179 (pointer_vs_value/code/func.go:104)	PCDATA	$1, $57
	0x049b 01179 (pointer_vs_value/code/func.go:104)	MOVQ	""..autotmp_20+216(SP), CX
	0x04a3 01187 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $27
	0x04a3 01187 (pointer_vs_value/code/func.go:104)	ADDSD	240(CX), X0
	0x04ab 01195 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $28
	0x04ab 01195 (pointer_vs_value/code/func.go:104)	PCDATA	$1, $58
	0x04ab 01195 (pointer_vs_value/code/func.go:104)	MOVQ	""..autotmp_21+208(SP), CX
	0x04b3 01203 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $27
	0x04b3 01203 (pointer_vs_value/code/func.go:104)	ADDSD	248(CX), X0
	0x04bb 01211 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $28
	0x04bb 01211 (pointer_vs_value/code/func.go:104)	PCDATA	$1, $59
	0x04bb 01211 (pointer_vs_value/code/func.go:104)	MOVQ	""..autotmp_22+200(SP), CX
	0x04c3 01219 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $27
	0x04c3 01219 (pointer_vs_value/code/func.go:104)	ADDSD	256(CX), X0
	0x04cb 01227 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $28
	0x04cb 01227 (pointer_vs_value/code/func.go:104)	PCDATA	$1, $60
	0x04cb 01227 (pointer_vs_value/code/func.go:104)	MOVQ	""..autotmp_23+192(SP), CX
	0x04d3 01235 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $27
	0x04d3 01235 (pointer_vs_value/code/func.go:104)	ADDSD	264(CX), X0
	0x04db 01243 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $28
	0x04db 01243 (pointer_vs_value/code/func.go:104)	PCDATA	$1, $61
	0x04db 01243 (pointer_vs_value/code/func.go:104)	MOVQ	""..autotmp_24+184(SP), CX
	0x04e3 01251 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $27
	0x04e3 01251 (pointer_vs_value/code/func.go:104)	ADDSD	272(CX), X0
	0x04eb 01259 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $28
	0x04eb 01259 (pointer_vs_value/code/func.go:104)	PCDATA	$1, $62
	0x04eb 01259 (pointer_vs_value/code/func.go:104)	MOVQ	""..autotmp_25+176(SP), CX
	0x04f3 01267 (pointer_vs_value/code/func.go:104)	PCDATA	$0, $27
	0x04f3 01267 (pointer_vs_value/code/func.go:104)	ADDSD	280(CX), X0
	0x04fb 01275 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $28
	0x04fb 01275 (pointer_vs_value/code/func.go:105)	PCDATA	$1, $63
	0x04fb 01275 (pointer_vs_value/code/func.go:105)	MOVQ	""..autotmp_26+168(SP), CX
	0x0503 01283 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $27
	0x0503 01283 (pointer_vs_value/code/func.go:105)	ADDSD	288(CX), X0
	0x050b 01291 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $28
	0x050b 01291 (pointer_vs_value/code/func.go:105)	PCDATA	$1, $64
	0x050b 01291 (pointer_vs_value/code/func.go:105)	MOVQ	""..autotmp_27+160(SP), CX
	0x0513 01299 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $27
	0x0513 01299 (pointer_vs_value/code/func.go:105)	ADDSD	296(CX), X0
	0x051b 01307 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $28
	0x051b 01307 (pointer_vs_value/code/func.go:105)	PCDATA	$1, $65
	0x051b 01307 (pointer_vs_value/code/func.go:105)	MOVQ	""..autotmp_28+152(SP), CX
	0x0523 01315 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $27
	0x0523 01315 (pointer_vs_value/code/func.go:105)	ADDSD	304(CX), X0
	0x052b 01323 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $28
	0x052b 01323 (pointer_vs_value/code/func.go:105)	PCDATA	$1, $66
	0x052b 01323 (pointer_vs_value/code/func.go:105)	MOVQ	""..autotmp_29+144(SP), CX
	0x0533 01331 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $27
	0x0533 01331 (pointer_vs_value/code/func.go:105)	ADDSD	312(CX), X0
	0x053b 01339 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $28
	0x053b 01339 (pointer_vs_value/code/func.go:105)	PCDATA	$1, $67
	0x053b 01339 (pointer_vs_value/code/func.go:105)	MOVQ	""..autotmp_30+128(SP), CX
	0x0543 01347 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $27
	0x0543 01347 (pointer_vs_value/code/func.go:105)	ADDSD	320(CX), X0
	0x054b 01355 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $28
	0x054b 01355 (pointer_vs_value/code/func.go:105)	PCDATA	$1, $68
	0x054b 01355 (pointer_vs_value/code/func.go:105)	MOVQ	""..autotmp_31+120(SP), CX
	0x0550 01360 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $27
	0x0550 01360 (pointer_vs_value/code/func.go:105)	ADDSD	328(CX), X0
	0x0558 01368 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $28
	0x0558 01368 (pointer_vs_value/code/func.go:105)	PCDATA	$1, $69
	0x0558 01368 (pointer_vs_value/code/func.go:105)	MOVQ	""..autotmp_32+112(SP), CX
	0x055d 01373 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $27
	0x055d 01373 (pointer_vs_value/code/func.go:105)	ADDSD	336(CX), X0
	0x0565 01381 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $28
	0x0565 01381 (pointer_vs_value/code/func.go:105)	PCDATA	$1, $70
	0x0565 01381 (pointer_vs_value/code/func.go:105)	MOVQ	""..autotmp_33+104(SP), CX
	0x056a 01386 (pointer_vs_value/code/func.go:105)	PCDATA	$0, $27
	0x056a 01386 (pointer_vs_value/code/func.go:105)	ADDSD	344(CX), X0
	0x0572 01394 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $28
	0x0572 01394 (pointer_vs_value/code/func.go:106)	PCDATA	$1, $71
	0x0572 01394 (pointer_vs_value/code/func.go:106)	MOVQ	""..autotmp_34+96(SP), CX
	0x0577 01399 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $27
	0x0577 01399 (pointer_vs_value/code/func.go:106)	ADDSD	352(CX), X0
	0x057f 01407 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $28
	0x057f 01407 (pointer_vs_value/code/func.go:106)	PCDATA	$1, $72
	0x057f 01407 (pointer_vs_value/code/func.go:106)	MOVQ	""..autotmp_35+88(SP), CX
	0x0584 01412 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $27
	0x0584 01412 (pointer_vs_value/code/func.go:106)	ADDSD	360(CX), X0
	0x058c 01420 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $28
	0x058c 01420 (pointer_vs_value/code/func.go:106)	PCDATA	$1, $73
	0x058c 01420 (pointer_vs_value/code/func.go:106)	MOVQ	""..autotmp_36+80(SP), CX
	0x0591 01425 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $27
	0x0591 01425 (pointer_vs_value/code/func.go:106)	ADDSD	368(CX), X0
	0x0599 01433 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $28
	0x0599 01433 (pointer_vs_value/code/func.go:106)	PCDATA	$1, $74
	0x0599 01433 (pointer_vs_value/code/func.go:106)	MOVQ	""..autotmp_37+72(SP), CX
	0x059e 01438 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $27
	0x059e 01438 (pointer_vs_value/code/func.go:106)	ADDSD	376(CX), X0
	0x05a6 01446 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $28
	0x05a6 01446 (pointer_vs_value/code/func.go:106)	PCDATA	$1, $75
	0x05a6 01446 (pointer_vs_value/code/func.go:106)	MOVQ	""..autotmp_38+64(SP), CX
	0x05ab 01451 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $27
	0x05ab 01451 (pointer_vs_value/code/func.go:106)	ADDSD	392(CX), X0
	0x05b3 01459 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $28
	0x05b3 01459 (pointer_vs_value/code/func.go:106)	PCDATA	$1, $76
	0x05b3 01459 (pointer_vs_value/code/func.go:106)	MOVQ	""..autotmp_39+56(SP), CX
	0x05b8 01464 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $27
	0x05b8 01464 (pointer_vs_value/code/func.go:106)	ADDSD	384(CX), X0
	0x05c0 01472 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $28
	0x05c0 01472 (pointer_vs_value/code/func.go:106)	PCDATA	$1, $77
	0x05c0 01472 (pointer_vs_value/code/func.go:106)	MOVQ	""..autotmp_40+40(SP), CX
	0x05c5 01477 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $27
	0x05c5 01477 (pointer_vs_value/code/func.go:106)	ADDSD	400(CX), X0
	0x05cd 01485 (pointer_vs_value/code/func.go:106)	PCDATA	$0, $0
	0x05cd 01485 (pointer_vs_value/code/func.go:106)	ADDSD	408(R15), X0
	0x05d6 01494 (pointer_vs_value/code/func.go:100)	XORPS	X1, X1
	0x05d9 01497 (pointer_vs_value/code/func.go:100)	CVTSQ2SD	AX, X1
	0x05de 01502 (pointer_vs_value/code/func.go:103)	DIVSD	X0, X1
	0x05e2 01506 (pointer_vs_value/code/func.go:100)	MOVSD	X1, "".~r1+328(SP)
	0x05eb 01515 (pointer_vs_value/code/func.go:100)	PCDATA	$1, $78
	0x05eb 01515 (pointer_vs_value/code/func.go:100)	XORPS	X0, X0
	0x05ee 01518 (pointer_vs_value/code/func.go:100)	MOVUPS	X0, "".~r2+336(SP)
	0x05f6 01526 (pointer_vs_value/code/func.go:100)	MOVQ	304(SP), BP
	0x05fe 01534 (pointer_vs_value/code/func.go:100)	ADDQ	$312, SP
	0x0605 01541 (pointer_vs_value/code/func.go:100)	RET
	0x0606 01542 (pointer_vs_value/code/func.go:100)	NOP
	0x0606 01542 (pointer_vs_value/code/func.go:98)	PCDATA	$1, $-1
	0x0606 01542 (pointer_vs_value/code/func.go:98)	PCDATA	$0, $-1
	0x0606 01542 (pointer_vs_value/code/func.go:98)	CALL	runtime.morestack_noctxt(SB)
	0x060b 01547 (pointer_vs_value/code/func.go:98)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 48 ff ff  eH..%....H..$H..
	0x0010 ff 48 3b 41 10 0f 86 eb 05 00 00 48 81 ec 38 01  .H;A.......H..8.
	0x0020 00 00 48 89 ac 24 30 01 00 00 48 8d ac 24 30 01  ..H..$0...H..$0.
	0x0030 00 00 0f 57 c0 f2 0f 11 84 24 48 01 00 00 0f 57  ...W.....$H....W
	0x0040 c0 0f 11 84 24 50 01 00 00 48 8b 84 24 40 01 00  ....$P...H..$@..
	0x0050 00 84 00 48 8b 8c 24 40 01 00 00 84 01 48 8b 94  ...H..$@.....H..
	0x0060 24 40 01 00 00 84 02 48 8b 9c 24 40 01 00 00 84  $@.....H..$@....
	0x0070 03 48 8b b4 24 40 01 00 00 84 06 48 8b bc 24 40  .H..$@.....H..$@
	0x0080 01 00 00 84 07 4c 8b 84 24 40 01 00 00 41 84 00  .....L..$@...A..
	0x0090 4c 8b 8c 24 40 01 00 00 41 84 01 4c 8b 94 24 40  L..$@...A..L..$@
	0x00a0 01 00 00 41 84 02 4c 8b 9c 24 40 01 00 00 41 84  ...A..L..$@...A.
	0x00b0 03 4c 8b a4 24 40 01 00 00 41 84 04 24 4c 8b ac  .L..$@...A..$L..
	0x00c0 24 40 01 00 00 41 84 45 00 4c 8b b4 24 40 01 00  $@...A.E.L..$@..
	0x00d0 00 41 84 06 4c 8b bc 24 40 01 00 00 4c 89 bc 24  .A..L..$@...L..$
	0x00e0 88 00 00 00 41 84 07 4c 8b bc 24 40 01 00 00 4c  ....A..L..$@...L
	0x00f0 89 7c 24 30 41 84 07 4c 8b bc 24 40 01 00 00 4c  .|$0A..L..$@...L
	0x0100 89 7c 24 20 41 84 07 4c 8b bc 24 40 01 00 00 4c  .|$ A..L..$@...L
	0x0110 89 7c 24 18 41 84 07 4c 8b bc 24 40 01 00 00 4c  .|$.A..L..$@...L
	0x0120 89 7c 24 10 41 84 07 4c 8b bc 24 40 01 00 00 4c  .|$.A..L..$@...L
	0x0130 89 7c 24 08 41 84 07 4c 8b bc 24 40 01 00 00 4c  .|$.A..L..$@...L
	0x0140 89 3c 24 41 84 07 4c 8b bc 24 40 01 00 00 4c 89  .<$A..L..$@...L.
	0x0150 bc 24 28 01 00 00 41 84 07 4c 8b bc 24 40 01 00  .$(...A..L..$@..
	0x0160 00 4c 89 bc 24 20 01 00 00 41 84 07 4c 8b bc 24  .L..$ ...A..L..$
	0x0170 40 01 00 00 4c 89 bc 24 18 01 00 00 41 84 07 4c  @...L..$....A..L
	0x0180 8b bc 24 40 01 00 00 4c 89 bc 24 10 01 00 00 41  ..$@...L..$....A
	0x0190 84 07 4c 8b bc 24 40 01 00 00 4c 89 bc 24 08 01  ..L..$@...L..$..
	0x01a0 00 00 41 84 07 4c 8b bc 24 40 01 00 00 4c 89 bc  ..A..L..$@...L..
	0x01b0 24 00 01 00 00 41 84 07 4c 8b bc 24 40 01 00 00  $....A..L..$@...
	0x01c0 4c 89 bc 24 f8 00 00 00 41 84 07 4c 8b bc 24 40  L..$....A..L..$@
	0x01d0 01 00 00 4c 89 bc 24 f0 00 00 00 41 84 07 4c 8b  ...L..$....A..L.
	0x01e0 bc 24 40 01 00 00 4c 89 bc 24 e8 00 00 00 41 84  .$@...L..$....A.
	0x01f0 07 4c 8b bc 24 40 01 00 00 4c 89 bc 24 e0 00 00  .L..$@...L..$...
	0x0200 00 41 84 07 4c 8b bc 24 40 01 00 00 4c 89 bc 24  .A..L..$@...L..$
	0x0210 d8 00 00 00 41 84 07 4c 8b bc 24 40 01 00 00 4c  ....A..L..$@...L
	0x0220 89 bc 24 d0 00 00 00 41 84 07 4c 8b bc 24 40 01  ..$....A..L..$@.
	0x0230 00 00 4c 89 bc 24 c8 00 00 00 41 84 07 4c 8b bc  ..L..$....A..L..
	0x0240 24 40 01 00 00 4c 89 bc 24 c0 00 00 00 41 84 07  $@...L..$....A..
	0x0250 4c 8b bc 24 40 01 00 00 4c 89 bc 24 b8 00 00 00  L..$@...L..$....
	0x0260 41 84 07 4c 8b bc 24 40 01 00 00 4c 89 bc 24 b0  A..L..$@...L..$.
	0x0270 00 00 00 41 84 07 4c 8b bc 24 40 01 00 00 4c 89  ...A..L..$@...L.
	0x0280 bc 24 a8 00 00 00 41 84 07 4c 8b bc 24 40 01 00  .$....A..L..$@..
	0x0290 00 4c 89 bc 24 a0 00 00 00 41 84 07 4c 8b bc 24  .L..$....A..L..$
	0x02a0 40 01 00 00 4c 89 bc 24 98 00 00 00 41 84 07 4c  @...L..$....A..L
	0x02b0 8b bc 24 40 01 00 00 4c 89 bc 24 90 00 00 00 41  ..$@...L..$....A
	0x02c0 84 07 4c 8b bc 24 40 01 00 00 4c 89 bc 24 80 00  ..L..$@...L..$..
	0x02d0 00 00 41 84 07 4c 8b bc 24 40 01 00 00 4c 89 7c  ..A..L..$@...L.|
	0x02e0 24 78 41 84 07 4c 8b bc 24 40 01 00 00 4c 89 7c  $xA..L..$@...L.|
	0x02f0 24 70 41 84 07 4c 8b bc 24 40 01 00 00 4c 89 7c  $pA..L..$@...L.|
	0x0300 24 68 41 84 07 4c 8b bc 24 40 01 00 00 4c 89 7c  $hA..L..$@...L.|
	0x0310 24 60 41 84 07 4c 8b bc 24 40 01 00 00 4c 89 7c  $`A..L..$@...L.|
	0x0320 24 58 41 84 07 4c 8b bc 24 40 01 00 00 4c 89 7c  $XA..L..$@...L.|
	0x0330 24 50 41 84 07 4c 8b bc 24 40 01 00 00 4c 89 7c  $PA..L..$@...L.|
	0x0340 24 48 41 84 07 4c 8b bc 24 40 01 00 00 4c 89 7c  $HA..L..$@...L.|
	0x0350 24 40 41 84 07 4c 8b bc 24 40 01 00 00 4c 89 7c  $@A..L..$@...L.|
	0x0360 24 38 41 84 07 4c 8b bc 24 40 01 00 00 4c 89 7c  $8A..L..$@...L.|
	0x0370 24 28 41 84 07 4c 8b bc 24 40 01 00 00 41 84 07  $(A..L..$@...A..
	0x0380 48 8b 00 48 03 41 08 48 03 42 10 48 03 43 18 48  H..H.A.H.B.H.C.H
	0x0390 03 46 20 48 03 47 28 49 03 40 30 49 03 41 38 49  .F H.G(I.@0I.A8I
	0x03a0 03 42 40 49 03 43 48 49 03 44 24 50 49 03 45 58  .B@I.CHI.D$PI.EX
	0x03b0 49 03 46 60 48 8b 8c 24 88 00 00 00 48 03 41 68  I.F`H..$....H.Ah
	0x03c0 48 8b 4c 24 30 48 03 41 70 48 8b 4c 24 20 48 03  H.L$0H.ApH.L$ H.
	0x03d0 41 78 48 8b 4c 24 18 48 03 81 80 00 00 00 48 8b  AxH.L$.H......H.
	0x03e0 4c 24 10 48 03 81 88 00 00 00 48 8b 4c 24 08 48  L$.H......H.L$.H
	0x03f0 03 81 90 00 00 00 48 8b 0c 24 48 03 81 98 00 00  ......H..$H.....
	0x0400 00 48 8b 8c 24 28 01 00 00 48 03 81 a0 00 00 00  .H..$(...H......
	0x0410 48 8b 8c 24 20 01 00 00 48 03 81 a8 00 00 00 48  H..$ ...H......H
	0x0420 8b 8c 24 18 01 00 00 48 03 81 b8 00 00 00 48 8b  ..$....H......H.
	0x0430 8c 24 10 01 00 00 48 03 81 b0 00 00 00 48 8b 8c  .$....H......H..
	0x0440 24 08 01 00 00 48 03 81 c0 00 00 00 48 8b 8c 24  $....H......H..$
	0x0450 00 01 00 00 48 03 81 c8 00 00 00 48 8b 8c 24 f8  ....H......H..$.
	0x0460 00 00 00 f2 0f 10 81 d0 00 00 00 48 8b 8c 24 f0  ...........H..$.
	0x0470 00 00 00 f2 0f 58 81 d8 00 00 00 48 8b 8c 24 e8  .....X.....H..$.
	0x0480 00 00 00 f2 0f 58 81 e0 00 00 00 48 8b 8c 24 e0  .....X.....H..$.
	0x0490 00 00 00 f2 0f 58 81 e8 00 00 00 48 8b 8c 24 d8  .....X.....H..$.
	0x04a0 00 00 00 f2 0f 58 81 f0 00 00 00 48 8b 8c 24 d0  .....X.....H..$.
	0x04b0 00 00 00 f2 0f 58 81 f8 00 00 00 48 8b 8c 24 c8  .....X.....H..$.
	0x04c0 00 00 00 f2 0f 58 81 00 01 00 00 48 8b 8c 24 c0  .....X.....H..$.
	0x04d0 00 00 00 f2 0f 58 81 08 01 00 00 48 8b 8c 24 b8  .....X.....H..$.
	0x04e0 00 00 00 f2 0f 58 81 10 01 00 00 48 8b 8c 24 b0  .....X.....H..$.
	0x04f0 00 00 00 f2 0f 58 81 18 01 00 00 48 8b 8c 24 a8  .....X.....H..$.
	0x0500 00 00 00 f2 0f 58 81 20 01 00 00 48 8b 8c 24 a0  .....X. ...H..$.
	0x0510 00 00 00 f2 0f 58 81 28 01 00 00 48 8b 8c 24 98  .....X.(...H..$.
	0x0520 00 00 00 f2 0f 58 81 30 01 00 00 48 8b 8c 24 90  .....X.0...H..$.
	0x0530 00 00 00 f2 0f 58 81 38 01 00 00 48 8b 8c 24 80  .....X.8...H..$.
	0x0540 00 00 00 f2 0f 58 81 40 01 00 00 48 8b 4c 24 78  .....X.@...H.L$x
	0x0550 f2 0f 58 81 48 01 00 00 48 8b 4c 24 70 f2 0f 58  ..X.H...H.L$p..X
	0x0560 81 50 01 00 00 48 8b 4c 24 68 f2 0f 58 81 58 01  .P...H.L$h..X.X.
	0x0570 00 00 48 8b 4c 24 60 f2 0f 58 81 60 01 00 00 48  ..H.L$`..X.`...H
	0x0580 8b 4c 24 58 f2 0f 58 81 68 01 00 00 48 8b 4c 24  .L$X..X.h...H.L$
	0x0590 50 f2 0f 58 81 70 01 00 00 48 8b 4c 24 48 f2 0f  P..X.p...H.L$H..
	0x05a0 58 81 78 01 00 00 48 8b 4c 24 40 f2 0f 58 81 88  X.x...H.L$@..X..
	0x05b0 01 00 00 48 8b 4c 24 38 f2 0f 58 81 80 01 00 00  ...H.L$8..X.....
	0x05c0 48 8b 4c 24 28 f2 0f 58 81 90 01 00 00 f2 41 0f  H.L$(..X......A.
	0x05d0 58 87 98 01 00 00 0f 57 c9 f2 48 0f 2a c8 f2 0f  X......W..H.*...
	0x05e0 5e c8 f2 0f 11 8c 24 48 01 00 00 0f 57 c0 0f 11  ^.....$H....W...
	0x05f0 84 24 50 01 00 00 48 8b ac 24 30 01 00 00 48 81  .$P...H..$0...H.
	0x0600 c4 38 01 00 00 c3 e8 00 00 00 00 e9 f0 f9 ff ff  .8..............
	rel 5+4 t=16 TLS+0
	rel 1543+4 t=8 runtime.morestack_noctxt+0
"".calcGigaWithInterface STEXT size=2788 args=0x28 locals=0x1b8
	0x0000 00000 (pointer_vs_value/code/func.go:109)	TEXT	"".calcGigaWithInterface(SB), ABIInternal, $440-40
	0x0000 00000 (pointer_vs_value/code/func.go:109)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/func.go:109)	LEAQ	-312(SP), AX
	0x0011 00017 (pointer_vs_value/code/func.go:109)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/func.go:109)	JLS	2778
	0x001b 00027 (pointer_vs_value/code/func.go:109)	SUBQ	$440, SP
	0x0022 00034 (pointer_vs_value/code/func.go:109)	MOVQ	BP, 432(SP)
	0x002a 00042 (pointer_vs_value/code/func.go:109)	LEAQ	432(SP), BP
	0x0032 00050 (pointer_vs_value/code/func.go:109)	FUNCDATA	$0, gclocals·b3e6cef2da4123bb4fb758b92dba3371(SB)
	0x0032 00050 (pointer_vs_value/code/func.go:109)	FUNCDATA	$1, gclocals·7d2d5fca80364273fb07d5820a76fef4(SB)
	0x0032 00050 (pointer_vs_value/code/func.go:109)	FUNCDATA	$2, gclocals·568470801006e5c0dc3947ea998fe279(SB)
	0x0032 00050 (pointer_vs_value/code/func.go:109)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/func.go:109)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/func.go:109)	XORPS	X0, X0
	0x0035 00053 (pointer_vs_value/code/func.go:109)	MOVSD	X0, "".~r1+464(SP)
	0x003e 00062 (pointer_vs_value/code/func.go:109)	XORPS	X0, X0
	0x0041 00065 (pointer_vs_value/code/func.go:109)	MOVUPS	X0, "".~r2+472(SP)
	0x0049 00073 (pointer_vs_value/code/func.go:112)	MOVQ	"".o+448(SP), AX
	0x0051 00081 (pointer_vs_value/code/func.go:112)	TESTB	AL, (AX)
	0x0053 00083 (pointer_vs_value/code/func.go:112)	MOVQ	24(AX), AX
	0x0057 00087 (pointer_vs_value/code/func.go:112)	PCDATA	$0, $1
	0x0057 00087 (pointer_vs_value/code/func.go:112)	MOVQ	"".o+456(SP), CX
	0x005f 00095 (pointer_vs_value/code/func.go:112)	PCDATA	$0, $0
	0x005f 00095 (pointer_vs_value/code/func.go:112)	MOVQ	CX, (SP)
	0x0063 00099 (pointer_vs_value/code/func.go:112)	CALL	AX
	0x0065 00101 (pointer_vs_value/code/func.go:112)	MOVQ	8(SP), AX
	0x006a 00106 (pointer_vs_value/code/func.go:112)	MOVQ	AX, ""..autotmp_3+264(SP)
	0x0072 00114 (pointer_vs_value/code/func.go:112)	MOVQ	"".o+448(SP), AX
	0x007a 00122 (pointer_vs_value/code/func.go:112)	TESTB	AL, (AX)
	0x007c 00124 (pointer_vs_value/code/func.go:112)	MOVQ	40(AX), AX
	0x0080 00128 (pointer_vs_value/code/func.go:112)	PCDATA	$0, $1
	0x0080 00128 (pointer_vs_value/code/func.go:112)	MOVQ	"".o+456(SP), CX
	0x0088 00136 (pointer_vs_value/code/func.go:112)	PCDATA	$0, $0
	0x0088 00136 (pointer_vs_value/code/func.go:112)	MOVQ	CX, (SP)
	0x008c 00140 (pointer_vs_value/code/func.go:112)	CALL	AX
	0x008e 00142 (pointer_vs_value/code/func.go:112)	MOVQ	8(SP), AX
	0x0093 00147 (pointer_vs_value/code/func.go:112)	MOVQ	AX, ""..autotmp_4+176(SP)
	0x009b 00155 (pointer_vs_value/code/func.go:112)	MOVQ	"".o+448(SP), AX
	0x00a3 00163 (pointer_vs_value/code/func.go:112)	TESTB	AL, (AX)
	0x00a5 00165 (pointer_vs_value/code/func.go:112)	MOVQ	56(AX), AX
	0x00a9 00169 (pointer_vs_value/code/func.go:112)	PCDATA	$0, $1
	0x00a9 00169 (pointer_vs_value/code/func.go:112)	MOVQ	"".o+456(SP), CX
	0x00b1 00177 (pointer_vs_value/code/func.go:112)	PCDATA	$0, $0
	0x00b1 00177 (pointer_vs_value/code/func.go:112)	MOVQ	CX, (SP)
	0x00b5 00181 (pointer_vs_value/code/func.go:112)	CALL	AX
	0x00b7 00183 (pointer_vs_value/code/func.go:112)	MOVQ	8(SP), AX
	0x00bc 00188 (pointer_vs_value/code/func.go:112)	MOVQ	AX, ""..autotmp_5+88(SP)
	0x00c1 00193 (pointer_vs_value/code/func.go:112)	MOVQ	"".o+448(SP), AX
	0x00c9 00201 (pointer_vs_value/code/func.go:112)	TESTB	AL, (AX)
	0x00cb 00203 (pointer_vs_value/code/func.go:112)	MOVQ	72(AX), AX
	0x00cf 00207 (pointer_vs_value/code/func.go:112)	PCDATA	$0, $1
	0x00cf 00207 (pointer_vs_value/code/func.go:112)	MOVQ	"".o+456(SP), CX
	0x00d7 00215 (pointer_vs_value/code/func.go:112)	PCDATA	$0, $0
	0x00d7 00215 (pointer_vs_value/code/func.go:112)	MOVQ	CX, (SP)
	0x00db 00219 (pointer_vs_value/code/func.go:112)	CALL	AX
	0x00dd 00221 (pointer_vs_value/code/func.go:112)	MOVQ	8(SP), AX
	0x00e2 00226 (pointer_vs_value/code/func.go:112)	MOVQ	AX, ""..autotmp_6+40(SP)
	0x00e7 00231 (pointer_vs_value/code/func.go:112)	MOVQ	"".o+448(SP), AX
	0x00ef 00239 (pointer_vs_value/code/func.go:112)	TESTB	AL, (AX)
	0x00f1 00241 (pointer_vs_value/code/func.go:112)	MOVQ	88(AX), AX
	0x00f5 00245 (pointer_vs_value/code/func.go:112)	PCDATA	$0, $1
	0x00f5 00245 (pointer_vs_value/code/func.go:112)	MOVQ	"".o+456(SP), CX
	0x00fd 00253 (pointer_vs_value/code/func.go:112)	PCDATA	$0, $0
	0x00fd 00253 (pointer_vs_value/code/func.go:112)	MOVQ	CX, (SP)
	0x0101 00257 (pointer_vs_value/code/func.go:112)	CALL	AX
	0x0103 00259 (pointer_vs_value/code/func.go:112)	MOVQ	8(SP), AX
	0x0108 00264 (pointer_vs_value/code/func.go:112)	MOVQ	AX, ""..autotmp_7+32(SP)
	0x010d 00269 (pointer_vs_value/code/func.go:112)	MOVQ	"".o+448(SP), AX
	0x0115 00277 (pointer_vs_value/code/func.go:112)	TESTB	AL, (AX)
	0x0117 00279 (pointer_vs_value/code/func.go:112)	MOVQ	104(AX), AX
	0x011b 00283 (pointer_vs_value/code/func.go:112)	PCDATA	$0, $1
	0x011b 00283 (pointer_vs_value/code/func.go:112)	MOVQ	"".o+456(SP), CX
	0x0123 00291 (pointer_vs_value/code/func.go:112)	PCDATA	$0, $0
	0x0123 00291 (pointer_vs_value/code/func.go:112)	MOVQ	CX, (SP)
	0x0127 00295 (pointer_vs_value/code/func.go:112)	CALL	AX
	0x0129 00297 (pointer_vs_value/code/func.go:112)	MOVQ	8(SP), AX
	0x012e 00302 (pointer_vs_value/code/func.go:112)	MOVQ	AX, ""..autotmp_8+24(SP)
	0x0133 00307 (pointer_vs_value/code/func.go:112)	MOVQ	"".o+448(SP), AX
	0x013b 00315 (pointer_vs_value/code/func.go:112)	TESTB	AL, (AX)
	0x013d 00317 (pointer_vs_value/code/func.go:112)	MOVQ	120(AX), AX
	0x0141 00321 (pointer_vs_value/code/func.go:112)	PCDATA	$0, $1
	0x0141 00321 (pointer_vs_value/code/func.go:112)	MOVQ	"".o+456(SP), CX
	0x0149 00329 (pointer_vs_value/code/func.go:112)	PCDATA	$0, $0
	0x0149 00329 (pointer_vs_value/code/func.go:112)	MOVQ	CX, (SP)
	0x014d 00333 (pointer_vs_value/code/func.go:112)	CALL	AX
	0x014f 00335 (pointer_vs_value/code/func.go:112)	MOVQ	8(SP), AX
	0x0154 00340 (pointer_vs_value/code/func.go:112)	MOVQ	AX, ""..autotmp_9+16(SP)
	0x0159 00345 (pointer_vs_value/code/func.go:112)	MOVQ	"".o+448(SP), AX
	0x0161 00353 (pointer_vs_value/code/func.go:112)	TESTB	AL, (AX)
	0x0163 00355 (pointer_vs_value/code/func.go:112)	MOVQ	136(AX), AX
	0x016a 00362 (pointer_vs_value/code/func.go:112)	PCDATA	$0, $1
	0x016a 00362 (pointer_vs_value/code/func.go:112)	MOVQ	"".o+456(SP), CX
	0x0172 00370 (pointer_vs_value/code/func.go:112)	PCDATA	$0, $0
	0x0172 00370 (pointer_vs_value/code/func.go:112)	MOVQ	CX, (SP)
	0x0176 00374 (pointer_vs_value/code/func.go:112)	CALL	AX
	0x0178 00376 (pointer_vs_value/code/func.go:112)	MOVQ	8(SP), AX
	0x017d 00381 (pointer_vs_value/code/func.go:112)	MOVQ	AX, ""..autotmp_10+424(SP)
	0x0185 00389 (pointer_vs_value/code/func.go:112)	MOVQ	"".o+448(SP), AX
	0x018d 00397 (pointer_vs_value/code/func.go:112)	TESTB	AL, (AX)
	0x018f 00399 (pointer_vs_value/code/func.go:112)	MOVQ	152(AX), AX
	0x0196 00406 (pointer_vs_value/code/func.go:112)	PCDATA	$0, $1
	0x0196 00406 (pointer_vs_value/code/func.go:112)	MOVQ	"".o+456(SP), CX
	0x019e 00414 (pointer_vs_value/code/func.go:112)	PCDATA	$0, $0
	0x019e 00414 (pointer_vs_value/code/func.go:112)	MOVQ	CX, (SP)
	0x01a2 00418 (pointer_vs_value/code/func.go:112)	CALL	AX
	0x01a4 00420 (pointer_vs_value/code/func.go:112)	MOVQ	8(SP), AX
	0x01a9 00425 (pointer_vs_value/code/func.go:112)	MOVQ	AX, ""..autotmp_11+416(SP)
	0x01b1 00433 (pointer_vs_value/code/func.go:113)	MOVQ	"".o+448(SP), AX
	0x01b9 00441 (pointer_vs_value/code/func.go:113)	TESTB	AL, (AX)
	0x01bb 00443 (pointer_vs_value/code/func.go:113)	MOVQ	168(AX), AX
	0x01c2 00450 (pointer_vs_value/code/func.go:113)	PCDATA	$0, $1
	0x01c2 00450 (pointer_vs_value/code/func.go:113)	MOVQ	"".o+456(SP), CX
	0x01ca 00458 (pointer_vs_value/code/func.go:113)	PCDATA	$0, $0
	0x01ca 00458 (pointer_vs_value/code/func.go:113)	MOVQ	CX, (SP)
	0x01ce 00462 (pointer_vs_value/code/func.go:113)	CALL	AX
	0x01d0 00464 (pointer_vs_value/code/func.go:113)	MOVQ	8(SP), AX
	0x01d5 00469 (pointer_vs_value/code/func.go:113)	MOVQ	AX, ""..autotmp_12+408(SP)
	0x01dd 00477 (pointer_vs_value/code/func.go:113)	MOVQ	"".o+448(SP), AX
	0x01e5 00485 (pointer_vs_value/code/func.go:113)	TESTB	AL, (AX)
	0x01e7 00487 (pointer_vs_value/code/func.go:113)	MOVQ	184(AX), AX
	0x01ee 00494 (pointer_vs_value/code/func.go:113)	PCDATA	$0, $1
	0x01ee 00494 (pointer_vs_value/code/func.go:113)	MOVQ	"".o+456(SP), CX
	0x01f6 00502 (pointer_vs_value/code/func.go:113)	PCDATA	$0, $0
	0x01f6 00502 (pointer_vs_value/code/func.go:113)	MOVQ	CX, (SP)
	0x01fa 00506 (pointer_vs_value/code/func.go:113)	CALL	AX
	0x01fc 00508 (pointer_vs_value/code/func.go:113)	MOVQ	8(SP), AX
	0x0201 00513 (pointer_vs_value/code/func.go:113)	MOVQ	AX, ""..autotmp_13+400(SP)
	0x0209 00521 (pointer_vs_value/code/func.go:113)	MOVQ	"".o+448(SP), AX
	0x0211 00529 (pointer_vs_value/code/func.go:113)	TESTB	AL, (AX)
	0x0213 00531 (pointer_vs_value/code/func.go:113)	MOVQ	200(AX), AX
	0x021a 00538 (pointer_vs_value/code/func.go:113)	PCDATA	$0, $1
	0x021a 00538 (pointer_vs_value/code/func.go:113)	MOVQ	"".o+456(SP), CX
	0x0222 00546 (pointer_vs_value/code/func.go:113)	PCDATA	$0, $0
	0x0222 00546 (pointer_vs_value/code/func.go:113)	MOVQ	CX, (SP)
	0x0226 00550 (pointer_vs_value/code/func.go:113)	CALL	AX
	0x0228 00552 (pointer_vs_value/code/func.go:113)	MOVQ	8(SP), AX
	0x022d 00557 (pointer_vs_value/code/func.go:113)	MOVQ	AX, ""..autotmp_14+392(SP)
	0x0235 00565 (pointer_vs_value/code/func.go:113)	MOVQ	"".o+448(SP), AX
	0x023d 00573 (pointer_vs_value/code/func.go:113)	TESTB	AL, (AX)
	0x023f 00575 (pointer_vs_value/code/func.go:113)	MOVQ	216(AX), AX
	0x0246 00582 (pointer_vs_value/code/func.go:113)	PCDATA	$0, $1
	0x0246 00582 (pointer_vs_value/code/func.go:113)	MOVQ	"".o+456(SP), CX
	0x024e 00590 (pointer_vs_value/code/func.go:113)	PCDATA	$0, $0
	0x024e 00590 (pointer_vs_value/code/func.go:113)	MOVQ	CX, (SP)
	0x0252 00594 (pointer_vs_value/code/func.go:113)	CALL	AX
	0x0254 00596 (pointer_vs_value/code/func.go:113)	MOVQ	8(SP), AX
	0x0259 00601 (pointer_vs_value/code/func.go:113)	MOVQ	AX, ""..autotmp_15+384(SP)
	0x0261 00609 (pointer_vs_value/code/func.go:113)	MOVQ	"".o+448(SP), AX
	0x0269 00617 (pointer_vs_value/code/func.go:113)	TESTB	AL, (AX)
	0x026b 00619 (pointer_vs_value/code/func.go:113)	MOVQ	232(AX), AX
	0x0272 00626 (pointer_vs_value/code/func.go:113)	PCDATA	$0, $1
	0x0272 00626 (pointer_vs_value/code/func.go:113)	MOVQ	"".o+456(SP), CX
	0x027a 00634 (pointer_vs_value/code/func.go:113)	PCDATA	$0, $0
	0x027a 00634 (pointer_vs_value/code/func.go:113)	MOVQ	CX, (SP)
	0x027e 00638 (pointer_vs_value/code/func.go:113)	CALL	AX
	0x0280 00640 (pointer_vs_value/code/func.go:113)	MOVQ	8(SP), AX
	0x0285 00645 (pointer_vs_value/code/func.go:113)	MOVQ	AX, ""..autotmp_16+376(SP)
	0x028d 00653 (pointer_vs_value/code/func.go:113)	MOVQ	"".o+448(SP), AX
	0x0295 00661 (pointer_vs_value/code/func.go:113)	TESTB	AL, (AX)
	0x0297 00663 (pointer_vs_value/code/func.go:113)	MOVQ	248(AX), AX
	0x029e 00670 (pointer_vs_value/code/func.go:113)	PCDATA	$0, $1
	0x029e 00670 (pointer_vs_value/code/func.go:113)	MOVQ	"".o+456(SP), CX
	0x02a6 00678 (pointer_vs_value/code/func.go:113)	PCDATA	$0, $0
	0x02a6 00678 (pointer_vs_value/code/func.go:113)	MOVQ	CX, (SP)
	0x02aa 00682 (pointer_vs_value/code/func.go:113)	CALL	AX
	0x02ac 00684 (pointer_vs_value/code/func.go:113)	MOVQ	8(SP), AX
	0x02b1 00689 (pointer_vs_value/code/func.go:113)	MOVQ	AX, ""..autotmp_17+368(SP)
	0x02b9 00697 (pointer_vs_value/code/func.go:113)	MOVQ	"".o+448(SP), AX
	0x02c1 00705 (pointer_vs_value/code/func.go:113)	TESTB	AL, (AX)
	0x02c3 00707 (pointer_vs_value/code/func.go:113)	MOVQ	264(AX), AX
	0x02ca 00714 (pointer_vs_value/code/func.go:113)	PCDATA	$0, $1
	0x02ca 00714 (pointer_vs_value/code/func.go:113)	MOVQ	"".o+456(SP), CX
	0x02d2 00722 (pointer_vs_value/code/func.go:113)	PCDATA	$0, $0
	0x02d2 00722 (pointer_vs_value/code/func.go:113)	MOVQ	CX, (SP)
	0x02d6 00726 (pointer_vs_value/code/func.go:113)	CALL	AX
	0x02d8 00728 (pointer_vs_value/code/func.go:113)	MOVQ	8(SP), AX
	0x02dd 00733 (pointer_vs_value/code/func.go:113)	MOVQ	AX, ""..autotmp_18+360(SP)
	0x02e5 00741 (pointer_vs_value/code/func.go:113)	MOVQ	"".o+448(SP), AX
	0x02ed 00749 (pointer_vs_value/code/func.go:113)	TESTB	AL, (AX)
	0x02ef 00751 (pointer_vs_value/code/func.go:113)	MOVQ	280(AX), AX
	0x02f6 00758 (pointer_vs_value/code/func.go:113)	PCDATA	$0, $1
	0x02f6 00758 (pointer_vs_value/code/func.go:113)	MOVQ	"".o+456(SP), CX
	0x02fe 00766 (pointer_vs_value/code/func.go:113)	PCDATA	$0, $0
	0x02fe 00766 (pointer_vs_value/code/func.go:113)	MOVQ	CX, (SP)
	0x0302 00770 (pointer_vs_value/code/func.go:113)	CALL	AX
	0x0304 00772 (pointer_vs_value/code/func.go:113)	MOVQ	8(SP), AX
	0x0309 00777 (pointer_vs_value/code/func.go:113)	MOVQ	AX, ""..autotmp_19+352(SP)
	0x0311 00785 (pointer_vs_value/code/func.go:114)	MOVQ	"".o+448(SP), AX
	0x0319 00793 (pointer_vs_value/code/func.go:114)	TESTB	AL, (AX)
	0x031b 00795 (pointer_vs_value/code/func.go:114)	MOVQ	296(AX), AX
	0x0322 00802 (pointer_vs_value/code/func.go:114)	PCDATA	$0, $1
	0x0322 00802 (pointer_vs_value/code/func.go:114)	MOVQ	"".o+456(SP), CX
	0x032a 00810 (pointer_vs_value/code/func.go:114)	PCDATA	$0, $0
	0x032a 00810 (pointer_vs_value/code/func.go:114)	MOVQ	CX, (SP)
	0x032e 00814 (pointer_vs_value/code/func.go:114)	CALL	AX
	0x0330 00816 (pointer_vs_value/code/func.go:114)	MOVQ	8(SP), AX
	0x0335 00821 (pointer_vs_value/code/func.go:114)	MOVQ	AX, ""..autotmp_20+344(SP)
	0x033d 00829 (pointer_vs_value/code/func.go:114)	MOVQ	"".o+448(SP), AX
	0x0345 00837 (pointer_vs_value/code/func.go:114)	TESTB	AL, (AX)
	0x0347 00839 (pointer_vs_value/code/func.go:114)	MOVQ	312(AX), AX
	0x034e 00846 (pointer_vs_value/code/func.go:114)	PCDATA	$0, $1
	0x034e 00846 (pointer_vs_value/code/func.go:114)	MOVQ	"".o+456(SP), CX
	0x0356 00854 (pointer_vs_value/code/func.go:114)	PCDATA	$0, $0
	0x0356 00854 (pointer_vs_value/code/func.go:114)	MOVQ	CX, (SP)
	0x035a 00858 (pointer_vs_value/code/func.go:114)	CALL	AX
	0x035c 00860 (pointer_vs_value/code/func.go:114)	MOVQ	8(SP), AX
	0x0361 00865 (pointer_vs_value/code/func.go:114)	MOVQ	AX, ""..autotmp_21+336(SP)
	0x0369 00873 (pointer_vs_value/code/func.go:114)	MOVQ	"".o+448(SP), AX
	0x0371 00881 (pointer_vs_value/code/func.go:114)	TESTB	AL, (AX)
	0x0373 00883 (pointer_vs_value/code/func.go:114)	MOVQ	328(AX), AX
	0x037a 00890 (pointer_vs_value/code/func.go:114)	PCDATA	$0, $1
	0x037a 00890 (pointer_vs_value/code/func.go:114)	MOVQ	"".o+456(SP), CX
	0x0382 00898 (pointer_vs_value/code/func.go:114)	PCDATA	$0, $0
	0x0382 00898 (pointer_vs_value/code/func.go:114)	MOVQ	CX, (SP)
	0x0386 00902 (pointer_vs_value/code/func.go:114)	CALL	AX
	0x0388 00904 (pointer_vs_value/code/func.go:114)	MOVQ	8(SP), AX
	0x038d 00909 (pointer_vs_value/code/func.go:114)	MOVQ	AX, ""..autotmp_22+328(SP)
	0x0395 00917 (pointer_vs_value/code/func.go:114)	MOVQ	"".o+448(SP), AX
	0x039d 00925 (pointer_vs_value/code/func.go:114)	TESTB	AL, (AX)
	0x039f 00927 (pointer_vs_value/code/func.go:114)	MOVQ	344(AX), AX
	0x03a6 00934 (pointer_vs_value/code/func.go:114)	PCDATA	$0, $1
	0x03a6 00934 (pointer_vs_value/code/func.go:114)	MOVQ	"".o+456(SP), CX
	0x03ae 00942 (pointer_vs_value/code/func.go:114)	PCDATA	$0, $0
	0x03ae 00942 (pointer_vs_value/code/func.go:114)	MOVQ	CX, (SP)
	0x03b2 00946 (pointer_vs_value/code/func.go:114)	CALL	AX
	0x03b4 00948 (pointer_vs_value/code/func.go:114)	MOVQ	8(SP), AX
	0x03b9 00953 (pointer_vs_value/code/func.go:114)	MOVQ	AX, ""..autotmp_23+320(SP)
	0x03c1 00961 (pointer_vs_value/code/func.go:114)	MOVQ	"".o+448(SP), AX
	0x03c9 00969 (pointer_vs_value/code/func.go:114)	TESTB	AL, (AX)
	0x03cb 00971 (pointer_vs_value/code/func.go:114)	MOVQ	360(AX), AX
	0x03d2 00978 (pointer_vs_value/code/func.go:114)	PCDATA	$0, $1
	0x03d2 00978 (pointer_vs_value/code/func.go:114)	MOVQ	"".o+456(SP), CX
	0x03da 00986 (pointer_vs_value/code/func.go:114)	PCDATA	$0, $0
	0x03da 00986 (pointer_vs_value/code/func.go:114)	MOVQ	CX, (SP)
	0x03de 00990 (pointer_vs_value/code/func.go:114)	CALL	AX
	0x03e0 00992 (pointer_vs_value/code/func.go:114)	MOVQ	8(SP), AX
	0x03e5 00997 (pointer_vs_value/code/func.go:114)	MOVQ	AX, ""..autotmp_24+312(SP)
	0x03ed 01005 (pointer_vs_value/code/func.go:114)	MOVQ	"".o+448(SP), AX
	0x03f5 01013 (pointer_vs_value/code/func.go:114)	TESTB	AL, (AX)
	0x03f7 01015 (pointer_vs_value/code/func.go:114)	MOVQ	408(AX), AX
	0x03fe 01022 (pointer_vs_value/code/func.go:114)	PCDATA	$0, $1
	0x03fe 01022 (pointer_vs_value/code/func.go:114)	MOVQ	"".o+456(SP), CX
	0x0406 01030 (pointer_vs_value/code/func.go:114)	PCDATA	$0, $0
	0x0406 01030 (pointer_vs_value/code/func.go:114)	MOVQ	CX, (SP)
	0x040a 01034 (pointer_vs_value/code/func.go:114)	CALL	AX
	0x040c 01036 (pointer_vs_value/code/func.go:114)	MOVQ	8(SP), AX
	0x0411 01041 (pointer_vs_value/code/func.go:114)	MOVQ	AX, ""..autotmp_25+304(SP)
	0x0419 01049 (pointer_vs_value/code/func.go:114)	MOVQ	"".o+448(SP), AX
	0x0421 01057 (pointer_vs_value/code/func.go:114)	TESTB	AL, (AX)
	0x0423 01059 (pointer_vs_value/code/func.go:114)	MOVQ	392(AX), AX
	0x042a 01066 (pointer_vs_value/code/func.go:114)	PCDATA	$0, $1
	0x042a 01066 (pointer_vs_value/code/func.go:114)	MOVQ	"".o+456(SP), CX
	0x0432 01074 (pointer_vs_value/code/func.go:114)	PCDATA	$0, $0
	0x0432 01074 (pointer_vs_value/code/func.go:114)	MOVQ	CX, (SP)
	0x0436 01078 (pointer_vs_value/code/func.go:114)	CALL	AX
	0x0438 01080 (pointer_vs_value/code/func.go:114)	MOVQ	8(SP), AX
	0x043d 01085 (pointer_vs_value/code/func.go:114)	MOVQ	AX, ""..autotmp_26+296(SP)
	0x0445 01093 (pointer_vs_value/code/func.go:114)	MOVQ	"".o+448(SP), AX
	0x044d 01101 (pointer_vs_value/code/func.go:114)	TESTB	AL, (AX)
	0x044f 01103 (pointer_vs_value/code/func.go:114)	MOVQ	376(AX), AX
	0x0456 01110 (pointer_vs_value/code/func.go:114)	PCDATA	$0, $1
	0x0456 01110 (pointer_vs_value/code/func.go:114)	MOVQ	"".o+456(SP), CX
	0x045e 01118 (pointer_vs_value/code/func.go:114)	PCDATA	$0, $0
	0x045e 01118 (pointer_vs_value/code/func.go:114)	MOVQ	CX, (SP)
	0x0462 01122 (pointer_vs_value/code/func.go:114)	CALL	AX
	0x0464 01124 (pointer_vs_value/code/func.go:114)	MOVQ	8(SP), AX
	0x0469 01129 (pointer_vs_value/code/func.go:114)	MOVQ	AX, ""..autotmp_27+288(SP)
	0x0471 01137 (pointer_vs_value/code/func.go:114)	MOVQ	"".o+448(SP), AX
	0x0479 01145 (pointer_vs_value/code/func.go:114)	TESTB	AL, (AX)
	0x047b 01147 (pointer_vs_value/code/func.go:114)	MOVQ	424(AX), AX
	0x0482 01154 (pointer_vs_value/code/func.go:114)	PCDATA	$0, $1
	0x0482 01154 (pointer_vs_value/code/func.go:114)	MOVQ	"".o+456(SP), CX
	0x048a 01162 (pointer_vs_value/code/func.go:114)	PCDATA	$0, $0
	0x048a 01162 (pointer_vs_value/code/func.go:114)	MOVQ	CX, (SP)
	0x048e 01166 (pointer_vs_value/code/func.go:114)	CALL	AX
	0x0490 01168 (pointer_vs_value/code/func.go:114)	MOVQ	8(SP), AX
	0x0495 01173 (pointer_vs_value/code/func.go:114)	MOVQ	AX, ""..autotmp_28+280(SP)
	0x049d 01181 (pointer_vs_value/code/func.go:115)	MOVQ	"".o+448(SP), AX
	0x04a5 01189 (pointer_vs_value/code/func.go:115)	TESTB	AL, (AX)
	0x04a7 01191 (pointer_vs_value/code/func.go:115)	MOVQ	32(AX), AX
	0x04ab 01195 (pointer_vs_value/code/func.go:115)	PCDATA	$0, $1
	0x04ab 01195 (pointer_vs_value/code/func.go:115)	MOVQ	"".o+456(SP), CX
	0x04b3 01203 (pointer_vs_value/code/func.go:115)	PCDATA	$0, $0
	0x04b3 01203 (pointer_vs_value/code/func.go:115)	MOVQ	CX, (SP)
	0x04b7 01207 (pointer_vs_value/code/func.go:115)	CALL	AX
	0x04b9 01209 (pointer_vs_value/code/func.go:115)	MOVSD	8(SP), X0
	0x04bf 01215 (pointer_vs_value/code/func.go:115)	MOVSD	X0, ""..autotmp_29+272(SP)
	0x04c8 01224 (pointer_vs_value/code/func.go:115)	MOVQ	"".o+448(SP), AX
	0x04d0 01232 (pointer_vs_value/code/func.go:115)	TESTB	AL, (AX)
	0x04d2 01234 (pointer_vs_value/code/func.go:115)	MOVQ	48(AX), AX
	0x04d6 01238 (pointer_vs_value/code/func.go:115)	PCDATA	$0, $1
	0x04d6 01238 (pointer_vs_value/code/func.go:115)	MOVQ	"".o+456(SP), CX
	0x04de 01246 (pointer_vs_value/code/func.go:115)	PCDATA	$0, $0
	0x04de 01246 (pointer_vs_value/code/func.go:115)	MOVQ	CX, (SP)
	0x04e2 01250 (pointer_vs_value/code/func.go:115)	CALL	AX
	0x04e4 01252 (pointer_vs_value/code/func.go:115)	MOVSD	8(SP), X0
	0x04ea 01258 (pointer_vs_value/code/func.go:115)	MOVSD	X0, ""..autotmp_30+256(SP)
	0x04f3 01267 (pointer_vs_value/code/func.go:115)	MOVQ	"".o+448(SP), AX
	0x04fb 01275 (pointer_vs_value/code/func.go:115)	TESTB	AL, (AX)
	0x04fd 01277 (pointer_vs_value/code/func.go:115)	MOVQ	64(AX), AX
	0x0501 01281 (pointer_vs_value/code/func.go:115)	PCDATA	$0, $1
	0x0501 01281 (pointer_vs_value/code/func.go:115)	MOVQ	"".o+456(SP), CX
	0x0509 01289 (pointer_vs_value/code/func.go:115)	PCDATA	$0, $0
	0x0509 01289 (pointer_vs_value/code/func.go:115)	MOVQ	CX, (SP)
	0x050d 01293 (pointer_vs_value/code/func.go:115)	CALL	AX
	0x050f 01295 (pointer_vs_value/code/func.go:115)	MOVSD	8(SP), X0
	0x0515 01301 (pointer_vs_value/code/func.go:115)	MOVSD	X0, ""..autotmp_31+248(SP)
	0x051e 01310 (pointer_vs_value/code/func.go:115)	MOVQ	"".o+448(SP), AX
	0x0526 01318 (pointer_vs_value/code/func.go:115)	TESTB	AL, (AX)
	0x0528 01320 (pointer_vs_value/code/func.go:115)	MOVQ	80(AX), AX
	0x052c 01324 (pointer_vs_value/code/func.go:115)	PCDATA	$0, $1
	0x052c 01324 (pointer_vs_value/code/func.go:115)	MOVQ	"".o+456(SP), CX
	0x0534 01332 (pointer_vs_value/code/func.go:115)	PCDATA	$0, $0
	0x0534 01332 (pointer_vs_value/code/func.go:115)	MOVQ	CX, (SP)
	0x0538 01336 (pointer_vs_value/code/func.go:115)	CALL	AX
	0x053a 01338 (pointer_vs_value/code/func.go:115)	MOVSD	8(SP), X0
	0x0540 01344 (pointer_vs_value/code/func.go:115)	MOVSD	X0, ""..autotmp_32+240(SP)
	0x0549 01353 (pointer_vs_value/code/func.go:115)	MOVQ	"".o+448(SP), AX
	0x0551 01361 (pointer_vs_value/code/func.go:115)	TESTB	AL, (AX)
	0x0553 01363 (pointer_vs_value/code/func.go:115)	MOVQ	96(AX), AX
	0x0557 01367 (pointer_vs_value/code/func.go:115)	PCDATA	$0, $1
	0x0557 01367 (pointer_vs_value/code/func.go:115)	MOVQ	"".o+456(SP), CX
	0x055f 01375 (pointer_vs_value/code/func.go:115)	PCDATA	$0, $0
	0x055f 01375 (pointer_vs_value/code/func.go:115)	MOVQ	CX, (SP)
	0x0563 01379 (pointer_vs_value/code/func.go:115)	CALL	AX
	0x0565 01381 (pointer_vs_value/code/func.go:115)	MOVSD	8(SP), X0
	0x056b 01387 (pointer_vs_value/code/func.go:115)	MOVSD	X0, ""..autotmp_33+232(SP)
	0x0574 01396 (pointer_vs_value/code/func.go:115)	MOVQ	"".o+448(SP), AX
	0x057c 01404 (pointer_vs_value/code/func.go:115)	TESTB	AL, (AX)
	0x057e 01406 (pointer_vs_value/code/func.go:115)	MOVQ	112(AX), AX
	0x0582 01410 (pointer_vs_value/code/func.go:115)	PCDATA	$0, $1
	0x0582 01410 (pointer_vs_value/code/func.go:115)	MOVQ	"".o+456(SP), CX
	0x058a 01418 (pointer_vs_value/code/func.go:115)	PCDATA	$0, $0
	0x058a 01418 (pointer_vs_value/code/func.go:115)	MOVQ	CX, (SP)
	0x058e 01422 (pointer_vs_value/code/func.go:115)	CALL	AX
	0x0590 01424 (pointer_vs_value/code/func.go:115)	MOVSD	8(SP), X0
	0x0596 01430 (pointer_vs_value/code/func.go:115)	MOVSD	X0, ""..autotmp_34+224(SP)
	0x059f 01439 (pointer_vs_value/code/func.go:115)	MOVQ	"".o+448(SP), AX
	0x05a7 01447 (pointer_vs_value/code/func.go:115)	TESTB	AL, (AX)
	0x05a9 01449 (pointer_vs_value/code/func.go:115)	MOVQ	128(AX), AX
	0x05b0 01456 (pointer_vs_value/code/func.go:115)	PCDATA	$0, $1
	0x05b0 01456 (pointer_vs_value/code/func.go:115)	MOVQ	"".o+456(SP), CX
	0x05b8 01464 (pointer_vs_value/code/func.go:115)	PCDATA	$0, $0
	0x05b8 01464 (pointer_vs_value/code/func.go:115)	MOVQ	CX, (SP)
	0x05bc 01468 (pointer_vs_value/code/func.go:115)	CALL	AX
	0x05be 01470 (pointer_vs_value/code/func.go:115)	MOVSD	8(SP), X0
	0x05c4 01476 (pointer_vs_value/code/func.go:115)	MOVSD	X0, ""..autotmp_35+216(SP)
	0x05cd 01485 (pointer_vs_value/code/func.go:115)	MOVQ	"".o+448(SP), AX
	0x05d5 01493 (pointer_vs_value/code/func.go:115)	TESTB	AL, (AX)
	0x05d7 01495 (pointer_vs_value/code/func.go:115)	MOVQ	144(AX), AX
	0x05de 01502 (pointer_vs_value/code/func.go:115)	PCDATA	$0, $1
	0x05de 01502 (pointer_vs_value/code/func.go:115)	MOVQ	"".o+456(SP), CX
	0x05e6 01510 (pointer_vs_value/code/func.go:115)	PCDATA	$0, $0
	0x05e6 01510 (pointer_vs_value/code/func.go:115)	MOVQ	CX, (SP)
	0x05ea 01514 (pointer_vs_value/code/func.go:115)	CALL	AX
	0x05ec 01516 (pointer_vs_value/code/func.go:115)	MOVSD	8(SP), X0
	0x05f2 01522 (pointer_vs_value/code/func.go:115)	MOVSD	X0, ""..autotmp_36+208(SP)
	0x05fb 01531 (pointer_vs_value/code/func.go:115)	MOVQ	"".o+448(SP), AX
	0x0603 01539 (pointer_vs_value/code/func.go:115)	TESTB	AL, (AX)
	0x0605 01541 (pointer_vs_value/code/func.go:115)	MOVQ	160(AX), AX
	0x060c 01548 (pointer_vs_value/code/func.go:115)	PCDATA	$0, $1
	0x060c 01548 (pointer_vs_value/code/func.go:115)	MOVQ	"".o+456(SP), CX
	0x0614 01556 (pointer_vs_value/code/func.go:115)	PCDATA	$0, $0
	0x0614 01556 (pointer_vs_value/code/func.go:115)	MOVQ	CX, (SP)
	0x0618 01560 (pointer_vs_value/code/func.go:115)	CALL	AX
	0x061a 01562 (pointer_vs_value/code/func.go:115)	MOVSD	8(SP), X0
	0x0620 01568 (pointer_vs_value/code/func.go:115)	MOVSD	X0, ""..autotmp_37+200(SP)
	0x0629 01577 (pointer_vs_value/code/func.go:116)	MOVQ	"".o+448(SP), AX
	0x0631 01585 (pointer_vs_value/code/func.go:116)	TESTB	AL, (AX)
	0x0633 01587 (pointer_vs_value/code/func.go:116)	MOVQ	176(AX), AX
	0x063a 01594 (pointer_vs_value/code/func.go:116)	PCDATA	$0, $1
	0x063a 01594 (pointer_vs_value/code/func.go:116)	MOVQ	"".o+456(SP), CX
	0x0642 01602 (pointer_vs_value/code/func.go:116)	PCDATA	$0, $0
	0x0642 01602 (pointer_vs_value/code/func.go:116)	MOVQ	CX, (SP)
	0x0646 01606 (pointer_vs_value/code/func.go:116)	CALL	AX
	0x0648 01608 (pointer_vs_value/code/func.go:116)	MOVSD	8(SP), X0
	0x064e 01614 (pointer_vs_value/code/func.go:116)	MOVSD	X0, ""..autotmp_38+192(SP)
	0x0657 01623 (pointer_vs_value/code/func.go:116)	MOVQ	"".o+448(SP), AX
	0x065f 01631 (pointer_vs_value/code/func.go:116)	TESTB	AL, (AX)
	0x0661 01633 (pointer_vs_value/code/func.go:116)	MOVQ	192(AX), AX
	0x0668 01640 (pointer_vs_value/code/func.go:116)	PCDATA	$0, $1
	0x0668 01640 (pointer_vs_value/code/func.go:116)	MOVQ	"".o+456(SP), CX
	0x0670 01648 (pointer_vs_value/code/func.go:116)	PCDATA	$0, $0
	0x0670 01648 (pointer_vs_value/code/func.go:116)	MOVQ	CX, (SP)
	0x0674 01652 (pointer_vs_value/code/func.go:116)	CALL	AX
	0x0676 01654 (pointer_vs_value/code/func.go:116)	MOVSD	8(SP), X0
	0x067c 01660 (pointer_vs_value/code/func.go:116)	MOVSD	X0, ""..autotmp_39+184(SP)
	0x0685 01669 (pointer_vs_value/code/func.go:116)	MOVQ	"".o+448(SP), AX
	0x068d 01677 (pointer_vs_value/code/func.go:116)	TESTB	AL, (AX)
	0x068f 01679 (pointer_vs_value/code/func.go:116)	MOVQ	208(AX), AX
	0x0696 01686 (pointer_vs_value/code/func.go:116)	PCDATA	$0, $1
	0x0696 01686 (pointer_vs_value/code/func.go:116)	MOVQ	"".o+456(SP), CX
	0x069e 01694 (pointer_vs_value/code/func.go:116)	PCDATA	$0, $0
	0x069e 01694 (pointer_vs_value/code/func.go:116)	MOVQ	CX, (SP)
	0x06a2 01698 (pointer_vs_value/code/func.go:116)	CALL	AX
	0x06a4 01700 (pointer_vs_value/code/func.go:116)	MOVSD	8(SP), X0
	0x06aa 01706 (pointer_vs_value/code/func.go:116)	MOVSD	X0, ""..autotmp_40+168(SP)
	0x06b3 01715 (pointer_vs_value/code/func.go:116)	MOVQ	"".o+448(SP), AX
	0x06bb 01723 (pointer_vs_value/code/func.go:116)	TESTB	AL, (AX)
	0x06bd 01725 (pointer_vs_value/code/func.go:116)	MOVQ	224(AX), AX
	0x06c4 01732 (pointer_vs_value/code/func.go:116)	PCDATA	$0, $1
	0x06c4 01732 (pointer_vs_value/code/func.go:116)	MOVQ	"".o+456(SP), CX
	0x06cc 01740 (pointer_vs_value/code/func.go:116)	PCDATA	$0, $0
	0x06cc 01740 (pointer_vs_value/code/func.go:116)	MOVQ	CX, (SP)
	0x06d0 01744 (pointer_vs_value/code/func.go:116)	CALL	AX
	0x06d2 01746 (pointer_vs_value/code/func.go:116)	MOVSD	8(SP), X0
	0x06d8 01752 (pointer_vs_value/code/func.go:116)	MOVSD	X0, ""..autotmp_41+160(SP)
	0x06e1 01761 (pointer_vs_value/code/func.go:116)	MOVQ	"".o+448(SP), AX
	0x06e9 01769 (pointer_vs_value/code/func.go:116)	TESTB	AL, (AX)
	0x06eb 01771 (pointer_vs_value/code/func.go:116)	MOVQ	240(AX), AX
	0x06f2 01778 (pointer_vs_value/code/func.go:116)	PCDATA	$0, $1
	0x06f2 01778 (pointer_vs_value/code/func.go:116)	MOVQ	"".o+456(SP), CX
	0x06fa 01786 (pointer_vs_value/code/func.go:116)	PCDATA	$0, $0
	0x06fa 01786 (pointer_vs_value/code/func.go:116)	MOVQ	CX, (SP)
	0x06fe 01790 (pointer_vs_value/code/func.go:116)	CALL	AX
	0x0700 01792 (pointer_vs_value/code/func.go:116)	MOVSD	8(SP), X0
	0x0706 01798 (pointer_vs_value/code/func.go:116)	MOVSD	X0, ""..autotmp_42+152(SP)
	0x070f 01807 (pointer_vs_value/code/func.go:116)	MOVQ	"".o+448(SP), AX
	0x0717 01815 (pointer_vs_value/code/func.go:116)	TESTB	AL, (AX)
	0x0719 01817 (pointer_vs_value/code/func.go:116)	MOVQ	256(AX), AX
	0x0720 01824 (pointer_vs_value/code/func.go:116)	PCDATA	$0, $1
	0x0720 01824 (pointer_vs_value/code/func.go:116)	MOVQ	"".o+456(SP), CX
	0x0728 01832 (pointer_vs_value/code/func.go:116)	PCDATA	$0, $0
	0x0728 01832 (pointer_vs_value/code/func.go:116)	MOVQ	CX, (SP)
	0x072c 01836 (pointer_vs_value/code/func.go:116)	CALL	AX
	0x072e 01838 (pointer_vs_value/code/func.go:116)	MOVSD	8(SP), X0
	0x0734 01844 (pointer_vs_value/code/func.go:116)	MOVSD	X0, ""..autotmp_43+144(SP)
	0x073d 01853 (pointer_vs_value/code/func.go:116)	MOVQ	"".o+448(SP), AX
	0x0745 01861 (pointer_vs_value/code/func.go:116)	TESTB	AL, (AX)
	0x0747 01863 (pointer_vs_value/code/func.go:116)	MOVQ	272(AX), AX
	0x074e 01870 (pointer_vs_value/code/func.go:116)	PCDATA	$0, $1
	0x074e 01870 (pointer_vs_value/code/func.go:116)	MOVQ	"".o+456(SP), CX
	0x0756 01878 (pointer_vs_value/code/func.go:116)	PCDATA	$0, $0
	0x0756 01878 (pointer_vs_value/code/func.go:116)	MOVQ	CX, (SP)
	0x075a 01882 (pointer_vs_value/code/func.go:116)	CALL	AX
	0x075c 01884 (pointer_vs_value/code/func.go:116)	MOVSD	8(SP), X0
	0x0762 01890 (pointer_vs_value/code/func.go:116)	MOVSD	X0, ""..autotmp_44+136(SP)
	0x076b 01899 (pointer_vs_value/code/func.go:116)	MOVQ	"".o+448(SP), AX
	0x0773 01907 (pointer_vs_value/code/func.go:116)	TESTB	AL, (AX)
	0x0775 01909 (pointer_vs_value/code/func.go:116)	MOVQ	288(AX), AX
	0x077c 01916 (pointer_vs_value/code/func.go:116)	PCDATA	$0, $1
	0x077c 01916 (pointer_vs_value/code/func.go:116)	MOVQ	"".o+456(SP), CX
	0x0784 01924 (pointer_vs_value/code/func.go:116)	PCDATA	$0, $0
	0x0784 01924 (pointer_vs_value/code/func.go:116)	MOVQ	CX, (SP)
	0x0788 01928 (pointer_vs_value/code/func.go:116)	CALL	AX
	0x078a 01930 (pointer_vs_value/code/func.go:116)	MOVSD	8(SP), X0
	0x0790 01936 (pointer_vs_value/code/func.go:116)	MOVSD	X0, ""..autotmp_45+128(SP)
	0x0799 01945 (pointer_vs_value/code/func.go:117)	MOVQ	"".o+448(SP), AX
	0x07a1 01953 (pointer_vs_value/code/func.go:117)	TESTB	AL, (AX)
	0x07a3 01955 (pointer_vs_value/code/func.go:117)	MOVQ	304(AX), AX
	0x07aa 01962 (pointer_vs_value/code/func.go:117)	PCDATA	$0, $1
	0x07aa 01962 (pointer_vs_value/code/func.go:117)	MOVQ	"".o+456(SP), CX
	0x07b2 01970 (pointer_vs_value/code/func.go:117)	PCDATA	$0, $0
	0x07b2 01970 (pointer_vs_value/code/func.go:117)	MOVQ	CX, (SP)
	0x07b6 01974 (pointer_vs_value/code/func.go:117)	CALL	AX
	0x07b8 01976 (pointer_vs_value/code/func.go:117)	MOVSD	8(SP), X0
	0x07be 01982 (pointer_vs_value/code/func.go:117)	MOVSD	X0, ""..autotmp_46+120(SP)
	0x07c4 01988 (pointer_vs_value/code/func.go:117)	MOVQ	"".o+448(SP), AX
	0x07cc 01996 (pointer_vs_value/code/func.go:117)	TESTB	AL, (AX)
	0x07ce 01998 (pointer_vs_value/code/func.go:117)	MOVQ	320(AX), AX
	0x07d5 02005 (pointer_vs_value/code/func.go:117)	PCDATA	$0, $1
	0x07d5 02005 (pointer_vs_value/code/func.go:117)	MOVQ	"".o+456(SP), CX
	0x07dd 02013 (pointer_vs_value/code/func.go:117)	PCDATA	$0, $0
	0x07dd 02013 (pointer_vs_value/code/func.go:117)	MOVQ	CX, (SP)
	0x07e1 02017 (pointer_vs_value/code/func.go:117)	CALL	AX
	0x07e3 02019 (pointer_vs_value/code/func.go:117)	MOVSD	8(SP), X0
	0x07e9 02025 (pointer_vs_value/code/func.go:117)	MOVSD	X0, ""..autotmp_47+112(SP)
	0x07ef 02031 (pointer_vs_value/code/func.go:117)	MOVQ	"".o+448(SP), AX
	0x07f7 02039 (pointer_vs_value/code/func.go:117)	TESTB	AL, (AX)
	0x07f9 02041 (pointer_vs_value/code/func.go:117)	MOVQ	336(AX), AX
	0x0800 02048 (pointer_vs_value/code/func.go:117)	PCDATA	$0, $1
	0x0800 02048 (pointer_vs_value/code/func.go:117)	MOVQ	"".o+456(SP), CX
	0x0808 02056 (pointer_vs_value/code/func.go:117)	PCDATA	$0, $0
	0x0808 02056 (pointer_vs_value/code/func.go:117)	MOVQ	CX, (SP)
	0x080c 02060 (pointer_vs_value/code/func.go:117)	CALL	AX
	0x080e 02062 (pointer_vs_value/code/func.go:117)	MOVSD	8(SP), X0
	0x0814 02068 (pointer_vs_value/code/func.go:117)	MOVSD	X0, ""..autotmp_48+104(SP)
	0x081a 02074 (pointer_vs_value/code/func.go:117)	MOVQ	"".o+448(SP), AX
	0x0822 02082 (pointer_vs_value/code/func.go:117)	TESTB	AL, (AX)
	0x0824 02084 (pointer_vs_value/code/func.go:117)	MOVQ	352(AX), AX
	0x082b 02091 (pointer_vs_value/code/func.go:117)	PCDATA	$0, $1
	0x082b 02091 (pointer_vs_value/code/func.go:117)	MOVQ	"".o+456(SP), CX
	0x0833 02099 (pointer_vs_value/code/func.go:117)	PCDATA	$0, $0
	0x0833 02099 (pointer_vs_value/code/func.go:117)	MOVQ	CX, (SP)
	0x0837 02103 (pointer_vs_value/code/func.go:117)	CALL	AX
	0x0839 02105 (pointer_vs_value/code/func.go:117)	MOVSD	8(SP), X0
	0x083f 02111 (pointer_vs_value/code/func.go:117)	MOVSD	X0, ""..autotmp_49+96(SP)
	0x0845 02117 (pointer_vs_value/code/func.go:117)	MOVQ	"".o+448(SP), AX
	0x084d 02125 (pointer_vs_value/code/func.go:117)	TESTB	AL, (AX)
	0x084f 02127 (pointer_vs_value/code/func.go:117)	MOVQ	368(AX), AX
	0x0856 02134 (pointer_vs_value/code/func.go:117)	PCDATA	$0, $1
	0x0856 02134 (pointer_vs_value/code/func.go:117)	MOVQ	"".o+456(SP), CX
	0x085e 02142 (pointer_vs_value/code/func.go:117)	PCDATA	$0, $0
	0x085e 02142 (pointer_vs_value/code/func.go:117)	MOVQ	CX, (SP)
	0x0862 02146 (pointer_vs_value/code/func.go:117)	CALL	AX
	0x0864 02148 (pointer_vs_value/code/func.go:117)	MOVSD	8(SP), X0
	0x086a 02154 (pointer_vs_value/code/func.go:117)	MOVSD	X0, ""..autotmp_50+80(SP)
	0x0870 02160 (pointer_vs_value/code/func.go:117)	MOVQ	"".o+448(SP), AX
	0x0878 02168 (pointer_vs_value/code/func.go:117)	TESTB	AL, (AX)
	0x087a 02170 (pointer_vs_value/code/func.go:117)	MOVQ	416(AX), AX
	0x0881 02177 (pointer_vs_value/code/func.go:117)	PCDATA	$0, $1
	0x0881 02177 (pointer_vs_value/code/func.go:117)	MOVQ	"".o+456(SP), CX
	0x0889 02185 (pointer_vs_value/code/func.go:117)	PCDATA	$0, $0
	0x0889 02185 (pointer_vs_value/code/func.go:117)	MOVQ	CX, (SP)
	0x088d 02189 (pointer_vs_value/code/func.go:117)	CALL	AX
	0x088f 02191 (pointer_vs_value/code/func.go:117)	MOVSD	8(SP), X0
	0x0895 02197 (pointer_vs_value/code/func.go:117)	MOVSD	X0, ""..autotmp_51+72(SP)
	0x089b 02203 (pointer_vs_value/code/func.go:117)	MOVQ	"".o+448(SP), AX
	0x08a3 02211 (pointer_vs_value/code/func.go:117)	TESTB	AL, (AX)
	0x08a5 02213 (pointer_vs_value/code/func.go:117)	MOVQ	400(AX), AX
	0x08ac 02220 (pointer_vs_value/code/func.go:117)	PCDATA	$0, $1
	0x08ac 02220 (pointer_vs_value/code/func.go:117)	MOVQ	"".o+456(SP), CX
	0x08b4 02228 (pointer_vs_value/code/func.go:117)	PCDATA	$0, $0
	0x08b4 02228 (pointer_vs_value/code/func.go:117)	MOVQ	CX, (SP)
	0x08b8 02232 (pointer_vs_value/code/func.go:117)	CALL	AX
	0x08ba 02234 (pointer_vs_value/code/func.go:117)	MOVSD	8(SP), X0
	0x08c0 02240 (pointer_vs_value/code/func.go:117)	MOVSD	X0, ""..autotmp_52+64(SP)
	0x08c6 02246 (pointer_vs_value/code/func.go:117)	MOVQ	"".o+448(SP), AX
	0x08ce 02254 (pointer_vs_value/code/func.go:117)	TESTB	AL, (AX)
	0x08d0 02256 (pointer_vs_value/code/func.go:117)	MOVQ	384(AX), AX
	0x08d7 02263 (pointer_vs_value/code/func.go:117)	PCDATA	$0, $1
	0x08d7 02263 (pointer_vs_value/code/func.go:117)	MOVQ	"".o+456(SP), CX
	0x08df 02271 (pointer_vs_value/code/func.go:117)	PCDATA	$0, $0
	0x08df 02271 (pointer_vs_value/code/func.go:117)	MOVQ	CX, (SP)
	0x08e3 02275 (pointer_vs_value/code/func.go:117)	CALL	AX
	0x08e5 02277 (pointer_vs_value/code/func.go:117)	MOVSD	8(SP), X0
	0x08eb 02283 (pointer_vs_value/code/func.go:117)	MOVSD	X0, ""..autotmp_53+56(SP)
	0x08f1 02289 (pointer_vs_value/code/func.go:117)	MOVQ	"".o+448(SP), AX
	0x08f9 02297 (pointer_vs_value/code/func.go:117)	TESTB	AL, (AX)
	0x08fb 02299 (pointer_vs_value/code/func.go:117)	MOVQ	432(AX), AX
	0x0902 02306 (pointer_vs_value/code/func.go:117)	PCDATA	$0, $1
	0x0902 02306 (pointer_vs_value/code/func.go:117)	PCDATA	$1, $1
	0x0902 02306 (pointer_vs_value/code/func.go:117)	MOVQ	"".o+456(SP), CX
	0x090a 02314 (pointer_vs_value/code/func.go:117)	PCDATA	$0, $0
	0x090a 02314 (pointer_vs_value/code/func.go:117)	MOVQ	CX, (SP)
	0x090e 02318 (pointer_vs_value/code/func.go:117)	CALL	AX
	0x0910 02320 (pointer_vs_value/code/func.go:117)	MOVSD	8(SP), X0
	0x0916 02326 (pointer_vs_value/code/func.go:117)	MOVSD	X0, ""..autotmp_54+48(SP)
	0x091c 02332 (pointer_vs_value/code/func.go:112)	MOVQ	""..autotmp_3+264(SP), AX
	0x0924 02340 (pointer_vs_value/code/func.go:112)	ADDQ	""..autotmp_4+176(SP), AX
	0x092c 02348 (pointer_vs_value/code/func.go:112)	ADDQ	""..autotmp_5+88(SP), AX
	0x0931 02353 (pointer_vs_value/code/func.go:112)	ADDQ	""..autotmp_6+40(SP), AX
	0x0936 02358 (pointer_vs_value/code/func.go:112)	ADDQ	""..autotmp_7+32(SP), AX
	0x093b 02363 (pointer_vs_value/code/func.go:112)	ADDQ	""..autotmp_8+24(SP), AX
	0x0940 02368 (pointer_vs_value/code/func.go:112)	ADDQ	""..autotmp_9+16(SP), AX
	0x0945 02373 (pointer_vs_value/code/func.go:112)	ADDQ	""..autotmp_10+424(SP), AX
	0x094d 02381 (pointer_vs_value/code/func.go:112)	ADDQ	""..autotmp_11+416(SP), AX
	0x0955 02389 (pointer_vs_value/code/func.go:112)	ADDQ	""..autotmp_12+408(SP), AX
	0x095d 02397 (pointer_vs_value/code/func.go:113)	ADDQ	""..autotmp_13+400(SP), AX
	0x0965 02405 (pointer_vs_value/code/func.go:113)	ADDQ	""..autotmp_14+392(SP), AX
	0x096d 02413 (pointer_vs_value/code/func.go:113)	ADDQ	""..autotmp_15+384(SP), AX
	0x0975 02421 (pointer_vs_value/code/func.go:113)	ADDQ	""..autotmp_16+376(SP), AX
	0x097d 02429 (pointer_vs_value/code/func.go:113)	ADDQ	""..autotmp_17+368(SP), AX
	0x0985 02437 (pointer_vs_value/code/func.go:113)	ADDQ	""..autotmp_18+360(SP), AX
	0x098d 02445 (pointer_vs_value/code/func.go:113)	ADDQ	""..autotmp_19+352(SP), AX
	0x0995 02453 (pointer_vs_value/code/func.go:113)	ADDQ	""..autotmp_20+344(SP), AX
	0x099d 02461 (pointer_vs_value/code/func.go:114)	ADDQ	""..autotmp_21+336(SP), AX
	0x09a5 02469 (pointer_vs_value/code/func.go:114)	ADDQ	""..autotmp_22+328(SP), AX
	0x09ad 02477 (pointer_vs_value/code/func.go:114)	ADDQ	""..autotmp_23+320(SP), AX
	0x09b5 02485 (pointer_vs_value/code/func.go:114)	ADDQ	""..autotmp_24+312(SP), AX
	0x09bd 02493 (pointer_vs_value/code/func.go:114)	ADDQ	""..autotmp_25+304(SP), AX
	0x09c5 02501 (pointer_vs_value/code/func.go:114)	ADDQ	""..autotmp_26+296(SP), AX
	0x09cd 02509 (pointer_vs_value/code/func.go:114)	ADDQ	""..autotmp_27+288(SP), AX
	0x09d5 02517 (pointer_vs_value/code/func.go:114)	ADDQ	""..autotmp_28+280(SP), AX
	0x09dd 02525 (pointer_vs_value/code/func.go:115)	MOVSD	""..autotmp_29+272(SP), X1
	0x09e6 02534 (pointer_vs_value/code/func.go:115)	ADDSD	""..autotmp_30+256(SP), X1
	0x09ef 02543 (pointer_vs_value/code/func.go:115)	ADDSD	""..autotmp_31+248(SP), X1
	0x09f8 02552 (pointer_vs_value/code/func.go:115)	ADDSD	""..autotmp_32+240(SP), X1
	0x0a01 02561 (pointer_vs_value/code/func.go:115)	ADDSD	""..autotmp_33+232(SP), X1
	0x0a0a 02570 (pointer_vs_value/code/func.go:115)	ADDSD	""..autotmp_34+224(SP), X1
	0x0a13 02579 (pointer_vs_value/code/func.go:115)	ADDSD	""..autotmp_35+216(SP), X1
	0x0a1c 02588 (pointer_vs_value/code/func.go:115)	ADDSD	""..autotmp_36+208(SP), X1
	0x0a25 02597 (pointer_vs_value/code/func.go:115)	ADDSD	""..autotmp_37+200(SP), X1
	0x0a2e 02606 (pointer_vs_value/code/func.go:115)	ADDSD	""..autotmp_38+192(SP), X1
	0x0a37 02615 (pointer_vs_value/code/func.go:116)	ADDSD	""..autotmp_39+184(SP), X1
	0x0a40 02624 (pointer_vs_value/code/func.go:116)	ADDSD	""..autotmp_40+168(SP), X1
	0x0a49 02633 (pointer_vs_value/code/func.go:116)	ADDSD	""..autotmp_41+160(SP), X1
	0x0a52 02642 (pointer_vs_value/code/func.go:116)	ADDSD	""..autotmp_42+152(SP), X1
	0x0a5b 02651 (pointer_vs_value/code/func.go:116)	ADDSD	""..autotmp_43+144(SP), X1
	0x0a64 02660 (pointer_vs_value/code/func.go:116)	ADDSD	""..autotmp_44+136(SP), X1
	0x0a6d 02669 (pointer_vs_value/code/func.go:116)	ADDSD	""..autotmp_45+128(SP), X1
	0x0a76 02678 (pointer_vs_value/code/func.go:116)	ADDSD	""..autotmp_46+120(SP), X1
	0x0a7c 02684 (pointer_vs_value/code/func.go:117)	ADDSD	""..autotmp_47+112(SP), X1
	0x0a82 02690 (pointer_vs_value/code/func.go:117)	ADDSD	""..autotmp_48+104(SP), X1
	0x0a88 02696 (pointer_vs_value/code/func.go:117)	ADDSD	""..autotmp_49+96(SP), X1
	0x0a8e 02702 (pointer_vs_value/code/func.go:117)	ADDSD	""..autotmp_50+80(SP), X1
	0x0a94 02708 (pointer_vs_value/code/func.go:117)	ADDSD	""..autotmp_51+72(SP), X1
	0x0a9a 02714 (pointer_vs_value/code/func.go:117)	ADDSD	""..autotmp_52+64(SP), X1
	0x0aa0 02720 (pointer_vs_value/code/func.go:117)	ADDSD	""..autotmp_53+56(SP), X1
	0x0aa6 02726 (pointer_vs_value/code/func.go:111)	XORPS	X2, X2
	0x0aa9 02729 (pointer_vs_value/code/func.go:111)	CVTSQ2SD	AX, X2
	0x0aae 02734 (pointer_vs_value/code/func.go:117)	ADDSD	X0, X1
	0x0ab2 02738 (pointer_vs_value/code/func.go:114)	DIVSD	X1, X2
	0x0ab6 02742 (pointer_vs_value/code/func.go:111)	MOVSD	X2, "".~r1+464(SP)
	0x0abf 02751 (pointer_vs_value/code/func.go:111)	PCDATA	$1, $2
	0x0abf 02751 (pointer_vs_value/code/func.go:111)	XORPS	X0, X0
	0x0ac2 02754 (pointer_vs_value/code/func.go:111)	MOVUPS	X0, "".~r2+472(SP)
	0x0aca 02762 (pointer_vs_value/code/func.go:111)	MOVQ	432(SP), BP
	0x0ad2 02770 (pointer_vs_value/code/func.go:111)	ADDQ	$440, SP
	0x0ad9 02777 (pointer_vs_value/code/func.go:111)	RET
	0x0ada 02778 (pointer_vs_value/code/func.go:111)	NOP
	0x0ada 02778 (pointer_vs_value/code/func.go:109)	PCDATA	$1, $-1
	0x0ada 02778 (pointer_vs_value/code/func.go:109)	PCDATA	$0, $-1
	0x0ada 02778 (pointer_vs_value/code/func.go:109)	CALL	runtime.morestack_noctxt(SB)
	0x0adf 02783 (pointer_vs_value/code/func.go:109)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 c8 fe ff  eH..%....H..$...
	0x0010 ff 48 3b 41 10 0f 86 bf 0a 00 00 48 81 ec b8 01  .H;A.......H....
	0x0020 00 00 48 89 ac 24 b0 01 00 00 48 8d ac 24 b0 01  ..H..$....H..$..
	0x0030 00 00 0f 57 c0 f2 0f 11 84 24 d0 01 00 00 0f 57  ...W.....$.....W
	0x0040 c0 0f 11 84 24 d8 01 00 00 48 8b 84 24 c0 01 00  ....$....H..$...
	0x0050 00 84 00 48 8b 40 18 48 8b 8c 24 c8 01 00 00 48  ...H.@.H..$....H
	0x0060 89 0c 24 ff d0 48 8b 44 24 08 48 89 84 24 08 01  ..$..H.D$.H..$..
	0x0070 00 00 48 8b 84 24 c0 01 00 00 84 00 48 8b 40 28  ..H..$......H.@(
	0x0080 48 8b 8c 24 c8 01 00 00 48 89 0c 24 ff d0 48 8b  H..$....H..$..H.
	0x0090 44 24 08 48 89 84 24 b0 00 00 00 48 8b 84 24 c0  D$.H..$....H..$.
	0x00a0 01 00 00 84 00 48 8b 40 38 48 8b 8c 24 c8 01 00  .....H.@8H..$...
	0x00b0 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89 44 24  .H..$..H.D$.H.D$
	0x00c0 58 48 8b 84 24 c0 01 00 00 84 00 48 8b 40 48 48  XH..$......H.@HH
	0x00d0 8b 8c 24 c8 01 00 00 48 89 0c 24 ff d0 48 8b 44  ..$....H..$..H.D
	0x00e0 24 08 48 89 44 24 28 48 8b 84 24 c0 01 00 00 84  $.H.D$(H..$.....
	0x00f0 00 48 8b 40 58 48 8b 8c 24 c8 01 00 00 48 89 0c  .H.@XH..$....H..
	0x0100 24 ff d0 48 8b 44 24 08 48 89 44 24 20 48 8b 84  $..H.D$.H.D$ H..
	0x0110 24 c0 01 00 00 84 00 48 8b 40 68 48 8b 8c 24 c8  $......H.@hH..$.
	0x0120 01 00 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89  ...H..$..H.D$.H.
	0x0130 44 24 18 48 8b 84 24 c0 01 00 00 84 00 48 8b 40  D$.H..$......H.@
	0x0140 78 48 8b 8c 24 c8 01 00 00 48 89 0c 24 ff d0 48  xH..$....H..$..H
	0x0150 8b 44 24 08 48 89 44 24 10 48 8b 84 24 c0 01 00  .D$.H.D$.H..$...
	0x0160 00 84 00 48 8b 80 88 00 00 00 48 8b 8c 24 c8 01  ...H......H..$..
	0x0170 00 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89 84  ..H..$..H.D$.H..
	0x0180 24 a8 01 00 00 48 8b 84 24 c0 01 00 00 84 00 48  $....H..$......H
	0x0190 8b 80 98 00 00 00 48 8b 8c 24 c8 01 00 00 48 89  ......H..$....H.
	0x01a0 0c 24 ff d0 48 8b 44 24 08 48 89 84 24 a0 01 00  .$..H.D$.H..$...
	0x01b0 00 48 8b 84 24 c0 01 00 00 84 00 48 8b 80 a8 00  .H..$......H....
	0x01c0 00 00 48 8b 8c 24 c8 01 00 00 48 89 0c 24 ff d0  ..H..$....H..$..
	0x01d0 48 8b 44 24 08 48 89 84 24 98 01 00 00 48 8b 84  H.D$.H..$....H..
	0x01e0 24 c0 01 00 00 84 00 48 8b 80 b8 00 00 00 48 8b  $......H......H.
	0x01f0 8c 24 c8 01 00 00 48 89 0c 24 ff d0 48 8b 44 24  .$....H..$..H.D$
	0x0200 08 48 89 84 24 90 01 00 00 48 8b 84 24 c0 01 00  .H..$....H..$...
	0x0210 00 84 00 48 8b 80 c8 00 00 00 48 8b 8c 24 c8 01  ...H......H..$..
	0x0220 00 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89 84  ..H..$..H.D$.H..
	0x0230 24 88 01 00 00 48 8b 84 24 c0 01 00 00 84 00 48  $....H..$......H
	0x0240 8b 80 d8 00 00 00 48 8b 8c 24 c8 01 00 00 48 89  ......H..$....H.
	0x0250 0c 24 ff d0 48 8b 44 24 08 48 89 84 24 80 01 00  .$..H.D$.H..$...
	0x0260 00 48 8b 84 24 c0 01 00 00 84 00 48 8b 80 e8 00  .H..$......H....
	0x0270 00 00 48 8b 8c 24 c8 01 00 00 48 89 0c 24 ff d0  ..H..$....H..$..
	0x0280 48 8b 44 24 08 48 89 84 24 78 01 00 00 48 8b 84  H.D$.H..$x...H..
	0x0290 24 c0 01 00 00 84 00 48 8b 80 f8 00 00 00 48 8b  $......H......H.
	0x02a0 8c 24 c8 01 00 00 48 89 0c 24 ff d0 48 8b 44 24  .$....H..$..H.D$
	0x02b0 08 48 89 84 24 70 01 00 00 48 8b 84 24 c0 01 00  .H..$p...H..$...
	0x02c0 00 84 00 48 8b 80 08 01 00 00 48 8b 8c 24 c8 01  ...H......H..$..
	0x02d0 00 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89 84  ..H..$..H.D$.H..
	0x02e0 24 68 01 00 00 48 8b 84 24 c0 01 00 00 84 00 48  $h...H..$......H
	0x02f0 8b 80 18 01 00 00 48 8b 8c 24 c8 01 00 00 48 89  ......H..$....H.
	0x0300 0c 24 ff d0 48 8b 44 24 08 48 89 84 24 60 01 00  .$..H.D$.H..$`..
	0x0310 00 48 8b 84 24 c0 01 00 00 84 00 48 8b 80 28 01  .H..$......H..(.
	0x0320 00 00 48 8b 8c 24 c8 01 00 00 48 89 0c 24 ff d0  ..H..$....H..$..
	0x0330 48 8b 44 24 08 48 89 84 24 58 01 00 00 48 8b 84  H.D$.H..$X...H..
	0x0340 24 c0 01 00 00 84 00 48 8b 80 38 01 00 00 48 8b  $......H..8...H.
	0x0350 8c 24 c8 01 00 00 48 89 0c 24 ff d0 48 8b 44 24  .$....H..$..H.D$
	0x0360 08 48 89 84 24 50 01 00 00 48 8b 84 24 c0 01 00  .H..$P...H..$...
	0x0370 00 84 00 48 8b 80 48 01 00 00 48 8b 8c 24 c8 01  ...H..H...H..$..
	0x0380 00 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89 84  ..H..$..H.D$.H..
	0x0390 24 48 01 00 00 48 8b 84 24 c0 01 00 00 84 00 48  $H...H..$......H
	0x03a0 8b 80 58 01 00 00 48 8b 8c 24 c8 01 00 00 48 89  ..X...H..$....H.
	0x03b0 0c 24 ff d0 48 8b 44 24 08 48 89 84 24 40 01 00  .$..H.D$.H..$@..
	0x03c0 00 48 8b 84 24 c0 01 00 00 84 00 48 8b 80 68 01  .H..$......H..h.
	0x03d0 00 00 48 8b 8c 24 c8 01 00 00 48 89 0c 24 ff d0  ..H..$....H..$..
	0x03e0 48 8b 44 24 08 48 89 84 24 38 01 00 00 48 8b 84  H.D$.H..$8...H..
	0x03f0 24 c0 01 00 00 84 00 48 8b 80 98 01 00 00 48 8b  $......H......H.
	0x0400 8c 24 c8 01 00 00 48 89 0c 24 ff d0 48 8b 44 24  .$....H..$..H.D$
	0x0410 08 48 89 84 24 30 01 00 00 48 8b 84 24 c0 01 00  .H..$0...H..$...
	0x0420 00 84 00 48 8b 80 88 01 00 00 48 8b 8c 24 c8 01  ...H......H..$..
	0x0430 00 00 48 89 0c 24 ff d0 48 8b 44 24 08 48 89 84  ..H..$..H.D$.H..
	0x0440 24 28 01 00 00 48 8b 84 24 c0 01 00 00 84 00 48  $(...H..$......H
	0x0450 8b 80 78 01 00 00 48 8b 8c 24 c8 01 00 00 48 89  ..x...H..$....H.
	0x0460 0c 24 ff d0 48 8b 44 24 08 48 89 84 24 20 01 00  .$..H.D$.H..$ ..
	0x0470 00 48 8b 84 24 c0 01 00 00 84 00 48 8b 80 a8 01  .H..$......H....
	0x0480 00 00 48 8b 8c 24 c8 01 00 00 48 89 0c 24 ff d0  ..H..$....H..$..
	0x0490 48 8b 44 24 08 48 89 84 24 18 01 00 00 48 8b 84  H.D$.H..$....H..
	0x04a0 24 c0 01 00 00 84 00 48 8b 40 20 48 8b 8c 24 c8  $......H.@ H..$.
	0x04b0 01 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2  ...H..$.....D$..
	0x04c0 0f 11 84 24 10 01 00 00 48 8b 84 24 c0 01 00 00  ...$....H..$....
	0x04d0 84 00 48 8b 40 30 48 8b 8c 24 c8 01 00 00 48 89  ..H.@0H..$....H.
	0x04e0 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f 11 84 24 00  .$.....D$.....$.
	0x04f0 01 00 00 48 8b 84 24 c0 01 00 00 84 00 48 8b 40  ...H..$......H.@
	0x0500 40 48 8b 8c 24 c8 01 00 00 48 89 0c 24 ff d0 f2  @H..$....H..$...
	0x0510 0f 10 44 24 08 f2 0f 11 84 24 f8 00 00 00 48 8b  ..D$.....$....H.
	0x0520 84 24 c0 01 00 00 84 00 48 8b 40 50 48 8b 8c 24  .$......H.@PH..$
	0x0530 c8 01 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08  ....H..$.....D$.
	0x0540 f2 0f 11 84 24 f0 00 00 00 48 8b 84 24 c0 01 00  ....$....H..$...
	0x0550 00 84 00 48 8b 40 60 48 8b 8c 24 c8 01 00 00 48  ...H.@`H..$....H
	0x0560 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f 11 84 24  ..$.....D$.....$
	0x0570 e8 00 00 00 48 8b 84 24 c0 01 00 00 84 00 48 8b  ....H..$......H.
	0x0580 40 70 48 8b 8c 24 c8 01 00 00 48 89 0c 24 ff d0  @pH..$....H..$..
	0x0590 f2 0f 10 44 24 08 f2 0f 11 84 24 e0 00 00 00 48  ...D$.....$....H
	0x05a0 8b 84 24 c0 01 00 00 84 00 48 8b 80 80 00 00 00  ..$......H......
	0x05b0 48 8b 8c 24 c8 01 00 00 48 89 0c 24 ff d0 f2 0f  H..$....H..$....
	0x05c0 10 44 24 08 f2 0f 11 84 24 d8 00 00 00 48 8b 84  .D$.....$....H..
	0x05d0 24 c0 01 00 00 84 00 48 8b 80 90 00 00 00 48 8b  $......H......H.
	0x05e0 8c 24 c8 01 00 00 48 89 0c 24 ff d0 f2 0f 10 44  .$....H..$.....D
	0x05f0 24 08 f2 0f 11 84 24 d0 00 00 00 48 8b 84 24 c0  $.....$....H..$.
	0x0600 01 00 00 84 00 48 8b 80 a0 00 00 00 48 8b 8c 24  .....H......H..$
	0x0610 c8 01 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08  ....H..$.....D$.
	0x0620 f2 0f 11 84 24 c8 00 00 00 48 8b 84 24 c0 01 00  ....$....H..$...
	0x0630 00 84 00 48 8b 80 b0 00 00 00 48 8b 8c 24 c8 01  ...H......H..$..
	0x0640 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f  ..H..$.....D$...
	0x0650 11 84 24 c0 00 00 00 48 8b 84 24 c0 01 00 00 84  ..$....H..$.....
	0x0660 00 48 8b 80 c0 00 00 00 48 8b 8c 24 c8 01 00 00  .H......H..$....
	0x0670 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f 11 84  H..$.....D$.....
	0x0680 24 b8 00 00 00 48 8b 84 24 c0 01 00 00 84 00 48  $....H..$......H
	0x0690 8b 80 d0 00 00 00 48 8b 8c 24 c8 01 00 00 48 89  ......H..$....H.
	0x06a0 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f 11 84 24 a8  .$.....D$.....$.
	0x06b0 00 00 00 48 8b 84 24 c0 01 00 00 84 00 48 8b 80  ...H..$......H..
	0x06c0 e0 00 00 00 48 8b 8c 24 c8 01 00 00 48 89 0c 24  ....H..$....H..$
	0x06d0 ff d0 f2 0f 10 44 24 08 f2 0f 11 84 24 a0 00 00  .....D$.....$...
	0x06e0 00 48 8b 84 24 c0 01 00 00 84 00 48 8b 80 f0 00  .H..$......H....
	0x06f0 00 00 48 8b 8c 24 c8 01 00 00 48 89 0c 24 ff d0  ..H..$....H..$..
	0x0700 f2 0f 10 44 24 08 f2 0f 11 84 24 98 00 00 00 48  ...D$.....$....H
	0x0710 8b 84 24 c0 01 00 00 84 00 48 8b 80 00 01 00 00  ..$......H......
	0x0720 48 8b 8c 24 c8 01 00 00 48 89 0c 24 ff d0 f2 0f  H..$....H..$....
	0x0730 10 44 24 08 f2 0f 11 84 24 90 00 00 00 48 8b 84  .D$.....$....H..
	0x0740 24 c0 01 00 00 84 00 48 8b 80 10 01 00 00 48 8b  $......H......H.
	0x0750 8c 24 c8 01 00 00 48 89 0c 24 ff d0 f2 0f 10 44  .$....H..$.....D
	0x0760 24 08 f2 0f 11 84 24 88 00 00 00 48 8b 84 24 c0  $.....$....H..$.
	0x0770 01 00 00 84 00 48 8b 80 20 01 00 00 48 8b 8c 24  .....H.. ...H..$
	0x0780 c8 01 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08  ....H..$.....D$.
	0x0790 f2 0f 11 84 24 80 00 00 00 48 8b 84 24 c0 01 00  ....$....H..$...
	0x07a0 00 84 00 48 8b 80 30 01 00 00 48 8b 8c 24 c8 01  ...H..0...H..$..
	0x07b0 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f  ..H..$.....D$...
	0x07c0 11 44 24 78 48 8b 84 24 c0 01 00 00 84 00 48 8b  .D$xH..$......H.
	0x07d0 80 40 01 00 00 48 8b 8c 24 c8 01 00 00 48 89 0c  .@...H..$....H..
	0x07e0 24 ff d0 f2 0f 10 44 24 08 f2 0f 11 44 24 70 48  $.....D$....D$pH
	0x07f0 8b 84 24 c0 01 00 00 84 00 48 8b 80 50 01 00 00  ..$......H..P...
	0x0800 48 8b 8c 24 c8 01 00 00 48 89 0c 24 ff d0 f2 0f  H..$....H..$....
	0x0810 10 44 24 08 f2 0f 11 44 24 68 48 8b 84 24 c0 01  .D$....D$hH..$..
	0x0820 00 00 84 00 48 8b 80 60 01 00 00 48 8b 8c 24 c8  ....H..`...H..$.
	0x0830 01 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08 f2  ...H..$.....D$..
	0x0840 0f 11 44 24 60 48 8b 84 24 c0 01 00 00 84 00 48  ..D$`H..$......H
	0x0850 8b 80 70 01 00 00 48 8b 8c 24 c8 01 00 00 48 89  ..p...H..$....H.
	0x0860 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f 11 44 24 50  .$.....D$....D$P
	0x0870 48 8b 84 24 c0 01 00 00 84 00 48 8b 80 a0 01 00  H..$......H.....
	0x0880 00 48 8b 8c 24 c8 01 00 00 48 89 0c 24 ff d0 f2  .H..$....H..$...
	0x0890 0f 10 44 24 08 f2 0f 11 44 24 48 48 8b 84 24 c0  ..D$....D$HH..$.
	0x08a0 01 00 00 84 00 48 8b 80 90 01 00 00 48 8b 8c 24  .....H......H..$
	0x08b0 c8 01 00 00 48 89 0c 24 ff d0 f2 0f 10 44 24 08  ....H..$.....D$.
	0x08c0 f2 0f 11 44 24 40 48 8b 84 24 c0 01 00 00 84 00  ...D$@H..$......
	0x08d0 48 8b 80 80 01 00 00 48 8b 8c 24 c8 01 00 00 48  H......H..$....H
	0x08e0 89 0c 24 ff d0 f2 0f 10 44 24 08 f2 0f 11 44 24  ..$.....D$....D$
	0x08f0 38 48 8b 84 24 c0 01 00 00 84 00 48 8b 80 b0 01  8H..$......H....
	0x0900 00 00 48 8b 8c 24 c8 01 00 00 48 89 0c 24 ff d0  ..H..$....H..$..
	0x0910 f2 0f 10 44 24 08 f2 0f 11 44 24 30 48 8b 84 24  ...D$....D$0H..$
	0x0920 08 01 00 00 48 03 84 24 b0 00 00 00 48 03 44 24  ....H..$....H.D$
	0x0930 58 48 03 44 24 28 48 03 44 24 20 48 03 44 24 18  XH.D$(H.D$ H.D$.
	0x0940 48 03 44 24 10 48 03 84 24 a8 01 00 00 48 03 84  H.D$.H..$....H..
	0x0950 24 a0 01 00 00 48 03 84 24 98 01 00 00 48 03 84  $....H..$....H..
	0x0960 24 90 01 00 00 48 03 84 24 88 01 00 00 48 03 84  $....H..$....H..
	0x0970 24 80 01 00 00 48 03 84 24 78 01 00 00 48 03 84  $....H..$x...H..
	0x0980 24 70 01 00 00 48 03 84 24 68 01 00 00 48 03 84  $p...H..$h...H..
	0x0990 24 60 01 00 00 48 03 84 24 58 01 00 00 48 03 84  $`...H..$X...H..
	0x09a0 24 50 01 00 00 48 03 84 24 48 01 00 00 48 03 84  $P...H..$H...H..
	0x09b0 24 40 01 00 00 48 03 84 24 38 01 00 00 48 03 84  $@...H..$8...H..
	0x09c0 24 30 01 00 00 48 03 84 24 28 01 00 00 48 03 84  $0...H..$(...H..
	0x09d0 24 20 01 00 00 48 03 84 24 18 01 00 00 f2 0f 10  $ ...H..$.......
	0x09e0 8c 24 10 01 00 00 f2 0f 58 8c 24 00 01 00 00 f2  .$......X.$.....
	0x09f0 0f 58 8c 24 f8 00 00 00 f2 0f 58 8c 24 f0 00 00  .X.$......X.$...
	0x0a00 00 f2 0f 58 8c 24 e8 00 00 00 f2 0f 58 8c 24 e0  ...X.$......X.$.
	0x0a10 00 00 00 f2 0f 58 8c 24 d8 00 00 00 f2 0f 58 8c  .....X.$......X.
	0x0a20 24 d0 00 00 00 f2 0f 58 8c 24 c8 00 00 00 f2 0f  $......X.$......
	0x0a30 58 8c 24 c0 00 00 00 f2 0f 58 8c 24 b8 00 00 00  X.$......X.$....
	0x0a40 f2 0f 58 8c 24 a8 00 00 00 f2 0f 58 8c 24 a0 00  ..X.$......X.$..
	0x0a50 00 00 f2 0f 58 8c 24 98 00 00 00 f2 0f 58 8c 24  ....X.$......X.$
	0x0a60 90 00 00 00 f2 0f 58 8c 24 88 00 00 00 f2 0f 58  ......X.$......X
	0x0a70 8c 24 80 00 00 00 f2 0f 58 4c 24 78 f2 0f 58 4c  .$......XL$x..XL
	0x0a80 24 70 f2 0f 58 4c 24 68 f2 0f 58 4c 24 60 f2 0f  $p..XL$h..XL$`..
	0x0a90 58 4c 24 50 f2 0f 58 4c 24 48 f2 0f 58 4c 24 40  XL$P..XL$H..XL$@
	0x0aa0 f2 0f 58 4c 24 38 0f 57 d2 f2 48 0f 2a d0 f2 0f  ..XL$8.W..H.*...
	0x0ab0 58 c8 f2 0f 5e d1 f2 0f 11 94 24 d0 01 00 00 0f  X...^.....$.....
	0x0ac0 57 c0 0f 11 84 24 d8 01 00 00 48 8b ac 24 b0 01  W....$....H..$..
	0x0ad0 00 00 48 81 c4 b8 01 00 00 c3 e8 00 00 00 00 e9  ..H.............
	0x0ae0 1c f5 ff ff                                      ....
	rel 5+4 t=16 TLS+0
	rel 99+0 t=11 +0
	rel 140+0 t=11 +0
	rel 181+0 t=11 +0
	rel 219+0 t=11 +0
	rel 257+0 t=11 +0
	rel 295+0 t=11 +0
	rel 333+0 t=11 +0
	rel 374+0 t=11 +0
	rel 418+0 t=11 +0
	rel 462+0 t=11 +0
	rel 506+0 t=11 +0
	rel 550+0 t=11 +0
	rel 594+0 t=11 +0
	rel 638+0 t=11 +0
	rel 682+0 t=11 +0
	rel 726+0 t=11 +0
	rel 770+0 t=11 +0
	rel 814+0 t=11 +0
	rel 858+0 t=11 +0
	rel 902+0 t=11 +0
	rel 946+0 t=11 +0
	rel 990+0 t=11 +0
	rel 1034+0 t=11 +0
	rel 1078+0 t=11 +0
	rel 1122+0 t=11 +0
	rel 1166+0 t=11 +0
	rel 1207+0 t=11 +0
	rel 1250+0 t=11 +0
	rel 1293+0 t=11 +0
	rel 1336+0 t=11 +0
	rel 1379+0 t=11 +0
	rel 1422+0 t=11 +0
	rel 1468+0 t=11 +0
	rel 1514+0 t=11 +0
	rel 1560+0 t=11 +0
	rel 1606+0 t=11 +0
	rel 1652+0 t=11 +0
	rel 1698+0 t=11 +0
	rel 1744+0 t=11 +0
	rel 1790+0 t=11 +0
	rel 1836+0 t=11 +0
	rel 1882+0 t=11 +0
	rel 1928+0 t=11 +0
	rel 1974+0 t=11 +0
	rel 2017+0 t=11 +0
	rel 2060+0 t=11 +0
	rel 2103+0 t=11 +0
	rel 2146+0 t=11 +0
	rel 2189+0 t=11 +0
	rel 2232+0 t=11 +0
	rel 2275+0 t=11 +0
	rel 2318+0 t=11 +0
	rel 2779+4 t=8 runtime.morestack_noctxt+0
"".TestTeraValueReceiverRoutine STEXT size=83 args=0x8 locals=0x20
	0x0000 00000 (pointer_vs_value/code/gc_test.go:15)	TEXT	"".TestTeraValueReceiverRoutine(SB), ABIInternal, $32-8
	0x0000 00000 (pointer_vs_value/code/gc_test.go:15)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/gc_test.go:15)	CMPQ	SP, 16(CX)
	0x000d 00013 (pointer_vs_value/code/gc_test.go:15)	JLS	76
	0x000f 00015 (pointer_vs_value/code/gc_test.go:15)	SUBQ	$32, SP
	0x0013 00019 (pointer_vs_value/code/gc_test.go:15)	MOVQ	BP, 24(SP)
	0x0018 00024 (pointer_vs_value/code/gc_test.go:15)	LEAQ	24(SP), BP
	0x001d 00029 (pointer_vs_value/code/gc_test.go:15)	FUNCDATA	$0, gclocals·2a5305abe05176240e61b8620e19a815(SB)
	0x001d 00029 (pointer_vs_value/code/gc_test.go:15)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x001d 00029 (pointer_vs_value/code/gc_test.go:15)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x001d 00029 (pointer_vs_value/code/gc_test.go:17)	PCDATA	$0, $1
	0x001d 00029 (pointer_vs_value/code/gc_test.go:17)	PCDATA	$1, $0
	0x001d 00029 (pointer_vs_value/code/gc_test.go:17)	LEAQ	"".TestTeraValueReceiverRoutine.func1·f(SB), AX
	0x0024 00036 (pointer_vs_value/code/gc_test.go:17)	PCDATA	$0, $0
	0x0024 00036 (pointer_vs_value/code/gc_test.go:17)	MOVQ	AX, (SP)
	0x0028 00040 (pointer_vs_value/code/gc_test.go:17)	PCDATA	$0, $1
	0x0028 00040 (pointer_vs_value/code/gc_test.go:17)	LEAQ	go.string."TestTeraValueReceiverRoutine"(SB), AX
	0x002f 00047 (pointer_vs_value/code/gc_test.go:17)	PCDATA	$0, $0
	0x002f 00047 (pointer_vs_value/code/gc_test.go:17)	MOVQ	AX, 8(SP)
	0x0034 00052 (pointer_vs_value/code/gc_test.go:17)	MOVQ	$28, 16(SP)
	0x003d 00061 (pointer_vs_value/code/gc_test.go:17)	CALL	"".runRoutine(SB)
	0x0042 00066 (pointer_vs_value/code/gc_test.go:20)	MOVQ	24(SP), BP
	0x0047 00071 (pointer_vs_value/code/gc_test.go:20)	ADDQ	$32, SP
	0x004b 00075 (pointer_vs_value/code/gc_test.go:20)	RET
	0x004c 00076 (pointer_vs_value/code/gc_test.go:20)	NOP
	0x004c 00076 (pointer_vs_value/code/gc_test.go:15)	PCDATA	$1, $-1
	0x004c 00076 (pointer_vs_value/code/gc_test.go:15)	PCDATA	$0, $-1
	0x004c 00076 (pointer_vs_value/code/gc_test.go:15)	CALL	runtime.morestack_noctxt(SB)
	0x0051 00081 (pointer_vs_value/code/gc_test.go:15)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 3d 48  eH..%....H;a.v=H
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8d 05  .. H.l$.H.l$.H..
	0x0020 00 00 00 00 48 89 04 24 48 8d 05 00 00 00 00 48  ....H..$H......H
	0x0030 89 44 24 08 48 c7 44 24 10 1c 00 00 00 e8 00 00  .D$.H.D$........
	0x0040 00 00 48 8b 6c 24 18 48 83 c4 20 c3 e8 00 00 00  ..H.l$.H.. .....
	0x0050 00 eb ad                                         ...
	rel 5+4 t=16 TLS+0
	rel 32+4 t=15 "".TestTeraValueReceiverRoutine.func1·f+0
	rel 43+4 t=15 go.string."TestTeraValueReceiverRoutine"+0
	rel 62+4 t=8 "".runRoutine+0
	rel 77+4 t=8 runtime.morestack_noctxt+0
"".TestTeraPointerReceiverRoutine STEXT size=83 args=0x8 locals=0x20
	0x0000 00000 (pointer_vs_value/code/gc_test.go:22)	TEXT	"".TestTeraPointerReceiverRoutine(SB), ABIInternal, $32-8
	0x0000 00000 (pointer_vs_value/code/gc_test.go:22)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/gc_test.go:22)	CMPQ	SP, 16(CX)
	0x000d 00013 (pointer_vs_value/code/gc_test.go:22)	JLS	76
	0x000f 00015 (pointer_vs_value/code/gc_test.go:22)	SUBQ	$32, SP
	0x0013 00019 (pointer_vs_value/code/gc_test.go:22)	MOVQ	BP, 24(SP)
	0x0018 00024 (pointer_vs_value/code/gc_test.go:22)	LEAQ	24(SP), BP
	0x001d 00029 (pointer_vs_value/code/gc_test.go:22)	FUNCDATA	$0, gclocals·2a5305abe05176240e61b8620e19a815(SB)
	0x001d 00029 (pointer_vs_value/code/gc_test.go:22)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x001d 00029 (pointer_vs_value/code/gc_test.go:22)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x001d 00029 (pointer_vs_value/code/gc_test.go:24)	PCDATA	$0, $1
	0x001d 00029 (pointer_vs_value/code/gc_test.go:24)	PCDATA	$1, $0
	0x001d 00029 (pointer_vs_value/code/gc_test.go:24)	LEAQ	"".TestTeraPointerReceiverRoutine.func1·f(SB), AX
	0x0024 00036 (pointer_vs_value/code/gc_test.go:24)	PCDATA	$0, $0
	0x0024 00036 (pointer_vs_value/code/gc_test.go:24)	MOVQ	AX, (SP)
	0x0028 00040 (pointer_vs_value/code/gc_test.go:24)	PCDATA	$0, $1
	0x0028 00040 (pointer_vs_value/code/gc_test.go:24)	LEAQ	go.string."TestTeraPointerReceiverRoutine"(SB), AX
	0x002f 00047 (pointer_vs_value/code/gc_test.go:24)	PCDATA	$0, $0
	0x002f 00047 (pointer_vs_value/code/gc_test.go:24)	MOVQ	AX, 8(SP)
	0x0034 00052 (pointer_vs_value/code/gc_test.go:24)	MOVQ	$30, 16(SP)
	0x003d 00061 (pointer_vs_value/code/gc_test.go:24)	CALL	"".runRoutine(SB)
	0x0042 00066 (pointer_vs_value/code/gc_test.go:28)	MOVQ	24(SP), BP
	0x0047 00071 (pointer_vs_value/code/gc_test.go:28)	ADDQ	$32, SP
	0x004b 00075 (pointer_vs_value/code/gc_test.go:28)	RET
	0x004c 00076 (pointer_vs_value/code/gc_test.go:28)	NOP
	0x004c 00076 (pointer_vs_value/code/gc_test.go:22)	PCDATA	$1, $-1
	0x004c 00076 (pointer_vs_value/code/gc_test.go:22)	PCDATA	$0, $-1
	0x004c 00076 (pointer_vs_value/code/gc_test.go:22)	CALL	runtime.morestack_noctxt(SB)
	0x0051 00081 (pointer_vs_value/code/gc_test.go:22)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 3d 48  eH..%....H;a.v=H
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8d 05  .. H.l$.H.l$.H..
	0x0020 00 00 00 00 48 89 04 24 48 8d 05 00 00 00 00 48  ....H..$H......H
	0x0030 89 44 24 08 48 c7 44 24 10 1e 00 00 00 e8 00 00  .D$.H.D$........
	0x0040 00 00 48 8b 6c 24 18 48 83 c4 20 c3 e8 00 00 00  ..H.l$.H.. .....
	0x0050 00 eb ad                                         ...
	rel 5+4 t=16 TLS+0
	rel 32+4 t=15 "".TestTeraPointerReceiverRoutine.func1·f+0
	rel 43+4 t=15 go.string."TestTeraPointerReceiverRoutine"+0
	rel 62+4 t=8 "".runRoutine+0
	rel 77+4 t=8 runtime.morestack_noctxt+0
"".TestTeraInterfaceReceiverRoutine STEXT size=83 args=0x8 locals=0x20
	0x0000 00000 (pointer_vs_value/code/gc_test.go:30)	TEXT	"".TestTeraInterfaceReceiverRoutine(SB), ABIInternal, $32-8
	0x0000 00000 (pointer_vs_value/code/gc_test.go:30)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/gc_test.go:30)	CMPQ	SP, 16(CX)
	0x000d 00013 (pointer_vs_value/code/gc_test.go:30)	JLS	76
	0x000f 00015 (pointer_vs_value/code/gc_test.go:30)	SUBQ	$32, SP
	0x0013 00019 (pointer_vs_value/code/gc_test.go:30)	MOVQ	BP, 24(SP)
	0x0018 00024 (pointer_vs_value/code/gc_test.go:30)	LEAQ	24(SP), BP
	0x001d 00029 (pointer_vs_value/code/gc_test.go:30)	FUNCDATA	$0, gclocals·2a5305abe05176240e61b8620e19a815(SB)
	0x001d 00029 (pointer_vs_value/code/gc_test.go:30)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x001d 00029 (pointer_vs_value/code/gc_test.go:30)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x001d 00029 (pointer_vs_value/code/gc_test.go:32)	PCDATA	$0, $1
	0x001d 00029 (pointer_vs_value/code/gc_test.go:32)	PCDATA	$1, $0
	0x001d 00029 (pointer_vs_value/code/gc_test.go:32)	LEAQ	"".TestTeraInterfaceReceiverRoutine.func1·f(SB), AX
	0x0024 00036 (pointer_vs_value/code/gc_test.go:32)	PCDATA	$0, $0
	0x0024 00036 (pointer_vs_value/code/gc_test.go:32)	MOVQ	AX, (SP)
	0x0028 00040 (pointer_vs_value/code/gc_test.go:32)	PCDATA	$0, $1
	0x0028 00040 (pointer_vs_value/code/gc_test.go:32)	LEAQ	go.string."TestTeraInterfaceReceiverRoutine"(SB), AX
	0x002f 00047 (pointer_vs_value/code/gc_test.go:32)	PCDATA	$0, $0
	0x002f 00047 (pointer_vs_value/code/gc_test.go:32)	MOVQ	AX, 8(SP)
	0x0034 00052 (pointer_vs_value/code/gc_test.go:32)	MOVQ	$32, 16(SP)
	0x003d 00061 (pointer_vs_value/code/gc_test.go:32)	CALL	"".runRoutine(SB)
	0x0042 00066 (pointer_vs_value/code/gc_test.go:36)	MOVQ	24(SP), BP
	0x0047 00071 (pointer_vs_value/code/gc_test.go:36)	ADDQ	$32, SP
	0x004b 00075 (pointer_vs_value/code/gc_test.go:36)	RET
	0x004c 00076 (pointer_vs_value/code/gc_test.go:36)	NOP
	0x004c 00076 (pointer_vs_value/code/gc_test.go:30)	PCDATA	$1, $-1
	0x004c 00076 (pointer_vs_value/code/gc_test.go:30)	PCDATA	$0, $-1
	0x004c 00076 (pointer_vs_value/code/gc_test.go:30)	CALL	runtime.morestack_noctxt(SB)
	0x0051 00081 (pointer_vs_value/code/gc_test.go:30)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 3d 48  eH..%....H;a.v=H
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8d 05  .. H.l$.H.l$.H..
	0x0020 00 00 00 00 48 89 04 24 48 8d 05 00 00 00 00 48  ....H..$H......H
	0x0030 89 44 24 08 48 c7 44 24 10 20 00 00 00 e8 00 00  .D$.H.D$. ......
	0x0040 00 00 48 8b 6c 24 18 48 83 c4 20 c3 e8 00 00 00  ..H.l$.H.. .....
	0x0050 00 eb ad                                         ...
	rel 5+4 t=16 TLS+0
	rel 32+4 t=15 "".TestTeraInterfaceReceiverRoutine.func1·f+0
	rel 43+4 t=15 go.string."TestTeraInterfaceReceiverRoutine"+0
	rel 62+4 t=8 "".runRoutine+0
	rel 77+4 t=8 runtime.morestack_noctxt+0
"".TestTeraValueReceiverNative STEXT size=83 args=0x8 locals=0x20
	0x0000 00000 (pointer_vs_value/code/gc_test.go:38)	TEXT	"".TestTeraValueReceiverNative(SB), ABIInternal, $32-8
	0x0000 00000 (pointer_vs_value/code/gc_test.go:38)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/gc_test.go:38)	CMPQ	SP, 16(CX)
	0x000d 00013 (pointer_vs_value/code/gc_test.go:38)	JLS	76
	0x000f 00015 (pointer_vs_value/code/gc_test.go:38)	SUBQ	$32, SP
	0x0013 00019 (pointer_vs_value/code/gc_test.go:38)	MOVQ	BP, 24(SP)
	0x0018 00024 (pointer_vs_value/code/gc_test.go:38)	LEAQ	24(SP), BP
	0x001d 00029 (pointer_vs_value/code/gc_test.go:38)	FUNCDATA	$0, gclocals·2a5305abe05176240e61b8620e19a815(SB)
	0x001d 00029 (pointer_vs_value/code/gc_test.go:38)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x001d 00029 (pointer_vs_value/code/gc_test.go:38)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x001d 00029 (pointer_vs_value/code/gc_test.go:40)	PCDATA	$0, $1
	0x001d 00029 (pointer_vs_value/code/gc_test.go:40)	PCDATA	$1, $0
	0x001d 00029 (pointer_vs_value/code/gc_test.go:40)	LEAQ	"".TestTeraValueReceiverNative.func1·f(SB), AX
	0x0024 00036 (pointer_vs_value/code/gc_test.go:40)	PCDATA	$0, $0
	0x0024 00036 (pointer_vs_value/code/gc_test.go:40)	MOVQ	AX, (SP)
	0x0028 00040 (pointer_vs_value/code/gc_test.go:40)	PCDATA	$0, $1
	0x0028 00040 (pointer_vs_value/code/gc_test.go:40)	LEAQ	go.string."TestTeraValueReceiverNative"(SB), AX
	0x002f 00047 (pointer_vs_value/code/gc_test.go:40)	PCDATA	$0, $0
	0x002f 00047 (pointer_vs_value/code/gc_test.go:40)	MOVQ	AX, 8(SP)
	0x0034 00052 (pointer_vs_value/code/gc_test.go:40)	MOVQ	$27, 16(SP)
	0x003d 00061 (pointer_vs_value/code/gc_test.go:40)	CALL	"".runNative(SB)
	0x0042 00066 (pointer_vs_value/code/gc_test.go:43)	MOVQ	24(SP), BP
	0x0047 00071 (pointer_vs_value/code/gc_test.go:43)	ADDQ	$32, SP
	0x004b 00075 (pointer_vs_value/code/gc_test.go:43)	RET
	0x004c 00076 (pointer_vs_value/code/gc_test.go:43)	NOP
	0x004c 00076 (pointer_vs_value/code/gc_test.go:38)	PCDATA	$1, $-1
	0x004c 00076 (pointer_vs_value/code/gc_test.go:38)	PCDATA	$0, $-1
	0x004c 00076 (pointer_vs_value/code/gc_test.go:38)	CALL	runtime.morestack_noctxt(SB)
	0x0051 00081 (pointer_vs_value/code/gc_test.go:38)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 3d 48  eH..%....H;a.v=H
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8d 05  .. H.l$.H.l$.H..
	0x0020 00 00 00 00 48 89 04 24 48 8d 05 00 00 00 00 48  ....H..$H......H
	0x0030 89 44 24 08 48 c7 44 24 10 1b 00 00 00 e8 00 00  .D$.H.D$........
	0x0040 00 00 48 8b 6c 24 18 48 83 c4 20 c3 e8 00 00 00  ..H.l$.H.. .....
	0x0050 00 eb ad                                         ...
	rel 5+4 t=16 TLS+0
	rel 32+4 t=15 "".TestTeraValueReceiverNative.func1·f+0
	rel 43+4 t=15 go.string."TestTeraValueReceiverNative"+0
	rel 62+4 t=8 "".runNative+0
	rel 77+4 t=8 runtime.morestack_noctxt+0
"".TestTeraPointerReceiverNative STEXT size=83 args=0x8 locals=0x20
	0x0000 00000 (pointer_vs_value/code/gc_test.go:45)	TEXT	"".TestTeraPointerReceiverNative(SB), ABIInternal, $32-8
	0x0000 00000 (pointer_vs_value/code/gc_test.go:45)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/gc_test.go:45)	CMPQ	SP, 16(CX)
	0x000d 00013 (pointer_vs_value/code/gc_test.go:45)	JLS	76
	0x000f 00015 (pointer_vs_value/code/gc_test.go:45)	SUBQ	$32, SP
	0x0013 00019 (pointer_vs_value/code/gc_test.go:45)	MOVQ	BP, 24(SP)
	0x0018 00024 (pointer_vs_value/code/gc_test.go:45)	LEAQ	24(SP), BP
	0x001d 00029 (pointer_vs_value/code/gc_test.go:45)	FUNCDATA	$0, gclocals·2a5305abe05176240e61b8620e19a815(SB)
	0x001d 00029 (pointer_vs_value/code/gc_test.go:45)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x001d 00029 (pointer_vs_value/code/gc_test.go:45)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x001d 00029 (pointer_vs_value/code/gc_test.go:47)	PCDATA	$0, $1
	0x001d 00029 (pointer_vs_value/code/gc_test.go:47)	PCDATA	$1, $0
	0x001d 00029 (pointer_vs_value/code/gc_test.go:47)	LEAQ	"".TestTeraPointerReceiverNative.func1·f(SB), AX
	0x0024 00036 (pointer_vs_value/code/gc_test.go:47)	PCDATA	$0, $0
	0x0024 00036 (pointer_vs_value/code/gc_test.go:47)	MOVQ	AX, (SP)
	0x0028 00040 (pointer_vs_value/code/gc_test.go:47)	PCDATA	$0, $1
	0x0028 00040 (pointer_vs_value/code/gc_test.go:47)	LEAQ	go.string."TestTeraPointerReceiverNative"(SB), AX
	0x002f 00047 (pointer_vs_value/code/gc_test.go:47)	PCDATA	$0, $0
	0x002f 00047 (pointer_vs_value/code/gc_test.go:47)	MOVQ	AX, 8(SP)
	0x0034 00052 (pointer_vs_value/code/gc_test.go:47)	MOVQ	$29, 16(SP)
	0x003d 00061 (pointer_vs_value/code/gc_test.go:47)	CALL	"".runNative(SB)
	0x0042 00066 (pointer_vs_value/code/gc_test.go:51)	MOVQ	24(SP), BP
	0x0047 00071 (pointer_vs_value/code/gc_test.go:51)	ADDQ	$32, SP
	0x004b 00075 (pointer_vs_value/code/gc_test.go:51)	RET
	0x004c 00076 (pointer_vs_value/code/gc_test.go:51)	NOP
	0x004c 00076 (pointer_vs_value/code/gc_test.go:45)	PCDATA	$1, $-1
	0x004c 00076 (pointer_vs_value/code/gc_test.go:45)	PCDATA	$0, $-1
	0x004c 00076 (pointer_vs_value/code/gc_test.go:45)	CALL	runtime.morestack_noctxt(SB)
	0x0051 00081 (pointer_vs_value/code/gc_test.go:45)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 3d 48  eH..%....H;a.v=H
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8d 05  .. H.l$.H.l$.H..
	0x0020 00 00 00 00 48 89 04 24 48 8d 05 00 00 00 00 48  ....H..$H......H
	0x0030 89 44 24 08 48 c7 44 24 10 1d 00 00 00 e8 00 00  .D$.H.D$........
	0x0040 00 00 48 8b 6c 24 18 48 83 c4 20 c3 e8 00 00 00  ..H.l$.H.. .....
	0x0050 00 eb ad                                         ...
	rel 5+4 t=16 TLS+0
	rel 32+4 t=15 "".TestTeraPointerReceiverNative.func1·f+0
	rel 43+4 t=15 go.string."TestTeraPointerReceiverNative"+0
	rel 62+4 t=8 "".runNative+0
	rel 77+4 t=8 runtime.morestack_noctxt+0
"".TestTeraInterfaceReceiverNative STEXT size=83 args=0x8 locals=0x20
	0x0000 00000 (pointer_vs_value/code/gc_test.go:52)	TEXT	"".TestTeraInterfaceReceiverNative(SB), ABIInternal, $32-8
	0x0000 00000 (pointer_vs_value/code/gc_test.go:52)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/gc_test.go:52)	CMPQ	SP, 16(CX)
	0x000d 00013 (pointer_vs_value/code/gc_test.go:52)	JLS	76
	0x000f 00015 (pointer_vs_value/code/gc_test.go:52)	SUBQ	$32, SP
	0x0013 00019 (pointer_vs_value/code/gc_test.go:52)	MOVQ	BP, 24(SP)
	0x0018 00024 (pointer_vs_value/code/gc_test.go:52)	LEAQ	24(SP), BP
	0x001d 00029 (pointer_vs_value/code/gc_test.go:52)	FUNCDATA	$0, gclocals·2a5305abe05176240e61b8620e19a815(SB)
	0x001d 00029 (pointer_vs_value/code/gc_test.go:52)	FUNCDATA	$1, gclocals·33cdeccccebe80329f1fdbee7f5874cb(SB)
	0x001d 00029 (pointer_vs_value/code/gc_test.go:52)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x001d 00029 (pointer_vs_value/code/gc_test.go:54)	PCDATA	$0, $1
	0x001d 00029 (pointer_vs_value/code/gc_test.go:54)	PCDATA	$1, $0
	0x001d 00029 (pointer_vs_value/code/gc_test.go:54)	LEAQ	"".TestTeraInterfaceReceiverNative.func1·f(SB), AX
	0x0024 00036 (pointer_vs_value/code/gc_test.go:54)	PCDATA	$0, $0
	0x0024 00036 (pointer_vs_value/code/gc_test.go:54)	MOVQ	AX, (SP)
	0x0028 00040 (pointer_vs_value/code/gc_test.go:54)	PCDATA	$0, $1
	0x0028 00040 (pointer_vs_value/code/gc_test.go:54)	LEAQ	go.string."TestTeraInterfaceReceiverNative"(SB), AX
	0x002f 00047 (pointer_vs_value/code/gc_test.go:54)	PCDATA	$0, $0
	0x002f 00047 (pointer_vs_value/code/gc_test.go:54)	MOVQ	AX, 8(SP)
	0x0034 00052 (pointer_vs_value/code/gc_test.go:54)	MOVQ	$31, 16(SP)
	0x003d 00061 (pointer_vs_value/code/gc_test.go:54)	CALL	"".runNative(SB)
	0x0042 00066 (pointer_vs_value/code/gc_test.go:58)	MOVQ	24(SP), BP
	0x0047 00071 (pointer_vs_value/code/gc_test.go:58)	ADDQ	$32, SP
	0x004b 00075 (pointer_vs_value/code/gc_test.go:58)	RET
	0x004c 00076 (pointer_vs_value/code/gc_test.go:58)	NOP
	0x004c 00076 (pointer_vs_value/code/gc_test.go:52)	PCDATA	$1, $-1
	0x004c 00076 (pointer_vs_value/code/gc_test.go:52)	PCDATA	$0, $-1
	0x004c 00076 (pointer_vs_value/code/gc_test.go:52)	CALL	runtime.morestack_noctxt(SB)
	0x0051 00081 (pointer_vs_value/code/gc_test.go:52)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 3d 48  eH..%....H;a.v=H
	0x0010 83 ec 20 48 89 6c 24 18 48 8d 6c 24 18 48 8d 05  .. H.l$.H.l$.H..
	0x0020 00 00 00 00 48 89 04 24 48 8d 05 00 00 00 00 48  ....H..$H......H
	0x0030 89 44 24 08 48 c7 44 24 10 1f 00 00 00 e8 00 00  .D$.H.D$........
	0x0040 00 00 48 8b 6c 24 18 48 83 c4 20 c3 e8 00 00 00  ..H.l$.H.. .....
	0x0050 00 eb ad                                         ...
	rel 5+4 t=16 TLS+0
	rel 32+4 t=15 "".TestTeraInterfaceReceiverNative.func1·f+0
	rel 43+4 t=15 go.string."TestTeraInterfaceReceiverNative"+0
	rel 62+4 t=8 "".runNative+0
	rel 77+4 t=8 runtime.morestack_noctxt+0
"".runRoutine STEXT size=941 args=0x18 locals=0xa80
	0x0000 00000 (pointer_vs_value/code/gc_test.go:60)	TEXT	"".runRoutine(SB), ABIInternal, $2688-24
	0x0000 00000 (pointer_vs_value/code/gc_test.go:60)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/gc_test.go:60)	LEAQ	-2560(SP), AX
	0x0011 00017 (pointer_vs_value/code/gc_test.go:60)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/gc_test.go:60)	JLS	931
	0x001b 00027 (pointer_vs_value/code/gc_test.go:60)	SUBQ	$2688, SP
	0x0022 00034 (pointer_vs_value/code/gc_test.go:60)	MOVQ	BP, 2680(SP)
	0x002a 00042 (pointer_vs_value/code/gc_test.go:60)	LEAQ	2680(SP), BP
	0x0032 00050 (pointer_vs_value/code/gc_test.go:60)	FUNCDATA	$0, gclocals·f9f7ab7ad6fb062a0f5071d66e374c7a(SB)
	0x0032 00050 (pointer_vs_value/code/gc_test.go:60)	FUNCDATA	$1, gclocals·66140cb71a2972658a8a1e26b9e96746(SB)
	0x0032 00050 (pointer_vs_value/code/gc_test.go:60)	FUNCDATA	$2, gclocals·0829519d603c6cdd13147779cbc49985(SB)
	0x0032 00050 (pointer_vs_value/code/gc_test.go:60)	FUNCDATA	$3, "".runRoutine.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/gc_test.go:61)	PCDATA	$0, $1
	0x0032 00050 (pointer_vs_value/code/gc_test.go:61)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/gc_test.go:61)	LEAQ	type.chan "".tera(SB), AX
	0x0039 00057 (pointer_vs_value/code/gc_test.go:61)	PCDATA	$0, $0
	0x0039 00057 (pointer_vs_value/code/gc_test.go:61)	MOVQ	AX, (SP)
	0x003d 00061 (pointer_vs_value/code/gc_test.go:61)	MOVQ	$1, 8(SP)
	0x0046 00070 (pointer_vs_value/code/gc_test.go:61)	CALL	runtime.makechan(SB)
	0x004b 00075 (pointer_vs_value/code/gc_test.go:61)	PCDATA	$0, $1
	0x004b 00075 (pointer_vs_value/code/gc_test.go:61)	MOVQ	16(SP), AX
	0x0050 00080 (pointer_vs_value/code/gc_test.go:61)	PCDATA	$0, $0
	0x0050 00080 (pointer_vs_value/code/gc_test.go:61)	PCDATA	$1, $1
	0x0050 00080 (pointer_vs_value/code/gc_test.go:61)	MOVQ	AX, "".ch+856(SP)
	0x0058 00088 (pointer_vs_value/code/gc_test.go:63)	XORPS	X0, X0
	0x005b 00091 (pointer_vs_value/code/gc_test.go:63)	MOVUPS	X0, "".~R0+896(SP)
	0x0063 00099 (<unknown line number>)	NOP
	0x0063 00099 ($GOROOT/src/context/context.go:206)	PCDATA	$0, $1
	0x0063 00099 ($GOROOT/src/context/context.go:206)	MOVQ	context.background(SB), AX
	0x006a 00106 (pointer_vs_value/code/gc_test.go:63)	PCDATA	$0, $2
	0x006a 00106 (pointer_vs_value/code/gc_test.go:63)	LEAQ	go.itab.*context.emptyCtx,context.Context(SB), CX
	0x0071 00113 (pointer_vs_value/code/gc_test.go:63)	MOVQ	CX, ""..autotmp_15+928(SP)
	0x0079 00121 (pointer_vs_value/code/gc_test.go:63)	MOVQ	AX, ""..autotmp_15+936(SP)
	0x0081 00129 (pointer_vs_value/code/gc_test.go:63)	PCDATA	$0, $1
	0x0081 00129 (pointer_vs_value/code/gc_test.go:63)	PCDATA	$1, $2
	0x0081 00129 (pointer_vs_value/code/gc_test.go:63)	MOVQ	CX, "".~R0+896(SP)
	0x0089 00137 (pointer_vs_value/code/gc_test.go:63)	PCDATA	$0, $0
	0x0089 00137 (pointer_vs_value/code/gc_test.go:63)	MOVQ	AX, "".~R0+904(SP)
	0x0091 00145 (pointer_vs_value/code/gc_test.go:63)	JMP	147
	0x0093 00147 (pointer_vs_value/code/gc_test.go:63)	XORPS	X0, X0
	0x0096 00150 (pointer_vs_value/code/gc_test.go:63)	MOVUPS	X0, ""..autotmp_10+976(SP)
	0x009e 00158 (pointer_vs_value/code/gc_test.go:63)	MOVQ	$0, ""..autotmp_11+888(SP)
	0x00aa 00170 (pointer_vs_value/code/gc_test.go:63)	PCDATA	$0, $1
	0x00aa 00170 (pointer_vs_value/code/gc_test.go:63)	MOVQ	"".~R0+904(SP), AX
	0x00b2 00178 (pointer_vs_value/code/gc_test.go:63)	PCDATA	$1, $1
	0x00b2 00178 (pointer_vs_value/code/gc_test.go:63)	MOVQ	"".~R0+896(SP), CX
	0x00ba 00186 (pointer_vs_value/code/gc_test.go:63)	MOVQ	CX, (SP)
	0x00be 00190 (pointer_vs_value/code/gc_test.go:63)	PCDATA	$0, $0
	0x00be 00190 (pointer_vs_value/code/gc_test.go:63)	MOVQ	AX, 8(SP)
	0x00c3 00195 (pointer_vs_value/code/gc_test.go:63)	CALL	context.WithCancel(SB)
	0x00c8 00200 (pointer_vs_value/code/gc_test.go:63)	PCDATA	$0, $1
	0x00c8 00200 (pointer_vs_value/code/gc_test.go:63)	MOVQ	24(SP), AX
	0x00cd 00205 (pointer_vs_value/code/gc_test.go:63)	MOVQ	16(SP), CX
	0x00d2 00210 (pointer_vs_value/code/gc_test.go:63)	PCDATA	$1, $3
	0x00d2 00210 (pointer_vs_value/code/gc_test.go:63)	MOVQ	CX, ""..autotmp_10+976(SP)
	0x00da 00218 (pointer_vs_value/code/gc_test.go:63)	PCDATA	$0, $0
	0x00da 00218 (pointer_vs_value/code/gc_test.go:63)	MOVQ	AX, ""..autotmp_10+984(SP)
	0x00e2 00226 (pointer_vs_value/code/gc_test.go:63)	PCDATA	$0, $1
	0x00e2 00226 (pointer_vs_value/code/gc_test.go:63)	MOVQ	32(SP), AX
	0x00e7 00231 (pointer_vs_value/code/gc_test.go:63)	PCDATA	$0, $0
	0x00e7 00231 (pointer_vs_value/code/gc_test.go:63)	PCDATA	$1, $4
	0x00e7 00231 (pointer_vs_value/code/gc_test.go:63)	MOVQ	AX, ""..autotmp_11+888(SP)
	0x00ef 00239 (pointer_vs_value/code/gc_test.go:63)	MOVQ	""..autotmp_10+976(SP), AX
	0x00f7 00247 (pointer_vs_value/code/gc_test.go:63)	PCDATA	$0, $3
	0x00f7 00247 (pointer_vs_value/code/gc_test.go:63)	PCDATA	$1, $5
	0x00f7 00247 (pointer_vs_value/code/gc_test.go:63)	MOVQ	""..autotmp_10+984(SP), CX
	0x00ff 00255 (pointer_vs_value/code/gc_test.go:63)	PCDATA	$1, $6
	0x00ff 00255 (pointer_vs_value/code/gc_test.go:63)	MOVQ	AX, "".ctx+912(SP)
	0x0107 00263 (pointer_vs_value/code/gc_test.go:63)	PCDATA	$0, $0
	0x0107 00263 (pointer_vs_value/code/gc_test.go:63)	MOVQ	CX, "".ctx+920(SP)
	0x010f 00271 (pointer_vs_value/code/gc_test.go:63)	PCDATA	$0, $1
	0x010f 00271 (pointer_vs_value/code/gc_test.go:63)	PCDATA	$1, $7
	0x010f 00271 (pointer_vs_value/code/gc_test.go:63)	MOVQ	""..autotmp_11+888(SP), AX
	0x0117 00279 (pointer_vs_value/code/gc_test.go:63)	PCDATA	$0, $0
	0x0117 00279 (pointer_vs_value/code/gc_test.go:63)	PCDATA	$1, $8
	0x0117 00279 (pointer_vs_value/code/gc_test.go:63)	MOVQ	AX, "".cnl+848(SP)
	0x011f 00287 (pointer_vs_value/code/gc_test.go:65)	MOVL	$8, (SP)
	0x0126 00294 (pointer_vs_value/code/gc_test.go:65)	PCDATA	$0, $1
	0x0126 00294 (pointer_vs_value/code/gc_test.go:65)	LEAQ	"".runRoutine.func1·f(SB), AX
	0x012d 00301 (pointer_vs_value/code/gc_test.go:65)	PCDATA	$0, $0
	0x012d 00301 (pointer_vs_value/code/gc_test.go:65)	MOVQ	AX, 8(SP)
	0x0132 00306 (pointer_vs_value/code/gc_test.go:65)	PCDATA	$0, $1
	0x0132 00306 (pointer_vs_value/code/gc_test.go:65)	PCDATA	$1, $7
	0x0132 00306 (pointer_vs_value/code/gc_test.go:65)	MOVQ	"".cnl+848(SP), AX
	0x013a 00314 (pointer_vs_value/code/gc_test.go:65)	PCDATA	$0, $0
	0x013a 00314 (pointer_vs_value/code/gc_test.go:65)	MOVQ	AX, 16(SP)
	0x013f 00319 (pointer_vs_value/code/gc_test.go:65)	CALL	runtime.newproc(SB)
	0x0144 00324 (pointer_vs_value/code/gc_test.go:70)	MOVL	$24, (SP)
	0x014b 00331 (pointer_vs_value/code/gc_test.go:70)	PCDATA	$0, $1
	0x014b 00331 (pointer_vs_value/code/gc_test.go:70)	LEAQ	"".runRoutine.func2·f(SB), AX
	0x0152 00338 (pointer_vs_value/code/gc_test.go:70)	PCDATA	$0, $0
	0x0152 00338 (pointer_vs_value/code/gc_test.go:70)	MOVQ	AX, 8(SP)
	0x0157 00343 (pointer_vs_value/code/gc_test.go:70)	MOVQ	"".ctx+912(SP), AX
	0x015f 00351 (pointer_vs_value/code/gc_test.go:70)	PCDATA	$0, $3
	0x015f 00351 (pointer_vs_value/code/gc_test.go:70)	PCDATA	$1, $1
	0x015f 00351 (pointer_vs_value/code/gc_test.go:70)	MOVQ	"".ctx+920(SP), CX
	0x0167 00359 (pointer_vs_value/code/gc_test.go:70)	MOVQ	AX, 16(SP)
	0x016c 00364 (pointer_vs_value/code/gc_test.go:70)	PCDATA	$0, $0
	0x016c 00364 (pointer_vs_value/code/gc_test.go:70)	MOVQ	CX, 24(SP)
	0x0171 00369 (pointer_vs_value/code/gc_test.go:70)	PCDATA	$0, $1
	0x0171 00369 (pointer_vs_value/code/gc_test.go:70)	MOVQ	"".ch+856(SP), AX
	0x0179 00377 (pointer_vs_value/code/gc_test.go:70)	PCDATA	$0, $0
	0x0179 00377 (pointer_vs_value/code/gc_test.go:70)	MOVQ	AX, 32(SP)
	0x017e 00382 (pointer_vs_value/code/gc_test.go:70)	CALL	runtime.newproc(SB)
	0x0183 00387 (pointer_vs_value/code/gc_test.go:85)	MOVQ	$0, "".i+840(SP)
	0x018f 00399 (pointer_vs_value/code/gc_test.go:87)	PCDATA	$0, $1
	0x018f 00399 (pointer_vs_value/code/gc_test.go:87)	PCDATA	$1, $0
	0x018f 00399 (pointer_vs_value/code/gc_test.go:87)	MOVQ	"".ch+856(SP), AX
	0x0197 00407 (pointer_vs_value/code/gc_test.go:87)	PCDATA	$0, $0
	0x0197 00407 (pointer_vs_value/code/gc_test.go:87)	PCDATA	$1, $9
	0x0197 00407 (pointer_vs_value/code/gc_test.go:87)	MOVQ	AX, ""..autotmp_12+880(SP)
	0x019f 00415 (pointer_vs_value/code/gc_test.go:87)	PCDATA	$0, $4
	0x019f 00415 (pointer_vs_value/code/gc_test.go:87)	PCDATA	$1, $10
	0x019f 00415 (pointer_vs_value/code/gc_test.go:87)	LEAQ	""..autotmp_16+1848(SP), DI
	0x01a7 00423 (pointer_vs_value/code/gc_test.go:87)	XORPS	X0, X0
	0x01aa 00426 (pointer_vs_value/code/gc_test.go:87)	PCDATA	$0, $0
	0x01aa 00426 (pointer_vs_value/code/gc_test.go:87)	DUFFZERO	$57
	0x01bd 00445 (pointer_vs_value/code/gc_test.go:87)	JMP	447
	0x01bf 00447 (pointer_vs_value/code/gc_test.go:87)	PCDATA	$0, $1
	0x01bf 00447 (pointer_vs_value/code/gc_test.go:87)	MOVQ	""..autotmp_12+880(SP), AX
	0x01c7 00455 (pointer_vs_value/code/gc_test.go:87)	PCDATA	$0, $0
	0x01c7 00455 (pointer_vs_value/code/gc_test.go:87)	MOVQ	AX, (SP)
	0x01cb 00459 (pointer_vs_value/code/gc_test.go:87)	PCDATA	$0, $1
	0x01cb 00459 (pointer_vs_value/code/gc_test.go:87)	LEAQ	""..autotmp_16+1848(SP), AX
	0x01d3 00467 (pointer_vs_value/code/gc_test.go:87)	PCDATA	$0, $0
	0x01d3 00467 (pointer_vs_value/code/gc_test.go:87)	MOVQ	AX, 8(SP)
	0x01d8 00472 (pointer_vs_value/code/gc_test.go:87)	CALL	runtime.chanrecv2(SB)
	0x01dd 00477 (pointer_vs_value/code/gc_test.go:87)	MOVBLZX	16(SP), AX
	0x01e2 00482 (pointer_vs_value/code/gc_test.go:87)	MOVB	AL, ""..autotmp_17+839(SP)
	0x01e9 00489 (pointer_vs_value/code/gc_test.go:87)	TESTB	AL, AL
	0x01eb 00491 (pointer_vs_value/code/gc_test.go:87)	JNE	498
	0x01ed 00493 (pointer_vs_value/code/gc_test.go:87)	JMP	632
	0x01f2 00498 (pointer_vs_value/code/gc_test.go:87)	PCDATA	$0, $4
	0x01f2 00498 (pointer_vs_value/code/gc_test.go:87)	PCDATA	$1, $11
	0x01f2 00498 (pointer_vs_value/code/gc_test.go:87)	LEAQ	"".o+1016(SP), DI
	0x01fa 00506 (pointer_vs_value/code/gc_test.go:87)	PCDATA	$0, $5
	0x01fa 00506 (pointer_vs_value/code/gc_test.go:87)	PCDATA	$1, $12
	0x01fa 00506 (pointer_vs_value/code/gc_test.go:87)	LEAQ	""..autotmp_16+1848(SP), SI
	0x0202 00514 (pointer_vs_value/code/gc_test.go:87)	PCDATA	$0, $0
	0x0202 00514 (pointer_vs_value/code/gc_test.go:87)	DUFFCOPY	$168
	0x0215 00533 (pointer_vs_value/code/gc_test.go:87)	PCDATA	$0, $4
	0x0215 00533 (pointer_vs_value/code/gc_test.go:87)	PCDATA	$1, $11
	0x0215 00533 (pointer_vs_value/code/gc_test.go:87)	LEAQ	""..autotmp_16+1848(SP), DI
	0x021d 00541 (pointer_vs_value/code/gc_test.go:87)	XORPS	X0, X0
	0x0220 00544 (pointer_vs_value/code/gc_test.go:87)	PCDATA	$0, $0
	0x0220 00544 (pointer_vs_value/code/gc_test.go:87)	DUFFZERO	$57
	0x0233 00563 (pointer_vs_value/code/gc_test.go:88)	PCDATA	$0, $6
	0x0233 00563 (pointer_vs_value/code/gc_test.go:88)	MOVQ	"".exec+2696(SP), DX
	0x023b 00571 (pointer_vs_value/code/gc_test.go:88)	MOVQ	SP, DI
	0x023e 00574 (pointer_vs_value/code/gc_test.go:88)	PCDATA	$0, $7
	0x023e 00574 (pointer_vs_value/code/gc_test.go:88)	PCDATA	$1, $10
	0x023e 00574 (pointer_vs_value/code/gc_test.go:88)	LEAQ	"".o+1016(SP), SI
	0x0246 00582 (pointer_vs_value/code/gc_test.go:88)	PCDATA	$0, $6
	0x0246 00582 (pointer_vs_value/code/gc_test.go:88)	DUFFCOPY	$168
	0x0259 00601 (pointer_vs_value/code/gc_test.go:88)	MOVQ	(DX), AX
	0x025c 00604 (pointer_vs_value/code/gc_test.go:88)	PCDATA	$0, $0
	0x025c 00604 (pointer_vs_value/code/gc_test.go:88)	CALL	AX
	0x025e 00606 (pointer_vs_value/code/gc_test.go:89)	MOVQ	"".i+840(SP), AX
	0x0266 00614 (pointer_vs_value/code/gc_test.go:89)	INCQ	AX
	0x0269 00617 (pointer_vs_value/code/gc_test.go:89)	MOVQ	AX, "".i+840(SP)
	0x0271 00625 (pointer_vs_value/code/gc_test.go:89)	JMP	627
	0x0273 00627 (pointer_vs_value/code/gc_test.go:87)	PCDATA	$0, $-2
	0x0273 00627 (pointer_vs_value/code/gc_test.go:87)	PCDATA	$1, $-2
	0x0273 00627 (pointer_vs_value/code/gc_test.go:87)	JMP	447
	0x0278 00632 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$0, $0
	0x0278 00632 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$1, $13
	0x0278 00632 (pointer_vs_value/code/gc_test.go:92)	MOVQ	"".i+840(SP), AX
	0x0280 00640 (pointer_vs_value/code/gc_test.go:92)	MOVQ	AX, (SP)
	0x0284 00644 (pointer_vs_value/code/gc_test.go:92)	CALL	runtime.convT64(SB)
	0x0289 00649 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$0, $1
	0x0289 00649 (pointer_vs_value/code/gc_test.go:92)	MOVQ	8(SP), AX
	0x028e 00654 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$0, $0
	0x028e 00654 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$1, $14
	0x028e 00654 (pointer_vs_value/code/gc_test.go:92)	MOVQ	AX, ""..autotmp_18+872(SP)
	0x0296 00662 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$1, $15
	0x0296 00662 (pointer_vs_value/code/gc_test.go:92)	XORPS	X0, X0
	0x0299 00665 (pointer_vs_value/code/gc_test.go:92)	MOVUPS	X0, ""..autotmp_13+960(SP)
	0x02a1 00673 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$0, $1
	0x02a1 00673 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$1, $14
	0x02a1 00673 (pointer_vs_value/code/gc_test.go:92)	LEAQ	""..autotmp_13+960(SP), AX
	0x02a9 00681 (pointer_vs_value/code/gc_test.go:92)	MOVQ	AX, ""..autotmp_20+864(SP)
	0x02b1 00689 (pointer_vs_value/code/gc_test.go:92)	TESTB	AL, (AX)
	0x02b3 00691 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$0, $2
	0x02b3 00691 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$1, $13
	0x02b3 00691 (pointer_vs_value/code/gc_test.go:92)	MOVQ	""..autotmp_18+872(SP), CX
	0x02bb 00699 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$0, $8
	0x02bb 00699 (pointer_vs_value/code/gc_test.go:92)	LEAQ	type.int(SB), DX
	0x02c2 00706 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$0, $2
	0x02c2 00706 (pointer_vs_value/code/gc_test.go:92)	MOVQ	DX, ""..autotmp_13+960(SP)
	0x02ca 00714 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$0, $1
	0x02ca 00714 (pointer_vs_value/code/gc_test.go:92)	MOVQ	CX, ""..autotmp_13+968(SP)
	0x02d2 00722 (pointer_vs_value/code/gc_test.go:92)	TESTB	AL, (AX)
	0x02d4 00724 (pointer_vs_value/code/gc_test.go:92)	JMP	726
	0x02d6 00726 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$0, $0
	0x02d6 00726 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$1, $16
	0x02d6 00726 (pointer_vs_value/code/gc_test.go:92)	MOVQ	AX, ""..autotmp_19+992(SP)
	0x02de 00734 (pointer_vs_value/code/gc_test.go:92)	MOVQ	$1, ""..autotmp_19+1000(SP)
	0x02ea 00746 (pointer_vs_value/code/gc_test.go:92)	MOVQ	$1, ""..autotmp_19+1008(SP)
	0x02f6 00758 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$0, $1
	0x02f6 00758 (pointer_vs_value/code/gc_test.go:92)	LEAQ	go.string."invocations = %v"(SB), AX
	0x02fd 00765 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$0, $0
	0x02fd 00765 (pointer_vs_value/code/gc_test.go:92)	MOVQ	AX, (SP)
	0x0301 00769 (pointer_vs_value/code/gc_test.go:92)	MOVQ	$16, 8(SP)
	0x030a 00778 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$0, $1
	0x030a 00778 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$1, $13
	0x030a 00778 (pointer_vs_value/code/gc_test.go:92)	MOVQ	""..autotmp_19+992(SP), AX
	0x0312 00786 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$0, $0
	0x0312 00786 (pointer_vs_value/code/gc_test.go:92)	MOVQ	AX, 16(SP)
	0x0317 00791 (pointer_vs_value/code/gc_test.go:92)	MOVQ	$1, 24(SP)
	0x0320 00800 (pointer_vs_value/code/gc_test.go:92)	MOVQ	$1, 32(SP)
	0x0329 00809 (pointer_vs_value/code/gc_test.go:92)	CALL	fmt.Sprintf(SB)
	0x032e 00814 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$0, $1
	0x032e 00814 (pointer_vs_value/code/gc_test.go:92)	MOVQ	40(SP), AX
	0x0333 00819 (pointer_vs_value/code/gc_test.go:92)	MOVQ	48(SP), CX
	0x0338 00824 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$0, $0
	0x0338 00824 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$1, $17
	0x0338 00824 (pointer_vs_value/code/gc_test.go:92)	MOVQ	AX, ""..autotmp_14+944(SP)
	0x0340 00832 (pointer_vs_value/code/gc_test.go:92)	MOVQ	CX, ""..autotmp_14+952(SP)
	0x0348 00840 (pointer_vs_value/code/gc_test.go:92)	CALL	runtime.printlock(SB)
	0x034d 00845 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$0, $1
	0x034d 00845 (pointer_vs_value/code/gc_test.go:92)	MOVQ	""..autotmp_14+944(SP), AX
	0x0355 00853 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$1, $13
	0x0355 00853 (pointer_vs_value/code/gc_test.go:92)	MOVQ	""..autotmp_14+952(SP), CX
	0x035d 00861 (pointer_vs_value/code/gc_test.go:92)	PCDATA	$0, $0
	0x035d 00861 (pointer_vs_value/code/gc_test.go:92)	MOVQ	AX, (SP)
	0x0361 00865 (pointer_vs_value/code/gc_test.go:92)	MOVQ	CX, 8(SP)
	0x0366 00870 (pointer_vs_value/code/gc_test.go:92)	CALL	runtime.printstring(SB)
	0x036b 00875 (pointer_vs_value/code/gc_test.go:92)	CALL	runtime.printnl(SB)
	0x0370 00880 (pointer_vs_value/code/gc_test.go:92)	CALL	runtime.printunlock(SB)
	0x0375 00885 (pointer_vs_value/code/gc_test.go:93)	PCDATA	$0, $1
	0x0375 00885 (pointer_vs_value/code/gc_test.go:93)	MOVQ	"".name+2704(SP), AX
	0x037d 00893 (pointer_vs_value/code/gc_test.go:93)	PCDATA	$1, $18
	0x037d 00893 (pointer_vs_value/code/gc_test.go:93)	MOVQ	"".name+2712(SP), CX
	0x0385 00901 (pointer_vs_value/code/gc_test.go:93)	PCDATA	$0, $0
	0x0385 00901 (pointer_vs_value/code/gc_test.go:93)	MOVQ	AX, (SP)
	0x0389 00905 (pointer_vs_value/code/gc_test.go:93)	MOVQ	CX, 8(SP)
	0x038e 00910 (pointer_vs_value/code/gc_test.go:93)	CALL	"".trackGC(SB)
	0x0393 00915 (pointer_vs_value/code/gc_test.go:94)	MOVQ	2680(SP), BP
	0x039b 00923 (pointer_vs_value/code/gc_test.go:94)	ADDQ	$2688, SP
	0x03a2 00930 (pointer_vs_value/code/gc_test.go:94)	RET
	0x03a3 00931 (pointer_vs_value/code/gc_test.go:94)	NOP
	0x03a3 00931 (pointer_vs_value/code/gc_test.go:60)	PCDATA	$1, $-1
	0x03a3 00931 (pointer_vs_value/code/gc_test.go:60)	PCDATA	$0, $-1
	0x03a3 00931 (pointer_vs_value/code/gc_test.go:60)	CALL	runtime.morestack_noctxt(SB)
	0x03a8 00936 (pointer_vs_value/code/gc_test.go:60)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 00 f6 ff  eH..%....H..$...
	0x0010 ff 48 3b 41 10 0f 86 88 03 00 00 48 81 ec 80 0a  .H;A.......H....
	0x0020 00 00 48 89 ac 24 78 0a 00 00 48 8d ac 24 78 0a  ..H..$x...H..$x.
	0x0030 00 00 48 8d 05 00 00 00 00 48 89 04 24 48 c7 44  ..H......H..$H.D
	0x0040 24 08 01 00 00 00 e8 00 00 00 00 48 8b 44 24 10  $..........H.D$.
	0x0050 48 89 84 24 58 03 00 00 0f 57 c0 0f 11 84 24 80  H..$X....W....$.
	0x0060 03 00 00 48 8b 05 00 00 00 00 48 8d 0d 00 00 00  ...H......H.....
	0x0070 00 48 89 8c 24 a0 03 00 00 48 89 84 24 a8 03 00  .H..$....H..$...
	0x0080 00 48 89 8c 24 80 03 00 00 48 89 84 24 88 03 00  .H..$....H..$...
	0x0090 00 eb 00 0f 57 c0 0f 11 84 24 d0 03 00 00 48 c7  ....W....$....H.
	0x00a0 84 24 78 03 00 00 00 00 00 00 48 8b 84 24 88 03  .$x.......H..$..
	0x00b0 00 00 48 8b 8c 24 80 03 00 00 48 89 0c 24 48 89  ..H..$....H..$H.
	0x00c0 44 24 08 e8 00 00 00 00 48 8b 44 24 18 48 8b 4c  D$......H.D$.H.L
	0x00d0 24 10 48 89 8c 24 d0 03 00 00 48 89 84 24 d8 03  $.H..$....H..$..
	0x00e0 00 00 48 8b 44 24 20 48 89 84 24 78 03 00 00 48  ..H.D$ H..$x...H
	0x00f0 8b 84 24 d0 03 00 00 48 8b 8c 24 d8 03 00 00 48  ..$....H..$....H
	0x0100 89 84 24 90 03 00 00 48 89 8c 24 98 03 00 00 48  ..$....H..$....H
	0x0110 8b 84 24 78 03 00 00 48 89 84 24 50 03 00 00 c7  ..$x...H..$P....
	0x0120 04 24 08 00 00 00 48 8d 05 00 00 00 00 48 89 44  .$....H......H.D
	0x0130 24 08 48 8b 84 24 50 03 00 00 48 89 44 24 10 e8  $.H..$P...H.D$..
	0x0140 00 00 00 00 c7 04 24 18 00 00 00 48 8d 05 00 00  ......$....H....
	0x0150 00 00 48 89 44 24 08 48 8b 84 24 90 03 00 00 48  ..H.D$.H..$....H
	0x0160 8b 8c 24 98 03 00 00 48 89 44 24 10 48 89 4c 24  ..$....H.D$.H.L$
	0x0170 18 48 8b 84 24 58 03 00 00 48 89 44 24 20 e8 00  .H..$X...H.D$ ..
	0x0180 00 00 00 48 c7 84 24 48 03 00 00 00 00 00 00 48  ...H..$H.......H
	0x0190 8b 84 24 58 03 00 00 48 89 84 24 70 03 00 00 48  ..$X...H..$p...H
	0x01a0 8d bc 24 38 07 00 00 0f 57 c0 48 89 6c 24 f0 48  ..$8....W.H.l$.H
	0x01b0 8d 6c 24 f0 e8 00 00 00 00 48 8b 6d 00 eb 00 48  .l$......H.m...H
	0x01c0 8b 84 24 70 03 00 00 48 89 04 24 48 8d 84 24 38  ..$p...H..$H..$8
	0x01d0 07 00 00 48 89 44 24 08 e8 00 00 00 00 0f b6 44  ...H.D$........D
	0x01e0 24 10 88 84 24 47 03 00 00 84 c0 75 05 e9 86 00  $...$G.....u....
	0x01f0 00 00 48 8d bc 24 f8 03 00 00 48 8d b4 24 38 07  ..H..$....H..$8.
	0x0200 00 00 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00  ..H.l$.H.l$.....
	0x0210 00 48 8b 6d 00 48 8d bc 24 38 07 00 00 0f 57 c0  .H.m.H..$8....W.
	0x0220 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00 00 48  H.l$.H.l$......H
	0x0230 8b 6d 00 48 8b 94 24 88 0a 00 00 48 89 e7 48 8d  .m.H..$....H..H.
	0x0240 b4 24 f8 03 00 00 48 89 6c 24 f0 48 8d 6c 24 f0  .$....H.l$.H.l$.
	0x0250 e8 00 00 00 00 48 8b 6d 00 48 8b 02 ff d0 48 8b  .....H.m.H....H.
	0x0260 84 24 48 03 00 00 48 ff c0 48 89 84 24 48 03 00  .$H...H..H..$H..
	0x0270 00 eb 00 e9 47 ff ff ff 48 8b 84 24 48 03 00 00  ....G...H..$H...
	0x0280 48 89 04 24 e8 00 00 00 00 48 8b 44 24 08 48 89  H..$.....H.D$.H.
	0x0290 84 24 68 03 00 00 0f 57 c0 0f 11 84 24 c0 03 00  .$h....W....$...
	0x02a0 00 48 8d 84 24 c0 03 00 00 48 89 84 24 60 03 00  .H..$....H..$`..
	0x02b0 00 84 00 48 8b 8c 24 68 03 00 00 48 8d 15 00 00  ...H..$h...H....
	0x02c0 00 00 48 89 94 24 c0 03 00 00 48 89 8c 24 c8 03  ..H..$....H..$..
	0x02d0 00 00 84 00 eb 00 48 89 84 24 e0 03 00 00 48 c7  ......H..$....H.
	0x02e0 84 24 e8 03 00 00 01 00 00 00 48 c7 84 24 f0 03  .$........H..$..
	0x02f0 00 00 01 00 00 00 48 8d 05 00 00 00 00 48 89 04  ......H......H..
	0x0300 24 48 c7 44 24 08 10 00 00 00 48 8b 84 24 e0 03  $H.D$.....H..$..
	0x0310 00 00 48 89 44 24 10 48 c7 44 24 18 01 00 00 00  ..H.D$.H.D$.....
	0x0320 48 c7 44 24 20 01 00 00 00 e8 00 00 00 00 48 8b  H.D$ .........H.
	0x0330 44 24 28 48 8b 4c 24 30 48 89 84 24 b0 03 00 00  D$(H.L$0H..$....
	0x0340 48 89 8c 24 b8 03 00 00 e8 00 00 00 00 48 8b 84  H..$.........H..
	0x0350 24 b0 03 00 00 48 8b 8c 24 b8 03 00 00 48 89 04  $....H..$....H..
	0x0360 24 48 89 4c 24 08 e8 00 00 00 00 e8 00 00 00 00  $H.L$...........
	0x0370 e8 00 00 00 00 48 8b 84 24 90 0a 00 00 48 8b 8c  .....H..$....H..
	0x0380 24 98 0a 00 00 48 89 04 24 48 89 4c 24 08 e8 00  $....H..$H.L$...
	0x0390 00 00 00 48 8b ac 24 78 0a 00 00 48 81 c4 80 0a  ...H..$x...H....
	0x03a0 00 00 c3 e8 00 00 00 00 e9 53 fc ff ff           .........S...
	rel 5+4 t=16 TLS+0
	rel 53+4 t=15 type.chan "".tera+0
	rel 71+4 t=8 runtime.makechan+0
	rel 102+4 t=15 context.background+0
	rel 109+4 t=15 go.itab.*context.emptyCtx,context.Context+0
	rel 196+4 t=8 context.WithCancel+0
	rel 297+4 t=15 "".runRoutine.func1·f+0
	rel 320+4 t=8 runtime.newproc+0
	rel 334+4 t=15 "".runRoutine.func2·f+0
	rel 383+4 t=8 runtime.newproc+0
	rel 437+4 t=8 runtime.duffzero+57
	rel 473+4 t=8 runtime.chanrecv2+0
	rel 525+4 t=8 runtime.duffcopy+168
	rel 555+4 t=8 runtime.duffzero+57
	rel 593+4 t=8 runtime.duffcopy+168
	rel 604+0 t=11 +0
	rel 645+4 t=8 runtime.convT64+0
	rel 702+4 t=15 type.int+0
	rel 761+4 t=15 go.string."invocations = %v"+0
	rel 810+4 t=8 fmt.Sprintf+0
	rel 841+4 t=8 runtime.printlock+0
	rel 871+4 t=8 runtime.printstring+0
	rel 876+4 t=8 runtime.printnl+0
	rel 881+4 t=8 runtime.printunlock+0
	rel 911+4 t=8 "".trackGC+0
	rel 932+4 t=8 runtime.morestack_noctxt+0
"".runNative STEXT size=2201 args=0x18 locals=0x920
	0x0000 00000 (pointer_vs_value/code/gc_test.go:98)	TEXT	"".runNative(SB), ABIInternal, $2336-24
	0x0000 00000 (pointer_vs_value/code/gc_test.go:98)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/gc_test.go:98)	LEAQ	-2208(SP), AX
	0x0011 00017 (pointer_vs_value/code/gc_test.go:98)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/gc_test.go:98)	JLS	2191
	0x001b 00027 (pointer_vs_value/code/gc_test.go:98)	SUBQ	$2336, SP
	0x0022 00034 (pointer_vs_value/code/gc_test.go:98)	MOVQ	BP, 2328(SP)
	0x002a 00042 (pointer_vs_value/code/gc_test.go:98)	LEAQ	2328(SP), BP
	0x0032 00050 (pointer_vs_value/code/gc_test.go:98)	FUNCDATA	$0, gclocals·a83a7d8dc33985293a61cbf405370a84(SB)
	0x0032 00050 (pointer_vs_value/code/gc_test.go:98)	FUNCDATA	$1, gclocals·efa989d7313d98ac1fd2a354d97c2544(SB)
	0x0032 00050 (pointer_vs_value/code/gc_test.go:98)	FUNCDATA	$2, gclocals·f8bb915652378d427832a1dec04c2327(SB)
	0x0032 00050 (pointer_vs_value/code/gc_test.go:98)	FUNCDATA	$3, "".runNative.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/gc_test.go:100)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/gc_test.go:100)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/gc_test.go:100)	XORPS	X0, X0
	0x0035 00053 (pointer_vs_value/code/gc_test.go:100)	MOVUPS	X0, "".~R0+1056(SP)
	0x003d 00061 (<unknown line number>)	NOP
	0x003d 00061 ($GOROOT/src/context/context.go:206)	PCDATA	$0, $1
	0x003d 00061 ($GOROOT/src/context/context.go:206)	MOVQ	context.background(SB), AX
	0x0044 00068 (pointer_vs_value/code/gc_test.go:100)	PCDATA	$0, $2
	0x0044 00068 (pointer_vs_value/code/gc_test.go:100)	LEAQ	go.itab.*context.emptyCtx,context.Context(SB), CX
	0x004b 00075 (pointer_vs_value/code/gc_test.go:100)	MOVQ	CX, ""..autotmp_36+1248(SP)
	0x0053 00083 (pointer_vs_value/code/gc_test.go:100)	MOVQ	AX, ""..autotmp_36+1256(SP)
	0x005b 00091 (pointer_vs_value/code/gc_test.go:100)	PCDATA	$0, $1
	0x005b 00091 (pointer_vs_value/code/gc_test.go:100)	PCDATA	$1, $1
	0x005b 00091 (pointer_vs_value/code/gc_test.go:100)	MOVQ	CX, "".~R0+1056(SP)
	0x0063 00099 (pointer_vs_value/code/gc_test.go:100)	PCDATA	$0, $0
	0x0063 00099 (pointer_vs_value/code/gc_test.go:100)	MOVQ	AX, "".~R0+1064(SP)
	0x006b 00107 (pointer_vs_value/code/gc_test.go:100)	JMP	109
	0x006d 00109 (pointer_vs_value/code/gc_test.go:100)	XORPS	X0, X0
	0x0070 00112 (pointer_vs_value/code/gc_test.go:100)	MOVUPS	X0, ""..autotmp_28+1312(SP)
	0x0078 00120 (pointer_vs_value/code/gc_test.go:100)	MOVQ	$0, ""..autotmp_29+1000(SP)
	0x0084 00132 (pointer_vs_value/code/gc_test.go:100)	MOVQ	"".~R0+1056(SP), AX
	0x008c 00140 (pointer_vs_value/code/gc_test.go:100)	PCDATA	$0, $3
	0x008c 00140 (pointer_vs_value/code/gc_test.go:100)	PCDATA	$1, $0
	0x008c 00140 (pointer_vs_value/code/gc_test.go:100)	MOVQ	"".~R0+1064(SP), CX
	0x0094 00148 (pointer_vs_value/code/gc_test.go:100)	MOVQ	AX, (SP)
	0x0098 00152 (pointer_vs_value/code/gc_test.go:100)	PCDATA	$0, $0
	0x0098 00152 (pointer_vs_value/code/gc_test.go:100)	MOVQ	CX, 8(SP)
	0x009d 00157 (pointer_vs_value/code/gc_test.go:100)	CALL	context.WithCancel(SB)
	0x00a2 00162 (pointer_vs_value/code/gc_test.go:100)	PCDATA	$0, $1
	0x00a2 00162 (pointer_vs_value/code/gc_test.go:100)	MOVQ	24(SP), AX
	0x00a7 00167 (pointer_vs_value/code/gc_test.go:100)	MOVQ	16(SP), CX
	0x00ac 00172 (pointer_vs_value/code/gc_test.go:100)	PCDATA	$1, $2
	0x00ac 00172 (pointer_vs_value/code/gc_test.go:100)	MOVQ	CX, ""..autotmp_28+1312(SP)
	0x00b4 00180 (pointer_vs_value/code/gc_test.go:100)	PCDATA	$0, $0
	0x00b4 00180 (pointer_vs_value/code/gc_test.go:100)	MOVQ	AX, ""..autotmp_28+1320(SP)
	0x00bc 00188 (pointer_vs_value/code/gc_test.go:100)	PCDATA	$0, $1
	0x00bc 00188 (pointer_vs_value/code/gc_test.go:100)	MOVQ	32(SP), AX
	0x00c1 00193 (pointer_vs_value/code/gc_test.go:100)	PCDATA	$0, $0
	0x00c1 00193 (pointer_vs_value/code/gc_test.go:100)	PCDATA	$1, $3
	0x00c1 00193 (pointer_vs_value/code/gc_test.go:100)	MOVQ	AX, ""..autotmp_29+1000(SP)
	0x00c9 00201 (pointer_vs_value/code/gc_test.go:100)	PCDATA	$0, $1
	0x00c9 00201 (pointer_vs_value/code/gc_test.go:100)	MOVQ	""..autotmp_28+1320(SP), AX
	0x00d1 00209 (pointer_vs_value/code/gc_test.go:100)	PCDATA	$1, $4
	0x00d1 00209 (pointer_vs_value/code/gc_test.go:100)	MOVQ	""..autotmp_28+1312(SP), CX
	0x00d9 00217 (pointer_vs_value/code/gc_test.go:100)	PCDATA	$1, $5
	0x00d9 00217 (pointer_vs_value/code/gc_test.go:100)	MOVQ	CX, "".ctx+1120(SP)
	0x00e1 00225 (pointer_vs_value/code/gc_test.go:100)	PCDATA	$0, $0
	0x00e1 00225 (pointer_vs_value/code/gc_test.go:100)	MOVQ	AX, "".ctx+1128(SP)
	0x00e9 00233 (pointer_vs_value/code/gc_test.go:100)	PCDATA	$0, $1
	0x00e9 00233 (pointer_vs_value/code/gc_test.go:100)	PCDATA	$1, $6
	0x00e9 00233 (pointer_vs_value/code/gc_test.go:100)	MOVQ	""..autotmp_29+1000(SP), AX
	0x00f1 00241 (pointer_vs_value/code/gc_test.go:100)	PCDATA	$0, $0
	0x00f1 00241 (pointer_vs_value/code/gc_test.go:100)	PCDATA	$1, $7
	0x00f1 00241 (pointer_vs_value/code/gc_test.go:100)	MOVQ	AX, "".cnl+928(SP)
	0x00f9 00249 (pointer_vs_value/code/gc_test.go:102)	MOVL	$8, (SP)
	0x0100 00256 (pointer_vs_value/code/gc_test.go:102)	PCDATA	$0, $1
	0x0100 00256 (pointer_vs_value/code/gc_test.go:102)	LEAQ	"".runNative.func1·f(SB), AX
	0x0107 00263 (pointer_vs_value/code/gc_test.go:102)	PCDATA	$0, $0
	0x0107 00263 (pointer_vs_value/code/gc_test.go:102)	MOVQ	AX, 8(SP)
	0x010c 00268 (pointer_vs_value/code/gc_test.go:102)	PCDATA	$0, $1
	0x010c 00268 (pointer_vs_value/code/gc_test.go:102)	PCDATA	$1, $6
	0x010c 00268 (pointer_vs_value/code/gc_test.go:102)	MOVQ	"".cnl+928(SP), AX
	0x0114 00276 (pointer_vs_value/code/gc_test.go:102)	PCDATA	$0, $0
	0x0114 00276 (pointer_vs_value/code/gc_test.go:102)	MOVQ	AX, 16(SP)
	0x0119 00281 (pointer_vs_value/code/gc_test.go:102)	CALL	runtime.newproc(SB)
	0x011e 00286 (pointer_vs_value/code/gc_test.go:107)	MOVQ	$0, "".i+856(SP)
	0x012a 00298 (pointer_vs_value/code/gc_test.go:109)	CALL	time.Now(SB)
	0x012f 00303 (pointer_vs_value/code/gc_test.go:109)	PCDATA	$0, $1
	0x012f 00303 (pointer_vs_value/code/gc_test.go:109)	MOVQ	16(SP), AX
	0x0134 00308 (pointer_vs_value/code/gc_test.go:109)	MOVQ	8(SP), CX
	0x0139 00313 (pointer_vs_value/code/gc_test.go:109)	MOVQ	(SP), DX
	0x013d 00317 (pointer_vs_value/code/gc_test.go:109)	PCDATA	$1, $8
	0x013d 00317 (pointer_vs_value/code/gc_test.go:109)	MOVQ	DX, "".start+1344(SP)
	0x0145 00325 (pointer_vs_value/code/gc_test.go:109)	MOVQ	CX, "".start+1352(SP)
	0x014d 00333 (pointer_vs_value/code/gc_test.go:109)	PCDATA	$0, $0
	0x014d 00333 (pointer_vs_value/code/gc_test.go:109)	MOVQ	AX, "".start+1360(SP)
	0x0155 00341 (pointer_vs_value/code/gc_test.go:110)	JMP	343
	0x0157 00343 (pointer_vs_value/code/gc_test.go:112)	PCDATA	$0, $-2
	0x0157 00343 (pointer_vs_value/code/gc_test.go:112)	PCDATA	$1, $-2
	0x0157 00343 (pointer_vs_value/code/gc_test.go:112)	JMP	345
	0x0159 00345 (pointer_vs_value/code/gc_test.go:112)	PCDATA	$0, $0
	0x0159 00345 (pointer_vs_value/code/gc_test.go:112)	PCDATA	$1, $8
	0x0159 00345 (pointer_vs_value/code/gc_test.go:112)	MOVQ	"".ctx+1120(SP), AX
	0x0161 00353 (pointer_vs_value/code/gc_test.go:112)	TESTB	AL, (AX)
	0x0163 00355 (pointer_vs_value/code/gc_test.go:112)	MOVQ	32(AX), AX
	0x0167 00359 (pointer_vs_value/code/gc_test.go:112)	PCDATA	$0, $3
	0x0167 00359 (pointer_vs_value/code/gc_test.go:112)	MOVQ	"".ctx+1128(SP), CX
	0x016f 00367 (pointer_vs_value/code/gc_test.go:112)	PCDATA	$0, $0
	0x016f 00367 (pointer_vs_value/code/gc_test.go:112)	MOVQ	CX, (SP)
	0x0173 00371 (pointer_vs_value/code/gc_test.go:112)	CALL	AX
	0x0175 00373 (pointer_vs_value/code/gc_test.go:112)	PCDATA	$0, $1
	0x0175 00373 (pointer_vs_value/code/gc_test.go:112)	MOVQ	8(SP), AX
	0x017a 00378 (pointer_vs_value/code/gc_test.go:112)	MOVQ	AX, ""..autotmp_30+992(SP)
	0x0182 00386 (pointer_vs_value/code/gc_test.go:112)	MOVQ	$0, (SP)
	0x018a 00394 (pointer_vs_value/code/gc_test.go:112)	PCDATA	$0, $0
	0x018a 00394 (pointer_vs_value/code/gc_test.go:112)	MOVQ	AX, 8(SP)
	0x018f 00399 (pointer_vs_value/code/gc_test.go:112)	CALL	runtime.selectnbrecv(SB)
	0x0194 00404 (pointer_vs_value/code/gc_test.go:112)	CMPB	16(SP), $0
	0x0199 00409 (pointer_vs_value/code/gc_test.go:112)	JNE	416
	0x019b 00411 (pointer_vs_value/code/gc_test.go:112)	JMP	2083
	0x01a0 00416 (pointer_vs_value/code/gc_test.go:113)	PCDATA	$1, $9
	0x01a0 00416 (pointer_vs_value/code/gc_test.go:113)	CALL	time.Now(SB)
	0x01a5 00421 (pointer_vs_value/code/gc_test.go:113)	MOVQ	(SP), AX
	0x01a9 00425 (pointer_vs_value/code/gc_test.go:113)	MOVQ	8(SP), CX
	0x01ae 00430 (pointer_vs_value/code/gc_test.go:113)	PCDATA	$0, $4
	0x01ae 00430 (pointer_vs_value/code/gc_test.go:113)	MOVQ	16(SP), DX
	0x01b3 00435 (pointer_vs_value/code/gc_test.go:113)	MOVQ	AX, ""..autotmp_31+1440(SP)
	0x01bb 00443 (pointer_vs_value/code/gc_test.go:113)	MOVQ	CX, ""..autotmp_31+1448(SP)
	0x01c3 00451 (pointer_vs_value/code/gc_test.go:113)	MOVQ	DX, ""..autotmp_31+1456(SP)
	0x01cb 00459 (pointer_vs_value/code/gc_test.go:113)	MOVQ	AX, (SP)
	0x01cf 00463 (pointer_vs_value/code/gc_test.go:113)	MOVQ	CX, 8(SP)
	0x01d4 00468 (pointer_vs_value/code/gc_test.go:113)	PCDATA	$0, $0
	0x01d4 00468 (pointer_vs_value/code/gc_test.go:113)	MOVQ	DX, 16(SP)
	0x01d9 00473 (pointer_vs_value/code/gc_test.go:113)	MOVQ	"".start+1344(SP), AX
	0x01e1 00481 (pointer_vs_value/code/gc_test.go:113)	MOVQ	"".start+1352(SP), CX
	0x01e9 00489 (pointer_vs_value/code/gc_test.go:113)	PCDATA	$0, $4
	0x01e9 00489 (pointer_vs_value/code/gc_test.go:113)	PCDATA	$1, $10
	0x01e9 00489 (pointer_vs_value/code/gc_test.go:113)	MOVQ	"".start+1360(SP), DX
	0x01f1 00497 (pointer_vs_value/code/gc_test.go:113)	MOVQ	AX, 24(SP)
	0x01f6 00502 (pointer_vs_value/code/gc_test.go:113)	MOVQ	CX, 32(SP)
	0x01fb 00507 (pointer_vs_value/code/gc_test.go:113)	PCDATA	$0, $0
	0x01fb 00507 (pointer_vs_value/code/gc_test.go:113)	MOVQ	DX, 40(SP)
	0x0200 00512 (pointer_vs_value/code/gc_test.go:113)	CALL	time.Time.Sub(SB)
	0x0205 00517 (pointer_vs_value/code/gc_test.go:113)	MOVQ	48(SP), AX
	0x020a 00522 (pointer_vs_value/code/gc_test.go:113)	MOVQ	AX, time.d+872(SP)
	0x0212 00530 (pointer_vs_value/code/gc_test.go:113)	MOVQ	$0, "".~R0+832(SP)
	0x021e 00542 (<unknown line number>)	NOP
	0x021e 00542 ($GOROOT/src/time/time.go:790)	MOVQ	time.d+872(SP), AX
	0x0226 00550 ($GOROOT/src/time/time.go:790)	MOVQ	AX, CX
	0x0229 00553 ($GOROOT/src/time/time.go:790)	MOVQ	$4835703278458516699, AX
	0x0233 00563 ($GOROOT/src/time/time.go:790)	IMULQ	CX
	0x0236 00566 ($GOROOT/src/time/time.go:790)	SARQ	$18, DX
	0x023a 00570 ($GOROOT/src/time/time.go:790)	SARQ	$63, CX
	0x023e 00574 ($GOROOT/src/time/time.go:790)	SUBQ	CX, DX
	0x0241 00577 (pointer_vs_value/code/gc_test.go:113)	MOVQ	DX, ""..autotmp_37+904(SP)
	0x0249 00585 (pointer_vs_value/code/gc_test.go:113)	MOVQ	DX, "".~R0+832(SP)
	0x0251 00593 (pointer_vs_value/code/gc_test.go:113)	JMP	595
	0x0253 00595 (pointer_vs_value/code/gc_test.go:113)	MOVQ	DX, "".duration+864(SP)
	0x025b 00603 (pointer_vs_value/code/gc_test.go:114)	MOVQ	DX, (SP)
	0x025f 00607 (pointer_vs_value/code/gc_test.go:114)	CALL	runtime.convT64(SB)
	0x0264 00612 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $1
	0x0264 00612 (pointer_vs_value/code/gc_test.go:114)	MOVQ	8(SP), AX
	0x0269 00617 (pointer_vs_value/code/gc_test.go:114)	MOVQ	AX, ""..autotmp_39+984(SP)
	0x0271 00625 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $2
	0x0271 00625 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $11
	0x0271 00625 (pointer_vs_value/code/gc_test.go:114)	LEAQ	type.int64(SB), CX
	0x0278 00632 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $1
	0x0278 00632 (pointer_vs_value/code/gc_test.go:114)	MOVQ	CX, ""..autotmp_38+1232(SP)
	0x0280 00640 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $0
	0x0280 00640 (pointer_vs_value/code/gc_test.go:114)	MOVQ	AX, ""..autotmp_38+1240(SP)
	0x0288 00648 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $1
	0x0288 00648 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $12
	0x0288 00648 (pointer_vs_value/code/gc_test.go:114)	LEAQ	go.string."Time passed [%v]"(SB), AX
	0x028f 00655 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $0
	0x028f 00655 (pointer_vs_value/code/gc_test.go:114)	MOVQ	AX, fmt.format+1072(SP)
	0x0297 00663 (pointer_vs_value/code/gc_test.go:114)	MOVQ	$16, fmt.format+1080(SP)
	0x02a3 00675 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $1
	0x02a3 00675 (pointer_vs_value/code/gc_test.go:114)	MOVQ	""..autotmp_38+1240(SP), AX
	0x02ab 00683 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $13
	0x02ab 00683 (pointer_vs_value/code/gc_test.go:114)	MOVQ	""..autotmp_38+1232(SP), CX
	0x02b3 00691 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $14
	0x02b3 00691 (pointer_vs_value/code/gc_test.go:114)	MOVQ	CX, "".~arg1+1008(SP)
	0x02bb 00699 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $0
	0x02bb 00699 (pointer_vs_value/code/gc_test.go:114)	MOVQ	AX, "".~arg1+1016(SP)
	0x02c3 00707 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $15
	0x02c3 00707 (pointer_vs_value/code/gc_test.go:114)	XORPS	X0, X0
	0x02c6 00710 (pointer_vs_value/code/gc_test.go:114)	MOVUPS	X0, ""..autotmp_42+1200(SP)
	0x02ce 00718 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $1
	0x02ce 00718 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $14
	0x02ce 00718 (pointer_vs_value/code/gc_test.go:114)	LEAQ	""..autotmp_42+1200(SP), AX
	0x02d6 00726 (pointer_vs_value/code/gc_test.go:114)	MOVQ	AX, ""..autotmp_40+976(SP)
	0x02de 00734 (pointer_vs_value/code/gc_test.go:114)	TESTB	AL, (AX)
	0x02e0 00736 (pointer_vs_value/code/gc_test.go:114)	MOVQ	"".~arg1+1008(SP), CX
	0x02e8 00744 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $5
	0x02e8 00744 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $13
	0x02e8 00744 (pointer_vs_value/code/gc_test.go:114)	MOVQ	"".~arg1+1016(SP), DX
	0x02f0 00752 (pointer_vs_value/code/gc_test.go:114)	MOVQ	CX, ""..autotmp_42+1200(SP)
	0x02f8 00760 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $1
	0x02f8 00760 (pointer_vs_value/code/gc_test.go:114)	MOVQ	DX, ""..autotmp_42+1208(SP)
	0x0300 00768 (pointer_vs_value/code/gc_test.go:114)	TESTB	AL, (AX)
	0x0302 00770 (pointer_vs_value/code/gc_test.go:114)	JMP	772
	0x0304 00772 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $0
	0x0304 00772 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $16
	0x0304 00772 (pointer_vs_value/code/gc_test.go:114)	MOVQ	AX, fmt.a+1368(SP)
	0x030c 00780 (pointer_vs_value/code/gc_test.go:114)	MOVQ	$1, fmt.a+1376(SP)
	0x0318 00792 (pointer_vs_value/code/gc_test.go:114)	MOVQ	$1, fmt.a+1384(SP)
	0x0324 00804 (pointer_vs_value/code/gc_test.go:114)	MOVQ	$0, fmt.n+848(SP)
	0x0330 00816 (pointer_vs_value/code/gc_test.go:114)	XORPS	X0, X0
	0x0333 00819 (pointer_vs_value/code/gc_test.go:114)	MOVUPS	X0, fmt.err+1104(SP)
	0x033b 00827 (<unknown line number>)	NOP
	0x033b 00827 (pointer_vs_value/code/gc_test.go:76)	MOVQ	$0, fmt..autotmp_4+896(SP)
	0x0347 00839 (pointer_vs_value/code/gc_test.go:76)	XORPS	X0, X0
	0x034a 00842 (pointer_vs_value/code/gc_test.go:76)	MOVUPS	X0, fmt..autotmp_5+1136(SP)
	0x0352 00850 ($GOROOT/src/fmt/print.go:213)	XORPS	X0, X0
	0x0355 00853 ($GOROOT/src/fmt/print.go:213)	MOVUPS	X0, ""..autotmp_33+1296(SP)
	0x035d 00861 ($GOROOT/src/fmt/print.go:213)	PCDATA	$0, $1
	0x035d 00861 ($GOROOT/src/fmt/print.go:213)	MOVQ	os.Stdout(SB), AX
	0x0364 00868 ($GOROOT/src/fmt/print.go:213)	PCDATA	$0, $2
	0x0364 00868 ($GOROOT/src/fmt/print.go:213)	LEAQ	go.itab.*os.File,io.Writer(SB), CX
	0x036b 00875 ($GOROOT/src/fmt/print.go:213)	PCDATA	$0, $1
	0x036b 00875 ($GOROOT/src/fmt/print.go:213)	MOVQ	CX, (SP)
	0x036f 00879 ($GOROOT/src/fmt/print.go:213)	PCDATA	$0, $0
	0x036f 00879 ($GOROOT/src/fmt/print.go:213)	MOVQ	AX, 8(SP)
	0x0374 00884 ($GOROOT/src/fmt/print.go:213)	MOVQ	fmt.format+1080(SP), AX
	0x037c 00892 ($GOROOT/src/fmt/print.go:213)	PCDATA	$0, $3
	0x037c 00892 ($GOROOT/src/fmt/print.go:213)	PCDATA	$1, $17
	0x037c 00892 ($GOROOT/src/fmt/print.go:213)	MOVQ	fmt.format+1072(SP), CX
	0x0384 00900 ($GOROOT/src/fmt/print.go:213)	PCDATA	$0, $0
	0x0384 00900 ($GOROOT/src/fmt/print.go:213)	MOVQ	CX, 16(SP)
	0x0389 00905 ($GOROOT/src/fmt/print.go:213)	MOVQ	AX, 24(SP)
	0x038e 00910 ($GOROOT/src/fmt/print.go:213)	MOVQ	fmt.a+1384(SP), AX
	0x0396 00918 ($GOROOT/src/fmt/print.go:213)	MOVQ	fmt.a+1376(SP), CX
	0x039e 00926 ($GOROOT/src/fmt/print.go:213)	PCDATA	$0, $4
	0x039e 00926 ($GOROOT/src/fmt/print.go:213)	PCDATA	$1, $10
	0x039e 00926 ($GOROOT/src/fmt/print.go:213)	MOVQ	fmt.a+1368(SP), DX
	0x03a6 00934 ($GOROOT/src/fmt/print.go:213)	PCDATA	$0, $0
	0x03a6 00934 ($GOROOT/src/fmt/print.go:213)	MOVQ	DX, 32(SP)
	0x03ab 00939 ($GOROOT/src/fmt/print.go:213)	MOVQ	CX, 40(SP)
	0x03b0 00944 ($GOROOT/src/fmt/print.go:213)	MOVQ	AX, 48(SP)
	0x03b5 00949 ($GOROOT/src/fmt/print.go:213)	CALL	fmt.Fprintf(SB)
	0x03ba 00954 ($GOROOT/src/fmt/print.go:213)	MOVQ	56(SP), AX
	0x03bf 00959 ($GOROOT/src/fmt/print.go:213)	MOVQ	AX, ""..autotmp_32+912(SP)
	0x03c7 00967 ($GOROOT/src/fmt/print.go:213)	PCDATA	$0, $1
	0x03c7 00967 ($GOROOT/src/fmt/print.go:213)	MOVQ	72(SP), AX
	0x03cc 00972 ($GOROOT/src/fmt/print.go:213)	MOVQ	64(SP), CX
	0x03d1 00977 ($GOROOT/src/fmt/print.go:213)	PCDATA	$1, $18
	0x03d1 00977 ($GOROOT/src/fmt/print.go:213)	MOVQ	CX, ""..autotmp_33+1296(SP)
	0x03d9 00985 ($GOROOT/src/fmt/print.go:213)	PCDATA	$0, $0
	0x03d9 00985 ($GOROOT/src/fmt/print.go:213)	MOVQ	AX, ""..autotmp_33+1304(SP)
	0x03e1 00993 ($GOROOT/src/fmt/print.go:213)	MOVQ	""..autotmp_32+912(SP), AX
	0x03e9 01001 ($GOROOT/src/fmt/print.go:213)	MOVQ	AX, fmt..autotmp_4+896(SP)
	0x03f1 01009 ($GOROOT/src/fmt/print.go:213)	MOVQ	""..autotmp_33+1296(SP), AX
	0x03f9 01017 ($GOROOT/src/fmt/print.go:213)	PCDATA	$0, $3
	0x03f9 01017 ($GOROOT/src/fmt/print.go:213)	PCDATA	$1, $10
	0x03f9 01017 ($GOROOT/src/fmt/print.go:213)	MOVQ	""..autotmp_33+1304(SP), CX
	0x0401 01025 ($GOROOT/src/fmt/print.go:213)	PCDATA	$1, $19
	0x0401 01025 ($GOROOT/src/fmt/print.go:213)	MOVQ	AX, fmt..autotmp_5+1136(SP)
	0x0409 01033 ($GOROOT/src/fmt/print.go:213)	PCDATA	$0, $0
	0x0409 01033 ($GOROOT/src/fmt/print.go:213)	MOVQ	CX, fmt..autotmp_5+1144(SP)
	0x0411 01041 (pointer_vs_value/code/gc_test.go:114)	MOVQ	fmt..autotmp_4+896(SP), AX
	0x0419 01049 (pointer_vs_value/code/gc_test.go:114)	MOVQ	AX, fmt.n+848(SP)
	0x0421 01057 (pointer_vs_value/code/gc_test.go:114)	MOVQ	fmt..autotmp_5+1136(SP), AX
	0x0429 01065 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $3
	0x0429 01065 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $10
	0x0429 01065 (pointer_vs_value/code/gc_test.go:114)	MOVQ	fmt..autotmp_5+1144(SP), CX
	0x0431 01073 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $20
	0x0431 01073 (pointer_vs_value/code/gc_test.go:114)	MOVQ	AX, fmt.err+1104(SP)
	0x0439 01081 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $0
	0x0439 01081 (pointer_vs_value/code/gc_test.go:114)	MOVQ	CX, fmt.err+1112(SP)
	0x0441 01089 (pointer_vs_value/code/gc_test.go:114)	JMP	1091
	0x0443 01091 (pointer_vs_value/code/gc_test.go:114)	MOVQ	fmt.n+848(SP), AX
	0x044b 01099 (pointer_vs_value/code/gc_test.go:114)	MOVQ	AX, ""..autotmp_43+888(SP)
	0x0453 01107 (pointer_vs_value/code/gc_test.go:114)	MOVQ	AX, ""..autotmp_9+880(SP)
	0x045b 01115 (pointer_vs_value/code/gc_test.go:114)	MOVQ	fmt.err+1104(SP), AX
	0x0463 01123 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $3
	0x0463 01123 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $10
	0x0463 01123 (pointer_vs_value/code/gc_test.go:114)	MOVQ	fmt.err+1112(SP), CX
	0x046b 01131 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $21
	0x046b 01131 (pointer_vs_value/code/gc_test.go:114)	MOVQ	AX, ""..autotmp_10+1328(SP)
	0x0473 01139 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $0
	0x0473 01139 (pointer_vs_value/code/gc_test.go:114)	MOVQ	CX, ""..autotmp_10+1336(SP)
	0x047b 01147 (pointer_vs_value/code/gc_test.go:114)	MOVQ	""..autotmp_9+880(SP), AX
	0x0483 01155 (pointer_vs_value/code/gc_test.go:114)	MOVQ	AX, (SP)
	0x0487 01159 (pointer_vs_value/code/gc_test.go:114)	CALL	runtime.convT64(SB)
	0x048c 01164 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $1
	0x048c 01164 (pointer_vs_value/code/gc_test.go:114)	MOVQ	8(SP), AX
	0x0491 01169 (pointer_vs_value/code/gc_test.go:114)	MOVQ	AX, ""..autotmp_45+968(SP)
	0x0499 01177 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $2
	0x0499 01177 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $22
	0x0499 01177 (pointer_vs_value/code/gc_test.go:114)	LEAQ	type.int(SB), CX
	0x04a0 01184 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $1
	0x04a0 01184 (pointer_vs_value/code/gc_test.go:114)	MOVQ	CX, ""..autotmp_44+1184(SP)
	0x04a8 01192 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $0
	0x04a8 01192 (pointer_vs_value/code/gc_test.go:114)	MOVQ	AX, ""..autotmp_44+1192(SP)
	0x04b0 01200 (pointer_vs_value/code/gc_test.go:114)	MOVQ	""..autotmp_10+1328(SP), AX
	0x04b8 01208 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $3
	0x04b8 01208 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $23
	0x04b8 01208 (pointer_vs_value/code/gc_test.go:114)	MOVQ	""..autotmp_10+1336(SP), CX
	0x04c0 01216 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $24
	0x04c0 01216 (pointer_vs_value/code/gc_test.go:114)	MOVQ	AX, ""..autotmp_47+1152(SP)
	0x04c8 01224 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $0
	0x04c8 01224 (pointer_vs_value/code/gc_test.go:114)	MOVQ	CX, ""..autotmp_47+1160(SP)
	0x04d0 01232 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $25
	0x04d0 01232 (pointer_vs_value/code/gc_test.go:114)	MOVQ	AX, ""..autotmp_48+960(SP)
	0x04d8 01240 (pointer_vs_value/code/gc_test.go:114)	CMPQ	""..autotmp_48+960(SP), $0
	0x04e1 01249 (pointer_vs_value/code/gc_test.go:114)	JNE	1256
	0x04e3 01251 (pointer_vs_value/code/gc_test.go:114)	JMP	2078
	0x04e8 01256 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $24
	0x04e8 01256 (pointer_vs_value/code/gc_test.go:114)	TESTB	AL, (AX)
	0x04ea 01258 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $1
	0x04ea 01258 (pointer_vs_value/code/gc_test.go:114)	MOVQ	8(AX), AX
	0x04ee 01262 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $0
	0x04ee 01262 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $25
	0x04ee 01262 (pointer_vs_value/code/gc_test.go:114)	MOVQ	AX, ""..autotmp_48+960(SP)
	0x04f6 01270 (pointer_vs_value/code/gc_test.go:114)	JMP	1272
	0x04f8 01272 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $1
	0x04f8 01272 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $24
	0x04f8 01272 (pointer_vs_value/code/gc_test.go:114)	MOVQ	""..autotmp_48+960(SP), AX
	0x0500 01280 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $2
	0x0500 01280 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $23
	0x0500 01280 (pointer_vs_value/code/gc_test.go:114)	MOVQ	""..autotmp_47+1160(SP), CX
	0x0508 01288 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $3
	0x0508 01288 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $26
	0x0508 01288 (pointer_vs_value/code/gc_test.go:114)	MOVQ	AX, ""..autotmp_46+1168(SP)
	0x0510 01296 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $0
	0x0510 01296 (pointer_vs_value/code/gc_test.go:114)	MOVQ	CX, ""..autotmp_46+1176(SP)
	0x0518 01304 (pointer_vs_value/code/gc_test.go:114)	MOVQ	""..autotmp_44+1184(SP), AX
	0x0520 01312 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $3
	0x0520 01312 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $27
	0x0520 01312 (pointer_vs_value/code/gc_test.go:114)	MOVQ	""..autotmp_44+1192(SP), CX
	0x0528 01320 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $28
	0x0528 01320 (pointer_vs_value/code/gc_test.go:114)	MOVQ	AX, "".~arg0+1040(SP)
	0x0530 01328 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $0
	0x0530 01328 (pointer_vs_value/code/gc_test.go:114)	MOVQ	CX, "".~arg0+1048(SP)
	0x0538 01336 (pointer_vs_value/code/gc_test.go:114)	MOVQ	""..autotmp_46+1168(SP), AX
	0x0540 01344 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $3
	0x0540 01344 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $29
	0x0540 01344 (pointer_vs_value/code/gc_test.go:114)	MOVQ	""..autotmp_46+1176(SP), CX
	0x0548 01352 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $30
	0x0548 01352 (pointer_vs_value/code/gc_test.go:114)	MOVQ	AX, "".~arg1+1024(SP)
	0x0550 01360 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $0
	0x0550 01360 (pointer_vs_value/code/gc_test.go:114)	MOVQ	CX, "".~arg1+1032(SP)
	0x0558 01368 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $31
	0x0558 01368 (pointer_vs_value/code/gc_test.go:114)	XORPS	X0, X0
	0x055b 01371 (pointer_vs_value/code/gc_test.go:114)	MOVUPS	X0, ""..autotmp_51+1464(SP)
	0x0563 01379 (pointer_vs_value/code/gc_test.go:114)	XORPS	X0, X0
	0x0566 01382 (pointer_vs_value/code/gc_test.go:114)	MOVUPS	X0, ""..autotmp_51+1480(SP)
	0x056e 01390 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $1
	0x056e 01390 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $30
	0x056e 01390 (pointer_vs_value/code/gc_test.go:114)	LEAQ	""..autotmp_51+1464(SP), AX
	0x0576 01398 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $32
	0x0576 01398 (pointer_vs_value/code/gc_test.go:114)	MOVQ	AX, ""..autotmp_49+952(SP)
	0x057e 01406 (pointer_vs_value/code/gc_test.go:114)	TESTB	AL, (AX)
	0x0580 01408 (pointer_vs_value/code/gc_test.go:114)	MOVQ	"".~arg0+1040(SP), CX
	0x0588 01416 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $5
	0x0588 01416 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $33
	0x0588 01416 (pointer_vs_value/code/gc_test.go:114)	MOVQ	"".~arg0+1048(SP), DX
	0x0590 01424 (pointer_vs_value/code/gc_test.go:114)	MOVQ	CX, ""..autotmp_51+1464(SP)
	0x0598 01432 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $1
	0x0598 01432 (pointer_vs_value/code/gc_test.go:114)	MOVQ	DX, ""..autotmp_51+1472(SP)
	0x05a0 01440 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $0
	0x05a0 01440 (pointer_vs_value/code/gc_test.go:114)	TESTB	AL, (AX)
	0x05a2 01442 (pointer_vs_value/code/gc_test.go:114)	MOVQ	"".~arg1+1024(SP), AX
	0x05aa 01450 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $3
	0x05aa 01450 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $34
	0x05aa 01450 (pointer_vs_value/code/gc_test.go:114)	MOVQ	"".~arg1+1032(SP), CX
	0x05b2 01458 (pointer_vs_value/code/gc_test.go:114)	MOVQ	AX, ""..autotmp_51+1480(SP)
	0x05ba 01466 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $0
	0x05ba 01466 (pointer_vs_value/code/gc_test.go:114)	MOVQ	CX, ""..autotmp_51+1488(SP)
	0x05c2 01474 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $1
	0x05c2 01474 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $10
	0x05c2 01474 (pointer_vs_value/code/gc_test.go:114)	MOVQ	""..autotmp_49+952(SP), AX
	0x05ca 01482 (pointer_vs_value/code/gc_test.go:114)	TESTB	AL, (AX)
	0x05cc 01484 (pointer_vs_value/code/gc_test.go:114)	JMP	1486
	0x05ce 01486 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $0
	0x05ce 01486 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $35
	0x05ce 01486 (pointer_vs_value/code/gc_test.go:114)	MOVQ	AX, fmt.a+1392(SP)
	0x05d6 01494 (pointer_vs_value/code/gc_test.go:114)	MOVQ	$2, fmt.a+1400(SP)
	0x05e2 01506 (pointer_vs_value/code/gc_test.go:114)	MOVQ	$2, fmt.a+1408(SP)
	0x05ee 01518 (pointer_vs_value/code/gc_test.go:114)	MOVQ	$0, fmt.n+840(SP)
	0x05fa 01530 (pointer_vs_value/code/gc_test.go:114)	XORPS	X0, X0
	0x05fd 01533 (pointer_vs_value/code/gc_test.go:114)	MOVUPS	X0, fmt.err+1088(SP)
	0x0605 01541 (<unknown line number>)	NOP
	0x0605 01541 (pointer_vs_value/code/gc_test.go:76)	MOVQ	$0, fmt..autotmp_3+920(SP)
	0x0611 01553 (pointer_vs_value/code/gc_test.go:76)	XORPS	X0, X0
	0x0614 01556 (pointer_vs_value/code/gc_test.go:76)	MOVUPS	X0, fmt..autotmp_4+1216(SP)
	0x061c 01564 ($GOROOT/src/fmt/print.go:274)	XORPS	X0, X0
	0x061f 01567 ($GOROOT/src/fmt/print.go:274)	MOVUPS	X0, ""..autotmp_33+1296(SP)
	0x0627 01575 ($GOROOT/src/fmt/print.go:274)	PCDATA	$0, $1
	0x0627 01575 ($GOROOT/src/fmt/print.go:274)	MOVQ	os.Stdout(SB), AX
	0x062e 01582 ($GOROOT/src/fmt/print.go:274)	PCDATA	$0, $2
	0x062e 01582 ($GOROOT/src/fmt/print.go:274)	LEAQ	go.itab.*os.File,io.Writer(SB), CX
	0x0635 01589 ($GOROOT/src/fmt/print.go:274)	PCDATA	$0, $1
	0x0635 01589 ($GOROOT/src/fmt/print.go:274)	MOVQ	CX, (SP)
	0x0639 01593 ($GOROOT/src/fmt/print.go:274)	PCDATA	$0, $0
	0x0639 01593 ($GOROOT/src/fmt/print.go:274)	MOVQ	AX, 8(SP)
	0x063e 01598 ($GOROOT/src/fmt/print.go:274)	PCDATA	$0, $1
	0x063e 01598 ($GOROOT/src/fmt/print.go:274)	MOVQ	fmt.a+1392(SP), AX
	0x0646 01606 ($GOROOT/src/fmt/print.go:274)	MOVQ	fmt.a+1400(SP), CX
	0x064e 01614 ($GOROOT/src/fmt/print.go:274)	PCDATA	$1, $10
	0x064e 01614 ($GOROOT/src/fmt/print.go:274)	MOVQ	fmt.a+1408(SP), DX
	0x0656 01622 ($GOROOT/src/fmt/print.go:274)	PCDATA	$0, $0
	0x0656 01622 ($GOROOT/src/fmt/print.go:274)	MOVQ	AX, 16(SP)
	0x065b 01627 ($GOROOT/src/fmt/print.go:274)	MOVQ	CX, 24(SP)
	0x0660 01632 ($GOROOT/src/fmt/print.go:274)	MOVQ	DX, 32(SP)
	0x0665 01637 ($GOROOT/src/fmt/print.go:274)	CALL	fmt.Fprintln(SB)
	0x066a 01642 ($GOROOT/src/fmt/print.go:274)	MOVQ	40(SP), AX
	0x066f 01647 ($GOROOT/src/fmt/print.go:274)	MOVQ	AX, ""..autotmp_32+912(SP)
	0x0677 01655 ($GOROOT/src/fmt/print.go:274)	MOVQ	48(SP), AX
	0x067c 01660 ($GOROOT/src/fmt/print.go:274)	PCDATA	$0, $3
	0x067c 01660 ($GOROOT/src/fmt/print.go:274)	MOVQ	56(SP), CX
	0x0681 01665 ($GOROOT/src/fmt/print.go:274)	PCDATA	$1, $18
	0x0681 01665 ($GOROOT/src/fmt/print.go:274)	MOVQ	AX, ""..autotmp_33+1296(SP)
	0x0689 01673 ($GOROOT/src/fmt/print.go:274)	PCDATA	$0, $0
	0x0689 01673 ($GOROOT/src/fmt/print.go:274)	MOVQ	CX, ""..autotmp_33+1304(SP)
	0x0691 01681 ($GOROOT/src/fmt/print.go:274)	MOVQ	""..autotmp_32+912(SP), AX
	0x0699 01689 ($GOROOT/src/fmt/print.go:274)	MOVQ	AX, fmt..autotmp_3+920(SP)
	0x06a1 01697 ($GOROOT/src/fmt/print.go:274)	MOVQ	""..autotmp_33+1296(SP), AX
	0x06a9 01705 ($GOROOT/src/fmt/print.go:274)	PCDATA	$0, $3
	0x06a9 01705 ($GOROOT/src/fmt/print.go:274)	PCDATA	$1, $10
	0x06a9 01705 ($GOROOT/src/fmt/print.go:274)	MOVQ	""..autotmp_33+1304(SP), CX
	0x06b1 01713 ($GOROOT/src/fmt/print.go:274)	PCDATA	$1, $36
	0x06b1 01713 ($GOROOT/src/fmt/print.go:274)	MOVQ	AX, fmt..autotmp_4+1216(SP)
	0x06b9 01721 ($GOROOT/src/fmt/print.go:274)	PCDATA	$0, $0
	0x06b9 01721 ($GOROOT/src/fmt/print.go:274)	MOVQ	CX, fmt..autotmp_4+1224(SP)
	0x06c1 01729 (pointer_vs_value/code/gc_test.go:114)	MOVQ	fmt..autotmp_3+920(SP), AX
	0x06c9 01737 (pointer_vs_value/code/gc_test.go:114)	MOVQ	AX, fmt.n+840(SP)
	0x06d1 01745 (pointer_vs_value/code/gc_test.go:114)	MOVQ	fmt..autotmp_4+1216(SP), AX
	0x06d9 01753 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $3
	0x06d9 01753 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $10
	0x06d9 01753 (pointer_vs_value/code/gc_test.go:114)	MOVQ	fmt..autotmp_4+1224(SP), CX
	0x06e1 01761 (pointer_vs_value/code/gc_test.go:114)	MOVQ	AX, fmt.err+1088(SP)
	0x06e9 01769 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $0
	0x06e9 01769 (pointer_vs_value/code/gc_test.go:114)	MOVQ	CX, fmt.err+1096(SP)
	0x06f1 01777 (pointer_vs_value/code/gc_test.go:114)	JMP	1779
	0x06f3 01779 (pointer_vs_value/code/gc_test.go:115)	MOVQ	"".i+856(SP), AX
	0x06fb 01787 (pointer_vs_value/code/gc_test.go:115)	MOVQ	AX, (SP)
	0x06ff 01791 (pointer_vs_value/code/gc_test.go:115)	CALL	runtime.convT64(SB)
	0x0704 01796 (pointer_vs_value/code/gc_test.go:115)	PCDATA	$0, $1
	0x0704 01796 (pointer_vs_value/code/gc_test.go:115)	MOVQ	8(SP), AX
	0x0709 01801 (pointer_vs_value/code/gc_test.go:115)	PCDATA	$0, $0
	0x0709 01801 (pointer_vs_value/code/gc_test.go:115)	PCDATA	$1, $37
	0x0709 01801 (pointer_vs_value/code/gc_test.go:115)	MOVQ	AX, ""..autotmp_52+944(SP)
	0x0711 01809 (pointer_vs_value/code/gc_test.go:115)	PCDATA	$1, $38
	0x0711 01809 (pointer_vs_value/code/gc_test.go:115)	XORPS	X0, X0
	0x0714 01812 (pointer_vs_value/code/gc_test.go:115)	MOVUPS	X0, ""..autotmp_34+1280(SP)
	0x071c 01820 (pointer_vs_value/code/gc_test.go:115)	PCDATA	$0, $1
	0x071c 01820 (pointer_vs_value/code/gc_test.go:115)	PCDATA	$1, $37
	0x071c 01820 (pointer_vs_value/code/gc_test.go:115)	LEAQ	""..autotmp_34+1280(SP), AX
	0x0724 01828 (pointer_vs_value/code/gc_test.go:115)	MOVQ	AX, ""..autotmp_54+936(SP)
	0x072c 01836 (pointer_vs_value/code/gc_test.go:115)	TESTB	AL, (AX)
	0x072e 01838 (pointer_vs_value/code/gc_test.go:115)	PCDATA	$0, $2
	0x072e 01838 (pointer_vs_value/code/gc_test.go:115)	PCDATA	$1, $10
	0x072e 01838 (pointer_vs_value/code/gc_test.go:115)	MOVQ	""..autotmp_52+944(SP), CX
	0x0736 01846 (pointer_vs_value/code/gc_test.go:115)	PCDATA	$0, $6
	0x0736 01846 (pointer_vs_value/code/gc_test.go:115)	LEAQ	type.int(SB), DX
	0x073d 01853 (pointer_vs_value/code/gc_test.go:115)	PCDATA	$0, $2
	0x073d 01853 (pointer_vs_value/code/gc_test.go:115)	MOVQ	DX, ""..autotmp_34+1280(SP)
	0x0745 01861 (pointer_vs_value/code/gc_test.go:115)	PCDATA	$0, $1
	0x0745 01861 (pointer_vs_value/code/gc_test.go:115)	MOVQ	CX, ""..autotmp_34+1288(SP)
	0x074d 01869 (pointer_vs_value/code/gc_test.go:115)	TESTB	AL, (AX)
	0x074f 01871 (pointer_vs_value/code/gc_test.go:115)	JMP	1873
	0x0751 01873 (pointer_vs_value/code/gc_test.go:115)	PCDATA	$0, $0
	0x0751 01873 (pointer_vs_value/code/gc_test.go:115)	PCDATA	$1, $39
	0x0751 01873 (pointer_vs_value/code/gc_test.go:115)	MOVQ	AX, ""..autotmp_53+1416(SP)
	0x0759 01881 (pointer_vs_value/code/gc_test.go:115)	MOVQ	$1, ""..autotmp_53+1424(SP)
	0x0765 01893 (pointer_vs_value/code/gc_test.go:115)	MOVQ	$1, ""..autotmp_53+1432(SP)
	0x0771 01905 (pointer_vs_value/code/gc_test.go:115)	PCDATA	$0, $1
	0x0771 01905 (pointer_vs_value/code/gc_test.go:115)	LEAQ	go.string."invocations = %v"(SB), AX
	0x0778 01912 (pointer_vs_value/code/gc_test.go:115)	PCDATA	$0, $0
	0x0778 01912 (pointer_vs_value/code/gc_test.go:115)	MOVQ	AX, (SP)
	0x077c 01916 (pointer_vs_value/code/gc_test.go:115)	MOVQ	$16, 8(SP)
	0x0785 01925 (pointer_vs_value/code/gc_test.go:115)	PCDATA	$0, $1
	0x0785 01925 (pointer_vs_value/code/gc_test.go:115)	PCDATA	$1, $10
	0x0785 01925 (pointer_vs_value/code/gc_test.go:115)	MOVQ	""..autotmp_53+1416(SP), AX
	0x078d 01933 (pointer_vs_value/code/gc_test.go:115)	PCDATA	$0, $0
	0x078d 01933 (pointer_vs_value/code/gc_test.go:115)	MOVQ	AX, 16(SP)
	0x0792 01938 (pointer_vs_value/code/gc_test.go:115)	MOVQ	$1, 24(SP)
	0x079b 01947 (pointer_vs_value/code/gc_test.go:115)	MOVQ	$1, 32(SP)
	0x07a4 01956 (pointer_vs_value/code/gc_test.go:115)	CALL	fmt.Sprintf(SB)
	0x07a9 01961 (pointer_vs_value/code/gc_test.go:115)	PCDATA	$0, $1
	0x07a9 01961 (pointer_vs_value/code/gc_test.go:115)	MOVQ	40(SP), AX
	0x07ae 01966 (pointer_vs_value/code/gc_test.go:115)	MOVQ	48(SP), CX
	0x07b3 01971 (pointer_vs_value/code/gc_test.go:115)	PCDATA	$0, $0
	0x07b3 01971 (pointer_vs_value/code/gc_test.go:115)	PCDATA	$1, $40
	0x07b3 01971 (pointer_vs_value/code/gc_test.go:115)	MOVQ	AX, ""..autotmp_35+1264(SP)
	0x07bb 01979 (pointer_vs_value/code/gc_test.go:115)	MOVQ	CX, ""..autotmp_35+1272(SP)
	0x07c3 01987 (pointer_vs_value/code/gc_test.go:115)	CALL	runtime.printlock(SB)
	0x07c8 01992 (pointer_vs_value/code/gc_test.go:115)	PCDATA	$0, $1
	0x07c8 01992 (pointer_vs_value/code/gc_test.go:115)	MOVQ	""..autotmp_35+1264(SP), AX
	0x07d0 02000 (pointer_vs_value/code/gc_test.go:115)	PCDATA	$1, $10
	0x07d0 02000 (pointer_vs_value/code/gc_test.go:115)	MOVQ	""..autotmp_35+1272(SP), CX
	0x07d8 02008 (pointer_vs_value/code/gc_test.go:115)	PCDATA	$0, $0
	0x07d8 02008 (pointer_vs_value/code/gc_test.go:115)	MOVQ	AX, (SP)
	0x07dc 02012 (pointer_vs_value/code/gc_test.go:115)	MOVQ	CX, 8(SP)
	0x07e1 02017 (pointer_vs_value/code/gc_test.go:115)	CALL	runtime.printstring(SB)
	0x07e6 02022 (pointer_vs_value/code/gc_test.go:115)	CALL	runtime.printnl(SB)
	0x07eb 02027 (pointer_vs_value/code/gc_test.go:115)	CALL	runtime.printunlock(SB)
	0x07f0 02032 (pointer_vs_value/code/gc_test.go:116)	PCDATA	$0, $1
	0x07f0 02032 (pointer_vs_value/code/gc_test.go:116)	MOVQ	"".name+2352(SP), AX
	0x07f8 02040 (pointer_vs_value/code/gc_test.go:116)	PCDATA	$1, $41
	0x07f8 02040 (pointer_vs_value/code/gc_test.go:116)	MOVQ	"".name+2360(SP), CX
	0x0800 02048 (pointer_vs_value/code/gc_test.go:116)	PCDATA	$0, $0
	0x0800 02048 (pointer_vs_value/code/gc_test.go:116)	MOVQ	AX, (SP)
	0x0804 02052 (pointer_vs_value/code/gc_test.go:116)	MOVQ	CX, 8(SP)
	0x0809 02057 (pointer_vs_value/code/gc_test.go:116)	CALL	"".trackGC(SB)
	0x080e 02062 (pointer_vs_value/code/gc_test.go:117)	MOVQ	2328(SP), BP
	0x0816 02070 (pointer_vs_value/code/gc_test.go:117)	ADDQ	$2336, SP
	0x081d 02077 (pointer_vs_value/code/gc_test.go:117)	RET
	0x081e 02078 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$0, $-2
	0x081e 02078 (pointer_vs_value/code/gc_test.go:114)	PCDATA	$1, $-2
	0x081e 02078 (pointer_vs_value/code/gc_test.go:114)	JMP	1272
	0x0823 02083 (pointer_vs_value/code/gc_test.go:119)	PCDATA	$0, $0
	0x0823 02083 (pointer_vs_value/code/gc_test.go:119)	PCDATA	$1, $8
	0x0823 02083 (pointer_vs_value/code/gc_test.go:119)	CALL	"".createTera(SB)
	0x0828 02088 (pointer_vs_value/code/gc_test.go:119)	PCDATA	$0, $7
	0x0828 02088 (pointer_vs_value/code/gc_test.go:119)	PCDATA	$1, $42
	0x0828 02088 (pointer_vs_value/code/gc_test.go:119)	LEAQ	"".o+1496(SP), DI
	0x0830 02096 (pointer_vs_value/code/gc_test.go:119)	MOVQ	SP, SI
	0x0833 02099 (pointer_vs_value/code/gc_test.go:119)	PCDATA	$0, $0
	0x0833 02099 (pointer_vs_value/code/gc_test.go:119)	DUFFCOPY	$168
	0x0846 02118 (pointer_vs_value/code/gc_test.go:120)	PCDATA	$0, $4
	0x0846 02118 (pointer_vs_value/code/gc_test.go:120)	MOVQ	"".exec+2344(SP), DX
	0x084e 02126 (pointer_vs_value/code/gc_test.go:120)	MOVQ	SP, DI
	0x0851 02129 (pointer_vs_value/code/gc_test.go:120)	PCDATA	$0, $8
	0x0851 02129 (pointer_vs_value/code/gc_test.go:120)	PCDATA	$1, $8
	0x0851 02129 (pointer_vs_value/code/gc_test.go:120)	LEAQ	"".o+1496(SP), SI
	0x0859 02137 (pointer_vs_value/code/gc_test.go:120)	PCDATA	$0, $4
	0x0859 02137 (pointer_vs_value/code/gc_test.go:120)	DUFFCOPY	$168
	0x086c 02156 (pointer_vs_value/code/gc_test.go:120)	MOVQ	(DX), AX
	0x086f 02159 (pointer_vs_value/code/gc_test.go:120)	PCDATA	$0, $0
	0x086f 02159 (pointer_vs_value/code/gc_test.go:120)	CALL	AX
	0x0871 02161 (pointer_vs_value/code/gc_test.go:121)	MOVQ	"".i+856(SP), AX
	0x0879 02169 (pointer_vs_value/code/gc_test.go:121)	INCQ	AX
	0x087c 02172 (pointer_vs_value/code/gc_test.go:121)	MOVQ	AX, "".i+856(SP)
	0x0884 02180 (pointer_vs_value/code/gc_test.go:121)	JMP	2182
	0x0886 02182 (pointer_vs_value/code/gc_test.go:112)	PCDATA	$0, $-2
	0x0886 02182 (pointer_vs_value/code/gc_test.go:112)	PCDATA	$1, $-2
	0x0886 02182 (pointer_vs_value/code/gc_test.go:112)	JMP	2184
	0x0888 02184 (pointer_vs_value/code/gc_test.go:112)	JMP	2186
	0x088a 02186 (pointer_vs_value/code/gc_test.go:112)	JMP	343
	0x088f 02191 (pointer_vs_value/code/gc_test.go:112)	NOP
	0x088f 02191 (pointer_vs_value/code/gc_test.go:98)	PCDATA	$1, $-1
	0x088f 02191 (pointer_vs_value/code/gc_test.go:98)	PCDATA	$0, $-1
	0x088f 02191 (pointer_vs_value/code/gc_test.go:98)	CALL	runtime.morestack_noctxt(SB)
	0x0894 02196 (pointer_vs_value/code/gc_test.go:98)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 60 f7 ff  eH..%....H..$`..
	0x0010 ff 48 3b 41 10 0f 86 74 08 00 00 48 81 ec 20 09  .H;A...t...H.. .
	0x0020 00 00 48 89 ac 24 18 09 00 00 48 8d ac 24 18 09  ..H..$....H..$..
	0x0030 00 00 0f 57 c0 0f 11 84 24 20 04 00 00 48 8b 05  ...W....$ ...H..
	0x0040 00 00 00 00 48 8d 0d 00 00 00 00 48 89 8c 24 e0  ....H......H..$.
	0x0050 04 00 00 48 89 84 24 e8 04 00 00 48 89 8c 24 20  ...H..$....H..$ 
	0x0060 04 00 00 48 89 84 24 28 04 00 00 eb 00 0f 57 c0  ...H..$(......W.
	0x0070 0f 11 84 24 20 05 00 00 48 c7 84 24 e8 03 00 00  ...$ ...H..$....
	0x0080 00 00 00 00 48 8b 84 24 20 04 00 00 48 8b 8c 24  ....H..$ ...H..$
	0x0090 28 04 00 00 48 89 04 24 48 89 4c 24 08 e8 00 00  (...H..$H.L$....
	0x00a0 00 00 48 8b 44 24 18 48 8b 4c 24 10 48 89 8c 24  ..H.D$.H.L$.H..$
	0x00b0 20 05 00 00 48 89 84 24 28 05 00 00 48 8b 44 24   ...H..$(...H.D$
	0x00c0 20 48 89 84 24 e8 03 00 00 48 8b 84 24 28 05 00   H..$....H..$(..
	0x00d0 00 48 8b 8c 24 20 05 00 00 48 89 8c 24 60 04 00  .H..$ ...H..$`..
	0x00e0 00 48 89 84 24 68 04 00 00 48 8b 84 24 e8 03 00  .H..$h...H..$...
	0x00f0 00 48 89 84 24 a0 03 00 00 c7 04 24 08 00 00 00  .H..$......$....
	0x0100 48 8d 05 00 00 00 00 48 89 44 24 08 48 8b 84 24  H......H.D$.H..$
	0x0110 a0 03 00 00 48 89 44 24 10 e8 00 00 00 00 48 c7  ....H.D$......H.
	0x0120 84 24 58 03 00 00 00 00 00 00 e8 00 00 00 00 48  .$X............H
	0x0130 8b 44 24 10 48 8b 4c 24 08 48 8b 14 24 48 89 94  .D$.H.L$.H..$H..
	0x0140 24 40 05 00 00 48 89 8c 24 48 05 00 00 48 89 84  $@...H..$H...H..
	0x0150 24 50 05 00 00 eb 00 eb 00 48 8b 84 24 60 04 00  $P.......H..$`..
	0x0160 00 84 00 48 8b 40 20 48 8b 8c 24 68 04 00 00 48  ...H.@ H..$h...H
	0x0170 89 0c 24 ff d0 48 8b 44 24 08 48 89 84 24 e0 03  ..$..H.D$.H..$..
	0x0180 00 00 48 c7 04 24 00 00 00 00 48 89 44 24 08 e8  ..H..$....H.D$..
	0x0190 00 00 00 00 80 7c 24 10 00 75 05 e9 83 06 00 00  .....|$..u......
	0x01a0 e8 00 00 00 00 48 8b 04 24 48 8b 4c 24 08 48 8b  .....H..$H.L$.H.
	0x01b0 54 24 10 48 89 84 24 a0 05 00 00 48 89 8c 24 a8  T$.H..$....H..$.
	0x01c0 05 00 00 48 89 94 24 b0 05 00 00 48 89 04 24 48  ...H..$....H..$H
	0x01d0 89 4c 24 08 48 89 54 24 10 48 8b 84 24 40 05 00  .L$.H.T$.H..$@..
	0x01e0 00 48 8b 8c 24 48 05 00 00 48 8b 94 24 50 05 00  .H..$H...H..$P..
	0x01f0 00 48 89 44 24 18 48 89 4c 24 20 48 89 54 24 28  .H.D$.H.L$ H.T$(
	0x0200 e8 00 00 00 00 48 8b 44 24 30 48 89 84 24 68 03  .....H.D$0H..$h.
	0x0210 00 00 48 c7 84 24 40 03 00 00 00 00 00 00 48 8b  ..H..$@.......H.
	0x0220 84 24 68 03 00 00 48 89 c1 48 b8 db 34 b6 d7 82  .$h...H..H..4...
	0x0230 de 1b 43 48 f7 e9 48 c1 fa 12 48 c1 f9 3f 48 29  ..CH..H...H..?H)
	0x0240 ca 48 89 94 24 88 03 00 00 48 89 94 24 40 03 00  .H..$....H..$@..
	0x0250 00 eb 00 48 89 94 24 60 03 00 00 48 89 14 24 e8  ...H..$`...H..$.
	0x0260 00 00 00 00 48 8b 44 24 08 48 89 84 24 d8 03 00  ....H.D$.H..$...
	0x0270 00 48 8d 0d 00 00 00 00 48 89 8c 24 d0 04 00 00  .H......H..$....
	0x0280 48 89 84 24 d8 04 00 00 48 8d 05 00 00 00 00 48  H..$....H......H
	0x0290 89 84 24 30 04 00 00 48 c7 84 24 38 04 00 00 10  ..$0...H..$8....
	0x02a0 00 00 00 48 8b 84 24 d8 04 00 00 48 8b 8c 24 d0  ...H..$....H..$.
	0x02b0 04 00 00 48 89 8c 24 f0 03 00 00 48 89 84 24 f8  ...H..$....H..$.
	0x02c0 03 00 00 0f 57 c0 0f 11 84 24 b0 04 00 00 48 8d  ....W....$....H.
	0x02d0 84 24 b0 04 00 00 48 89 84 24 d0 03 00 00 84 00  .$....H..$......
	0x02e0 48 8b 8c 24 f0 03 00 00 48 8b 94 24 f8 03 00 00  H..$....H..$....
	0x02f0 48 89 8c 24 b0 04 00 00 48 89 94 24 b8 04 00 00  H..$....H..$....
	0x0300 84 00 eb 00 48 89 84 24 58 05 00 00 48 c7 84 24  ....H..$X...H..$
	0x0310 60 05 00 00 01 00 00 00 48 c7 84 24 68 05 00 00  `.......H..$h...
	0x0320 01 00 00 00 48 c7 84 24 50 03 00 00 00 00 00 00  ....H..$P.......
	0x0330 0f 57 c0 0f 11 84 24 50 04 00 00 48 c7 84 24 80  .W....$P...H..$.
	0x0340 03 00 00 00 00 00 00 0f 57 c0 0f 11 84 24 70 04  ........W....$p.
	0x0350 00 00 0f 57 c0 0f 11 84 24 10 05 00 00 48 8b 05  ...W....$....H..
	0x0360 00 00 00 00 48 8d 0d 00 00 00 00 48 89 0c 24 48  ....H......H..$H
	0x0370 89 44 24 08 48 8b 84 24 38 04 00 00 48 8b 8c 24  .D$.H..$8...H..$
	0x0380 30 04 00 00 48 89 4c 24 10 48 89 44 24 18 48 8b  0...H.L$.H.D$.H.
	0x0390 84 24 68 05 00 00 48 8b 8c 24 60 05 00 00 48 8b  .$h...H..$`...H.
	0x03a0 94 24 58 05 00 00 48 89 54 24 20 48 89 4c 24 28  .$X...H.T$ H.L$(
	0x03b0 48 89 44 24 30 e8 00 00 00 00 48 8b 44 24 38 48  H.D$0.....H.D$8H
	0x03c0 89 84 24 90 03 00 00 48 8b 44 24 48 48 8b 4c 24  ..$....H.D$HH.L$
	0x03d0 40 48 89 8c 24 10 05 00 00 48 89 84 24 18 05 00  @H..$....H..$...
	0x03e0 00 48 8b 84 24 90 03 00 00 48 89 84 24 80 03 00  .H..$....H..$...
	0x03f0 00 48 8b 84 24 10 05 00 00 48 8b 8c 24 18 05 00  .H..$....H..$...
	0x0400 00 48 89 84 24 70 04 00 00 48 89 8c 24 78 04 00  .H..$p...H..$x..
	0x0410 00 48 8b 84 24 80 03 00 00 48 89 84 24 50 03 00  .H..$....H..$P..
	0x0420 00 48 8b 84 24 70 04 00 00 48 8b 8c 24 78 04 00  .H..$p...H..$x..
	0x0430 00 48 89 84 24 50 04 00 00 48 89 8c 24 58 04 00  .H..$P...H..$X..
	0x0440 00 eb 00 48 8b 84 24 50 03 00 00 48 89 84 24 78  ...H..$P...H..$x
	0x0450 03 00 00 48 89 84 24 70 03 00 00 48 8b 84 24 50  ...H..$p...H..$P
	0x0460 04 00 00 48 8b 8c 24 58 04 00 00 48 89 84 24 30  ...H..$X...H..$0
	0x0470 05 00 00 48 89 8c 24 38 05 00 00 48 8b 84 24 70  ...H..$8...H..$p
	0x0480 03 00 00 48 89 04 24 e8 00 00 00 00 48 8b 44 24  ...H..$.....H.D$
	0x0490 08 48 89 84 24 c8 03 00 00 48 8d 0d 00 00 00 00  .H..$....H......
	0x04a0 48 89 8c 24 a0 04 00 00 48 89 84 24 a8 04 00 00  H..$....H..$....
	0x04b0 48 8b 84 24 30 05 00 00 48 8b 8c 24 38 05 00 00  H..$0...H..$8...
	0x04c0 48 89 84 24 80 04 00 00 48 89 8c 24 88 04 00 00  H..$....H..$....
	0x04d0 48 89 84 24 c0 03 00 00 48 83 bc 24 c0 03 00 00  H..$....H..$....
	0x04e0 00 75 05 e9 36 03 00 00 84 00 48 8b 40 08 48 89  .u..6.....H.@.H.
	0x04f0 84 24 c0 03 00 00 eb 00 48 8b 84 24 c0 03 00 00  .$......H..$....
	0x0500 48 8b 8c 24 88 04 00 00 48 89 84 24 90 04 00 00  H..$....H..$....
	0x0510 48 89 8c 24 98 04 00 00 48 8b 84 24 a0 04 00 00  H..$....H..$....
	0x0520 48 8b 8c 24 a8 04 00 00 48 89 84 24 10 04 00 00  H..$....H..$....
	0x0530 48 89 8c 24 18 04 00 00 48 8b 84 24 90 04 00 00  H..$....H..$....
	0x0540 48 8b 8c 24 98 04 00 00 48 89 84 24 00 04 00 00  H..$....H..$....
	0x0550 48 89 8c 24 08 04 00 00 0f 57 c0 0f 11 84 24 b8  H..$.....W....$.
	0x0560 05 00 00 0f 57 c0 0f 11 84 24 c8 05 00 00 48 8d  ....W....$....H.
	0x0570 84 24 b8 05 00 00 48 89 84 24 b8 03 00 00 84 00  .$....H..$......
	0x0580 48 8b 8c 24 10 04 00 00 48 8b 94 24 18 04 00 00  H..$....H..$....
	0x0590 48 89 8c 24 b8 05 00 00 48 89 94 24 c0 05 00 00  H..$....H..$....
	0x05a0 84 00 48 8b 84 24 00 04 00 00 48 8b 8c 24 08 04  ..H..$....H..$..
	0x05b0 00 00 48 89 84 24 c8 05 00 00 48 89 8c 24 d0 05  ..H..$....H..$..
	0x05c0 00 00 48 8b 84 24 b8 03 00 00 84 00 eb 00 48 89  ..H..$........H.
	0x05d0 84 24 70 05 00 00 48 c7 84 24 78 05 00 00 02 00  .$p...H..$x.....
	0x05e0 00 00 48 c7 84 24 80 05 00 00 02 00 00 00 48 c7  ..H..$........H.
	0x05f0 84 24 48 03 00 00 00 00 00 00 0f 57 c0 0f 11 84  .$H........W....
	0x0600 24 40 04 00 00 48 c7 84 24 98 03 00 00 00 00 00  $@...H..$.......
	0x0610 00 0f 57 c0 0f 11 84 24 c0 04 00 00 0f 57 c0 0f  ..W....$.....W..
	0x0620 11 84 24 10 05 00 00 48 8b 05 00 00 00 00 48 8d  ..$....H......H.
	0x0630 0d 00 00 00 00 48 89 0c 24 48 89 44 24 08 48 8b  .....H..$H.D$.H.
	0x0640 84 24 70 05 00 00 48 8b 8c 24 78 05 00 00 48 8b  .$p...H..$x...H.
	0x0650 94 24 80 05 00 00 48 89 44 24 10 48 89 4c 24 18  .$....H.D$.H.L$.
	0x0660 48 89 54 24 20 e8 00 00 00 00 48 8b 44 24 28 48  H.T$ .....H.D$(H
	0x0670 89 84 24 90 03 00 00 48 8b 44 24 30 48 8b 4c 24  ..$....H.D$0H.L$
	0x0680 38 48 89 84 24 10 05 00 00 48 89 8c 24 18 05 00  8H..$....H..$...
	0x0690 00 48 8b 84 24 90 03 00 00 48 89 84 24 98 03 00  .H..$....H..$...
	0x06a0 00 48 8b 84 24 10 05 00 00 48 8b 8c 24 18 05 00  .H..$....H..$...
	0x06b0 00 48 89 84 24 c0 04 00 00 48 89 8c 24 c8 04 00  .H..$....H..$...
	0x06c0 00 48 8b 84 24 98 03 00 00 48 89 84 24 48 03 00  .H..$....H..$H..
	0x06d0 00 48 8b 84 24 c0 04 00 00 48 8b 8c 24 c8 04 00  .H..$....H..$...
	0x06e0 00 48 89 84 24 40 04 00 00 48 89 8c 24 48 04 00  .H..$@...H..$H..
	0x06f0 00 eb 00 48 8b 84 24 58 03 00 00 48 89 04 24 e8  ...H..$X...H..$.
	0x0700 00 00 00 00 48 8b 44 24 08 48 89 84 24 b0 03 00  ....H.D$.H..$...
	0x0710 00 0f 57 c0 0f 11 84 24 00 05 00 00 48 8d 84 24  ..W....$....H..$
	0x0720 00 05 00 00 48 89 84 24 a8 03 00 00 84 00 48 8b  ....H..$......H.
	0x0730 8c 24 b0 03 00 00 48 8d 15 00 00 00 00 48 89 94  .$....H......H..
	0x0740 24 00 05 00 00 48 89 8c 24 08 05 00 00 84 00 eb  $....H..$.......
	0x0750 00 48 89 84 24 88 05 00 00 48 c7 84 24 90 05 00  .H..$....H..$...
	0x0760 00 01 00 00 00 48 c7 84 24 98 05 00 00 01 00 00  .....H..$.......
	0x0770 00 48 8d 05 00 00 00 00 48 89 04 24 48 c7 44 24  .H......H..$H.D$
	0x0780 08 10 00 00 00 48 8b 84 24 88 05 00 00 48 89 44  .....H..$....H.D
	0x0790 24 10 48 c7 44 24 18 01 00 00 00 48 c7 44 24 20  $.H.D$.....H.D$ 
	0x07a0 01 00 00 00 e8 00 00 00 00 48 8b 44 24 28 48 8b  .........H.D$(H.
	0x07b0 4c 24 30 48 89 84 24 f0 04 00 00 48 89 8c 24 f8  L$0H..$....H..$.
	0x07c0 04 00 00 e8 00 00 00 00 48 8b 84 24 f0 04 00 00  ........H..$....
	0x07d0 48 8b 8c 24 f8 04 00 00 48 89 04 24 48 89 4c 24  H..$....H..$H.L$
	0x07e0 08 e8 00 00 00 00 e8 00 00 00 00 e8 00 00 00 00  ................
	0x07f0 48 8b 84 24 30 09 00 00 48 8b 8c 24 38 09 00 00  H..$0...H..$8...
	0x0800 48 89 04 24 48 89 4c 24 08 e8 00 00 00 00 48 8b  H..$H.L$......H.
	0x0810 ac 24 18 09 00 00 48 81 c4 20 09 00 00 c3 e9 d5  .$....H.. ......
	0x0820 fc ff ff e8 00 00 00 00 48 8d bc 24 d8 05 00 00  ........H..$....
	0x0830 48 89 e6 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00  H..H.l$.H.l$....
	0x0840 00 00 48 8b 6d 00 48 8b 94 24 28 09 00 00 48 89  ..H.m.H..$(...H.
	0x0850 e7 48 8d b4 24 d8 05 00 00 48 89 6c 24 f0 48 8d  .H..$....H.l$.H.
	0x0860 6c 24 f0 e8 00 00 00 00 48 8b 6d 00 48 8b 02 ff  l$......H.m.H...
	0x0870 d0 48 8b 84 24 58 03 00 00 48 ff c0 48 89 84 24  .H..$X...H..H..$
	0x0880 58 03 00 00 eb 00 eb 00 eb 00 e9 c8 f8 ff ff e8  X...............
	0x0890 00 00 00 00 e9 67 f7 ff ff                       .....g...
	rel 5+4 t=16 TLS+0
	rel 64+4 t=15 context.background+0
	rel 71+4 t=15 go.itab.*context.emptyCtx,context.Context+0
	rel 158+4 t=8 context.WithCancel+0
	rel 259+4 t=15 "".runNative.func1·f+0
	rel 282+4 t=8 runtime.newproc+0
	rel 299+4 t=8 time.Now+0
	rel 371+0 t=11 +0
	rel 400+4 t=8 runtime.selectnbrecv+0
	rel 417+4 t=8 time.Now+0
	rel 513+4 t=8 time.Time.Sub+0
	rel 608+4 t=8 runtime.convT64+0
	rel 628+4 t=15 type.int64+0
	rel 651+4 t=15 go.string."Time passed [%v]"+0
	rel 864+4 t=15 os.Stdout+0
	rel 871+4 t=15 go.itab.*os.File,io.Writer+0
	rel 950+4 t=8 fmt.Fprintf+0
	rel 1160+4 t=8 runtime.convT64+0
	rel 1180+4 t=15 type.int+0
	rel 1578+4 t=15 os.Stdout+0
	rel 1585+4 t=15 go.itab.*os.File,io.Writer+0
	rel 1638+4 t=8 fmt.Fprintln+0
	rel 1792+4 t=8 runtime.convT64+0
	rel 1849+4 t=15 type.int+0
	rel 1908+4 t=15 go.string."invocations = %v"+0
	rel 1957+4 t=8 fmt.Sprintf+0
	rel 1988+4 t=8 runtime.printlock+0
	rel 2018+4 t=8 runtime.printstring+0
	rel 2023+4 t=8 runtime.printnl+0
	rel 2028+4 t=8 runtime.printunlock+0
	rel 2058+4 t=8 "".trackGC+0
	rel 2084+4 t=8 "".createTera+0
	rel 2110+4 t=8 runtime.duffcopy+168
	rel 2148+4 t=8 runtime.duffcopy+168
	rel 2159+0 t=11 +0
	rel 2192+4 t=8 runtime.morestack_noctxt+0
type..hash.[2]interface {} STEXT dupok size=176 args=0x18 locals=0x40
	0x0000 00000 (<autogenerated>:1)	TEXT	type..hash.[2]interface {}(SB), DUPOK|ABIInternal, $64-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	166
	0x0013 00019 (<autogenerated>:1)	SUBQ	$64, SP
	0x0017 00023 (<autogenerated>:1)	MOVQ	BP, 56(SP)
	0x001c 00028 (<autogenerated>:1)	LEAQ	56(SP), BP
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$1, gclocals·263043c8f03e3241528dfae4e2812ef4(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0021 00033 (<autogenerated>:1)	PCDATA	$0, $0
	0x0021 00033 (<autogenerated>:1)	PCDATA	$1, $0
	0x0021 00033 (<autogenerated>:1)	MOVQ	$0, "".~r2+88(SP)
	0x002a 00042 (<autogenerated>:1)	MOVQ	$0, ""..autotmp_4+40(SP)
	0x0033 00051 (<autogenerated>:1)	MOVQ	$2, ""..autotmp_5+32(SP)
	0x003c 00060 (<autogenerated>:1)	JMP	62
	0x003e 00062 (<autogenerated>:1)	MOVQ	""..autotmp_5+32(SP), AX
	0x0043 00067 (<autogenerated>:1)	CMPQ	""..autotmp_4+40(SP), AX
	0x0048 00072 (<autogenerated>:1)	JLT	76
	0x004a 00074 (<autogenerated>:1)	JMP	146
	0x004c 00076 (<autogenerated>:1)	MOVQ	""..autotmp_4+40(SP), AX
	0x0051 00081 (<autogenerated>:1)	MOVQ	AX, "".i+24(SP)
	0x0056 00086 (<autogenerated>:1)	SHLQ	$4, AX
	0x005a 00090 (<autogenerated>:1)	PCDATA	$0, $1
	0x005a 00090 (<autogenerated>:1)	ADDQ	"".p+72(SP), AX
	0x005f 00095 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_6+48(SP)
	0x0064 00100 (<autogenerated>:1)	PCDATA	$0, $0
	0x0064 00100 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0068 00104 (<autogenerated>:1)	MOVQ	"".h+80(SP), AX
	0x006d 00109 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0072 00114 (<autogenerated>:1)	CALL	runtime.nilinterhash(SB)
	0x0077 00119 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x007c 00124 (<autogenerated>:1)	MOVQ	AX, "".h+80(SP)
	0x0081 00129 (<autogenerated>:1)	JMP	131
	0x0083 00131 (<autogenerated>:1)	MOVQ	""..autotmp_4+40(SP), AX
	0x0088 00136 (<autogenerated>:1)	INCQ	AX
	0x008b 00139 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_4+40(SP)
	0x0090 00144 (<autogenerated>:1)	JMP	62
	0x0092 00146 (<autogenerated>:1)	PCDATA	$1, $1
	0x0092 00146 (<autogenerated>:1)	MOVQ	"".h+80(SP), AX
	0x0097 00151 (<autogenerated>:1)	MOVQ	AX, "".~r2+88(SP)
	0x009c 00156 (<autogenerated>:1)	MOVQ	56(SP), BP
	0x00a1 00161 (<autogenerated>:1)	ADDQ	$64, SP
	0x00a5 00165 (<autogenerated>:1)	RET
	0x00a6 00166 (<autogenerated>:1)	NOP
	0x00a6 00166 (<autogenerated>:1)	PCDATA	$1, $-1
	0x00a6 00166 (<autogenerated>:1)	PCDATA	$0, $-1
	0x00a6 00166 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x00ab 00171 (<autogenerated>:1)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 93  eH..%....H;a....
	0x0010 00 00 00 48 83 ec 40 48 89 6c 24 38 48 8d 6c 24  ...H..@H.l$8H.l$
	0x0020 38 48 c7 44 24 58 00 00 00 00 48 c7 44 24 28 00  8H.D$X....H.D$(.
	0x0030 00 00 00 48 c7 44 24 20 02 00 00 00 eb 00 48 8b  ...H.D$ ......H.
	0x0040 44 24 20 48 39 44 24 28 7c 02 eb 46 48 8b 44 24  D$ H9D$(|..FH.D$
	0x0050 28 48 89 44 24 18 48 c1 e0 04 48 03 44 24 48 48  (H.D$.H...H.D$HH
	0x0060 89 44 24 30 48 89 04 24 48 8b 44 24 50 48 89 44  .D$0H..$H.D$PH.D
	0x0070 24 08 e8 00 00 00 00 48 8b 44 24 10 48 89 44 24  $......H.D$.H.D$
	0x0080 50 eb 00 48 8b 44 24 28 48 ff c0 48 89 44 24 28  P..H.D$(H..H.D$(
	0x0090 eb ac 48 8b 44 24 50 48 89 44 24 58 48 8b 6c 24  ..H.D$PH.D$XH.l$
	0x00a0 38 48 83 c4 40 c3 e8 00 00 00 00 e9 50 ff ff ff  8H..@.......P...
	rel 5+4 t=16 TLS+0
	rel 115+4 t=8 runtime.nilinterhash+0
	rel 167+4 t=8 runtime.morestack_noctxt+0
type..eq.[2]interface {} STEXT dupok size=248 args=0x18 locals=0x60
	0x0000 00000 (<autogenerated>:1)	TEXT	type..eq.[2]interface {}(SB), DUPOK|ABIInternal, $96-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	238
	0x0013 00019 (<autogenerated>:1)	SUBQ	$96, SP
	0x0017 00023 (<autogenerated>:1)	MOVQ	BP, 88(SP)
	0x001c 00028 (<autogenerated>:1)	LEAQ	88(SP), BP
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$0, gclocals·5e326a2f5498e528ce8fbe7bd86e7d21(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$1, gclocals·5363b3e3636eaaac400b9fb2466dc1f5(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$2, gclocals·6e8d7ea4abad763909b26991048ee1fe(SB)
	0x0021 00033 (<autogenerated>:1)	PCDATA	$0, $0
	0x0021 00033 (<autogenerated>:1)	PCDATA	$1, $0
	0x0021 00033 (<autogenerated>:1)	MOVB	$0, "".~r2+120(SP)
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, ""..autotmp_4+48(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	$2, ""..autotmp_5+40(SP)
	0x0038 00056 (<autogenerated>:1)	JMP	58
	0x003a 00058 (<autogenerated>:1)	MOVQ	""..autotmp_5+40(SP), AX
	0x003f 00063 (<autogenerated>:1)	CMPQ	""..autotmp_4+48(SP), AX
	0x0044 00068 (<autogenerated>:1)	JLT	75
	0x0046 00070 (<autogenerated>:1)	JMP	223
	0x004b 00075 (<autogenerated>:1)	MOVQ	""..autotmp_4+48(SP), AX
	0x0050 00080 (<autogenerated>:1)	MOVQ	AX, "".i+32(SP)
	0x0055 00085 (<autogenerated>:1)	SHLQ	$4, AX
	0x0059 00089 (<autogenerated>:1)	PCDATA	$0, $1
	0x0059 00089 (<autogenerated>:1)	ADDQ	"".q+112(SP), AX
	0x005e 00094 (<autogenerated>:1)	PCDATA	$0, $2
	0x005e 00094 (<autogenerated>:1)	MOVQ	8(AX), CX
	0x0062 00098 (<autogenerated>:1)	PCDATA	$0, $3
	0x0062 00098 (<autogenerated>:1)	MOVQ	(AX), AX
	0x0065 00101 (<autogenerated>:1)	PCDATA	$1, $1
	0x0065 00101 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_6+72(SP)
	0x006a 00106 (<autogenerated>:1)	PCDATA	$0, $0
	0x006a 00106 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_6+80(SP)
	0x006f 00111 (<autogenerated>:1)	MOVQ	"".i+32(SP), AX
	0x0074 00116 (<autogenerated>:1)	SHLQ	$4, AX
	0x0078 00120 (<autogenerated>:1)	PCDATA	$0, $1
	0x0078 00120 (<autogenerated>:1)	ADDQ	"".p+104(SP), AX
	0x007d 00125 (<autogenerated>:1)	PCDATA	$0, $2
	0x007d 00125 (<autogenerated>:1)	MOVQ	8(AX), CX
	0x0081 00129 (<autogenerated>:1)	PCDATA	$0, $3
	0x0081 00129 (<autogenerated>:1)	MOVQ	(AX), AX
	0x0084 00132 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_7+56(SP)
	0x0089 00137 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_7+64(SP)
	0x008e 00142 (<autogenerated>:1)	CMPQ	""..autotmp_6+72(SP), AX
	0x0093 00147 (<autogenerated>:1)	JNE	151
	0x0095 00149 (<autogenerated>:1)	JMP	168
	0x0097 00151 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0097 00151 (<autogenerated>:1)	PCDATA	$1, $-2
	0x0097 00151 (<autogenerated>:1)	JMP	153
	0x0099 00153 (<autogenerated>:1)	PCDATA	$0, $0
	0x0099 00153 (<autogenerated>:1)	PCDATA	$1, $2
	0x0099 00153 (<autogenerated>:1)	MOVB	$0, "".~r2+120(SP)
	0x009e 00158 (<autogenerated>:1)	MOVQ	88(SP), BP
	0x00a3 00163 (<autogenerated>:1)	ADDQ	$96, SP
	0x00a7 00167 (<autogenerated>:1)	RET
	0x00a8 00168 (<autogenerated>:1)	PCDATA	$0, $3
	0x00a8 00168 (<autogenerated>:1)	PCDATA	$1, $1
	0x00a8 00168 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x00ac 00172 (<autogenerated>:1)	PCDATA	$0, $0
	0x00ac 00172 (<autogenerated>:1)	MOVQ	CX, 8(SP)
	0x00b1 00177 (<autogenerated>:1)	PCDATA	$0, $1
	0x00b1 00177 (<autogenerated>:1)	PCDATA	$1, $0
	0x00b1 00177 (<autogenerated>:1)	MOVQ	""..autotmp_6+80(SP), AX
	0x00b6 00182 (<autogenerated>:1)	PCDATA	$0, $0
	0x00b6 00182 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x00bb 00187 (<autogenerated>:1)	CALL	runtime.efaceeq(SB)
	0x00c0 00192 (<autogenerated>:1)	CMPB	24(SP), $0
	0x00c5 00197 (<autogenerated>:1)	JNE	201
	0x00c7 00199 (<autogenerated>:1)	JMP	221
	0x00c9 00201 (<autogenerated>:1)	PCDATA	$0, $-2
	0x00c9 00201 (<autogenerated>:1)	PCDATA	$1, $-2
	0x00c9 00201 (<autogenerated>:1)	JMP	203
	0x00cb 00203 (<autogenerated>:1)	PCDATA	$0, $0
	0x00cb 00203 (<autogenerated>:1)	PCDATA	$1, $0
	0x00cb 00203 (<autogenerated>:1)	MOVQ	""..autotmp_4+48(SP), AX
	0x00d0 00208 (<autogenerated>:1)	INCQ	AX
	0x00d3 00211 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_4+48(SP)
	0x00d8 00216 (<autogenerated>:1)	JMP	58
	0x00dd 00221 (<autogenerated>:1)	PCDATA	$0, $-2
	0x00dd 00221 (<autogenerated>:1)	PCDATA	$1, $-2
	0x00dd 00221 (<autogenerated>:1)	JMP	153
	0x00df 00223 (<autogenerated>:1)	PCDATA	$0, $0
	0x00df 00223 (<autogenerated>:1)	PCDATA	$1, $2
	0x00df 00223 (<autogenerated>:1)	MOVB	$1, "".~r2+120(SP)
	0x00e4 00228 (<autogenerated>:1)	MOVQ	88(SP), BP
	0x00e9 00233 (<autogenerated>:1)	ADDQ	$96, SP
	0x00ed 00237 (<autogenerated>:1)	RET
	0x00ee 00238 (<autogenerated>:1)	NOP
	0x00ee 00238 (<autogenerated>:1)	PCDATA	$1, $-1
	0x00ee 00238 (<autogenerated>:1)	PCDATA	$0, $-1
	0x00ee 00238 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x00f3 00243 (<autogenerated>:1)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 db  eH..%....H;a....
	0x0010 00 00 00 48 83 ec 60 48 89 6c 24 58 48 8d 6c 24  ...H..`H.l$XH.l$
	0x0020 58 c6 44 24 78 00 48 c7 44 24 30 00 00 00 00 48  X.D$x.H.D$0....H
	0x0030 c7 44 24 28 02 00 00 00 eb 00 48 8b 44 24 28 48  .D$(......H.D$(H
	0x0040 39 44 24 30 7c 05 e9 94 00 00 00 48 8b 44 24 30  9D$0|......H.D$0
	0x0050 48 89 44 24 20 48 c1 e0 04 48 03 44 24 70 48 8b  H.D$ H...H.D$pH.
	0x0060 48 08 48 8b 00 48 89 44 24 48 48 89 4c 24 50 48  H.H..H.D$HH.L$PH
	0x0070 8b 44 24 20 48 c1 e0 04 48 03 44 24 68 48 8b 48  .D$ H...H.D$hH.H
	0x0080 08 48 8b 00 48 89 44 24 38 48 89 4c 24 40 48 39  .H..H.D$8H.L$@H9
	0x0090 44 24 48 75 02 eb 11 eb 00 c6 44 24 78 00 48 8b  D$Hu......D$x.H.
	0x00a0 6c 24 58 48 83 c4 60 c3 48 89 04 24 48 89 4c 24  l$XH..`.H..$H.L$
	0x00b0 08 48 8b 44 24 50 48 89 44 24 10 e8 00 00 00 00  .H.D$PH.D$......
	0x00c0 80 7c 24 18 00 75 02 eb 14 eb 00 48 8b 44 24 30  .|$..u.....H.D$0
	0x00d0 48 ff c0 48 89 44 24 30 e9 5d ff ff ff eb ba c6  H..H.D$0.]......
	0x00e0 44 24 78 01 48 8b 6c 24 58 48 83 c4 60 c3 e8 00  D$x.H.l$XH..`...
	0x00f0 00 00 00 e9 08 ff ff ff                          ........
	rel 5+4 t=16 TLS+0
	rel 188+4 t=8 runtime.efaceeq+0
	rel 239+4 t=8 runtime.morestack_noctxt+0
"".trackGC STEXT size=942 args=0x10 locals=0x140
	0x0000 00000 (pointer_vs_value/code/gc_test.go:128)	TEXT	"".trackGC(SB), ABIInternal, $320-16
	0x0000 00000 (pointer_vs_value/code/gc_test.go:128)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/gc_test.go:128)	LEAQ	-192(SP), AX
	0x0011 00017 (pointer_vs_value/code/gc_test.go:128)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/gc_test.go:128)	JLS	932
	0x001b 00027 (pointer_vs_value/code/gc_test.go:128)	SUBQ	$320, SP
	0x0022 00034 (pointer_vs_value/code/gc_test.go:128)	MOVQ	BP, 312(SP)
	0x002a 00042 (pointer_vs_value/code/gc_test.go:128)	LEAQ	312(SP), BP
	0x0032 00050 (pointer_vs_value/code/gc_test.go:128)	FUNCDATA	$0, gclocals·e9f683aa71ab17cad0d785368ee6ad67(SB)
	0x0032 00050 (pointer_vs_value/code/gc_test.go:128)	FUNCDATA	$1, gclocals·e6ee03644b750d8c15b2cb7a39aa82cc(SB)
	0x0032 00050 (pointer_vs_value/code/gc_test.go:128)	FUNCDATA	$2, gclocals·7f70096d03f846d6675cbfe264db1363(SB)
	0x0032 00050 (pointer_vs_value/code/gc_test.go:128)	FUNCDATA	$3, "".trackGC.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/gc_test.go:129)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/gc_test.go:129)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/gc_test.go:129)	CALL	runtime.GC(SB)
	0x0037 00055 (pointer_vs_value/code/gc_test.go:130)	CALL	runtime.GC(SB)
	0x003c 00060 (pointer_vs_value/code/gc_test.go:131)	PCDATA	$0, $1
	0x003c 00060 (pointer_vs_value/code/gc_test.go:131)	LEAQ	type.runtime/debug.GCStats(SB), AX
	0x0043 00067 (pointer_vs_value/code/gc_test.go:131)	PCDATA	$0, $0
	0x0043 00067 (pointer_vs_value/code/gc_test.go:131)	MOVQ	AX, (SP)
	0x0047 00071 (pointer_vs_value/code/gc_test.go:131)	CALL	runtime.newobject(SB)
	0x004c 00076 (pointer_vs_value/code/gc_test.go:131)	PCDATA	$0, $2
	0x004c 00076 (pointer_vs_value/code/gc_test.go:131)	MOVQ	8(SP), DI
	0x0051 00081 (pointer_vs_value/code/gc_test.go:131)	PCDATA	$1, $1
	0x0051 00081 (pointer_vs_value/code/gc_test.go:131)	MOVQ	DI, "".&stats+136(SP)
	0x0059 00089 (pointer_vs_value/code/gc_test.go:131)	PCDATA	$0, $-2
	0x0059 00089 (pointer_vs_value/code/gc_test.go:131)	PCDATA	$1, $-2
	0x0059 00089 (pointer_vs_value/code/gc_test.go:131)	CMPL	runtime.writeBarrier(SB), $0
	0x0060 00096 (pointer_vs_value/code/gc_test.go:131)	JEQ	103
	0x0062 00098 (pointer_vs_value/code/gc_test.go:131)	JMP	906
	0x0067 00103 (pointer_vs_value/code/gc_test.go:131)	XORPS	X0, X0
	0x006a 00106 (pointer_vs_value/code/gc_test.go:131)	LEAQ	-16(DI), DI
	0x006e 00110 (pointer_vs_value/code/gc_test.go:131)	DUFFZERO	$269
	0x0081 00129 (pointer_vs_value/code/gc_test.go:131)	JMP	131
	0x0083 00131 (pointer_vs_value/code/gc_test.go:132)	PCDATA	$0, $1
	0x0083 00131 (pointer_vs_value/code/gc_test.go:132)	PCDATA	$1, $1
	0x0083 00131 (pointer_vs_value/code/gc_test.go:132)	MOVQ	"".&stats+136(SP), AX
	0x008b 00139 (pointer_vs_value/code/gc_test.go:132)	MOVQ	AX, ""..autotmp_6+88(SP)
	0x0090 00144 (pointer_vs_value/code/gc_test.go:132)	PCDATA	$0, $0
	0x0090 00144 (pointer_vs_value/code/gc_test.go:132)	MOVQ	AX, (SP)
	0x0094 00148 (pointer_vs_value/code/gc_test.go:132)	CALL	runtime/debug.ReadGCStats(SB)
	0x0099 00153 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $1
	0x0099 00153 (pointer_vs_value/code/gc_test.go:133)	MOVQ	"".&stats+136(SP), AX
	0x00a1 00161 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $3
	0x00a1 00161 (pointer_vs_value/code/gc_test.go:133)	MOVQ	40(AX), CX
	0x00a5 00165 (pointer_vs_value/code/gc_test.go:133)	MOVQ	48(AX), DX
	0x00a9 00169 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $4
	0x00a9 00169 (pointer_vs_value/code/gc_test.go:133)	MOVQ	56(AX), AX
	0x00ad 00173 (pointer_vs_value/code/gc_test.go:133)	MOVQ	CX, ""..autotmp_7+160(SP)
	0x00b5 00181 (pointer_vs_value/code/gc_test.go:133)	MOVQ	DX, ""..autotmp_7+168(SP)
	0x00bd 00189 (pointer_vs_value/code/gc_test.go:133)	MOVQ	AX, ""..autotmp_7+176(SP)
	0x00c5 00197 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $0
	0x00c5 00197 (pointer_vs_value/code/gc_test.go:133)	MOVQ	CX, (SP)
	0x00c9 00201 (pointer_vs_value/code/gc_test.go:133)	MOVQ	DX, 8(SP)
	0x00ce 00206 (pointer_vs_value/code/gc_test.go:133)	MOVQ	AX, 16(SP)
	0x00d3 00211 (pointer_vs_value/code/gc_test.go:133)	CALL	"".sum(SB)
	0x00d8 00216 (pointer_vs_value/code/gc_test.go:133)	MOVQ	24(SP), AX
	0x00dd 00221 (pointer_vs_value/code/gc_test.go:133)	MOVQ	AX, ""..autotmp_4+64(SP)
	0x00e2 00226 (pointer_vs_value/code/gc_test.go:133)	MOVQ	"".caller+336(SP), AX
	0x00ea 00234 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $4
	0x00ea 00234 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $2
	0x00ea 00234 (pointer_vs_value/code/gc_test.go:133)	MOVQ	"".caller+328(SP), CX
	0x00f2 00242 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $0
	0x00f2 00242 (pointer_vs_value/code/gc_test.go:133)	MOVQ	CX, (SP)
	0x00f6 00246 (pointer_vs_value/code/gc_test.go:133)	MOVQ	AX, 8(SP)
	0x00fb 00251 (pointer_vs_value/code/gc_test.go:133)	CALL	runtime.convTstring(SB)
	0x0100 00256 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $1
	0x0100 00256 (pointer_vs_value/code/gc_test.go:133)	MOVQ	16(SP), AX
	0x0105 00261 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $0
	0x0105 00261 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $3
	0x0105 00261 (pointer_vs_value/code/gc_test.go:133)	MOVQ	AX, ""..autotmp_8+80(SP)
	0x010a 00266 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $1
	0x010a 00266 (pointer_vs_value/code/gc_test.go:133)	MOVQ	"".&stats+136(SP), AX
	0x0112 00274 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $0
	0x0112 00274 (pointer_vs_value/code/gc_test.go:133)	MOVQ	24(AX), AX
	0x0116 00278 (pointer_vs_value/code/gc_test.go:133)	MOVQ	AX, ""..autotmp_9+56(SP)
	0x011b 00283 (pointer_vs_value/code/gc_test.go:133)	MOVQ	AX, (SP)
	0x011f 00287 (pointer_vs_value/code/gc_test.go:133)	CALL	runtime.convT64(SB)
	0x0124 00292 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $1
	0x0124 00292 (pointer_vs_value/code/gc_test.go:133)	MOVQ	8(SP), AX
	0x0129 00297 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $0
	0x0129 00297 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $4
	0x0129 00297 (pointer_vs_value/code/gc_test.go:133)	MOVQ	AX, ""..autotmp_10+128(SP)
	0x0131 00305 (pointer_vs_value/code/gc_test.go:133)	MOVQ	""..autotmp_4+64(SP), AX
	0x0136 00310 (pointer_vs_value/code/gc_test.go:133)	MOVQ	AX, (SP)
	0x013a 00314 (pointer_vs_value/code/gc_test.go:133)	CALL	runtime.convT64(SB)
	0x013f 00319 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $1
	0x013f 00319 (pointer_vs_value/code/gc_test.go:133)	MOVQ	8(SP), AX
	0x0144 00324 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $0
	0x0144 00324 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $5
	0x0144 00324 (pointer_vs_value/code/gc_test.go:133)	MOVQ	AX, ""..autotmp_11+120(SP)
	0x0149 00329 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $1
	0x0149 00329 (pointer_vs_value/code/gc_test.go:133)	MOVQ	"".&stats+136(SP), AX
	0x0151 00337 (pointer_vs_value/code/gc_test.go:133)	MOVQ	104(AX), CX
	0x0155 00341 (pointer_vs_value/code/gc_test.go:133)	MOVQ	96(AX), DX
	0x0159 00345 (pointer_vs_value/code/gc_test.go:133)	MOVQ	88(AX), AX
	0x015d 00349 (pointer_vs_value/code/gc_test.go:133)	MOVQ	AX, ""..autotmp_12+208(SP)
	0x0165 00357 (pointer_vs_value/code/gc_test.go:133)	MOVQ	DX, ""..autotmp_12+216(SP)
	0x016d 00365 (pointer_vs_value/code/gc_test.go:133)	MOVQ	CX, ""..autotmp_12+224(SP)
	0x0175 00373 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $0
	0x0175 00373 (pointer_vs_value/code/gc_test.go:133)	MOVQ	AX, (SP)
	0x0179 00377 (pointer_vs_value/code/gc_test.go:133)	MOVQ	DX, 8(SP)
	0x017e 00382 (pointer_vs_value/code/gc_test.go:133)	MOVQ	CX, 16(SP)
	0x0183 00387 (pointer_vs_value/code/gc_test.go:133)	CALL	runtime.convTslice(SB)
	0x0188 00392 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $1
	0x0188 00392 (pointer_vs_value/code/gc_test.go:133)	MOVQ	24(SP), AX
	0x018d 00397 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $0
	0x018d 00397 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $6
	0x018d 00397 (pointer_vs_value/code/gc_test.go:133)	MOVQ	AX, ""..autotmp_13+112(SP)
	0x0192 00402 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $1
	0x0192 00402 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $7
	0x0192 00402 (pointer_vs_value/code/gc_test.go:133)	MOVQ	"".&stats+136(SP), AX
	0x019a 00410 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $0
	0x019a 00410 (pointer_vs_value/code/gc_test.go:133)	MOVQ	32(AX), AX
	0x019e 00414 (pointer_vs_value/code/gc_test.go:133)	MOVQ	AX, ""..autotmp_14+72(SP)
	0x01a3 00419 (pointer_vs_value/code/gc_test.go:133)	MOVQ	AX, (SP)
	0x01a7 00423 (pointer_vs_value/code/gc_test.go:133)	CALL	runtime.convT64(SB)
	0x01ac 00428 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $1
	0x01ac 00428 (pointer_vs_value/code/gc_test.go:133)	MOVQ	8(SP), AX
	0x01b1 00433 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $0
	0x01b1 00433 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $8
	0x01b1 00433 (pointer_vs_value/code/gc_test.go:133)	MOVQ	AX, ""..autotmp_15+104(SP)
	0x01b6 00438 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $2
	0x01b6 00438 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $9
	0x01b6 00438 (pointer_vs_value/code/gc_test.go:133)	LEAQ	""..autotmp_3+232(SP), DI
	0x01be 00446 (pointer_vs_value/code/gc_test.go:133)	XORPS	X0, X0
	0x01c1 00449 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $0
	0x01c1 00449 (pointer_vs_value/code/gc_test.go:133)	LEAQ	-48(DI), DI
	0x01c5 00453 (pointer_vs_value/code/gc_test.go:133)	DUFFZERO	$277
	0x01d8 00472 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $1
	0x01d8 00472 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $8
	0x01d8 00472 (pointer_vs_value/code/gc_test.go:133)	LEAQ	""..autotmp_3+232(SP), AX
	0x01e0 00480 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $10
	0x01e0 00480 (pointer_vs_value/code/gc_test.go:133)	MOVQ	AX, ""..autotmp_17+96(SP)
	0x01e5 00485 (pointer_vs_value/code/gc_test.go:133)	TESTB	AL, (AX)
	0x01e7 00487 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $3
	0x01e7 00487 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $11
	0x01e7 00487 (pointer_vs_value/code/gc_test.go:133)	MOVQ	""..autotmp_8+80(SP), CX
	0x01ec 00492 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $5
	0x01ec 00492 (pointer_vs_value/code/gc_test.go:133)	LEAQ	type.string(SB), DX
	0x01f3 00499 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $3
	0x01f3 00499 (pointer_vs_value/code/gc_test.go:133)	MOVQ	DX, ""..autotmp_3+232(SP)
	0x01fb 00507 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $1
	0x01fb 00507 (pointer_vs_value/code/gc_test.go:133)	MOVQ	CX, ""..autotmp_3+240(SP)
	0x0203 00515 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $0
	0x0203 00515 (pointer_vs_value/code/gc_test.go:133)	TESTB	AL, (AX)
	0x0205 00517 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $1
	0x0205 00517 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $12
	0x0205 00517 (pointer_vs_value/code/gc_test.go:133)	MOVQ	""..autotmp_10+128(SP), AX
	0x020d 00525 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $3
	0x020d 00525 (pointer_vs_value/code/gc_test.go:133)	LEAQ	type.int64(SB), CX
	0x0214 00532 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $1
	0x0214 00532 (pointer_vs_value/code/gc_test.go:133)	MOVQ	CX, ""..autotmp_3+248(SP)
	0x021c 00540 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $0
	0x021c 00540 (pointer_vs_value/code/gc_test.go:133)	MOVQ	AX, ""..autotmp_3+256(SP)
	0x0224 00548 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $1
	0x0224 00548 (pointer_vs_value/code/gc_test.go:133)	MOVQ	""..autotmp_17+96(SP), AX
	0x0229 00553 (pointer_vs_value/code/gc_test.go:133)	TESTB	AL, (AX)
	0x022b 00555 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $3
	0x022b 00555 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $13
	0x022b 00555 (pointer_vs_value/code/gc_test.go:133)	MOVQ	""..autotmp_11+120(SP), CX
	0x0230 00560 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $5
	0x0230 00560 (pointer_vs_value/code/gc_test.go:133)	LEAQ	type.int64(SB), DX
	0x0237 00567 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $3
	0x0237 00567 (pointer_vs_value/code/gc_test.go:133)	MOVQ	DX, 32(AX)
	0x023b 00571 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $6
	0x023b 00571 (pointer_vs_value/code/gc_test.go:133)	LEAQ	40(AX), DI
	0x023f 00575 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $-2
	0x023f 00575 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $-2
	0x023f 00575 (pointer_vs_value/code/gc_test.go:133)	CMPL	runtime.writeBarrier(SB), $0
	0x0246 00582 (pointer_vs_value/code/gc_test.go:133)	JEQ	589
	0x0248 00584 (pointer_vs_value/code/gc_test.go:133)	JMP	893
	0x024d 00589 (pointer_vs_value/code/gc_test.go:133)	MOVQ	CX, 40(AX)
	0x0251 00593 (pointer_vs_value/code/gc_test.go:133)	JMP	595
	0x0253 00595 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $4
	0x0253 00595 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $13
	0x0253 00595 (pointer_vs_value/code/gc_test.go:133)	MOVQ	""..autotmp_17+96(SP), CX
	0x0258 00600 (pointer_vs_value/code/gc_test.go:133)	TESTB	AL, (CX)
	0x025a 00602 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $3
	0x025a 00602 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $14
	0x025a 00602 (pointer_vs_value/code/gc_test.go:133)	MOVQ	""..autotmp_13+112(SP), AX
	0x025f 00607 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $5
	0x025f 00607 (pointer_vs_value/code/gc_test.go:133)	LEAQ	type.[]time.Duration(SB), DX
	0x0266 00614 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $3
	0x0266 00614 (pointer_vs_value/code/gc_test.go:133)	MOVQ	DX, 48(CX)
	0x026a 00618 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $6
	0x026a 00618 (pointer_vs_value/code/gc_test.go:133)	LEAQ	56(CX), DI
	0x026e 00622 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $-2
	0x026e 00622 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $-2
	0x026e 00622 (pointer_vs_value/code/gc_test.go:133)	CMPL	runtime.writeBarrier(SB), $0
	0x0275 00629 (pointer_vs_value/code/gc_test.go:133)	JEQ	636
	0x0277 00631 (pointer_vs_value/code/gc_test.go:133)	JMP	883
	0x027c 00636 (pointer_vs_value/code/gc_test.go:133)	MOVQ	AX, 56(CX)
	0x0280 00640 (pointer_vs_value/code/gc_test.go:133)	JMP	642
	0x0282 00642 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $4
	0x0282 00642 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $14
	0x0282 00642 (pointer_vs_value/code/gc_test.go:133)	MOVQ	""..autotmp_17+96(SP), CX
	0x0287 00647 (pointer_vs_value/code/gc_test.go:133)	TESTB	AL, (CX)
	0x0289 00649 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $3
	0x0289 00649 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $15
	0x0289 00649 (pointer_vs_value/code/gc_test.go:133)	MOVQ	""..autotmp_15+104(SP), AX
	0x028e 00654 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $5
	0x028e 00654 (pointer_vs_value/code/gc_test.go:133)	LEAQ	type.time.Duration(SB), DX
	0x0295 00661 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $3
	0x0295 00661 (pointer_vs_value/code/gc_test.go:133)	MOVQ	DX, 64(CX)
	0x0299 00665 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $6
	0x0299 00665 (pointer_vs_value/code/gc_test.go:133)	LEAQ	72(CX), DI
	0x029d 00669 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $-2
	0x029d 00669 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $-2
	0x029d 00669 (pointer_vs_value/code/gc_test.go:133)	CMPL	runtime.writeBarrier(SB), $0
	0x02a4 00676 (pointer_vs_value/code/gc_test.go:133)	JEQ	683
	0x02a6 00678 (pointer_vs_value/code/gc_test.go:133)	JMP	873
	0x02ab 00683 (pointer_vs_value/code/gc_test.go:133)	MOVQ	AX, 72(CX)
	0x02af 00687 (pointer_vs_value/code/gc_test.go:133)	JMP	689
	0x02b1 00689 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $1
	0x02b1 00689 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $16
	0x02b1 00689 (pointer_vs_value/code/gc_test.go:133)	MOVQ	""..autotmp_17+96(SP), AX
	0x02b6 00694 (pointer_vs_value/code/gc_test.go:133)	TESTB	AL, (AX)
	0x02b8 00696 (pointer_vs_value/code/gc_test.go:133)	JMP	698
	0x02ba 00698 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $0
	0x02ba 00698 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $17
	0x02ba 00698 (pointer_vs_value/code/gc_test.go:133)	MOVQ	AX, ""..autotmp_16+184(SP)
	0x02c2 00706 (pointer_vs_value/code/gc_test.go:133)	MOVQ	$5, ""..autotmp_16+192(SP)
	0x02ce 00718 (pointer_vs_value/code/gc_test.go:133)	MOVQ	$5, ""..autotmp_16+200(SP)
	0x02da 00730 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $1
	0x02da 00730 (pointer_vs_value/code/gc_test.go:133)	LEAQ	go.string."\n%s , %v , %v , %v , %v\n"(SB), AX
	0x02e1 00737 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $0
	0x02e1 00737 (pointer_vs_value/code/gc_test.go:133)	MOVQ	AX, (SP)
	0x02e5 00741 (pointer_vs_value/code/gc_test.go:133)	MOVQ	$24, 8(SP)
	0x02ee 00750 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $1
	0x02ee 00750 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $16
	0x02ee 00750 (pointer_vs_value/code/gc_test.go:133)	MOVQ	""..autotmp_16+184(SP), AX
	0x02f6 00758 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $0
	0x02f6 00758 (pointer_vs_value/code/gc_test.go:133)	MOVQ	AX, 16(SP)
	0x02fb 00763 (pointer_vs_value/code/gc_test.go:133)	MOVQ	$5, 24(SP)
	0x0304 00772 (pointer_vs_value/code/gc_test.go:133)	MOVQ	$5, 32(SP)
	0x030d 00781 (pointer_vs_value/code/gc_test.go:133)	CALL	fmt.Sprintf(SB)
	0x0312 00786 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $1
	0x0312 00786 (pointer_vs_value/code/gc_test.go:133)	MOVQ	40(SP), AX
	0x0317 00791 (pointer_vs_value/code/gc_test.go:133)	MOVQ	48(SP), CX
	0x031c 00796 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $0
	0x031c 00796 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $18
	0x031c 00796 (pointer_vs_value/code/gc_test.go:133)	MOVQ	AX, ""..autotmp_5+144(SP)
	0x0324 00804 (pointer_vs_value/code/gc_test.go:133)	MOVQ	CX, ""..autotmp_5+152(SP)
	0x032c 00812 (pointer_vs_value/code/gc_test.go:133)	CALL	runtime.printlock(SB)
	0x0331 00817 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $1
	0x0331 00817 (pointer_vs_value/code/gc_test.go:133)	MOVQ	""..autotmp_5+144(SP), AX
	0x0339 00825 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $16
	0x0339 00825 (pointer_vs_value/code/gc_test.go:133)	MOVQ	""..autotmp_5+152(SP), CX
	0x0341 00833 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $0
	0x0341 00833 (pointer_vs_value/code/gc_test.go:133)	MOVQ	AX, (SP)
	0x0345 00837 (pointer_vs_value/code/gc_test.go:133)	MOVQ	CX, 8(SP)
	0x034a 00842 (pointer_vs_value/code/gc_test.go:133)	CALL	runtime.printstring(SB)
	0x034f 00847 (pointer_vs_value/code/gc_test.go:133)	CALL	runtime.printnl(SB)
	0x0354 00852 (pointer_vs_value/code/gc_test.go:133)	CALL	runtime.printunlock(SB)
	0x0359 00857 (pointer_vs_value/code/gc_test.go:135)	MOVQ	312(SP), BP
	0x0361 00865 (pointer_vs_value/code/gc_test.go:135)	ADDQ	$320, SP
	0x0368 00872 (pointer_vs_value/code/gc_test.go:135)	RET
	0x0369 00873 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$0, $-2
	0x0369 00873 (pointer_vs_value/code/gc_test.go:133)	PCDATA	$1, $-2
	0x0369 00873 (pointer_vs_value/code/gc_test.go:133)	CALL	runtime.gcWriteBarrier(SB)
	0x036e 00878 (pointer_vs_value/code/gc_test.go:133)	JMP	689
	0x0373 00883 (pointer_vs_value/code/gc_test.go:133)	CALL	runtime.gcWriteBarrier(SB)
	0x0378 00888 (pointer_vs_value/code/gc_test.go:133)	JMP	642
	0x037d 00893 (pointer_vs_value/code/gc_test.go:133)	MOVQ	CX, AX
	0x0380 00896 (pointer_vs_value/code/gc_test.go:133)	CALL	runtime.gcWriteBarrier(SB)
	0x0385 00901 (pointer_vs_value/code/gc_test.go:133)	JMP	595
	0x038a 00906 (pointer_vs_value/code/gc_test.go:131)	LEAQ	type.runtime/debug.GCStats(SB), AX
	0x0391 00913 (pointer_vs_value/code/gc_test.go:131)	MOVQ	AX, (SP)
	0x0395 00917 (pointer_vs_value/code/gc_test.go:131)	MOVQ	DI, 8(SP)
	0x039a 00922 (pointer_vs_value/code/gc_test.go:131)	CALL	runtime.typedmemclr(SB)
	0x039f 00927 (pointer_vs_value/code/gc_test.go:131)	JMP	131
	0x03a4 00932 (pointer_vs_value/code/gc_test.go:131)	NOP
	0x03a4 00932 (pointer_vs_value/code/gc_test.go:128)	PCDATA	$1, $-1
	0x03a4 00932 (pointer_vs_value/code/gc_test.go:128)	PCDATA	$0, $-1
	0x03a4 00932 (pointer_vs_value/code/gc_test.go:128)	CALL	runtime.morestack_noctxt(SB)
	0x03a9 00937 (pointer_vs_value/code/gc_test.go:128)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 40 ff ff  eH..%....H..$@..
	0x0010 ff 48 3b 41 10 0f 86 89 03 00 00 48 81 ec 40 01  .H;A.......H..@.
	0x0020 00 00 48 89 ac 24 38 01 00 00 48 8d ac 24 38 01  ..H..$8...H..$8.
	0x0030 00 00 e8 00 00 00 00 e8 00 00 00 00 48 8d 05 00  ............H...
	0x0040 00 00 00 48 89 04 24 e8 00 00 00 00 48 8b 7c 24  ...H..$.....H.|$
	0x0050 08 48 89 bc 24 88 00 00 00 83 3d 00 00 00 00 00  .H..$.....=.....
	0x0060 74 05 e9 23 03 00 00 0f 57 c0 48 8d 7f f0 48 89  t..#....W.H...H.
	0x0070 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00 00 48 8b 6d  l$.H.l$......H.m
	0x0080 00 eb 00 48 8b 84 24 88 00 00 00 48 89 44 24 58  ...H..$....H.D$X
	0x0090 48 89 04 24 e8 00 00 00 00 48 8b 84 24 88 00 00  H..$.....H..$...
	0x00a0 00 48 8b 48 28 48 8b 50 30 48 8b 40 38 48 89 8c  .H.H(H.P0H.@8H..
	0x00b0 24 a0 00 00 00 48 89 94 24 a8 00 00 00 48 89 84  $....H..$....H..
	0x00c0 24 b0 00 00 00 48 89 0c 24 48 89 54 24 08 48 89  $....H..$H.T$.H.
	0x00d0 44 24 10 e8 00 00 00 00 48 8b 44 24 18 48 89 44  D$......H.D$.H.D
	0x00e0 24 40 48 8b 84 24 50 01 00 00 48 8b 8c 24 48 01  $@H..$P...H..$H.
	0x00f0 00 00 48 89 0c 24 48 89 44 24 08 e8 00 00 00 00  ..H..$H.D$......
	0x0100 48 8b 44 24 10 48 89 44 24 50 48 8b 84 24 88 00  H.D$.H.D$PH..$..
	0x0110 00 00 48 8b 40 18 48 89 44 24 38 48 89 04 24 e8  ..H.@.H.D$8H..$.
	0x0120 00 00 00 00 48 8b 44 24 08 48 89 84 24 80 00 00  ....H.D$.H..$...
	0x0130 00 48 8b 44 24 40 48 89 04 24 e8 00 00 00 00 48  .H.D$@H..$.....H
	0x0140 8b 44 24 08 48 89 44 24 78 48 8b 84 24 88 00 00  .D$.H.D$xH..$...
	0x0150 00 48 8b 48 68 48 8b 50 60 48 8b 40 58 48 89 84  .H.HhH.P`H.@XH..
	0x0160 24 d0 00 00 00 48 89 94 24 d8 00 00 00 48 89 8c  $....H..$....H..
	0x0170 24 e0 00 00 00 48 89 04 24 48 89 54 24 08 48 89  $....H..$H.T$.H.
	0x0180 4c 24 10 e8 00 00 00 00 48 8b 44 24 18 48 89 44  L$......H.D$.H.D
	0x0190 24 70 48 8b 84 24 88 00 00 00 48 8b 40 20 48 89  $pH..$....H.@ H.
	0x01a0 44 24 48 48 89 04 24 e8 00 00 00 00 48 8b 44 24  D$HH..$.....H.D$
	0x01b0 08 48 89 44 24 68 48 8d bc 24 e8 00 00 00 0f 57  .H.D$hH..$.....W
	0x01c0 c0 48 8d 7f d0 48 89 6c 24 f0 48 8d 6c 24 f0 e8  .H...H.l$.H.l$..
	0x01d0 00 00 00 00 48 8b 6d 00 48 8d 84 24 e8 00 00 00  ....H.m.H..$....
	0x01e0 48 89 44 24 60 84 00 48 8b 4c 24 50 48 8d 15 00  H.D$`..H.L$PH...
	0x01f0 00 00 00 48 89 94 24 e8 00 00 00 48 89 8c 24 f0  ...H..$....H..$.
	0x0200 00 00 00 84 00 48 8b 84 24 80 00 00 00 48 8d 0d  .....H..$....H..
	0x0210 00 00 00 00 48 89 8c 24 f8 00 00 00 48 89 84 24  ....H..$....H..$
	0x0220 00 01 00 00 48 8b 44 24 60 84 00 48 8b 4c 24 78  ....H.D$`..H.L$x
	0x0230 48 8d 15 00 00 00 00 48 89 50 20 48 8d 78 28 83  H......H.P H.x(.
	0x0240 3d 00 00 00 00 00 74 05 e9 30 01 00 00 48 89 48  =.....t..0...H.H
	0x0250 28 eb 00 48 8b 4c 24 60 84 01 48 8b 44 24 70 48  (..H.L$`..H.D$pH
	0x0260 8d 15 00 00 00 00 48 89 51 30 48 8d 79 38 83 3d  ......H.Q0H.y8.=
	0x0270 00 00 00 00 00 74 05 e9 f7 00 00 00 48 89 41 38  .....t......H.A8
	0x0280 eb 00 48 8b 4c 24 60 84 01 48 8b 44 24 68 48 8d  ..H.L$`..H.D$hH.
	0x0290 15 00 00 00 00 48 89 51 40 48 8d 79 48 83 3d 00  .....H.Q@H.yH.=.
	0x02a0 00 00 00 00 74 05 e9 be 00 00 00 48 89 41 48 eb  ....t......H.AH.
	0x02b0 00 48 8b 44 24 60 84 00 eb 00 48 89 84 24 b8 00  .H.D$`....H..$..
	0x02c0 00 00 48 c7 84 24 c0 00 00 00 05 00 00 00 48 c7  ..H..$........H.
	0x02d0 84 24 c8 00 00 00 05 00 00 00 48 8d 05 00 00 00  .$........H.....
	0x02e0 00 48 89 04 24 48 c7 44 24 08 18 00 00 00 48 8b  .H..$H.D$.....H.
	0x02f0 84 24 b8 00 00 00 48 89 44 24 10 48 c7 44 24 18  .$....H.D$.H.D$.
	0x0300 05 00 00 00 48 c7 44 24 20 05 00 00 00 e8 00 00  ....H.D$ .......
	0x0310 00 00 48 8b 44 24 28 48 8b 4c 24 30 48 89 84 24  ..H.D$(H.L$0H..$
	0x0320 90 00 00 00 48 89 8c 24 98 00 00 00 e8 00 00 00  ....H..$........
	0x0330 00 48 8b 84 24 90 00 00 00 48 8b 8c 24 98 00 00  .H..$....H..$...
	0x0340 00 48 89 04 24 48 89 4c 24 08 e8 00 00 00 00 e8  .H..$H.L$.......
	0x0350 00 00 00 00 e8 00 00 00 00 48 8b ac 24 38 01 00  .........H..$8..
	0x0360 00 48 81 c4 40 01 00 00 c3 e8 00 00 00 00 e9 3e  .H..@..........>
	0x0370 ff ff ff e8 00 00 00 00 e9 05 ff ff ff 48 89 c8  .............H..
	0x0380 e8 00 00 00 00 e9 c9 fe ff ff 48 8d 05 00 00 00  ..........H.....
	0x0390 00 48 89 04 24 48 89 7c 24 08 e8 00 00 00 00 e9  .H..$H.|$.......
	0x03a0 df fc ff ff e8 00 00 00 00 e9 52 fc ff ff        ..........R...
	rel 5+4 t=16 TLS+0
	rel 51+4 t=8 runtime.GC+0
	rel 56+4 t=8 runtime.GC+0
	rel 63+4 t=15 type.runtime/debug.GCStats+0
	rel 72+4 t=8 runtime.newobject+0
	rel 91+4 t=15 runtime.writeBarrier+-1
	rel 121+4 t=8 runtime.duffzero+269
	rel 149+4 t=8 runtime/debug.ReadGCStats+0
	rel 212+4 t=8 "".sum+0
	rel 252+4 t=8 runtime.convTstring+0
	rel 288+4 t=8 runtime.convT64+0
	rel 315+4 t=8 runtime.convT64+0
	rel 388+4 t=8 runtime.convTslice+0
	rel 424+4 t=8 runtime.convT64+0
	rel 464+4 t=8 runtime.duffzero+277
	rel 495+4 t=15 type.string+0
	rel 528+4 t=15 type.int64+0
	rel 563+4 t=15 type.int64+0
	rel 577+4 t=15 runtime.writeBarrier+-1
	rel 610+4 t=15 type.[]time.Duration+0
	rel 624+4 t=15 runtime.writeBarrier+-1
	rel 657+4 t=15 type.time.Duration+0
	rel 671+4 t=15 runtime.writeBarrier+-1
	rel 733+4 t=15 go.string."\n%s , %v , %v , %v , %v\n"+0
	rel 782+4 t=8 fmt.Sprintf+0
	rel 813+4 t=8 runtime.printlock+0
	rel 843+4 t=8 runtime.printstring+0
	rel 848+4 t=8 runtime.printnl+0
	rel 853+4 t=8 runtime.printunlock+0
	rel 874+4 t=8 runtime.gcWriteBarrier+0
	rel 884+4 t=8 runtime.gcWriteBarrier+0
	rel 897+4 t=8 runtime.gcWriteBarrier+0
	rel 909+4 t=15 type.runtime/debug.GCStats+0
	rel 923+4 t=8 runtime.typedmemclr+0
	rel 933+4 t=8 runtime.morestack_noctxt+0
type..hash.[5]interface {} STEXT dupok size=176 args=0x18 locals=0x40
	0x0000 00000 (<autogenerated>:1)	TEXT	type..hash.[5]interface {}(SB), DUPOK|ABIInternal, $64-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	166
	0x0013 00019 (<autogenerated>:1)	SUBQ	$64, SP
	0x0017 00023 (<autogenerated>:1)	MOVQ	BP, 56(SP)
	0x001c 00028 (<autogenerated>:1)	LEAQ	56(SP), BP
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$1, gclocals·263043c8f03e3241528dfae4e2812ef4(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0021 00033 (<autogenerated>:1)	PCDATA	$0, $0
	0x0021 00033 (<autogenerated>:1)	PCDATA	$1, $0
	0x0021 00033 (<autogenerated>:1)	MOVQ	$0, "".~r2+88(SP)
	0x002a 00042 (<autogenerated>:1)	MOVQ	$0, ""..autotmp_4+40(SP)
	0x0033 00051 (<autogenerated>:1)	MOVQ	$5, ""..autotmp_5+32(SP)
	0x003c 00060 (<autogenerated>:1)	JMP	62
	0x003e 00062 (<autogenerated>:1)	MOVQ	""..autotmp_5+32(SP), AX
	0x0043 00067 (<autogenerated>:1)	CMPQ	""..autotmp_4+40(SP), AX
	0x0048 00072 (<autogenerated>:1)	JLT	76
	0x004a 00074 (<autogenerated>:1)	JMP	146
	0x004c 00076 (<autogenerated>:1)	MOVQ	""..autotmp_4+40(SP), AX
	0x0051 00081 (<autogenerated>:1)	MOVQ	AX, "".i+24(SP)
	0x0056 00086 (<autogenerated>:1)	SHLQ	$4, AX
	0x005a 00090 (<autogenerated>:1)	PCDATA	$0, $1
	0x005a 00090 (<autogenerated>:1)	ADDQ	"".p+72(SP), AX
	0x005f 00095 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_6+48(SP)
	0x0064 00100 (<autogenerated>:1)	PCDATA	$0, $0
	0x0064 00100 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0068 00104 (<autogenerated>:1)	MOVQ	"".h+80(SP), AX
	0x006d 00109 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0072 00114 (<autogenerated>:1)	CALL	runtime.nilinterhash(SB)
	0x0077 00119 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x007c 00124 (<autogenerated>:1)	MOVQ	AX, "".h+80(SP)
	0x0081 00129 (<autogenerated>:1)	JMP	131
	0x0083 00131 (<autogenerated>:1)	MOVQ	""..autotmp_4+40(SP), AX
	0x0088 00136 (<autogenerated>:1)	INCQ	AX
	0x008b 00139 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_4+40(SP)
	0x0090 00144 (<autogenerated>:1)	JMP	62
	0x0092 00146 (<autogenerated>:1)	PCDATA	$1, $1
	0x0092 00146 (<autogenerated>:1)	MOVQ	"".h+80(SP), AX
	0x0097 00151 (<autogenerated>:1)	MOVQ	AX, "".~r2+88(SP)
	0x009c 00156 (<autogenerated>:1)	MOVQ	56(SP), BP
	0x00a1 00161 (<autogenerated>:1)	ADDQ	$64, SP
	0x00a5 00165 (<autogenerated>:1)	RET
	0x00a6 00166 (<autogenerated>:1)	NOP
	0x00a6 00166 (<autogenerated>:1)	PCDATA	$1, $-1
	0x00a6 00166 (<autogenerated>:1)	PCDATA	$0, $-1
	0x00a6 00166 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x00ab 00171 (<autogenerated>:1)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 93  eH..%....H;a....
	0x0010 00 00 00 48 83 ec 40 48 89 6c 24 38 48 8d 6c 24  ...H..@H.l$8H.l$
	0x0020 38 48 c7 44 24 58 00 00 00 00 48 c7 44 24 28 00  8H.D$X....H.D$(.
	0x0030 00 00 00 48 c7 44 24 20 05 00 00 00 eb 00 48 8b  ...H.D$ ......H.
	0x0040 44 24 20 48 39 44 24 28 7c 02 eb 46 48 8b 44 24  D$ H9D$(|..FH.D$
	0x0050 28 48 89 44 24 18 48 c1 e0 04 48 03 44 24 48 48  (H.D$.H...H.D$HH
	0x0060 89 44 24 30 48 89 04 24 48 8b 44 24 50 48 89 44  .D$0H..$H.D$PH.D
	0x0070 24 08 e8 00 00 00 00 48 8b 44 24 10 48 89 44 24  $......H.D$.H.D$
	0x0080 50 eb 00 48 8b 44 24 28 48 ff c0 48 89 44 24 28  P..H.D$(H..H.D$(
	0x0090 eb ac 48 8b 44 24 50 48 89 44 24 58 48 8b 6c 24  ..H.D$PH.D$XH.l$
	0x00a0 38 48 83 c4 40 c3 e8 00 00 00 00 e9 50 ff ff ff  8H..@.......P...
	rel 5+4 t=16 TLS+0
	rel 115+4 t=8 runtime.nilinterhash+0
	rel 167+4 t=8 runtime.morestack_noctxt+0
type..eq.[5]interface {} STEXT dupok size=248 args=0x18 locals=0x60
	0x0000 00000 (<autogenerated>:1)	TEXT	type..eq.[5]interface {}(SB), DUPOK|ABIInternal, $96-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	238
	0x0013 00019 (<autogenerated>:1)	SUBQ	$96, SP
	0x0017 00023 (<autogenerated>:1)	MOVQ	BP, 88(SP)
	0x001c 00028 (<autogenerated>:1)	LEAQ	88(SP), BP
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$0, gclocals·5e326a2f5498e528ce8fbe7bd86e7d21(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$1, gclocals·5363b3e3636eaaac400b9fb2466dc1f5(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$2, gclocals·6e8d7ea4abad763909b26991048ee1fe(SB)
	0x0021 00033 (<autogenerated>:1)	PCDATA	$0, $0
	0x0021 00033 (<autogenerated>:1)	PCDATA	$1, $0
	0x0021 00033 (<autogenerated>:1)	MOVB	$0, "".~r2+120(SP)
	0x0026 00038 (<autogenerated>:1)	MOVQ	$0, ""..autotmp_4+48(SP)
	0x002f 00047 (<autogenerated>:1)	MOVQ	$5, ""..autotmp_5+40(SP)
	0x0038 00056 (<autogenerated>:1)	JMP	58
	0x003a 00058 (<autogenerated>:1)	MOVQ	""..autotmp_5+40(SP), AX
	0x003f 00063 (<autogenerated>:1)	CMPQ	""..autotmp_4+48(SP), AX
	0x0044 00068 (<autogenerated>:1)	JLT	75
	0x0046 00070 (<autogenerated>:1)	JMP	223
	0x004b 00075 (<autogenerated>:1)	MOVQ	""..autotmp_4+48(SP), AX
	0x0050 00080 (<autogenerated>:1)	MOVQ	AX, "".i+32(SP)
	0x0055 00085 (<autogenerated>:1)	SHLQ	$4, AX
	0x0059 00089 (<autogenerated>:1)	PCDATA	$0, $1
	0x0059 00089 (<autogenerated>:1)	ADDQ	"".q+112(SP), AX
	0x005e 00094 (<autogenerated>:1)	PCDATA	$0, $2
	0x005e 00094 (<autogenerated>:1)	MOVQ	8(AX), CX
	0x0062 00098 (<autogenerated>:1)	PCDATA	$0, $3
	0x0062 00098 (<autogenerated>:1)	MOVQ	(AX), AX
	0x0065 00101 (<autogenerated>:1)	PCDATA	$1, $1
	0x0065 00101 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_6+72(SP)
	0x006a 00106 (<autogenerated>:1)	PCDATA	$0, $0
	0x006a 00106 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_6+80(SP)
	0x006f 00111 (<autogenerated>:1)	MOVQ	"".i+32(SP), AX
	0x0074 00116 (<autogenerated>:1)	SHLQ	$4, AX
	0x0078 00120 (<autogenerated>:1)	PCDATA	$0, $1
	0x0078 00120 (<autogenerated>:1)	ADDQ	"".p+104(SP), AX
	0x007d 00125 (<autogenerated>:1)	PCDATA	$0, $2
	0x007d 00125 (<autogenerated>:1)	MOVQ	8(AX), CX
	0x0081 00129 (<autogenerated>:1)	PCDATA	$0, $3
	0x0081 00129 (<autogenerated>:1)	MOVQ	(AX), AX
	0x0084 00132 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_7+56(SP)
	0x0089 00137 (<autogenerated>:1)	MOVQ	CX, ""..autotmp_7+64(SP)
	0x008e 00142 (<autogenerated>:1)	CMPQ	""..autotmp_6+72(SP), AX
	0x0093 00147 (<autogenerated>:1)	JNE	151
	0x0095 00149 (<autogenerated>:1)	JMP	168
	0x0097 00151 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0097 00151 (<autogenerated>:1)	PCDATA	$1, $-2
	0x0097 00151 (<autogenerated>:1)	JMP	153
	0x0099 00153 (<autogenerated>:1)	PCDATA	$0, $0
	0x0099 00153 (<autogenerated>:1)	PCDATA	$1, $2
	0x0099 00153 (<autogenerated>:1)	MOVB	$0, "".~r2+120(SP)
	0x009e 00158 (<autogenerated>:1)	MOVQ	88(SP), BP
	0x00a3 00163 (<autogenerated>:1)	ADDQ	$96, SP
	0x00a7 00167 (<autogenerated>:1)	RET
	0x00a8 00168 (<autogenerated>:1)	PCDATA	$0, $3
	0x00a8 00168 (<autogenerated>:1)	PCDATA	$1, $1
	0x00a8 00168 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x00ac 00172 (<autogenerated>:1)	PCDATA	$0, $0
	0x00ac 00172 (<autogenerated>:1)	MOVQ	CX, 8(SP)
	0x00b1 00177 (<autogenerated>:1)	PCDATA	$0, $1
	0x00b1 00177 (<autogenerated>:1)	PCDATA	$1, $0
	0x00b1 00177 (<autogenerated>:1)	MOVQ	""..autotmp_6+80(SP), AX
	0x00b6 00182 (<autogenerated>:1)	PCDATA	$0, $0
	0x00b6 00182 (<autogenerated>:1)	MOVQ	AX, 16(SP)
	0x00bb 00187 (<autogenerated>:1)	CALL	runtime.efaceeq(SB)
	0x00c0 00192 (<autogenerated>:1)	CMPB	24(SP), $0
	0x00c5 00197 (<autogenerated>:1)	JNE	201
	0x00c7 00199 (<autogenerated>:1)	JMP	221
	0x00c9 00201 (<autogenerated>:1)	PCDATA	$0, $-2
	0x00c9 00201 (<autogenerated>:1)	PCDATA	$1, $-2
	0x00c9 00201 (<autogenerated>:1)	JMP	203
	0x00cb 00203 (<autogenerated>:1)	PCDATA	$0, $0
	0x00cb 00203 (<autogenerated>:1)	PCDATA	$1, $0
	0x00cb 00203 (<autogenerated>:1)	MOVQ	""..autotmp_4+48(SP), AX
	0x00d0 00208 (<autogenerated>:1)	INCQ	AX
	0x00d3 00211 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_4+48(SP)
	0x00d8 00216 (<autogenerated>:1)	JMP	58
	0x00dd 00221 (<autogenerated>:1)	PCDATA	$0, $-2
	0x00dd 00221 (<autogenerated>:1)	PCDATA	$1, $-2
	0x00dd 00221 (<autogenerated>:1)	JMP	153
	0x00df 00223 (<autogenerated>:1)	PCDATA	$0, $0
	0x00df 00223 (<autogenerated>:1)	PCDATA	$1, $2
	0x00df 00223 (<autogenerated>:1)	MOVB	$1, "".~r2+120(SP)
	0x00e4 00228 (<autogenerated>:1)	MOVQ	88(SP), BP
	0x00e9 00233 (<autogenerated>:1)	ADDQ	$96, SP
	0x00ed 00237 (<autogenerated>:1)	RET
	0x00ee 00238 (<autogenerated>:1)	NOP
	0x00ee 00238 (<autogenerated>:1)	PCDATA	$1, $-1
	0x00ee 00238 (<autogenerated>:1)	PCDATA	$0, $-1
	0x00ee 00238 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x00f3 00243 (<autogenerated>:1)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 db  eH..%....H;a....
	0x0010 00 00 00 48 83 ec 60 48 89 6c 24 58 48 8d 6c 24  ...H..`H.l$XH.l$
	0x0020 58 c6 44 24 78 00 48 c7 44 24 30 00 00 00 00 48  X.D$x.H.D$0....H
	0x0030 c7 44 24 28 05 00 00 00 eb 00 48 8b 44 24 28 48  .D$(......H.D$(H
	0x0040 39 44 24 30 7c 05 e9 94 00 00 00 48 8b 44 24 30  9D$0|......H.D$0
	0x0050 48 89 44 24 20 48 c1 e0 04 48 03 44 24 70 48 8b  H.D$ H...H.D$pH.
	0x0060 48 08 48 8b 00 48 89 44 24 48 48 89 4c 24 50 48  H.H..H.D$HH.L$PH
	0x0070 8b 44 24 20 48 c1 e0 04 48 03 44 24 68 48 8b 48  .D$ H...H.D$hH.H
	0x0080 08 48 8b 00 48 89 44 24 38 48 89 4c 24 40 48 39  .H..H.D$8H.L$@H9
	0x0090 44 24 48 75 02 eb 11 eb 00 c6 44 24 78 00 48 8b  D$Hu......D$x.H.
	0x00a0 6c 24 58 48 83 c4 60 c3 48 89 04 24 48 89 4c 24  l$XH..`.H..$H.L$
	0x00b0 08 48 8b 44 24 50 48 89 44 24 10 e8 00 00 00 00  .H.D$PH.D$......
	0x00c0 80 7c 24 18 00 75 02 eb 14 eb 00 48 8b 44 24 30  .|$..u.....H.D$0
	0x00d0 48 ff c0 48 89 44 24 30 e9 5d ff ff ff eb ba c6  H..H.D$0.]......
	0x00e0 44 24 78 01 48 8b 6c 24 58 48 83 c4 60 c3 e8 00  D$x.H.l$XH..`...
	0x00f0 00 00 00 e9 08 ff ff ff                          ........
	rel 5+4 t=16 TLS+0
	rel 188+4 t=8 runtime.efaceeq+0
	rel 239+4 t=8 runtime.morestack_noctxt+0
"".sum STEXT nosplit size=233 args=0x20 locals=0x60
	0x0000 00000 (pointer_vs_value/code/gc_test.go:137)	TEXT	"".sum(SB), NOSPLIT|ABIInternal, $96-32
	0x0000 00000 (pointer_vs_value/code/gc_test.go:137)	SUBQ	$96, SP
	0x0004 00004 (pointer_vs_value/code/gc_test.go:137)	MOVQ	BP, 88(SP)
	0x0009 00009 (pointer_vs_value/code/gc_test.go:137)	LEAQ	88(SP), BP
	0x000e 00014 (pointer_vs_value/code/gc_test.go:137)	FUNCDATA	$0, gclocals·2d7c1615616d4cf40d01b3385155ed6e(SB)
	0x000e 00014 (pointer_vs_value/code/gc_test.go:137)	FUNCDATA	$1, gclocals·6d81f9fc90b2254ac2f1067a7bf2c67c(SB)
	0x000e 00014 (pointer_vs_value/code/gc_test.go:137)	FUNCDATA	$2, gclocals·ef22736e31ca7e9ff10587cea75d17ff(SB)
	0x000e 00014 (pointer_vs_value/code/gc_test.go:137)	PCDATA	$0, $0
	0x000e 00014 (pointer_vs_value/code/gc_test.go:137)	PCDATA	$1, $0
	0x000e 00014 (pointer_vs_value/code/gc_test.go:137)	MOVQ	$0, "".~r1+128(SP)
	0x001a 00026 (pointer_vs_value/code/gc_test.go:138)	MOVQ	$0, "".f+8(SP)
	0x0023 00035 (pointer_vs_value/code/gc_test.go:139)	MOVQ	"".durations+120(SP), CX
	0x0028 00040 (pointer_vs_value/code/gc_test.go:139)	MOVQ	"".durations+112(SP), DX
	0x002d 00045 (pointer_vs_value/code/gc_test.go:139)	PCDATA	$0, $1
	0x002d 00045 (pointer_vs_value/code/gc_test.go:139)	PCDATA	$1, $1
	0x002d 00045 (pointer_vs_value/code/gc_test.go:139)	MOVQ	"".durations+104(SP), BX
	0x0032 00050 (pointer_vs_value/code/gc_test.go:139)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/gc_test.go:139)	PCDATA	$1, $2
	0x0032 00050 (pointer_vs_value/code/gc_test.go:139)	MOVQ	BX, ""..autotmp_6+64(SP)
	0x0037 00055 (pointer_vs_value/code/gc_test.go:139)	MOVQ	DX, ""..autotmp_6+72(SP)
	0x003c 00060 (pointer_vs_value/code/gc_test.go:139)	MOVQ	CX, ""..autotmp_6+80(SP)
	0x0041 00065 (pointer_vs_value/code/gc_test.go:139)	MOVQ	$0, ""..autotmp_7+48(SP)
	0x004a 00074 (pointer_vs_value/code/gc_test.go:139)	MOVQ	""..autotmp_6+72(SP), CX
	0x004f 00079 (pointer_vs_value/code/gc_test.go:139)	MOVQ	CX, ""..autotmp_8+40(SP)
	0x0054 00084 (pointer_vs_value/code/gc_test.go:139)	JMP	86
	0x0056 00086 (pointer_vs_value/code/gc_test.go:139)	MOVQ	""..autotmp_8+40(SP), CX
	0x005b 00091 (pointer_vs_value/code/gc_test.go:139)	CMPQ	""..autotmp_7+48(SP), CX
	0x0060 00096 (pointer_vs_value/code/gc_test.go:139)	JLT	100
	0x0062 00098 (pointer_vs_value/code/gc_test.go:139)	JMP	210
	0x0064 00100 (pointer_vs_value/code/gc_test.go:139)	MOVQ	""..autotmp_7+48(SP), CX
	0x0069 00105 (pointer_vs_value/code/gc_test.go:139)	SHLQ	$3, CX
	0x006d 00109 (pointer_vs_value/code/gc_test.go:139)	PCDATA	$0, $2
	0x006d 00109 (pointer_vs_value/code/gc_test.go:139)	ADDQ	""..autotmp_6+64(SP), CX
	0x0072 00114 (pointer_vs_value/code/gc_test.go:139)	PCDATA	$0, $0
	0x0072 00114 (pointer_vs_value/code/gc_test.go:139)	MOVQ	(CX), CX
	0x0075 00117 (pointer_vs_value/code/gc_test.go:139)	MOVQ	CX, ""..autotmp_9+32(SP)
	0x007a 00122 (pointer_vs_value/code/gc_test.go:139)	MOVQ	CX, "".d+24(SP)
	0x007f 00127 (pointer_vs_value/code/gc_test.go:140)	MOVQ	CX, time.d+16(SP)
	0x0084 00132 (pointer_vs_value/code/gc_test.go:140)	MOVQ	$0, "".~R0(SP)
	0x008c 00140 (<unknown line number>)	NOP
	0x008c 00140 ($GOROOT/src/time/time.go:787)	MOVQ	time.d+16(SP), CX
	0x0091 00145 ($GOROOT/src/time/time.go:787)	MOVQ	$4722366482869645214, AX
	0x009b 00155 ($GOROOT/src/time/time.go:787)	IMULQ	CX
	0x009e 00158 ($GOROOT/src/time/time.go:787)	SARQ	$8, DX
	0x00a2 00162 ($GOROOT/src/time/time.go:787)	SARQ	$63, CX
	0x00a6 00166 ($GOROOT/src/time/time.go:787)	SUBQ	CX, DX
	0x00a9 00169 (pointer_vs_value/code/gc_test.go:140)	MOVQ	DX, ""..autotmp_10+56(SP)
	0x00ae 00174 (pointer_vs_value/code/gc_test.go:140)	MOVQ	DX, "".~R0(SP)
	0x00b2 00178 (pointer_vs_value/code/gc_test.go:140)	JMP	180
	0x00b4 00180 (pointer_vs_value/code/gc_test.go:140)	MOVQ	"".f+8(SP), CX
	0x00b9 00185 (pointer_vs_value/code/gc_test.go:140)	ADDQ	DX, CX
	0x00bc 00188 (pointer_vs_value/code/gc_test.go:140)	MOVQ	CX, "".f+8(SP)
	0x00c1 00193 (pointer_vs_value/code/gc_test.go:140)	JMP	195
	0x00c3 00195 (pointer_vs_value/code/gc_test.go:139)	MOVQ	""..autotmp_7+48(SP), CX
	0x00c8 00200 (pointer_vs_value/code/gc_test.go:139)	INCQ	CX
	0x00cb 00203 (pointer_vs_value/code/gc_test.go:139)	MOVQ	CX, ""..autotmp_7+48(SP)
	0x00d0 00208 (pointer_vs_value/code/gc_test.go:139)	JMP	86
	0x00d2 00210 (pointer_vs_value/code/gc_test.go:142)	PCDATA	$1, $1
	0x00d2 00210 (pointer_vs_value/code/gc_test.go:142)	MOVQ	"".f+8(SP), AX
	0x00d7 00215 (pointer_vs_value/code/gc_test.go:142)	MOVQ	AX, "".~r1+128(SP)
	0x00df 00223 (pointer_vs_value/code/gc_test.go:142)	MOVQ	88(SP), BP
	0x00e4 00228 (pointer_vs_value/code/gc_test.go:142)	ADDQ	$96, SP
	0x00e8 00232 (pointer_vs_value/code/gc_test.go:142)	RET
	0x0000 48 83 ec 60 48 89 6c 24 58 48 8d 6c 24 58 48 c7  H..`H.l$XH.l$XH.
	0x0010 84 24 80 00 00 00 00 00 00 00 48 c7 44 24 08 00  .$........H.D$..
	0x0020 00 00 00 48 8b 4c 24 78 48 8b 54 24 70 48 8b 5c  ...H.L$xH.T$pH.\
	0x0030 24 68 48 89 5c 24 40 48 89 54 24 48 48 89 4c 24  $hH.\$@H.T$HH.L$
	0x0040 50 48 c7 44 24 30 00 00 00 00 48 8b 4c 24 48 48  PH.D$0....H.L$HH
	0x0050 89 4c 24 28 eb 00 48 8b 4c 24 28 48 39 4c 24 30  .L$(..H.L$(H9L$0
	0x0060 7c 02 eb 6e 48 8b 4c 24 30 48 c1 e1 03 48 03 4c  |..nH.L$0H...H.L
	0x0070 24 40 48 8b 09 48 89 4c 24 20 48 89 4c 24 18 48  $@H..H.L$ H.L$.H
	0x0080 89 4c 24 10 48 c7 04 24 00 00 00 00 48 8b 4c 24  .L$.H..$....H.L$
	0x0090 10 48 b8 9e ef a7 c6 4b 37 89 41 48 f7 e9 48 c1  .H.....K7.AH..H.
	0x00a0 fa 08 48 c1 f9 3f 48 29 ca 48 89 54 24 38 48 89  ..H..?H).H.T$8H.
	0x00b0 14 24 eb 00 48 8b 4c 24 08 48 01 d1 48 89 4c 24  .$..H.L$.H..H.L$
	0x00c0 08 eb 00 48 8b 4c 24 30 48 ff c1 48 89 4c 24 30  ...H.L$0H..H.L$0
	0x00d0 eb 84 48 8b 44 24 08 48 89 84 24 80 00 00 00 48  ..H.D$.H..$....H
	0x00e0 8b 6c 24 58 48 83 c4 60 c3                       .l$XH..`.
"".(*micro).GetI STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:13)	TEXT	"".(*micro).GetI(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:13)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:13)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:13)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:13)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:13)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:13)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:14)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:14)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:14)	MOVQ	"".s+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:14)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:14)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:14)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:14)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:14)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*micro).GetF STEXT nosplit size=28 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:17)	TEXT	"".(*micro).GetF(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:17)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:17)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:17)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:17)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:17)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:17)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:17)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:18)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:18)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:18)	MOVQ	"".s+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:18)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:18)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:18)	MOVSD	8(AX), X0
	0x0015 00021 (pointer_vs_value/code/model.go:18)	MOVSD	X0, "".~r0+16(SP)
	0x001b 00027 (pointer_vs_value/code/model.go:18)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 40 08 f2 0f 11 44 24 10 c3              ...@....D$..
"".(*tiny).GetI STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:27)	TEXT	"".(*tiny).GetI(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:27)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:27)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:27)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:27)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:27)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:27)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:28)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:28)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:28)	MOVQ	"".s+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:28)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:28)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:28)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:28)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:28)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*tiny).GetF STEXT nosplit size=28 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:31)	TEXT	"".(*tiny).GetF(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:31)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:31)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:31)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:31)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:31)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:31)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:31)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:32)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:32)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:32)	MOVQ	"".s+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:32)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:32)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:32)	MOVSD	8(AX), X0
	0x0015 00021 (pointer_vs_value/code/model.go:32)	MOVSD	X0, "".~r0+16(SP)
	0x001b 00027 (pointer_vs_value/code/model.go:32)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 40 08 f2 0f 11 44 24 10 c3              ...@....D$..
"".(*mini).GetI STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:47)	TEXT	"".(*mini).GetI(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:47)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:47)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:47)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:47)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:47)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:47)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:48)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:48)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:48)	MOVQ	"".s+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:48)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:48)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:48)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:48)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:48)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*mini).GetF STEXT nosplit size=28 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:51)	TEXT	"".(*mini).GetF(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:51)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:51)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:51)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:51)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:51)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:51)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:51)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:52)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:52)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:52)	MOVQ	"".s+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:52)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:52)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:52)	MOVSD	24(AX), X0
	0x0015 00021 (pointer_vs_value/code/model.go:52)	MOVSD	X0, "".~r0+16(SP)
	0x001b 00027 (pointer_vs_value/code/model.go:52)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 40 18 f2 0f 11 44 24 10 c3              ...@....D$..
"".(*mega).GetI STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:91)	TEXT	"".(*mega).GetI(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:91)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:91)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:91)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:91)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:91)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:91)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:92)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:92)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:92)	MOVQ	"".s+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:92)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:92)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:92)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:92)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:92)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*mega).GetF STEXT nosplit size=28 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:95)	TEXT	"".(*mega).GetF(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:95)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:95)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:95)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:95)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:95)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:95)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:95)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:96)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:96)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:96)	MOVQ	"".s+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:96)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:96)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:96)	MOVSD	88(AX), X0
	0x0015 00021 (pointer_vs_value/code/model.go:96)	MOVSD	X0, "".~r0+16(SP)
	0x001b 00027 (pointer_vs_value/code/model.go:96)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 40 58 f2 0f 11 44 24 10 c3              ...@X...D$..
"".(*tera).GetI STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:235)	TEXT	"".(*tera).GetI(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:235)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:235)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:235)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:235)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:235)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:235)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:236)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:236)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:236)	MOVQ	"".s+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:236)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:236)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:236)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:236)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:236)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*tera).GetF STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:239)	TEXT	"".(*tera).GetF(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:239)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:239)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:239)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:239)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:239)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:239)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:239)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:240)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:240)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:240)	MOVQ	"".s+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:240)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:240)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:240)	MOVSD	208(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:240)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:240)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 d0 00 00 00 f2 0f 11 44 24 10 c3     ...........D$..
"".(*giga).get_a STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:298)	TEXT	"".(*giga).get_a(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:298)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:298)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:298)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:298)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:298)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:298)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:299)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:299)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:299)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:299)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:299)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:299)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:299)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:299)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_b STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:302)	TEXT	"".(*giga).get_b(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:302)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:302)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:302)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:302)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:302)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:302)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:303)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:303)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:303)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:303)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:303)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:303)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:303)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:303)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_c STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:306)	TEXT	"".(*giga).get_c(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:306)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:306)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:306)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:306)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:306)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:306)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:307)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:307)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:307)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:307)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:307)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:307)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:307)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:307)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_d STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:310)	TEXT	"".(*giga).get_d(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:310)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:310)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:310)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:310)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:310)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:310)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:311)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:311)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:311)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:311)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:311)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:311)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:311)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:311)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_e STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:314)	TEXT	"".(*giga).get_e(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:314)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:314)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:314)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:314)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:314)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:314)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:315)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:315)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:315)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:315)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:315)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:315)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:315)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:315)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_f STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:318)	TEXT	"".(*giga).get_f(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:318)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:318)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:318)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:318)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:318)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:318)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:319)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:319)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:319)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:319)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:319)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:319)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:319)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:319)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_g STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:322)	TEXT	"".(*giga).get_g(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:322)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:322)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:322)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:322)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:322)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:322)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:323)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:323)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:323)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:323)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:323)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:323)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:323)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:323)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_h STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:326)	TEXT	"".(*giga).get_h(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:326)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:326)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:326)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:326)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:326)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:326)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:327)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:327)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:327)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:327)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:327)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:327)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:327)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:327)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_i STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:330)	TEXT	"".(*giga).get_i(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:330)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:330)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:330)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:330)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:330)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:330)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:331)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:331)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:331)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:331)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:331)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:331)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:331)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:331)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_j STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:334)	TEXT	"".(*giga).get_j(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:334)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:334)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:334)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:334)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:334)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:334)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:335)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:335)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:335)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:335)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:335)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:335)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:335)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:335)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_k STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:338)	TEXT	"".(*giga).get_k(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:338)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:338)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:338)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:338)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:338)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:338)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:339)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:339)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:339)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:339)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:339)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:339)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:339)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:339)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_l STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:342)	TEXT	"".(*giga).get_l(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:342)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:342)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:342)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:342)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:342)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:342)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:343)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:343)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:343)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:343)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:343)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:343)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:343)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:343)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_m STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:346)	TEXT	"".(*giga).get_m(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:346)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:346)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:346)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:346)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:346)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:346)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:347)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:347)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:347)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:347)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:347)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:347)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:347)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:347)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_n STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:350)	TEXT	"".(*giga).get_n(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:350)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:350)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:350)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:350)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:350)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:350)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:351)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:351)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:351)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:351)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:351)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:351)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:351)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:351)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_o STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:354)	TEXT	"".(*giga).get_o(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:354)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:354)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:354)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:354)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:354)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:354)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:355)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:355)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:355)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:355)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:355)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:355)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:355)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:355)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_p STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:358)	TEXT	"".(*giga).get_p(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:358)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:358)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:358)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:358)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:358)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:358)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:359)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:359)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:359)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:359)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:359)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:359)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:359)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:359)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_q STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:362)	TEXT	"".(*giga).get_q(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:362)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:362)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:362)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:362)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:362)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:362)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:363)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:363)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:363)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:363)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:363)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:363)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:363)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:363)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_r STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:366)	TEXT	"".(*giga).get_r(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:366)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:366)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:366)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:366)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:366)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:366)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:367)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:367)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:367)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:367)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:367)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:367)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:367)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:367)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_s STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:370)	TEXT	"".(*giga).get_s(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:370)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:370)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:370)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:370)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:370)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:370)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:371)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:371)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:371)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:371)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:371)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:371)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:371)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:371)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_t STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:374)	TEXT	"".(*giga).get_t(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:374)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:374)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:374)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:374)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:374)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:374)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:375)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:375)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:375)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:375)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:375)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:375)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:375)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:375)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_u STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:378)	TEXT	"".(*giga).get_u(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:378)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:378)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:378)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:378)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:378)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:378)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:379)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:379)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:379)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:379)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:379)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:379)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:379)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:379)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_v STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:382)	TEXT	"".(*giga).get_v(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:382)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:382)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:382)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:382)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:382)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:382)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:383)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:383)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:383)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:383)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:383)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:383)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:383)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:383)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_x STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:386)	TEXT	"".(*giga).get_x(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:386)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:386)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:386)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:386)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:386)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:386)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:387)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:387)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:387)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:387)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:387)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:387)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:387)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:387)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_y STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:390)	TEXT	"".(*giga).get_y(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:390)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:390)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:390)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:390)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:390)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:390)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:391)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:391)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:391)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:391)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:391)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:391)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:391)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:391)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_w STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:394)	TEXT	"".(*giga).get_w(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:394)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:394)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:394)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:394)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:394)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:394)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:395)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:395)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:395)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:395)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:395)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:395)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:395)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:395)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_z STEXT nosplit size=25 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:398)	TEXT	"".(*giga).get_z(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:398)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:398)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:398)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:398)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:398)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:398)	MOVQ	$0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:399)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:399)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:399)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:399)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:399)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:399)	MOVQ	(AX), AX
	0x0013 00019 (pointer_vs_value/code/model.go:399)	MOVQ	AX, "".~r0+16(SP)
	0x0018 00024 (pointer_vs_value/code/model.go:399)	RET
	0x0000 48 c7 44 24 10 00 00 00 00 48 8b 44 24 08 84 00  H.D$.....H.D$...
	0x0010 48 8b 00 48 89 44 24 10 c3                       H..H.D$..
"".(*giga).get_aa STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:403)	TEXT	"".(*giga).get_aa(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:403)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:403)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:403)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:403)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:403)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:403)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:403)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:404)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:404)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:404)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:404)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:404)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:404)	MOVSD	208(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:404)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:404)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 d0 00 00 00 f2 0f 11 44 24 10 c3     ...........D$..
"".(*giga).get_bb STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:407)	TEXT	"".(*giga).get_bb(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:407)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:407)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:407)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:407)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:407)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:407)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:407)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:408)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:408)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:408)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:408)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:408)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:408)	MOVSD	216(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:408)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:408)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 d8 00 00 00 f2 0f 11 44 24 10 c3     ...........D$..
"".(*giga).get_cc STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:411)	TEXT	"".(*giga).get_cc(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:411)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:411)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:411)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:411)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:411)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:411)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:411)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:412)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:412)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:412)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:412)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:412)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:412)	MOVSD	224(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:412)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:412)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 e0 00 00 00 f2 0f 11 44 24 10 c3     ...........D$..
"".(*giga).get_dd STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:415)	TEXT	"".(*giga).get_dd(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:415)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:415)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:415)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:415)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:415)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:415)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:415)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:416)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:416)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:416)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:416)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:416)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:416)	MOVSD	232(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:416)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:416)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 e8 00 00 00 f2 0f 11 44 24 10 c3     ...........D$..
"".(*giga).get_ee STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:419)	TEXT	"".(*giga).get_ee(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:419)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:419)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:419)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:419)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:419)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:419)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:419)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:420)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:420)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:420)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:420)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:420)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:420)	MOVSD	240(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:420)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:420)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 f0 00 00 00 f2 0f 11 44 24 10 c3     ...........D$..
"".(*giga).get_ff STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:423)	TEXT	"".(*giga).get_ff(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:423)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:423)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:423)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:423)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:423)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:423)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:423)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:424)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:424)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:424)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:424)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:424)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:424)	MOVSD	248(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:424)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:424)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 f8 00 00 00 f2 0f 11 44 24 10 c3     ...........D$..
"".(*giga).get_gg STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:427)	TEXT	"".(*giga).get_gg(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:427)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:427)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:427)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:427)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:427)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:427)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:427)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:428)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:428)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:428)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:428)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:428)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:428)	MOVSD	256(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:428)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:428)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 00 01 00 00 f2 0f 11 44 24 10 c3     ...........D$..
"".(*giga).get_hh STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:431)	TEXT	"".(*giga).get_hh(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:431)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:431)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:431)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:431)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:431)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:431)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:431)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:432)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:432)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:432)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:432)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:432)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:432)	MOVSD	264(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:432)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:432)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 08 01 00 00 f2 0f 11 44 24 10 c3     ...........D$..
"".(*giga).get_ii STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:435)	TEXT	"".(*giga).get_ii(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:435)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:435)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:435)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:435)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:435)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:435)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:435)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:436)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:436)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:436)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:436)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:436)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:436)	MOVSD	272(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:436)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:436)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 10 01 00 00 f2 0f 11 44 24 10 c3     ...........D$..
"".(*giga).get_jj STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:439)	TEXT	"".(*giga).get_jj(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:439)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:439)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:439)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:439)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:439)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:439)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:439)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:440)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:440)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:440)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:440)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:440)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:440)	MOVSD	280(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:440)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:440)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 18 01 00 00 f2 0f 11 44 24 10 c3     ...........D$..
"".(*giga).get_kk STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:443)	TEXT	"".(*giga).get_kk(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:443)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:443)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:443)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:443)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:443)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:443)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:443)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:444)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:444)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:444)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:444)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:444)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:444)	MOVSD	288(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:444)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:444)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 20 01 00 00 f2 0f 11 44 24 10 c3     .... ......D$..
"".(*giga).get_ll STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:447)	TEXT	"".(*giga).get_ll(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:447)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:447)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:447)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:447)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:447)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:447)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:447)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:448)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:448)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:448)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:448)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:448)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:448)	MOVSD	296(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:448)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:448)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 28 01 00 00 f2 0f 11 44 24 10 c3     ....(......D$..
"".(*giga).get_mm STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:451)	TEXT	"".(*giga).get_mm(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:451)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:451)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:451)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:451)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:451)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:451)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:451)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:452)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:452)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:452)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:452)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:452)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:452)	MOVSD	312(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:452)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:452)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 38 01 00 00 f2 0f 11 44 24 10 c3     ....8......D$..
"".(*giga).get_nn STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:455)	TEXT	"".(*giga).get_nn(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:455)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:455)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:455)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:455)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:455)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:455)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:455)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:456)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:456)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:456)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:456)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:456)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:456)	MOVSD	312(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:456)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:456)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 38 01 00 00 f2 0f 11 44 24 10 c3     ....8......D$..
"".(*giga).get_oo STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:459)	TEXT	"".(*giga).get_oo(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:459)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:459)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:459)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:459)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:459)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:459)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:459)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:460)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:460)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:460)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:460)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:460)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:460)	MOVSD	320(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:460)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:460)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 40 01 00 00 f2 0f 11 44 24 10 c3     ....@......D$..
"".(*giga).get_pp STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:463)	TEXT	"".(*giga).get_pp(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:463)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:463)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:463)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:463)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:463)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:463)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:463)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:464)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:464)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:464)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:464)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:464)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:464)	MOVSD	328(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:464)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:464)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 48 01 00 00 f2 0f 11 44 24 10 c3     ....H......D$..
"".(*giga).get_qq STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:467)	TEXT	"".(*giga).get_qq(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:467)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:467)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:467)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:467)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:467)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:467)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:467)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:468)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:468)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:468)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:468)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:468)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:468)	MOVSD	256(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:468)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:468)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 00 01 00 00 f2 0f 11 44 24 10 c3     ...........D$..
"".(*giga).get_rr STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:471)	TEXT	"".(*giga).get_rr(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:471)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:471)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:471)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:471)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:471)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:471)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:471)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:472)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:472)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:472)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:472)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:472)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:472)	MOVSD	344(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:472)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:472)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 58 01 00 00 f2 0f 11 44 24 10 c3     ....X......D$..
"".(*giga).get_ss STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:475)	TEXT	"".(*giga).get_ss(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:475)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:475)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:475)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:475)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:475)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:475)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:475)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:476)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:476)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:476)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:476)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:476)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:476)	MOVSD	352(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:476)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:476)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 60 01 00 00 f2 0f 11 44 24 10 c3     ....`......D$..
"".(*giga).get_tt STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:479)	TEXT	"".(*giga).get_tt(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:479)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:479)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:479)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:479)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:479)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:479)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:479)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:480)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:480)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:480)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:480)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:480)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:480)	MOVSD	360(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:480)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:480)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 68 01 00 00 f2 0f 11 44 24 10 c3     ....h......D$..
"".(*giga).get_uu STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:483)	TEXT	"".(*giga).get_uu(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:483)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:483)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:483)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:483)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:483)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:483)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:483)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:484)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:484)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:484)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:484)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:484)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:484)	MOVSD	368(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:484)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:484)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 70 01 00 00 f2 0f 11 44 24 10 c3     ....p......D$..
"".(*giga).get_vv STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:487)	TEXT	"".(*giga).get_vv(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:487)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:487)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:487)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:487)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:487)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:487)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:487)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:488)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:488)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:488)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:488)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:488)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:488)	MOVSD	376(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:488)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:488)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 78 01 00 00 f2 0f 11 44 24 10 c3     ....x......D$..
"".(*giga).get_xx STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:491)	TEXT	"".(*giga).get_xx(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:491)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:491)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:491)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:491)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:491)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:491)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:491)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:492)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:492)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:492)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:492)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:492)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:492)	MOVSD	384(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:492)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:492)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 80 01 00 00 f2 0f 11 44 24 10 c3     ...........D$..
"".(*giga).get_yy STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:495)	TEXT	"".(*giga).get_yy(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:495)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:495)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:495)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:495)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:495)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:495)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:495)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:496)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:496)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:496)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:496)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:496)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:496)	MOVSD	392(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:496)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:496)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 88 01 00 00 f2 0f 11 44 24 10 c3     ...........D$..
"".(*giga).get_ww STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:499)	TEXT	"".(*giga).get_ww(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:499)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:499)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:499)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:499)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:499)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:499)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:499)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:500)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:500)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:500)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:500)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:500)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:500)	MOVSD	400(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:500)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:500)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 90 01 00 00 f2 0f 11 44 24 10 c3     ...........D$..
"".(*giga).get_zz STEXT nosplit size=31 args=0x10 locals=0x0
	0x0000 00000 (pointer_vs_value/code/model.go:503)	TEXT	"".(*giga).get_zz(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (pointer_vs_value/code/model.go:503)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:503)	FUNCDATA	$1, gclocals·69c1753bd5f81501d95132d08af04464(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:503)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0000 00000 (pointer_vs_value/code/model.go:503)	PCDATA	$0, $0
	0x0000 00000 (pointer_vs_value/code/model.go:503)	PCDATA	$1, $0
	0x0000 00000 (pointer_vs_value/code/model.go:503)	XORPS	X0, X0
	0x0003 00003 (pointer_vs_value/code/model.go:503)	MOVSD	X0, "".~r0+16(SP)
	0x0009 00009 (pointer_vs_value/code/model.go:504)	PCDATA	$0, $1
	0x0009 00009 (pointer_vs_value/code/model.go:504)	PCDATA	$1, $1
	0x0009 00009 (pointer_vs_value/code/model.go:504)	MOVQ	"".o+8(SP), AX
	0x000e 00014 (pointer_vs_value/code/model.go:504)	TESTB	AL, (AX)
	0x0010 00016 (pointer_vs_value/code/model.go:504)	PCDATA	$0, $0
	0x0010 00016 (pointer_vs_value/code/model.go:504)	MOVSD	408(AX), X0
	0x0018 00024 (pointer_vs_value/code/model.go:504)	MOVSD	X0, "".~r0+16(SP)
	0x001e 00030 (pointer_vs_value/code/model.go:504)	RET
	0x0000 0f 57 c0 f2 0f 11 44 24 10 48 8b 44 24 08 84 00  .W....D$.H.D$...
	0x0010 f2 0f 10 80 98 01 00 00 f2 0f 11 44 24 10 c3     ...........D$..
"".TestTeraValueReceiverRoutine.func1 STEXT size=349 args=0x340 locals=0x3c8
	0x0000 00000 (pointer_vs_value/code/gc_test.go:17)	TEXT	"".TestTeraValueReceiverRoutine.func1(SB), ABIInternal, $968-832
	0x0000 00000 (pointer_vs_value/code/gc_test.go:17)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/gc_test.go:17)	LEAQ	-840(SP), AX
	0x0011 00017 (pointer_vs_value/code/gc_test.go:17)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/gc_test.go:17)	JLS	339
	0x001b 00027 (pointer_vs_value/code/gc_test.go:17)	SUBQ	$968, SP
	0x0022 00034 (pointer_vs_value/code/gc_test.go:17)	MOVQ	BP, 960(SP)
	0x002a 00042 (pointer_vs_value/code/gc_test.go:17)	LEAQ	960(SP), BP
	0x0032 00050 (pointer_vs_value/code/gc_test.go:17)	FUNCDATA	$0, gclocals·4e929236783764d8eaf7a1af1e905a58(SB)
	0x0032 00050 (pointer_vs_value/code/gc_test.go:17)	FUNCDATA	$1, gclocals·51f9bf0db8cfbcf03737255a6302d61d(SB)
	0x0032 00050 (pointer_vs_value/code/gc_test.go:17)	FUNCDATA	$2, gclocals·8b406b1972bae10652a173e587abd896(SB)
	0x0032 00050 (pointer_vs_value/code/gc_test.go:17)	FUNCDATA	$3, "".TestTeraValueReceiverRoutine.func1.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/gc_test.go:18)	PCDATA	$0, $1
	0x0032 00050 (pointer_vs_value/code/gc_test.go:18)	PCDATA	$1, $1
	0x0032 00050 (pointer_vs_value/code/gc_test.go:18)	LEAQ	"".o+128(SP), DI
	0x003a 00058 (pointer_vs_value/code/gc_test.go:18)	PCDATA	$0, $2
	0x003a 00058 (pointer_vs_value/code/gc_test.go:18)	PCDATA	$1, $2
	0x003a 00058 (pointer_vs_value/code/gc_test.go:18)	LEAQ	"".o+976(SP), SI
	0x0042 00066 (pointer_vs_value/code/gc_test.go:18)	PCDATA	$0, $0
	0x0042 00066 (pointer_vs_value/code/gc_test.go:18)	DUFFCOPY	$168
	0x0055 00085 (pointer_vs_value/code/gc_test.go:18)	XORPS	X0, X0
	0x0058 00088 (pointer_vs_value/code/gc_test.go:18)	MOVSD	X0, "".~r1(SP)
	0x005d 00093 (pointer_vs_value/code/gc_test.go:18)	XORPS	X1, X1
	0x0060 00096 (pointer_vs_value/code/gc_test.go:18)	MOVUPS	X1, "".~r2+32(SP)
	0x0065 00101 (<unknown line number>)	NOP
	0x0065 00101 (pointer_vs_value/code/func.go:36)	MOVSD	"".o+336(SP), X1
	0x006e 00110 (pointer_vs_value/code/func.go:36)	UCOMISD	X0, X1
	0x0072 00114 (pointer_vs_value/code/func.go:36)	JNE	293
	0x0078 00120 (pointer_vs_value/code/func.go:36)	JPC	127
	0x007a 00122 (pointer_vs_value/code/func.go:36)	JMP	293
	0x007f 00127 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $3
	0x007f 00127 (pointer_vs_value/code/func.go:37)	PCDATA	$1, $3
	0x007f 00127 (pointer_vs_value/code/func.go:37)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x0086 00134 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $0
	0x0086 00134 (pointer_vs_value/code/func.go:37)	MOVQ	AX, errors.text+64(SP)
	0x008b 00139 (pointer_vs_value/code/func.go:37)	MOVQ	$22, errors.text+72(SP)
	0x0094 00148 (pointer_vs_value/code/func.go:37)	XORPS	X1, X1
	0x0097 00151 (pointer_vs_value/code/func.go:37)	MOVUPS	X1, "".~R0+48(SP)
	0x009c 00156 (<unknown line number>)	NOP
	0x009c 00156 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x009c 00156 ($GOROOT/src/errors/errors.go:59)	XORPS	X1, X1
	0x009f 00159 ($GOROOT/src/errors/errors.go:59)	MOVUPS	X1, ""..autotmp_8+96(SP)
	0x00a4 00164 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x00a4 00164 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x00a4 00164 ($GOROOT/src/errors/errors.go:59)	LEAQ	""..autotmp_8+96(SP), AX
	0x00a9 00169 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, ""..autotmp_7+16(SP)
	0x00ae 00174 ($GOROOT/src/errors/errors.go:59)	TESTB	AL, (AX)
	0x00b0 00176 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+72(SP), CX
	0x00b5 00181 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $4
	0x00b5 00181 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $5
	0x00b5 00181 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+64(SP), DX
	0x00ba 00186 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_8+104(SP)
	0x00bf 00191 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x00bf 00191 ($GOROOT/src/errors/errors.go:59)	MOVQ	DX, ""..autotmp_8+96(SP)
	0x00c4 00196 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, ""..autotmp_6+24(SP)
	0x00c9 00201 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $5
	0x00c9 00201 (pointer_vs_value/code/func.go:37)	LEAQ	go.itab.*errors.errorString,error(SB), CX
	0x00d0 00208 (pointer_vs_value/code/func.go:37)	MOVQ	CX, ""..autotmp_9+80(SP)
	0x00d5 00213 (pointer_vs_value/code/func.go:37)	MOVQ	AX, ""..autotmp_9+88(SP)
	0x00da 00218 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $3
	0x00da 00218 (pointer_vs_value/code/func.go:37)	PCDATA	$1, $6
	0x00da 00218 (pointer_vs_value/code/func.go:37)	MOVQ	CX, "".~R0+48(SP)
	0x00df 00223 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $0
	0x00df 00223 (pointer_vs_value/code/func.go:37)	MOVQ	AX, "".~R0+56(SP)
	0x00e4 00228 (pointer_vs_value/code/func.go:37)	JMP	230
	0x00e6 00230 (pointer_vs_value/code/gc_test.go:18)	MOVQ	"".~R0+48(SP), AX
	0x00eb 00235 (pointer_vs_value/code/gc_test.go:18)	PCDATA	$0, $6
	0x00eb 00235 (pointer_vs_value/code/gc_test.go:18)	PCDATA	$1, $5
	0x00eb 00235 (pointer_vs_value/code/gc_test.go:18)	MOVQ	"".~R0+56(SP), CX
	0x00f0 00240 (pointer_vs_value/code/gc_test.go:18)	PCDATA	$1, $7
	0x00f0 00240 (pointer_vs_value/code/gc_test.go:18)	MOVQ	AX, ""..autotmp_10+112(SP)
	0x00f5 00245 (pointer_vs_value/code/gc_test.go:18)	PCDATA	$0, $0
	0x00f5 00245 (pointer_vs_value/code/gc_test.go:18)	MOVQ	CX, ""..autotmp_10+120(SP)
	0x00fa 00250 (pointer_vs_value/code/gc_test.go:18)	MOVSD	X0, "".~r1(SP)
	0x00ff 00255 (pointer_vs_value/code/gc_test.go:18)	MOVQ	""..autotmp_10+112(SP), AX
	0x0104 00260 (pointer_vs_value/code/gc_test.go:18)	PCDATA	$0, $6
	0x0104 00260 (pointer_vs_value/code/gc_test.go:18)	PCDATA	$1, $5
	0x0104 00260 (pointer_vs_value/code/gc_test.go:18)	MOVQ	""..autotmp_10+120(SP), CX
	0x0109 00265 (pointer_vs_value/code/gc_test.go:18)	MOVQ	AX, "".~r2+32(SP)
	0x010e 00270 (pointer_vs_value/code/gc_test.go:18)	PCDATA	$0, $0
	0x010e 00270 (pointer_vs_value/code/gc_test.go:18)	MOVQ	CX, "".~r2+40(SP)
	0x0113 00275 (pointer_vs_value/code/gc_test.go:18)	JMP	277
	0x0115 00277 (<unknown line number>)	PCDATA	$0, $-2
	0x0115 00277 (<unknown line number>)	PCDATA	$1, $-2
	0x0115 00277 (<unknown line number>)	MOVQ	960(SP), BP
	0x011d 00285 (<unknown line number>)	ADDQ	$968, SP
	0x0124 00292 (<unknown line number>)	RET
	0x0125 00293 (pointer_vs_value/code/func.go:39)	PCDATA	$0, $0
	0x0125 00293 (pointer_vs_value/code/func.go:39)	PCDATA	$1, $2
	0x0125 00293 (pointer_vs_value/code/func.go:39)	MOVQ	"".o+128(SP), AX
	0x012d 00301 (pointer_vs_value/code/func.go:39)	XORPS	X0, X0
	0x0130 00304 (pointer_vs_value/code/func.go:39)	CVTSQ2SD	AX, X0
	0x0135 00309 (pointer_vs_value/code/func.go:39)	PCDATA	$1, $5
	0x0135 00309 (pointer_vs_value/code/func.go:39)	DIVSD	"".o+336(SP), X0
	0x013e 00318 (pointer_vs_value/code/gc_test.go:18)	MOVSD	X0, ""..autotmp_11+8(SP)
	0x0144 00324 (pointer_vs_value/code/gc_test.go:18)	MOVSD	X0, "".~r1(SP)
	0x0149 00329 (pointer_vs_value/code/gc_test.go:18)	XORPS	X0, X0
	0x014c 00332 (pointer_vs_value/code/gc_test.go:18)	MOVUPS	X0, "".~r2+32(SP)
	0x0151 00337 (pointer_vs_value/code/gc_test.go:18)	JMP	277
	0x0153 00339 (pointer_vs_value/code/gc_test.go:18)	NOP
	0x0153 00339 (pointer_vs_value/code/gc_test.go:17)	PCDATA	$1, $-1
	0x0153 00339 (pointer_vs_value/code/gc_test.go:17)	PCDATA	$0, $-1
	0x0153 00339 (pointer_vs_value/code/gc_test.go:17)	CALL	runtime.morestack_noctxt(SB)
	0x0158 00344 (pointer_vs_value/code/gc_test.go:17)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 b8 fc ff  eH..%....H..$...
	0x0010 ff 48 3b 41 10 0f 86 38 01 00 00 48 81 ec c8 03  .H;A...8...H....
	0x0020 00 00 48 89 ac 24 c0 03 00 00 48 8d ac 24 c0 03  ..H..$....H..$..
	0x0030 00 00 48 8d bc 24 80 00 00 00 48 8d b4 24 d0 03  ..H..$....H..$..
	0x0040 00 00 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00  ..H.l$.H.l$.....
	0x0050 00 48 8b 6d 00 0f 57 c0 f2 0f 11 04 24 0f 57 c9  .H.m..W.....$.W.
	0x0060 0f 11 4c 24 20 f2 0f 10 8c 24 50 01 00 00 66 0f  ..L$ ....$P...f.
	0x0070 2e c8 0f 85 ad 00 00 00 7b 05 e9 a6 00 00 00 48  ........{......H
	0x0080 8d 05 00 00 00 00 48 89 44 24 40 48 c7 44 24 48  ......H.D$@H.D$H
	0x0090 16 00 00 00 0f 57 c9 0f 11 4c 24 30 0f 57 c9 0f  .....W...L$0.W..
	0x00a0 11 4c 24 60 48 8d 44 24 60 48 89 44 24 10 84 00  .L$`H.D$`H.D$...
	0x00b0 48 8b 4c 24 48 48 8b 54 24 40 48 89 4c 24 68 48  H.L$HH.T$@H.L$hH
	0x00c0 89 54 24 60 48 89 44 24 18 48 8d 0d 00 00 00 00  .T$`H.D$.H......
	0x00d0 48 89 4c 24 50 48 89 44 24 58 48 89 4c 24 30 48  H.L$PH.D$XH.L$0H
	0x00e0 89 44 24 38 eb 00 48 8b 44 24 30 48 8b 4c 24 38  .D$8..H.D$0H.L$8
	0x00f0 48 89 44 24 70 48 89 4c 24 78 f2 0f 11 04 24 48  H.D$pH.L$x....$H
	0x0100 8b 44 24 70 48 8b 4c 24 78 48 89 44 24 20 48 89  .D$pH.L$xH.D$ H.
	0x0110 4c 24 28 eb 00 48 8b ac 24 c0 03 00 00 48 81 c4  L$(..H..$....H..
	0x0120 c8 03 00 00 c3 48 8b 84 24 80 00 00 00 0f 57 c0  .....H..$.....W.
	0x0130 f2 48 0f 2a c0 f2 0f 5e 84 24 50 01 00 00 f2 0f  .H.*...^.$P.....
	0x0140 11 44 24 08 f2 0f 11 04 24 0f 57 c0 0f 11 44 24  .D$.....$.W...D$
	0x0150 20 eb c2 e8 00 00 00 00 e9 a3 fe ff ff            ............
	rel 5+4 t=16 TLS+0
	rel 77+4 t=8 runtime.duffcopy+168
	rel 130+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 204+4 t=15 go.itab.*errors.errorString,error+0
	rel 340+4 t=8 runtime.morestack_noctxt+0
"".TestTeraPointerReceiverRoutine.func1 STEXT size=349 args=0x340 locals=0x98
	0x0000 00000 (pointer_vs_value/code/gc_test.go:24)	TEXT	"".TestTeraPointerReceiverRoutine.func1(SB), ABIInternal, $152-832
	0x0000 00000 (pointer_vs_value/code/gc_test.go:24)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/gc_test.go:24)	LEAQ	-24(SP), AX
	0x000e 00014 (pointer_vs_value/code/gc_test.go:24)	CMPQ	AX, 16(CX)
	0x0012 00018 (pointer_vs_value/code/gc_test.go:24)	JLS	339
	0x0018 00024 (pointer_vs_value/code/gc_test.go:24)	SUBQ	$152, SP
	0x001f 00031 (pointer_vs_value/code/gc_test.go:24)	MOVQ	BP, 144(SP)
	0x0027 00039 (pointer_vs_value/code/gc_test.go:24)	LEAQ	144(SP), BP
	0x002f 00047 (pointer_vs_value/code/gc_test.go:24)	FUNCDATA	$0, gclocals·e9d96d57d2c3e2899adea7f0ae81d69c(SB)
	0x002f 00047 (pointer_vs_value/code/gc_test.go:24)	FUNCDATA	$1, gclocals·ddafd53eafbe6cc7d39cba9c5e704644(SB)
	0x002f 00047 (pointer_vs_value/code/gc_test.go:24)	FUNCDATA	$2, gclocals·e0bce6494600d81ccfe66faf0f0766c3(SB)
	0x002f 00047 (pointer_vs_value/code/gc_test.go:24)	FUNCDATA	$3, "".TestTeraPointerReceiverRoutine.func1.stkobj(SB)
	0x002f 00047 (pointer_vs_value/code/gc_test.go:25)	PCDATA	$0, $1
	0x002f 00047 (pointer_vs_value/code/gc_test.go:25)	PCDATA	$1, $1
	0x002f 00047 (pointer_vs_value/code/gc_test.go:25)	LEAQ	"".o+160(SP), AX
	0x0037 00055 (pointer_vs_value/code/gc_test.go:25)	MOVQ	AX, ""..autotmp_7+32(SP)
	0x003c 00060 (pointer_vs_value/code/gc_test.go:25)	PCDATA	$0, $0
	0x003c 00060 (pointer_vs_value/code/gc_test.go:25)	PCDATA	$1, $2
	0x003c 00060 (pointer_vs_value/code/gc_test.go:25)	MOVQ	AX, "".o+16(SP)
	0x0041 00065 (pointer_vs_value/code/gc_test.go:25)	XORPS	X0, X0
	0x0044 00068 (pointer_vs_value/code/gc_test.go:25)	MOVSD	X0, "".~r1(SP)
	0x0049 00073 (pointer_vs_value/code/gc_test.go:25)	XORPS	X1, X1
	0x004c 00076 (pointer_vs_value/code/gc_test.go:25)	MOVUPS	X1, "".~r2+48(SP)
	0x0051 00081 (pointer_vs_value/code/func.go:80)	PCDATA	$0, $1
	0x0051 00081 (pointer_vs_value/code/func.go:80)	MOVQ	"".o+16(SP), AX
	0x0056 00086 (pointer_vs_value/code/func.go:80)	TESTB	AL, (AX)
	0x0058 00088 (<unknown line number>)	NOP
	0x0058 00088 (pointer_vs_value/code/func.go:80)	PCDATA	$0, $0
	0x0058 00088 (pointer_vs_value/code/func.go:80)	MOVSD	208(AX), X1
	0x0060 00096 (pointer_vs_value/code/func.go:80)	UCOMISD	X0, X1
	0x0064 00100 (pointer_vs_value/code/func.go:80)	JNE	285
	0x006a 00106 (pointer_vs_value/code/func.go:80)	JPC	113
	0x006c 00108 (pointer_vs_value/code/func.go:80)	JMP	285
	0x0071 00113 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $1
	0x0071 00113 (pointer_vs_value/code/func.go:81)	PCDATA	$1, $3
	0x0071 00113 (pointer_vs_value/code/func.go:81)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x0078 00120 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $0
	0x0078 00120 (pointer_vs_value/code/func.go:81)	MOVQ	AX, errors.text+80(SP)
	0x007d 00125 (pointer_vs_value/code/func.go:81)	MOVQ	$22, errors.text+88(SP)
	0x0086 00134 (pointer_vs_value/code/func.go:81)	XORPS	X1, X1
	0x0089 00137 (pointer_vs_value/code/func.go:81)	MOVUPS	X1, "".~R0+64(SP)
	0x008e 00142 (<unknown line number>)	NOP
	0x008e 00142 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x008e 00142 ($GOROOT/src/errors/errors.go:59)	XORPS	X1, X1
	0x0091 00145 ($GOROOT/src/errors/errors.go:59)	MOVUPS	X1, ""..autotmp_9+96(SP)
	0x0096 00150 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x0096 00150 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x0096 00150 ($GOROOT/src/errors/errors.go:59)	LEAQ	""..autotmp_9+96(SP), AX
	0x009b 00155 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, ""..autotmp_8+24(SP)
	0x00a0 00160 ($GOROOT/src/errors/errors.go:59)	TESTB	AL, (AX)
	0x00a2 00162 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+88(SP), CX
	0x00a7 00167 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $2
	0x00a7 00167 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $1
	0x00a7 00167 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+80(SP), DX
	0x00ac 00172 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_9+104(SP)
	0x00b1 00177 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x00b1 00177 ($GOROOT/src/errors/errors.go:59)	MOVQ	DX, ""..autotmp_9+96(SP)
	0x00b6 00182 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, ""..autotmp_6+40(SP)
	0x00bb 00187 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $3
	0x00bb 00187 (pointer_vs_value/code/func.go:81)	LEAQ	go.itab.*errors.errorString,error(SB), CX
	0x00c2 00194 (pointer_vs_value/code/func.go:81)	MOVQ	CX, ""..autotmp_10+128(SP)
	0x00ca 00202 (pointer_vs_value/code/func.go:81)	MOVQ	AX, ""..autotmp_10+136(SP)
	0x00d2 00210 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $1
	0x00d2 00210 (pointer_vs_value/code/func.go:81)	PCDATA	$1, $5
	0x00d2 00210 (pointer_vs_value/code/func.go:81)	MOVQ	CX, "".~R0+64(SP)
	0x00d7 00215 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $0
	0x00d7 00215 (pointer_vs_value/code/func.go:81)	MOVQ	AX, "".~R0+72(SP)
	0x00dc 00220 (pointer_vs_value/code/func.go:81)	JMP	222
	0x00de 00222 (pointer_vs_value/code/gc_test.go:25)	MOVQ	"".~R0+64(SP), AX
	0x00e3 00227 (pointer_vs_value/code/gc_test.go:25)	PCDATA	$0, $4
	0x00e3 00227 (pointer_vs_value/code/gc_test.go:25)	PCDATA	$1, $1
	0x00e3 00227 (pointer_vs_value/code/gc_test.go:25)	MOVQ	"".~R0+72(SP), CX
	0x00e8 00232 (pointer_vs_value/code/gc_test.go:25)	PCDATA	$1, $6
	0x00e8 00232 (pointer_vs_value/code/gc_test.go:25)	MOVQ	AX, ""..autotmp_11+112(SP)
	0x00ed 00237 (pointer_vs_value/code/gc_test.go:25)	PCDATA	$0, $0
	0x00ed 00237 (pointer_vs_value/code/gc_test.go:25)	MOVQ	CX, ""..autotmp_11+120(SP)
	0x00f2 00242 (pointer_vs_value/code/gc_test.go:25)	MOVSD	X0, "".~r1(SP)
	0x00f7 00247 (pointer_vs_value/code/gc_test.go:25)	MOVQ	""..autotmp_11+112(SP), AX
	0x00fc 00252 (pointer_vs_value/code/gc_test.go:25)	PCDATA	$0, $4
	0x00fc 00252 (pointer_vs_value/code/gc_test.go:25)	PCDATA	$1, $1
	0x00fc 00252 (pointer_vs_value/code/gc_test.go:25)	MOVQ	""..autotmp_11+120(SP), CX
	0x0101 00257 (pointer_vs_value/code/gc_test.go:25)	MOVQ	AX, "".~r2+48(SP)
	0x0106 00262 (pointer_vs_value/code/gc_test.go:25)	PCDATA	$0, $0
	0x0106 00262 (pointer_vs_value/code/gc_test.go:25)	MOVQ	CX, "".~r2+56(SP)
	0x010b 00267 (pointer_vs_value/code/gc_test.go:25)	JMP	269
	0x010d 00269 (<unknown line number>)	PCDATA	$0, $-2
	0x010d 00269 (<unknown line number>)	PCDATA	$1, $-2
	0x010d 00269 (<unknown line number>)	MOVQ	144(SP), BP
	0x0115 00277 (<unknown line number>)	ADDQ	$152, SP
	0x011c 00284 (<unknown line number>)	RET
	0x011d 00285 (pointer_vs_value/code/func.go:83)	PCDATA	$0, $1
	0x011d 00285 (pointer_vs_value/code/func.go:83)	PCDATA	$1, $2
	0x011d 00285 (pointer_vs_value/code/func.go:83)	MOVQ	"".o+16(SP), AX
	0x0122 00290 (pointer_vs_value/code/func.go:83)	TESTB	AL, (AX)
	0x0124 00292 (pointer_vs_value/code/func.go:83)	PCDATA	$0, $3
	0x0124 00292 (pointer_vs_value/code/func.go:83)	PCDATA	$1, $1
	0x0124 00292 (pointer_vs_value/code/func.go:83)	MOVQ	"".o+16(SP), CX
	0x0129 00297 (pointer_vs_value/code/func.go:83)	TESTB	AL, (CX)
	0x012b 00299 (pointer_vs_value/code/func.go:83)	PCDATA	$0, $4
	0x012b 00299 (pointer_vs_value/code/func.go:83)	MOVQ	(AX), AX
	0x012e 00302 (pointer_vs_value/code/func.go:83)	XORPS	X0, X0
	0x0131 00305 (pointer_vs_value/code/func.go:83)	CVTSQ2SD	AX, X0
	0x0136 00310 (pointer_vs_value/code/func.go:83)	PCDATA	$0, $0
	0x0136 00310 (pointer_vs_value/code/func.go:83)	DIVSD	208(CX), X0
	0x013e 00318 (pointer_vs_value/code/gc_test.go:25)	MOVSD	X0, ""..autotmp_12+8(SP)
	0x0144 00324 (pointer_vs_value/code/gc_test.go:25)	MOVSD	X0, "".~r1(SP)
	0x0149 00329 (pointer_vs_value/code/gc_test.go:25)	XORPS	X0, X0
	0x014c 00332 (pointer_vs_value/code/gc_test.go:25)	MOVUPS	X0, "".~r2+48(SP)
	0x0151 00337 (pointer_vs_value/code/gc_test.go:25)	JMP	269
	0x0153 00339 (pointer_vs_value/code/gc_test.go:25)	NOP
	0x0153 00339 (pointer_vs_value/code/gc_test.go:24)	PCDATA	$1, $-1
	0x0153 00339 (pointer_vs_value/code/gc_test.go:24)	PCDATA	$0, $-1
	0x0153 00339 (pointer_vs_value/code/gc_test.go:24)	CALL	runtime.morestack_noctxt(SB)
	0x0158 00344 (pointer_vs_value/code/gc_test.go:24)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 44 24 e8 48 3b  eH..%....H.D$.H;
	0x0010 41 10 0f 86 3b 01 00 00 48 81 ec 98 00 00 00 48  A...;...H......H
	0x0020 89 ac 24 90 00 00 00 48 8d ac 24 90 00 00 00 48  ..$....H..$....H
	0x0030 8d 84 24 a0 00 00 00 48 89 44 24 20 48 89 44 24  ..$....H.D$ H.D$
	0x0040 10 0f 57 c0 f2 0f 11 04 24 0f 57 c9 0f 11 4c 24  ..W.....$.W...L$
	0x0050 30 48 8b 44 24 10 84 00 f2 0f 10 88 d0 00 00 00  0H.D$...........
	0x0060 66 0f 2e c8 0f 85 b3 00 00 00 7b 05 e9 ac 00 00  f.........{.....
	0x0070 00 48 8d 05 00 00 00 00 48 89 44 24 50 48 c7 44  .H......H.D$PH.D
	0x0080 24 58 16 00 00 00 0f 57 c9 0f 11 4c 24 40 0f 57  $X.....W...L$@.W
	0x0090 c9 0f 11 4c 24 60 48 8d 44 24 60 48 89 44 24 18  ...L$`H.D$`H.D$.
	0x00a0 84 00 48 8b 4c 24 58 48 8b 54 24 50 48 89 4c 24  ..H.L$XH.T$PH.L$
	0x00b0 68 48 89 54 24 60 48 89 44 24 28 48 8d 0d 00 00  hH.T$`H.D$(H....
	0x00c0 00 00 48 89 8c 24 80 00 00 00 48 89 84 24 88 00  ..H..$....H..$..
	0x00d0 00 00 48 89 4c 24 40 48 89 44 24 48 eb 00 48 8b  ..H.L$@H.D$H..H.
	0x00e0 44 24 40 48 8b 4c 24 48 48 89 44 24 70 48 89 4c  D$@H.L$HH.D$pH.L
	0x00f0 24 78 f2 0f 11 04 24 48 8b 44 24 70 48 8b 4c 24  $x....$H.D$pH.L$
	0x0100 78 48 89 44 24 30 48 89 4c 24 38 eb 00 48 8b ac  xH.D$0H.L$8..H..
	0x0110 24 90 00 00 00 48 81 c4 98 00 00 00 c3 48 8b 44  $....H.......H.D
	0x0120 24 10 84 00 48 8b 4c 24 10 84 01 48 8b 00 0f 57  $...H.L$...H...W
	0x0130 c0 f2 48 0f 2a c0 f2 0f 5e 81 d0 00 00 00 f2 0f  ..H.*...^.......
	0x0140 11 44 24 08 f2 0f 11 04 24 0f 57 c0 0f 11 44 24  .D$.....$.W...D$
	0x0150 30 eb ba e8 00 00 00 00 e9 a3 fe ff ff           0............
	rel 5+4 t=16 TLS+0
	rel 116+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 190+4 t=15 go.itab.*errors.errorString,error+0
	rel 340+4 t=8 runtime.morestack_noctxt+0
"".TestTeraInterfaceReceiverRoutine.func1 STEXT size=180 args=0x340 locals=0x40
	0x0000 00000 (pointer_vs_value/code/gc_test.go:32)	TEXT	"".TestTeraInterfaceReceiverRoutine.func1(SB), ABIInternal, $64-832
	0x0000 00000 (pointer_vs_value/code/gc_test.go:32)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/gc_test.go:32)	CMPQ	SP, 16(CX)
	0x000d 00013 (pointer_vs_value/code/gc_test.go:32)	JLS	170
	0x0013 00019 (pointer_vs_value/code/gc_test.go:32)	SUBQ	$64, SP
	0x0017 00023 (pointer_vs_value/code/gc_test.go:32)	MOVQ	BP, 56(SP)
	0x001c 00028 (pointer_vs_value/code/gc_test.go:32)	LEAQ	56(SP), BP
	0x0021 00033 (pointer_vs_value/code/gc_test.go:32)	FUNCDATA	$0, gclocals·72d3c7b1329acbd336a83b08909ef1b6(SB)
	0x0021 00033 (pointer_vs_value/code/gc_test.go:32)	FUNCDATA	$1, gclocals·2dd975a5d416a941d0db91113f946ec3(SB)
	0x0021 00033 (pointer_vs_value/code/gc_test.go:32)	FUNCDATA	$2, gclocals·afad599a374687002fe037c60f940416(SB)
	0x0021 00033 (pointer_vs_value/code/gc_test.go:32)	PCDATA	$0, $1
	0x0021 00033 (pointer_vs_value/code/gc_test.go:32)	PCDATA	$1, $0
	0x0021 00033 (pointer_vs_value/code/gc_test.go:32)	LEAQ	type."".tera(SB), AX
	0x0028 00040 (pointer_vs_value/code/gc_test.go:32)	PCDATA	$0, $0
	0x0028 00040 (pointer_vs_value/code/gc_test.go:32)	MOVQ	AX, (SP)
	0x002c 00044 (pointer_vs_value/code/gc_test.go:32)	CALL	runtime.newobject(SB)
	0x0031 00049 (pointer_vs_value/code/gc_test.go:32)	PCDATA	$0, $2
	0x0031 00049 (pointer_vs_value/code/gc_test.go:32)	MOVQ	8(SP), DI
	0x0036 00054 (pointer_vs_value/code/gc_test.go:32)	PCDATA	$1, $1
	0x0036 00054 (pointer_vs_value/code/gc_test.go:32)	MOVQ	DI, "".&o+48(SP)
	0x003b 00059 (pointer_vs_value/code/gc_test.go:32)	PCDATA	$0, $-2
	0x003b 00059 (pointer_vs_value/code/gc_test.go:32)	PCDATA	$1, $-2
	0x003b 00059 (pointer_vs_value/code/gc_test.go:32)	CMPL	runtime.writeBarrier(SB), $0
	0x0042 00066 (pointer_vs_value/code/gc_test.go:32)	JEQ	70
	0x0044 00068 (pointer_vs_value/code/gc_test.go:32)	JMP	137
	0x0046 00070 (pointer_vs_value/code/gc_test.go:32)	LEAQ	"".o+72(SP), SI
	0x004b 00075 (pointer_vs_value/code/gc_test.go:32)	DUFFCOPY	$168
	0x005e 00094 (pointer_vs_value/code/gc_test.go:32)	JMP	96
	0x0060 00096 (pointer_vs_value/code/gc_test.go:33)	PCDATA	$0, $1
	0x0060 00096 (pointer_vs_value/code/gc_test.go:33)	PCDATA	$1, $2
	0x0060 00096 (pointer_vs_value/code/gc_test.go:33)	MOVQ	"".&o+48(SP), AX
	0x0065 00101 (pointer_vs_value/code/gc_test.go:33)	MOVQ	AX, ""..autotmp_3+40(SP)
	0x006a 00106 (pointer_vs_value/code/gc_test.go:33)	PCDATA	$0, $3
	0x006a 00106 (pointer_vs_value/code/gc_test.go:33)	LEAQ	go.itab.*"".tera,"".obj(SB), CX
	0x0071 00113 (pointer_vs_value/code/gc_test.go:33)	PCDATA	$0, $1
	0x0071 00113 (pointer_vs_value/code/gc_test.go:33)	MOVQ	CX, (SP)
	0x0075 00117 (pointer_vs_value/code/gc_test.go:33)	PCDATA	$0, $0
	0x0075 00117 (pointer_vs_value/code/gc_test.go:33)	MOVQ	AX, 8(SP)
	0x007a 00122 (pointer_vs_value/code/gc_test.go:33)	CALL	"".calcIfc(SB)
	0x007f 00127 (pointer_vs_value/code/gc_test.go:34)	MOVQ	56(SP), BP
	0x0084 00132 (pointer_vs_value/code/gc_test.go:34)	ADDQ	$64, SP
	0x0088 00136 (pointer_vs_value/code/gc_test.go:34)	RET
	0x0089 00137 (pointer_vs_value/code/gc_test.go:32)	PCDATA	$0, $-2
	0x0089 00137 (pointer_vs_value/code/gc_test.go:32)	PCDATA	$1, $-2
	0x0089 00137 (pointer_vs_value/code/gc_test.go:32)	LEAQ	type."".tera(SB), AX
	0x0090 00144 (pointer_vs_value/code/gc_test.go:32)	MOVQ	AX, (SP)
	0x0094 00148 (pointer_vs_value/code/gc_test.go:32)	MOVQ	DI, 8(SP)
	0x0099 00153 (pointer_vs_value/code/gc_test.go:32)	LEAQ	"".o+72(SP), AX
	0x009e 00158 (pointer_vs_value/code/gc_test.go:32)	MOVQ	AX, 16(SP)
	0x00a3 00163 (pointer_vs_value/code/gc_test.go:32)	CALL	runtime.typedmemmove(SB)
	0x00a8 00168 (pointer_vs_value/code/gc_test.go:32)	JMP	96
	0x00aa 00170 (pointer_vs_value/code/gc_test.go:32)	NOP
	0x00aa 00170 (pointer_vs_value/code/gc_test.go:32)	PCDATA	$1, $-1
	0x00aa 00170 (pointer_vs_value/code/gc_test.go:32)	PCDATA	$0, $-1
	0x00aa 00170 (pointer_vs_value/code/gc_test.go:32)	CALL	runtime.morestack_noctxt(SB)
	0x00af 00175 (pointer_vs_value/code/gc_test.go:32)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 97  eH..%....H;a....
	0x0010 00 00 00 48 83 ec 40 48 89 6c 24 38 48 8d 6c 24  ...H..@H.l$8H.l$
	0x0020 38 48 8d 05 00 00 00 00 48 89 04 24 e8 00 00 00  8H......H..$....
	0x0030 00 48 8b 7c 24 08 48 89 7c 24 30 83 3d 00 00 00  .H.|$.H.|$0.=...
	0x0040 00 00 74 02 eb 43 48 8d 74 24 48 48 89 6c 24 f0  ..t..CH.t$HH.l$.
	0x0050 48 8d 6c 24 f0 e8 00 00 00 00 48 8b 6d 00 eb 00  H.l$......H.m...
	0x0060 48 8b 44 24 30 48 89 44 24 28 48 8d 0d 00 00 00  H.D$0H.D$(H.....
	0x0070 00 48 89 0c 24 48 89 44 24 08 e8 00 00 00 00 48  .H..$H.D$......H
	0x0080 8b 6c 24 38 48 83 c4 40 c3 48 8d 05 00 00 00 00  .l$8H..@.H......
	0x0090 48 89 04 24 48 89 7c 24 08 48 8d 44 24 48 48 89  H..$H.|$.H.D$HH.
	0x00a0 44 24 10 e8 00 00 00 00 eb b6 e8 00 00 00 00 e9  D$..............
	0x00b0 4c ff ff ff                                      L...
	rel 5+4 t=16 TLS+0
	rel 36+4 t=15 type."".tera+0
	rel 45+4 t=8 runtime.newobject+0
	rel 61+4 t=15 runtime.writeBarrier+-1
	rel 86+4 t=8 runtime.duffcopy+168
	rel 109+4 t=15 go.itab.*"".tera,"".obj+0
	rel 123+4 t=8 "".calcIfc+0
	rel 140+4 t=15 type."".tera+0
	rel 164+4 t=8 runtime.typedmemmove+0
	rel 171+4 t=8 runtime.morestack_noctxt+0
"".TestTeraValueReceiverNative.func1 STEXT size=349 args=0x340 locals=0x3c8
	0x0000 00000 (pointer_vs_value/code/gc_test.go:40)	TEXT	"".TestTeraValueReceiverNative.func1(SB), ABIInternal, $968-832
	0x0000 00000 (pointer_vs_value/code/gc_test.go:40)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/gc_test.go:40)	LEAQ	-840(SP), AX
	0x0011 00017 (pointer_vs_value/code/gc_test.go:40)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/gc_test.go:40)	JLS	339
	0x001b 00027 (pointer_vs_value/code/gc_test.go:40)	SUBQ	$968, SP
	0x0022 00034 (pointer_vs_value/code/gc_test.go:40)	MOVQ	BP, 960(SP)
	0x002a 00042 (pointer_vs_value/code/gc_test.go:40)	LEAQ	960(SP), BP
	0x0032 00050 (pointer_vs_value/code/gc_test.go:40)	FUNCDATA	$0, gclocals·4e929236783764d8eaf7a1af1e905a58(SB)
	0x0032 00050 (pointer_vs_value/code/gc_test.go:40)	FUNCDATA	$1, gclocals·51f9bf0db8cfbcf03737255a6302d61d(SB)
	0x0032 00050 (pointer_vs_value/code/gc_test.go:40)	FUNCDATA	$2, gclocals·8b406b1972bae10652a173e587abd896(SB)
	0x0032 00050 (pointer_vs_value/code/gc_test.go:40)	FUNCDATA	$3, "".TestTeraValueReceiverNative.func1.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/gc_test.go:41)	PCDATA	$0, $1
	0x0032 00050 (pointer_vs_value/code/gc_test.go:41)	PCDATA	$1, $1
	0x0032 00050 (pointer_vs_value/code/gc_test.go:41)	LEAQ	"".o+128(SP), DI
	0x003a 00058 (pointer_vs_value/code/gc_test.go:41)	PCDATA	$0, $2
	0x003a 00058 (pointer_vs_value/code/gc_test.go:41)	PCDATA	$1, $2
	0x003a 00058 (pointer_vs_value/code/gc_test.go:41)	LEAQ	"".o+976(SP), SI
	0x0042 00066 (pointer_vs_value/code/gc_test.go:41)	PCDATA	$0, $0
	0x0042 00066 (pointer_vs_value/code/gc_test.go:41)	DUFFCOPY	$168
	0x0055 00085 (pointer_vs_value/code/gc_test.go:41)	XORPS	X0, X0
	0x0058 00088 (pointer_vs_value/code/gc_test.go:41)	MOVSD	X0, "".~r1(SP)
	0x005d 00093 (pointer_vs_value/code/gc_test.go:41)	XORPS	X1, X1
	0x0060 00096 (pointer_vs_value/code/gc_test.go:41)	MOVUPS	X1, "".~r2+32(SP)
	0x0065 00101 (<unknown line number>)	NOP
	0x0065 00101 (pointer_vs_value/code/func.go:36)	MOVSD	"".o+336(SP), X1
	0x006e 00110 (pointer_vs_value/code/func.go:36)	UCOMISD	X0, X1
	0x0072 00114 (pointer_vs_value/code/func.go:36)	JNE	293
	0x0078 00120 (pointer_vs_value/code/func.go:36)	JPC	127
	0x007a 00122 (pointer_vs_value/code/func.go:36)	JMP	293
	0x007f 00127 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $3
	0x007f 00127 (pointer_vs_value/code/func.go:37)	PCDATA	$1, $3
	0x007f 00127 (pointer_vs_value/code/func.go:37)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x0086 00134 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $0
	0x0086 00134 (pointer_vs_value/code/func.go:37)	MOVQ	AX, errors.text+64(SP)
	0x008b 00139 (pointer_vs_value/code/func.go:37)	MOVQ	$22, errors.text+72(SP)
	0x0094 00148 (pointer_vs_value/code/func.go:37)	XORPS	X1, X1
	0x0097 00151 (pointer_vs_value/code/func.go:37)	MOVUPS	X1, "".~R0+48(SP)
	0x009c 00156 (<unknown line number>)	NOP
	0x009c 00156 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x009c 00156 ($GOROOT/src/errors/errors.go:59)	XORPS	X1, X1
	0x009f 00159 ($GOROOT/src/errors/errors.go:59)	MOVUPS	X1, ""..autotmp_8+96(SP)
	0x00a4 00164 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x00a4 00164 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x00a4 00164 ($GOROOT/src/errors/errors.go:59)	LEAQ	""..autotmp_8+96(SP), AX
	0x00a9 00169 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, ""..autotmp_7+16(SP)
	0x00ae 00174 ($GOROOT/src/errors/errors.go:59)	TESTB	AL, (AX)
	0x00b0 00176 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+72(SP), CX
	0x00b5 00181 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $4
	0x00b5 00181 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $5
	0x00b5 00181 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+64(SP), DX
	0x00ba 00186 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_8+104(SP)
	0x00bf 00191 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $3
	0x00bf 00191 ($GOROOT/src/errors/errors.go:59)	MOVQ	DX, ""..autotmp_8+96(SP)
	0x00c4 00196 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, ""..autotmp_6+24(SP)
	0x00c9 00201 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $5
	0x00c9 00201 (pointer_vs_value/code/func.go:37)	LEAQ	go.itab.*errors.errorString,error(SB), CX
	0x00d0 00208 (pointer_vs_value/code/func.go:37)	MOVQ	CX, ""..autotmp_9+80(SP)
	0x00d5 00213 (pointer_vs_value/code/func.go:37)	MOVQ	AX, ""..autotmp_9+88(SP)
	0x00da 00218 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $3
	0x00da 00218 (pointer_vs_value/code/func.go:37)	PCDATA	$1, $6
	0x00da 00218 (pointer_vs_value/code/func.go:37)	MOVQ	CX, "".~R0+48(SP)
	0x00df 00223 (pointer_vs_value/code/func.go:37)	PCDATA	$0, $0
	0x00df 00223 (pointer_vs_value/code/func.go:37)	MOVQ	AX, "".~R0+56(SP)
	0x00e4 00228 (pointer_vs_value/code/func.go:37)	JMP	230
	0x00e6 00230 (pointer_vs_value/code/gc_test.go:41)	MOVQ	"".~R0+48(SP), AX
	0x00eb 00235 (pointer_vs_value/code/gc_test.go:41)	PCDATA	$0, $6
	0x00eb 00235 (pointer_vs_value/code/gc_test.go:41)	PCDATA	$1, $5
	0x00eb 00235 (pointer_vs_value/code/gc_test.go:41)	MOVQ	"".~R0+56(SP), CX
	0x00f0 00240 (pointer_vs_value/code/gc_test.go:41)	PCDATA	$1, $7
	0x00f0 00240 (pointer_vs_value/code/gc_test.go:41)	MOVQ	AX, ""..autotmp_10+112(SP)
	0x00f5 00245 (pointer_vs_value/code/gc_test.go:41)	PCDATA	$0, $0
	0x00f5 00245 (pointer_vs_value/code/gc_test.go:41)	MOVQ	CX, ""..autotmp_10+120(SP)
	0x00fa 00250 (pointer_vs_value/code/gc_test.go:41)	MOVSD	X0, "".~r1(SP)
	0x00ff 00255 (pointer_vs_value/code/gc_test.go:41)	MOVQ	""..autotmp_10+112(SP), AX
	0x0104 00260 (pointer_vs_value/code/gc_test.go:41)	PCDATA	$0, $6
	0x0104 00260 (pointer_vs_value/code/gc_test.go:41)	PCDATA	$1, $5
	0x0104 00260 (pointer_vs_value/code/gc_test.go:41)	MOVQ	""..autotmp_10+120(SP), CX
	0x0109 00265 (pointer_vs_value/code/gc_test.go:41)	MOVQ	AX, "".~r2+32(SP)
	0x010e 00270 (pointer_vs_value/code/gc_test.go:41)	PCDATA	$0, $0
	0x010e 00270 (pointer_vs_value/code/gc_test.go:41)	MOVQ	CX, "".~r2+40(SP)
	0x0113 00275 (pointer_vs_value/code/gc_test.go:41)	JMP	277
	0x0115 00277 (<unknown line number>)	PCDATA	$0, $-2
	0x0115 00277 (<unknown line number>)	PCDATA	$1, $-2
	0x0115 00277 (<unknown line number>)	MOVQ	960(SP), BP
	0x011d 00285 (<unknown line number>)	ADDQ	$968, SP
	0x0124 00292 (<unknown line number>)	RET
	0x0125 00293 (pointer_vs_value/code/func.go:39)	PCDATA	$0, $0
	0x0125 00293 (pointer_vs_value/code/func.go:39)	PCDATA	$1, $2
	0x0125 00293 (pointer_vs_value/code/func.go:39)	MOVQ	"".o+128(SP), AX
	0x012d 00301 (pointer_vs_value/code/func.go:39)	XORPS	X0, X0
	0x0130 00304 (pointer_vs_value/code/func.go:39)	CVTSQ2SD	AX, X0
	0x0135 00309 (pointer_vs_value/code/func.go:39)	PCDATA	$1, $5
	0x0135 00309 (pointer_vs_value/code/func.go:39)	DIVSD	"".o+336(SP), X0
	0x013e 00318 (pointer_vs_value/code/gc_test.go:41)	MOVSD	X0, ""..autotmp_11+8(SP)
	0x0144 00324 (pointer_vs_value/code/gc_test.go:41)	MOVSD	X0, "".~r1(SP)
	0x0149 00329 (pointer_vs_value/code/gc_test.go:41)	XORPS	X0, X0
	0x014c 00332 (pointer_vs_value/code/gc_test.go:41)	MOVUPS	X0, "".~r2+32(SP)
	0x0151 00337 (pointer_vs_value/code/gc_test.go:41)	JMP	277
	0x0153 00339 (pointer_vs_value/code/gc_test.go:41)	NOP
	0x0153 00339 (pointer_vs_value/code/gc_test.go:40)	PCDATA	$1, $-1
	0x0153 00339 (pointer_vs_value/code/gc_test.go:40)	PCDATA	$0, $-1
	0x0153 00339 (pointer_vs_value/code/gc_test.go:40)	CALL	runtime.morestack_noctxt(SB)
	0x0158 00344 (pointer_vs_value/code/gc_test.go:40)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 b8 fc ff  eH..%....H..$...
	0x0010 ff 48 3b 41 10 0f 86 38 01 00 00 48 81 ec c8 03  .H;A...8...H....
	0x0020 00 00 48 89 ac 24 c0 03 00 00 48 8d ac 24 c0 03  ..H..$....H..$..
	0x0030 00 00 48 8d bc 24 80 00 00 00 48 8d b4 24 d0 03  ..H..$....H..$..
	0x0040 00 00 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00  ..H.l$.H.l$.....
	0x0050 00 48 8b 6d 00 0f 57 c0 f2 0f 11 04 24 0f 57 c9  .H.m..W.....$.W.
	0x0060 0f 11 4c 24 20 f2 0f 10 8c 24 50 01 00 00 66 0f  ..L$ ....$P...f.
	0x0070 2e c8 0f 85 ad 00 00 00 7b 05 e9 a6 00 00 00 48  ........{......H
	0x0080 8d 05 00 00 00 00 48 89 44 24 40 48 c7 44 24 48  ......H.D$@H.D$H
	0x0090 16 00 00 00 0f 57 c9 0f 11 4c 24 30 0f 57 c9 0f  .....W...L$0.W..
	0x00a0 11 4c 24 60 48 8d 44 24 60 48 89 44 24 10 84 00  .L$`H.D$`H.D$...
	0x00b0 48 8b 4c 24 48 48 8b 54 24 40 48 89 4c 24 68 48  H.L$HH.T$@H.L$hH
	0x00c0 89 54 24 60 48 89 44 24 18 48 8d 0d 00 00 00 00  .T$`H.D$.H......
	0x00d0 48 89 4c 24 50 48 89 44 24 58 48 89 4c 24 30 48  H.L$PH.D$XH.L$0H
	0x00e0 89 44 24 38 eb 00 48 8b 44 24 30 48 8b 4c 24 38  .D$8..H.D$0H.L$8
	0x00f0 48 89 44 24 70 48 89 4c 24 78 f2 0f 11 04 24 48  H.D$pH.L$x....$H
	0x0100 8b 44 24 70 48 8b 4c 24 78 48 89 44 24 20 48 89  .D$pH.L$xH.D$ H.
	0x0110 4c 24 28 eb 00 48 8b ac 24 c0 03 00 00 48 81 c4  L$(..H..$....H..
	0x0120 c8 03 00 00 c3 48 8b 84 24 80 00 00 00 0f 57 c0  .....H..$.....W.
	0x0130 f2 48 0f 2a c0 f2 0f 5e 84 24 50 01 00 00 f2 0f  .H.*...^.$P.....
	0x0140 11 44 24 08 f2 0f 11 04 24 0f 57 c0 0f 11 44 24  .D$.....$.W...D$
	0x0150 20 eb c2 e8 00 00 00 00 e9 a3 fe ff ff            ............
	rel 5+4 t=16 TLS+0
	rel 77+4 t=8 runtime.duffcopy+168
	rel 130+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 204+4 t=15 go.itab.*errors.errorString,error+0
	rel 340+4 t=8 runtime.morestack_noctxt+0
"".TestTeraPointerReceiverNative.func1 STEXT size=349 args=0x340 locals=0x98
	0x0000 00000 (pointer_vs_value/code/gc_test.go:47)	TEXT	"".TestTeraPointerReceiverNative.func1(SB), ABIInternal, $152-832
	0x0000 00000 (pointer_vs_value/code/gc_test.go:47)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/gc_test.go:47)	LEAQ	-24(SP), AX
	0x000e 00014 (pointer_vs_value/code/gc_test.go:47)	CMPQ	AX, 16(CX)
	0x0012 00018 (pointer_vs_value/code/gc_test.go:47)	JLS	339
	0x0018 00024 (pointer_vs_value/code/gc_test.go:47)	SUBQ	$152, SP
	0x001f 00031 (pointer_vs_value/code/gc_test.go:47)	MOVQ	BP, 144(SP)
	0x0027 00039 (pointer_vs_value/code/gc_test.go:47)	LEAQ	144(SP), BP
	0x002f 00047 (pointer_vs_value/code/gc_test.go:47)	FUNCDATA	$0, gclocals·e9d96d57d2c3e2899adea7f0ae81d69c(SB)
	0x002f 00047 (pointer_vs_value/code/gc_test.go:47)	FUNCDATA	$1, gclocals·ddafd53eafbe6cc7d39cba9c5e704644(SB)
	0x002f 00047 (pointer_vs_value/code/gc_test.go:47)	FUNCDATA	$2, gclocals·e0bce6494600d81ccfe66faf0f0766c3(SB)
	0x002f 00047 (pointer_vs_value/code/gc_test.go:47)	FUNCDATA	$3, "".TestTeraPointerReceiverNative.func1.stkobj(SB)
	0x002f 00047 (pointer_vs_value/code/gc_test.go:48)	PCDATA	$0, $1
	0x002f 00047 (pointer_vs_value/code/gc_test.go:48)	PCDATA	$1, $1
	0x002f 00047 (pointer_vs_value/code/gc_test.go:48)	LEAQ	"".o+160(SP), AX
	0x0037 00055 (pointer_vs_value/code/gc_test.go:48)	MOVQ	AX, ""..autotmp_7+32(SP)
	0x003c 00060 (pointer_vs_value/code/gc_test.go:48)	PCDATA	$0, $0
	0x003c 00060 (pointer_vs_value/code/gc_test.go:48)	PCDATA	$1, $2
	0x003c 00060 (pointer_vs_value/code/gc_test.go:48)	MOVQ	AX, "".o+16(SP)
	0x0041 00065 (pointer_vs_value/code/gc_test.go:48)	XORPS	X0, X0
	0x0044 00068 (pointer_vs_value/code/gc_test.go:48)	MOVSD	X0, "".~r1(SP)
	0x0049 00073 (pointer_vs_value/code/gc_test.go:48)	XORPS	X1, X1
	0x004c 00076 (pointer_vs_value/code/gc_test.go:48)	MOVUPS	X1, "".~r2+48(SP)
	0x0051 00081 (pointer_vs_value/code/func.go:80)	PCDATA	$0, $1
	0x0051 00081 (pointer_vs_value/code/func.go:80)	MOVQ	"".o+16(SP), AX
	0x0056 00086 (pointer_vs_value/code/func.go:80)	TESTB	AL, (AX)
	0x0058 00088 (<unknown line number>)	NOP
	0x0058 00088 (pointer_vs_value/code/func.go:80)	PCDATA	$0, $0
	0x0058 00088 (pointer_vs_value/code/func.go:80)	MOVSD	208(AX), X1
	0x0060 00096 (pointer_vs_value/code/func.go:80)	UCOMISD	X0, X1
	0x0064 00100 (pointer_vs_value/code/func.go:80)	JNE	285
	0x006a 00106 (pointer_vs_value/code/func.go:80)	JPC	113
	0x006c 00108 (pointer_vs_value/code/func.go:80)	JMP	285
	0x0071 00113 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $1
	0x0071 00113 (pointer_vs_value/code/func.go:81)	PCDATA	$1, $3
	0x0071 00113 (pointer_vs_value/code/func.go:81)	LEAQ	go.string."cannot divide by '0.0'"(SB), AX
	0x0078 00120 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $0
	0x0078 00120 (pointer_vs_value/code/func.go:81)	MOVQ	AX, errors.text+80(SP)
	0x007d 00125 (pointer_vs_value/code/func.go:81)	MOVQ	$22, errors.text+88(SP)
	0x0086 00134 (pointer_vs_value/code/func.go:81)	XORPS	X1, X1
	0x0089 00137 (pointer_vs_value/code/func.go:81)	MOVUPS	X1, "".~R0+64(SP)
	0x008e 00142 (<unknown line number>)	NOP
	0x008e 00142 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $4
	0x008e 00142 ($GOROOT/src/errors/errors.go:59)	XORPS	X1, X1
	0x0091 00145 ($GOROOT/src/errors/errors.go:59)	MOVUPS	X1, ""..autotmp_9+96(SP)
	0x0096 00150 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x0096 00150 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $3
	0x0096 00150 ($GOROOT/src/errors/errors.go:59)	LEAQ	""..autotmp_9+96(SP), AX
	0x009b 00155 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, ""..autotmp_8+24(SP)
	0x00a0 00160 ($GOROOT/src/errors/errors.go:59)	TESTB	AL, (AX)
	0x00a2 00162 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+88(SP), CX
	0x00a7 00167 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $2
	0x00a7 00167 ($GOROOT/src/errors/errors.go:59)	PCDATA	$1, $1
	0x00a7 00167 ($GOROOT/src/errors/errors.go:59)	MOVQ	errors.text+80(SP), DX
	0x00ac 00172 ($GOROOT/src/errors/errors.go:59)	MOVQ	CX, ""..autotmp_9+104(SP)
	0x00b1 00177 ($GOROOT/src/errors/errors.go:59)	PCDATA	$0, $1
	0x00b1 00177 ($GOROOT/src/errors/errors.go:59)	MOVQ	DX, ""..autotmp_9+96(SP)
	0x00b6 00182 ($GOROOT/src/errors/errors.go:59)	MOVQ	AX, ""..autotmp_6+40(SP)
	0x00bb 00187 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $3
	0x00bb 00187 (pointer_vs_value/code/func.go:81)	LEAQ	go.itab.*errors.errorString,error(SB), CX
	0x00c2 00194 (pointer_vs_value/code/func.go:81)	MOVQ	CX, ""..autotmp_10+128(SP)
	0x00ca 00202 (pointer_vs_value/code/func.go:81)	MOVQ	AX, ""..autotmp_10+136(SP)
	0x00d2 00210 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $1
	0x00d2 00210 (pointer_vs_value/code/func.go:81)	PCDATA	$1, $5
	0x00d2 00210 (pointer_vs_value/code/func.go:81)	MOVQ	CX, "".~R0+64(SP)
	0x00d7 00215 (pointer_vs_value/code/func.go:81)	PCDATA	$0, $0
	0x00d7 00215 (pointer_vs_value/code/func.go:81)	MOVQ	AX, "".~R0+72(SP)
	0x00dc 00220 (pointer_vs_value/code/func.go:81)	JMP	222
	0x00de 00222 (pointer_vs_value/code/gc_test.go:48)	MOVQ	"".~R0+64(SP), AX
	0x00e3 00227 (pointer_vs_value/code/gc_test.go:48)	PCDATA	$0, $4
	0x00e3 00227 (pointer_vs_value/code/gc_test.go:48)	PCDATA	$1, $1
	0x00e3 00227 (pointer_vs_value/code/gc_test.go:48)	MOVQ	"".~R0+72(SP), CX
	0x00e8 00232 (pointer_vs_value/code/gc_test.go:48)	PCDATA	$1, $6
	0x00e8 00232 (pointer_vs_value/code/gc_test.go:48)	MOVQ	AX, ""..autotmp_11+112(SP)
	0x00ed 00237 (pointer_vs_value/code/gc_test.go:48)	PCDATA	$0, $0
	0x00ed 00237 (pointer_vs_value/code/gc_test.go:48)	MOVQ	CX, ""..autotmp_11+120(SP)
	0x00f2 00242 (pointer_vs_value/code/gc_test.go:48)	MOVSD	X0, "".~r1(SP)
	0x00f7 00247 (pointer_vs_value/code/gc_test.go:48)	MOVQ	""..autotmp_11+112(SP), AX
	0x00fc 00252 (pointer_vs_value/code/gc_test.go:48)	PCDATA	$0, $4
	0x00fc 00252 (pointer_vs_value/code/gc_test.go:48)	PCDATA	$1, $1
	0x00fc 00252 (pointer_vs_value/code/gc_test.go:48)	MOVQ	""..autotmp_11+120(SP), CX
	0x0101 00257 (pointer_vs_value/code/gc_test.go:48)	MOVQ	AX, "".~r2+48(SP)
	0x0106 00262 (pointer_vs_value/code/gc_test.go:48)	PCDATA	$0, $0
	0x0106 00262 (pointer_vs_value/code/gc_test.go:48)	MOVQ	CX, "".~r2+56(SP)
	0x010b 00267 (pointer_vs_value/code/gc_test.go:48)	JMP	269
	0x010d 00269 (<unknown line number>)	PCDATA	$0, $-2
	0x010d 00269 (<unknown line number>)	PCDATA	$1, $-2
	0x010d 00269 (<unknown line number>)	MOVQ	144(SP), BP
	0x0115 00277 (<unknown line number>)	ADDQ	$152, SP
	0x011c 00284 (<unknown line number>)	RET
	0x011d 00285 (pointer_vs_value/code/func.go:83)	PCDATA	$0, $1
	0x011d 00285 (pointer_vs_value/code/func.go:83)	PCDATA	$1, $2
	0x011d 00285 (pointer_vs_value/code/func.go:83)	MOVQ	"".o+16(SP), AX
	0x0122 00290 (pointer_vs_value/code/func.go:83)	TESTB	AL, (AX)
	0x0124 00292 (pointer_vs_value/code/func.go:83)	PCDATA	$0, $3
	0x0124 00292 (pointer_vs_value/code/func.go:83)	PCDATA	$1, $1
	0x0124 00292 (pointer_vs_value/code/func.go:83)	MOVQ	"".o+16(SP), CX
	0x0129 00297 (pointer_vs_value/code/func.go:83)	TESTB	AL, (CX)
	0x012b 00299 (pointer_vs_value/code/func.go:83)	PCDATA	$0, $4
	0x012b 00299 (pointer_vs_value/code/func.go:83)	MOVQ	(AX), AX
	0x012e 00302 (pointer_vs_value/code/func.go:83)	XORPS	X0, X0
	0x0131 00305 (pointer_vs_value/code/func.go:83)	CVTSQ2SD	AX, X0
	0x0136 00310 (pointer_vs_value/code/func.go:83)	PCDATA	$0, $0
	0x0136 00310 (pointer_vs_value/code/func.go:83)	DIVSD	208(CX), X0
	0x013e 00318 (pointer_vs_value/code/gc_test.go:48)	MOVSD	X0, ""..autotmp_12+8(SP)
	0x0144 00324 (pointer_vs_value/code/gc_test.go:48)	MOVSD	X0, "".~r1(SP)
	0x0149 00329 (pointer_vs_value/code/gc_test.go:48)	XORPS	X0, X0
	0x014c 00332 (pointer_vs_value/code/gc_test.go:48)	MOVUPS	X0, "".~r2+48(SP)
	0x0151 00337 (pointer_vs_value/code/gc_test.go:48)	JMP	269
	0x0153 00339 (pointer_vs_value/code/gc_test.go:48)	NOP
	0x0153 00339 (pointer_vs_value/code/gc_test.go:47)	PCDATA	$1, $-1
	0x0153 00339 (pointer_vs_value/code/gc_test.go:47)	PCDATA	$0, $-1
	0x0153 00339 (pointer_vs_value/code/gc_test.go:47)	CALL	runtime.morestack_noctxt(SB)
	0x0158 00344 (pointer_vs_value/code/gc_test.go:47)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 44 24 e8 48 3b  eH..%....H.D$.H;
	0x0010 41 10 0f 86 3b 01 00 00 48 81 ec 98 00 00 00 48  A...;...H......H
	0x0020 89 ac 24 90 00 00 00 48 8d ac 24 90 00 00 00 48  ..$....H..$....H
	0x0030 8d 84 24 a0 00 00 00 48 89 44 24 20 48 89 44 24  ..$....H.D$ H.D$
	0x0040 10 0f 57 c0 f2 0f 11 04 24 0f 57 c9 0f 11 4c 24  ..W.....$.W...L$
	0x0050 30 48 8b 44 24 10 84 00 f2 0f 10 88 d0 00 00 00  0H.D$...........
	0x0060 66 0f 2e c8 0f 85 b3 00 00 00 7b 05 e9 ac 00 00  f.........{.....
	0x0070 00 48 8d 05 00 00 00 00 48 89 44 24 50 48 c7 44  .H......H.D$PH.D
	0x0080 24 58 16 00 00 00 0f 57 c9 0f 11 4c 24 40 0f 57  $X.....W...L$@.W
	0x0090 c9 0f 11 4c 24 60 48 8d 44 24 60 48 89 44 24 18  ...L$`H.D$`H.D$.
	0x00a0 84 00 48 8b 4c 24 58 48 8b 54 24 50 48 89 4c 24  ..H.L$XH.T$PH.L$
	0x00b0 68 48 89 54 24 60 48 89 44 24 28 48 8d 0d 00 00  hH.T$`H.D$(H....
	0x00c0 00 00 48 89 8c 24 80 00 00 00 48 89 84 24 88 00  ..H..$....H..$..
	0x00d0 00 00 48 89 4c 24 40 48 89 44 24 48 eb 00 48 8b  ..H.L$@H.D$H..H.
	0x00e0 44 24 40 48 8b 4c 24 48 48 89 44 24 70 48 89 4c  D$@H.L$HH.D$pH.L
	0x00f0 24 78 f2 0f 11 04 24 48 8b 44 24 70 48 8b 4c 24  $x....$H.D$pH.L$
	0x0100 78 48 89 44 24 30 48 89 4c 24 38 eb 00 48 8b ac  xH.D$0H.L$8..H..
	0x0110 24 90 00 00 00 48 81 c4 98 00 00 00 c3 48 8b 44  $....H.......H.D
	0x0120 24 10 84 00 48 8b 4c 24 10 84 01 48 8b 00 0f 57  $...H.L$...H...W
	0x0130 c0 f2 48 0f 2a c0 f2 0f 5e 81 d0 00 00 00 f2 0f  ..H.*...^.......
	0x0140 11 44 24 08 f2 0f 11 04 24 0f 57 c0 0f 11 44 24  .D$.....$.W...D$
	0x0150 30 eb ba e8 00 00 00 00 e9 a3 fe ff ff           0............
	rel 5+4 t=16 TLS+0
	rel 116+4 t=15 go.string."cannot divide by '0.0'"+0
	rel 190+4 t=15 go.itab.*errors.errorString,error+0
	rel 340+4 t=8 runtime.morestack_noctxt+0
"".TestTeraInterfaceReceiverNative.func1 STEXT size=180 args=0x340 locals=0x40
	0x0000 00000 (pointer_vs_value/code/gc_test.go:54)	TEXT	"".TestTeraInterfaceReceiverNative.func1(SB), ABIInternal, $64-832
	0x0000 00000 (pointer_vs_value/code/gc_test.go:54)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/gc_test.go:54)	CMPQ	SP, 16(CX)
	0x000d 00013 (pointer_vs_value/code/gc_test.go:54)	JLS	170
	0x0013 00019 (pointer_vs_value/code/gc_test.go:54)	SUBQ	$64, SP
	0x0017 00023 (pointer_vs_value/code/gc_test.go:54)	MOVQ	BP, 56(SP)
	0x001c 00028 (pointer_vs_value/code/gc_test.go:54)	LEAQ	56(SP), BP
	0x0021 00033 (pointer_vs_value/code/gc_test.go:54)	FUNCDATA	$0, gclocals·72d3c7b1329acbd336a83b08909ef1b6(SB)
	0x0021 00033 (pointer_vs_value/code/gc_test.go:54)	FUNCDATA	$1, gclocals·2dd975a5d416a941d0db91113f946ec3(SB)
	0x0021 00033 (pointer_vs_value/code/gc_test.go:54)	FUNCDATA	$2, gclocals·afad599a374687002fe037c60f940416(SB)
	0x0021 00033 (pointer_vs_value/code/gc_test.go:54)	PCDATA	$0, $1
	0x0021 00033 (pointer_vs_value/code/gc_test.go:54)	PCDATA	$1, $0
	0x0021 00033 (pointer_vs_value/code/gc_test.go:54)	LEAQ	type."".tera(SB), AX
	0x0028 00040 (pointer_vs_value/code/gc_test.go:54)	PCDATA	$0, $0
	0x0028 00040 (pointer_vs_value/code/gc_test.go:54)	MOVQ	AX, (SP)
	0x002c 00044 (pointer_vs_value/code/gc_test.go:54)	CALL	runtime.newobject(SB)
	0x0031 00049 (pointer_vs_value/code/gc_test.go:54)	PCDATA	$0, $2
	0x0031 00049 (pointer_vs_value/code/gc_test.go:54)	MOVQ	8(SP), DI
	0x0036 00054 (pointer_vs_value/code/gc_test.go:54)	PCDATA	$1, $1
	0x0036 00054 (pointer_vs_value/code/gc_test.go:54)	MOVQ	DI, "".&o+48(SP)
	0x003b 00059 (pointer_vs_value/code/gc_test.go:54)	PCDATA	$0, $-2
	0x003b 00059 (pointer_vs_value/code/gc_test.go:54)	PCDATA	$1, $-2
	0x003b 00059 (pointer_vs_value/code/gc_test.go:54)	CMPL	runtime.writeBarrier(SB), $0
	0x0042 00066 (pointer_vs_value/code/gc_test.go:54)	JEQ	70
	0x0044 00068 (pointer_vs_value/code/gc_test.go:54)	JMP	137
	0x0046 00070 (pointer_vs_value/code/gc_test.go:54)	LEAQ	"".o+72(SP), SI
	0x004b 00075 (pointer_vs_value/code/gc_test.go:54)	DUFFCOPY	$168
	0x005e 00094 (pointer_vs_value/code/gc_test.go:54)	JMP	96
	0x0060 00096 (pointer_vs_value/code/gc_test.go:55)	PCDATA	$0, $1
	0x0060 00096 (pointer_vs_value/code/gc_test.go:55)	PCDATA	$1, $2
	0x0060 00096 (pointer_vs_value/code/gc_test.go:55)	MOVQ	"".&o+48(SP), AX
	0x0065 00101 (pointer_vs_value/code/gc_test.go:55)	MOVQ	AX, ""..autotmp_3+40(SP)
	0x006a 00106 (pointer_vs_value/code/gc_test.go:55)	PCDATA	$0, $3
	0x006a 00106 (pointer_vs_value/code/gc_test.go:55)	LEAQ	go.itab.*"".tera,"".obj(SB), CX
	0x0071 00113 (pointer_vs_value/code/gc_test.go:55)	PCDATA	$0, $1
	0x0071 00113 (pointer_vs_value/code/gc_test.go:55)	MOVQ	CX, (SP)
	0x0075 00117 (pointer_vs_value/code/gc_test.go:55)	PCDATA	$0, $0
	0x0075 00117 (pointer_vs_value/code/gc_test.go:55)	MOVQ	AX, 8(SP)
	0x007a 00122 (pointer_vs_value/code/gc_test.go:55)	CALL	"".calcIfc(SB)
	0x007f 00127 (pointer_vs_value/code/gc_test.go:56)	MOVQ	56(SP), BP
	0x0084 00132 (pointer_vs_value/code/gc_test.go:56)	ADDQ	$64, SP
	0x0088 00136 (pointer_vs_value/code/gc_test.go:56)	RET
	0x0089 00137 (pointer_vs_value/code/gc_test.go:54)	PCDATA	$0, $-2
	0x0089 00137 (pointer_vs_value/code/gc_test.go:54)	PCDATA	$1, $-2
	0x0089 00137 (pointer_vs_value/code/gc_test.go:54)	LEAQ	type."".tera(SB), AX
	0x0090 00144 (pointer_vs_value/code/gc_test.go:54)	MOVQ	AX, (SP)
	0x0094 00148 (pointer_vs_value/code/gc_test.go:54)	MOVQ	DI, 8(SP)
	0x0099 00153 (pointer_vs_value/code/gc_test.go:54)	LEAQ	"".o+72(SP), AX
	0x009e 00158 (pointer_vs_value/code/gc_test.go:54)	MOVQ	AX, 16(SP)
	0x00a3 00163 (pointer_vs_value/code/gc_test.go:54)	CALL	runtime.typedmemmove(SB)
	0x00a8 00168 (pointer_vs_value/code/gc_test.go:54)	JMP	96
	0x00aa 00170 (pointer_vs_value/code/gc_test.go:54)	NOP
	0x00aa 00170 (pointer_vs_value/code/gc_test.go:54)	PCDATA	$1, $-1
	0x00aa 00170 (pointer_vs_value/code/gc_test.go:54)	PCDATA	$0, $-1
	0x00aa 00170 (pointer_vs_value/code/gc_test.go:54)	CALL	runtime.morestack_noctxt(SB)
	0x00af 00175 (pointer_vs_value/code/gc_test.go:54)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 97  eH..%....H;a....
	0x0010 00 00 00 48 83 ec 40 48 89 6c 24 38 48 8d 6c 24  ...H..@H.l$8H.l$
	0x0020 38 48 8d 05 00 00 00 00 48 89 04 24 e8 00 00 00  8H......H..$....
	0x0030 00 48 8b 7c 24 08 48 89 7c 24 30 83 3d 00 00 00  .H.|$.H.|$0.=...
	0x0040 00 00 74 02 eb 43 48 8d 74 24 48 48 89 6c 24 f0  ..t..CH.t$HH.l$.
	0x0050 48 8d 6c 24 f0 e8 00 00 00 00 48 8b 6d 00 eb 00  H.l$......H.m...
	0x0060 48 8b 44 24 30 48 89 44 24 28 48 8d 0d 00 00 00  H.D$0H.D$(H.....
	0x0070 00 48 89 0c 24 48 89 44 24 08 e8 00 00 00 00 48  .H..$H.D$......H
	0x0080 8b 6c 24 38 48 83 c4 40 c3 48 8d 05 00 00 00 00  .l$8H..@.H......
	0x0090 48 89 04 24 48 89 7c 24 08 48 8d 44 24 48 48 89  H..$H.|$.H.D$HH.
	0x00a0 44 24 10 e8 00 00 00 00 eb b6 e8 00 00 00 00 e9  D$..............
	0x00b0 4c ff ff ff                                      L...
	rel 5+4 t=16 TLS+0
	rel 36+4 t=15 type."".tera+0
	rel 45+4 t=8 runtime.newobject+0
	rel 61+4 t=15 runtime.writeBarrier+-1
	rel 86+4 t=8 runtime.duffcopy+168
	rel 109+4 t=15 go.itab.*"".tera,"".obj+0
	rel 123+4 t=8 "".calcIfc+0
	rel 140+4 t=15 type."".tera+0
	rel 164+4 t=8 runtime.typedmemmove+0
	rel 171+4 t=8 runtime.morestack_noctxt+0
"".runRoutine.func1 STEXT size=142 args=0x8 locals=0x30
	0x0000 00000 (pointer_vs_value/code/gc_test.go:65)	TEXT	"".runRoutine.func1(SB), ABIInternal, $48-8
	0x0000 00000 (pointer_vs_value/code/gc_test.go:65)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/gc_test.go:65)	CMPQ	SP, 16(CX)
	0x000d 00013 (pointer_vs_value/code/gc_test.go:65)	JLS	132
	0x000f 00015 (pointer_vs_value/code/gc_test.go:65)	SUBQ	$48, SP
	0x0013 00019 (pointer_vs_value/code/gc_test.go:65)	MOVQ	BP, 40(SP)
	0x0018 00024 (pointer_vs_value/code/gc_test.go:65)	LEAQ	40(SP), BP
	0x001d 00029 (pointer_vs_value/code/gc_test.go:65)	FUNCDATA	$0, gclocals·c7c4fc7b12f6707ea74acf7400192967(SB)
	0x001d 00029 (pointer_vs_value/code/gc_test.go:65)	FUNCDATA	$1, gclocals·87f6052ef51eed84352c5a7cd7c29d63(SB)
	0x001d 00029 (pointer_vs_value/code/gc_test.go:65)	FUNCDATA	$2, gclocals·f921db378992a411b04a03b038505262(SB)
	0x001d 00029 (pointer_vs_value/code/gc_test.go:66)	PCDATA	$0, $0
	0x001d 00029 (pointer_vs_value/code/gc_test.go:66)	PCDATA	$1, $0
	0x001d 00029 (pointer_vs_value/code/gc_test.go:66)	MOVQ	$100000000000, AX
	0x0027 00039 (pointer_vs_value/code/gc_test.go:66)	MOVQ	AX, time.d+16(SP)
	0x002c 00044 (pointer_vs_value/code/gc_test.go:66)	MOVQ	$0, "".~R0+24(SP)
	0x0035 00053 (<unknown line number>)	NOP
	0x0035 00053 ($GOROOT/src/time/sleep.go:149)	MOVQ	time.d+16(SP), AX
	0x003a 00058 ($GOROOT/src/time/sleep.go:149)	MOVQ	AX, (SP)
	0x003e 00062 ($GOROOT/src/time/sleep.go:149)	CALL	time.NewTimer(SB)
	0x0043 00067 ($GOROOT/src/time/sleep.go:149)	PCDATA	$0, $1
	0x0043 00067 ($GOROOT/src/time/sleep.go:149)	MOVQ	8(SP), AX
	0x0048 00072 ($GOROOT/src/time/sleep.go:149)	MOVQ	AX, ""..autotmp_3+32(SP)
	0x004d 00077 ($GOROOT/src/time/sleep.go:149)	TESTB	AL, (AX)
	0x004f 00079 ($GOROOT/src/time/sleep.go:149)	MOVQ	(AX), AX
	0x0052 00082 (pointer_vs_value/code/gc_test.go:66)	PCDATA	$0, $0
	0x0052 00082 (pointer_vs_value/code/gc_test.go:66)	PCDATA	$1, $1
	0x0052 00082 (pointer_vs_value/code/gc_test.go:66)	MOVQ	AX, "".~R0+24(SP)
	0x0057 00087 (pointer_vs_value/code/gc_test.go:66)	JMP	89
	0x0059 00089 (pointer_vs_value/code/gc_test.go:66)	PCDATA	$0, $1
	0x0059 00089 (pointer_vs_value/code/gc_test.go:66)	PCDATA	$1, $0
	0x0059 00089 (pointer_vs_value/code/gc_test.go:66)	MOVQ	"".~R0+24(SP), AX
	0x005e 00094 (pointer_vs_value/code/gc_test.go:66)	PCDATA	$0, $0
	0x005e 00094 (pointer_vs_value/code/gc_test.go:66)	MOVQ	AX, (SP)
	0x0062 00098 (pointer_vs_value/code/gc_test.go:66)	MOVQ	$0, 8(SP)
	0x006b 00107 (pointer_vs_value/code/gc_test.go:66)	CALL	runtime.chanrecv1(SB)
	0x0070 00112 (pointer_vs_value/code/gc_test.go:67)	PCDATA	$0, $2
	0x0070 00112 (pointer_vs_value/code/gc_test.go:67)	PCDATA	$1, $2
	0x0070 00112 (pointer_vs_value/code/gc_test.go:67)	MOVQ	"".cnl+56(SP), DX
	0x0075 00117 (pointer_vs_value/code/gc_test.go:67)	MOVQ	(DX), AX
	0x0078 00120 (pointer_vs_value/code/gc_test.go:67)	PCDATA	$0, $0
	0x0078 00120 (pointer_vs_value/code/gc_test.go:67)	CALL	AX
	0x007a 00122 (pointer_vs_value/code/gc_test.go:68)	MOVQ	40(SP), BP
	0x007f 00127 (pointer_vs_value/code/gc_test.go:68)	ADDQ	$48, SP
	0x0083 00131 (pointer_vs_value/code/gc_test.go:68)	RET
	0x0084 00132 (pointer_vs_value/code/gc_test.go:68)	NOP
	0x0084 00132 (pointer_vs_value/code/gc_test.go:65)	PCDATA	$1, $-1
	0x0084 00132 (pointer_vs_value/code/gc_test.go:65)	PCDATA	$0, $-1
	0x0084 00132 (pointer_vs_value/code/gc_test.go:65)	CALL	runtime.morestack_noctxt(SB)
	0x0089 00137 (pointer_vs_value/code/gc_test.go:65)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 75 48  eH..%....H;a.vuH
	0x0010 83 ec 30 48 89 6c 24 28 48 8d 6c 24 28 48 b8 00  ..0H.l$(H.l$(H..
	0x0020 e8 76 48 17 00 00 00 48 89 44 24 10 48 c7 44 24  .vH....H.D$.H.D$
	0x0030 18 00 00 00 00 48 8b 44 24 10 48 89 04 24 e8 00  .....H.D$.H..$..
	0x0040 00 00 00 48 8b 44 24 08 48 89 44 24 20 84 00 48  ...H.D$.H.D$ ..H
	0x0050 8b 00 48 89 44 24 18 eb 00 48 8b 44 24 18 48 89  ..H.D$...H.D$.H.
	0x0060 04 24 48 c7 44 24 08 00 00 00 00 e8 00 00 00 00  .$H.D$..........
	0x0070 48 8b 54 24 38 48 8b 02 ff d0 48 8b 6c 24 28 48  H.T$8H....H.l$(H
	0x0080 83 c4 30 c3 e8 00 00 00 00 e9 72 ff ff ff        ..0.......r...
	rel 5+4 t=16 TLS+0
	rel 63+4 t=8 time.NewTimer+0
	rel 108+4 t=8 runtime.chanrecv1+0
	rel 120+0 t=11 +0
	rel 133+4 t=8 runtime.morestack_noctxt+0
"".runRoutine.func2 STEXT size=1655 args=0x18 locals=0x880
	0x0000 00000 (pointer_vs_value/code/gc_test.go:70)	TEXT	"".runRoutine.func2(SB), ABIInternal, $2176-24
	0x0000 00000 (pointer_vs_value/code/gc_test.go:70)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/gc_test.go:70)	LEAQ	-2048(SP), AX
	0x0011 00017 (pointer_vs_value/code/gc_test.go:70)	CMPQ	AX, 16(CX)
	0x0015 00021 (pointer_vs_value/code/gc_test.go:70)	JLS	1645
	0x001b 00027 (pointer_vs_value/code/gc_test.go:70)	SUBQ	$2176, SP
	0x0022 00034 (pointer_vs_value/code/gc_test.go:70)	MOVQ	BP, 2168(SP)
	0x002a 00042 (pointer_vs_value/code/gc_test.go:70)	LEAQ	2168(SP), BP
	0x0032 00050 (pointer_vs_value/code/gc_test.go:70)	FUNCDATA	$0, gclocals·6df2c81b738e35f9bcc0e336dfc774e0(SB)
	0x0032 00050 (pointer_vs_value/code/gc_test.go:70)	FUNCDATA	$1, gclocals·1521c3d4ce9c7f8618957801866c4c12(SB)
	0x0032 00050 (pointer_vs_value/code/gc_test.go:70)	FUNCDATA	$2, gclocals·2d82400d6d45c90d4d230ea371739f22(SB)
	0x0032 00050 (pointer_vs_value/code/gc_test.go:70)	FUNCDATA	$3, "".runRoutine.func2.stkobj(SB)
	0x0032 00050 (pointer_vs_value/code/gc_test.go:71)	PCDATA	$0, $0
	0x0032 00050 (pointer_vs_value/code/gc_test.go:71)	PCDATA	$1, $0
	0x0032 00050 (pointer_vs_value/code/gc_test.go:71)	CALL	time.Now(SB)
	0x0037 00055 (pointer_vs_value/code/gc_test.go:71)	PCDATA	$0, $1
	0x0037 00055 (pointer_vs_value/code/gc_test.go:71)	MOVQ	16(SP), AX
	0x003c 00060 (pointer_vs_value/code/gc_test.go:71)	MOVQ	8(SP), CX
	0x0041 00065 (pointer_vs_value/code/gc_test.go:71)	MOVQ	(SP), DX
	0x0045 00069 (pointer_vs_value/code/gc_test.go:71)	PCDATA	$1, $1
	0x0045 00069 (pointer_vs_value/code/gc_test.go:71)	MOVQ	DX, "".start+1208(SP)
	0x004d 00077 (pointer_vs_value/code/gc_test.go:71)	MOVQ	CX, "".start+1216(SP)
	0x0055 00085 (pointer_vs_value/code/gc_test.go:71)	PCDATA	$0, $0
	0x0055 00085 (pointer_vs_value/code/gc_test.go:71)	MOVQ	AX, "".start+1224(SP)
	0x005d 00093 (pointer_vs_value/code/gc_test.go:72)	PCDATA	$0, $-2
	0x005d 00093 (pointer_vs_value/code/gc_test.go:72)	PCDATA	$1, $-2
	0x005d 00093 (pointer_vs_value/code/gc_test.go:72)	JMP	95
	0x005f 00095 (pointer_vs_value/code/gc_test.go:74)	JMP	97
	0x0061 00097 (pointer_vs_value/code/gc_test.go:74)	PCDATA	$0, $0
	0x0061 00097 (pointer_vs_value/code/gc_test.go:74)	PCDATA	$1, $1
	0x0061 00097 (pointer_vs_value/code/gc_test.go:74)	MOVQ	"".ctx+2184(SP), AX
	0x0069 00105 (pointer_vs_value/code/gc_test.go:74)	TESTB	AL, (AX)
	0x006b 00107 (pointer_vs_value/code/gc_test.go:74)	MOVQ	32(AX), AX
	0x006f 00111 (pointer_vs_value/code/gc_test.go:74)	PCDATA	$0, $2
	0x006f 00111 (pointer_vs_value/code/gc_test.go:74)	MOVQ	"".ctx+2192(SP), CX
	0x0077 00119 (pointer_vs_value/code/gc_test.go:74)	PCDATA	$0, $0
	0x0077 00119 (pointer_vs_value/code/gc_test.go:74)	MOVQ	CX, (SP)
	0x007b 00123 (pointer_vs_value/code/gc_test.go:74)	CALL	AX
	0x007d 00125 (pointer_vs_value/code/gc_test.go:74)	PCDATA	$0, $1
	0x007d 00125 (pointer_vs_value/code/gc_test.go:74)	MOVQ	8(SP), AX
	0x0082 00130 (pointer_vs_value/code/gc_test.go:74)	MOVQ	AX, ""..autotmp_22+960(SP)
	0x008a 00138 (pointer_vs_value/code/gc_test.go:74)	MOVQ	$0, (SP)
	0x0092 00146 (pointer_vs_value/code/gc_test.go:74)	PCDATA	$0, $0
	0x0092 00146 (pointer_vs_value/code/gc_test.go:74)	MOVQ	AX, 8(SP)
	0x0097 00151 (pointer_vs_value/code/gc_test.go:74)	CALL	runtime.selectnbrecv(SB)
	0x009c 00156 (pointer_vs_value/code/gc_test.go:74)	CMPB	16(SP), $0
	0x00a1 00161 (pointer_vs_value/code/gc_test.go:74)	JNE	168
	0x00a3 00163 (pointer_vs_value/code/gc_test.go:74)	JMP	1569
	0x00a8 00168 (pointer_vs_value/code/gc_test.go:75)	PCDATA	$1, $2
	0x00a8 00168 (pointer_vs_value/code/gc_test.go:75)	CALL	time.Now(SB)
	0x00ad 00173 (pointer_vs_value/code/gc_test.go:75)	MOVQ	(SP), AX
	0x00b1 00177 (pointer_vs_value/code/gc_test.go:75)	MOVQ	8(SP), CX
	0x00b6 00182 (pointer_vs_value/code/gc_test.go:75)	PCDATA	$0, $3
	0x00b6 00182 (pointer_vs_value/code/gc_test.go:75)	MOVQ	16(SP), DX
	0x00bb 00187 (pointer_vs_value/code/gc_test.go:75)	MOVQ	AX, ""..autotmp_23+1280(SP)
	0x00c3 00195 (pointer_vs_value/code/gc_test.go:75)	MOVQ	CX, ""..autotmp_23+1288(SP)
	0x00cb 00203 (pointer_vs_value/code/gc_test.go:75)	MOVQ	DX, ""..autotmp_23+1296(SP)
	0x00d3 00211 (pointer_vs_value/code/gc_test.go:75)	MOVQ	AX, (SP)
	0x00d7 00215 (pointer_vs_value/code/gc_test.go:75)	MOVQ	CX, 8(SP)
	0x00dc 00220 (pointer_vs_value/code/gc_test.go:75)	PCDATA	$0, $0
	0x00dc 00220 (pointer_vs_value/code/gc_test.go:75)	MOVQ	DX, 16(SP)
	0x00e1 00225 (pointer_vs_value/code/gc_test.go:75)	MOVQ	"".start+1208(SP), AX
	0x00e9 00233 (pointer_vs_value/code/gc_test.go:75)	MOVQ	"".start+1216(SP), CX
	0x00f1 00241 (pointer_vs_value/code/gc_test.go:75)	PCDATA	$0, $3
	0x00f1 00241 (pointer_vs_value/code/gc_test.go:75)	PCDATA	$1, $3
	0x00f1 00241 (pointer_vs_value/code/gc_test.go:75)	MOVQ	"".start+1224(SP), DX
	0x00f9 00249 (pointer_vs_value/code/gc_test.go:75)	MOVQ	AX, 24(SP)
	0x00fe 00254 (pointer_vs_value/code/gc_test.go:75)	MOVQ	CX, 32(SP)
	0x0103 00259 (pointer_vs_value/code/gc_test.go:75)	PCDATA	$0, $0
	0x0103 00259 (pointer_vs_value/code/gc_test.go:75)	MOVQ	DX, 40(SP)
	0x0108 00264 (pointer_vs_value/code/gc_test.go:75)	CALL	time.Time.Sub(SB)
	0x010d 00269 (pointer_vs_value/code/gc_test.go:75)	MOVQ	48(SP), AX
	0x0112 00274 (pointer_vs_value/code/gc_test.go:75)	MOVQ	AX, time.d+864(SP)
	0x011a 00282 (pointer_vs_value/code/gc_test.go:75)	MOVQ	$0, "".~R0+832(SP)
	0x0126 00294 (<unknown line number>)	NOP
	0x0126 00294 ($GOROOT/src/time/time.go:790)	MOVQ	time.d+864(SP), AX
	0x012e 00302 ($GOROOT/src/time/time.go:790)	MOVQ	AX, CX
	0x0131 00305 ($GOROOT/src/time/time.go:790)	MOVQ	$4835703278458516699, AX
	0x013b 00315 ($GOROOT/src/time/time.go:790)	IMULQ	CX
	0x013e 00318 ($GOROOT/src/time/time.go:790)	SARQ	$18, DX
	0x0142 00322 ($GOROOT/src/time/time.go:790)	SARQ	$63, CX
	0x0146 00326 ($GOROOT/src/time/time.go:790)	SUBQ	CX, DX
	0x0149 00329 (pointer_vs_value/code/gc_test.go:75)	MOVQ	DX, ""..autotmp_27+896(SP)
	0x0151 00337 (pointer_vs_value/code/gc_test.go:75)	MOVQ	DX, "".~R0+832(SP)
	0x0159 00345 (pointer_vs_value/code/gc_test.go:75)	JMP	347
	0x015b 00347 (pointer_vs_value/code/gc_test.go:75)	MOVQ	DX, "".duration+856(SP)
	0x0163 00355 (pointer_vs_value/code/gc_test.go:76)	MOVQ	DX, (SP)
	0x0167 00359 (pointer_vs_value/code/gc_test.go:76)	CALL	runtime.convT64(SB)
	0x016c 00364 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $1
	0x016c 00364 (pointer_vs_value/code/gc_test.go:76)	MOVQ	8(SP), AX
	0x0171 00369 (pointer_vs_value/code/gc_test.go:76)	MOVQ	AX, ""..autotmp_29+952(SP)
	0x0179 00377 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $4
	0x0179 00377 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $4
	0x0179 00377 (pointer_vs_value/code/gc_test.go:76)	LEAQ	type.int64(SB), CX
	0x0180 00384 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $1
	0x0180 00384 (pointer_vs_value/code/gc_test.go:76)	MOVQ	CX, ""..autotmp_28+1176(SP)
	0x0188 00392 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $0
	0x0188 00392 (pointer_vs_value/code/gc_test.go:76)	MOVQ	AX, ""..autotmp_28+1184(SP)
	0x0190 00400 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $1
	0x0190 00400 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $5
	0x0190 00400 (pointer_vs_value/code/gc_test.go:76)	LEAQ	go.string."Time passed [%v]"(SB), AX
	0x0197 00407 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $0
	0x0197 00407 (pointer_vs_value/code/gc_test.go:76)	MOVQ	AX, fmt.format+1016(SP)
	0x019f 00415 (pointer_vs_value/code/gc_test.go:76)	MOVQ	$16, fmt.format+1024(SP)
	0x01ab 00427 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $1
	0x01ab 00427 (pointer_vs_value/code/gc_test.go:76)	MOVQ	""..autotmp_28+1184(SP), AX
	0x01b3 00435 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $6
	0x01b3 00435 (pointer_vs_value/code/gc_test.go:76)	MOVQ	""..autotmp_28+1176(SP), CX
	0x01bb 00443 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $7
	0x01bb 00443 (pointer_vs_value/code/gc_test.go:76)	MOVQ	CX, "".~arg1+984(SP)
	0x01c3 00451 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $0
	0x01c3 00451 (pointer_vs_value/code/gc_test.go:76)	MOVQ	AX, "".~arg1+992(SP)
	0x01cb 00459 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $8
	0x01cb 00459 (pointer_vs_value/code/gc_test.go:76)	XORPS	X0, X0
	0x01ce 00462 (pointer_vs_value/code/gc_test.go:76)	MOVUPS	X0, ""..autotmp_32+1144(SP)
	0x01d6 00470 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $1
	0x01d6 00470 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $7
	0x01d6 00470 (pointer_vs_value/code/gc_test.go:76)	LEAQ	""..autotmp_32+1144(SP), AX
	0x01de 00478 (pointer_vs_value/code/gc_test.go:76)	MOVQ	AX, ""..autotmp_30+944(SP)
	0x01e6 00486 (pointer_vs_value/code/gc_test.go:76)	TESTB	AL, (AX)
	0x01e8 00488 (pointer_vs_value/code/gc_test.go:76)	MOVQ	"".~arg1+984(SP), CX
	0x01f0 00496 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $5
	0x01f0 00496 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $6
	0x01f0 00496 (pointer_vs_value/code/gc_test.go:76)	MOVQ	"".~arg1+992(SP), DX
	0x01f8 00504 (pointer_vs_value/code/gc_test.go:76)	MOVQ	CX, ""..autotmp_32+1144(SP)
	0x0200 00512 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $1
	0x0200 00512 (pointer_vs_value/code/gc_test.go:76)	MOVQ	DX, ""..autotmp_32+1152(SP)
	0x0208 00520 (pointer_vs_value/code/gc_test.go:76)	TESTB	AL, (AX)
	0x020a 00522 (pointer_vs_value/code/gc_test.go:76)	JMP	524
	0x020c 00524 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $0
	0x020c 00524 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $9
	0x020c 00524 (pointer_vs_value/code/gc_test.go:76)	MOVQ	AX, fmt.a+1256(SP)
	0x0214 00532 (pointer_vs_value/code/gc_test.go:76)	MOVQ	$1, fmt.a+1264(SP)
	0x0220 00544 (pointer_vs_value/code/gc_test.go:76)	MOVQ	$1, fmt.a+1272(SP)
	0x022c 00556 (pointer_vs_value/code/gc_test.go:76)	MOVQ	$0, fmt.n+848(SP)
	0x0238 00568 (pointer_vs_value/code/gc_test.go:76)	XORPS	X0, X0
	0x023b 00571 (pointer_vs_value/code/gc_test.go:76)	MOVUPS	X0, fmt.err+1032(SP)
	0x0243 00579 (<unknown line number>)	NOP
	0x0243 00579 (pointer_vs_value/code/gc_test.go:76)	MOVQ	$0, fmt..autotmp_4+872(SP)
	0x024f 00591 (pointer_vs_value/code/gc_test.go:76)	XORPS	X0, X0
	0x0252 00594 (pointer_vs_value/code/gc_test.go:76)	MOVUPS	X0, fmt..autotmp_5+1064(SP)
	0x025a 00602 ($GOROOT/src/fmt/print.go:213)	XORPS	X0, X0
	0x025d 00605 ($GOROOT/src/fmt/print.go:213)	MOVUPS	X0, ""..autotmp_25+1192(SP)
	0x0265 00613 ($GOROOT/src/fmt/print.go:213)	PCDATA	$0, $1
	0x0265 00613 ($GOROOT/src/fmt/print.go:213)	MOVQ	os.Stdout(SB), AX
	0x026c 00620 ($GOROOT/src/fmt/print.go:213)	PCDATA	$0, $4
	0x026c 00620 ($GOROOT/src/fmt/print.go:213)	LEAQ	go.itab.*os.File,io.Writer(SB), CX
	0x0273 00627 ($GOROOT/src/fmt/print.go:213)	PCDATA	$0, $1
	0x0273 00627 ($GOROOT/src/fmt/print.go:213)	MOVQ	CX, (SP)
	0x0277 00631 ($GOROOT/src/fmt/print.go:213)	PCDATA	$0, $0
	0x0277 00631 ($GOROOT/src/fmt/print.go:213)	MOVQ	AX, 8(SP)
	0x027c 00636 ($GOROOT/src/fmt/print.go:213)	PCDATA	$0, $1
	0x027c 00636 ($GOROOT/src/fmt/print.go:213)	MOVQ	fmt.format+1016(SP), AX
	0x0284 00644 ($GOROOT/src/fmt/print.go:213)	PCDATA	$1, $10
	0x0284 00644 ($GOROOT/src/fmt/print.go:213)	MOVQ	fmt.format+1024(SP), CX
	0x028c 00652 ($GOROOT/src/fmt/print.go:213)	PCDATA	$0, $0
	0x028c 00652 ($GOROOT/src/fmt/print.go:213)	MOVQ	AX, 16(SP)
	0x0291 00657 ($GOROOT/src/fmt/print.go:213)	MOVQ	CX, 24(SP)
	0x0296 00662 ($GOROOT/src/fmt/print.go:213)	MOVQ	fmt.a+1272(SP), AX
	0x029e 00670 ($GOROOT/src/fmt/print.go:213)	MOVQ	fmt.a+1264(SP), CX
	0x02a6 00678 ($GOROOT/src/fmt/print.go:213)	PCDATA	$0, $3
	0x02a6 00678 ($GOROOT/src/fmt/print.go:213)	PCDATA	$1, $3
	0x02a6 00678 ($GOROOT/src/fmt/print.go:213)	MOVQ	fmt.a+1256(SP), DX
	0x02ae 00686 ($GOROOT/src/fmt/print.go:213)	PCDATA	$0, $0
	0x02ae 00686 ($GOROOT/src/fmt/print.go:213)	MOVQ	DX, 32(SP)
	0x02b3 00691 ($GOROOT/src/fmt/print.go:213)	MOVQ	CX, 40(SP)
	0x02b8 00696 ($GOROOT/src/fmt/print.go:213)	MOVQ	AX, 48(SP)
	0x02bd 00701 ($GOROOT/src/fmt/print.go:213)	CALL	fmt.Fprintf(SB)
	0x02c2 00706 ($GOROOT/src/fmt/print.go:213)	MOVQ	56(SP), AX
	0x02c7 00711 ($GOROOT/src/fmt/print.go:213)	MOVQ	AX, ""..autotmp_24+904(SP)
	0x02cf 00719 ($GOROOT/src/fmt/print.go:213)	PCDATA	$0, $1
	0x02cf 00719 ($GOROOT/src/fmt/print.go:213)	MOVQ	72(SP), AX
	0x02d4 00724 ($GOROOT/src/fmt/print.go:213)	MOVQ	64(SP), CX
	0x02d9 00729 ($GOROOT/src/fmt/print.go:213)	PCDATA	$1, $11
	0x02d9 00729 ($GOROOT/src/fmt/print.go:213)	MOVQ	CX, ""..autotmp_25+1192(SP)
	0x02e1 00737 ($GOROOT/src/fmt/print.go:213)	PCDATA	$0, $0
	0x02e1 00737 ($GOROOT/src/fmt/print.go:213)	MOVQ	AX, ""..autotmp_25+1200(SP)
	0x02e9 00745 ($GOROOT/src/fmt/print.go:213)	MOVQ	""..autotmp_24+904(SP), AX
	0x02f1 00753 ($GOROOT/src/fmt/print.go:213)	MOVQ	AX, fmt..autotmp_4+872(SP)
	0x02f9 00761 ($GOROOT/src/fmt/print.go:213)	PCDATA	$0, $1
	0x02f9 00761 ($GOROOT/src/fmt/print.go:213)	MOVQ	""..autotmp_25+1200(SP), AX
	0x0301 00769 ($GOROOT/src/fmt/print.go:213)	PCDATA	$1, $3
	0x0301 00769 ($GOROOT/src/fmt/print.go:213)	MOVQ	""..autotmp_25+1192(SP), CX
	0x0309 00777 ($GOROOT/src/fmt/print.go:213)	PCDATA	$1, $12
	0x0309 00777 ($GOROOT/src/fmt/print.go:213)	MOVQ	CX, fmt..autotmp_5+1064(SP)
	0x0311 00785 ($GOROOT/src/fmt/print.go:213)	PCDATA	$0, $0
	0x0311 00785 ($GOROOT/src/fmt/print.go:213)	MOVQ	AX, fmt..autotmp_5+1072(SP)
	0x0319 00793 (pointer_vs_value/code/gc_test.go:76)	MOVQ	fmt..autotmp_4+872(SP), AX
	0x0321 00801 (pointer_vs_value/code/gc_test.go:76)	MOVQ	AX, fmt.n+848(SP)
	0x0329 00809 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $1
	0x0329 00809 (pointer_vs_value/code/gc_test.go:76)	MOVQ	fmt..autotmp_5+1072(SP), AX
	0x0331 00817 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $3
	0x0331 00817 (pointer_vs_value/code/gc_test.go:76)	MOVQ	fmt..autotmp_5+1064(SP), CX
	0x0339 00825 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $13
	0x0339 00825 (pointer_vs_value/code/gc_test.go:76)	MOVQ	CX, fmt.err+1032(SP)
	0x0341 00833 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $0
	0x0341 00833 (pointer_vs_value/code/gc_test.go:76)	MOVQ	AX, fmt.err+1040(SP)
	0x0349 00841 (pointer_vs_value/code/gc_test.go:76)	JMP	843
	0x034b 00843 (pointer_vs_value/code/gc_test.go:76)	MOVQ	fmt.n+848(SP), AX
	0x0353 00851 (pointer_vs_value/code/gc_test.go:76)	MOVQ	AX, ""..autotmp_33+880(SP)
	0x035b 00859 (pointer_vs_value/code/gc_test.go:76)	MOVQ	AX, ""..autotmp_2+912(SP)
	0x0363 00867 (pointer_vs_value/code/gc_test.go:76)	MOVQ	fmt.err+1032(SP), AX
	0x036b 00875 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $2
	0x036b 00875 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $3
	0x036b 00875 (pointer_vs_value/code/gc_test.go:76)	MOVQ	fmt.err+1040(SP), CX
	0x0373 00883 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $14
	0x0373 00883 (pointer_vs_value/code/gc_test.go:76)	MOVQ	AX, ""..autotmp_3+1160(SP)
	0x037b 00891 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $0
	0x037b 00891 (pointer_vs_value/code/gc_test.go:76)	MOVQ	CX, ""..autotmp_3+1168(SP)
	0x0383 00899 (pointer_vs_value/code/gc_test.go:76)	MOVQ	""..autotmp_2+912(SP), AX
	0x038b 00907 (pointer_vs_value/code/gc_test.go:76)	MOVQ	AX, (SP)
	0x038f 00911 (pointer_vs_value/code/gc_test.go:76)	CALL	runtime.convT64(SB)
	0x0394 00916 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $1
	0x0394 00916 (pointer_vs_value/code/gc_test.go:76)	MOVQ	8(SP), AX
	0x0399 00921 (pointer_vs_value/code/gc_test.go:76)	MOVQ	AX, ""..autotmp_35+936(SP)
	0x03a1 00929 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $4
	0x03a1 00929 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $15
	0x03a1 00929 (pointer_vs_value/code/gc_test.go:76)	LEAQ	type.int(SB), CX
	0x03a8 00936 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $1
	0x03a8 00936 (pointer_vs_value/code/gc_test.go:76)	MOVQ	CX, ""..autotmp_34+1128(SP)
	0x03b0 00944 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $0
	0x03b0 00944 (pointer_vs_value/code/gc_test.go:76)	MOVQ	AX, ""..autotmp_34+1136(SP)
	0x03b8 00952 (pointer_vs_value/code/gc_test.go:76)	MOVQ	""..autotmp_3+1160(SP), AX
	0x03c0 00960 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $2
	0x03c0 00960 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $16
	0x03c0 00960 (pointer_vs_value/code/gc_test.go:76)	MOVQ	""..autotmp_3+1168(SP), CX
	0x03c8 00968 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $17
	0x03c8 00968 (pointer_vs_value/code/gc_test.go:76)	MOVQ	AX, ""..autotmp_37+1096(SP)
	0x03d0 00976 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $0
	0x03d0 00976 (pointer_vs_value/code/gc_test.go:76)	MOVQ	CX, ""..autotmp_37+1104(SP)
	0x03d8 00984 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $18
	0x03d8 00984 (pointer_vs_value/code/gc_test.go:76)	MOVQ	AX, ""..autotmp_38+928(SP)
	0x03e0 00992 (pointer_vs_value/code/gc_test.go:76)	CMPQ	""..autotmp_38+928(SP), $0
	0x03e9 01001 (pointer_vs_value/code/gc_test.go:76)	JNE	1008
	0x03eb 01003 (pointer_vs_value/code/gc_test.go:76)	JMP	1564
	0x03f0 01008 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $17
	0x03f0 01008 (pointer_vs_value/code/gc_test.go:76)	TESTB	AL, (AX)
	0x03f2 01010 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $1
	0x03f2 01010 (pointer_vs_value/code/gc_test.go:76)	MOVQ	8(AX), AX
	0x03f6 01014 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $0
	0x03f6 01014 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $18
	0x03f6 01014 (pointer_vs_value/code/gc_test.go:76)	MOVQ	AX, ""..autotmp_38+928(SP)
	0x03fe 01022 (pointer_vs_value/code/gc_test.go:76)	JMP	1024
	0x0400 01024 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $1
	0x0400 01024 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $17
	0x0400 01024 (pointer_vs_value/code/gc_test.go:76)	MOVQ	""..autotmp_38+928(SP), AX
	0x0408 01032 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $4
	0x0408 01032 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $16
	0x0408 01032 (pointer_vs_value/code/gc_test.go:76)	MOVQ	""..autotmp_37+1104(SP), CX
	0x0410 01040 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $2
	0x0410 01040 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $19
	0x0410 01040 (pointer_vs_value/code/gc_test.go:76)	MOVQ	AX, ""..autotmp_36+1112(SP)
	0x0418 01048 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $0
	0x0418 01048 (pointer_vs_value/code/gc_test.go:76)	MOVQ	CX, ""..autotmp_36+1120(SP)
	0x0420 01056 (pointer_vs_value/code/gc_test.go:76)	MOVQ	""..autotmp_34+1128(SP), AX
	0x0428 01064 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $2
	0x0428 01064 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $20
	0x0428 01064 (pointer_vs_value/code/gc_test.go:76)	MOVQ	""..autotmp_34+1136(SP), CX
	0x0430 01072 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $21
	0x0430 01072 (pointer_vs_value/code/gc_test.go:76)	MOVQ	AX, "".~arg0+1000(SP)
	0x0438 01080 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $0
	0x0438 01080 (pointer_vs_value/code/gc_test.go:76)	MOVQ	CX, "".~arg0+1008(SP)
	0x0440 01088 (pointer_vs_value/code/gc_test.go:76)	MOVQ	""..autotmp_36+1112(SP), AX
	0x0448 01096 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $2
	0x0448 01096 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $22
	0x0448 01096 (pointer_vs_value/code/gc_test.go:76)	MOVQ	""..autotmp_36+1120(SP), CX
	0x0450 01104 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $23
	0x0450 01104 (pointer_vs_value/code/gc_test.go:76)	MOVQ	AX, "".~arg1+968(SP)
	0x0458 01112 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $0
	0x0458 01112 (pointer_vs_value/code/gc_test.go:76)	MOVQ	CX, "".~arg1+976(SP)
	0x0460 01120 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $24
	0x0460 01120 (pointer_vs_value/code/gc_test.go:76)	XORPS	X0, X0
	0x0463 01123 (pointer_vs_value/code/gc_test.go:76)	MOVUPS	X0, ""..autotmp_41+1304(SP)
	0x046b 01131 (pointer_vs_value/code/gc_test.go:76)	XORPS	X0, X0
	0x046e 01134 (pointer_vs_value/code/gc_test.go:76)	MOVUPS	X0, ""..autotmp_41+1320(SP)
	0x0476 01142 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $1
	0x0476 01142 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $23
	0x0476 01142 (pointer_vs_value/code/gc_test.go:76)	LEAQ	""..autotmp_41+1304(SP), AX
	0x047e 01150 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $25
	0x047e 01150 (pointer_vs_value/code/gc_test.go:76)	MOVQ	AX, ""..autotmp_39+920(SP)
	0x0486 01158 (pointer_vs_value/code/gc_test.go:76)	TESTB	AL, (AX)
	0x0488 01160 (pointer_vs_value/code/gc_test.go:76)	MOVQ	"".~arg0+1000(SP), CX
	0x0490 01168 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $5
	0x0490 01168 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $26
	0x0490 01168 (pointer_vs_value/code/gc_test.go:76)	MOVQ	"".~arg0+1008(SP), DX
	0x0498 01176 (pointer_vs_value/code/gc_test.go:76)	MOVQ	CX, ""..autotmp_41+1304(SP)
	0x04a0 01184 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $1
	0x04a0 01184 (pointer_vs_value/code/gc_test.go:76)	MOVQ	DX, ""..autotmp_41+1312(SP)
	0x04a8 01192 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $0
	0x04a8 01192 (pointer_vs_value/code/gc_test.go:76)	TESTB	AL, (AX)
	0x04aa 01194 (pointer_vs_value/code/gc_test.go:76)	MOVQ	"".~arg1+968(SP), AX
	0x04b2 01202 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $2
	0x04b2 01202 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $27
	0x04b2 01202 (pointer_vs_value/code/gc_test.go:76)	MOVQ	"".~arg1+976(SP), CX
	0x04ba 01210 (pointer_vs_value/code/gc_test.go:76)	MOVQ	AX, ""..autotmp_41+1320(SP)
	0x04c2 01218 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $0
	0x04c2 01218 (pointer_vs_value/code/gc_test.go:76)	MOVQ	CX, ""..autotmp_41+1328(SP)
	0x04ca 01226 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $1
	0x04ca 01226 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $3
	0x04ca 01226 (pointer_vs_value/code/gc_test.go:76)	MOVQ	""..autotmp_39+920(SP), AX
	0x04d2 01234 (pointer_vs_value/code/gc_test.go:76)	TESTB	AL, (AX)
	0x04d4 01236 (pointer_vs_value/code/gc_test.go:76)	JMP	1238
	0x04d6 01238 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $0
	0x04d6 01238 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $28
	0x04d6 01238 (pointer_vs_value/code/gc_test.go:76)	MOVQ	AX, fmt.a+1232(SP)
	0x04de 01246 (pointer_vs_value/code/gc_test.go:76)	MOVQ	$2, fmt.a+1240(SP)
	0x04ea 01258 (pointer_vs_value/code/gc_test.go:76)	MOVQ	$2, fmt.a+1248(SP)
	0x04f6 01270 (pointer_vs_value/code/gc_test.go:76)	MOVQ	$0, fmt.n+840(SP)
	0x0502 01282 (pointer_vs_value/code/gc_test.go:76)	XORPS	X0, X0
	0x0505 01285 (pointer_vs_value/code/gc_test.go:76)	MOVUPS	X0, fmt.err+1048(SP)
	0x050d 01293 (<unknown line number>)	NOP
	0x050d 01293 (pointer_vs_value/code/gc_test.go:76)	MOVQ	$0, fmt..autotmp_3+888(SP)
	0x0519 01305 (pointer_vs_value/code/gc_test.go:76)	XORPS	X0, X0
	0x051c 01308 (pointer_vs_value/code/gc_test.go:76)	MOVUPS	X0, fmt..autotmp_4+1080(SP)
	0x0524 01316 ($GOROOT/src/fmt/print.go:274)	XORPS	X0, X0
	0x0527 01319 ($GOROOT/src/fmt/print.go:274)	MOVUPS	X0, ""..autotmp_25+1192(SP)
	0x052f 01327 ($GOROOT/src/fmt/print.go:274)	PCDATA	$0, $1
	0x052f 01327 ($GOROOT/src/fmt/print.go:274)	MOVQ	os.Stdout(SB), AX
	0x0536 01334 ($GOROOT/src/fmt/print.go:274)	PCDATA	$0, $4
	0x0536 01334 ($GOROOT/src/fmt/print.go:274)	LEAQ	go.itab.*os.File,io.Writer(SB), CX
	0x053d 01341 ($GOROOT/src/fmt/print.go:274)	PCDATA	$0, $1
	0x053d 01341 ($GOROOT/src/fmt/print.go:274)	MOVQ	CX, (SP)
	0x0541 01345 ($GOROOT/src/fmt/print.go:274)	PCDATA	$0, $0
	0x0541 01345 ($GOROOT/src/fmt/print.go:274)	MOVQ	AX, 8(SP)
	0x0546 01350 ($GOROOT/src/fmt/print.go:274)	PCDATA	$0, $1
	0x0546 01350 ($GOROOT/src/fmt/print.go:274)	MOVQ	fmt.a+1232(SP), AX
	0x054e 01358 ($GOROOT/src/fmt/print.go:274)	MOVQ	fmt.a+1240(SP), CX
	0x0556 01366 ($GOROOT/src/fmt/print.go:274)	PCDATA	$1, $3
	0x0556 01366 ($GOROOT/src/fmt/print.go:274)	MOVQ	fmt.a+1248(SP), DX
	0x055e 01374 ($GOROOT/src/fmt/print.go:274)	PCDATA	$0, $0
	0x055e 01374 ($GOROOT/src/fmt/print.go:274)	MOVQ	AX, 16(SP)
	0x0563 01379 ($GOROOT/src/fmt/print.go:274)	MOVQ	CX, 24(SP)
	0x0568 01384 ($GOROOT/src/fmt/print.go:274)	MOVQ	DX, 32(SP)
	0x056d 01389 ($GOROOT/src/fmt/print.go:274)	CALL	fmt.Fprintln(SB)
	0x0572 01394 ($GOROOT/src/fmt/print.go:274)	MOVQ	40(SP), AX
	0x0577 01399 ($GOROOT/src/fmt/print.go:274)	MOVQ	AX, ""..autotmp_24+904(SP)
	0x057f 01407 ($GOROOT/src/fmt/print.go:274)	MOVQ	48(SP), AX
	0x0584 01412 ($GOROOT/src/fmt/print.go:274)	PCDATA	$0, $2
	0x0584 01412 ($GOROOT/src/fmt/print.go:274)	MOVQ	56(SP), CX
	0x0589 01417 ($GOROOT/src/fmt/print.go:274)	PCDATA	$1, $11
	0x0589 01417 ($GOROOT/src/fmt/print.go:274)	MOVQ	AX, ""..autotmp_25+1192(SP)
	0x0591 01425 ($GOROOT/src/fmt/print.go:274)	PCDATA	$0, $0
	0x0591 01425 ($GOROOT/src/fmt/print.go:274)	MOVQ	CX, ""..autotmp_25+1200(SP)
	0x0599 01433 ($GOROOT/src/fmt/print.go:274)	MOVQ	""..autotmp_24+904(SP), AX
	0x05a1 01441 ($GOROOT/src/fmt/print.go:274)	MOVQ	AX, fmt..autotmp_3+888(SP)
	0x05a9 01449 ($GOROOT/src/fmt/print.go:274)	MOVQ	""..autotmp_25+1192(SP), AX
	0x05b1 01457 ($GOROOT/src/fmt/print.go:274)	PCDATA	$0, $2
	0x05b1 01457 ($GOROOT/src/fmt/print.go:274)	PCDATA	$1, $3
	0x05b1 01457 ($GOROOT/src/fmt/print.go:274)	MOVQ	""..autotmp_25+1200(SP), CX
	0x05b9 01465 ($GOROOT/src/fmt/print.go:274)	PCDATA	$1, $29
	0x05b9 01465 ($GOROOT/src/fmt/print.go:274)	MOVQ	AX, fmt..autotmp_4+1080(SP)
	0x05c1 01473 ($GOROOT/src/fmt/print.go:274)	PCDATA	$0, $0
	0x05c1 01473 ($GOROOT/src/fmt/print.go:274)	MOVQ	CX, fmt..autotmp_4+1088(SP)
	0x05c9 01481 (pointer_vs_value/code/gc_test.go:76)	MOVQ	fmt..autotmp_3+888(SP), AX
	0x05d1 01489 (pointer_vs_value/code/gc_test.go:76)	MOVQ	AX, fmt.n+840(SP)
	0x05d9 01497 (pointer_vs_value/code/gc_test.go:76)	MOVQ	fmt..autotmp_4+1080(SP), AX
	0x05e1 01505 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $2
	0x05e1 01505 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $3
	0x05e1 01505 (pointer_vs_value/code/gc_test.go:76)	MOVQ	fmt..autotmp_4+1088(SP), CX
	0x05e9 01513 (pointer_vs_value/code/gc_test.go:76)	MOVQ	AX, fmt.err+1048(SP)
	0x05f1 01521 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $0
	0x05f1 01521 (pointer_vs_value/code/gc_test.go:76)	MOVQ	CX, fmt.err+1056(SP)
	0x05f9 01529 (pointer_vs_value/code/gc_test.go:76)	JMP	1531
	0x05fb 01531 (pointer_vs_value/code/gc_test.go:77)	PCDATA	$0, $1
	0x05fb 01531 (pointer_vs_value/code/gc_test.go:77)	PCDATA	$1, $30
	0x05fb 01531 (pointer_vs_value/code/gc_test.go:77)	MOVQ	"".ch+2200(SP), AX
	0x0603 01539 (pointer_vs_value/code/gc_test.go:77)	PCDATA	$0, $0
	0x0603 01539 (pointer_vs_value/code/gc_test.go:77)	MOVQ	AX, (SP)
	0x0607 01543 (pointer_vs_value/code/gc_test.go:77)	CALL	runtime.closechan(SB)
	0x060c 01548 (pointer_vs_value/code/gc_test.go:78)	MOVQ	2168(SP), BP
	0x0614 01556 (pointer_vs_value/code/gc_test.go:78)	ADDQ	$2176, SP
	0x061b 01563 (pointer_vs_value/code/gc_test.go:78)	RET
	0x061c 01564 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$0, $-2
	0x061c 01564 (pointer_vs_value/code/gc_test.go:76)	PCDATA	$1, $-2
	0x061c 01564 (pointer_vs_value/code/gc_test.go:76)	JMP	1024
	0x0621 01569 (pointer_vs_value/code/gc_test.go:80)	PCDATA	$0, $0
	0x0621 01569 (pointer_vs_value/code/gc_test.go:80)	PCDATA	$1, $1
	0x0621 01569 (pointer_vs_value/code/gc_test.go:80)	CALL	"".createTera(SB)
	0x0626 01574 (pointer_vs_value/code/gc_test.go:80)	PCDATA	$0, $6
	0x0626 01574 (pointer_vs_value/code/gc_test.go:80)	PCDATA	$1, $31
	0x0626 01574 (pointer_vs_value/code/gc_test.go:80)	LEAQ	""..autotmp_26+1336(SP), DI
	0x062e 01582 (pointer_vs_value/code/gc_test.go:80)	MOVQ	SP, SI
	0x0631 01585 (pointer_vs_value/code/gc_test.go:80)	PCDATA	$0, $0
	0x0631 01585 (pointer_vs_value/code/gc_test.go:80)	DUFFCOPY	$168
	0x0644 01604 (pointer_vs_value/code/gc_test.go:80)	PCDATA	$0, $1
	0x0644 01604 (pointer_vs_value/code/gc_test.go:80)	MOVQ	"".ch+2200(SP), AX
	0x064c 01612 (pointer_vs_value/code/gc_test.go:80)	PCDATA	$0, $0
	0x064c 01612 (pointer_vs_value/code/gc_test.go:80)	MOVQ	AX, (SP)
	0x0650 01616 (pointer_vs_value/code/gc_test.go:80)	PCDATA	$0, $1
	0x0650 01616 (pointer_vs_value/code/gc_test.go:80)	PCDATA	$1, $1
	0x0650 01616 (pointer_vs_value/code/gc_test.go:80)	LEAQ	""..autotmp_26+1336(SP), AX
	0x0658 01624 (pointer_vs_value/code/gc_test.go:80)	PCDATA	$0, $0
	0x0658 01624 (pointer_vs_value/code/gc_test.go:80)	MOVQ	AX, 8(SP)
	0x065d 01629 (pointer_vs_value/code/gc_test.go:80)	CALL	runtime.chansend1(SB)
	0x0662 01634 (pointer_vs_value/code/gc_test.go:80)	JMP	1636
	0x0664 01636 (pointer_vs_value/code/gc_test.go:74)	PCDATA	$0, $-2
	0x0664 01636 (pointer_vs_value/code/gc_test.go:74)	PCDATA	$1, $-2
	0x0664 01636 (pointer_vs_value/code/gc_test.go:74)	JMP	1638
	0x0666 01638 (pointer_vs_value/code/gc_test.go:74)	JMP	1640
	0x0668 01640 (pointer_vs_value/code/gc_test.go:74)	JMP	95
	0x066d 01645 (pointer_vs_value/code/gc_test.go:74)	NOP
	0x066d 01645 (pointer_vs_value/code/gc_test.go:70)	PCDATA	$1, $-1
	0x066d 01645 (pointer_vs_value/code/gc_test.go:70)	PCDATA	$0, $-1
	0x066d 01645 (pointer_vs_value/code/gc_test.go:70)	CALL	runtime.morestack_noctxt(SB)
	0x0672 01650 (pointer_vs_value/code/gc_test.go:70)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 84 24 00 f8 ff  eH..%....H..$...
	0x0010 ff 48 3b 41 10 0f 86 52 06 00 00 48 81 ec 80 08  .H;A...R...H....
	0x0020 00 00 48 89 ac 24 78 08 00 00 48 8d ac 24 78 08  ..H..$x...H..$x.
	0x0030 00 00 e8 00 00 00 00 48 8b 44 24 10 48 8b 4c 24  .......H.D$.H.L$
	0x0040 08 48 8b 14 24 48 89 94 24 b8 04 00 00 48 89 8c  .H..$H..$....H..
	0x0050 24 c0 04 00 00 48 89 84 24 c8 04 00 00 eb 00 eb  $....H..$.......
	0x0060 00 48 8b 84 24 88 08 00 00 84 00 48 8b 40 20 48  .H..$......H.@ H
	0x0070 8b 8c 24 90 08 00 00 48 89 0c 24 ff d0 48 8b 44  ..$....H..$..H.D
	0x0080 24 08 48 89 84 24 c0 03 00 00 48 c7 04 24 00 00  $.H..$....H..$..
	0x0090 00 00 48 89 44 24 08 e8 00 00 00 00 80 7c 24 10  ..H.D$.......|$.
	0x00a0 00 75 05 e9 79 05 00 00 e8 00 00 00 00 48 8b 04  .u..y........H..
	0x00b0 24 48 8b 4c 24 08 48 8b 54 24 10 48 89 84 24 00  $H.L$.H.T$.H..$.
	0x00c0 05 00 00 48 89 8c 24 08 05 00 00 48 89 94 24 10  ...H..$....H..$.
	0x00d0 05 00 00 48 89 04 24 48 89 4c 24 08 48 89 54 24  ...H..$H.L$.H.T$
	0x00e0 10 48 8b 84 24 b8 04 00 00 48 8b 8c 24 c0 04 00  .H..$....H..$...
	0x00f0 00 48 8b 94 24 c8 04 00 00 48 89 44 24 18 48 89  .H..$....H.D$.H.
	0x0100 4c 24 20 48 89 54 24 28 e8 00 00 00 00 48 8b 44  L$ H.T$(.....H.D
	0x0110 24 30 48 89 84 24 60 03 00 00 48 c7 84 24 40 03  $0H..$`...H..$@.
	0x0120 00 00 00 00 00 00 48 8b 84 24 60 03 00 00 48 89  ......H..$`...H.
	0x0130 c1 48 b8 db 34 b6 d7 82 de 1b 43 48 f7 e9 48 c1  .H..4.....CH..H.
	0x0140 fa 12 48 c1 f9 3f 48 29 ca 48 89 94 24 80 03 00  ..H..?H).H..$...
	0x0150 00 48 89 94 24 40 03 00 00 eb 00 48 89 94 24 58  .H..$@.....H..$X
	0x0160 03 00 00 48 89 14 24 e8 00 00 00 00 48 8b 44 24  ...H..$.....H.D$
	0x0170 08 48 89 84 24 b8 03 00 00 48 8d 0d 00 00 00 00  .H..$....H......
	0x0180 48 89 8c 24 98 04 00 00 48 89 84 24 a0 04 00 00  H..$....H..$....
	0x0190 48 8d 05 00 00 00 00 48 89 84 24 f8 03 00 00 48  H......H..$....H
	0x01a0 c7 84 24 00 04 00 00 10 00 00 00 48 8b 84 24 a0  ..$........H..$.
	0x01b0 04 00 00 48 8b 8c 24 98 04 00 00 48 89 8c 24 d8  ...H..$....H..$.
	0x01c0 03 00 00 48 89 84 24 e0 03 00 00 0f 57 c0 0f 11  ...H..$.....W...
	0x01d0 84 24 78 04 00 00 48 8d 84 24 78 04 00 00 48 89  .$x...H..$x...H.
	0x01e0 84 24 b0 03 00 00 84 00 48 8b 8c 24 d8 03 00 00  .$......H..$....
	0x01f0 48 8b 94 24 e0 03 00 00 48 89 8c 24 78 04 00 00  H..$....H..$x...
	0x0200 48 89 94 24 80 04 00 00 84 00 eb 00 48 89 84 24  H..$........H..$
	0x0210 e8 04 00 00 48 c7 84 24 f0 04 00 00 01 00 00 00  ....H..$........
	0x0220 48 c7 84 24 f8 04 00 00 01 00 00 00 48 c7 84 24  H..$........H..$
	0x0230 50 03 00 00 00 00 00 00 0f 57 c0 0f 11 84 24 08  P........W....$.
	0x0240 04 00 00 48 c7 84 24 68 03 00 00 00 00 00 00 0f  ...H..$h........
	0x0250 57 c0 0f 11 84 24 28 04 00 00 0f 57 c0 0f 11 84  W....$(....W....
	0x0260 24 a8 04 00 00 48 8b 05 00 00 00 00 48 8d 0d 00  $....H......H...
	0x0270 00 00 00 48 89 0c 24 48 89 44 24 08 48 8b 84 24  ...H..$H.D$.H..$
	0x0280 f8 03 00 00 48 8b 8c 24 00 04 00 00 48 89 44 24  ....H..$....H.D$
	0x0290 10 48 89 4c 24 18 48 8b 84 24 f8 04 00 00 48 8b  .H.L$.H..$....H.
	0x02a0 8c 24 f0 04 00 00 48 8b 94 24 e8 04 00 00 48 89  .$....H..$....H.
	0x02b0 54 24 20 48 89 4c 24 28 48 89 44 24 30 e8 00 00  T$ H.L$(H.D$0...
	0x02c0 00 00 48 8b 44 24 38 48 89 84 24 88 03 00 00 48  ..H.D$8H..$....H
	0x02d0 8b 44 24 48 48 8b 4c 24 40 48 89 8c 24 a8 04 00  .D$HH.L$@H..$...
	0x02e0 00 48 89 84 24 b0 04 00 00 48 8b 84 24 88 03 00  .H..$....H..$...
	0x02f0 00 48 89 84 24 68 03 00 00 48 8b 84 24 b0 04 00  .H..$h...H..$...
	0x0300 00 48 8b 8c 24 a8 04 00 00 48 89 8c 24 28 04 00  .H..$....H..$(..
	0x0310 00 48 89 84 24 30 04 00 00 48 8b 84 24 68 03 00  .H..$0...H..$h..
	0x0320 00 48 89 84 24 50 03 00 00 48 8b 84 24 30 04 00  .H..$P...H..$0..
	0x0330 00 48 8b 8c 24 28 04 00 00 48 89 8c 24 08 04 00  .H..$(...H..$...
	0x0340 00 48 89 84 24 10 04 00 00 eb 00 48 8b 84 24 50  .H..$......H..$P
	0x0350 03 00 00 48 89 84 24 70 03 00 00 48 89 84 24 90  ...H..$p...H..$.
	0x0360 03 00 00 48 8b 84 24 08 04 00 00 48 8b 8c 24 10  ...H..$....H..$.
	0x0370 04 00 00 48 89 84 24 88 04 00 00 48 89 8c 24 90  ...H..$....H..$.
	0x0380 04 00 00 48 8b 84 24 90 03 00 00 48 89 04 24 e8  ...H..$....H..$.
	0x0390 00 00 00 00 48 8b 44 24 08 48 89 84 24 a8 03 00  ....H.D$.H..$...
	0x03a0 00 48 8d 0d 00 00 00 00 48 89 8c 24 68 04 00 00  .H......H..$h...
	0x03b0 48 89 84 24 70 04 00 00 48 8b 84 24 88 04 00 00  H..$p...H..$....
	0x03c0 48 8b 8c 24 90 04 00 00 48 89 84 24 48 04 00 00  H..$....H..$H...
	0x03d0 48 89 8c 24 50 04 00 00 48 89 84 24 a0 03 00 00  H..$P...H..$....
	0x03e0 48 83 bc 24 a0 03 00 00 00 75 05 e9 2c 02 00 00  H..$.....u..,...
	0x03f0 84 00 48 8b 40 08 48 89 84 24 a0 03 00 00 eb 00  ..H.@.H..$......
	0x0400 48 8b 84 24 a0 03 00 00 48 8b 8c 24 50 04 00 00  H..$....H..$P...
	0x0410 48 89 84 24 58 04 00 00 48 89 8c 24 60 04 00 00  H..$X...H..$`...
	0x0420 48 8b 84 24 68 04 00 00 48 8b 8c 24 70 04 00 00  H..$h...H..$p...
	0x0430 48 89 84 24 e8 03 00 00 48 89 8c 24 f0 03 00 00  H..$....H..$....
	0x0440 48 8b 84 24 58 04 00 00 48 8b 8c 24 60 04 00 00  H..$X...H..$`...
	0x0450 48 89 84 24 c8 03 00 00 48 89 8c 24 d0 03 00 00  H..$....H..$....
	0x0460 0f 57 c0 0f 11 84 24 18 05 00 00 0f 57 c0 0f 11  .W....$.....W...
	0x0470 84 24 28 05 00 00 48 8d 84 24 18 05 00 00 48 89  .$(...H..$....H.
	0x0480 84 24 98 03 00 00 84 00 48 8b 8c 24 e8 03 00 00  .$......H..$....
	0x0490 48 8b 94 24 f0 03 00 00 48 89 8c 24 18 05 00 00  H..$....H..$....
	0x04a0 48 89 94 24 20 05 00 00 84 00 48 8b 84 24 c8 03  H..$ .....H..$..
	0x04b0 00 00 48 8b 8c 24 d0 03 00 00 48 89 84 24 28 05  ..H..$....H..$(.
	0x04c0 00 00 48 89 8c 24 30 05 00 00 48 8b 84 24 98 03  ..H..$0...H..$..
	0x04d0 00 00 84 00 eb 00 48 89 84 24 d0 04 00 00 48 c7  ......H..$....H.
	0x04e0 84 24 d8 04 00 00 02 00 00 00 48 c7 84 24 e0 04  .$........H..$..
	0x04f0 00 00 02 00 00 00 48 c7 84 24 48 03 00 00 00 00  ......H..$H.....
	0x0500 00 00 0f 57 c0 0f 11 84 24 18 04 00 00 48 c7 84  ...W....$....H..
	0x0510 24 78 03 00 00 00 00 00 00 0f 57 c0 0f 11 84 24  $x........W....$
	0x0520 38 04 00 00 0f 57 c0 0f 11 84 24 a8 04 00 00 48  8....W....$....H
	0x0530 8b 05 00 00 00 00 48 8d 0d 00 00 00 00 48 89 0c  ......H......H..
	0x0540 24 48 89 44 24 08 48 8b 84 24 d0 04 00 00 48 8b  $H.D$.H..$....H.
	0x0550 8c 24 d8 04 00 00 48 8b 94 24 e0 04 00 00 48 89  .$....H..$....H.
	0x0560 44 24 10 48 89 4c 24 18 48 89 54 24 20 e8 00 00  D$.H.L$.H.T$ ...
	0x0570 00 00 48 8b 44 24 28 48 89 84 24 88 03 00 00 48  ..H.D$(H..$....H
	0x0580 8b 44 24 30 48 8b 4c 24 38 48 89 84 24 a8 04 00  .D$0H.L$8H..$...
	0x0590 00 48 89 8c 24 b0 04 00 00 48 8b 84 24 88 03 00  .H..$....H..$...
	0x05a0 00 48 89 84 24 78 03 00 00 48 8b 84 24 a8 04 00  .H..$x...H..$...
	0x05b0 00 48 8b 8c 24 b0 04 00 00 48 89 84 24 38 04 00  .H..$....H..$8..
	0x05c0 00 48 89 8c 24 40 04 00 00 48 8b 84 24 78 03 00  .H..$@...H..$x..
	0x05d0 00 48 89 84 24 48 03 00 00 48 8b 84 24 38 04 00  .H..$H...H..$8..
	0x05e0 00 48 8b 8c 24 40 04 00 00 48 89 84 24 18 04 00  .H..$@...H..$...
	0x05f0 00 48 89 8c 24 20 04 00 00 eb 00 48 8b 84 24 98  .H..$ .....H..$.
	0x0600 08 00 00 48 89 04 24 e8 00 00 00 00 48 8b ac 24  ...H..$.....H..$
	0x0610 78 08 00 00 48 81 c4 80 08 00 00 c3 e9 df fd ff  x...H...........
	0x0620 ff e8 00 00 00 00 48 8d bc 24 38 05 00 00 48 89  ......H..$8...H.
	0x0630 e6 48 89 6c 24 f0 48 8d 6c 24 f0 e8 00 00 00 00  .H.l$.H.l$......
	0x0640 48 8b 6d 00 48 8b 84 24 98 08 00 00 48 89 04 24  H.m.H..$....H..$
	0x0650 48 8d 84 24 38 05 00 00 48 89 44 24 08 e8 00 00  H..$8...H.D$....
	0x0660 00 00 eb 00 eb 00 eb 00 e9 f2 f9 ff ff e8 00 00  ................
	0x0670 00 00 e9 89 f9 ff ff                             .......
	rel 5+4 t=16 TLS+0
	rel 51+4 t=8 time.Now+0
	rel 123+0 t=11 +0
	rel 152+4 t=8 runtime.selectnbrecv+0
	rel 169+4 t=8 time.Now+0
	rel 265+4 t=8 time.Time.Sub+0
	rel 360+4 t=8 runtime.convT64+0
	rel 380+4 t=15 type.int64+0
	rel 403+4 t=15 go.string."Time passed [%v]"+0
	rel 616+4 t=15 os.Stdout+0
	rel 623+4 t=15 go.itab.*os.File,io.Writer+0
	rel 702+4 t=8 fmt.Fprintf+0
	rel 912+4 t=8 runtime.convT64+0
	rel 932+4 t=15 type.int+0
	rel 1330+4 t=15 os.Stdout+0
	rel 1337+4 t=15 go.itab.*os.File,io.Writer+0
	rel 1390+4 t=8 fmt.Fprintln+0
	rel 1544+4 t=8 runtime.closechan+0
	rel 1570+4 t=8 "".createTera+0
	rel 1596+4 t=8 runtime.duffcopy+168
	rel 1630+4 t=8 runtime.chansend1+0
	rel 1646+4 t=8 runtime.morestack_noctxt+0
"".runNative.func1 STEXT size=142 args=0x8 locals=0x30
	0x0000 00000 (pointer_vs_value/code/gc_test.go:102)	TEXT	"".runNative.func1(SB), ABIInternal, $48-8
	0x0000 00000 (pointer_vs_value/code/gc_test.go:102)	MOVQ	(TLS), CX
	0x0009 00009 (pointer_vs_value/code/gc_test.go:102)	CMPQ	SP, 16(CX)
	0x000d 00013 (pointer_vs_value/code/gc_test.go:102)	JLS	132
	0x000f 00015 (pointer_vs_value/code/gc_test.go:102)	SUBQ	$48, SP
	0x0013 00019 (pointer_vs_value/code/gc_test.go:102)	MOVQ	BP, 40(SP)
	0x0018 00024 (pointer_vs_value/code/gc_test.go:102)	LEAQ	40(SP), BP
	0x001d 00029 (pointer_vs_value/code/gc_test.go:102)	FUNCDATA	$0, gclocals·c7c4fc7b12f6707ea74acf7400192967(SB)
	0x001d 00029 (pointer_vs_value/code/gc_test.go:102)	FUNCDATA	$1, gclocals·87f6052ef51eed84352c5a7cd7c29d63(SB)
	0x001d 00029 (pointer_vs_value/code/gc_test.go:102)	FUNCDATA	$2, gclocals·f921db378992a411b04a03b038505262(SB)
	0x001d 00029 (pointer_vs_value/code/gc_test.go:103)	PCDATA	$0, $0
	0x001d 00029 (pointer_vs_value/code/gc_test.go:103)	PCDATA	$1, $0
	0x001d 00029 (pointer_vs_value/code/gc_test.go:103)	MOVQ	$100000000000, AX
	0x0027 00039 (pointer_vs_value/code/gc_test.go:103)	MOVQ	AX, time.d+16(SP)
	0x002c 00044 (pointer_vs_value/code/gc_test.go:103)	MOVQ	$0, "".~R0+24(SP)
	0x0035 00053 (<unknown line number>)	NOP
	0x0035 00053 ($GOROOT/src/time/sleep.go:149)	MOVQ	time.d+16(SP), AX
	0x003a 00058 ($GOROOT/src/time/sleep.go:149)	MOVQ	AX, (SP)
	0x003e 00062 ($GOROOT/src/time/sleep.go:149)	CALL	time.NewTimer(SB)
	0x0043 00067 ($GOROOT/src/time/sleep.go:149)	PCDATA	$0, $1
	0x0043 00067 ($GOROOT/src/time/sleep.go:149)	MOVQ	8(SP), AX
	0x0048 00072 ($GOROOT/src/time/sleep.go:149)	MOVQ	AX, ""..autotmp_3+32(SP)
	0x004d 00077 ($GOROOT/src/time/sleep.go:149)	TESTB	AL, (AX)
	0x004f 00079 ($GOROOT/src/time/sleep.go:149)	MOVQ	(AX), AX
	0x0052 00082 (pointer_vs_value/code/gc_test.go:103)	PCDATA	$0, $0
	0x0052 00082 (pointer_vs_value/code/gc_test.go:103)	PCDATA	$1, $1
	0x0052 00082 (pointer_vs_value/code/gc_test.go:103)	MOVQ	AX, "".~R0+24(SP)
	0x0057 00087 (pointer_vs_value/code/gc_test.go:103)	JMP	89
	0x0059 00089 (pointer_vs_value/code/gc_test.go:103)	PCDATA	$0, $1
	0x0059 00089 (pointer_vs_value/code/gc_test.go:103)	PCDATA	$1, $0
	0x0059 00089 (pointer_vs_value/code/gc_test.go:103)	MOVQ	"".~R0+24(SP), AX
	0x005e 00094 (pointer_vs_value/code/gc_test.go:103)	PCDATA	$0, $0
	0x005e 00094 (pointer_vs_value/code/gc_test.go:103)	MOVQ	AX, (SP)
	0x0062 00098 (pointer_vs_value/code/gc_test.go:103)	MOVQ	$0, 8(SP)
	0x006b 00107 (pointer_vs_value/code/gc_test.go:103)	CALL	runtime.chanrecv1(SB)
	0x0070 00112 (pointer_vs_value/code/gc_test.go:104)	PCDATA	$0, $2
	0x0070 00112 (pointer_vs_value/code/gc_test.go:104)	PCDATA	$1, $2
	0x0070 00112 (pointer_vs_value/code/gc_test.go:104)	MOVQ	"".cnl+56(SP), DX
	0x0075 00117 (pointer_vs_value/code/gc_test.go:104)	MOVQ	(DX), AX
	0x0078 00120 (pointer_vs_value/code/gc_test.go:104)	PCDATA	$0, $0
	0x0078 00120 (pointer_vs_value/code/gc_test.go:104)	CALL	AX
	0x007a 00122 (pointer_vs_value/code/gc_test.go:105)	MOVQ	40(SP), BP
	0x007f 00127 (pointer_vs_value/code/gc_test.go:105)	ADDQ	$48, SP
	0x0083 00131 (pointer_vs_value/code/gc_test.go:105)	RET
	0x0084 00132 (pointer_vs_value/code/gc_test.go:105)	NOP
	0x0084 00132 (pointer_vs_value/code/gc_test.go:102)	PCDATA	$1, $-1
	0x0084 00132 (pointer_vs_value/code/gc_test.go:102)	PCDATA	$0, $-1
	0x0084 00132 (pointer_vs_value/code/gc_test.go:102)	CALL	runtime.morestack_noctxt(SB)
	0x0089 00137 (pointer_vs_value/code/gc_test.go:102)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 76 75 48  eH..%....H;a.vuH
	0x0010 83 ec 30 48 89 6c 24 28 48 8d 6c 24 28 48 b8 00  ..0H.l$(H.l$(H..
	0x0020 e8 76 48 17 00 00 00 48 89 44 24 10 48 c7 44 24  .vH....H.D$.H.D$
	0x0030 18 00 00 00 00 48 8b 44 24 10 48 89 04 24 e8 00  .....H.D$.H..$..
	0x0040 00 00 00 48 8b 44 24 08 48 89 44 24 20 84 00 48  ...H.D$.H.D$ ..H
	0x0050 8b 00 48 89 44 24 18 eb 00 48 8b 44 24 18 48 89  ..H.D$...H.D$.H.
	0x0060 04 24 48 c7 44 24 08 00 00 00 00 e8 00 00 00 00  .$H.D$..........
	0x0070 48 8b 54 24 38 48 8b 02 ff d0 48 8b 6c 24 28 48  H.T$8H....H.l$(H
	0x0080 83 c4 30 c3 e8 00 00 00 00 e9 72 ff ff ff        ..0.......r...
	rel 5+4 t=16 TLS+0
	rel 63+4 t=8 time.NewTimer+0
	rel 108+4 t=8 runtime.chanrecv1+0
	rel 120+0 t=11 +0
	rel 133+4 t=8 runtime.morestack_noctxt+0
type..hash."".giga STEXT dupok size=1599 args=0x18 locals=0x100
	0x0000 00000 (<autogenerated>:1)	TEXT	type..hash."".giga(SB), DUPOK|ABIInternal, $256-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	LEAQ	-128(SP), AX
	0x000e 00014 (<autogenerated>:1)	CMPQ	AX, 16(CX)
	0x0012 00018 (<autogenerated>:1)	JLS	1589
	0x0018 00024 (<autogenerated>:1)	SUBQ	$256, SP
	0x001f 00031 (<autogenerated>:1)	MOVQ	BP, 248(SP)
	0x0027 00039 (<autogenerated>:1)	LEAQ	248(SP), BP
	0x002f 00047 (<autogenerated>:1)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x002f 00047 (<autogenerated>:1)	FUNCDATA	$1, gclocals·e8abba548424d9cccb7d8d7be27735c9(SB)
	0x002f 00047 (<autogenerated>:1)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x002f 00047 (<autogenerated>:1)	PCDATA	$0, $0
	0x002f 00047 (<autogenerated>:1)	PCDATA	$1, $0
	0x002f 00047 (<autogenerated>:1)	MOVQ	$0, "".~r2+280(SP)
	0x003b 00059 (<autogenerated>:1)	PCDATA	$0, $1
	0x003b 00059 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x0043 00067 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_3+80(SP)
	0x0048 00072 (<autogenerated>:1)	PCDATA	$0, $0
	0x0048 00072 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x004c 00076 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x0054 00084 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0059 00089 (<autogenerated>:1)	MOVQ	$208, 16(SP)
	0x0062 00098 (<autogenerated>:1)	CALL	runtime.memhash(SB)
	0x0067 00103 (<autogenerated>:1)	MOVQ	24(SP), AX
	0x006c 00108 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x0074 00116 (<autogenerated>:1)	PCDATA	$0, $1
	0x0074 00116 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x007c 00124 (<autogenerated>:1)	ADDQ	$208, AX
	0x0082 00130 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_4+72(SP)
	0x0087 00135 (<autogenerated>:1)	PCDATA	$0, $0
	0x0087 00135 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x008b 00139 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x0093 00147 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0098 00152 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x009d 00157 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x00a2 00162 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x00aa 00170 (<autogenerated>:1)	PCDATA	$0, $1
	0x00aa 00170 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x00b2 00178 (<autogenerated>:1)	ADDQ	$216, AX
	0x00b8 00184 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_5+64(SP)
	0x00bd 00189 (<autogenerated>:1)	PCDATA	$0, $0
	0x00bd 00189 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x00c1 00193 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x00c9 00201 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x00ce 00206 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x00d3 00211 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x00d8 00216 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x00e0 00224 (<autogenerated>:1)	PCDATA	$0, $1
	0x00e0 00224 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x00e8 00232 (<autogenerated>:1)	ADDQ	$224, AX
	0x00ee 00238 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_6+56(SP)
	0x00f3 00243 (<autogenerated>:1)	PCDATA	$0, $0
	0x00f3 00243 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x00f7 00247 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x00ff 00255 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0104 00260 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x0109 00265 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x010e 00270 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x0116 00278 (<autogenerated>:1)	PCDATA	$0, $1
	0x0116 00278 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x011e 00286 (<autogenerated>:1)	ADDQ	$232, AX
	0x0124 00292 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_7+48(SP)
	0x0129 00297 (<autogenerated>:1)	PCDATA	$0, $0
	0x0129 00297 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x012d 00301 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x0135 00309 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x013a 00314 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x013f 00319 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0144 00324 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x014c 00332 (<autogenerated>:1)	PCDATA	$0, $1
	0x014c 00332 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x0154 00340 (<autogenerated>:1)	ADDQ	$240, AX
	0x015a 00346 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_8+40(SP)
	0x015f 00351 (<autogenerated>:1)	PCDATA	$0, $0
	0x015f 00351 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0163 00355 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x016b 00363 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0170 00368 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x0175 00373 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x017a 00378 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x0182 00386 (<autogenerated>:1)	PCDATA	$0, $1
	0x0182 00386 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x018a 00394 (<autogenerated>:1)	ADDQ	$248, AX
	0x0190 00400 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_9+32(SP)
	0x0195 00405 (<autogenerated>:1)	PCDATA	$0, $0
	0x0195 00405 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0199 00409 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x01a1 00417 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x01a6 00422 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x01ab 00427 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x01b0 00432 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x01b8 00440 (<autogenerated>:1)	PCDATA	$0, $1
	0x01b8 00440 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x01c0 00448 (<autogenerated>:1)	ADDQ	$256, AX
	0x01c6 00454 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_10+240(SP)
	0x01ce 00462 (<autogenerated>:1)	PCDATA	$0, $0
	0x01ce 00462 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x01d2 00466 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x01da 00474 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x01df 00479 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x01e4 00484 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x01e9 00489 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x01f1 00497 (<autogenerated>:1)	PCDATA	$0, $1
	0x01f1 00497 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x01f9 00505 (<autogenerated>:1)	ADDQ	$264, AX
	0x01ff 00511 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_11+232(SP)
	0x0207 00519 (<autogenerated>:1)	PCDATA	$0, $0
	0x0207 00519 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x020b 00523 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x0213 00531 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0218 00536 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x021d 00541 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0222 00546 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x022a 00554 (<autogenerated>:1)	PCDATA	$0, $1
	0x022a 00554 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x0232 00562 (<autogenerated>:1)	ADDQ	$272, AX
	0x0238 00568 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_12+224(SP)
	0x0240 00576 (<autogenerated>:1)	PCDATA	$0, $0
	0x0240 00576 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0244 00580 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x024c 00588 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0251 00593 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x0256 00598 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x025b 00603 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x0263 00611 (<autogenerated>:1)	PCDATA	$0, $1
	0x0263 00611 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x026b 00619 (<autogenerated>:1)	ADDQ	$280, AX
	0x0271 00625 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_13+216(SP)
	0x0279 00633 (<autogenerated>:1)	PCDATA	$0, $0
	0x0279 00633 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x027d 00637 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x0285 00645 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x028a 00650 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x028f 00655 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0294 00660 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x029c 00668 (<autogenerated>:1)	PCDATA	$0, $1
	0x029c 00668 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x02a4 00676 (<autogenerated>:1)	ADDQ	$288, AX
	0x02aa 00682 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_14+208(SP)
	0x02b2 00690 (<autogenerated>:1)	PCDATA	$0, $0
	0x02b2 00690 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x02b6 00694 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x02be 00702 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x02c3 00707 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x02c8 00712 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x02cd 00717 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x02d5 00725 (<autogenerated>:1)	PCDATA	$0, $1
	0x02d5 00725 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x02dd 00733 (<autogenerated>:1)	ADDQ	$296, AX
	0x02e3 00739 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_15+200(SP)
	0x02eb 00747 (<autogenerated>:1)	PCDATA	$0, $0
	0x02eb 00747 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x02ef 00751 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x02f7 00759 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x02fc 00764 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x0301 00769 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0306 00774 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x030e 00782 (<autogenerated>:1)	PCDATA	$0, $1
	0x030e 00782 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x0316 00790 (<autogenerated>:1)	ADDQ	$304, AX
	0x031c 00796 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_16+192(SP)
	0x0324 00804 (<autogenerated>:1)	PCDATA	$0, $0
	0x0324 00804 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0328 00808 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x0330 00816 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0335 00821 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x033a 00826 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x033f 00831 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x0347 00839 (<autogenerated>:1)	PCDATA	$0, $1
	0x0347 00839 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x034f 00847 (<autogenerated>:1)	ADDQ	$312, AX
	0x0355 00853 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_17+184(SP)
	0x035d 00861 (<autogenerated>:1)	PCDATA	$0, $0
	0x035d 00861 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0361 00865 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x0369 00873 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x036e 00878 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x0373 00883 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0378 00888 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x0380 00896 (<autogenerated>:1)	PCDATA	$0, $1
	0x0380 00896 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x0388 00904 (<autogenerated>:1)	ADDQ	$320, AX
	0x038e 00910 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_18+176(SP)
	0x0396 00918 (<autogenerated>:1)	PCDATA	$0, $0
	0x0396 00918 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x039a 00922 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x03a2 00930 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x03a7 00935 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x03ac 00940 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x03b1 00945 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x03b9 00953 (<autogenerated>:1)	PCDATA	$0, $1
	0x03b9 00953 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x03c1 00961 (<autogenerated>:1)	ADDQ	$328, AX
	0x03c7 00967 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_19+168(SP)
	0x03cf 00975 (<autogenerated>:1)	PCDATA	$0, $0
	0x03cf 00975 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x03d3 00979 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x03db 00987 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x03e0 00992 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x03e5 00997 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x03ea 01002 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x03f2 01010 (<autogenerated>:1)	PCDATA	$0, $1
	0x03f2 01010 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x03fa 01018 (<autogenerated>:1)	ADDQ	$336, AX
	0x0400 01024 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_20+160(SP)
	0x0408 01032 (<autogenerated>:1)	PCDATA	$0, $0
	0x0408 01032 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x040c 01036 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x0414 01044 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0419 01049 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x041e 01054 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0423 01059 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x042b 01067 (<autogenerated>:1)	PCDATA	$0, $1
	0x042b 01067 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x0433 01075 (<autogenerated>:1)	ADDQ	$344, AX
	0x0439 01081 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_21+152(SP)
	0x0441 01089 (<autogenerated>:1)	PCDATA	$0, $0
	0x0441 01089 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0445 01093 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x044d 01101 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0452 01106 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x0457 01111 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x045c 01116 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x0464 01124 (<autogenerated>:1)	PCDATA	$0, $1
	0x0464 01124 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x046c 01132 (<autogenerated>:1)	ADDQ	$352, AX
	0x0472 01138 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_22+144(SP)
	0x047a 01146 (<autogenerated>:1)	PCDATA	$0, $0
	0x047a 01146 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x047e 01150 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x0486 01158 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x048b 01163 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x0490 01168 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0495 01173 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x049d 01181 (<autogenerated>:1)	PCDATA	$0, $1
	0x049d 01181 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x04a5 01189 (<autogenerated>:1)	ADDQ	$360, AX
	0x04ab 01195 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_23+136(SP)
	0x04b3 01203 (<autogenerated>:1)	PCDATA	$0, $0
	0x04b3 01203 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x04b7 01207 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x04bf 01215 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x04c4 01220 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x04c9 01225 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x04ce 01230 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x04d6 01238 (<autogenerated>:1)	PCDATA	$0, $1
	0x04d6 01238 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x04de 01246 (<autogenerated>:1)	ADDQ	$368, AX
	0x04e4 01252 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_24+128(SP)
	0x04ec 01260 (<autogenerated>:1)	PCDATA	$0, $0
	0x04ec 01260 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x04f0 01264 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x04f8 01272 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x04fd 01277 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x0502 01282 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0507 01287 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x050f 01295 (<autogenerated>:1)	PCDATA	$0, $1
	0x050f 01295 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x0517 01303 (<autogenerated>:1)	ADDQ	$376, AX
	0x051d 01309 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_25+120(SP)
	0x0522 01314 (<autogenerated>:1)	PCDATA	$0, $0
	0x0522 01314 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0526 01318 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x052e 01326 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0533 01331 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x0538 01336 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x053d 01341 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x0545 01349 (<autogenerated>:1)	PCDATA	$0, $1
	0x0545 01349 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x054d 01357 (<autogenerated>:1)	ADDQ	$384, AX
	0x0553 01363 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_26+112(SP)
	0x0558 01368 (<autogenerated>:1)	PCDATA	$0, $0
	0x0558 01368 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x055c 01372 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x0564 01380 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0569 01385 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x056e 01390 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0573 01395 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x057b 01403 (<autogenerated>:1)	PCDATA	$0, $1
	0x057b 01403 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x0583 01411 (<autogenerated>:1)	ADDQ	$392, AX
	0x0589 01417 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_27+104(SP)
	0x058e 01422 (<autogenerated>:1)	PCDATA	$0, $0
	0x058e 01422 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0592 01426 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x059a 01434 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x059f 01439 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x05a4 01444 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x05a9 01449 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x05b1 01457 (<autogenerated>:1)	PCDATA	$0, $1
	0x05b1 01457 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x05b9 01465 (<autogenerated>:1)	ADDQ	$400, AX
	0x05bf 01471 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_28+96(SP)
	0x05c4 01476 (<autogenerated>:1)	PCDATA	$0, $0
	0x05c4 01476 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x05c8 01480 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x05d0 01488 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x05d5 01493 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x05da 01498 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x05df 01503 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x05e7 01511 (<autogenerated>:1)	PCDATA	$0, $1
	0x05e7 01511 (<autogenerated>:1)	PCDATA	$1, $1
	0x05e7 01511 (<autogenerated>:1)	MOVQ	"".p+264(SP), AX
	0x05ef 01519 (<autogenerated>:1)	ADDQ	$408, AX
	0x05f5 01525 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_29+88(SP)
	0x05fa 01530 (<autogenerated>:1)	PCDATA	$0, $0
	0x05fa 01530 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x05fe 01534 (<autogenerated>:1)	MOVQ	"".h+272(SP), AX
	0x0606 01542 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x060b 01547 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x0610 01552 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0615 01557 (<autogenerated>:1)	MOVQ	AX, "".h+272(SP)
	0x061d 01565 (<autogenerated>:1)	MOVQ	AX, "".~r2+280(SP)
	0x0625 01573 (<autogenerated>:1)	MOVQ	248(SP), BP
	0x062d 01581 (<autogenerated>:1)	ADDQ	$256, SP
	0x0634 01588 (<autogenerated>:1)	RET
	0x0635 01589 (<autogenerated>:1)	NOP
	0x0635 01589 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0635 01589 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0635 01589 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x063a 01594 (<autogenerated>:1)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 8d 44 24 80 48 3b  eH..%....H.D$.H;
	0x0010 41 10 0f 86 1d 06 00 00 48 81 ec 00 01 00 00 48  A.......H......H
	0x0020 89 ac 24 f8 00 00 00 48 8d ac 24 f8 00 00 00 48  ..$....H..$....H
	0x0030 c7 84 24 18 01 00 00 00 00 00 00 48 8b 84 24 08  ..$........H..$.
	0x0040 01 00 00 48 89 44 24 50 48 89 04 24 48 8b 84 24  ...H.D$PH..$H..$
	0x0050 10 01 00 00 48 89 44 24 08 48 c7 44 24 10 d0 00  ....H.D$.H.D$...
	0x0060 00 00 e8 00 00 00 00 48 8b 44 24 18 48 89 84 24  .......H.D$.H..$
	0x0070 10 01 00 00 48 8b 84 24 08 01 00 00 48 05 d0 00  ....H..$....H...
	0x0080 00 00 48 89 44 24 48 48 89 04 24 48 8b 84 24 10  ..H.D$HH..$H..$.
	0x0090 01 00 00 48 89 44 24 08 e8 00 00 00 00 48 8b 44  ...H.D$......H.D
	0x00a0 24 10 48 89 84 24 10 01 00 00 48 8b 84 24 08 01  $.H..$....H..$..
	0x00b0 00 00 48 05 d8 00 00 00 48 89 44 24 40 48 89 04  ..H.....H.D$@H..
	0x00c0 24 48 8b 84 24 10 01 00 00 48 89 44 24 08 e8 00  $H..$....H.D$...
	0x00d0 00 00 00 48 8b 44 24 10 48 89 84 24 10 01 00 00  ...H.D$.H..$....
	0x00e0 48 8b 84 24 08 01 00 00 48 05 e0 00 00 00 48 89  H..$....H.....H.
	0x00f0 44 24 38 48 89 04 24 48 8b 84 24 10 01 00 00 48  D$8H..$H..$....H
	0x0100 89 44 24 08 e8 00 00 00 00 48 8b 44 24 10 48 89  .D$......H.D$.H.
	0x0110 84 24 10 01 00 00 48 8b 84 24 08 01 00 00 48 05  .$....H..$....H.
	0x0120 e8 00 00 00 48 89 44 24 30 48 89 04 24 48 8b 84  ....H.D$0H..$H..
	0x0130 24 10 01 00 00 48 89 44 24 08 e8 00 00 00 00 48  $....H.D$......H
	0x0140 8b 44 24 10 48 89 84 24 10 01 00 00 48 8b 84 24  .D$.H..$....H..$
	0x0150 08 01 00 00 48 05 f0 00 00 00 48 89 44 24 28 48  ....H.....H.D$(H
	0x0160 89 04 24 48 8b 84 24 10 01 00 00 48 89 44 24 08  ..$H..$....H.D$.
	0x0170 e8 00 00 00 00 48 8b 44 24 10 48 89 84 24 10 01  .....H.D$.H..$..
	0x0180 00 00 48 8b 84 24 08 01 00 00 48 05 f8 00 00 00  ..H..$....H.....
	0x0190 48 89 44 24 20 48 89 04 24 48 8b 84 24 10 01 00  H.D$ H..$H..$...
	0x01a0 00 48 89 44 24 08 e8 00 00 00 00 48 8b 44 24 10  .H.D$......H.D$.
	0x01b0 48 89 84 24 10 01 00 00 48 8b 84 24 08 01 00 00  H..$....H..$....
	0x01c0 48 05 00 01 00 00 48 89 84 24 f0 00 00 00 48 89  H.....H..$....H.
	0x01d0 04 24 48 8b 84 24 10 01 00 00 48 89 44 24 08 e8  .$H..$....H.D$..
	0x01e0 00 00 00 00 48 8b 44 24 10 48 89 84 24 10 01 00  ....H.D$.H..$...
	0x01f0 00 48 8b 84 24 08 01 00 00 48 05 08 01 00 00 48  .H..$....H.....H
	0x0200 89 84 24 e8 00 00 00 48 89 04 24 48 8b 84 24 10  ..$....H..$H..$.
	0x0210 01 00 00 48 89 44 24 08 e8 00 00 00 00 48 8b 44  ...H.D$......H.D
	0x0220 24 10 48 89 84 24 10 01 00 00 48 8b 84 24 08 01  $.H..$....H..$..
	0x0230 00 00 48 05 10 01 00 00 48 89 84 24 e0 00 00 00  ..H.....H..$....
	0x0240 48 89 04 24 48 8b 84 24 10 01 00 00 48 89 44 24  H..$H..$....H.D$
	0x0250 08 e8 00 00 00 00 48 8b 44 24 10 48 89 84 24 10  ......H.D$.H..$.
	0x0260 01 00 00 48 8b 84 24 08 01 00 00 48 05 18 01 00  ...H..$....H....
	0x0270 00 48 89 84 24 d8 00 00 00 48 89 04 24 48 8b 84  .H..$....H..$H..
	0x0280 24 10 01 00 00 48 89 44 24 08 e8 00 00 00 00 48  $....H.D$......H
	0x0290 8b 44 24 10 48 89 84 24 10 01 00 00 48 8b 84 24  .D$.H..$....H..$
	0x02a0 08 01 00 00 48 05 20 01 00 00 48 89 84 24 d0 00  ....H. ...H..$..
	0x02b0 00 00 48 89 04 24 48 8b 84 24 10 01 00 00 48 89  ..H..$H..$....H.
	0x02c0 44 24 08 e8 00 00 00 00 48 8b 44 24 10 48 89 84  D$......H.D$.H..
	0x02d0 24 10 01 00 00 48 8b 84 24 08 01 00 00 48 05 28  $....H..$....H.(
	0x02e0 01 00 00 48 89 84 24 c8 00 00 00 48 89 04 24 48  ...H..$....H..$H
	0x02f0 8b 84 24 10 01 00 00 48 89 44 24 08 e8 00 00 00  ..$....H.D$.....
	0x0300 00 48 8b 44 24 10 48 89 84 24 10 01 00 00 48 8b  .H.D$.H..$....H.
	0x0310 84 24 08 01 00 00 48 05 30 01 00 00 48 89 84 24  .$....H.0...H..$
	0x0320 c0 00 00 00 48 89 04 24 48 8b 84 24 10 01 00 00  ....H..$H..$....
	0x0330 48 89 44 24 08 e8 00 00 00 00 48 8b 44 24 10 48  H.D$......H.D$.H
	0x0340 89 84 24 10 01 00 00 48 8b 84 24 08 01 00 00 48  ..$....H..$....H
	0x0350 05 38 01 00 00 48 89 84 24 b8 00 00 00 48 89 04  .8...H..$....H..
	0x0360 24 48 8b 84 24 10 01 00 00 48 89 44 24 08 e8 00  $H..$....H.D$...
	0x0370 00 00 00 48 8b 44 24 10 48 89 84 24 10 01 00 00  ...H.D$.H..$....
	0x0380 48 8b 84 24 08 01 00 00 48 05 40 01 00 00 48 89  H..$....H.@...H.
	0x0390 84 24 b0 00 00 00 48 89 04 24 48 8b 84 24 10 01  .$....H..$H..$..
	0x03a0 00 00 48 89 44 24 08 e8 00 00 00 00 48 8b 44 24  ..H.D$......H.D$
	0x03b0 10 48 89 84 24 10 01 00 00 48 8b 84 24 08 01 00  .H..$....H..$...
	0x03c0 00 48 05 48 01 00 00 48 89 84 24 a8 00 00 00 48  .H.H...H..$....H
	0x03d0 89 04 24 48 8b 84 24 10 01 00 00 48 89 44 24 08  ..$H..$....H.D$.
	0x03e0 e8 00 00 00 00 48 8b 44 24 10 48 89 84 24 10 01  .....H.D$.H..$..
	0x03f0 00 00 48 8b 84 24 08 01 00 00 48 05 50 01 00 00  ..H..$....H.P...
	0x0400 48 89 84 24 a0 00 00 00 48 89 04 24 48 8b 84 24  H..$....H..$H..$
	0x0410 10 01 00 00 48 89 44 24 08 e8 00 00 00 00 48 8b  ....H.D$......H.
	0x0420 44 24 10 48 89 84 24 10 01 00 00 48 8b 84 24 08  D$.H..$....H..$.
	0x0430 01 00 00 48 05 58 01 00 00 48 89 84 24 98 00 00  ...H.X...H..$...
	0x0440 00 48 89 04 24 48 8b 84 24 10 01 00 00 48 89 44  .H..$H..$....H.D
	0x0450 24 08 e8 00 00 00 00 48 8b 44 24 10 48 89 84 24  $......H.D$.H..$
	0x0460 10 01 00 00 48 8b 84 24 08 01 00 00 48 05 60 01  ....H..$....H.`.
	0x0470 00 00 48 89 84 24 90 00 00 00 48 89 04 24 48 8b  ..H..$....H..$H.
	0x0480 84 24 10 01 00 00 48 89 44 24 08 e8 00 00 00 00  .$....H.D$......
	0x0490 48 8b 44 24 10 48 89 84 24 10 01 00 00 48 8b 84  H.D$.H..$....H..
	0x04a0 24 08 01 00 00 48 05 68 01 00 00 48 89 84 24 88  $....H.h...H..$.
	0x04b0 00 00 00 48 89 04 24 48 8b 84 24 10 01 00 00 48  ...H..$H..$....H
	0x04c0 89 44 24 08 e8 00 00 00 00 48 8b 44 24 10 48 89  .D$......H.D$.H.
	0x04d0 84 24 10 01 00 00 48 8b 84 24 08 01 00 00 48 05  .$....H..$....H.
	0x04e0 70 01 00 00 48 89 84 24 80 00 00 00 48 89 04 24  p...H..$....H..$
	0x04f0 48 8b 84 24 10 01 00 00 48 89 44 24 08 e8 00 00  H..$....H.D$....
	0x0500 00 00 48 8b 44 24 10 48 89 84 24 10 01 00 00 48  ..H.D$.H..$....H
	0x0510 8b 84 24 08 01 00 00 48 05 78 01 00 00 48 89 44  ..$....H.x...H.D
	0x0520 24 78 48 89 04 24 48 8b 84 24 10 01 00 00 48 89  $xH..$H..$....H.
	0x0530 44 24 08 e8 00 00 00 00 48 8b 44 24 10 48 89 84  D$......H.D$.H..
	0x0540 24 10 01 00 00 48 8b 84 24 08 01 00 00 48 05 80  $....H..$....H..
	0x0550 01 00 00 48 89 44 24 70 48 89 04 24 48 8b 84 24  ...H.D$pH..$H..$
	0x0560 10 01 00 00 48 89 44 24 08 e8 00 00 00 00 48 8b  ....H.D$......H.
	0x0570 44 24 10 48 89 84 24 10 01 00 00 48 8b 84 24 08  D$.H..$....H..$.
	0x0580 01 00 00 48 05 88 01 00 00 48 89 44 24 68 48 89  ...H.....H.D$hH.
	0x0590 04 24 48 8b 84 24 10 01 00 00 48 89 44 24 08 e8  .$H..$....H.D$..
	0x05a0 00 00 00 00 48 8b 44 24 10 48 89 84 24 10 01 00  ....H.D$.H..$...
	0x05b0 00 48 8b 84 24 08 01 00 00 48 05 90 01 00 00 48  .H..$....H.....H
	0x05c0 89 44 24 60 48 89 04 24 48 8b 84 24 10 01 00 00  .D$`H..$H..$....
	0x05d0 48 89 44 24 08 e8 00 00 00 00 48 8b 44 24 10 48  H.D$......H.D$.H
	0x05e0 89 84 24 10 01 00 00 48 8b 84 24 08 01 00 00 48  ..$....H..$....H
	0x05f0 05 98 01 00 00 48 89 44 24 58 48 89 04 24 48 8b  .....H.D$XH..$H.
	0x0600 84 24 10 01 00 00 48 89 44 24 08 e8 00 00 00 00  .$....H.D$......
	0x0610 48 8b 44 24 10 48 89 84 24 10 01 00 00 48 89 84  H.D$.H..$....H..
	0x0620 24 18 01 00 00 48 8b ac 24 f8 00 00 00 48 81 c4  $....H..$....H..
	0x0630 00 01 00 00 c3 e8 00 00 00 00 e9 c1 f9 ff ff     ...............
	rel 5+4 t=16 TLS+0
	rel 99+4 t=8 runtime.memhash+0
	rel 153+4 t=8 runtime.f64hash+0
	rel 207+4 t=8 runtime.f64hash+0
	rel 261+4 t=8 runtime.f64hash+0
	rel 315+4 t=8 runtime.f64hash+0
	rel 369+4 t=8 runtime.f64hash+0
	rel 423+4 t=8 runtime.f64hash+0
	rel 480+4 t=8 runtime.f64hash+0
	rel 537+4 t=8 runtime.f64hash+0
	rel 594+4 t=8 runtime.f64hash+0
	rel 651+4 t=8 runtime.f64hash+0
	rel 708+4 t=8 runtime.f64hash+0
	rel 765+4 t=8 runtime.f64hash+0
	rel 822+4 t=8 runtime.f64hash+0
	rel 879+4 t=8 runtime.f64hash+0
	rel 936+4 t=8 runtime.f64hash+0
	rel 993+4 t=8 runtime.f64hash+0
	rel 1050+4 t=8 runtime.f64hash+0
	rel 1107+4 t=8 runtime.f64hash+0
	rel 1164+4 t=8 runtime.f64hash+0
	rel 1221+4 t=8 runtime.f64hash+0
	rel 1278+4 t=8 runtime.f64hash+0
	rel 1332+4 t=8 runtime.f64hash+0
	rel 1386+4 t=8 runtime.f64hash+0
	rel 1440+4 t=8 runtime.f64hash+0
	rel 1494+4 t=8 runtime.f64hash+0
	rel 1548+4 t=8 runtime.f64hash+0
	rel 1590+4 t=8 runtime.morestack_noctxt+0
type..eq."".giga STEXT dupok size=1849 args=0x18 locals=0x58
	0x0000 00000 (<autogenerated>:1)	TEXT	type..eq."".giga(SB), DUPOK|ABIInternal, $88-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	1839
	0x0013 00019 (<autogenerated>:1)	SUBQ	$88, SP
	0x0017 00023 (<autogenerated>:1)	MOVQ	BP, 80(SP)
	0x001c 00028 (<autogenerated>:1)	LEAQ	80(SP), BP
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$0, gclocals·7e7fcb5c7cd183fbe200fb26b1d44a90(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$1, gclocals·4d1b051aa74e541832d091537787462f(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$2, gclocals·bfec7e55b3f043d1941c093912808913(SB)
	0x0021 00033 (<autogenerated>:1)	PCDATA	$0, $0
	0x0021 00033 (<autogenerated>:1)	PCDATA	$1, $0
	0x0021 00033 (<autogenerated>:1)	MOVB	$0, "".~r2+112(SP)
	0x0026 00038 (<autogenerated>:1)	PCDATA	$0, $1
	0x0026 00038 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x002b 00043 (<autogenerated>:1)	PCDATA	$0, $0
	0x002b 00043 (<autogenerated>:1)	PCDATA	$1, $1
	0x002b 00043 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_30+72(SP)
	0x0030 00048 (<autogenerated>:1)	PCDATA	$0, $1
	0x0030 00048 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x0035 00053 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_31+64(SP)
	0x003a 00058 (<autogenerated>:1)	PCDATA	$0, $2
	0x003a 00058 (<autogenerated>:1)	PCDATA	$1, $0
	0x003a 00058 (<autogenerated>:1)	MOVQ	""..autotmp_30+72(SP), CX
	0x003f 00063 (<autogenerated>:1)	PCDATA	$0, $1
	0x003f 00063 (<autogenerated>:1)	MOVQ	CX, (SP)
	0x0043 00067 (<autogenerated>:1)	PCDATA	$0, $0
	0x0043 00067 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0048 00072 (<autogenerated>:1)	MOVQ	$208, 16(SP)
	0x0051 00081 (<autogenerated>:1)	CALL	runtime.memequal(SB)
	0x0056 00086 (<autogenerated>:1)	MOVBLZX	24(SP), AX
	0x005b 00091 (<autogenerated>:1)	MOVB	AL, ""..autotmp_29+44(SP)
	0x005f 00095 (<autogenerated>:1)	MOVB	AL, ""..autotmp_28+45(SP)
	0x0063 00099 (<autogenerated>:1)	TESTB	AL, AL
	0x0065 00101 (<autogenerated>:1)	JNE	108
	0x0067 00103 (<autogenerated>:1)	JMP	1834
	0x006c 00108 (<autogenerated>:1)	PCDATA	$0, $1
	0x006c 00108 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x0071 00113 (<autogenerated>:1)	PCDATA	$0, $0
	0x0071 00113 (<autogenerated>:1)	MOVSD	208(AX), X0
	0x0079 00121 (<autogenerated>:1)	PCDATA	$0, $1
	0x0079 00121 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x007e 00126 (<autogenerated>:1)	PCDATA	$0, $0
	0x007e 00126 (<autogenerated>:1)	MOVSD	208(AX), X1
	0x0086 00134 (<autogenerated>:1)	UCOMISD	X1, X0
	0x008a 00138 (<autogenerated>:1)	SETEQ	CL
	0x008d 00141 (<autogenerated>:1)	SETPC	AL
	0x0090 00144 (<autogenerated>:1)	ANDL	AX, CX
	0x0092 00146 (<autogenerated>:1)	MOVB	CL, ""..autotmp_28+45(SP)
	0x0096 00150 (<autogenerated>:1)	JMP	152
	0x0098 00152 (<autogenerated>:1)	MOVBLZX	""..autotmp_28+45(SP), AX
	0x009d 00157 (<autogenerated>:1)	MOVB	AL, ""..autotmp_27+46(SP)
	0x00a1 00161 (<autogenerated>:1)	TESTB	AL, AL
	0x00a3 00163 (<autogenerated>:1)	JNE	170
	0x00a5 00165 (<autogenerated>:1)	JMP	1829
	0x00aa 00170 (<autogenerated>:1)	PCDATA	$0, $1
	0x00aa 00170 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x00af 00175 (<autogenerated>:1)	PCDATA	$0, $0
	0x00af 00175 (<autogenerated>:1)	MOVSD	216(AX), X0
	0x00b7 00183 (<autogenerated>:1)	PCDATA	$0, $1
	0x00b7 00183 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x00bc 00188 (<autogenerated>:1)	PCDATA	$0, $0
	0x00bc 00188 (<autogenerated>:1)	MOVSD	216(AX), X1
	0x00c4 00196 (<autogenerated>:1)	UCOMISD	X1, X0
	0x00c8 00200 (<autogenerated>:1)	SETEQ	CL
	0x00cb 00203 (<autogenerated>:1)	SETPC	AL
	0x00ce 00206 (<autogenerated>:1)	ANDL	AX, CX
	0x00d0 00208 (<autogenerated>:1)	MOVB	CL, ""..autotmp_27+46(SP)
	0x00d4 00212 (<autogenerated>:1)	JMP	214
	0x00d6 00214 (<autogenerated>:1)	MOVBLZX	""..autotmp_27+46(SP), AX
	0x00db 00219 (<autogenerated>:1)	MOVB	AL, ""..autotmp_26+47(SP)
	0x00df 00223 (<autogenerated>:1)	TESTB	AL, AL
	0x00e1 00225 (<autogenerated>:1)	JNE	232
	0x00e3 00227 (<autogenerated>:1)	JMP	1824
	0x00e8 00232 (<autogenerated>:1)	PCDATA	$0, $1
	0x00e8 00232 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x00ed 00237 (<autogenerated>:1)	PCDATA	$0, $0
	0x00ed 00237 (<autogenerated>:1)	MOVSD	224(AX), X0
	0x00f5 00245 (<autogenerated>:1)	PCDATA	$0, $1
	0x00f5 00245 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x00fa 00250 (<autogenerated>:1)	PCDATA	$0, $0
	0x00fa 00250 (<autogenerated>:1)	MOVSD	224(AX), X1
	0x0102 00258 (<autogenerated>:1)	UCOMISD	X1, X0
	0x0106 00262 (<autogenerated>:1)	SETEQ	CL
	0x0109 00265 (<autogenerated>:1)	SETPC	AL
	0x010c 00268 (<autogenerated>:1)	ANDL	AX, CX
	0x010e 00270 (<autogenerated>:1)	MOVB	CL, ""..autotmp_26+47(SP)
	0x0112 00274 (<autogenerated>:1)	JMP	276
	0x0114 00276 (<autogenerated>:1)	MOVBLZX	""..autotmp_26+47(SP), AX
	0x0119 00281 (<autogenerated>:1)	MOVB	AL, ""..autotmp_25+48(SP)
	0x011d 00285 (<autogenerated>:1)	TESTB	AL, AL
	0x011f 00287 (<autogenerated>:1)	JNE	294
	0x0121 00289 (<autogenerated>:1)	JMP	1819
	0x0126 00294 (<autogenerated>:1)	PCDATA	$0, $1
	0x0126 00294 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x012b 00299 (<autogenerated>:1)	PCDATA	$0, $0
	0x012b 00299 (<autogenerated>:1)	MOVSD	232(AX), X0
	0x0133 00307 (<autogenerated>:1)	PCDATA	$0, $1
	0x0133 00307 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x0138 00312 (<autogenerated>:1)	PCDATA	$0, $0
	0x0138 00312 (<autogenerated>:1)	MOVSD	232(AX), X1
	0x0140 00320 (<autogenerated>:1)	UCOMISD	X1, X0
	0x0144 00324 (<autogenerated>:1)	SETEQ	CL
	0x0147 00327 (<autogenerated>:1)	SETPC	AL
	0x014a 00330 (<autogenerated>:1)	ANDL	AX, CX
	0x014c 00332 (<autogenerated>:1)	MOVB	CL, ""..autotmp_25+48(SP)
	0x0150 00336 (<autogenerated>:1)	JMP	338
	0x0152 00338 (<autogenerated>:1)	MOVBLZX	""..autotmp_25+48(SP), AX
	0x0157 00343 (<autogenerated>:1)	MOVB	AL, ""..autotmp_24+49(SP)
	0x015b 00347 (<autogenerated>:1)	TESTB	AL, AL
	0x015d 00349 (<autogenerated>:1)	JNE	356
	0x015f 00351 (<autogenerated>:1)	JMP	1814
	0x0164 00356 (<autogenerated>:1)	PCDATA	$0, $1
	0x0164 00356 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x0169 00361 (<autogenerated>:1)	PCDATA	$0, $0
	0x0169 00361 (<autogenerated>:1)	MOVSD	240(AX), X0
	0x0171 00369 (<autogenerated>:1)	PCDATA	$0, $1
	0x0171 00369 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x0176 00374 (<autogenerated>:1)	PCDATA	$0, $0
	0x0176 00374 (<autogenerated>:1)	MOVSD	240(AX), X1
	0x017e 00382 (<autogenerated>:1)	UCOMISD	X1, X0
	0x0182 00386 (<autogenerated>:1)	SETEQ	CL
	0x0185 00389 (<autogenerated>:1)	SETPC	AL
	0x0188 00392 (<autogenerated>:1)	ANDL	AX, CX
	0x018a 00394 (<autogenerated>:1)	MOVB	CL, ""..autotmp_24+49(SP)
	0x018e 00398 (<autogenerated>:1)	JMP	400
	0x0190 00400 (<autogenerated>:1)	MOVBLZX	""..autotmp_24+49(SP), AX
	0x0195 00405 (<autogenerated>:1)	MOVB	AL, ""..autotmp_23+50(SP)
	0x0199 00409 (<autogenerated>:1)	TESTB	AL, AL
	0x019b 00411 (<autogenerated>:1)	JNE	418
	0x019d 00413 (<autogenerated>:1)	JMP	1809
	0x01a2 00418 (<autogenerated>:1)	PCDATA	$0, $1
	0x01a2 00418 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x01a7 00423 (<autogenerated>:1)	PCDATA	$0, $0
	0x01a7 00423 (<autogenerated>:1)	MOVSD	248(AX), X0
	0x01af 00431 (<autogenerated>:1)	PCDATA	$0, $1
	0x01af 00431 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x01b4 00436 (<autogenerated>:1)	PCDATA	$0, $0
	0x01b4 00436 (<autogenerated>:1)	MOVSD	248(AX), X1
	0x01bc 00444 (<autogenerated>:1)	UCOMISD	X1, X0
	0x01c0 00448 (<autogenerated>:1)	SETEQ	CL
	0x01c3 00451 (<autogenerated>:1)	SETPC	AL
	0x01c6 00454 (<autogenerated>:1)	ANDL	AX, CX
	0x01c8 00456 (<autogenerated>:1)	MOVB	CL, ""..autotmp_23+50(SP)
	0x01cc 00460 (<autogenerated>:1)	JMP	462
	0x01ce 00462 (<autogenerated>:1)	MOVBLZX	""..autotmp_23+50(SP), AX
	0x01d3 00467 (<autogenerated>:1)	MOVB	AL, ""..autotmp_22+51(SP)
	0x01d7 00471 (<autogenerated>:1)	TESTB	AL, AL
	0x01d9 00473 (<autogenerated>:1)	JNE	480
	0x01db 00475 (<autogenerated>:1)	JMP	1804
	0x01e0 00480 (<autogenerated>:1)	PCDATA	$0, $1
	0x01e0 00480 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x01e5 00485 (<autogenerated>:1)	PCDATA	$0, $0
	0x01e5 00485 (<autogenerated>:1)	MOVSD	256(AX), X0
	0x01ed 00493 (<autogenerated>:1)	PCDATA	$0, $1
	0x01ed 00493 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x01f2 00498 (<autogenerated>:1)	PCDATA	$0, $0
	0x01f2 00498 (<autogenerated>:1)	MOVSD	256(AX), X1
	0x01fa 00506 (<autogenerated>:1)	UCOMISD	X1, X0
	0x01fe 00510 (<autogenerated>:1)	SETEQ	CL
	0x0201 00513 (<autogenerated>:1)	SETPC	AL
	0x0204 00516 (<autogenerated>:1)	ANDL	AX, CX
	0x0206 00518 (<autogenerated>:1)	MOVB	CL, ""..autotmp_22+51(SP)
	0x020a 00522 (<autogenerated>:1)	JMP	524
	0x020c 00524 (<autogenerated>:1)	MOVBLZX	""..autotmp_22+51(SP), AX
	0x0211 00529 (<autogenerated>:1)	MOVB	AL, ""..autotmp_21+52(SP)
	0x0215 00533 (<autogenerated>:1)	TESTB	AL, AL
	0x0217 00535 (<autogenerated>:1)	JNE	542
	0x0219 00537 (<autogenerated>:1)	JMP	1799
	0x021e 00542 (<autogenerated>:1)	PCDATA	$0, $1
	0x021e 00542 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x0223 00547 (<autogenerated>:1)	PCDATA	$0, $0
	0x0223 00547 (<autogenerated>:1)	MOVSD	264(AX), X0
	0x022b 00555 (<autogenerated>:1)	PCDATA	$0, $1
	0x022b 00555 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x0230 00560 (<autogenerated>:1)	PCDATA	$0, $0
	0x0230 00560 (<autogenerated>:1)	MOVSD	264(AX), X1
	0x0238 00568 (<autogenerated>:1)	UCOMISD	X1, X0
	0x023c 00572 (<autogenerated>:1)	SETEQ	CL
	0x023f 00575 (<autogenerated>:1)	SETPC	AL
	0x0242 00578 (<autogenerated>:1)	ANDL	AX, CX
	0x0244 00580 (<autogenerated>:1)	MOVB	CL, ""..autotmp_21+52(SP)
	0x0248 00584 (<autogenerated>:1)	JMP	586
	0x024a 00586 (<autogenerated>:1)	MOVBLZX	""..autotmp_21+52(SP), AX
	0x024f 00591 (<autogenerated>:1)	MOVB	AL, ""..autotmp_20+53(SP)
	0x0253 00595 (<autogenerated>:1)	TESTB	AL, AL
	0x0255 00597 (<autogenerated>:1)	JNE	604
	0x0257 00599 (<autogenerated>:1)	JMP	1794
	0x025c 00604 (<autogenerated>:1)	PCDATA	$0, $1
	0x025c 00604 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x0261 00609 (<autogenerated>:1)	PCDATA	$0, $0
	0x0261 00609 (<autogenerated>:1)	MOVSD	272(AX), X0
	0x0269 00617 (<autogenerated>:1)	PCDATA	$0, $1
	0x0269 00617 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x026e 00622 (<autogenerated>:1)	PCDATA	$0, $0
	0x026e 00622 (<autogenerated>:1)	MOVSD	272(AX), X1
	0x0276 00630 (<autogenerated>:1)	UCOMISD	X1, X0
	0x027a 00634 (<autogenerated>:1)	SETEQ	CL
	0x027d 00637 (<autogenerated>:1)	SETPC	AL
	0x0280 00640 (<autogenerated>:1)	ANDL	AX, CX
	0x0282 00642 (<autogenerated>:1)	MOVB	CL, ""..autotmp_20+53(SP)
	0x0286 00646 (<autogenerated>:1)	JMP	648
	0x0288 00648 (<autogenerated>:1)	MOVBLZX	""..autotmp_20+53(SP), AX
	0x028d 00653 (<autogenerated>:1)	MOVB	AL, ""..autotmp_19+54(SP)
	0x0291 00657 (<autogenerated>:1)	TESTB	AL, AL
	0x0293 00659 (<autogenerated>:1)	JNE	666
	0x0295 00661 (<autogenerated>:1)	JMP	1789
	0x029a 00666 (<autogenerated>:1)	PCDATA	$0, $1
	0x029a 00666 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x029f 00671 (<autogenerated>:1)	PCDATA	$0, $0
	0x029f 00671 (<autogenerated>:1)	MOVSD	280(AX), X0
	0x02a7 00679 (<autogenerated>:1)	PCDATA	$0, $1
	0x02a7 00679 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x02ac 00684 (<autogenerated>:1)	PCDATA	$0, $0
	0x02ac 00684 (<autogenerated>:1)	MOVSD	280(AX), X1
	0x02b4 00692 (<autogenerated>:1)	UCOMISD	X1, X0
	0x02b8 00696 (<autogenerated>:1)	SETEQ	CL
	0x02bb 00699 (<autogenerated>:1)	SETPC	AL
	0x02be 00702 (<autogenerated>:1)	ANDL	AX, CX
	0x02c0 00704 (<autogenerated>:1)	MOVB	CL, ""..autotmp_19+54(SP)
	0x02c4 00708 (<autogenerated>:1)	JMP	710
	0x02c6 00710 (<autogenerated>:1)	MOVBLZX	""..autotmp_19+54(SP), AX
	0x02cb 00715 (<autogenerated>:1)	MOVB	AL, ""..autotmp_18+55(SP)
	0x02cf 00719 (<autogenerated>:1)	TESTB	AL, AL
	0x02d1 00721 (<autogenerated>:1)	JNE	728
	0x02d3 00723 (<autogenerated>:1)	JMP	1784
	0x02d8 00728 (<autogenerated>:1)	PCDATA	$0, $1
	0x02d8 00728 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x02dd 00733 (<autogenerated>:1)	PCDATA	$0, $0
	0x02dd 00733 (<autogenerated>:1)	MOVSD	288(AX), X0
	0x02e5 00741 (<autogenerated>:1)	PCDATA	$0, $1
	0x02e5 00741 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x02ea 00746 (<autogenerated>:1)	PCDATA	$0, $0
	0x02ea 00746 (<autogenerated>:1)	MOVSD	288(AX), X1
	0x02f2 00754 (<autogenerated>:1)	UCOMISD	X1, X0
	0x02f6 00758 (<autogenerated>:1)	SETEQ	CL
	0x02f9 00761 (<autogenerated>:1)	SETPC	AL
	0x02fc 00764 (<autogenerated>:1)	ANDL	AX, CX
	0x02fe 00766 (<autogenerated>:1)	MOVB	CL, ""..autotmp_18+55(SP)
	0x0302 00770 (<autogenerated>:1)	JMP	772
	0x0304 00772 (<autogenerated>:1)	MOVBLZX	""..autotmp_18+55(SP), AX
	0x0309 00777 (<autogenerated>:1)	MOVB	AL, ""..autotmp_17+56(SP)
	0x030d 00781 (<autogenerated>:1)	TESTB	AL, AL
	0x030f 00783 (<autogenerated>:1)	JNE	790
	0x0311 00785 (<autogenerated>:1)	JMP	1779
	0x0316 00790 (<autogenerated>:1)	PCDATA	$0, $1
	0x0316 00790 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x031b 00795 (<autogenerated>:1)	PCDATA	$0, $0
	0x031b 00795 (<autogenerated>:1)	MOVSD	296(AX), X0
	0x0323 00803 (<autogenerated>:1)	PCDATA	$0, $1
	0x0323 00803 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x0328 00808 (<autogenerated>:1)	PCDATA	$0, $0
	0x0328 00808 (<autogenerated>:1)	MOVSD	296(AX), X1
	0x0330 00816 (<autogenerated>:1)	UCOMISD	X1, X0
	0x0334 00820 (<autogenerated>:1)	SETEQ	CL
	0x0337 00823 (<autogenerated>:1)	SETPC	AL
	0x033a 00826 (<autogenerated>:1)	ANDL	AX, CX
	0x033c 00828 (<autogenerated>:1)	MOVB	CL, ""..autotmp_17+56(SP)
	0x0340 00832 (<autogenerated>:1)	JMP	834
	0x0342 00834 (<autogenerated>:1)	MOVBLZX	""..autotmp_17+56(SP), AX
	0x0347 00839 (<autogenerated>:1)	MOVB	AL, ""..autotmp_16+57(SP)
	0x034b 00843 (<autogenerated>:1)	TESTB	AL, AL
	0x034d 00845 (<autogenerated>:1)	JNE	852
	0x034f 00847 (<autogenerated>:1)	JMP	1774
	0x0354 00852 (<autogenerated>:1)	PCDATA	$0, $1
	0x0354 00852 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x0359 00857 (<autogenerated>:1)	PCDATA	$0, $0
	0x0359 00857 (<autogenerated>:1)	MOVSD	304(AX), X0
	0x0361 00865 (<autogenerated>:1)	PCDATA	$0, $1
	0x0361 00865 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x0366 00870 (<autogenerated>:1)	PCDATA	$0, $0
	0x0366 00870 (<autogenerated>:1)	MOVSD	304(AX), X1
	0x036e 00878 (<autogenerated>:1)	UCOMISD	X1, X0
	0x0372 00882 (<autogenerated>:1)	SETEQ	CL
	0x0375 00885 (<autogenerated>:1)	SETPC	AL
	0x0378 00888 (<autogenerated>:1)	ANDL	AX, CX
	0x037a 00890 (<autogenerated>:1)	MOVB	CL, ""..autotmp_16+57(SP)
	0x037e 00894 (<autogenerated>:1)	JMP	896
	0x0380 00896 (<autogenerated>:1)	MOVBLZX	""..autotmp_16+57(SP), AX
	0x0385 00901 (<autogenerated>:1)	MOVB	AL, ""..autotmp_15+58(SP)
	0x0389 00905 (<autogenerated>:1)	TESTB	AL, AL
	0x038b 00907 (<autogenerated>:1)	JNE	914
	0x038d 00909 (<autogenerated>:1)	JMP	1769
	0x0392 00914 (<autogenerated>:1)	PCDATA	$0, $1
	0x0392 00914 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x0397 00919 (<autogenerated>:1)	PCDATA	$0, $0
	0x0397 00919 (<autogenerated>:1)	MOVSD	312(AX), X0
	0x039f 00927 (<autogenerated>:1)	PCDATA	$0, $1
	0x039f 00927 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x03a4 00932 (<autogenerated>:1)	PCDATA	$0, $0
	0x03a4 00932 (<autogenerated>:1)	MOVSD	312(AX), X1
	0x03ac 00940 (<autogenerated>:1)	UCOMISD	X1, X0
	0x03b0 00944 (<autogenerated>:1)	SETEQ	CL
	0x03b3 00947 (<autogenerated>:1)	SETPC	AL
	0x03b6 00950 (<autogenerated>:1)	ANDL	AX, CX
	0x03b8 00952 (<autogenerated>:1)	MOVB	CL, ""..autotmp_15+58(SP)
	0x03bc 00956 (<autogenerated>:1)	JMP	958
	0x03be 00958 (<autogenerated>:1)	MOVBLZX	""..autotmp_15+58(SP), AX
	0x03c3 00963 (<autogenerated>:1)	MOVB	AL, ""..autotmp_14+59(SP)
	0x03c7 00967 (<autogenerated>:1)	TESTB	AL, AL
	0x03c9 00969 (<autogenerated>:1)	JNE	976
	0x03cb 00971 (<autogenerated>:1)	JMP	1764
	0x03d0 00976 (<autogenerated>:1)	PCDATA	$0, $1
	0x03d0 00976 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x03d5 00981 (<autogenerated>:1)	PCDATA	$0, $0
	0x03d5 00981 (<autogenerated>:1)	MOVSD	320(AX), X0
	0x03dd 00989 (<autogenerated>:1)	PCDATA	$0, $1
	0x03dd 00989 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x03e2 00994 (<autogenerated>:1)	PCDATA	$0, $0
	0x03e2 00994 (<autogenerated>:1)	MOVSD	320(AX), X1
	0x03ea 01002 (<autogenerated>:1)	UCOMISD	X1, X0
	0x03ee 01006 (<autogenerated>:1)	SETEQ	CL
	0x03f1 01009 (<autogenerated>:1)	SETPC	AL
	0x03f4 01012 (<autogenerated>:1)	ANDL	AX, CX
	0x03f6 01014 (<autogenerated>:1)	MOVB	CL, ""..autotmp_14+59(SP)
	0x03fa 01018 (<autogenerated>:1)	JMP	1020
	0x03fc 01020 (<autogenerated>:1)	MOVBLZX	""..autotmp_14+59(SP), AX
	0x0401 01025 (<autogenerated>:1)	MOVB	AL, ""..autotmp_13+60(SP)
	0x0405 01029 (<autogenerated>:1)	TESTB	AL, AL
	0x0407 01031 (<autogenerated>:1)	JNE	1038
	0x0409 01033 (<autogenerated>:1)	JMP	1759
	0x040e 01038 (<autogenerated>:1)	PCDATA	$0, $1
	0x040e 01038 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x0413 01043 (<autogenerated>:1)	PCDATA	$0, $0
	0x0413 01043 (<autogenerated>:1)	MOVSD	328(AX), X0
	0x041b 01051 (<autogenerated>:1)	PCDATA	$0, $1
	0x041b 01051 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x0420 01056 (<autogenerated>:1)	PCDATA	$0, $0
	0x0420 01056 (<autogenerated>:1)	MOVSD	328(AX), X1
	0x0428 01064 (<autogenerated>:1)	UCOMISD	X1, X0
	0x042c 01068 (<autogenerated>:1)	SETEQ	CL
	0x042f 01071 (<autogenerated>:1)	SETPC	AL
	0x0432 01074 (<autogenerated>:1)	ANDL	AX, CX
	0x0434 01076 (<autogenerated>:1)	MOVB	CL, ""..autotmp_13+60(SP)
	0x0438 01080 (<autogenerated>:1)	JMP	1082
	0x043a 01082 (<autogenerated>:1)	MOVBLZX	""..autotmp_13+60(SP), AX
	0x043f 01087 (<autogenerated>:1)	MOVB	AL, ""..autotmp_12+61(SP)
	0x0443 01091 (<autogenerated>:1)	TESTB	AL, AL
	0x0445 01093 (<autogenerated>:1)	JNE	1100
	0x0447 01095 (<autogenerated>:1)	JMP	1754
	0x044c 01100 (<autogenerated>:1)	PCDATA	$0, $1
	0x044c 01100 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x0451 01105 (<autogenerated>:1)	PCDATA	$0, $0
	0x0451 01105 (<autogenerated>:1)	MOVSD	336(AX), X0
	0x0459 01113 (<autogenerated>:1)	PCDATA	$0, $1
	0x0459 01113 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x045e 01118 (<autogenerated>:1)	PCDATA	$0, $0
	0x045e 01118 (<autogenerated>:1)	MOVSD	336(AX), X1
	0x0466 01126 (<autogenerated>:1)	UCOMISD	X1, X0
	0x046a 01130 (<autogenerated>:1)	SETEQ	CL
	0x046d 01133 (<autogenerated>:1)	SETPC	AL
	0x0470 01136 (<autogenerated>:1)	ANDL	AX, CX
	0x0472 01138 (<autogenerated>:1)	MOVB	CL, ""..autotmp_12+61(SP)
	0x0476 01142 (<autogenerated>:1)	JMP	1144
	0x0478 01144 (<autogenerated>:1)	MOVBLZX	""..autotmp_12+61(SP), AX
	0x047d 01149 (<autogenerated>:1)	MOVB	AL, ""..autotmp_11+62(SP)
	0x0481 01153 (<autogenerated>:1)	TESTB	AL, AL
	0x0483 01155 (<autogenerated>:1)	JNE	1162
	0x0485 01157 (<autogenerated>:1)	JMP	1749
	0x048a 01162 (<autogenerated>:1)	PCDATA	$0, $1
	0x048a 01162 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x048f 01167 (<autogenerated>:1)	PCDATA	$0, $0
	0x048f 01167 (<autogenerated>:1)	MOVSD	344(AX), X0
	0x0497 01175 (<autogenerated>:1)	PCDATA	$0, $1
	0x0497 01175 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x049c 01180 (<autogenerated>:1)	PCDATA	$0, $0
	0x049c 01180 (<autogenerated>:1)	MOVSD	344(AX), X1
	0x04a4 01188 (<autogenerated>:1)	UCOMISD	X1, X0
	0x04a8 01192 (<autogenerated>:1)	SETEQ	CL
	0x04ab 01195 (<autogenerated>:1)	SETPC	AL
	0x04ae 01198 (<autogenerated>:1)	ANDL	AX, CX
	0x04b0 01200 (<autogenerated>:1)	MOVB	CL, ""..autotmp_11+62(SP)
	0x04b4 01204 (<autogenerated>:1)	JMP	1206
	0x04b6 01206 (<autogenerated>:1)	MOVBLZX	""..autotmp_11+62(SP), AX
	0x04bb 01211 (<autogenerated>:1)	MOVB	AL, ""..autotmp_10+63(SP)
	0x04bf 01215 (<autogenerated>:1)	TESTB	AL, AL
	0x04c1 01217 (<autogenerated>:1)	JNE	1224
	0x04c3 01219 (<autogenerated>:1)	JMP	1744
	0x04c8 01224 (<autogenerated>:1)	PCDATA	$0, $1
	0x04c8 01224 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x04cd 01229 (<autogenerated>:1)	PCDATA	$0, $0
	0x04cd 01229 (<autogenerated>:1)	MOVSD	352(AX), X0
	0x04d5 01237 (<autogenerated>:1)	PCDATA	$0, $1
	0x04d5 01237 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x04da 01242 (<autogenerated>:1)	PCDATA	$0, $0
	0x04da 01242 (<autogenerated>:1)	MOVSD	352(AX), X1
	0x04e2 01250 (<autogenerated>:1)	UCOMISD	X1, X0
	0x04e6 01254 (<autogenerated>:1)	SETEQ	CL
	0x04e9 01257 (<autogenerated>:1)	SETPC	AL
	0x04ec 01260 (<autogenerated>:1)	ANDL	AX, CX
	0x04ee 01262 (<autogenerated>:1)	MOVB	CL, ""..autotmp_10+63(SP)
	0x04f2 01266 (<autogenerated>:1)	JMP	1268
	0x04f4 01268 (<autogenerated>:1)	MOVBLZX	""..autotmp_10+63(SP), AX
	0x04f9 01273 (<autogenerated>:1)	MOVB	AL, ""..autotmp_9+37(SP)
	0x04fd 01277 (<autogenerated>:1)	TESTB	AL, AL
	0x04ff 01279 (<autogenerated>:1)	JNE	1286
	0x0501 01281 (<autogenerated>:1)	JMP	1739
	0x0506 01286 (<autogenerated>:1)	PCDATA	$0, $1
	0x0506 01286 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x050b 01291 (<autogenerated>:1)	PCDATA	$0, $0
	0x050b 01291 (<autogenerated>:1)	MOVSD	360(AX), X0
	0x0513 01299 (<autogenerated>:1)	PCDATA	$0, $1
	0x0513 01299 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x0518 01304 (<autogenerated>:1)	PCDATA	$0, $0
	0x0518 01304 (<autogenerated>:1)	MOVSD	360(AX), X1
	0x0520 01312 (<autogenerated>:1)	UCOMISD	X1, X0
	0x0524 01316 (<autogenerated>:1)	SETEQ	CL
	0x0527 01319 (<autogenerated>:1)	SETPC	AL
	0x052a 01322 (<autogenerated>:1)	ANDL	AX, CX
	0x052c 01324 (<autogenerated>:1)	MOVB	CL, ""..autotmp_9+37(SP)
	0x0530 01328 (<autogenerated>:1)	JMP	1330
	0x0532 01330 (<autogenerated>:1)	MOVBLZX	""..autotmp_9+37(SP), AX
	0x0537 01335 (<autogenerated>:1)	MOVB	AL, ""..autotmp_8+38(SP)
	0x053b 01339 (<autogenerated>:1)	TESTB	AL, AL
	0x053d 01341 (<autogenerated>:1)	JNE	1348
	0x053f 01343 (<autogenerated>:1)	JMP	1734
	0x0544 01348 (<autogenerated>:1)	PCDATA	$0, $1
	0x0544 01348 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x0549 01353 (<autogenerated>:1)	PCDATA	$0, $0
	0x0549 01353 (<autogenerated>:1)	MOVSD	368(AX), X0
	0x0551 01361 (<autogenerated>:1)	PCDATA	$0, $1
	0x0551 01361 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x0556 01366 (<autogenerated>:1)	PCDATA	$0, $0
	0x0556 01366 (<autogenerated>:1)	MOVSD	368(AX), X1
	0x055e 01374 (<autogenerated>:1)	UCOMISD	X1, X0
	0x0562 01378 (<autogenerated>:1)	SETEQ	CL
	0x0565 01381 (<autogenerated>:1)	SETPC	AL
	0x0568 01384 (<autogenerated>:1)	ANDL	AX, CX
	0x056a 01386 (<autogenerated>:1)	MOVB	CL, ""..autotmp_8+38(SP)
	0x056e 01390 (<autogenerated>:1)	JMP	1392
	0x0570 01392 (<autogenerated>:1)	MOVBLZX	""..autotmp_8+38(SP), AX
	0x0575 01397 (<autogenerated>:1)	MOVB	AL, ""..autotmp_7+39(SP)
	0x0579 01401 (<autogenerated>:1)	TESTB	AL, AL
	0x057b 01403 (<autogenerated>:1)	JNE	1410
	0x057d 01405 (<autogenerated>:1)	JMP	1729
	0x0582 01410 (<autogenerated>:1)	PCDATA	$0, $1
	0x0582 01410 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x0587 01415 (<autogenerated>:1)	PCDATA	$0, $0
	0x0587 01415 (<autogenerated>:1)	MOVSD	376(AX), X0
	0x058f 01423 (<autogenerated>:1)	PCDATA	$0, $1
	0x058f 01423 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x0594 01428 (<autogenerated>:1)	PCDATA	$0, $0
	0x0594 01428 (<autogenerated>:1)	MOVSD	376(AX), X1
	0x059c 01436 (<autogenerated>:1)	UCOMISD	X1, X0
	0x05a0 01440 (<autogenerated>:1)	SETEQ	CL
	0x05a3 01443 (<autogenerated>:1)	SETPC	AL
	0x05a6 01446 (<autogenerated>:1)	ANDL	AX, CX
	0x05a8 01448 (<autogenerated>:1)	MOVB	CL, ""..autotmp_7+39(SP)
	0x05ac 01452 (<autogenerated>:1)	JMP	1454
	0x05ae 01454 (<autogenerated>:1)	MOVBLZX	""..autotmp_7+39(SP), AX
	0x05b3 01459 (<autogenerated>:1)	MOVB	AL, ""..autotmp_6+40(SP)
	0x05b7 01463 (<autogenerated>:1)	TESTB	AL, AL
	0x05b9 01465 (<autogenerated>:1)	JNE	1472
	0x05bb 01467 (<autogenerated>:1)	JMP	1724
	0x05c0 01472 (<autogenerated>:1)	PCDATA	$0, $1
	0x05c0 01472 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x05c5 01477 (<autogenerated>:1)	PCDATA	$0, $0
	0x05c5 01477 (<autogenerated>:1)	MOVSD	384(AX), X0
	0x05cd 01485 (<autogenerated>:1)	PCDATA	$0, $1
	0x05cd 01485 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x05d2 01490 (<autogenerated>:1)	PCDATA	$0, $0
	0x05d2 01490 (<autogenerated>:1)	MOVSD	384(AX), X1
	0x05da 01498 (<autogenerated>:1)	UCOMISD	X1, X0
	0x05de 01502 (<autogenerated>:1)	SETEQ	CL
	0x05e1 01505 (<autogenerated>:1)	SETPC	AL
	0x05e4 01508 (<autogenerated>:1)	ANDL	AX, CX
	0x05e6 01510 (<autogenerated>:1)	MOVB	CL, ""..autotmp_6+40(SP)
	0x05ea 01514 (<autogenerated>:1)	JMP	1516
	0x05ec 01516 (<autogenerated>:1)	MOVBLZX	""..autotmp_6+40(SP), AX
	0x05f1 01521 (<autogenerated>:1)	MOVB	AL, ""..autotmp_5+41(SP)
	0x05f5 01525 (<autogenerated>:1)	TESTB	AL, AL
	0x05f7 01527 (<autogenerated>:1)	JNE	1534
	0x05f9 01529 (<autogenerated>:1)	JMP	1719
	0x05fe 01534 (<autogenerated>:1)	PCDATA	$0, $1
	0x05fe 01534 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x0603 01539 (<autogenerated>:1)	PCDATA	$0, $0
	0x0603 01539 (<autogenerated>:1)	MOVSD	392(AX), X0
	0x060b 01547 (<autogenerated>:1)	PCDATA	$0, $1
	0x060b 01547 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x0610 01552 (<autogenerated>:1)	PCDATA	$0, $0
	0x0610 01552 (<autogenerated>:1)	MOVSD	392(AX), X1
	0x0618 01560 (<autogenerated>:1)	UCOMISD	X1, X0
	0x061c 01564 (<autogenerated>:1)	SETEQ	CL
	0x061f 01567 (<autogenerated>:1)	SETPC	AL
	0x0622 01570 (<autogenerated>:1)	ANDL	AX, CX
	0x0624 01572 (<autogenerated>:1)	MOVB	CL, ""..autotmp_5+41(SP)
	0x0628 01576 (<autogenerated>:1)	JMP	1578
	0x062a 01578 (<autogenerated>:1)	MOVBLZX	""..autotmp_5+41(SP), AX
	0x062f 01583 (<autogenerated>:1)	MOVB	AL, ""..autotmp_4+42(SP)
	0x0633 01587 (<autogenerated>:1)	TESTB	AL, AL
	0x0635 01589 (<autogenerated>:1)	JNE	1593
	0x0637 01591 (<autogenerated>:1)	JMP	1717
	0x0639 01593 (<autogenerated>:1)	PCDATA	$0, $1
	0x0639 01593 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x063e 01598 (<autogenerated>:1)	PCDATA	$0, $0
	0x063e 01598 (<autogenerated>:1)	MOVSD	400(AX), X0
	0x0646 01606 (<autogenerated>:1)	PCDATA	$0, $1
	0x0646 01606 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x064b 01611 (<autogenerated>:1)	PCDATA	$0, $0
	0x064b 01611 (<autogenerated>:1)	MOVSD	400(AX), X1
	0x0653 01619 (<autogenerated>:1)	UCOMISD	X1, X0
	0x0657 01623 (<autogenerated>:1)	SETEQ	CL
	0x065a 01626 (<autogenerated>:1)	SETPC	AL
	0x065d 01629 (<autogenerated>:1)	ANDL	AX, CX
	0x065f 01631 (<autogenerated>:1)	MOVB	CL, ""..autotmp_4+42(SP)
	0x0663 01635 (<autogenerated>:1)	JMP	1637
	0x0665 01637 (<autogenerated>:1)	MOVBLZX	""..autotmp_4+42(SP), AX
	0x066a 01642 (<autogenerated>:1)	MOVB	AL, ""..autotmp_3+43(SP)
	0x066e 01646 (<autogenerated>:1)	TESTB	AL, AL
	0x0670 01648 (<autogenerated>:1)	JNE	1652
	0x0672 01650 (<autogenerated>:1)	JMP	1715
	0x0674 01652 (<autogenerated>:1)	PCDATA	$0, $1
	0x0674 01652 (<autogenerated>:1)	PCDATA	$1, $2
	0x0674 01652 (<autogenerated>:1)	MOVQ	"".p+96(SP), AX
	0x0679 01657 (<autogenerated>:1)	PCDATA	$0, $0
	0x0679 01657 (<autogenerated>:1)	MOVSD	408(AX), X0
	0x0681 01665 (<autogenerated>:1)	PCDATA	$0, $1
	0x0681 01665 (<autogenerated>:1)	PCDATA	$1, $3
	0x0681 01665 (<autogenerated>:1)	MOVQ	"".q+104(SP), AX
	0x0686 01670 (<autogenerated>:1)	PCDATA	$0, $0
	0x0686 01670 (<autogenerated>:1)	MOVSD	408(AX), X1
	0x068e 01678 (<autogenerated>:1)	UCOMISD	X1, X0
	0x0692 01682 (<autogenerated>:1)	SETEQ	CL
	0x0695 01685 (<autogenerated>:1)	SETPC	AL
	0x0698 01688 (<autogenerated>:1)	ANDL	AX, CX
	0x069a 01690 (<autogenerated>:1)	MOVB	CL, ""..autotmp_3+43(SP)
	0x069e 01694 (<autogenerated>:1)	JMP	1696
	0x06a0 01696 (<autogenerated>:1)	MOVBLZX	""..autotmp_3+43(SP), AX
	0x06a5 01701 (<autogenerated>:1)	MOVB	AL, "".~r2+112(SP)
	0x06a9 01705 (<autogenerated>:1)	MOVQ	80(SP), BP
	0x06ae 01710 (<autogenerated>:1)	ADDQ	$88, SP
	0x06b2 01714 (<autogenerated>:1)	RET
	0x06b3 01715 (<autogenerated>:1)	PCDATA	$0, $-2
	0x06b3 01715 (<autogenerated>:1)	PCDATA	$1, $-2
	0x06b3 01715 (<autogenerated>:1)	JMP	1696
	0x06b5 01717 (<autogenerated>:1)	JMP	1637
	0x06b7 01719 (<autogenerated>:1)	JMP	1578
	0x06bc 01724 (<autogenerated>:1)	JMP	1516
	0x06c1 01729 (<autogenerated>:1)	JMP	1454
	0x06c6 01734 (<autogenerated>:1)	JMP	1392
	0x06cb 01739 (<autogenerated>:1)	JMP	1330
	0x06d0 01744 (<autogenerated>:1)	JMP	1268
	0x06d5 01749 (<autogenerated>:1)	JMP	1206
	0x06da 01754 (<autogenerated>:1)	JMP	1144
	0x06df 01759 (<autogenerated>:1)	JMP	1082
	0x06e4 01764 (<autogenerated>:1)	JMP	1020
	0x06e9 01769 (<autogenerated>:1)	JMP	958
	0x06ee 01774 (<autogenerated>:1)	JMP	896
	0x06f3 01779 (<autogenerated>:1)	JMP	834
	0x06f8 01784 (<autogenerated>:1)	JMP	772
	0x06fd 01789 (<autogenerated>:1)	JMP	710
	0x0702 01794 (<autogenerated>:1)	JMP	648
	0x0707 01799 (<autogenerated>:1)	JMP	586
	0x070c 01804 (<autogenerated>:1)	JMP	524
	0x0711 01809 (<autogenerated>:1)	JMP	462
	0x0716 01814 (<autogenerated>:1)	JMP	400
	0x071b 01819 (<autogenerated>:1)	JMP	338
	0x0720 01824 (<autogenerated>:1)	JMP	276
	0x0725 01829 (<autogenerated>:1)	JMP	214
	0x072a 01834 (<autogenerated>:1)	JMP	152
	0x072f 01839 (<autogenerated>:1)	NOP
	0x072f 01839 (<autogenerated>:1)	PCDATA	$1, $-1
	0x072f 01839 (<autogenerated>:1)	PCDATA	$0, $-1
	0x072f 01839 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0734 01844 (<autogenerated>:1)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 1c  eH..%....H;a....
	0x0010 07 00 00 48 83 ec 58 48 89 6c 24 50 48 8d 6c 24  ...H..XH.l$PH.l$
	0x0020 50 c6 44 24 70 00 48 8b 44 24 60 48 89 44 24 48  P.D$p.H.D$`H.D$H
	0x0030 48 8b 44 24 68 48 89 44 24 40 48 8b 4c 24 48 48  H.D$hH.D$@H.L$HH
	0x0040 89 0c 24 48 89 44 24 08 48 c7 44 24 10 d0 00 00  ..$H.D$.H.D$....
	0x0050 00 e8 00 00 00 00 0f b6 44 24 18 88 44 24 2c 88  ........D$..D$,.
	0x0060 44 24 2d 84 c0 75 05 e9 be 06 00 00 48 8b 44 24  D$-..u......H.D$
	0x0070 60 f2 0f 10 80 d0 00 00 00 48 8b 44 24 68 f2 0f  `........H.D$h..
	0x0080 10 88 d0 00 00 00 66 0f 2e c1 0f 94 c1 0f 9b c0  ......f.........
	0x0090 21 c1 88 4c 24 2d eb 00 0f b6 44 24 2d 88 44 24  !..L$-....D$-.D$
	0x00a0 2e 84 c0 75 05 e9 7b 06 00 00 48 8b 44 24 60 f2  ...u..{...H.D$`.
	0x00b0 0f 10 80 d8 00 00 00 48 8b 44 24 68 f2 0f 10 88  .......H.D$h....
	0x00c0 d8 00 00 00 66 0f 2e c1 0f 94 c1 0f 9b c0 21 c1  ....f.........!.
	0x00d0 88 4c 24 2e eb 00 0f b6 44 24 2e 88 44 24 2f 84  .L$.....D$..D$/.
	0x00e0 c0 75 05 e9 38 06 00 00 48 8b 44 24 60 f2 0f 10  .u..8...H.D$`...
	0x00f0 80 e0 00 00 00 48 8b 44 24 68 f2 0f 10 88 e0 00  .....H.D$h......
	0x0100 00 00 66 0f 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c  ..f.........!..L
	0x0110 24 2f eb 00 0f b6 44 24 2f 88 44 24 30 84 c0 75  $/....D$/.D$0..u
	0x0120 05 e9 f5 05 00 00 48 8b 44 24 60 f2 0f 10 80 e8  ......H.D$`.....
	0x0130 00 00 00 48 8b 44 24 68 f2 0f 10 88 e8 00 00 00  ...H.D$h........
	0x0140 66 0f 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c 24 30  f.........!..L$0
	0x0150 eb 00 0f b6 44 24 30 88 44 24 31 84 c0 75 05 e9  ....D$0.D$1..u..
	0x0160 b2 05 00 00 48 8b 44 24 60 f2 0f 10 80 f0 00 00  ....H.D$`.......
	0x0170 00 48 8b 44 24 68 f2 0f 10 88 f0 00 00 00 66 0f  .H.D$h........f.
	0x0180 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c 24 31 eb 00  ........!..L$1..
	0x0190 0f b6 44 24 31 88 44 24 32 84 c0 75 05 e9 6f 05  ..D$1.D$2..u..o.
	0x01a0 00 00 48 8b 44 24 60 f2 0f 10 80 f8 00 00 00 48  ..H.D$`........H
	0x01b0 8b 44 24 68 f2 0f 10 88 f8 00 00 00 66 0f 2e c1  .D$h........f...
	0x01c0 0f 94 c1 0f 9b c0 21 c1 88 4c 24 32 eb 00 0f b6  ......!..L$2....
	0x01d0 44 24 32 88 44 24 33 84 c0 75 05 e9 2c 05 00 00  D$2.D$3..u..,...
	0x01e0 48 8b 44 24 60 f2 0f 10 80 00 01 00 00 48 8b 44  H.D$`........H.D
	0x01f0 24 68 f2 0f 10 88 00 01 00 00 66 0f 2e c1 0f 94  $h........f.....
	0x0200 c1 0f 9b c0 21 c1 88 4c 24 33 eb 00 0f b6 44 24  ....!..L$3....D$
	0x0210 33 88 44 24 34 84 c0 75 05 e9 e9 04 00 00 48 8b  3.D$4..u......H.
	0x0220 44 24 60 f2 0f 10 80 08 01 00 00 48 8b 44 24 68  D$`........H.D$h
	0x0230 f2 0f 10 88 08 01 00 00 66 0f 2e c1 0f 94 c1 0f  ........f.......
	0x0240 9b c0 21 c1 88 4c 24 34 eb 00 0f b6 44 24 34 88  ..!..L$4....D$4.
	0x0250 44 24 35 84 c0 75 05 e9 a6 04 00 00 48 8b 44 24  D$5..u......H.D$
	0x0260 60 f2 0f 10 80 10 01 00 00 48 8b 44 24 68 f2 0f  `........H.D$h..
	0x0270 10 88 10 01 00 00 66 0f 2e c1 0f 94 c1 0f 9b c0  ......f.........
	0x0280 21 c1 88 4c 24 35 eb 00 0f b6 44 24 35 88 44 24  !..L$5....D$5.D$
	0x0290 36 84 c0 75 05 e9 63 04 00 00 48 8b 44 24 60 f2  6..u..c...H.D$`.
	0x02a0 0f 10 80 18 01 00 00 48 8b 44 24 68 f2 0f 10 88  .......H.D$h....
	0x02b0 18 01 00 00 66 0f 2e c1 0f 94 c1 0f 9b c0 21 c1  ....f.........!.
	0x02c0 88 4c 24 36 eb 00 0f b6 44 24 36 88 44 24 37 84  .L$6....D$6.D$7.
	0x02d0 c0 75 05 e9 20 04 00 00 48 8b 44 24 60 f2 0f 10  .u.. ...H.D$`...
	0x02e0 80 20 01 00 00 48 8b 44 24 68 f2 0f 10 88 20 01  . ...H.D$h.... .
	0x02f0 00 00 66 0f 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c  ..f.........!..L
	0x0300 24 37 eb 00 0f b6 44 24 37 88 44 24 38 84 c0 75  $7....D$7.D$8..u
	0x0310 05 e9 dd 03 00 00 48 8b 44 24 60 f2 0f 10 80 28  ......H.D$`....(
	0x0320 01 00 00 48 8b 44 24 68 f2 0f 10 88 28 01 00 00  ...H.D$h....(...
	0x0330 66 0f 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c 24 38  f.........!..L$8
	0x0340 eb 00 0f b6 44 24 38 88 44 24 39 84 c0 75 05 e9  ....D$8.D$9..u..
	0x0350 9a 03 00 00 48 8b 44 24 60 f2 0f 10 80 30 01 00  ....H.D$`....0..
	0x0360 00 48 8b 44 24 68 f2 0f 10 88 30 01 00 00 66 0f  .H.D$h....0...f.
	0x0370 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c 24 39 eb 00  ........!..L$9..
	0x0380 0f b6 44 24 39 88 44 24 3a 84 c0 75 05 e9 57 03  ..D$9.D$:..u..W.
	0x0390 00 00 48 8b 44 24 60 f2 0f 10 80 38 01 00 00 48  ..H.D$`....8...H
	0x03a0 8b 44 24 68 f2 0f 10 88 38 01 00 00 66 0f 2e c1  .D$h....8...f...
	0x03b0 0f 94 c1 0f 9b c0 21 c1 88 4c 24 3a eb 00 0f b6  ......!..L$:....
	0x03c0 44 24 3a 88 44 24 3b 84 c0 75 05 e9 14 03 00 00  D$:.D$;..u......
	0x03d0 48 8b 44 24 60 f2 0f 10 80 40 01 00 00 48 8b 44  H.D$`....@...H.D
	0x03e0 24 68 f2 0f 10 88 40 01 00 00 66 0f 2e c1 0f 94  $h....@...f.....
	0x03f0 c1 0f 9b c0 21 c1 88 4c 24 3b eb 00 0f b6 44 24  ....!..L$;....D$
	0x0400 3b 88 44 24 3c 84 c0 75 05 e9 d1 02 00 00 48 8b  ;.D$<..u......H.
	0x0410 44 24 60 f2 0f 10 80 48 01 00 00 48 8b 44 24 68  D$`....H...H.D$h
	0x0420 f2 0f 10 88 48 01 00 00 66 0f 2e c1 0f 94 c1 0f  ....H...f.......
	0x0430 9b c0 21 c1 88 4c 24 3c eb 00 0f b6 44 24 3c 88  ..!..L$<....D$<.
	0x0440 44 24 3d 84 c0 75 05 e9 8e 02 00 00 48 8b 44 24  D$=..u......H.D$
	0x0450 60 f2 0f 10 80 50 01 00 00 48 8b 44 24 68 f2 0f  `....P...H.D$h..
	0x0460 10 88 50 01 00 00 66 0f 2e c1 0f 94 c1 0f 9b c0  ..P...f.........
	0x0470 21 c1 88 4c 24 3d eb 00 0f b6 44 24 3d 88 44 24  !..L$=....D$=.D$
	0x0480 3e 84 c0 75 05 e9 4b 02 00 00 48 8b 44 24 60 f2  >..u..K...H.D$`.
	0x0490 0f 10 80 58 01 00 00 48 8b 44 24 68 f2 0f 10 88  ...X...H.D$h....
	0x04a0 58 01 00 00 66 0f 2e c1 0f 94 c1 0f 9b c0 21 c1  X...f.........!.
	0x04b0 88 4c 24 3e eb 00 0f b6 44 24 3e 88 44 24 3f 84  .L$>....D$>.D$?.
	0x04c0 c0 75 05 e9 08 02 00 00 48 8b 44 24 60 f2 0f 10  .u......H.D$`...
	0x04d0 80 60 01 00 00 48 8b 44 24 68 f2 0f 10 88 60 01  .`...H.D$h....`.
	0x04e0 00 00 66 0f 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c  ..f.........!..L
	0x04f0 24 3f eb 00 0f b6 44 24 3f 88 44 24 25 84 c0 75  $?....D$?.D$%..u
	0x0500 05 e9 c5 01 00 00 48 8b 44 24 60 f2 0f 10 80 68  ......H.D$`....h
	0x0510 01 00 00 48 8b 44 24 68 f2 0f 10 88 68 01 00 00  ...H.D$h....h...
	0x0520 66 0f 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c 24 25  f.........!..L$%
	0x0530 eb 00 0f b6 44 24 25 88 44 24 26 84 c0 75 05 e9  ....D$%.D$&..u..
	0x0540 82 01 00 00 48 8b 44 24 60 f2 0f 10 80 70 01 00  ....H.D$`....p..
	0x0550 00 48 8b 44 24 68 f2 0f 10 88 70 01 00 00 66 0f  .H.D$h....p...f.
	0x0560 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c 24 26 eb 00  ........!..L$&..
	0x0570 0f b6 44 24 26 88 44 24 27 84 c0 75 05 e9 3f 01  ..D$&.D$'..u..?.
	0x0580 00 00 48 8b 44 24 60 f2 0f 10 80 78 01 00 00 48  ..H.D$`....x...H
	0x0590 8b 44 24 68 f2 0f 10 88 78 01 00 00 66 0f 2e c1  .D$h....x...f...
	0x05a0 0f 94 c1 0f 9b c0 21 c1 88 4c 24 27 eb 00 0f b6  ......!..L$'....
	0x05b0 44 24 27 88 44 24 28 84 c0 75 05 e9 fc 00 00 00  D$'.D$(..u......
	0x05c0 48 8b 44 24 60 f2 0f 10 80 80 01 00 00 48 8b 44  H.D$`........H.D
	0x05d0 24 68 f2 0f 10 88 80 01 00 00 66 0f 2e c1 0f 94  $h........f.....
	0x05e0 c1 0f 9b c0 21 c1 88 4c 24 28 eb 00 0f b6 44 24  ....!..L$(....D$
	0x05f0 28 88 44 24 29 84 c0 75 05 e9 b9 00 00 00 48 8b  (.D$)..u......H.
	0x0600 44 24 60 f2 0f 10 80 88 01 00 00 48 8b 44 24 68  D$`........H.D$h
	0x0610 f2 0f 10 88 88 01 00 00 66 0f 2e c1 0f 94 c1 0f  ........f.......
	0x0620 9b c0 21 c1 88 4c 24 29 eb 00 0f b6 44 24 29 88  ..!..L$)....D$).
	0x0630 44 24 2a 84 c0 75 02 eb 7c 48 8b 44 24 60 f2 0f  D$*..u..|H.D$`..
	0x0640 10 80 90 01 00 00 48 8b 44 24 68 f2 0f 10 88 90  ......H.D$h.....
	0x0650 01 00 00 66 0f 2e c1 0f 94 c1 0f 9b c0 21 c1 88  ...f.........!..
	0x0660 4c 24 2a eb 00 0f b6 44 24 2a 88 44 24 2b 84 c0  L$*....D$*.D$+..
	0x0670 75 02 eb 3f 48 8b 44 24 60 f2 0f 10 80 98 01 00  u..?H.D$`.......
	0x0680 00 48 8b 44 24 68 f2 0f 10 88 98 01 00 00 66 0f  .H.D$h........f.
	0x0690 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c 24 2b eb 00  ........!..L$+..
	0x06a0 0f b6 44 24 2b 88 44 24 70 48 8b 6c 24 50 48 83  ..D$+.D$pH.l$PH.
	0x06b0 c4 58 c3 eb eb eb ae e9 6e ff ff ff e9 2b ff ff  .X......n....+..
	0x06c0 ff e9 e8 fe ff ff e9 a5 fe ff ff e9 62 fe ff ff  ............b...
	0x06d0 e9 1f fe ff ff e9 dc fd ff ff e9 99 fd ff ff e9  ................
	0x06e0 56 fd ff ff e9 13 fd ff ff e9 d0 fc ff ff e9 8d  V...............
	0x06f0 fc ff ff e9 4a fc ff ff e9 07 fc ff ff e9 c4 fb  ....J...........
	0x0700 ff ff e9 81 fb ff ff e9 3e fb ff ff e9 fb fa ff  ........>.......
	0x0710 ff e9 b8 fa ff ff e9 75 fa ff ff e9 32 fa ff ff  .......u....2...
	0x0720 e9 ef f9 ff ff e9 ac f9 ff ff e9 69 f9 ff ff e8  ...........i....
	0x0730 00 00 00 00 e9 c7 f8 ff ff                       .........
	rel 5+4 t=16 TLS+0
	rel 82+4 t=8 runtime.memequal+0
	rel 1840+4 t=8 runtime.morestack_noctxt+0
type..hash."".micro STEXT dupok size=158 args=0x18 locals=0x38
	0x0000 00000 (<autogenerated>:1)	TEXT	type..hash."".micro(SB), DUPOK|ABIInternal, $56-24
	0x0000 00000 (<autogenerated>:1)	MOVQ	(TLS), CX
	0x0009 00009 (<autogenerated>:1)	CMPQ	SP, 16(CX)
	0x000d 00013 (<autogenerated>:1)	JLS	148
	0x0013 00019 (<autogenerated>:1)	SUBQ	$56, SP
	0x0017 00023 (<autogenerated>:1)	MOVQ	BP, 48(SP)
	0x001c 00028 (<autogenerated>:1)	LEAQ	48(SP), BP
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$0, gclocals·1a65e721a2ccc325b382662e7ffee780(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$1, gclocals·2589ca35330fc0fce83503f4569854a0(SB)
	0x0021 00033 (<autogenerated>:1)	FUNCDATA	$2, gclocals·9fb7f0986f647f17cb53dda1484e0f7a(SB)
	0x0021 00033 (<autogenerated>:1)	PCDATA	$0, $0
	0x0021 00033 (<autogenerated>:1)	PCDATA	$1, $0
	0x0021 00033 (<autogenerated>:1)	MOVQ	$0, "".~r2+80(SP)
	0x002a 00042 (<autogenerated>:1)	PCDATA	$0, $1
	0x002a 00042 (<autogenerated>:1)	MOVQ	"".p+64(SP), AX
	0x002f 00047 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_3+40(SP)
	0x0034 00052 (<autogenerated>:1)	PCDATA	$0, $0
	0x0034 00052 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x0038 00056 (<autogenerated>:1)	MOVQ	"".h+72(SP), AX
	0x003d 00061 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0042 00066 (<autogenerated>:1)	MOVQ	$8, 16(SP)
	0x004b 00075 (<autogenerated>:1)	CALL	runtime.memhash(SB)
	0x0050 00080 (<autogenerated>:1)	MOVQ	24(SP), AX
	0x0055 00085 (<autogenerated>:1)	MOVQ	AX, "".h+72(SP)
	0x005a 00090 (<autogenerated>:1)	PCDATA	$0, $1
	0x005a 00090 (<autogenerated>:1)	PCDATA	$1, $1
	0x005a 00090 (<autogenerated>:1)	MOVQ	"".p+64(SP), AX
	0x005f 00095 (<autogenerated>:1)	ADDQ	$8, AX
	0x0063 00099 (<autogenerated>:1)	MOVQ	AX, ""..autotmp_4+32(SP)
	0x0068 00104 (<autogenerated>:1)	PCDATA	$0, $0
	0x0068 00104 (<autogenerated>:1)	MOVQ	AX, (SP)
	0x006c 00108 (<autogenerated>:1)	MOVQ	"".h+72(SP), AX
	0x0071 00113 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0076 00118 (<autogenerated>:1)	CALL	runtime.f64hash(SB)
	0x007b 00123 (<autogenerated>:1)	MOVQ	16(SP), AX
	0x0080 00128 (<autogenerated>:1)	MOVQ	AX, "".h+72(SP)
	0x0085 00133 (<autogenerated>:1)	MOVQ	AX, "".~r2+80(SP)
	0x008a 00138 (<autogenerated>:1)	MOVQ	48(SP), BP
	0x008f 00143 (<autogenerated>:1)	ADDQ	$56, SP
	0x0093 00147 (<autogenerated>:1)	RET
	0x0094 00148 (<autogenerated>:1)	NOP
	0x0094 00148 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0094 00148 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0094 00148 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0099 00153 (<autogenerated>:1)	JMP	0
	0x0000 65 48 8b 0c 25 00 00 00 00 48 3b 61 10 0f 86 81  eH..%....H;a....
	0x0010 00 00 00 48 83 ec 38 48 89 6c 24 30 48 8d 6c 24  ...H..8H.l$0H.l$
	0x0020 30 48 c7 44 24 50 00 00 00 00 48 8b 44 24 40 48  0H.D$P....H.D$@H
	0x0030 89 44 24 28 48 89 04 24 48 8b 44 24 48 48 89 44  .D$(H..$H.D$HH.D
	0x0040 24 08 48 c7 44 24 10 08 00 00 00 e8 00 00 00 00  $.H.D$..........
	0x0050 48 8b 44 24 18 48 89 44 24 48 48 8b 44 24 40 48  H.D$.H.D$HH.D$@H
	0x0060 83 c0 08 48 89 44 24 20 48 89 04 24 48 8b 44 24  ...H.D$ H..$H.D$
	0x0070 48 48 89 44 24 08 e8 00 00 00 00 48 8b 44 24 10  HH.D$......H.D$.
	0x0080 48 89 44 24 48 48 89 44 24 50 48 8b 6c 24 30 48  H.D$HH.D$PH.l$0H
	0x0090 83 c4 38 c3 e8 00 00 00 00 e9 62 ff ff ff        ..8.......b...
	rel 5+4 t=16 TLS+0
	rel 76+4 t=8 runtime.memhash+0
	rel 119+4 t=8 runtime.f64hash+0
	rel 149+4 t=8 runtime.morestack_noctxt+0
type..eq."".micro STEXT dupok nosplit size=105 args=0x18 locals=0x10
	0x0000 00000 (<autogenerated>:1)	TEXT	type..eq."".micro(SB), DUPOK|NOSPLIT|ABIInternal, $16-24
	0x0000 00000 (<autogenerated>:1)	SUBQ	$16, SP
	0x0004 00004 (<autogenerated>:1)	MOVQ	BP, 8(SP)
	0x0009 00009 (<autogenerated>:1)	LEAQ	8(SP), BP
	0x000e 00014 (<autogenerated>:1)	FUNCDATA	$0, gclocals·fdbf1f5761f6d17e8ae3f0aaecb6a3c5(SB)
	0x000e 00014 (<autogenerated>:1)	FUNCDATA	$1, gclocals·7d2d5fca80364273fb07d5820a76fef4(SB)
	0x000e 00014 (<autogenerated>:1)	FUNCDATA	$2, gclocals·bfec7e55b3f043d1941c093912808913(SB)
	0x000e 00014 (<autogenerated>:1)	PCDATA	$0, $0
	0x000e 00014 (<autogenerated>:1)	PCDATA	$1, $0
	0x000e 00014 (<autogenerated>:1)	MOVB	$0, "".~r2+40(SP)
	0x0013 00019 (<autogenerated>:1)	PCDATA	$0, $1
	0x0013 00019 (<autogenerated>:1)	MOVQ	"".p+24(SP), AX
	0x0018 00024 (<autogenerated>:1)	PCDATA	$0, $2
	0x0018 00024 (<autogenerated>:1)	MOVQ	"".q+32(SP), CX
	0x001d 00029 (<autogenerated>:1)	PCDATA	$0, $1
	0x001d 00029 (<autogenerated>:1)	MOVQ	(CX), CX
	0x0020 00032 (<autogenerated>:1)	PCDATA	$0, $0
	0x0020 00032 (<autogenerated>:1)	CMPQ	(AX), CX
	0x0023 00035 (<autogenerated>:1)	SETEQ	AL
	0x0026 00038 (<autogenerated>:1)	MOVB	AL, ""..autotmp_3+7(SP)
	0x002a 00042 (<autogenerated>:1)	JEQ	46
	0x002c 00044 (<autogenerated>:1)	JMP	103
	0x002e 00046 (<autogenerated>:1)	PCDATA	$0, $1
	0x002e 00046 (<autogenerated>:1)	PCDATA	$1, $1
	0x002e 00046 (<autogenerated>:1)	MOVQ	"".p+24(SP), AX
	0x0033 00051 (<autogenerated>:1)	PCDATA	$0, $0
	0x0033 00051 (<autogenerated>:1)	MOVSD	8(AX), X0
	0x0038 00056 (<autogenerated>:1)	PCDATA	$0, $1
	0x0038 00056 (<autogenerated>:1)	PCDATA	$1, $2
	0x0038 00056 (<autogenerated>:1)	MOVQ	"".q+32(SP), AX
	0x003d 00061 (<autogenerated>:1)	PCDATA	$0, $0
	0x003d 00061 (<autogenerated>:1)	MOVSD	8(AX), X1
	0x0042 00066 (<autogenerated>:1)	UCOMISD	X1, X0
	0x0046 00070 (<autogenerated>:1)	SETEQ	CL
	0x0049 00073 (<autogenerated>:1)	SETPC	AL
	0x004c 00076 (<autogenerated>:1)	ANDL	AX, CX
	0x004e 00078 (<autogenerated>:1)	MOVB	CL, ""..autotmp_3+7(SP)
	0x0052 00082 (<autogenerated>:1)	JMP	84
	0x0054 00084 (<autogenerated>:1)	MOVBLZX	""..autotmp_3+7(SP), AX
	0x0059 00089 (<autogenerated>:1)	MOVB	AL, "".~r2+40(SP)
	0x005d 00093 (<autogenerated>:1)	MOVQ	8(SP), BP
	0x0062 00098 (<autogenerated>:1)	ADDQ	$16, SP
	0x0066 00102 (<autogenerated>:1)	RET
	0x0067 00103 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0067 00103 (<autogenerated>:1)	PCDATA	$1, $-2
	0x0067 00103 (<autogenerated>:1)	JMP	84
	0x0000 48 83 ec 10 48 89 6c 24 08 48 8d 6c 24 08 c6 44  H...H.l$.H.l$..D
	0x0010 24 28 00 48 8b 44 24 18 48 8b 4c 24 20 48 8b 09  $(.H.D$.H.L$ H..
	0x0020 48 39 08 0f 94 c0 88 44 24 07 74 02 eb 39 48 8b  H9.....D$.t..9H.
	0x0030 44 24 18 f2 0f 10 40 08 48 8b 44 24 20 f2 0f 10  D$....@.H.D$ ...
	0x0040 48 08 66 0f 2e c1 0f 94 c1 0f 9b c0 21 c1 88 4c  H.f.........!..L
	0x0050 24 07 eb 00 0f b6 44 24 07 88 44 24 28 48 8b 6c  $.....D$..D$(H.l
	0x0060 24 08 48 83 c4 10 c3 eb eb                       $.H......
go.cuinfo.packagename. SDWARFINFO dupok size=0
	0x0000 63 6f 64 65                                      code
go.info.math/rand.Int63$abstract SDWARFINFO dupok size=20
	0x0000 04 6d 61 74 68 2f 72 61 6e 64 2e 49 6e 74 36 33  .math/rand.Int63
	0x0010 00 01 01 00                                      ....
go.info.math/rand.(*Rand).Int63$abstract SDWARFINFO dupok size=36
	0x0000 04 6d 61 74 68 2f 72 61 6e 64 2e 28 2a 52 61 6e  .math/rand.(*Ran
	0x0010 64 29 2e 49 6e 74 36 33 00 01 01 11 72 00 00 00  d).Int63....r...
	0x0020 00 00 00 00                                      ....
	rel 31+4 t=28 go.info.*math/rand.Rand+0
go.info."".avoidCompilerOptimisation$abstract SDWARFINFO dupok size=49
	0x0000 04 2e 61 76 6f 69 64 43 6f 6d 70 69 6c 65 72 4f  ..avoidCompilerO
	0x0010 70 74 69 6d 69 73 61 74 69 6f 6e 00 01 01 11 66  ptimisation....f
	0x0020 00 00 00 00 00 00 11 65 72 72 00 00 00 00 00 00  .......err......
	0x0030 00                                               .
	rel 34+4 t=28 go.info.float64+0
	rel 44+4 t=28 go.info.error+0
go.info.errors.New$abstract SDWARFINFO dupok size=26
	0x0000 04 65 72 72 6f 72 73 2e 4e 65 77 00 01 01 11 74  .errors.New....t
	0x0010 65 78 74 00 00 00 00 00 00 00                    ext.......
	rel 21+4 t=28 go.info.string+0
go.info."".calcMicro$abstract SDWARFINFO dupok size=23
	0x0000 04 2e 63 61 6c 63 4d 69 63 72 6f 00 01 01 11 6f  ..calcMicro....o
	0x0010 00 00 00 00 00 00 00                             .......
	rel 18+4 t=28 go.info."".micro+0
go.info."".calcMicroP$abstract SDWARFINFO dupok size=24
	0x0000 04 2e 63 61 6c 63 4d 69 63 72 6f 50 00 01 01 11  ..calcMicroP....
	0x0010 6f 00 00 00 00 00 00 00                          o.......
	rel 19+4 t=28 go.info.*"".micro+0
go.info.strconv.Itoa$abstract SDWARFINFO dupok size=25
	0x0000 04 73 74 72 63 6f 6e 76 2e 49 74 6f 61 00 01 01  .strconv.Itoa...
	0x0010 11 69 00 00 00 00 00 00 00                       .i.......
	rel 20+4 t=28 go.info.int+0
go.info."".calcTiny$abstract SDWARFINFO dupok size=22
	0x0000 04 2e 63 61 6c 63 54 69 6e 79 00 01 01 11 6f 00  ..calcTiny....o.
	0x0010 00 00 00 00 00 00                                ......
	rel 17+4 t=28 go.info."".tiny+0
go.info."".calcTinyP$abstract SDWARFINFO dupok size=23
	0x0000 04 2e 63 61 6c 63 54 69 6e 79 50 00 01 01 11 6f  ..calcTinyP....o
	0x0010 00 00 00 00 00 00 00                             .......
	rel 18+4 t=28 go.info.*"".tiny+0
go.info."".calcMini$abstract SDWARFINFO dupok size=22
	0x0000 04 2e 63 61 6c 63 4d 69 6e 69 00 01 01 11 6f 00  ..calcMini....o.
	0x0010 00 00 00 00 00 00                                ......
	rel 17+4 t=28 go.info."".mini+0
go.info."".calcMiniP$abstract SDWARFINFO dupok size=23
	0x0000 04 2e 63 61 6c 63 4d 69 6e 69 50 00 01 01 11 6f  ..calcMiniP....o
	0x0010 00 00 00 00 00 00 00                             .......
	rel 18+4 t=28 go.info.*"".mini+0
go.info."".calcMega$abstract SDWARFINFO dupok size=22
	0x0000 04 2e 63 61 6c 63 4d 65 67 61 00 01 01 11 6f 00  ..calcMega....o.
	0x0010 00 00 00 00 00 00                                ......
	rel 17+4 t=28 go.info."".mega+0
go.info."".calcMegaP$abstract SDWARFINFO dupok size=23
	0x0000 04 2e 63 61 6c 63 4d 65 67 61 50 00 01 01 11 6f  ..calcMegaP....o
	0x0010 00 00 00 00 00 00 00                             .......
	rel 18+4 t=28 go.info.*"".mega+0
go.info."".calcTera$abstract SDWARFINFO dupok size=22
	0x0000 04 2e 63 61 6c 63 54 65 72 61 00 01 01 11 6f 00  ..calcTera....o.
	0x0010 00 00 00 00 00 00                                ......
	rel 17+4 t=28 go.info."".tera+0
go.info."".calcTeraP$abstract SDWARFINFO dupok size=23
	0x0000 04 2e 63 61 6c 63 54 65 72 61 50 00 01 01 11 6f  ..calcTeraP....o
	0x0010 00 00 00 00 00 00 00                             .......
	rel 18+4 t=28 go.info.*"".tera+0
go.info.time.Duration.Microseconds$abstract SDWARFINFO dupok size=39
	0x0000 04 74 69 6d 65 2e 44 75 72 61 74 69 6f 6e 2e 4d  .time.Duration.M
	0x0010 69 63 72 6f 73 65 63 6f 6e 64 73 00 01 01 11 64  icroseconds....d
	0x0020 00 00 00 00 00 00 00                             .......
	rel 34+4 t=28 go.info.time.Duration+0
go.info.context.Background$abstract SDWARFINFO dupok size=23
	0x0000 04 63 6f 6e 74 65 78 74 2e 42 61 63 6b 67 72 6f  .context.Backgro
	0x0010 75 6e 64 00 01 01 00                             und....
go.info.time.After$abstract SDWARFINFO dupok size=23
	0x0000 04 74 69 6d 65 2e 41 66 74 65 72 00 01 01 11 64  .time.After....d
	0x0010 00 00 00 00 00 00 00                             .......
	rel 18+4 t=28 go.info.time.Duration+0
go.info.time.Duration.Milliseconds$abstract SDWARFINFO dupok size=39
	0x0000 04 74 69 6d 65 2e 44 75 72 61 74 69 6f 6e 2e 4d  .time.Duration.M
	0x0010 69 6c 6c 69 73 65 63 6f 6e 64 73 00 01 01 11 64  illiseconds....d
	0x0020 00 00 00 00 00 00 00                             .......
	rel 34+4 t=28 go.info.time.Duration+0
go.info.fmt.Printf$abstract SDWARFINFO dupok size=54
	0x0000 04 66 6d 74 2e 50 72 69 6e 74 66 00 01 01 11 66  .fmt.Printf....f
	0x0010 6f 72 6d 61 74 00 00 00 00 00 00 11 61 00 00 00  ormat.......a...
	0x0020 00 00 00 11 6e 00 01 00 00 00 00 11 65 72 72 00  ....n.......err.
	0x0030 01 00 00 00 00 00                                ......
	rel 23+4 t=28 go.info.string+0
	rel 31+4 t=28 go.info.[]interface {}+0
	rel 39+4 t=28 go.info.int+0
	rel 49+4 t=28 go.info.error+0
go.info.fmt.Println$abstract SDWARFINFO dupok size=42
	0x0000 04 66 6d 74 2e 50 72 69 6e 74 6c 6e 00 01 01 11  .fmt.Println....
	0x0010 61 00 00 00 00 00 00 11 6e 00 01 00 00 00 00 11  a.......n.......
	0x0020 65 72 72 00 01 00 00 00 00 00                    err.......
	rel 19+4 t=28 go.info.[]interface {}+0
	rel 27+4 t=28 go.info.int+0
	rel 37+4 t=28 go.info.error+0
go.loc."".gigantic.get_a SDWARFLOC dupok size=0
go.info."".gigantic.get_a SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 61 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _a..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 f4  ..........~r0...
	0x0040 01 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_a+0
	rel 27+8 t=1 "".gigantic.get_a+116
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_a SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_a SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 14 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_aa SDWARFLOC dupok size=0
go.info."".gigantic.get_aa SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 61 61 00 00 00 00 00 00 00 00 00 00 00 00 00  _aa.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 8e 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_aa+0
	rel 28+8 t=1 "".gigantic.get_aa+119
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_aa SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_aa SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1a 02 02 01 1c 02 16 00     ...............
go.loc."".gigantic.get_b SDWARFLOC dupok size=0
go.info."".gigantic.get_b SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 62 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _b..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 f5  ..........~r0...
	0x0040 01 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_b+0
	rel 27+8 t=1 "".gigantic.get_b+116
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_b SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_b SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 14 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_bb SDWARFLOC dupok size=0
go.info."".gigantic.get_bb SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 62 62 00 00 00 00 00 00 00 00 00 00 00 00 00  _bb.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 8f 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_bb+0
	rel 28+8 t=1 "".gigantic.get_bb+119
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_bb SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_bb SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1a 02 02 01 1c 02 16 00     ...............
go.loc."".gigantic.get_c SDWARFLOC dupok size=0
go.info."".gigantic.get_c SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 63 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _c..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 f6  ..........~r0...
	0x0040 01 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_c+0
	rel 27+8 t=1 "".gigantic.get_c+116
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_c SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_c SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 14 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_cc SDWARFLOC dupok size=0
go.info."".gigantic.get_cc SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 63 63 00 00 00 00 00 00 00 00 00 00 00 00 00  _cc.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 90 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_cc+0
	rel 28+8 t=1 "".gigantic.get_cc+119
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_cc SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_cc SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1a 02 02 01 1c 02 16 00     ...............
go.loc."".gigantic.get_d SDWARFLOC dupok size=0
go.info."".gigantic.get_d SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 64 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _d..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 f7  ..........~r0...
	0x0040 01 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_d+0
	rel 27+8 t=1 "".gigantic.get_d+116
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_d SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_d SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 14 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_dd SDWARFLOC dupok size=0
go.info."".gigantic.get_dd SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 64 64 00 00 00 00 00 00 00 00 00 00 00 00 00  _dd.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 91 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_dd+0
	rel 28+8 t=1 "".gigantic.get_dd+119
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_dd SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_dd SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1a 02 02 01 1c 02 16 00     ...............
go.loc."".gigantic.get_e SDWARFLOC dupok size=0
go.info."".gigantic.get_e SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 65 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _e..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 f8  ..........~r0...
	0x0040 01 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_e+0
	rel 27+8 t=1 "".gigantic.get_e+116
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_e SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_e SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 14 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_ee SDWARFLOC dupok size=0
go.info."".gigantic.get_ee SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 65 65 00 00 00 00 00 00 00 00 00 00 00 00 00  _ee.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 92 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_ee+0
	rel 28+8 t=1 "".gigantic.get_ee+119
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_ee SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_ee SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1a 02 02 01 1c 02 16 00     ...............
go.loc."".gigantic.get_f SDWARFLOC dupok size=0
go.info."".gigantic.get_f SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 66 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _f..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 f9  ..........~r0...
	0x0040 01 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_f+0
	rel 27+8 t=1 "".gigantic.get_f+116
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_f SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_f SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 14 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_ff SDWARFLOC dupok size=0
go.info."".gigantic.get_ff SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 66 66 00 00 00 00 00 00 00 00 00 00 00 00 00  _ff.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 93 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_ff+0
	rel 28+8 t=1 "".gigantic.get_ff+119
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_ff SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_ff SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1a 02 02 01 1c 02 16 00     ...............
go.loc."".gigantic.get_g SDWARFLOC dupok size=0
go.info."".gigantic.get_g SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 67 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _g..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 fa  ..........~r0...
	0x0040 01 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_g+0
	rel 27+8 t=1 "".gigantic.get_g+116
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_g SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_g SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 14 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_gg SDWARFLOC dupok size=0
go.info."".gigantic.get_gg SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 67 67 00 00 00 00 00 00 00 00 00 00 00 00 00  _gg.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 94 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_gg+0
	rel 28+8 t=1 "".gigantic.get_gg+122
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_gg SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_gg SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1d 02 02 01 1c 02 16 00     ...............
go.loc."".gigantic.get_h SDWARFLOC dupok size=0
go.info."".gigantic.get_h SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 68 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _h..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 fb  ..........~r0...
	0x0040 01 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_h+0
	rel 27+8 t=1 "".gigantic.get_h+119
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_h SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_h SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 17 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_hh SDWARFLOC dupok size=0
go.info."".gigantic.get_hh SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 68 68 00 00 00 00 00 00 00 00 00 00 00 00 00  _hh.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 95 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_hh+0
	rel 28+8 t=1 "".gigantic.get_hh+122
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_hh SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_hh SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1d 02 02 01 1c 02 16 00     ...............
go.loc."".gigantic.get_i SDWARFLOC dupok size=0
go.info."".gigantic.get_i SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 69 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _i..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 fc  ..........~r0...
	0x0040 01 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_i+0
	rel 27+8 t=1 "".gigantic.get_i+119
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_i SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_i SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 17 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_ii SDWARFLOC dupok size=0
go.info."".gigantic.get_ii SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 69 69 00 00 00 00 00 00 00 00 00 00 00 00 00  _ii.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 96 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_ii+0
	rel 28+8 t=1 "".gigantic.get_ii+122
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_ii SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_ii SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1d 02 02 01 1c 02 16 00     ...............
go.loc."".gigantic.get_j SDWARFLOC dupok size=0
go.info."".gigantic.get_j SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 6a 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _j..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 fd  ..........~r0...
	0x0040 01 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_j+0
	rel 27+8 t=1 "".gigantic.get_j+119
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_j SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_j SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 17 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_jj SDWARFLOC dupok size=0
go.info."".gigantic.get_jj SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 6a 6a 00 00 00 00 00 00 00 00 00 00 00 00 00  _jj.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 97 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_jj+0
	rel 28+8 t=1 "".gigantic.get_jj+122
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_jj SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_jj SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1d 02 02 01 1c 02 16 00     ...............
go.loc."".gigantic.get_k SDWARFLOC dupok size=0
go.info."".gigantic.get_k SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 6b 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _k..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 fe  ..........~r0...
	0x0040 01 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_k+0
	rel 27+8 t=1 "".gigantic.get_k+119
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_k SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_k SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 17 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_kk SDWARFLOC dupok size=0
go.info."".gigantic.get_kk SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 6b 6b 00 00 00 00 00 00 00 00 00 00 00 00 00  _kk.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 98 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_kk+0
	rel 28+8 t=1 "".gigantic.get_kk+122
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_kk SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_kk SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1d 02 02 01 1c 02 16 00     ...............
go.loc."".gigantic.get_l SDWARFLOC dupok size=0
go.info."".gigantic.get_l SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 6c 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _l..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 ff  ..........~r0...
	0x0040 01 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_l+0
	rel 27+8 t=1 "".gigantic.get_l+119
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_l SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_l SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 17 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_ll SDWARFLOC dupok size=0
go.info."".gigantic.get_ll SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 6c 6c 00 00 00 00 00 00 00 00 00 00 00 00 00  _ll.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 99 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_ll+0
	rel 28+8 t=1 "".gigantic.get_ll+122
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_ll SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_ll SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1d 02 02 01 1c 02 16 00     ...............
go.loc."".gigantic.get_m SDWARFLOC dupok size=0
go.info."".gigantic.get_m SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 6d 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _m..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 80  ..........~r0...
	0x0040 02 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_m+0
	rel 27+8 t=1 "".gigantic.get_m+119
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_m SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_m SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 17 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_mm SDWARFLOC dupok size=0
go.info."".gigantic.get_mm SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 6d 6d 00 00 00 00 00 00 00 00 00 00 00 00 00  _mm.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 9a 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_mm+0
	rel 28+8 t=1 "".gigantic.get_mm+122
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_mm SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_mm SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1d 02 02 01 1c 02 16 00     ...............
go.loc."".gigantic.get_n SDWARFLOC dupok size=0
go.info."".gigantic.get_n SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 6e 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _n..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 81  ..........~r0...
	0x0040 02 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_n+0
	rel 27+8 t=1 "".gigantic.get_n+119
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_n SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_n SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 17 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_nn SDWARFLOC dupok size=0
go.info."".gigantic.get_nn SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 6e 6e 00 00 00 00 00 00 00 00 00 00 00 00 00  _nn.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 9b 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_nn+0
	rel 28+8 t=1 "".gigantic.get_nn+122
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_nn SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_nn SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1d 02 02 01 1c 02 16 00     ...............
go.loc."".gigantic.get_o SDWARFLOC dupok size=0
go.info."".gigantic.get_o SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 6f 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _o..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 82  ..........~r0...
	0x0040 02 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_o+0
	rel 27+8 t=1 "".gigantic.get_o+119
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_o SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_o SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 17 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_oo SDWARFLOC dupok size=0
go.info."".gigantic.get_oo SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 6f 6f 00 00 00 00 00 00 00 00 00 00 00 00 00  _oo.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 9c 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_oo+0
	rel 28+8 t=1 "".gigantic.get_oo+122
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_oo SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_oo SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1d 02 02 01 1c 02 16 00     ...............
go.loc."".gigantic.get_p SDWARFLOC dupok size=0
go.info."".gigantic.get_p SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 70 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _p..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 83  ..........~r0...
	0x0040 02 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_p+0
	rel 27+8 t=1 "".gigantic.get_p+119
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_p SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_p SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 17 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_pp SDWARFLOC dupok size=0
go.info."".gigantic.get_pp SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 70 70 00 00 00 00 00 00 00 00 00 00 00 00 00  _pp.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 9d 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_pp+0
	rel 28+8 t=1 "".gigantic.get_pp+122
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_pp SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_pp SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1d 02 02 01 1c 02 16 00     ...............
go.loc."".gigantic.get_q SDWARFLOC dupok size=0
go.info."".gigantic.get_q SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 71 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _q..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 84  ..........~r0...
	0x0040 02 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_q+0
	rel 27+8 t=1 "".gigantic.get_q+119
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_q SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_q SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 17 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_qq SDWARFLOC dupok size=0
go.info."".gigantic.get_qq SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 71 71 00 00 00 00 00 00 00 00 00 00 00 00 00  _qq.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 9e 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_qq+0
	rel 28+8 t=1 "".gigantic.get_qq+122
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_qq SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_qq SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1d 02 02 01 1c 02 16 00     ...............
go.loc."".gigantic.get_r SDWARFLOC dupok size=0
go.info."".gigantic.get_r SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 72 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _r..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 85  ..........~r0...
	0x0040 02 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_r+0
	rel 27+8 t=1 "".gigantic.get_r+119
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_r SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_r SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 17 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_rr SDWARFLOC dupok size=0
go.info."".gigantic.get_rr SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 72 72 00 00 00 00 00 00 00 00 00 00 00 00 00  _rr.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 9f 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_rr+0
	rel 28+8 t=1 "".gigantic.get_rr+122
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_rr SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_rr SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1d 02 02 01 1c 02 16 00     ...............
go.loc."".gigantic.get_s SDWARFLOC dupok size=0
go.info."".gigantic.get_s SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 73 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _s..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 86  ..........~r0...
	0x0040 02 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_s+0
	rel 27+8 t=1 "".gigantic.get_s+119
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_s SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_s SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 17 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_ss SDWARFLOC dupok size=0
go.info."".gigantic.get_ss SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 73 73 00 00 00 00 00 00 00 00 00 00 00 00 00  _ss.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 a0 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_ss+0
	rel 28+8 t=1 "".gigantic.get_ss+122
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_ss SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_ss SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1d 02 02 01 1c 02 16 00     ...............
go.loc."".gigantic.get_t SDWARFLOC dupok size=0
go.info."".gigantic.get_t SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 74 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _t..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 87  ..........~r0...
	0x0040 02 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_t+0
	rel 27+8 t=1 "".gigantic.get_t+119
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_t SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_t SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 17 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_tt SDWARFLOC dupok size=0
go.info."".gigantic.get_tt SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 74 74 00 00 00 00 00 00 00 00 00 00 00 00 00  _tt.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 a1 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_tt+0
	rel 28+8 t=1 "".gigantic.get_tt+122
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_tt SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_tt SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1d 02 02 01 1c 02 16 00     ...............
go.loc."".gigantic.get_u SDWARFLOC dupok size=0
go.info."".gigantic.get_u SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 75 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _u..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 88  ..........~r0...
	0x0040 02 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_u+0
	rel 27+8 t=1 "".gigantic.get_u+119
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_u SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_u SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 17 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_uu SDWARFLOC dupok size=0
go.info."".gigantic.get_uu SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 75 75 00 00 00 00 00 00 00 00 00 00 00 00 00  _uu.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 a2 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_uu+0
	rel 28+8 t=1 "".gigantic.get_uu+122
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_uu SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_uu SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1d 02 02 01 1c 02 16 00     ...............
go.loc."".gigantic.get_v SDWARFLOC dupok size=0
go.info."".gigantic.get_v SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 76 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _v..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 89  ..........~r0...
	0x0040 02 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_v+0
	rel 27+8 t=1 "".gigantic.get_v+119
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_v SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_v SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 17 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_vv SDWARFLOC dupok size=0
go.info."".gigantic.get_vv SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 76 76 00 00 00 00 00 00 00 00 00 00 00 00 00  _vv.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 a3 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_vv+0
	rel 28+8 t=1 "".gigantic.get_vv+122
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_vv SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_vv SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1d 02 02 01 1c 02 16 00     ...............
go.loc."".gigantic.get_w SDWARFLOC dupok size=0
go.info."".gigantic.get_w SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 77 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _w..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 8c  ..........~r0...
	0x0040 02 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_w+0
	rel 27+8 t=1 "".gigantic.get_w+119
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_w SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_w SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 17 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_ww SDWARFLOC dupok size=0
go.info."".gigantic.get_ww SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 77 77 00 00 00 00 00 00 00 00 00 00 00 00 00  _ww.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 a6 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_ww+0
	rel 28+8 t=1 "".gigantic.get_ww+122
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_ww SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_ww SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1d 02 02 01 1c 02 16 00     ...............
go.loc."".gigantic.get_x SDWARFLOC dupok size=0
go.info."".gigantic.get_x SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 78 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _x..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 8a  ..........~r0...
	0x0040 02 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_x+0
	rel 27+8 t=1 "".gigantic.get_x+119
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_x SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_x SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 17 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_xx SDWARFLOC dupok size=0
go.info."".gigantic.get_xx SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 78 78 00 00 00 00 00 00 00 00 00 00 00 00 00  _xx.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 a4 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_xx+0
	rel 28+8 t=1 "".gigantic.get_xx+122
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_xx SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_xx SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1d 02 02 01 1c 02 16 00     ...............
go.loc."".gigantic.get_y SDWARFLOC dupok size=0
go.info."".gigantic.get_y SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 79 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _y..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 8b  ..........~r0...
	0x0040 02 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_y+0
	rel 27+8 t=1 "".gigantic.get_y+119
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_y SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_y SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 17 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_yy SDWARFLOC dupok size=0
go.info."".gigantic.get_yy SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 79 79 00 00 00 00 00 00 00 00 00 00 00 00 00  _yy.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 a5 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_yy+0
	rel 28+8 t=1 "".gigantic.get_yy+122
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_yy SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_yy SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1d 02 02 01 1c 02 16 00     ...............
go.loc."".gigantic.get_z SDWARFLOC dupok size=0
go.info."".gigantic.get_z SDWARFINFO dupok size=73
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 7a 00 00 00 00 00 00 00 00 00 00 00 00 00 00  _z..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73  ............this
	0x0030 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 8d  ..........~r0...
	0x0040 02 00 00 00 00 02 91 10 00                       .........
	rel 19+8 t=1 "".gigantic.get_z+0
	rel 27+8 t=1 "".gigantic.get_z+119
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 51+4 t=28 go.info."".gigantic+0
	rel 65+4 t=28 go.info.int64+0
go.range."".gigantic.get_z SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_z SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 17 02 02 01 19 02 16 00     ...............
go.loc."".gigantic.get_zz SDWARFLOC dupok size=0
go.info."".gigantic.get_zz SDWARFINFO dupok size=74
	0x0000 03 22 22 2e 67 69 67 61 6e 74 69 63 2e 67 65 74  ."".gigantic.get
	0x0010 5f 7a 7a 00 00 00 00 00 00 00 00 00 00 00 00 00  _zz.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69  .............thi
	0x0030 73 00 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01  s..........~r0..
	0x0040 a7 02 00 00 00 00 02 91 10 00                    ..........
	rel 20+8 t=1 "".gigantic.get_zz+0
	rel 28+8 t=1 "".gigantic.get_zz+122
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 52+4 t=28 go.info."".gigantic+0
	rel 66+4 t=28 go.info.float64+0
go.range."".gigantic.get_zz SDWARFRANGE dupok size=0
go.isstmt."".gigantic.get_zz SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1d 02 02 01 1c 02 16 00     ...............
go.loc."".obj.GetF SDWARFLOC dupok size=0
go.info."".obj.GetF SDWARFINFO dupok size=66
	0x0000 03 22 22 2e 6f 62 6a 2e 47 65 74 46 00 00 00 00  ."".obj.GetF....
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 00  ................
	0x0020 00 00 00 01 0f 2e 74 68 69 73 00 00 01 00 00 00  ......this......
	0x0030 00 01 9c 0f 7e 72 30 00 01 05 00 00 00 00 02 91  ....~r0.........
	0x0040 10 00                                            ..
	rel 13+8 t=1 "".obj.GetF+0
	rel 21+8 t=1 "".obj.GetF+119
	rel 31+4 t=29 gofile..<autogenerated>+0
	rel 45+4 t=28 go.info."".obj+0
	rel 58+4 t=28 go.info.float64+0
go.range."".obj.GetF SDWARFRANGE dupok size=0
go.isstmt."".obj.GetF SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 1a 02 02 01 1c 02 16 00     ...............
go.loc."".obj.GetI SDWARFLOC dupok size=0
go.info."".obj.GetI SDWARFINFO dupok size=66
	0x0000 03 22 22 2e 6f 62 6a 2e 47 65 74 49 00 00 00 00  ."".obj.GetI....
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 00  ................
	0x0020 00 00 00 01 0f 2e 74 68 69 73 00 00 01 00 00 00  ......this......
	0x0030 00 01 9c 0f 7e 72 30 00 01 04 00 00 00 00 02 91  ....~r0.........
	0x0040 10 00                                            ..
	rel 13+8 t=1 "".obj.GetI+0
	rel 21+8 t=1 "".obj.GetI+116
	rel 31+4 t=29 gofile..<autogenerated>+0
	rel 45+4 t=28 go.info."".obj+0
	rel 58+4 t=28 go.info.int64+0
go.range."".obj.GetI SDWARFRANGE dupok size=0
go.isstmt."".obj.GetI SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 09 01 14 02 02 01 19 02 16 00     ...............
go.loc.go.builtin.error.Error SDWARFLOC dupok size=0
go.info.go.builtin.error.Error SDWARFINFO dupok size=77
	0x0000 03 67 6f 2e 62 75 69 6c 74 69 6e 2e 65 72 72 6f  .go.builtin.erro
	0x0010 72 2e 45 72 72 6f 72 00 00 00 00 00 00 00 00 00  r.Error.........
	0x0020 00 00 00 00 00 00 00 00 01 9c 00 00 00 00 01 0f  ................
	0x0030 2e 74 68 69 73 00 00 01 00 00 00 00 01 9c 0f 7e  .this..........~
	0x0040 72 30 00 01 00 00 00 00 00 02 91 10 00           r0...........
	rel 24+8 t=1 go.builtin.error.Error+0
	rel 32+8 t=1 go.builtin.error.Error+130
	rel 42+4 t=29 gofile..<autogenerated>+0
	rel 56+4 t=28 go.info.error+0
	rel 69+4 t=28 go.info.string+0
go.range.go.builtin.error.Error SDWARFRANGE dupok size=0
go.isstmt.go.builtin.error.Error SDWARFMISC dupok size=0
	0x0000 04 0f 04 17 03 03 01 19 02 02 01 28 02 16 00     ...........(...
go.loc.os.(*File).close SDWARFLOC dupok size=0
go.info.os.(*File).close SDWARFINFO dupok size=72
	0x0000 03 6f 73 2e 28 2a 46 69 6c 65 29 2e 63 6c 6f 73  .os.(*File).clos
	0x0010 65 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  e...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 2e 74 68 69 73 00  ...........this.
	0x0030 00 01 00 00 00 00 01 9c 0f 7e 72 30 00 01 ec 01  .........~r0....
	0x0040 00 00 00 00 02 91 08 00                          ........
	rel 18+8 t=1 os.(*File).close+0
	rel 26+8 t=1 os.(*File).close+28
	rel 36+4 t=29 gofile..<autogenerated>+0
	rel 50+4 t=28 go.info.*os.File+0
	rel 64+4 t=28 go.info.error+0
go.range.os.(*File).close SDWARFRANGE dupok size=0
go.isstmt.os.(*File).close SDWARFMISC dupok size=0
	0x0000 04 03 01 14 02 05 00                             .......
go.string."Error" SRODATA dupok size=5
	0x0000 45 72 72 6f 72                                   Error
go.loc."".BenchmarkGigaObject_Calc SDWARFLOC size=0
go.info."".BenchmarkGigaObject_Calc SDWARFINFO size=130
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 47 69 67  ."".BenchmarkGig
	0x0010 61 4f 62 6a 65 63 74 5f 43 61 6c 63 00 00 00 00  aObject_Calc....
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 00  ................
	0x0030 00 00 00 01 0a 6f 00 07 00 00 00 00 03 91 f0 7b  .....o.........{
	0x0040 0f 62 00 00 05 00 00 00 00 01 9c 14 00 00 00 00  .b..............
	0x0050 0a 69 00 09 00 00 00 00 03 91 d0 7b 00 07 00 00  .i.........{....
	0x0060 00 00 00 00 00 00 00 00 00 00 0a 00 00 00 12 00  ................
	0x0070 00 00 00 03 91 d8 7b 12 00 00 00 00 03 91 98 7f  ......{.........
	0x0080 00 00                                            ..
	rel 29+8 t=1 "".BenchmarkGigaObject_Calc+0
	rel 37+8 t=1 "".BenchmarkGigaObject_Calc+542
	rel 47+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_access_test.go+0
	rel 56+4 t=28 go.info."".giga+0
	rel 69+4 t=28 go.info.*testing.B+0
	rel 76+4 t=28 go.range."".BenchmarkGigaObject_Calc+0
	rel 84+4 t=28 go.info.int+0
	rel 94+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 98+4 t=28 go.range."".BenchmarkGigaObject_Calc+48
	rel 102+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_access_test.go+0
	rel 111+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 120+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkGigaObject_Calc SDWARFRANGE size=96
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkGigaObject_Calc+85
	rel 8+8 t=50 "".BenchmarkGigaObject_Calc+327
	rel 16+8 t=50 "".BenchmarkGigaObject_Calc+486
	rel 24+8 t=50 "".BenchmarkGigaObject_Calc+514
	rel 48+8 t=50 "".BenchmarkGigaObject_Calc+327
	rel 56+8 t=50 "".BenchmarkGigaObject_Calc+486
	rel 64+8 t=50 "".BenchmarkGigaObject_Calc+514
	rel 72+8 t=50 "".BenchmarkGigaObject_Calc+516
go.isstmt."".BenchmarkGigaObject_Calc SDWARFMISC size=0
	0x0000 04 1b 04 17 03 05 01 1e 02 0c 01 02 02 08 01 18  ................
	0x0010 02 03 01 26 02 05 01 96 01 02 03 01 07 02 03 01  ...&............
	0x0020 72 02 05 01 02 02 08 01 11 02 04 01 2a 02 0a 00  r...........*...
runtime.gcbits.01 SRODATA dupok size=1
	0x0000 01                                               .
type..namedata.*interface {}- SRODATA dupok size=16
	0x0000 00 00 0d 2a 69 6e 74 65 72 66 61 63 65 20 7b 7d  ...*interface {}
type.*interface {} SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 4f 0f 96 9d 00 08 08 36 00 00 00 00 00 00 00 00  O......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*interface {}-+0
	rel 48+8 t=1 type.interface {}+0
runtime.gcbits.02 SRODATA dupok size=1
	0x0000 02                                               .
type.interface {} SRODATA dupok size=80
	0x0000 10 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0010 e7 57 a0 18 02 08 08 14 00 00 00 00 00 00 00 00  .W..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 24+8 t=1 runtime.algarray+144
	rel 32+8 t=1 runtime.gcbits.02+0
	rel 40+4 t=5 type..namedata.*interface {}-+0
	rel 44+4 t=6 type.*interface {}+0
	rel 56+8 t=1 type.interface {}+80
type..namedata.*[]interface {}- SRODATA dupok size=18
	0x0000 00 00 0f 2a 5b 5d 69 6e 74 65 72 66 61 63 65 20  ...*[]interface 
	0x0010 7b 7d                                            {}
type.*[]interface {} SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f3 04 9a e7 00 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]interface {}-+0
	rel 48+8 t=1 type.[]interface {}+0
type.[]interface {} SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 70 93 ea 2f 02 08 08 17 00 00 00 00 00 00 00 00  p../............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]interface {}-+0
	rel 44+4 t=6 type.*[]interface {}+0
	rel 48+8 t=1 type.interface {}+0
type..namedata.*[1]interface {}- SRODATA dupok size=19
	0x0000 00 00 10 2a 5b 31 5d 69 6e 74 65 72 66 61 63 65  ...*[1]interface
	0x0010 20 7b 7d                                          {}
type.*[1]interface {} SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 bf 03 a8 35 00 08 08 36 00 00 00 00 00 00 00 00  ...5...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[1]interface {}-+0
	rel 48+8 t=1 type.[1]interface {}+0
type.[1]interface {} SRODATA dupok size=72
	0x0000 10 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0010 50 91 5b fa 02 08 08 11 00 00 00 00 00 00 00 00  P.[.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 01 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+144
	rel 32+8 t=1 runtime.gcbits.02+0
	rel 40+4 t=5 type..namedata.*[1]interface {}-+0
	rel 44+4 t=6 type.*[1]interface {}+0
	rel 48+8 t=1 type.interface {}+0
	rel 56+8 t=1 type.[]interface {}+0
go.loc."".BenchmarkGigaPObject_Calc SDWARFLOC size=0
go.info."".BenchmarkGigaPObject_Calc SDWARFINFO size=131
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 47 69 67  ."".BenchmarkGig
	0x0010 61 50 4f 62 6a 65 63 74 5f 43 61 6c 63 00 00 00  aPObject_Calc...
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c  ................
	0x0030 00 00 00 00 01 0a 6f 00 10 00 00 00 00 03 91 f0  ......o.........
	0x0040 7b 0f 62 00 00 0e 00 00 00 00 01 9c 14 00 00 00  {.b.............
	0x0050 00 0a 69 00 12 00 00 00 00 03 91 d0 7b 00 07 00  ..i.........{...
	0x0060 00 00 00 00 00 00 00 00 00 00 00 13 00 00 00 12  ................
	0x0070 00 00 00 00 03 91 d8 7b 12 00 00 00 00 03 91 98  .......{........
	0x0080 7f 00 00                                         ...
	rel 30+8 t=1 "".BenchmarkGigaPObject_Calc+0
	rel 38+8 t=1 "".BenchmarkGigaPObject_Calc+515
	rel 48+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_access_test.go+0
	rel 57+4 t=28 go.info."".giga+0
	rel 70+4 t=28 go.info.*testing.B+0
	rel 77+4 t=28 go.range."".BenchmarkGigaPObject_Calc+0
	rel 85+4 t=28 go.info.int+0
	rel 95+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 99+4 t=28 go.range."".BenchmarkGigaPObject_Calc+48
	rel 103+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_access_test.go+0
	rel 112+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 121+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkGigaPObject_Calc SDWARFRANGE size=96
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkGigaPObject_Calc+85
	rel 8+8 t=50 "".BenchmarkGigaPObject_Calc+300
	rel 16+8 t=50 "".BenchmarkGigaPObject_Calc+459
	rel 24+8 t=50 "".BenchmarkGigaPObject_Calc+487
	rel 48+8 t=50 "".BenchmarkGigaPObject_Calc+300
	rel 56+8 t=50 "".BenchmarkGigaPObject_Calc+459
	rel 64+8 t=50 "".BenchmarkGigaPObject_Calc+487
	rel 72+8 t=50 "".BenchmarkGigaPObject_Calc+489
go.isstmt."".BenchmarkGigaPObject_Calc SDWARFMISC size=0
	0x0000 04 1b 04 17 03 05 01 1e 02 0c 01 02 02 08 01 18  ................
	0x0010 02 03 01 14 02 05 01 8d 01 02 03 01 07 02 03 01  ................
	0x0020 72 02 05 01 02 02 08 01 11 02 04 01 2a 02 0a 00  r...........*...
go.loc."".BenchmarkGigaIfcObject_Calc SDWARFLOC size=0
go.info."".BenchmarkGigaIfcObject_Calc SDWARFINFO size=134
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 47 69 67  ."".BenchmarkGig
	0x0010 61 49 66 63 4f 62 6a 65 63 74 5f 43 61 6c 63 00  aIfcObject_Calc.
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 9c 00 00 00 00 01 0a 26 6f 00 19 00 00 00 00  ........&o......
	0x0040 03 91 90 7f 0f 62 00 00 17 00 00 00 00 01 9c 14  .....b..........
	0x0050 00 00 00 00 0a 69 00 1b 00 00 00 00 03 91 e0 7e  .....i.........~
	0x0060 00 07 00 00 00 00 00 00 00 00 00 00 00 00 1c 00  ................
	0x0070 00 00 12 00 00 00 00 03 91 e8 7e 12 00 00 00 00  ..........~.....
	0x0080 03 91 98 7f 00 00                                ......
	rel 32+8 t=1 "".BenchmarkGigaIfcObject_Calc+0
	rel 40+8 t=1 "".BenchmarkGigaIfcObject_Calc+572
	rel 50+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_access_test.go+0
	rel 60+4 t=28 go.info.*"".giga+0
	rel 73+4 t=28 go.info.*testing.B+0
	rel 80+4 t=28 go.range."".BenchmarkGigaIfcObject_Calc+0
	rel 88+4 t=28 go.info.int+0
	rel 98+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 102+4 t=28 go.range."".BenchmarkGigaIfcObject_Calc+48
	rel 106+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_access_test.go+0
	rel 115+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 124+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkGigaIfcObject_Calc SDWARFRANGE size=96
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkGigaIfcObject_Calc+114
	rel 8+8 t=50 "".BenchmarkGigaIfcObject_Calc+357
	rel 16+8 t=50 "".BenchmarkGigaIfcObject_Calc+516
	rel 24+8 t=50 "".BenchmarkGigaIfcObject_Calc+544
	rel 48+8 t=50 "".BenchmarkGigaIfcObject_Calc+357
	rel 56+8 t=50 "".BenchmarkGigaIfcObject_Calc+516
	rel 64+8 t=50 "".BenchmarkGigaIfcObject_Calc+544
	rel 72+8 t=50 "".BenchmarkGigaIfcObject_Calc+546
go.isstmt."".BenchmarkGigaIfcObject_Calc SDWARFMISC size=0
	0x0000 04 1b 04 17 03 07 01 04 02 05 01 0d 02 05 01 1e  ................
	0x0010 02 0c 01 02 02 08 01 18 02 08 01 2b 02 05 01 8d  ...........+....
	0x0020 01 02 03 01 07 02 03 01 72 02 05 01 02 02 08 01  ........r.......
	0x0030 11 02 04 01 2a 02 0a 00                          ....*...
go.string."cannot divide by '0.0'" SRODATA dupok size=22
	0x0000 63 61 6e 6e 6f 74 20 64 69 76 69 64 65 20 62 79  cannot divide by
	0x0010 20 27 30 2e 30 27                                 '0.0'
go.loc."".BenchmarkMicro_Calc SDWARFLOC size=0
go.info."".BenchmarkMicro_Calc SDWARFINFO size=205
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 4d 69 63  ."".BenchmarkMic
	0x0010 72 6f 5f 43 61 6c 63 00 00 00 00 00 00 00 00 00  ro_Calc.........
	0x0020 00 00 00 00 00 00 00 00 01 9c 00 00 00 00 01 0a  ................
	0x0030 6f 00 0c 00 00 00 00 03 91 a0 7e 0a 7e 52 30 00  o.........~.~R0.
	0x0040 09 00 00 00 00 03 91 d8 7e 0f 62 00 00 0a 00 00  ........~.b.....
	0x0050 00 00 01 9c 14 00 00 00 00 0a 69 00 0e 00 00 00  ..........i.....
	0x0060 00 03 91 e8 7d 00 07 00 00 00 00 00 00 00 00 00  ....}...........
	0x0070 00 00 00 0f 00 00 00 12 00 00 00 00 03 91 90 7e  ...............~
	0x0080 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 09 00 00 00 12 00 00  ................
	0x00a0 00 00 03 91 e8 7e 00 00 07 00 00 00 00 00 00 00  .....~..........
	0x00b0 00 00 00 00 00 0f 00 00 00 12 00 00 00 00 03 91  ................
	0x00c0 f0 7d 12 00 00 00 00 03 91 f8 7e 00 00           .}........~..
	rel 24+8 t=1 "".BenchmarkMicro_Calc+0
	rel 32+8 t=1 "".BenchmarkMicro_Calc+753
	rel 42+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 51+4 t=28 go.info."".micro+0
	rel 65+4 t=28 go.info.error+0
	rel 78+4 t=28 go.info.*testing.B+0
	rel 85+4 t=28 go.range."".BenchmarkMicro_Calc+0
	rel 93+4 t=28 go.info.int+0
	rel 103+4 t=28 go.info."".calcMicro$abstract+0
	rel 107+4 t=28 go.range."".BenchmarkMicro_Calc+80
	rel 111+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 120+4 t=28 go.info."".calcMicro$abstract+14
	rel 129+4 t=28 go.info.errors.New$abstract+0
	rel 133+8 t=1 "".BenchmarkMicro_Calc+219
	rel 141+8 t=1 "".BenchmarkMicro_Calc+282
	rel 149+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 158+4 t=28 go.info.errors.New$abstract+14
	rel 169+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 173+4 t=28 go.range."".BenchmarkMicro_Calc+144
	rel 177+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 186+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 195+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkMicro_Calc SDWARFRANGE size=192
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkMicro_Calc+76
	rel 8+8 t=50 "".BenchmarkMicro_Calc+158
	rel 16+8 t=50 "".BenchmarkMicro_Calc+323
	rel 24+8 t=50 "".BenchmarkMicro_Calc+489
	rel 32+8 t=50 "".BenchmarkMicro_Calc+642
	rel 40+8 t=50 "".BenchmarkMicro_Calc+664
	rel 48+8 t=50 "".BenchmarkMicro_Calc+685
	rel 56+8 t=50 "".BenchmarkMicro_Calc+727
	rel 80+8 t=50 "".BenchmarkMicro_Calc+158
	rel 88+8 t=50 "".BenchmarkMicro_Calc+219
	rel 96+8 t=50 "".BenchmarkMicro_Calc+282
	rel 104+8 t=50 "".BenchmarkMicro_Calc+323
	rel 112+8 t=50 "".BenchmarkMicro_Calc+666
	rel 120+8 t=50 "".BenchmarkMicro_Calc+685
	rel 144+8 t=50 "".BenchmarkMicro_Calc+489
	rel 152+8 t=50 "".BenchmarkMicro_Calc+642
	rel 160+8 t=50 "".BenchmarkMicro_Calc+664
	rel 168+8 t=50 "".BenchmarkMicro_Calc+666
go.isstmt."".BenchmarkMicro_Calc SDWARFMISC size=0
	0x0000 04 1b 04 17 03 05 01 15 02 09 01 02 02 08 01 15  ................
	0x0010 02 05 01 25 02 06 01 11 02 07 01 1f 02 03 01 3c  ...%...........<
	0x0020 02 07 01 22 02 08 01 9e 01 02 03 01 07 02 03 01  ..."............
	0x0030 6f 02 05 01 02 02 08 01 0e 02 04 01 14 02 05 01  o...............
	0x0040 0e 02 06 01 34 02 0a 00                          ....4...
go.loc."".BenchmarkMicroP_Calc SDWARFLOC size=0
go.info."".BenchmarkMicroP_Calc SDWARFINFO size=206
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 4d 69 63  ."".BenchmarkMic
	0x0010 72 6f 50 5f 43 61 6c 63 00 00 00 00 00 00 00 00  roP_Calc........
	0x0020 00 00 00 00 00 00 00 00 00 01 9c 00 00 00 00 01  ................
	0x0030 0a 6f 00 15 00 00 00 00 03 91 90 7e 0a 7e 52 30  .o.........~.~R0
	0x0040 00 35 00 00 00 00 03 91 d8 7e 0f 62 00 00 13 00  .5.......~.b....
	0x0050 00 00 00 01 9c 14 00 00 00 00 0a 69 00 17 00 00  ...........i....
	0x0060 00 00 03 91 e8 7d 00 07 00 00 00 00 00 00 00 00  .....}..........
	0x0070 00 00 00 00 18 00 00 00 12 00 00 00 00 03 91 a0  ................
	0x0080 7e 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ~...............
	0x0090 00 00 00 00 00 00 00 00 00 00 35 00 00 00 12 00  ..........5.....
	0x00a0 00 00 00 03 91 e8 7e 00 00 07 00 00 00 00 00 00  ......~.........
	0x00b0 00 00 00 00 00 00 18 00 00 00 12 00 00 00 00 03  ................
	0x00c0 91 f0 7d 12 00 00 00 00 03 91 f8 7e 00 00        ..}........~..
	rel 25+8 t=1 "".BenchmarkMicroP_Calc+0
	rel 33+8 t=1 "".BenchmarkMicroP_Calc+763
	rel 43+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 52+4 t=28 go.info."".micro+0
	rel 66+4 t=28 go.info.error+0
	rel 79+4 t=28 go.info.*testing.B+0
	rel 86+4 t=28 go.range."".BenchmarkMicroP_Calc+0
	rel 94+4 t=28 go.info.int+0
	rel 104+4 t=28 go.info."".calcMicroP$abstract+0
	rel 108+4 t=28 go.range."".BenchmarkMicroP_Calc+80
	rel 112+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 121+4 t=28 go.info."".calcMicroP$abstract+15
	rel 130+4 t=28 go.info.errors.New$abstract+0
	rel 134+8 t=1 "".BenchmarkMicroP_Calc+218
	rel 142+8 t=1 "".BenchmarkMicroP_Calc+281
	rel 150+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 159+4 t=28 go.info.errors.New$abstract+14
	rel 170+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 174+4 t=28 go.range."".BenchmarkMicroP_Calc+160
	rel 178+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 187+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 196+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkMicroP_Calc SDWARFRANGE size=208
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkMicroP_Calc+76
	rel 8+8 t=50 "".BenchmarkMicroP_Calc+151
	rel 16+8 t=50 "".BenchmarkMicroP_Calc+322
	rel 24+8 t=50 "".BenchmarkMicroP_Calc+488
	rel 32+8 t=50 "".BenchmarkMicroP_Calc+641
	rel 40+8 t=50 "".BenchmarkMicroP_Calc+663
	rel 48+8 t=50 "".BenchmarkMicroP_Calc+695
	rel 56+8 t=50 "".BenchmarkMicroP_Calc+737
	rel 80+8 t=50 "".BenchmarkMicroP_Calc+151
	rel 88+8 t=50 "".BenchmarkMicroP_Calc+158
	rel 96+8 t=50 "".BenchmarkMicroP_Calc+158
	rel 104+8 t=50 "".BenchmarkMicroP_Calc+218
	rel 112+8 t=50 "".BenchmarkMicroP_Calc+281
	rel 120+8 t=50 "".BenchmarkMicroP_Calc+322
	rel 128+8 t=50 "".BenchmarkMicroP_Calc+665
	rel 136+8 t=50 "".BenchmarkMicroP_Calc+695
	rel 160+8 t=50 "".BenchmarkMicroP_Calc+488
	rel 168+8 t=50 "".BenchmarkMicroP_Calc+641
	rel 176+8 t=50 "".BenchmarkMicroP_Calc+663
	rel 184+8 t=50 "".BenchmarkMicroP_Calc+665
go.isstmt."".BenchmarkMicroP_Calc SDWARFMISC size=0
	0x0000 04 1b 04 17 03 05 01 15 02 09 01 02 02 08 01 15  ................
	0x0010 02 05 01 1e 02 05 01 18 02 07 01 1f 02 03 01 3c  ...............<
	0x0020 02 07 01 22 02 08 01 9e 01 02 03 01 07 02 03 01  ..."............
	0x0030 6f 02 05 01 02 02 08 01 0e 02 04 01 14 02 05 01  o...............
	0x0040 19 02 06 01 34 02 0a 00                          ....4...
go.loc."".BenchmarkMicroIfc_Calc SDWARFLOC size=0
go.info."".BenchmarkMicroIfc_Calc SDWARFINFO size=129
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 4d 69 63  ."".BenchmarkMic
	0x0010 72 6f 49 66 63 5f 43 61 6c 63 00 00 00 00 00 00  roIfc_Calc......
	0x0020 00 00 00 00 00 00 00 00 00 00 00 01 9c 00 00 00  ................
	0x0030 00 01 0a 26 6f 00 1e 00 00 00 00 03 91 90 7f 0f  ...&o...........
	0x0040 62 00 00 1c 00 00 00 00 01 9c 14 00 00 00 00 0a  b...............
	0x0050 69 00 20 00 00 00 00 03 91 e0 7e 00 07 00 00 00  i. .......~.....
	0x0060 00 00 00 00 00 00 00 00 00 21 00 00 00 12 00 00  .........!......
	0x0070 00 00 03 91 e8 7e 12 00 00 00 00 03 91 98 7f 00  .....~..........
	0x0080 00                                               .
	rel 27+8 t=1 "".BenchmarkMicroIfc_Calc+0
	rel 35+8 t=1 "".BenchmarkMicroIfc_Calc+499
	rel 45+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 55+4 t=28 go.info.*"".micro+0
	rel 68+4 t=28 go.info.*testing.B+0
	rel 75+4 t=28 go.range."".BenchmarkMicroIfc_Calc+0
	rel 83+4 t=28 go.info.int+0
	rel 93+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 97+4 t=28 go.range."".BenchmarkMicroIfc_Calc+48
	rel 101+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 110+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 119+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkMicroIfc_Calc SDWARFRANGE size=96
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkMicroIfc_Calc+101
	rel 8+8 t=50 "".BenchmarkMicroIfc_Calc+296
	rel 16+8 t=50 "".BenchmarkMicroIfc_Calc+449
	rel 24+8 t=50 "".BenchmarkMicroIfc_Calc+471
	rel 48+8 t=50 "".BenchmarkMicroIfc_Calc+296
	rel 56+8 t=50 "".BenchmarkMicroIfc_Calc+449
	rel 64+8 t=50 "".BenchmarkMicroIfc_Calc+471
	rel 72+8 t=50 "".BenchmarkMicroIfc_Calc+473
go.isstmt."".BenchmarkMicroIfc_Calc SDWARFMISC size=0
	0x0000 04 18 04 17 03 07 01 04 02 05 01 0a 02 05 01 17  ................
	0x0010 02 09 01 02 02 08 01 15 02 05 01 25 02 05 01 6c  ...........%...l
	0x0020 02 03 01 07 02 03 01 6f 02 05 01 02 02 08 01 0e  .......o........
	0x0030 02 04 01 24 02 0a 00                             ...$...
go.loc."".BenchmarkTiny_Calc SDWARFLOC size=0
go.info."".BenchmarkTiny_Calc SDWARFINFO size=203
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 54 69 6e  ."".BenchmarkTin
	0x0010 79 5f 43 61 6c 63 00 00 00 00 00 00 00 00 00 00  y_Calc..........
	0x0020 00 00 00 00 00 00 00 01 9c 00 00 00 00 01 0a 7e  ...............~
	0x0030 52 30 00 10 00 00 00 00 03 91 98 7e 0a 6f 00 27  R0.........~.o.'
	0x0040 00 00 00 00 02 91 50 0f 62 00 00 25 00 00 00 00  ......P.b..%....
	0x0050 01 9c 14 00 00 00 00 0a 69 00 29 00 00 00 00 03  ........i.).....
	0x0060 91 c8 7d 00 07 00 00 00 00 00 00 00 00 00 00 00  ..}.............
	0x0070 00 2a 00 00 00 12 00 00 00 00 03 91 b0 7f 06 00  .*..............
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 10 00 00 00 12 00 00 00 00  ................
	0x00a0 03 91 a8 7e 00 00 07 00 00 00 00 00 00 00 00 00  ...~............
	0x00b0 00 00 00 2a 00 00 00 12 00 00 00 00 03 91 d0 7d  ...*...........}
	0x00c0 12 00 00 00 00 03 91 b8 7e 00 00                 ........~..
	rel 23+8 t=1 "".BenchmarkTiny_Calc+0
	rel 31+8 t=1 "".BenchmarkTiny_Calc+811
	rel 41+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 52+4 t=28 go.info.error+0
	rel 64+4 t=28 go.info."".tiny+0
	rel 76+4 t=28 go.info.*testing.B+0
	rel 83+4 t=28 go.range."".BenchmarkTiny_Calc+0
	rel 91+4 t=28 go.info.int+0
	rel 101+4 t=28 go.info."".calcTiny$abstract+0
	rel 105+4 t=28 go.range."".BenchmarkTiny_Calc+80
	rel 109+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 118+4 t=28 go.info."".calcTiny$abstract+13
	rel 127+4 t=28 go.info.errors.New$abstract+0
	rel 131+8 t=1 "".BenchmarkTiny_Calc+292
	rel 139+8 t=1 "".BenchmarkTiny_Calc+355
	rel 147+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 156+4 t=28 go.info.errors.New$abstract+14
	rel 167+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 171+4 t=28 go.range."".BenchmarkTiny_Calc+144
	rel 175+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 184+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 193+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkTiny_Calc SDWARFRANGE size=192
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkTiny_Calc+108
	rel 8+8 t=50 "".BenchmarkTiny_Calc+231
	rel 16+8 t=50 "".BenchmarkTiny_Calc+393
	rel 24+8 t=50 "".BenchmarkTiny_Calc+544
	rel 32+8 t=50 "".BenchmarkTiny_Calc+697
	rel 40+8 t=50 "".BenchmarkTiny_Calc+719
	rel 48+8 t=50 "".BenchmarkTiny_Calc+746
	rel 56+8 t=50 "".BenchmarkTiny_Calc+785
	rel 80+8 t=50 "".BenchmarkTiny_Calc+231
	rel 88+8 t=50 "".BenchmarkTiny_Calc+292
	rel 96+8 t=50 "".BenchmarkTiny_Calc+355
	rel 104+8 t=50 "".BenchmarkTiny_Calc+393
	rel 112+8 t=50 "".BenchmarkTiny_Calc+721
	rel 120+8 t=50 "".BenchmarkTiny_Calc+746
	rel 144+8 t=50 "".BenchmarkTiny_Calc+544
	rel 152+8 t=50 "".BenchmarkTiny_Calc+697
	rel 160+8 t=50 "".BenchmarkTiny_Calc+719
	rel 168+8 t=50 "".BenchmarkTiny_Calc+721
go.isstmt."".BenchmarkTiny_Calc SDWARFMISC size=0
	0x0000 04 1b 04 17 03 05 01 35 02 09 01 02 02 08 01 15  .......5........
	0x0010 02 08 01 4b 02 09 01 11 02 07 01 1c 02 03 01 3c  ...K...........<
	0x0020 02 07 01 1f 02 08 01 8f 01 02 03 01 07 02 03 01  ................
	0x0030 6f 02 05 01 02 02 08 01 0e 02 04 01 14 02 08 01  o...............
	0x0040 11 02 06 01 31 02 0a 00                          ....1...
go.loc."".BenchmarkTinyP_Calc SDWARFLOC size=0
go.info."".BenchmarkTinyP_Calc SDWARFINFO size=204
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 54 69 6e  ."".BenchmarkTin
	0x0010 79 50 5f 43 61 6c 63 00 00 00 00 00 00 00 00 00  yP_Calc.........
	0x0020 00 00 00 00 00 00 00 00 01 9c 00 00 00 00 01 0a  ................
	0x0030 7e 52 30 00 3c 00 00 00 00 03 91 b8 7e 0a 6f 00  ~R0.<.......~.o.
	0x0040 30 00 00 00 00 02 91 50 0f 62 00 00 2e 00 00 00  0......P.b......
	0x0050 00 01 9c 14 00 00 00 00 0a 69 00 32 00 00 00 00  .........i.2....
	0x0060 03 91 d8 7d 00 07 00 00 00 00 00 00 00 00 00 00  ...}............
	0x0070 00 00 33 00 00 00 12 00 00 00 00 03 91 80 7e 06  ..3...........~.
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 3c 00 00 00 12 00 00 00  ........<.......
	0x00a0 00 03 91 c8 7e 00 00 07 00 00 00 00 00 00 00 00  ....~...........
	0x00b0 00 00 00 00 33 00 00 00 12 00 00 00 00 03 91 e0  ....3...........
	0x00c0 7d 12 00 00 00 00 03 91 d8 7e 00 00              }........~..
	rel 24+8 t=1 "".BenchmarkTinyP_Calc+0
	rel 32+8 t=1 "".BenchmarkTinyP_Calc+786
	rel 42+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 53+4 t=28 go.info.error+0
	rel 65+4 t=28 go.info."".tiny+0
	rel 77+4 t=28 go.info.*testing.B+0
	rel 84+4 t=28 go.range."".BenchmarkTinyP_Calc+0
	rel 92+4 t=28 go.info.int+0
	rel 102+4 t=28 go.info."".calcTinyP$abstract+0
	rel 106+4 t=28 go.range."".BenchmarkTinyP_Calc+80
	rel 110+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 119+4 t=28 go.info."".calcTinyP$abstract+14
	rel 128+4 t=28 go.info.errors.New$abstract+0
	rel 132+8 t=1 "".BenchmarkTinyP_Calc+250
	rel 140+8 t=1 "".BenchmarkTinyP_Calc+313
	rel 148+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 157+4 t=28 go.info.errors.New$abstract+14
	rel 168+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 172+4 t=28 go.range."".BenchmarkTinyP_Calc+160
	rel 176+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 185+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 194+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkTinyP_Calc SDWARFRANGE size=208
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkTinyP_Calc+108
	rel 8+8 t=50 "".BenchmarkTinyP_Calc+183
	rel 16+8 t=50 "".BenchmarkTinyP_Calc+354
	rel 24+8 t=50 "".BenchmarkTinyP_Calc+514
	rel 32+8 t=50 "".BenchmarkTinyP_Calc+667
	rel 40+8 t=50 "".BenchmarkTinyP_Calc+689
	rel 48+8 t=50 "".BenchmarkTinyP_Calc+721
	rel 56+8 t=50 "".BenchmarkTinyP_Calc+760
	rel 80+8 t=50 "".BenchmarkTinyP_Calc+183
	rel 88+8 t=50 "".BenchmarkTinyP_Calc+190
	rel 96+8 t=50 "".BenchmarkTinyP_Calc+190
	rel 104+8 t=50 "".BenchmarkTinyP_Calc+250
	rel 112+8 t=50 "".BenchmarkTinyP_Calc+313
	rel 120+8 t=50 "".BenchmarkTinyP_Calc+354
	rel 128+8 t=50 "".BenchmarkTinyP_Calc+691
	rel 136+8 t=50 "".BenchmarkTinyP_Calc+721
	rel 160+8 t=50 "".BenchmarkTinyP_Calc+514
	rel 168+8 t=50 "".BenchmarkTinyP_Calc+667
	rel 176+8 t=50 "".BenchmarkTinyP_Calc+689
	rel 184+8 t=50 "".BenchmarkTinyP_Calc+691
go.isstmt."".BenchmarkTinyP_Calc SDWARFMISC size=0
	0x0000 04 1b 04 17 03 05 01 35 02 09 01 02 02 08 01 15  .......5........
	0x0010 02 08 01 1b 02 05 01 18 02 07 01 1f 02 03 01 3c  ...............<
	0x0020 02 07 01 22 02 08 01 98 01 02 03 01 07 02 03 01  ..."............
	0x0030 6f 02 05 01 02 02 08 01 0e 02 04 01 14 02 05 01  o...............
	0x0040 19 02 06 01 31 02 0a 00                          ....1...
go.loc.type..hash."".tiny SDWARFLOC dupok size=0
go.info.type..hash."".tiny SDWARFINFO dupok size=81
	0x0000 03 74 79 70 65 2e 2e 68 61 73 68 2e 22 22 2e 74  .type..hash."".t
	0x0010 69 6e 79 00 00 00 00 00 00 00 00 00 00 00 00 00  iny.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 70 00 00 01  ............p...
	0x0030 00 00 00 00 01 9c 0f 68 00 00 01 00 00 00 00 02  .......h........
	0x0040 91 08 0f 7e 72 32 00 01 01 00 00 00 00 02 91 10  ...~r2..........
	0x0050 00                                               .
	rel 20+8 t=1 type..hash."".tiny+0
	rel 28+8 t=1 type..hash."".tiny+201
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 48+4 t=28 go.info.*"".tiny+0
	rel 59+4 t=28 go.info.uintptr+0
	rel 73+4 t=28 go.info.uintptr+0
go.range.type..hash."".tiny SDWARFRANGE dupok size=0
go.isstmt.type..hash."".tiny SDWARFMISC dupok size=0
	0x0000 04 13 04 0e 03 09 01 21 02 05 01 26 02 05 01 26  .......!...&...&
	0x0010 02 05 01 19 02 0a 00                             .......
go.loc.type..eq."".tiny SDWARFLOC dupok size=0
go.info.type..eq."".tiny SDWARFINFO dupok size=79
	0x0000 03 74 79 70 65 2e 2e 65 71 2e 22 22 2e 74 69 6e  .type..eq."".tin
	0x0010 79 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  y...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 70 00 00 01 00 00  ..........p.....
	0x0030 00 00 01 9c 0f 71 00 00 01 00 00 00 00 02 91 08  .....q..........
	0x0040 0f 7e 72 32 00 01 01 00 00 00 00 02 91 10 00     .~r2...........
	rel 18+8 t=1 type..eq."".tiny+0
	rel 26+8 t=1 type..eq."".tiny+261
	rel 36+4 t=29 gofile..<autogenerated>+0
	rel 46+4 t=28 go.info.*"".tiny+0
	rel 57+4 t=28 go.info.*"".tiny+0
	rel 71+4 t=28 go.info.bool+0
go.range.type..eq."".tiny SDWARFRANGE dupok size=0
go.isstmt.type..eq."".tiny SDWARFMISC dupok size=0
	0x0000 04 13 04 0e 03 05 01 a5 01 02 05 01 07 02 04 01  ................
	0x0010 02 02 05 01 19 02 0a 00                          ........
type..hashfunc."".tiny SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type..hash."".tiny+0
type..eqfunc."".tiny SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type..eq."".tiny+0
type..alg."".tiny SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 type..hashfunc."".tiny+0
	rel 8+8 t=1 type..eqfunc."".tiny+0
type..namedata.*code.tiny- SRODATA dupok size=13
	0x0000 00 00 0a 2a 63 6f 64 65 2e 74 69 6e 79           ...*code.tiny
type..namedata.*func(*code.tiny) float64- SRODATA dupok size=28
	0x0000 00 00 19 2a 66 75 6e 63 28 2a 63 6f 64 65 2e 74  ...*func(*code.t
	0x0010 69 6e 79 29 20 66 6c 6f 61 74 36 34              iny) float64
type.*func(*"".tiny) float64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 03 64 0c b0 00 08 08 36 00 00 00 00 00 00 00 00  .d.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(*code.tiny) float64-+0
	rel 48+8 t=1 type.func(*"".tiny) float64+0
type.func(*"".tiny) float64 SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f6 c7 7c 82 02 08 08 33 00 00 00 00 00 00 00 00  ..|....3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(*code.tiny) float64-+0
	rel 44+4 t=6 type.*func(*"".tiny) float64+0
	rel 56+8 t=1 type.*"".tiny+0
	rel 64+8 t=1 type.float64+0
type..namedata.*func(*code.tiny) int64- SRODATA dupok size=26
	0x0000 00 00 17 2a 66 75 6e 63 28 2a 63 6f 64 65 2e 74  ...*func(*code.t
	0x0010 69 6e 79 29 20 69 6e 74 36 34                    iny) int64
type.*func(*"".tiny) int64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 5b f7 a6 c9 00 08 08 36 00 00 00 00 00 00 00 00  [......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(*code.tiny) int64-+0
	rel 48+8 t=1 type.func(*"".tiny) int64+0
type.func(*"".tiny) int64 SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 82 8d 3f f9 02 08 08 33 00 00 00 00 00 00 00 00  ..?....3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(*code.tiny) int64-+0
	rel 44+4 t=6 type.*func(*"".tiny) int64+0
	rel 56+8 t=1 type.*"".tiny+0
	rel 64+8 t=1 type.int64+0
type..namedata.GetF. SRODATA dupok size=7
	0x0000 01 00 04 47 65 74 46                             ...GetF
type..namedata.*func() float64- SRODATA dupok size=18
	0x0000 00 00 0f 2a 66 75 6e 63 28 29 20 66 6c 6f 61 74  ...*func() float
	0x0010 36 34                                            64
type.*func() float64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 cb f0 1a be 00 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func() float64-+0
	rel 48+8 t=1 type.func() float64+0
type.func() float64 SRODATA dupok size=64
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 2d cd 1f 7f 02 08 08 33 00 00 00 00 00 00 00 00  -......3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 24+8 t=1 runtime.algarray+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func() float64-+0
	rel 44+4 t=6 type.*func() float64+0
	rel 56+8 t=1 type.float64+0
type..namedata.GetI. SRODATA dupok size=7
	0x0000 01 00 04 47 65 74 49                             ...GetI
type..namedata.*func() int64- SRODATA dupok size=16
	0x0000 00 00 0d 2a 66 75 6e 63 28 29 20 69 6e 74 36 34  ...*func() int64
type.*func() int64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 a0 a5 1f 2e 00 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func() int64-+0
	rel 48+8 t=1 type.func() int64+0
type.func() int64 SRODATA dupok size=64
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 61 7c 91 90 02 08 08 33 00 00 00 00 00 00 00 00  a|.....3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 24+8 t=1 runtime.algarray+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func() int64-+0
	rel 44+4 t=6 type.*func() int64+0
	rel 56+8 t=1 type.int64+0
type.*"".tiny SRODATA size=104
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 8c 1a 7b 2f 01 08 08 36 00 00 00 00 00 00 00 00  ..{/...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 02 00 02 00  ................
	0x0040 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*code.tiny-+0
	rel 48+8 t=1 type."".tiny+0
	rel 56+4 t=5 type..importpath."".+0
	rel 72+4 t=5 type..namedata.GetF.+0
	rel 76+4 t=24 type.func() float64+0
	rel 80+4 t=24 "".(*tiny).GetF+0
	rel 84+4 t=24 "".(*tiny).GetF+0
	rel 88+4 t=5 type..namedata.GetI.+0
	rel 92+4 t=24 type.func() int64+0
	rel 96+4 t=24 "".(*tiny).GetI+0
	rel 100+4 t=24 "".(*tiny).GetI+0
runtime.gcbits.04 SRODATA dupok size=1
	0x0000 04                                               .
type..namedata.a- SRODATA dupok size=4
	0x0000 00 00 01 61                                      ...a
type..namedata.aa- SRODATA dupok size=5
	0x0000 00 00 02 61 61                                   ...aa
type..namedata.aaa- SRODATA dupok size=6
	0x0000 00 00 03 61 61 61                                ...aaa
type."".tiny SRODATA size=168
	0x0000 20 00 00 00 00 00 00 00 18 00 00 00 00 00 00 00   ...............
	0x0010 c5 a9 e4 4d 07 08 08 19 00 00 00 00 00 00 00 00  ...M............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 03 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 58 00 00 00 00 00 00 00  ........X.......
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 20 00 00 00 00 00 00 00                           .......
	rel 24+8 t=1 type..alg."".tiny+0
	rel 32+8 t=1 runtime.gcbits.04+0
	rel 40+4 t=5 type..namedata.*code.tiny-+0
	rel 44+4 t=5 type.*"".tiny+0
	rel 48+8 t=1 type..importpath."".+0
	rel 56+8 t=1 type."".tiny+96
	rel 80+4 t=5 type..importpath."".+0
	rel 96+8 t=1 type..namedata.a-+0
	rel 104+8 t=1 type.int64+0
	rel 120+8 t=1 type..namedata.aa-+0
	rel 128+8 t=1 type.float64+0
	rel 144+8 t=1 type..namedata.aaa-+0
	rel 152+8 t=1 type.string+0
go.loc."".BenchmarkTinyIfc_Calc SDWARFLOC size=0
go.info."".BenchmarkTinyIfc_Calc SDWARFINFO size=128
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 54 69 6e  ."".BenchmarkTin
	0x0010 79 49 66 63 5f 43 61 6c 63 00 00 00 00 00 00 00  yIfc_Calc.......
	0x0020 00 00 00 00 00 00 00 00 00 00 01 9c 00 00 00 00  ................
	0x0030 01 0a 26 6f 00 39 00 00 00 00 03 91 90 7f 0f 62  ..&o.9.........b
	0x0040 00 00 37 00 00 00 00 01 9c 14 00 00 00 00 0a 69  ..7............i
	0x0050 00 3b 00 00 00 00 03 91 e0 7e 00 07 00 00 00 00  .;.......~......
	0x0060 00 00 00 00 00 00 00 00 3c 00 00 00 12 00 00 00  ........<.......
	0x0070 00 03 91 e8 7e 12 00 00 00 00 03 91 98 7f 00 00  ....~...........
	rel 26+8 t=1 "".BenchmarkTinyIfc_Calc+0
	rel 34+8 t=1 "".BenchmarkTinyIfc_Calc+550
	rel 44+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 54+4 t=28 go.info.*"".tiny+0
	rel 67+4 t=28 go.info.*testing.B+0
	rel 74+4 t=28 go.range."".BenchmarkTinyIfc_Calc+0
	rel 82+4 t=28 go.info.int+0
	rel 92+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 96+4 t=28 go.range."".BenchmarkTinyIfc_Calc+48
	rel 100+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 109+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 118+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkTinyIfc_Calc SDWARFRANGE size=96
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkTinyIfc_Calc+139
	rel 8+8 t=50 "".BenchmarkTinyIfc_Calc+334
	rel 16+8 t=50 "".BenchmarkTinyIfc_Calc+487
	rel 24+8 t=50 "".BenchmarkTinyIfc_Calc+509
	rel 48+8 t=50 "".BenchmarkTinyIfc_Calc+334
	rel 56+8 t=50 "".BenchmarkTinyIfc_Calc+487
	rel 64+8 t=50 "".BenchmarkTinyIfc_Calc+509
	rel 72+8 t=50 "".BenchmarkTinyIfc_Calc+511
go.isstmt."".BenchmarkTinyIfc_Calc SDWARFMISC size=0
	0x0000 04 18 04 17 03 07 01 04 02 05 01 0a 02 05 01 3d  ...............=
	0x0010 02 09 01 02 02 08 01 15 02 05 01 25 02 05 01 6c  ...........%...l
	0x0020 02 03 01 07 02 03 01 6f 02 05 01 02 02 08 01 0e  .......o........
	0x0030 02 04 01 31 02 0a 00                             ...1...
go.loc."".BenchmarkMini_Calc SDWARFLOC size=0
go.info."".BenchmarkMini_Calc SDWARFINFO size=204
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 4d 69 6e  ."".BenchmarkMin
	0x0010 69 5f 43 61 6c 63 00 00 00 00 00 00 00 00 00 00  i_Calc..........
	0x0020 00 00 00 00 00 00 00 01 9c 00 00 00 00 01 0a 7e  ...............~
	0x0030 52 30 00 17 00 00 00 00 03 91 98 7d 0a 6f 00 42  R0.........}.o.B
	0x0040 00 00 00 00 03 91 90 7f 0f 62 00 00 40 00 00 00  .........b..@...
	0x0050 00 01 9c 14 00 00 00 00 0a 69 00 44 00 00 00 00  .........i.D....
	0x0060 03 91 c8 7c 00 07 00 00 00 00 00 00 00 00 00 00  ...|............
	0x0070 00 00 45 00 00 00 12 00 00 00 00 03 91 b0 7e 06  ..E...........~.
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 17 00 00 00 12 00 00 00  ................
	0x00a0 00 03 91 a8 7d 00 00 07 00 00 00 00 00 00 00 00  ....}...........
	0x00b0 00 00 00 00 45 00 00 00 12 00 00 00 00 03 91 d0  ....E...........
	0x00c0 7c 12 00 00 00 00 03 91 b8 7d 00 00              |........}..
	rel 23+8 t=1 "".BenchmarkMini_Calc+0
	rel 31+8 t=1 "".BenchmarkMini_Calc+799
	rel 41+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 52+4 t=28 go.info.error+0
	rel 64+4 t=28 go.info."".mini+0
	rel 77+4 t=28 go.info.*testing.B+0
	rel 84+4 t=28 go.range."".BenchmarkMini_Calc+0
	rel 92+4 t=28 go.info.int+0
	rel 102+4 t=28 go.info."".calcMini$abstract+0
	rel 106+4 t=28 go.range."".BenchmarkMini_Calc+80
	rel 110+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 119+4 t=28 go.info."".calcMini$abstract+13
	rel 128+4 t=28 go.info.errors.New$abstract+0
	rel 132+8 t=1 "".BenchmarkMini_Calc+244
	rel 140+8 t=1 "".BenchmarkMini_Calc+313
	rel 148+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 157+4 t=28 go.info.errors.New$abstract+14
	rel 168+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 172+4 t=28 go.range."".BenchmarkMini_Calc+144
	rel 176+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 185+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 194+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkMini_Calc SDWARFRANGE size=192
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkMini_Calc+85
	rel 8+8 t=50 "".BenchmarkMini_Calc+180
	rel 16+8 t=50 "".BenchmarkMini_Calc+354
	rel 24+8 t=50 "".BenchmarkMini_Calc+523
	rel 32+8 t=50 "".BenchmarkMini_Calc+679
	rel 40+8 t=50 "".BenchmarkMini_Calc+701
	rel 48+8 t=50 "".BenchmarkMini_Calc+728
	rel 56+8 t=50 "".BenchmarkMini_Calc+773
	rel 80+8 t=50 "".BenchmarkMini_Calc+180
	rel 88+8 t=50 "".BenchmarkMini_Calc+244
	rel 96+8 t=50 "".BenchmarkMini_Calc+313
	rel 104+8 t=50 "".BenchmarkMini_Calc+354
	rel 112+8 t=50 "".BenchmarkMini_Calc+703
	rel 120+8 t=50 "".BenchmarkMini_Calc+728
	rel 144+8 t=50 "".BenchmarkMini_Calc+523
	rel 152+8 t=50 "".BenchmarkMini_Calc+679
	rel 160+8 t=50 "".BenchmarkMini_Calc+701
	rel 168+8 t=50 "".BenchmarkMini_Calc+703
go.isstmt."".BenchmarkMini_Calc SDWARFMISC size=0
	0x0000 04 1b 04 17 03 05 01 1e 02 09 01 02 02 08 01 15  ................
	0x0010 02 08 01 2f 02 09 01 11 02 07 01 1f 02 03 01 42  .../...........B
	0x0020 02 07 01 22 02 08 01 a1 01 02 03 01 07 02 03 01  ..."............
	0x0030 72 02 05 01 02 02 08 01 0e 02 04 01 14 02 08 01  r...............
	0x0040 11 02 09 01 34 02 0a 00                          ....4...
go.loc."".BenchmarkMiniP_Calc SDWARFLOC size=0
go.info."".BenchmarkMiniP_Calc SDWARFINFO size=205
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 4d 69 6e  ."".BenchmarkMin
	0x0010 69 50 5f 43 61 6c 63 00 00 00 00 00 00 00 00 00  iP_Calc.........
	0x0020 00 00 00 00 00 00 00 00 01 9c 00 00 00 00 01 0a  ................
	0x0030 7e 52 30 00 43 00 00 00 00 03 91 f8 7d 0a 6f 00  ~R0.C.......}.o.
	0x0040 4b 00 00 00 00 03 91 90 7f 0f 62 00 00 49 00 00  K.........b..I..
	0x0050 00 00 01 9c 14 00 00 00 00 0a 69 00 4d 00 00 00  ..........i.M...
	0x0060 00 03 91 98 7d 00 07 00 00 00 00 00 00 00 00 00  ....}...........
	0x0070 00 00 00 4e 00 00 00 12 00 00 00 00 03 91 c0 7d  ...N...........}
	0x0080 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 43 00 00 00 12 00 00  .........C......
	0x00a0 00 00 03 91 88 7e 00 00 07 00 00 00 00 00 00 00  .....~..........
	0x00b0 00 00 00 00 00 4e 00 00 00 12 00 00 00 00 03 91  .....N..........
	0x00c0 a0 7d 12 00 00 00 00 03 91 98 7e 00 00           .}........~..
	rel 24+8 t=1 "".BenchmarkMiniP_Calc+0
	rel 32+8 t=1 "".BenchmarkMiniP_Calc+805
	rel 42+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 53+4 t=28 go.info.error+0
	rel 65+4 t=28 go.info."".mini+0
	rel 78+4 t=28 go.info.*testing.B+0
	rel 85+4 t=28 go.range."".BenchmarkMiniP_Calc+0
	rel 93+4 t=28 go.info.int+0
	rel 103+4 t=28 go.info."".calcMiniP$abstract+0
	rel 107+4 t=28 go.range."".BenchmarkMiniP_Calc+80
	rel 111+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 120+4 t=28 go.info."".calcMiniP$abstract+14
	rel 129+4 t=28 go.info.errors.New$abstract+0
	rel 133+8 t=1 "".BenchmarkMiniP_Calc+239
	rel 141+8 t=1 "".BenchmarkMiniP_Calc+308
	rel 149+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 158+4 t=28 go.info.errors.New$abstract+14
	rel 169+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 173+4 t=28 go.range."".BenchmarkMiniP_Calc+160
	rel 177+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 186+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 195+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkMiniP_Calc SDWARFRANGE size=208
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkMiniP_Calc+85
	rel 8+8 t=50 "".BenchmarkMiniP_Calc+169
	rel 16+8 t=50 "".BenchmarkMiniP_Calc+349
	rel 24+8 t=50 "".BenchmarkMiniP_Calc+518
	rel 32+8 t=50 "".BenchmarkMiniP_Calc+674
	rel 40+8 t=50 "".BenchmarkMiniP_Calc+696
	rel 48+8 t=50 "".BenchmarkMiniP_Calc+734
	rel 56+8 t=50 "".BenchmarkMiniP_Calc+779
	rel 80+8 t=50 "".BenchmarkMiniP_Calc+169
	rel 88+8 t=50 "".BenchmarkMiniP_Calc+179
	rel 96+8 t=50 "".BenchmarkMiniP_Calc+179
	rel 104+8 t=50 "".BenchmarkMiniP_Calc+239
	rel 112+8 t=50 "".BenchmarkMiniP_Calc+308
	rel 120+8 t=50 "".BenchmarkMiniP_Calc+349
	rel 128+8 t=50 "".BenchmarkMiniP_Calc+698
	rel 136+8 t=50 "".BenchmarkMiniP_Calc+734
	rel 160+8 t=50 "".BenchmarkMiniP_Calc+518
	rel 168+8 t=50 "".BenchmarkMiniP_Calc+674
	rel 176+8 t=50 "".BenchmarkMiniP_Calc+696
	rel 184+8 t=50 "".BenchmarkMiniP_Calc+698
go.isstmt."".BenchmarkMiniP_Calc SDWARFMISC size=0
	0x0000 04 1b 04 17 03 05 01 1e 02 09 01 02 02 08 01 15  ................
	0x0010 02 08 01 24 02 08 01 18 02 07 01 1f 02 03 01 42  ...$...........B
	0x0020 02 07 01 22 02 08 01 a1 01 02 03 01 07 02 03 01  ..."............
	0x0030 72 02 05 01 02 02 08 01 0e 02 04 01 14 02 08 01  r...............
	0x0040 1c 02 09 01 34 02 0a 00                          ....4...
go.loc.type..hash."".mini SDWARFLOC dupok size=0
go.info.type..hash."".mini SDWARFINFO dupok size=81
	0x0000 03 74 79 70 65 2e 2e 68 61 73 68 2e 22 22 2e 6d  .type..hash."".m
	0x0010 69 6e 69 00 00 00 00 00 00 00 00 00 00 00 00 00  ini.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 70 00 00 01  ............p...
	0x0030 00 00 00 00 01 9c 0f 68 00 00 01 00 00 00 00 02  .......h........
	0x0040 91 08 0f 7e 72 32 00 01 01 00 00 00 00 02 91 10  ...~r2..........
	0x0050 00                                               .
	rel 20+8 t=1 type..hash."".mini+0
	rel 28+8 t=1 type..hash."".mini+373
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 48+4 t=28 go.info.*"".mini+0
	rel 59+4 t=28 go.info.uintptr+0
	rel 73+4 t=28 go.info.uintptr+0
go.range.type..hash."".mini SDWARFRANGE dupok size=0
go.isstmt.type..hash."".mini SDWARFMISC dupok size=0
	0x0000 04 13 04 0e 03 09 01 21 02 05 01 26 02 05 01 26  .......!...&...&
	0x0010 02 05 01 26 02 05 01 26 02 05 01 26 02 05 01 26  ...&...&...&...&
	0x0020 02 05 01 19 02 0a 00                             .......
go.loc.type..eq."".mini SDWARFLOC dupok size=0
go.info.type..eq."".mini SDWARFINFO dupok size=79
	0x0000 03 74 79 70 65 2e 2e 65 71 2e 22 22 2e 6d 69 6e  .type..eq."".min
	0x0010 69 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  i...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 70 00 00 01 00 00  ..........p.....
	0x0030 00 00 01 9c 0f 71 00 00 01 00 00 00 00 02 91 08  .....q..........
	0x0040 0f 7e 72 32 00 01 01 00 00 00 00 02 91 10 00     .~r2...........
	rel 18+8 t=1 type..eq."".mini+0
	rel 26+8 t=1 type..eq."".mini+776
	rel 36+4 t=29 gofile..<autogenerated>+0
	rel 46+4 t=28 go.info.*"".mini+0
	rel 57+4 t=28 go.info.*"".mini+0
	rel 71+4 t=28 go.info.bool+0
go.range.type..eq."".mini SDWARFRANGE dupok size=0
go.isstmt.type..eq."".mini SDWARFMISC dupok size=0
	0x0000 04 18 04 17 03 08 01 31 02 05 01 bd 02 02 05 01  .......1........
	0x0010 07 02 04 01 6f 02 05 01 07 02 04 01 6c 02 05 01  ....o.......l...
	0x0020 07 02 04 01 02 02 05 01 42 02 0a 00              ........B...
type..hashfunc."".mini SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type..hash."".mini+0
type..eqfunc."".mini SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type..eq."".mini+0
type..alg."".mini SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 type..hashfunc."".mini+0
	rel 8+8 t=1 type..eqfunc."".mini+0
type..namedata.*code.mini- SRODATA dupok size=13
	0x0000 00 00 0a 2a 63 6f 64 65 2e 6d 69 6e 69           ...*code.mini
type..namedata.*func(*code.mini) float64- SRODATA dupok size=28
	0x0000 00 00 19 2a 66 75 6e 63 28 2a 63 6f 64 65 2e 6d  ...*func(*code.m
	0x0010 69 6e 69 29 20 66 6c 6f 61 74 36 34              ini) float64
type.*func(*"".mini) float64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 8e a3 90 18 00 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(*code.mini) float64-+0
	rel 48+8 t=1 type.func(*"".mini) float64+0
type.func(*"".mini) float64 SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 50 68 20 eb 02 08 08 33 00 00 00 00 00 00 00 00  Ph ....3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(*code.mini) float64-+0
	rel 44+4 t=6 type.*func(*"".mini) float64+0
	rel 56+8 t=1 type.*"".mini+0
	rel 64+8 t=1 type.float64+0
type..namedata.*func(*code.mini) int64- SRODATA dupok size=26
	0x0000 00 00 17 2a 66 75 6e 63 28 2a 63 6f 64 65 2e 6d  ...*func(*code.m
	0x0010 69 6e 69 29 20 69 6e 74 36 34                    ini) int64
type.*func(*"".mini) int64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f5 92 ed 1c 00 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(*code.mini) int64-+0
	rel 48+8 t=1 type.func(*"".mini) int64+0
type.func(*"".mini) int64 SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f1 52 23 fd 02 08 08 33 00 00 00 00 00 00 00 00  .R#....3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(*code.mini) int64-+0
	rel 44+4 t=6 type.*func(*"".mini) int64+0
	rel 56+8 t=1 type.*"".mini+0
	rel 64+8 t=1 type.int64+0
type.*"".mini SRODATA size=104
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f3 d0 d8 17 01 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 02 00 02 00  ................
	0x0040 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*code.mini-+0
	rel 48+8 t=1 type."".mini+0
	rel 56+4 t=5 type..importpath."".+0
	rel 72+4 t=5 type..namedata.GetF.+0
	rel 76+4 t=24 type.func() float64+0
	rel 80+4 t=24 "".(*mini).GetF+0
	rel 84+4 t=24 "".(*mini).GetF+0
	rel 88+4 t=5 type..namedata.GetI.+0
	rel 92+4 t=24 type.func() int64+0
	rel 96+4 t=24 "".(*mini).GetI+0
	rel 100+4 t=24 "".(*mini).GetI+0
runtime.gcbits.4005 SRODATA dupok size=2
	0x0000 40 05                                            @.
type..namedata.b- SRODATA dupok size=4
	0x0000 00 00 01 62                                      ...b
type..namedata.c- SRODATA dupok size=4
	0x0000 00 00 01 63                                      ...c
type..namedata.bb- SRODATA dupok size=5
	0x0000 00 00 02 62 62                                   ...bb
type..namedata.cc- SRODATA dupok size=5
	0x0000 00 00 02 63 63                                   ...cc
type..namedata.bbb- SRODATA dupok size=6
	0x0000 00 00 03 62 62 62                                ...bbb
type..namedata.ccc- SRODATA dupok size=6
	0x0000 00 00 03 63 63 63                                ...ccc
type."".mini SRODATA size=312
	0x0000 60 00 00 00 00 00 00 00 58 00 00 00 00 00 00 00  `.......X.......
	0x0010 ba 6f ad d4 07 08 08 19 00 00 00 00 00 00 00 00  .o..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 09 00 00 00 00 00 00 00 09 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 e8 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x00b0 00 00 00 00 00 00 00 00 30 00 00 00 00 00 00 00  ........0.......
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x00e0 00 00 00 00 00 00 00 00 50 00 00 00 00 00 00 00  ........P.......
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 60 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  `...............
	0x0110 00 00 00 00 00 00 00 00 80 00 00 00 00 00 00 00  ................
	0x0120 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0130 a0 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 type..alg."".mini+0
	rel 32+8 t=1 runtime.gcbits.4005+0
	rel 40+4 t=5 type..namedata.*code.mini-+0
	rel 44+4 t=5 type.*"".mini+0
	rel 48+8 t=1 type..importpath."".+0
	rel 56+8 t=1 type."".mini+96
	rel 80+4 t=5 type..importpath."".+0
	rel 96+8 t=1 type..namedata.a-+0
	rel 104+8 t=1 type.int64+0
	rel 120+8 t=1 type..namedata.b-+0
	rel 128+8 t=1 type.int64+0
	rel 144+8 t=1 type..namedata.c-+0
	rel 152+8 t=1 type.int64+0
	rel 168+8 t=1 type..namedata.aa-+0
	rel 176+8 t=1 type.float64+0
	rel 192+8 t=1 type..namedata.bb-+0
	rel 200+8 t=1 type.float64+0
	rel 216+8 t=1 type..namedata.cc-+0
	rel 224+8 t=1 type.float64+0
	rel 240+8 t=1 type..namedata.aaa-+0
	rel 248+8 t=1 type.string+0
	rel 264+8 t=1 type..namedata.bbb-+0
	rel 272+8 t=1 type.string+0
	rel 288+8 t=1 type..namedata.ccc-+0
	rel 296+8 t=1 type.string+0
go.loc."".BenchmarkMiniIfc_Calc SDWARFLOC size=0
go.info."".BenchmarkMiniIfc_Calc SDWARFINFO size=128
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 4d 69 6e  ."".BenchmarkMin
	0x0010 69 49 66 63 5f 43 61 6c 63 00 00 00 00 00 00 00  iIfc_Calc.......
	0x0020 00 00 00 00 00 00 00 00 00 00 01 9c 00 00 00 00  ................
	0x0030 01 0a 26 6f 00 54 00 00 00 00 03 91 b0 7e 0f 62  ..&o.T.......~.b
	0x0040 00 00 52 00 00 00 00 01 9c 14 00 00 00 00 0a 69  ..R............i
	0x0050 00 56 00 00 00 00 03 91 80 7e 00 07 00 00 00 00  .V.......~......
	0x0060 00 00 00 00 00 00 00 00 57 00 00 00 12 00 00 00  ........W.......
	0x0070 00 03 91 88 7e 12 00 00 00 00 03 91 b8 7e 00 00  ....~........~..
	rel 26+8 t=1 "".BenchmarkMiniIfc_Calc+0
	rel 34+8 t=1 "".BenchmarkMiniIfc_Calc+630
	rel 44+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 54+4 t=28 go.info.*"".mini+0
	rel 67+4 t=28 go.info.*testing.B+0
	rel 74+4 t=28 go.range."".BenchmarkMiniIfc_Calc+0
	rel 82+4 t=28 go.info.int+0
	rel 92+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 96+4 t=28 go.range."".BenchmarkMiniIfc_Calc+48
	rel 100+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 109+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 118+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkMiniIfc_Calc SDWARFRANGE size=96
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkMiniIfc_Calc+130
	rel 8+8 t=50 "".BenchmarkMiniIfc_Calc+352
	rel 16+8 t=50 "".BenchmarkMiniIfc_Calc+508
	rel 24+8 t=50 "".BenchmarkMiniIfc_Calc+530
	rel 48+8 t=50 "".BenchmarkMiniIfc_Calc+352
	rel 56+8 t=50 "".BenchmarkMiniIfc_Calc+508
	rel 64+8 t=50 "".BenchmarkMiniIfc_Calc+530
	rel 72+8 t=50 "".BenchmarkMiniIfc_Calc+532
go.isstmt."".BenchmarkMiniIfc_Calc SDWARFMISC size=0
	0x0000 04 1b 04 17 03 07 01 04 02 05 01 0d 02 05 01 2e  ................
	0x0010 02 09 01 02 02 08 01 15 02 08 01 2b 02 05 01 7e  ...........+...~
	0x0020 02 03 01 07 02 03 01 72 02 05 01 02 02 08 01 0e  .......r........
	0x0030 02 04 01 62 02 05 01 05 02 0a 00                 ...b.......
go.loc."".BenchmarkMega_Calc SDWARFLOC size=0
go.info."".BenchmarkMega_Calc SDWARFINFO size=204
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 4d 65 67  ."".BenchmarkMeg
	0x0010 61 5f 43 61 6c 63 00 00 00 00 00 00 00 00 00 00  a_Calc..........
	0x0020 00 00 00 00 00 00 00 01 9c 00 00 00 00 01 0a 7e  ...............~
	0x0030 52 30 00 1e 00 00 00 00 03 91 98 79 0a 6f 00 5d  R0.........y.o.]
	0x0040 00 00 00 00 03 91 90 7d 0f 62 00 00 5b 00 00 00  .......}.b..[...
	0x0050 00 01 9c 14 00 00 00 00 0a 69 00 5f 00 00 00 00  .........i._....
	0x0060 03 91 c8 78 00 07 00 00 00 00 00 00 00 00 00 00  ...x............
	0x0070 00 00 60 00 00 00 12 00 00 00 00 03 91 b0 7a 06  ..`...........z.
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 1e 00 00 00 12 00 00 00  ................
	0x00a0 00 03 91 a8 79 00 00 07 00 00 00 00 00 00 00 00  ....y...........
	0x00b0 00 00 00 00 60 00 00 00 12 00 00 00 00 03 91 d0  ....`...........
	0x00c0 78 12 00 00 00 00 03 91 b8 79 00 00              x........y..
	rel 23+8 t=1 "".BenchmarkMega_Calc+0
	rel 31+8 t=1 "".BenchmarkMega_Calc+835
	rel 41+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 52+4 t=28 go.info.error+0
	rel 64+4 t=28 go.info."".mega+0
	rel 77+4 t=28 go.info.*testing.B+0
	rel 84+4 t=28 go.range."".BenchmarkMega_Calc+0
	rel 92+4 t=28 go.info.int+0
	rel 102+4 t=28 go.info."".calcMega$abstract+0
	rel 106+4 t=28 go.range."".BenchmarkMega_Calc+80
	rel 110+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 119+4 t=28 go.info."".calcMega$abstract+13
	rel 128+4 t=28 go.info.errors.New$abstract+0
	rel 132+8 t=1 "".BenchmarkMega_Calc+253
	rel 140+8 t=1 "".BenchmarkMega_Calc+322
	rel 148+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 157+4 t=28 go.info.errors.New$abstract+14
	rel 168+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 172+4 t=28 go.range."".BenchmarkMega_Calc+144
	rel 176+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 185+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 194+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkMega_Calc SDWARFRANGE size=192
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkMega_Calc+85
	rel 8+8 t=50 "".BenchmarkMega_Calc+189
	rel 16+8 t=50 "".BenchmarkMega_Calc+363
	rel 24+8 t=50 "".BenchmarkMega_Calc+547
	rel 32+8 t=50 "".BenchmarkMega_Calc+706
	rel 40+8 t=50 "".BenchmarkMega_Calc+734
	rel 48+8 t=50 "".BenchmarkMega_Calc+761
	rel 56+8 t=50 "".BenchmarkMega_Calc+809
	rel 80+8 t=50 "".BenchmarkMega_Calc+189
	rel 88+8 t=50 "".BenchmarkMega_Calc+253
	rel 96+8 t=50 "".BenchmarkMega_Calc+322
	rel 104+8 t=50 "".BenchmarkMega_Calc+363
	rel 112+8 t=50 "".BenchmarkMega_Calc+736
	rel 120+8 t=50 "".BenchmarkMega_Calc+761
	rel 144+8 t=50 "".BenchmarkMega_Calc+547
	rel 152+8 t=50 "".BenchmarkMega_Calc+706
	rel 160+8 t=50 "".BenchmarkMega_Calc+734
	rel 168+8 t=50 "".BenchmarkMega_Calc+736
go.isstmt."".BenchmarkMega_Calc SDWARFMISC size=0
	0x0000 04 1b 04 17 03 05 01 1e 02 0c 01 02 02 08 01 18  ................
	0x0010 02 08 01 32 02 09 01 11 02 07 01 1f 02 03 01 42  ...2...........B
	0x0020 02 07 01 22 02 08 01 b0 01 02 03 01 07 02 03 01  ..."............
	0x0030 72 02 05 01 02 02 08 01 11 02 04 01 1a 02 08 01  r...............
	0x0040 11 02 09 01 37 02 0a 00                          ....7...
go.loc."".BenchmarkMegaP_Calc SDWARFLOC size=0
go.info."".BenchmarkMegaP_Calc SDWARFINFO size=205
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 4d 65 67  ."".BenchmarkMeg
	0x0010 61 50 5f 43 61 6c 63 00 00 00 00 00 00 00 00 00  aP_Calc.........
	0x0020 00 00 00 00 00 00 00 00 01 9c 00 00 00 00 01 0a  ................
	0x0030 7e 52 30 00 4a 00 00 00 00 03 91 f8 7b 0a 6f 00  ~R0.J.......{.o.
	0x0040 66 00 00 00 00 03 91 90 7d 0f 62 00 00 64 00 00  f.......}.b..d..
	0x0050 00 00 01 9c 14 00 00 00 00 0a 69 00 68 00 00 00  ..........i.h...
	0x0060 00 03 91 98 7b 00 07 00 00 00 00 00 00 00 00 00  ....{...........
	0x0070 00 00 00 69 00 00 00 12 00 00 00 00 03 91 c0 7b  ...i...........{
	0x0080 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 4a 00 00 00 12 00 00  .........J......
	0x00a0 00 00 03 91 88 7c 00 00 07 00 00 00 00 00 00 00  .....|..........
	0x00b0 00 00 00 00 00 69 00 00 00 12 00 00 00 00 03 91  .....i..........
	0x00c0 a0 7b 12 00 00 00 00 03 91 98 7c 00 00           .{........|..
	rel 24+8 t=1 "".BenchmarkMegaP_Calc+0
	rel 32+8 t=1 "".BenchmarkMegaP_Calc+841
	rel 42+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 53+4 t=28 go.info.error+0
	rel 65+4 t=28 go.info."".mega+0
	rel 78+4 t=28 go.info.*testing.B+0
	rel 85+4 t=28 go.range."".BenchmarkMegaP_Calc+0
	rel 93+4 t=28 go.info.int+0
	rel 103+4 t=28 go.info."".calcMegaP$abstract+0
	rel 107+4 t=28 go.range."".BenchmarkMegaP_Calc+80
	rel 111+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 120+4 t=28 go.info."".calcMegaP$abstract+14
	rel 129+4 t=28 go.info.errors.New$abstract+0
	rel 133+8 t=1 "".BenchmarkMegaP_Calc+248
	rel 141+8 t=1 "".BenchmarkMegaP_Calc+317
	rel 149+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 158+4 t=28 go.info.errors.New$abstract+14
	rel 169+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 173+4 t=28 go.range."".BenchmarkMegaP_Calc+160
	rel 177+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 186+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 195+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkMegaP_Calc SDWARFRANGE size=208
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkMegaP_Calc+85
	rel 8+8 t=50 "".BenchmarkMegaP_Calc+178
	rel 16+8 t=50 "".BenchmarkMegaP_Calc+358
	rel 24+8 t=50 "".BenchmarkMegaP_Calc+542
	rel 32+8 t=50 "".BenchmarkMegaP_Calc+701
	rel 40+8 t=50 "".BenchmarkMegaP_Calc+729
	rel 48+8 t=50 "".BenchmarkMegaP_Calc+767
	rel 56+8 t=50 "".BenchmarkMegaP_Calc+815
	rel 80+8 t=50 "".BenchmarkMegaP_Calc+178
	rel 88+8 t=50 "".BenchmarkMegaP_Calc+188
	rel 96+8 t=50 "".BenchmarkMegaP_Calc+188
	rel 104+8 t=50 "".BenchmarkMegaP_Calc+248
	rel 112+8 t=50 "".BenchmarkMegaP_Calc+317
	rel 120+8 t=50 "".BenchmarkMegaP_Calc+358
	rel 128+8 t=50 "".BenchmarkMegaP_Calc+731
	rel 136+8 t=50 "".BenchmarkMegaP_Calc+767
	rel 160+8 t=50 "".BenchmarkMegaP_Calc+542
	rel 168+8 t=50 "".BenchmarkMegaP_Calc+701
	rel 176+8 t=50 "".BenchmarkMegaP_Calc+729
	rel 184+8 t=50 "".BenchmarkMegaP_Calc+731
go.isstmt."".BenchmarkMegaP_Calc SDWARFMISC size=0
	0x0000 04 1b 04 17 03 05 01 1e 02 0c 01 02 02 08 01 18  ................
	0x0010 02 08 01 27 02 08 01 18 02 07 01 1f 02 03 01 42  ...'...........B
	0x0020 02 07 01 22 02 08 01 b0 01 02 03 01 07 02 03 01  ..."............
	0x0030 72 02 05 01 02 02 08 01 11 02 04 01 1a 02 08 01  r...............
	0x0040 1c 02 09 01 37 02 0a 00                          ....7...
go.loc.type..hash."".mega SDWARFLOC dupok size=0
go.info.type..hash."".mega SDWARFINFO dupok size=81
	0x0000 03 74 79 70 65 2e 2e 68 61 73 68 2e 22 22 2e 6d  .type..hash."".m
	0x0010 65 67 61 00 00 00 00 00 00 00 00 00 00 00 00 00  ega.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 70 00 00 01  ............p...
	0x0030 00 00 00 00 01 9c 0f 68 00 00 01 00 00 00 00 02  .......h........
	0x0040 91 08 0f 7e 72 32 00 01 01 00 00 00 00 02 91 10  ...~r2..........
	0x0050 00                                               .
	rel 20+8 t=1 type..hash."".mega+0
	rel 28+8 t=1 type..hash."".mega+1359
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 48+4 t=28 go.info.*"".mega+0
	rel 59+4 t=28 go.info.uintptr+0
	rel 73+4 t=28 go.info.uintptr+0
go.range.type..hash."".mega SDWARFRANGE dupok size=0
go.isstmt.type..hash."".mega SDWARFMISC dupok size=0
	0x0000 04 18 04 17 03 0c 01 27 02 05 01 2f 02 05 01 2f  .......'.../.../
	0x0010 02 05 01 2f 02 05 01 2f 02 05 01 2f 02 05 01 2f  .../.../.../.../
	0x0020 02 05 01 34 02 05 01 34 02 05 01 34 02 05 01 34  ...4...4...4...4
	0x0030 02 05 01 34 02 05 01 34 02 05 01 34 02 05 01 34  ...4...4...4...4
	0x0040 02 05 01 34 02 05 01 34 02 05 01 34 02 05 01 31  ...4...4...4...1
	0x0050 02 05 01 31 02 05 01 31 02 05 01 31 02 05 01 31  ...1...1...1...1
	0x0060 02 05 01 25 02 0a 00                             ...%...
go.loc.type..eq."".mega SDWARFLOC dupok size=0
go.info.type..eq."".mega SDWARFINFO dupok size=79
	0x0000 03 74 79 70 65 2e 2e 65 71 2e 22 22 2e 6d 65 67  .type..eq."".meg
	0x0010 61 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  a...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 70 00 00 01 00 00  ..........p.....
	0x0030 00 00 01 9c 0f 71 00 00 01 00 00 00 00 02 91 08  .....q..........
	0x0040 0f 7e 72 32 00 01 01 00 00 00 00 02 91 10 00     .~r2...........
	rel 18+8 t=1 type..eq."".mega+0
	rel 26+8 t=1 type..eq."".mega+2765
	rel 36+4 t=29 gofile..<autogenerated>+0
	rel 46+4 t=28 go.info.*"".mega+0
	rel 57+4 t=28 go.info.*"".mega+0
	rel 71+4 t=28 go.info.bool+0
go.range.type..eq."".mega SDWARFRANGE dupok size=0
go.isstmt.type..eq."".mega SDWARFMISC dupok size=0
	0x0000 04 1b 04 17 03 08 01 31 02 05 01 e0 06 02 05 01  .......1........
	0x0010 07 02 04 01 90 01 02 05 01 07 02 04 01 90 01 02  ................
	0x0020 05 01 07 02 04 01 90 01 02 05 01 07 02 04 01 90  ................
	0x0030 01 02 05 01 07 02 04 01 90 01 02 05 01 07 02 04  ................
	0x0040 01 90 01 02 05 01 07 02 04 01 90 01 02 05 01 07  ................
	0x0050 02 04 01 90 01 02 05 01 07 02 04 01 84 01 02 05  ................
	0x0060 01 07 02 04 01 78 02 05 01 07 02 04 01 02 02 05  .....x..........
	0x0070 01 c0 01 02 0a 00                                ......
type..hashfunc."".mega SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type..hash."".mega+0
type..eqfunc."".mega SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type..eq."".mega+0
type..alg."".mega SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 type..hashfunc."".mega+0
	rel 8+8 t=1 type..eqfunc."".mega+0
type..namedata.*code.mega- SRODATA dupok size=13
	0x0000 00 00 0a 2a 63 6f 64 65 2e 6d 65 67 61           ...*code.mega
type..namedata.*func(*code.mega) float64- SRODATA dupok size=28
	0x0000 00 00 19 2a 66 75 6e 63 28 2a 63 6f 64 65 2e 6d  ...*func(*code.m
	0x0010 65 67 61 29 20 66 6c 6f 61 74 36 34              ega) float64
type.*func(*"".mega) float64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 32 91 b9 f8 00 08 08 36 00 00 00 00 00 00 00 00  2......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(*code.mega) float64-+0
	rel 48+8 t=1 type.func(*"".mega) float64+0
type.func(*"".mega) float64 SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 c5 82 ca 4f 02 08 08 33 00 00 00 00 00 00 00 00  ...O...3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(*code.mega) float64-+0
	rel 44+4 t=6 type.*func(*"".mega) float64+0
	rel 56+8 t=1 type.*"".mega+0
	rel 64+8 t=1 type.float64+0
type..namedata.*func(*code.mega) int64- SRODATA dupok size=26
	0x0000 00 00 17 2a 66 75 6e 63 28 2a 63 6f 64 65 2e 6d  ...*func(*code.m
	0x0010 65 67 61 29 20 69 6e 74 36 34                    ega) int64
type.*func(*"".mega) int64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 c3 8b f6 a6 00 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(*code.mega) int64-+0
	rel 48+8 t=1 type.func(*"".mega) int64+0
type.func(*"".mega) int64 SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 8e 35 b6 bf 02 08 08 33 00 00 00 00 00 00 00 00  .5.....3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(*code.mega) int64-+0
	rel 44+4 t=6 type.*func(*"".mega) int64+0
	rel 56+8 t=1 type.*"".mega+0
	rel 64+8 t=1 type.int64+0
type.*"".mega SRODATA size=104
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 5f bf 18 06 01 08 08 36 00 00 00 00 00 00 00 00  _......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 02 00 02 00  ................
	0x0040 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*code.mega-+0
	rel 48+8 t=1 type."".mega+0
	rel 56+4 t=5 type..importpath."".+0
	rel 72+4 t=5 type..namedata.GetF.+0
	rel 76+4 t=24 type.func() float64+0
	rel 80+4 t=24 "".(*mega).GetF+0
	rel 84+4 t=24 "".(*mega).GetF+0
	rel 88+4 t=5 type..namedata.GetI.+0
	rel 92+4 t=24 type.func() int64+0
	rel 96+4 t=24 "".(*mega).GetI+0
	rel 100+4 t=24 "".(*mega).GetI+0
runtime.gcbits.000040555505 SRODATA dupok size=6
	0x0000 00 00 40 55 55 05                                ..@UU.
type..namedata.d- SRODATA dupok size=4
	0x0000 00 00 01 64                                      ...d
type..namedata.e- SRODATA dupok size=4
	0x0000 00 00 01 65                                      ...e
type..namedata.f- SRODATA dupok size=4
	0x0000 00 00 01 66                                      ...f
type..namedata.g- SRODATA dupok size=4
	0x0000 00 00 01 67                                      ...g
type..namedata.h- SRODATA dupok size=4
	0x0000 00 00 01 68                                      ...h
type..namedata.i- SRODATA dupok size=4
	0x0000 00 00 01 69                                      ...i
type..namedata.j- SRODATA dupok size=4
	0x0000 00 00 01 6a                                      ...j
type..namedata.k- SRODATA dupok size=4
	0x0000 00 00 01 6b                                      ...k
type..namedata.dd- SRODATA dupok size=5
	0x0000 00 00 02 64 64                                   ...dd
type..namedata.ee- SRODATA dupok size=5
	0x0000 00 00 02 65 65                                   ...ee
type..namedata.ff- SRODATA dupok size=5
	0x0000 00 00 02 66 66                                   ...ff
type..namedata.gg- SRODATA dupok size=5
	0x0000 00 00 02 67 67                                   ...gg
type..namedata.hh- SRODATA dupok size=5
	0x0000 00 00 02 68 68                                   ...hh
type..namedata.ii- SRODATA dupok size=5
	0x0000 00 00 02 69 69                                   ...ii
type..namedata.jj- SRODATA dupok size=5
	0x0000 00 00 02 6a 6a                                   ...jj
type..namedata.kk- SRODATA dupok size=5
	0x0000 00 00 02 6b 6b                                   ...kk
type..namedata.ddd- SRODATA dupok size=6
	0x0000 00 00 03 64 64 64                                ...ddd
type..namedata.eee- SRODATA dupok size=6
	0x0000 00 00 03 65 65 65                                ...eee
type..namedata.fff- SRODATA dupok size=6
	0x0000 00 00 03 66 66 66                                ...fff
type..namedata.ggg- SRODATA dupok size=6
	0x0000 00 00 03 67 67 67                                ...ggg
type..namedata.hhh- SRODATA dupok size=6
	0x0000 00 00 03 68 68 68                                ...hhh
type..namedata.iii- SRODATA dupok size=6
	0x0000 00 00 03 69 69 69                                ...iii
type..namedata.jjj- SRODATA dupok size=6
	0x0000 00 00 03 6a 6a 6a                                ...jjj
type..namedata.kkk- SRODATA dupok size=6
	0x0000 00 00 03 6b 6b 6b                                ...kkk
type."".mega SRODATA size=888
	0x0000 60 01 00 00 00 00 00 00 58 01 00 00 00 00 00 00  `.......X.......
	0x0010 69 ac 57 fa 07 08 08 19 00 00 00 00 00 00 00 00  i.W.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 21 00 00 00 00 00 00 00 21 00 00 00 00 00 00 00  !.......!.......
	0x0050 00 00 00 00 00 00 00 00 28 03 00 00 00 00 00 00  ........(.......
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x00b0 00 00 00 00 00 00 00 00 30 00 00 00 00 00 00 00  ........0.......
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x00e0 00 00 00 00 00 00 00 00 50 00 00 00 00 00 00 00  ........P.......
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 60 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  `...............
	0x0110 00 00 00 00 00 00 00 00 70 00 00 00 00 00 00 00  ........p.......
	0x0120 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0130 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0140 00 00 00 00 00 00 00 00 90 00 00 00 00 00 00 00  ................
	0x0150 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0160 a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0170 00 00 00 00 00 00 00 00 b0 00 00 00 00 00 00 00  ................
	0x0180 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0190 c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01a0 00 00 00 00 00 00 00 00 d0 00 00 00 00 00 00 00  ................
	0x01b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01c0 e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01d0 00 00 00 00 00 00 00 00 f0 00 00 00 00 00 00 00  ................
	0x01e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01f0 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0200 00 00 00 00 00 00 00 00 10 01 00 00 00 00 00 00  ................
	0x0210 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0220 20 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x0230 00 00 00 00 00 00 00 00 30 01 00 00 00 00 00 00  ........0.......
	0x0240 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0250 40 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x0260 00 00 00 00 00 00 00 00 50 01 00 00 00 00 00 00  ........P.......
	0x0270 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0280 60 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  `...............
	0x0290 00 00 00 00 00 00 00 00 80 01 00 00 00 00 00 00  ................
	0x02a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02b0 a0 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02c0 00 00 00 00 00 00 00 00 c0 01 00 00 00 00 00 00  ................
	0x02d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02e0 e0 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02f0 00 00 00 00 00 00 00 00 00 02 00 00 00 00 00 00  ................
	0x0300 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0310 20 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x0320 00 00 00 00 00 00 00 00 40 02 00 00 00 00 00 00  ........@.......
	0x0330 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0340 60 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00  `...............
	0x0350 00 00 00 00 00 00 00 00 80 02 00 00 00 00 00 00  ................
	0x0360 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0370 a0 02 00 00 00 00 00 00                          ........
	rel 24+8 t=1 type..alg."".mega+0
	rel 32+8 t=1 runtime.gcbits.000040555505+0
	rel 40+4 t=5 type..namedata.*code.mega-+0
	rel 44+4 t=5 type.*"".mega+0
	rel 48+8 t=1 type..importpath."".+0
	rel 56+8 t=1 type."".mega+96
	rel 80+4 t=5 type..importpath."".+0
	rel 96+8 t=1 type..namedata.a-+0
	rel 104+8 t=1 type.int64+0
	rel 120+8 t=1 type..namedata.b-+0
	rel 128+8 t=1 type.int64+0
	rel 144+8 t=1 type..namedata.c-+0
	rel 152+8 t=1 type.int64+0
	rel 168+8 t=1 type..namedata.d-+0
	rel 176+8 t=1 type.int64+0
	rel 192+8 t=1 type..namedata.e-+0
	rel 200+8 t=1 type.int64+0
	rel 216+8 t=1 type..namedata.f-+0
	rel 224+8 t=1 type.int64+0
	rel 240+8 t=1 type..namedata.g-+0
	rel 248+8 t=1 type.int64+0
	rel 264+8 t=1 type..namedata.h-+0
	rel 272+8 t=1 type.int64+0
	rel 288+8 t=1 type..namedata.i-+0
	rel 296+8 t=1 type.int64+0
	rel 312+8 t=1 type..namedata.j-+0
	rel 320+8 t=1 type.int64+0
	rel 336+8 t=1 type..namedata.k-+0
	rel 344+8 t=1 type.int64+0
	rel 360+8 t=1 type..namedata.aa-+0
	rel 368+8 t=1 type.float64+0
	rel 384+8 t=1 type..namedata.bb-+0
	rel 392+8 t=1 type.float64+0
	rel 408+8 t=1 type..namedata.cc-+0
	rel 416+8 t=1 type.float64+0
	rel 432+8 t=1 type..namedata.dd-+0
	rel 440+8 t=1 type.float64+0
	rel 456+8 t=1 type..namedata.ee-+0
	rel 464+8 t=1 type.float64+0
	rel 480+8 t=1 type..namedata.ff-+0
	rel 488+8 t=1 type.float64+0
	rel 504+8 t=1 type..namedata.gg-+0
	rel 512+8 t=1 type.float64+0
	rel 528+8 t=1 type..namedata.hh-+0
	rel 536+8 t=1 type.float64+0
	rel 552+8 t=1 type..namedata.ii-+0
	rel 560+8 t=1 type.float64+0
	rel 576+8 t=1 type..namedata.jj-+0
	rel 584+8 t=1 type.float64+0
	rel 600+8 t=1 type..namedata.kk-+0
	rel 608+8 t=1 type.float64+0
	rel 624+8 t=1 type..namedata.aaa-+0
	rel 632+8 t=1 type.string+0
	rel 648+8 t=1 type..namedata.bbb-+0
	rel 656+8 t=1 type.string+0
	rel 672+8 t=1 type..namedata.ccc-+0
	rel 680+8 t=1 type.string+0
	rel 696+8 t=1 type..namedata.ddd-+0
	rel 704+8 t=1 type.string+0
	rel 720+8 t=1 type..namedata.eee-+0
	rel 728+8 t=1 type.string+0
	rel 744+8 t=1 type..namedata.fff-+0
	rel 752+8 t=1 type.string+0
	rel 768+8 t=1 type..namedata.ggg-+0
	rel 776+8 t=1 type.string+0
	rel 792+8 t=1 type..namedata.hhh-+0
	rel 800+8 t=1 type.string+0
	rel 816+8 t=1 type..namedata.iii-+0
	rel 824+8 t=1 type.string+0
	rel 840+8 t=1 type..namedata.jjj-+0
	rel 848+8 t=1 type.string+0
	rel 864+8 t=1 type..namedata.kkk-+0
	rel 872+8 t=1 type.string+0
go.loc."".BenchmarkMegaIfc_Calc SDWARFLOC size=0
go.info."".BenchmarkMegaIfc_Calc SDWARFINFO size=128
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 4d 65 67  ."".BenchmarkMeg
	0x0010 61 49 66 63 5f 43 61 6c 63 00 00 00 00 00 00 00  aIfc_Calc.......
	0x0020 00 00 00 00 00 00 00 00 00 00 01 9c 00 00 00 00  ................
	0x0030 01 0a 26 6f 00 6f 00 00 00 00 03 91 b0 7c 0f 62  ..&o.o.......|.b
	0x0040 00 00 6d 00 00 00 00 01 9c 14 00 00 00 00 0a 69  ..m............i
	0x0050 00 71 00 00 00 00 03 91 80 7c 00 07 00 00 00 00  .q.......|......
	0x0060 00 00 00 00 00 00 00 00 72 00 00 00 12 00 00 00  ........r.......
	0x0070 00 03 91 88 7c 12 00 00 00 00 03 91 b8 7c 00 00  ....|........|..
	rel 26+8 t=1 "".BenchmarkMegaIfc_Calc+0
	rel 34+8 t=1 "".BenchmarkMegaIfc_Calc+660
	rel 44+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 54+4 t=28 go.info.*"".mega+0
	rel 67+4 t=28 go.info.*testing.B+0
	rel 74+4 t=28 go.range."".BenchmarkMegaIfc_Calc+0
	rel 82+4 t=28 go.info.int+0
	rel 92+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 96+4 t=28 go.range."".BenchmarkMegaIfc_Calc+48
	rel 100+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 109+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 118+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkMegaIfc_Calc SDWARFRANGE size=96
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkMegaIfc_Calc+130
	rel 8+8 t=50 "".BenchmarkMegaIfc_Calc+373
	rel 16+8 t=50 "".BenchmarkMegaIfc_Calc+532
	rel 24+8 t=50 "".BenchmarkMegaIfc_Calc+560
	rel 48+8 t=50 "".BenchmarkMegaIfc_Calc+373
	rel 56+8 t=50 "".BenchmarkMegaIfc_Calc+532
	rel 64+8 t=50 "".BenchmarkMegaIfc_Calc+560
	rel 72+8 t=50 "".BenchmarkMegaIfc_Calc+562
go.isstmt."".BenchmarkMegaIfc_Calc SDWARFMISC size=0
	0x0000 04 1b 04 17 03 07 01 04 02 05 01 0d 02 05 01 2e  ................
	0x0010 02 0c 01 02 02 08 01 18 02 08 01 2b 02 05 01 8d  ...........+....
	0x0020 01 02 03 01 07 02 03 01 72 02 05 01 02 02 08 01  ........r.......
	0x0030 11 02 04 01 68 02 05 01 05 02 0a 00              ....h.......
go.loc."".BenchmarkTera_Calc SDWARFLOC size=0
go.info."".BenchmarkTera_Calc SDWARFINFO size=204
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 54 65 72  ."".BenchmarkTer
	0x0010 61 5f 43 61 6c 63 00 00 00 00 00 00 00 00 00 00  a_Calc..........
	0x0020 00 00 00 00 00 00 00 01 9c 00 00 00 00 01 0a 7e  ...............~
	0x0030 52 30 00 25 00 00 00 00 03 91 d8 71 0a 6f 00 78  R0.%.......q.o.x
	0x0040 00 00 00 00 03 91 b0 79 0f 62 00 00 76 00 00 00  .......y.b..v...
	0x0050 00 01 9c 14 00 00 00 00 0a 69 00 7a 00 00 00 00  .........i.z....
	0x0060 03 91 88 71 00 07 00 00 00 00 00 00 00 00 00 00  ...q............
	0x0070 00 00 7b 00 00 00 12 00 00 00 00 03 91 f0 72 06  ..{...........r.
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 25 00 00 00 12 00 00 00  ........%.......
	0x00a0 00 03 91 e8 71 00 00 07 00 00 00 00 00 00 00 00  ....q...........
	0x00b0 00 00 00 00 7b 00 00 00 12 00 00 00 00 03 91 90  ....{...........
	0x00c0 71 12 00 00 00 00 03 91 f8 71 00 00              q........q..
	rel 23+8 t=1 "".BenchmarkTera_Calc+0
	rel 31+8 t=1 "".BenchmarkTera_Calc+835
	rel 41+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 52+4 t=28 go.info.error+0
	rel 64+4 t=28 go.info."".tera+0
	rel 77+4 t=28 go.info.*testing.B+0
	rel 84+4 t=28 go.range."".BenchmarkTera_Calc+0
	rel 92+4 t=28 go.info.int+0
	rel 102+4 t=28 go.info."".calcTera$abstract+0
	rel 106+4 t=28 go.range."".BenchmarkTera_Calc+80
	rel 110+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 119+4 t=28 go.info."".calcTera$abstract+13
	rel 128+4 t=28 go.info.errors.New$abstract+0
	rel 132+8 t=1 "".BenchmarkTera_Calc+253
	rel 140+8 t=1 "".BenchmarkTera_Calc+322
	rel 148+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 157+4 t=28 go.info.errors.New$abstract+14
	rel 168+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 172+4 t=28 go.range."".BenchmarkTera_Calc+144
	rel 176+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 185+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 194+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkTera_Calc SDWARFRANGE size=192
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkTera_Calc+85
	rel 8+8 t=50 "".BenchmarkTera_Calc+189
	rel 16+8 t=50 "".BenchmarkTera_Calc+363
	rel 24+8 t=50 "".BenchmarkTera_Calc+547
	rel 32+8 t=50 "".BenchmarkTera_Calc+706
	rel 40+8 t=50 "".BenchmarkTera_Calc+734
	rel 48+8 t=50 "".BenchmarkTera_Calc+761
	rel 56+8 t=50 "".BenchmarkTera_Calc+809
	rel 80+8 t=50 "".BenchmarkTera_Calc+189
	rel 88+8 t=50 "".BenchmarkTera_Calc+253
	rel 96+8 t=50 "".BenchmarkTera_Calc+322
	rel 104+8 t=50 "".BenchmarkTera_Calc+363
	rel 112+8 t=50 "".BenchmarkTera_Calc+736
	rel 120+8 t=50 "".BenchmarkTera_Calc+761
	rel 144+8 t=50 "".BenchmarkTera_Calc+547
	rel 152+8 t=50 "".BenchmarkTera_Calc+706
	rel 160+8 t=50 "".BenchmarkTera_Calc+734
	rel 168+8 t=50 "".BenchmarkTera_Calc+736
go.isstmt."".BenchmarkTera_Calc SDWARFMISC size=0
	0x0000 04 1b 04 17 03 05 01 1e 02 0c 01 02 02 08 01 18  ................
	0x0010 02 08 01 32 02 09 01 11 02 07 01 1f 02 03 01 42  ...2...........B
	0x0020 02 07 01 22 02 08 01 b0 01 02 03 01 07 02 03 01  ..."............
	0x0030 72 02 05 01 02 02 08 01 11 02 04 01 1a 02 08 01  r...............
	0x0040 11 02 09 01 37 02 0a 00                          ....7...
go.loc."".BenchmarkTeraP_Calc SDWARFLOC size=0
go.info."".BenchmarkTeraP_Calc SDWARFINFO size=207
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 54 65 72  ."".BenchmarkTer
	0x0010 61 50 5f 43 61 6c 63 00 00 00 00 00 00 00 00 00  aP_Calc.........
	0x0020 00 00 00 00 00 00 00 00 01 9c 00 00 00 00 01 0a  ................
	0x0030 7e 52 30 00 51 00 00 00 00 03 91 98 78 0a 6f 00  ~R0.Q.......x.o.
	0x0040 81 01 00 00 00 00 03 91 b0 79 0f 62 00 00 7f 00  .........y.b....
	0x0050 00 00 00 01 9c 14 00 00 00 00 0a 69 00 83 01 00  ...........i....
	0x0060 00 00 00 03 91 b8 77 00 07 00 00 00 00 00 00 00  ......w.........
	0x0070 00 00 00 00 00 84 00 00 00 12 00 00 00 00 03 91  ................
	0x0080 e0 77 06 00 00 00 00 00 00 00 00 00 00 00 00 00  .w..............
	0x0090 00 00 00 00 00 00 00 00 00 00 00 51 00 00 00 12  ...........Q....
	0x00a0 00 00 00 00 03 91 a8 78 00 00 07 00 00 00 00 00  .......x........
	0x00b0 00 00 00 00 00 00 00 84 00 00 00 12 00 00 00 00  ................
	0x00c0 03 91 c0 77 12 00 00 00 00 03 91 b8 78 00 00     ...w........x..
	rel 24+8 t=1 "".BenchmarkTeraP_Calc+0
	rel 32+8 t=1 "".BenchmarkTeraP_Calc+847
	rel 42+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 53+4 t=28 go.info.error+0
	rel 66+4 t=28 go.info."".tera+0
	rel 79+4 t=28 go.info.*testing.B+0
	rel 86+4 t=28 go.range."".BenchmarkTeraP_Calc+0
	rel 95+4 t=28 go.info.int+0
	rel 105+4 t=28 go.info."".calcTeraP$abstract+0
	rel 109+4 t=28 go.range."".BenchmarkTeraP_Calc+80
	rel 113+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 122+4 t=28 go.info."".calcTeraP$abstract+14
	rel 131+4 t=28 go.info.errors.New$abstract+0
	rel 135+8 t=1 "".BenchmarkTeraP_Calc+251
	rel 143+8 t=1 "".BenchmarkTeraP_Calc+320
	rel 151+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 160+4 t=28 go.info.errors.New$abstract+14
	rel 171+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 175+4 t=28 go.range."".BenchmarkTeraP_Calc+160
	rel 179+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 188+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 197+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkTeraP_Calc SDWARFRANGE size=208
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkTeraP_Calc+85
	rel 8+8 t=50 "".BenchmarkTeraP_Calc+178
	rel 16+8 t=50 "".BenchmarkTeraP_Calc+361
	rel 24+8 t=50 "".BenchmarkTeraP_Calc+545
	rel 32+8 t=50 "".BenchmarkTeraP_Calc+704
	rel 40+8 t=50 "".BenchmarkTeraP_Calc+732
	rel 48+8 t=50 "".BenchmarkTeraP_Calc+773
	rel 56+8 t=50 "".BenchmarkTeraP_Calc+821
	rel 80+8 t=50 "".BenchmarkTeraP_Calc+178
	rel 88+8 t=50 "".BenchmarkTeraP_Calc+188
	rel 96+8 t=50 "".BenchmarkTeraP_Calc+188
	rel 104+8 t=50 "".BenchmarkTeraP_Calc+251
	rel 112+8 t=50 "".BenchmarkTeraP_Calc+320
	rel 120+8 t=50 "".BenchmarkTeraP_Calc+361
	rel 128+8 t=50 "".BenchmarkTeraP_Calc+734
	rel 136+8 t=50 "".BenchmarkTeraP_Calc+773
	rel 160+8 t=50 "".BenchmarkTeraP_Calc+545
	rel 168+8 t=50 "".BenchmarkTeraP_Calc+704
	rel 176+8 t=50 "".BenchmarkTeraP_Calc+732
	rel 184+8 t=50 "".BenchmarkTeraP_Calc+734
go.isstmt."".BenchmarkTeraP_Calc SDWARFMISC size=0
	0x0000 04 1b 04 17 03 05 01 1e 02 0c 01 02 02 08 01 18  ................
	0x0010 02 08 01 27 02 08 01 1b 02 07 01 1f 02 03 01 42  ...'...........B
	0x0020 02 07 01 22 02 08 01 b0 01 02 03 01 07 02 03 01  ..."............
	0x0030 72 02 05 01 02 02 08 01 11 02 04 01 1a 02 08 01  r...............
	0x0040 1f 02 09 01 37 02 0a 00                          ....7...
go.loc.type..hash."".tera SDWARFLOC dupok size=0
go.info.type..hash."".tera SDWARFINFO dupok size=81
	0x0000 03 74 79 70 65 2e 2e 68 61 73 68 2e 22 22 2e 74  .type..hash."".t
	0x0010 65 72 61 00 00 00 00 00 00 00 00 00 00 00 00 00  era.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 70 00 00 01  ............p...
	0x0030 00 00 00 00 01 9c 0f 68 00 00 01 00 00 00 00 02  .......h........
	0x0040 91 08 0f 7e 72 32 00 01 01 00 00 00 00 02 91 10  ...~r2..........
	0x0050 00                                               .
	rel 20+8 t=1 type..hash."".tera+0
	rel 28+8 t=1 type..hash."".tera+3084
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 48+4 t=28 go.info.*"".tera+0
	rel 59+4 t=28 go.info.uintptr+0
	rel 73+4 t=28 go.info.uintptr+0
go.range.type..hash."".tera SDWARFRANGE dupok size=0
go.isstmt.type..hash."".tera SDWARFMISC dupok size=0
	0x0000 04 1b 04 17 03 0c 01 2a 02 05 01 34 02 05 01 31  .......*...4...1
	0x0010 02 05 01 31 02 05 01 31 02 05 01 31 02 05 01 31  ...1...1...1...1
	0x0020 02 05 01 34 02 05 01 34 02 05 01 34 02 05 01 34  ...4...4...4...4
	0x0030 02 05 01 34 02 05 01 34 02 05 01 34 02 05 01 34  ...4...4...4...4
	0x0040 02 05 01 34 02 05 01 34 02 05 01 34 02 05 01 34  ...4...4...4...4
	0x0050 02 05 01 34 02 05 01 34 02 05 01 34 02 05 01 34  ...4...4...4...4
	0x0060 02 05 01 34 02 05 01 34 02 05 01 34 02 05 01 34  ...4...4...4...4
	0x0070 02 05 01 34 02 05 01 34 02 05 01 34 02 05 01 34  ...4...4...4...4
	0x0080 02 05 01 34 02 05 01 34 02 05 01 34 02 05 01 34  ...4...4...4...4
	0x0090 02 05 01 34 02 05 01 34 02 05 01 34 02 05 01 34  ...4...4...4...4
	0x00a0 02 05 01 34 02 05 01 34 02 05 01 34 02 05 01 34  ...4...4...4...4
	0x00b0 02 05 01 34 02 05 01 34 02 05 01 34 02 05 01 31  ...4...4...4...1
	0x00c0 02 05 01 31 02 05 01 31 02 05 01 31 02 05 01 31  ...1...1...1...1
	0x00d0 02 05 01 31 02 05 01 31 02 05 01 25 02 0a 00     ...1...1...%...
go.loc.type..eq."".tera SDWARFLOC dupok size=0
go.info.type..eq."".tera SDWARFINFO dupok size=79
	0x0000 03 74 79 70 65 2e 2e 65 71 2e 22 22 2e 74 65 72  .type..eq."".ter
	0x0010 61 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  a...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 70 00 00 01 00 00  ..........p.....
	0x0030 00 00 01 9c 0f 71 00 00 01 00 00 00 00 02 91 08  .....q..........
	0x0040 0f 7e 72 32 00 01 01 00 00 00 00 02 91 10 00     .~r2...........
	rel 18+8 t=1 type..eq."".tera+0
	rel 26+8 t=1 type..eq."".tera+6479
	rel 36+4 t=29 gofile..<autogenerated>+0
	rel 46+4 t=28 go.info.*"".tera+0
	rel 57+4 t=28 go.info.*"".tera+0
	rel 71+4 t=28 go.info.bool+0
go.range.type..eq."".tera SDWARFRANGE dupok size=0
go.isstmt.type..eq."".tera SDWARFMISC dupok size=0
	0x0000 04 1b 04 17 03 08 01 31 02 05 01 fa 0e 02 05 01  .......1........
	0x0010 07 02 04 01 90 01 02 05 01 07 02 04 01 90 01 02  ................
	0x0020 05 01 07 02 04 01 90 01 02 05 01 07 02 04 01 90  ................
	0x0030 01 02 05 01 07 02 04 01 90 01 02 05 01 07 02 04  ................
	0x0040 01 90 01 02 05 01 07 02 04 01 90 01 02 05 01 07  ................
	0x0050 02 04 01 90 01 02 05 01 07 02 04 01 90 01 02 05  ................
	0x0060 01 07 02 04 01 90 01 02 05 01 07 02 04 01 90 01  ................
	0x0070 02 05 01 07 02 04 01 90 01 02 05 01 07 02 04 01  ................
	0x0080 90 01 02 05 01 07 02 04 01 90 01 02 05 01 07 02  ................
	0x0090 04 01 90 01 02 05 01 07 02 04 01 90 01 02 05 01  ................
	0x00a0 07 02 04 01 90 01 02 05 01 07 02 04 01 90 01 02  ................
	0x00b0 05 01 07 02 04 01 90 01 02 05 01 07 02 04 01 84  ................
	0x00c0 01 02 05 01 07 02 04 01 90 01 02 05 01 07 02 04  ................
	0x00d0 01 90 01 02 05 01 07 02 04 01 90 01 02 05 01 07  ................
	0x00e0 02 04 01 90 01 02 05 01 07 02 04 01 8d 01 02 05  ................
	0x00f0 01 07 02 04 01 02 02 05 01 b3 03 02 0a 00        ..............
type..hashfunc."".tera SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type..hash."".tera+0
type..eqfunc."".tera SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type..eq."".tera+0
type..alg."".tera SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 type..hashfunc."".tera+0
	rel 8+8 t=1 type..eqfunc."".tera+0
type..namedata.*code.tera- SRODATA dupok size=13
	0x0000 00 00 0a 2a 63 6f 64 65 2e 74 65 72 61           ...*code.tera
type..namedata.*func(*code.tera) float64- SRODATA dupok size=28
	0x0000 00 00 19 2a 66 75 6e 63 28 2a 63 6f 64 65 2e 74  ...*func(*code.t
	0x0010 65 72 61 29 20 66 6c 6f 61 74 36 34              era) float64
type.*func(*"".tera) float64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 af 45 4d c1 00 08 08 36 00 00 00 00 00 00 00 00  .EM....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(*code.tera) float64-+0
	rel 48+8 t=1 type.func(*"".tera) float64+0
type.func(*"".tera) float64 SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 19 83 b9 a7 02 08 08 33 00 00 00 00 00 00 00 00  .......3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(*code.tera) float64-+0
	rel 44+4 t=6 type.*func(*"".tera) float64+0
	rel 56+8 t=1 type.*"".tera+0
	rel 64+8 t=1 type.float64+0
type..namedata.*func(*code.tera) int64- SRODATA dupok size=26
	0x0000 00 00 17 2a 66 75 6e 63 28 2a 63 6f 64 65 2e 74  ...*func(*code.t
	0x0010 65 72 61 29 20 69 6e 74 36 34                    era) int64
type.*func(*"".tera) int64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 ca 41 45 68 00 08 08 36 00 00 00 00 00 00 00 00  .AEh...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(*code.tera) int64-+0
	rel 48+8 t=1 type.func(*"".tera) int64+0
type.func(*"".tera) int64 SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 82 77 da 53 02 08 08 33 00 00 00 00 00 00 00 00  .w.S...3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(*code.tera) int64-+0
	rel 44+4 t=6 type.*func(*"".tera) int64+0
	rel 56+8 t=1 type.*"".tera+0
	rel 64+8 t=1 type.int64+0
type.*"".tera SRODATA size=104
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 39 6f 60 49 01 08 08 36 00 00 00 00 00 00 00 00  9o`I...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 02 00 02 00  ................
	0x0040 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*code.tera-+0
	rel 48+8 t=1 type."".tera+0
	rel 56+4 t=5 type..importpath."".+0
	rel 72+4 t=5 type..namedata.GetF.+0
	rel 76+4 t=24 type.func() float64+0
	rel 80+4 t=24 "".(*tera).GetF+0
	rel 84+4 t=24 "".(*tera).GetF+0
	rel 88+4 t=5 type..namedata.GetI.+0
	rel 92+4 t=24 type.func() int64+0
	rel 96+4 t=24 "".(*tera).GetI+0
	rel 100+4 t=24 "".(*tera).GetI+0
runtime.gcbits.00000000000050555555555555 SRODATA dupok size=13
	0x0000 00 00 00 00 00 00 50 55 55 55 55 55 55           ......PUUUUUU
type..namedata.l- SRODATA dupok size=4
	0x0000 00 00 01 6c                                      ...l
type..namedata.m- SRODATA dupok size=4
	0x0000 00 00 01 6d                                      ...m
type..namedata.n- SRODATA dupok size=4
	0x0000 00 00 01 6e                                      ...n
type..namedata.o- SRODATA dupok size=4
	0x0000 00 00 01 6f                                      ...o
type..namedata.p- SRODATA dupok size=4
	0x0000 00 00 01 70                                      ...p
type..namedata.q- SRODATA dupok size=4
	0x0000 00 00 01 71                                      ...q
type..namedata.r- SRODATA dupok size=4
	0x0000 00 00 01 72                                      ...r
type..namedata.s- SRODATA dupok size=4
	0x0000 00 00 01 73                                      ...s
type..namedata.t- SRODATA dupok size=4
	0x0000 00 00 01 74                                      ...t
type..namedata.u- SRODATA dupok size=4
	0x0000 00 00 01 75                                      ...u
type..namedata.v- SRODATA dupok size=4
	0x0000 00 00 01 76                                      ...v
type..namedata.x- SRODATA dupok size=4
	0x0000 00 00 01 78                                      ...x
type..namedata.y- SRODATA dupok size=4
	0x0000 00 00 01 79                                      ...y
type..namedata.w- SRODATA dupok size=4
	0x0000 00 00 01 77                                      ...w
type..namedata.z- SRODATA dupok size=4
	0x0000 00 00 01 7a                                      ...z
type..namedata.ll- SRODATA dupok size=5
	0x0000 00 00 02 6c 6c                                   ...ll
type..namedata.mm- SRODATA dupok size=5
	0x0000 00 00 02 6d 6d                                   ...mm
type..namedata.nn- SRODATA dupok size=5
	0x0000 00 00 02 6e 6e                                   ...nn
type..namedata.oo- SRODATA dupok size=5
	0x0000 00 00 02 6f 6f                                   ...oo
type..namedata.pp- SRODATA dupok size=5
	0x0000 00 00 02 70 70                                   ...pp
type..namedata.qq- SRODATA dupok size=5
	0x0000 00 00 02 71 71                                   ...qq
type..namedata.rr- SRODATA dupok size=5
	0x0000 00 00 02 72 72                                   ...rr
type..namedata.ss- SRODATA dupok size=5
	0x0000 00 00 02 73 73                                   ...ss
type..namedata.tt- SRODATA dupok size=5
	0x0000 00 00 02 74 74                                   ...tt
type..namedata.uu- SRODATA dupok size=5
	0x0000 00 00 02 75 75                                   ...uu
type..namedata.vv- SRODATA dupok size=5
	0x0000 00 00 02 76 76                                   ...vv
type..namedata.xx- SRODATA dupok size=5
	0x0000 00 00 02 78 78                                   ...xx
type..namedata.yy- SRODATA dupok size=5
	0x0000 00 00 02 79 79                                   ...yy
type..namedata.ww- SRODATA dupok size=5
	0x0000 00 00 02 77 77                                   ...ww
type..namedata.zz- SRODATA dupok size=5
	0x0000 00 00 02 7a 7a                                   ...zz
type..namedata.lll- SRODATA dupok size=6
	0x0000 00 00 03 6c 6c 6c                                ...lll
type..namedata.mmm- SRODATA dupok size=6
	0x0000 00 00 03 6d 6d 6d                                ...mmm
type..namedata.nnn- SRODATA dupok size=6
	0x0000 00 00 03 6e 6e 6e                                ...nnn
type..namedata.ooo- SRODATA dupok size=6
	0x0000 00 00 03 6f 6f 6f                                ...ooo
type..namedata.ppp- SRODATA dupok size=6
	0x0000 00 00 03 70 70 70                                ...ppp
type..namedata.qqq- SRODATA dupok size=6
	0x0000 00 00 03 71 71 71                                ...qqq
type..namedata.rrr- SRODATA dupok size=6
	0x0000 00 00 03 72 72 72                                ...rrr
type..namedata.sss- SRODATA dupok size=6
	0x0000 00 00 03 73 73 73                                ...sss
type..namedata.ttt- SRODATA dupok size=6
	0x0000 00 00 03 74 74 74                                ...ttt
type..namedata.uuu- SRODATA dupok size=6
	0x0000 00 00 03 75 75 75                                ...uuu
type..namedata.vvv- SRODATA dupok size=6
	0x0000 00 00 03 76 76 76                                ...vvv
type..namedata.xxx- SRODATA dupok size=6
	0x0000 00 00 03 78 78 78                                ...xxx
type..namedata.yyy- SRODATA dupok size=6
	0x0000 00 00 03 79 79 79                                ...yyy
type..namedata.www- SRODATA dupok size=6
	0x0000 00 00 03 77 77 77                                ...www
type..namedata.zzz- SRODATA dupok size=6
	0x0000 00 00 03 7a 7a 7a                                ...zzz
type."".tera SRODATA size=1968
	0x0000 40 03 00 00 00 00 00 00 38 03 00 00 00 00 00 00  @.......8.......
	0x0010 a5 05 bf 0c 07 08 08 19 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 4e 00 00 00 00 00 00 00 4e 00 00 00 00 00 00 00  N.......N.......
	0x0050 00 00 00 00 00 00 00 00 60 07 00 00 00 00 00 00  ........`.......
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x00b0 00 00 00 00 00 00 00 00 30 00 00 00 00 00 00 00  ........0.......
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x00e0 00 00 00 00 00 00 00 00 50 00 00 00 00 00 00 00  ........P.......
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 60 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  `...............
	0x0110 00 00 00 00 00 00 00 00 70 00 00 00 00 00 00 00  ........p.......
	0x0120 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0130 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0140 00 00 00 00 00 00 00 00 90 00 00 00 00 00 00 00  ................
	0x0150 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0160 a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0170 00 00 00 00 00 00 00 00 b0 00 00 00 00 00 00 00  ................
	0x0180 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0190 c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01a0 00 00 00 00 00 00 00 00 d0 00 00 00 00 00 00 00  ................
	0x01b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01c0 e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01d0 00 00 00 00 00 00 00 00 f0 00 00 00 00 00 00 00  ................
	0x01e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01f0 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0200 00 00 00 00 00 00 00 00 10 01 00 00 00 00 00 00  ................
	0x0210 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0220 20 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x0230 00 00 00 00 00 00 00 00 30 01 00 00 00 00 00 00  ........0.......
	0x0240 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0250 40 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x0260 00 00 00 00 00 00 00 00 50 01 00 00 00 00 00 00  ........P.......
	0x0270 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0280 60 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  `...............
	0x0290 00 00 00 00 00 00 00 00 70 01 00 00 00 00 00 00  ........p.......
	0x02a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02b0 80 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02c0 00 00 00 00 00 00 00 00 90 01 00 00 00 00 00 00  ................
	0x02d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02e0 a0 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02f0 00 00 00 00 00 00 00 00 b0 01 00 00 00 00 00 00  ................
	0x0300 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0310 c0 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0320 00 00 00 00 00 00 00 00 d0 01 00 00 00 00 00 00  ................
	0x0330 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0340 e0 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0350 00 00 00 00 00 00 00 00 f0 01 00 00 00 00 00 00  ................
	0x0360 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0370 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0380 00 00 00 00 00 00 00 00 10 02 00 00 00 00 00 00  ................
	0x0390 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03a0 20 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x03b0 00 00 00 00 00 00 00 00 30 02 00 00 00 00 00 00  ........0.......
	0x03c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03d0 40 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x03e0 00 00 00 00 00 00 00 00 50 02 00 00 00 00 00 00  ........P.......
	0x03f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0400 60 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00  `...............
	0x0410 00 00 00 00 00 00 00 00 70 02 00 00 00 00 00 00  ........p.......
	0x0420 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0430 80 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0440 00 00 00 00 00 00 00 00 90 02 00 00 00 00 00 00  ................
	0x0450 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0460 a0 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0470 00 00 00 00 00 00 00 00 b0 02 00 00 00 00 00 00  ................
	0x0480 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0490 c0 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x04a0 00 00 00 00 00 00 00 00 d0 02 00 00 00 00 00 00  ................
	0x04b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x04c0 e0 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x04d0 00 00 00 00 00 00 00 00 f0 02 00 00 00 00 00 00  ................
	0x04e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x04f0 00 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0500 00 00 00 00 00 00 00 00 10 03 00 00 00 00 00 00  ................
	0x0510 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0520 20 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x0530 00 00 00 00 00 00 00 00 30 03 00 00 00 00 00 00  ........0.......
	0x0540 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0550 40 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x0560 00 00 00 00 00 00 00 00 60 03 00 00 00 00 00 00  ........`.......
	0x0570 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0580 80 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0590 00 00 00 00 00 00 00 00 a0 03 00 00 00 00 00 00  ................
	0x05a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x05b0 c0 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x05c0 00 00 00 00 00 00 00 00 e0 03 00 00 00 00 00 00  ................
	0x05d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x05e0 00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x05f0 00 00 00 00 00 00 00 00 20 04 00 00 00 00 00 00  ........ .......
	0x0600 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0610 40 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x0620 00 00 00 00 00 00 00 00 60 04 00 00 00 00 00 00  ........`.......
	0x0630 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0640 80 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0650 00 00 00 00 00 00 00 00 a0 04 00 00 00 00 00 00  ................
	0x0660 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0670 c0 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0680 00 00 00 00 00 00 00 00 e0 04 00 00 00 00 00 00  ................
	0x0690 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x06a0 00 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x06b0 00 00 00 00 00 00 00 00 20 05 00 00 00 00 00 00  ........ .......
	0x06c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x06d0 40 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x06e0 00 00 00 00 00 00 00 00 60 05 00 00 00 00 00 00  ........`.......
	0x06f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0700 80 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0710 00 00 00 00 00 00 00 00 a0 05 00 00 00 00 00 00  ................
	0x0720 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0730 c0 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0740 00 00 00 00 00 00 00 00 e0 05 00 00 00 00 00 00  ................
	0x0750 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0760 00 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0770 00 00 00 00 00 00 00 00 20 06 00 00 00 00 00 00  ........ .......
	0x0780 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0790 40 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x07a0 00 00 00 00 00 00 00 00 60 06 00 00 00 00 00 00  ........`.......
	rel 24+8 t=1 type..alg."".tera+0
	rel 32+8 t=1 runtime.gcbits.00000000000050555555555555+0
	rel 40+4 t=5 type..namedata.*code.tera-+0
	rel 44+4 t=5 type.*"".tera+0
	rel 48+8 t=1 type..importpath."".+0
	rel 56+8 t=1 type."".tera+96
	rel 80+4 t=5 type..importpath."".+0
	rel 96+8 t=1 type..namedata.a-+0
	rel 104+8 t=1 type.int64+0
	rel 120+8 t=1 type..namedata.b-+0
	rel 128+8 t=1 type.int64+0
	rel 144+8 t=1 type..namedata.c-+0
	rel 152+8 t=1 type.int64+0
	rel 168+8 t=1 type..namedata.d-+0
	rel 176+8 t=1 type.int64+0
	rel 192+8 t=1 type..namedata.e-+0
	rel 200+8 t=1 type.int64+0
	rel 216+8 t=1 type..namedata.f-+0
	rel 224+8 t=1 type.int64+0
	rel 240+8 t=1 type..namedata.g-+0
	rel 248+8 t=1 type.int64+0
	rel 264+8 t=1 type..namedata.h-+0
	rel 272+8 t=1 type.int64+0
	rel 288+8 t=1 type..namedata.i-+0
	rel 296+8 t=1 type.int64+0
	rel 312+8 t=1 type..namedata.j-+0
	rel 320+8 t=1 type.int64+0
	rel 336+8 t=1 type..namedata.k-+0
	rel 344+8 t=1 type.int64+0
	rel 360+8 t=1 type..namedata.l-+0
	rel 368+8 t=1 type.int64+0
	rel 384+8 t=1 type..namedata.m-+0
	rel 392+8 t=1 type.int64+0
	rel 408+8 t=1 type..namedata.n-+0
	rel 416+8 t=1 type.int64+0
	rel 432+8 t=1 type..namedata.o-+0
	rel 440+8 t=1 type.int64+0
	rel 456+8 t=1 type..namedata.p-+0
	rel 464+8 t=1 type.int64+0
	rel 480+8 t=1 type..namedata.q-+0
	rel 488+8 t=1 type.int64+0
	rel 504+8 t=1 type..namedata.r-+0
	rel 512+8 t=1 type.int64+0
	rel 528+8 t=1 type..namedata.s-+0
	rel 536+8 t=1 type.int64+0
	rel 552+8 t=1 type..namedata.t-+0
	rel 560+8 t=1 type.int64+0
	rel 576+8 t=1 type..namedata.u-+0
	rel 584+8 t=1 type.int64+0
	rel 600+8 t=1 type..namedata.v-+0
	rel 608+8 t=1 type.int64+0
	rel 624+8 t=1 type..namedata.x-+0
	rel 632+8 t=1 type.int64+0
	rel 648+8 t=1 type..namedata.y-+0
	rel 656+8 t=1 type.int64+0
	rel 672+8 t=1 type..namedata.w-+0
	rel 680+8 t=1 type.int64+0
	rel 696+8 t=1 type..namedata.z-+0
	rel 704+8 t=1 type.int64+0
	rel 720+8 t=1 type..namedata.aa-+0
	rel 728+8 t=1 type.float64+0
	rel 744+8 t=1 type..namedata.bb-+0
	rel 752+8 t=1 type.float64+0
	rel 768+8 t=1 type..namedata.cc-+0
	rel 776+8 t=1 type.float64+0
	rel 792+8 t=1 type..namedata.dd-+0
	rel 800+8 t=1 type.float64+0
	rel 816+8 t=1 type..namedata.ee-+0
	rel 824+8 t=1 type.float64+0
	rel 840+8 t=1 type..namedata.ff-+0
	rel 848+8 t=1 type.float64+0
	rel 864+8 t=1 type..namedata.gg-+0
	rel 872+8 t=1 type.float64+0
	rel 888+8 t=1 type..namedata.hh-+0
	rel 896+8 t=1 type.float64+0
	rel 912+8 t=1 type..namedata.ii-+0
	rel 920+8 t=1 type.float64+0
	rel 936+8 t=1 type..namedata.jj-+0
	rel 944+8 t=1 type.float64+0
	rel 960+8 t=1 type..namedata.kk-+0
	rel 968+8 t=1 type.float64+0
	rel 984+8 t=1 type..namedata.ll-+0
	rel 992+8 t=1 type.float64+0
	rel 1008+8 t=1 type..namedata.mm-+0
	rel 1016+8 t=1 type.float64+0
	rel 1032+8 t=1 type..namedata.nn-+0
	rel 1040+8 t=1 type.float64+0
	rel 1056+8 t=1 type..namedata.oo-+0
	rel 1064+8 t=1 type.float64+0
	rel 1080+8 t=1 type..namedata.pp-+0
	rel 1088+8 t=1 type.float64+0
	rel 1104+8 t=1 type..namedata.qq-+0
	rel 1112+8 t=1 type.float64+0
	rel 1128+8 t=1 type..namedata.rr-+0
	rel 1136+8 t=1 type.float64+0
	rel 1152+8 t=1 type..namedata.ss-+0
	rel 1160+8 t=1 type.float64+0
	rel 1176+8 t=1 type..namedata.tt-+0
	rel 1184+8 t=1 type.float64+0
	rel 1200+8 t=1 type..namedata.uu-+0
	rel 1208+8 t=1 type.float64+0
	rel 1224+8 t=1 type..namedata.vv-+0
	rel 1232+8 t=1 type.float64+0
	rel 1248+8 t=1 type..namedata.xx-+0
	rel 1256+8 t=1 type.float64+0
	rel 1272+8 t=1 type..namedata.yy-+0
	rel 1280+8 t=1 type.float64+0
	rel 1296+8 t=1 type..namedata.ww-+0
	rel 1304+8 t=1 type.float64+0
	rel 1320+8 t=1 type..namedata.zz-+0
	rel 1328+8 t=1 type.float64+0
	rel 1344+8 t=1 type..namedata.aaa-+0
	rel 1352+8 t=1 type.string+0
	rel 1368+8 t=1 type..namedata.bbb-+0
	rel 1376+8 t=1 type.string+0
	rel 1392+8 t=1 type..namedata.ccc-+0
	rel 1400+8 t=1 type.string+0
	rel 1416+8 t=1 type..namedata.ddd-+0
	rel 1424+8 t=1 type.string+0
	rel 1440+8 t=1 type..namedata.eee-+0
	rel 1448+8 t=1 type.string+0
	rel 1464+8 t=1 type..namedata.fff-+0
	rel 1472+8 t=1 type.string+0
	rel 1488+8 t=1 type..namedata.ggg-+0
	rel 1496+8 t=1 type.string+0
	rel 1512+8 t=1 type..namedata.hhh-+0
	rel 1520+8 t=1 type.string+0
	rel 1536+8 t=1 type..namedata.iii-+0
	rel 1544+8 t=1 type.string+0
	rel 1560+8 t=1 type..namedata.jjj-+0
	rel 1568+8 t=1 type.string+0
	rel 1584+8 t=1 type..namedata.kkk-+0
	rel 1592+8 t=1 type.string+0
	rel 1608+8 t=1 type..namedata.lll-+0
	rel 1616+8 t=1 type.string+0
	rel 1632+8 t=1 type..namedata.mmm-+0
	rel 1640+8 t=1 type.string+0
	rel 1656+8 t=1 type..namedata.nnn-+0
	rel 1664+8 t=1 type.string+0
	rel 1680+8 t=1 type..namedata.ooo-+0
	rel 1688+8 t=1 type.string+0
	rel 1704+8 t=1 type..namedata.ppp-+0
	rel 1712+8 t=1 type.string+0
	rel 1728+8 t=1 type..namedata.qqq-+0
	rel 1736+8 t=1 type.string+0
	rel 1752+8 t=1 type..namedata.rrr-+0
	rel 1760+8 t=1 type.string+0
	rel 1776+8 t=1 type..namedata.sss-+0
	rel 1784+8 t=1 type.string+0
	rel 1800+8 t=1 type..namedata.ttt-+0
	rel 1808+8 t=1 type.string+0
	rel 1824+8 t=1 type..namedata.uuu-+0
	rel 1832+8 t=1 type.string+0
	rel 1848+8 t=1 type..namedata.vvv-+0
	rel 1856+8 t=1 type.string+0
	rel 1872+8 t=1 type..namedata.xxx-+0
	rel 1880+8 t=1 type.string+0
	rel 1896+8 t=1 type..namedata.yyy-+0
	rel 1904+8 t=1 type.string+0
	rel 1920+8 t=1 type..namedata.www-+0
	rel 1928+8 t=1 type.string+0
	rel 1944+8 t=1 type..namedata.zzz-+0
	rel 1952+8 t=1 type.string+0
go.loc."".BenchmarkTeraIfc_Calc SDWARFLOC size=0
go.info."".BenchmarkTeraIfc_Calc SDWARFINFO size=131
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 54 65 72  ."".BenchmarkTer
	0x0010 61 49 66 63 5f 43 61 6c 63 00 00 00 00 00 00 00  aIfc_Calc.......
	0x0020 00 00 00 00 00 00 00 00 00 00 01 9c 00 00 00 00  ................
	0x0030 01 0a 26 6f 00 8a 01 00 00 00 00 03 91 d0 78 0f  ..&o..........x.
	0x0040 62 00 00 88 01 00 00 00 00 01 9c 14 00 00 00 00  b...............
	0x0050 0a 69 00 8c 01 00 00 00 00 03 91 a0 78 00 07 00  .i..........x...
	0x0060 00 00 00 00 00 00 00 00 00 00 00 8d 00 00 00 12  ................
	0x0070 00 00 00 00 03 91 a8 78 12 00 00 00 00 03 91 d8  .......x........
	0x0080 78 00 00                                         x..
	rel 26+8 t=1 "".BenchmarkTeraIfc_Calc+0
	rel 34+8 t=1 "".BenchmarkTeraIfc_Calc+660
	rel 44+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 55+4 t=28 go.info.*"".tera+0
	rel 69+4 t=28 go.info.*testing.B+0
	rel 76+4 t=28 go.range."".BenchmarkTeraIfc_Calc+0
	rel 85+4 t=28 go.info.int+0
	rel 95+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 99+4 t=28 go.range."".BenchmarkTeraIfc_Calc+48
	rel 103+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 112+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 121+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkTeraIfc_Calc SDWARFRANGE size=96
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkTeraIfc_Calc+130
	rel 8+8 t=50 "".BenchmarkTeraIfc_Calc+373
	rel 16+8 t=50 "".BenchmarkTeraIfc_Calc+532
	rel 24+8 t=50 "".BenchmarkTeraIfc_Calc+560
	rel 48+8 t=50 "".BenchmarkTeraIfc_Calc+373
	rel 56+8 t=50 "".BenchmarkTeraIfc_Calc+532
	rel 64+8 t=50 "".BenchmarkTeraIfc_Calc+560
	rel 72+8 t=50 "".BenchmarkTeraIfc_Calc+562
go.isstmt."".BenchmarkTeraIfc_Calc SDWARFMISC size=0
	0x0000 04 1b 04 17 03 07 01 04 02 05 01 0d 02 05 01 2e  ................
	0x0010 02 0c 01 02 02 08 01 18 02 08 01 2b 02 05 01 8d  ...........+....
	0x0020 01 02 03 01 07 02 03 01 72 02 05 01 02 02 08 01  ........r.......
	0x0030 11 02 04 01 68 02 05 01 05 02 0a 00              ....h.......
go.loc."".avoidCompilerOptimisation SDWARFLOC size=0
go.info."".avoidCompilerOptimisation SDWARFINFO size=39
	0x0000 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 01 9c 12 00 00 00 00 01 9c 12 00  ................
	0x0020 00 00 00 02 91 08 00                             .......
	rel 1+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 5+8 t=1 "".avoidCompilerOptimisation+0
	rel 13+8 t=1 "".avoidCompilerOptimisation+190
	rel 24+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 31+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".avoidCompilerOptimisation SDWARFRANGE size=0
go.isstmt."".avoidCompilerOptimisation SDWARFMISC size=0
	0x0000 04 13 04 0e 03 06 01 07 02 03 01 5a 02 05 01 02  ...........Z....
	0x0010 02 08 01 0e 02 0a 01 02 02 0a 00                 ...........
go.loc."".createMicro SDWARFLOC size=0
go.info."".createMicro SDWARFINFO size=128
	0x0000 03 22 22 2e 63 72 65 61 74 65 4d 69 63 72 6f 00  ."".createMicro.
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 01 9c 00 00 00 00 01 0a 7e 52 30 00 9f 01 00 00  ........~R0.....
	0x0030 00 00 03 91 b0 7f 0a 7e 52 30 00 ab 02 00 00 00  .......~R0......
	0x0040 00 03 91 b8 7f 0f 7e 72 30 00 01 9d 01 00 00 00  ......~r0.......
	0x0050 00 01 9c 07 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 9f 00 00 00 07 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 2b 01 00 00 12 00 00 00 00 02 91 68 00 00 00  .+..........h...
	rel 16+8 t=1 "".createMicro+0
	rel 24+8 t=1 "".createMicro+228
	rel 34+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 46+4 t=28 go.info.int64+0
	rel 61+4 t=28 go.info.int64+0
	rel 77+4 t=28 go.info."".micro+0
	rel 84+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 88+4 t=28 go.range."".createMicro+0
	rel 92+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 101+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 105+4 t=28 go.range."".createMicro+48
	rel 109+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 118+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
go.range."".createMicro SDWARFRANGE size=96
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".createMicro+60
	rel 8+8 t=50 "".createMicro+81
	rel 16+8 t=50 "".createMicro+117
	rel 24+8 t=50 "".createMicro+124
	rel 48+8 t=50 "".createMicro+81
	rel 56+8 t=50 "".createMicro+93
	rel 64+8 t=50 "".createMicro+93
	rel 72+8 t=50 "".createMicro+117
go.isstmt."".createMicro SDWARFMISC size=0
	0x0000 04 13 04 0e 03 09 01 09 02 10 01 0e 02 05 01 13  ................
	0x0010 02 02 01 0a 02 05 01 02 02 05 01 0c 02 05 01 1d  ................
	0x0020 02 05 01 05 02 06 01 06 02 05 01 10 02 0a 00     ...............
go.loc."".createTiny SDWARFLOC size=0
go.info."".createTiny SDWARFINFO size=182
	0x0000 03 22 22 2e 63 72 65 61 74 65 54 69 6e 79 00 00  ."".createTiny..
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01  ................
	0x0020 9c 00 00 00 00 01 0a 7e 52 30 00 ab 02 00 00 00  .......~R0......
	0x0030 00 03 91 f0 7e 0a 7e 52 30 00 a6 01 00 00 00 00  ....~.~R0.......
	0x0040 03 91 f8 7e 0a 7e 52 30 00 a8 01 00 00 00 00 03  ...~.~R0........
	0x0050 91 b0 7f 0f 7e 72 30 00 01 a4 01 00 00 00 00 01  ....~r0.........
	0x0060 9c 07 00 00 00 00 00 00 00 00 00 00 00 00 a6 00  ................
	0x0070 00 00 07 00 00 00 00 00 00 00 00 00 00 00 00 2b  ...............+
	0x0080 01 00 00 12 00 00 00 00 03 91 a8 7f 00 00 06 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 a8 00 00 00 12 00 00 00 00  ................
	0x00b0 03 91 80 7f 00 00                                ......
	rel 15+8 t=1 "".createTiny+0
	rel 23+8 t=1 "".createTiny+418
	rel 33+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 45+4 t=28 go.info.int64+0
	rel 60+4 t=28 go.info.int64+0
	rel 75+4 t=28 go.info.string+0
	rel 91+4 t=28 go.info."".tiny+0
	rel 98+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 102+4 t=28 go.range."".createTiny+0
	rel 106+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 115+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 119+4 t=28 go.range."".createTiny+48
	rel 123+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 132+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 143+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 147+8 t=1 "".createTiny+215
	rel 155+8 t=1 "".createTiny+258
	rel 163+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 172+4 t=28 go.info.strconv.Itoa$abstract+16
go.range."".createTiny SDWARFRANGE size=96
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".createTiny+91
	rel 8+8 t=50 "".createTiny+112
	rel 16+8 t=50 "".createTiny+148
	rel 24+8 t=50 "".createTiny+155
	rel 48+8 t=50 "".createTiny+112
	rel 56+8 t=50 "".createTiny+124
	rel 64+8 t=50 "".createTiny+124
	rel 72+8 t=50 "".createTiny+148
go.isstmt."".createTiny SDWARFMISC size=0
	0x0000 04 18 04 17 03 0c 01 17 02 10 01 0e 02 05 01 13  ................
	0x0010 02 02 01 0a 02 05 01 02 02 05 01 0c 02 05 01 0b  ................
	0x0020 02 05 01 16 02 05 01 0d 02 05 01 14 02 05 01 2a  ...............*
	0x0030 02 05 01 08 02 06 01 09 02 05 01 15 02 08 01 29  ...............)
	0x0040 02 0a 00                                         ...
go.loc."".createMini SDWARFLOC size=0
go.info."".createMini SDWARFINFO size=440
	0x0000 03 22 22 2e 63 72 65 61 74 65 4d 69 6e 69 00 00  ."".createMini..
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01  ................
	0x0020 9c 00 00 00 00 01 0a 7e 52 30 00 ab 02 00 00 00  .......~R0......
	0x0030 00 03 91 b0 7d 0a 7e 52 30 00 b0 01 00 00 00 00  ....}.~R0.......
	0x0040 03 91 b8 7d 0a 7e 52 30 00 ae 01 00 00 00 00 03  ...}.~R0........
	0x0050 91 c0 7d 0a 7e 52 30 00 ab 02 00 00 00 00 03 91  ..}.~R0.........
	0x0060 c8 7d 0a 7e 52 30 00 ab 02 00 00 00 00 03 91 d0  .}.~R0..........
	0x0070 7d 0a 7e 52 30 00 af 01 00 00 00 00 03 91 d8 7d  }.~R0..........}
	0x0080 0a 7e 52 30 00 b4 01 00 00 00 00 03 91 d0 7e 0a  .~R0..........~.
	0x0090 7e 52 30 00 b5 01 00 00 00 00 03 91 e0 7e 0a 7e  ~R0..........~.~
	0x00a0 52 30 00 b6 01 00 00 00 00 03 91 f0 7e 0f 7e 72  R0..........~.~r
	0x00b0 30 00 01 ac 01 00 00 00 00 01 9c 07 00 00 00 00  0...............
	0x00c0 00 00 00 00 00 00 00 00 ae 00 00 00 07 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 00 2b 01 00 00 12 00 00  .........+......
	0x00e0 00 00 03 91 b8 7e 00 00 07 00 00 00 00 00 00 00  .....~..........
	0x00f0 00 00 00 00 00 af 00 00 00 07 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 2b 01 00 00 12 00 00 00 00 03  ......+.........
	0x0110 91 c0 7e 00 00 07 00 00 00 00 00 00 00 00 00 00  ..~.............
	0x0120 00 00 b0 00 00 00 07 00 00 00 00 00 00 00 00 00  ................
	0x0130 00 00 00 2b 01 00 00 12 00 00 00 00 03 91 c8 7e  ...+...........~
	0x0140 00 00 06 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0150 00 00 00 00 00 00 00 00 00 00 00 b4 00 00 00 12  ................
	0x0160 00 00 00 00 03 91 f0 7d 00 06 00 00 00 00 00 00  .......}........
	0x0170 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0180 00 00 b5 00 00 00 12 00 00 00 00 03 91 e8 7d 00  ..............}.
	0x0190 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01a0 00 00 00 00 00 00 00 00 00 b6 00 00 00 12 00 00  ................
	0x01b0 00 00 03 91 e0 7d 00 00                          .....}..
	rel 15+8 t=1 "".createMini+0
	rel 23+8 t=1 "".createMini+1022
	rel 33+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 45+4 t=28 go.info.int64+0
	rel 60+4 t=28 go.info.int64+0
	rel 75+4 t=28 go.info.int64+0
	rel 90+4 t=28 go.info.int64+0
	rel 105+4 t=28 go.info.int64+0
	rel 120+4 t=28 go.info.int64+0
	rel 135+4 t=28 go.info.string+0
	rel 150+4 t=28 go.info.string+0
	rel 165+4 t=28 go.info.string+0
	rel 181+4 t=28 go.info."".mini+0
	rel 188+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 192+4 t=28 go.range."".createMini+0
	rel 196+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 205+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 209+4 t=28 go.range."".createMini+48
	rel 213+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 222+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 233+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 237+4 t=28 go.range."".createMini+96
	rel 241+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 250+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 254+4 t=28 go.range."".createMini+144
	rel 258+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 267+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 278+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 282+4 t=28 go.range."".createMini+192
	rel 286+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 295+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 299+4 t=28 go.range."".createMini+240
	rel 303+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 312+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 323+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 327+8 t=1 "".createMini+471
	rel 335+8 t=1 "".createMini+520
	rel 343+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 352+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 362+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 366+8 t=1 "".createMini+571
	rel 374+8 t=1 "".createMini+620
	rel 382+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 391+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 401+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 405+8 t=1 "".createMini+671
	rel 413+8 t=1 "".createMini+720
	rel 421+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 430+4 t=28 go.info.strconv.Itoa$abstract+16
go.range."".createMini SDWARFRANGE size=288
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".createMini+93
	rel 8+8 t=50 "".createMini+117
	rel 16+8 t=50 "".createMini+159
	rel 24+8 t=50 "".createMini+166
	rel 48+8 t=50 "".createMini+117
	rel 56+8 t=50 "".createMini+132
	rel 64+8 t=50 "".createMini+132
	rel 72+8 t=50 "".createMini+159
	rel 96+8 t=50 "".createMini+192
	rel 104+8 t=50 "".createMini+216
	rel 112+8 t=50 "".createMini+258
	rel 120+8 t=50 "".createMini+265
	rel 144+8 t=50 "".createMini+216
	rel 152+8 t=50 "".createMini+231
	rel 160+8 t=50 "".createMini+231
	rel 168+8 t=50 "".createMini+258
	rel 192+8 t=50 "".createMini+291
	rel 200+8 t=50 "".createMini+315
	rel 208+8 t=50 "".createMini+357
	rel 216+8 t=50 "".createMini+364
	rel 240+8 t=50 "".createMini+315
	rel 248+8 t=50 "".createMini+330
	rel 256+8 t=50 "".createMini+330
	rel 264+8 t=50 "".createMini+357
go.isstmt."".createMini SDWARFMISC size=0
	0x0000 04 1b 04 17 03 08 01 1a 02 10 01 11 02 08 01 13  ................
	0x0010 02 02 01 0d 02 05 01 02 02 05 01 0c 02 10 01 11  ................
	0x0020 02 08 01 13 02 02 01 0d 02 05 01 02 02 05 01 0c  ................
	0x0030 02 10 01 11 02 08 01 13 02 02 01 0d 02 05 01 02  ................
	0x0040 02 05 01 0c 02 05 01 0e 02 05 01 0e 02 05 01 0e  ................
	0x0050 02 05 01 1c 02 05 01 0d 02 05 01 1a 02 08 01 0a  ................
	0x0060 02 05 01 1c 02 05 01 0d 02 05 01 1a 02 08 01 0a  ................
	0x0070 02 05 01 1c 02 05 01 0d 02 05 01 1a 02 08 01 0a  ................
	0x0080 02 08 01 1a 02 05 01 08 02 05 01 08 02 05 01 08  ................
	0x0090 02 09 01 09 02 09 01 09 02 09 01 09 02 08 01 18  ................
	0x00a0 02 08 01 18 02 08 01 18 02 08 01 2b 02 0a 00     ...........+...
go.loc."".createMega SDWARFLOC size=0
go.info."".createMega SDWARFINFO size=1472
	0x0000 03 22 22 2e 63 72 65 61 74 65 4d 65 67 61 00 00  ."".createMega..
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01  ................
	0x0020 9c 00 00 00 00 01 0a 7e 52 30 00 c4 01 00 00 00  .......~R0......
	0x0030 00 03 91 b0 77 0a 7e 52 30 00 ab 02 00 00 00 00  ....w.~R0.......
	0x0040 03 91 b8 77 0a 7e 52 30 00 ab 02 00 00 00 00 03  ...w.~R0........
	0x0050 91 c0 77 0a 7e 52 30 00 c5 01 00 00 00 00 03 91  ..w.~R0.........
	0x0060 c8 77 0a 7e 52 30 00 c3 01 00 00 00 00 03 91 d0  .w.~R0..........
	0x0070 77 0a 7e 52 30 00 ab 02 00 00 00 00 03 91 d8 77  w.~R0..........w
	0x0080 0a 7e 52 30 00 ab 02 00 00 00 00 03 91 e0 77 0a  .~R0..........w.
	0x0090 7e 52 30 00 bf 01 00 00 00 00 03 91 e8 77 0a 7e  ~R0..........w.~
	0x00a0 52 30 00 ab 02 00 00 00 00 03 91 f0 77 0a 7e 52  R0..........w.~R
	0x00b0 30 00 c2 01 00 00 00 00 03 91 f8 77 0a 7e 52 30  0..........w.~R0
	0x00c0 00 bc 01 00 00 00 00 03 91 80 78 0a 7e 52 30 00  ..........x.~R0.
	0x00d0 ab 02 00 00 00 00 03 91 88 78 0a 7e 52 30 00 ab  .........x.~R0..
	0x00e0 02 00 00 00 00 03 91 90 78 0a 7e 52 30 00 c1 01  ........x.~R0...
	0x00f0 00 00 00 00 03 91 98 78 0a 7e 52 30 00 ab 02 00  .......x.~R0....
	0x0100 00 00 00 03 91 a0 78 0a 7e 52 30 00 c0 01 00 00  ......x.~R0.....
	0x0110 00 00 03 91 a8 78 0a 7e 52 30 00 ab 02 00 00 00  .....x.~R0......
	0x0120 00 03 91 b0 78 0a 7e 52 30 00 ab 02 00 00 00 00  ....x.~R0.......
	0x0130 03 91 b8 78 0a 7e 52 30 00 be 01 00 00 00 00 03  ...x.~R0........
	0x0140 91 c0 78 0a 7e 52 30 00 c6 01 00 00 00 00 03 91  ..x.~R0.........
	0x0150 c8 78 0a 7e 52 30 00 bd 01 00 00 00 00 03 91 d0  .x.~R0..........
	0x0160 78 0a 7e 52 30 00 ab 02 00 00 00 00 03 91 d8 78  x.~R0..........x
	0x0170 0a 7e 52 30 00 d6 01 00 00 00 00 03 91 d0 7b 0a  .~R0..........{.
	0x0180 7e 52 30 00 d7 01 00 00 00 00 03 91 e0 7b 0a 7e  ~R0..........{.~
	0x0190 52 30 00 d4 01 00 00 00 00 03 91 f0 7b 0a 7e 52  R0..........{.~R
	0x01a0 30 00 d5 01 00 00 00 00 03 91 80 7c 0a 7e 52 30  0..........|.~R0
	0x01b0 00 d8 01 00 00 00 00 03 91 90 7c 0a 7e 52 30 00  ..........|.~R0.
	0x01c0 d3 01 00 00 00 00 03 91 a0 7c 0a 7e 52 30 00 d9  .........|.~R0..
	0x01d0 01 00 00 00 00 03 91 b0 7c 0a 7e 52 30 00 db 01  ........|.~R0...
	0x01e0 00 00 00 00 03 91 c0 7c 0a 7e 52 30 00 d2 01 00  .......|.~R0....
	0x01f0 00 00 00 03 91 d0 7c 0a 7e 52 30 00 dc 01 00 00  ......|.~R0.....
	0x0200 00 00 03 91 e0 7c 0a 7e 52 30 00 da 01 00 00 00  .....|.~R0......
	0x0210 00 03 91 f0 7c 0f 7e 72 30 00 01 ba 01 00 00 00  ....|.~r0.......
	0x0220 00 01 9c 07 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0230 bc 00 00 00 07 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0240 00 2b 01 00 00 12 00 00 00 00 03 91 90 7b 00 00  .+...........{..
	0x0250 07 00 00 00 00 00 00 00 00 00 00 00 00 bd 00 00  ................
	0x0260 00 07 00 00 00 00 00 00 00 00 00 00 00 00 2b 01  ..............+.
	0x0270 00 00 12 00 00 00 00 03 91 a0 7b 00 00 07 00 00  ..........{.....
	0x0280 00 00 00 00 00 00 00 00 00 00 be 00 00 00 07 00  ................
	0x0290 00 00 00 00 00 00 00 00 00 00 00 2b 01 00 00 12  ...........+....
	0x02a0 00 00 00 00 03 91 a8 7b 00 00 07 00 00 00 00 00  .......{........
	0x02b0 00 00 00 00 00 00 00 bf 00 00 00 07 00 00 00 00  ................
	0x02c0 00 00 00 00 00 00 00 00 2b 01 00 00 12 00 00 00  ........+.......
	0x02d0 00 03 91 b8 7b 00 00 07 00 00 00 00 00 00 00 00  ....{...........
	0x02e0 00 00 00 00 c0 00 00 00 07 00 00 00 00 00 00 00  ................
	0x02f0 00 00 00 00 00 2b 01 00 00 12 00 00 00 00 03 91  .....+..........
	0x0300 c0 7b 00 00 07 00 00 00 00 00 00 00 00 00 00 00  .{..............
	0x0310 00 c1 00 00 00 07 00 00 00 00 00 00 00 00 00 00  ................
	0x0320 00 00 2b 01 00 00 12 00 00 00 00 03 91 b0 7b 00  ..+...........{.
	0x0330 00 07 00 00 00 00 00 00 00 00 00 00 00 00 c2 00  ................
	0x0340 00 00 07 00 00 00 00 00 00 00 00 00 00 00 00 2b  ...............+
	0x0350 01 00 00 12 00 00 00 00 03 91 f8 7a 00 00 07 00  ...........z....
	0x0360 00 00 00 00 00 00 00 00 00 00 00 c3 00 00 00 07  ................
	0x0370 00 00 00 00 00 00 00 00 00 00 00 00 2b 01 00 00  ............+...
	0x0380 12 00 00 00 00 03 91 80 7b 00 00 07 00 00 00 00  ........{.......
	0x0390 00 00 00 00 00 00 00 00 c4 00 00 00 07 00 00 00  ................
	0x03a0 00 00 00 00 00 00 00 00 00 2b 01 00 00 12 00 00  .........+......
	0x03b0 00 00 03 91 c8 7b 00 00 07 00 00 00 00 00 00 00  .....{..........
	0x03c0 00 00 00 00 00 c5 00 00 00 07 00 00 00 00 00 00  ................
	0x03d0 00 00 00 00 00 00 2b 01 00 00 12 00 00 00 00 03  ......+.........
	0x03e0 91 88 7b 00 00 07 00 00 00 00 00 00 00 00 00 00  ..{.............
	0x03f0 00 00 c6 00 00 00 07 00 00 00 00 00 00 00 00 00  ................
	0x0400 00 00 00 2b 01 00 00 12 00 00 00 00 03 91 98 7b  ...+...........{
	0x0410 00 00 06 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0420 00 00 00 00 00 00 00 00 00 00 00 d2 00 00 00 12  ................
	0x0430 00 00 00 00 03 91 f0 78 00 06 00 00 00 00 00 00  .......x........
	0x0440 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0450 00 00 d3 00 00 00 12 00 00 00 00 03 91 f8 78 00  ..............x.
	0x0460 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0470 00 00 00 00 00 00 00 00 00 d4 00 00 00 12 00 00  ................
	0x0480 00 00 03 91 80 79 00 06 00 00 00 00 00 00 00 00  .....y..........
	0x0490 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x04a0 d5 00 00 00 12 00 00 00 00 03 91 90 79 00 06 00  ............y...
	0x04b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x04c0 00 00 00 00 00 00 00 d6 00 00 00 12 00 00 00 00  ................
	0x04d0 03 91 e8 78 00 06 00 00 00 00 00 00 00 00 00 00  ...x............
	0x04e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 d7 00  ................
	0x04f0 00 00 12 00 00 00 00 03 91 b0 79 00 06 00 00 00  ..........y.....
	0x0500 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0510 00 00 00 00 00 d8 00 00 00 12 00 00 00 00 03 91  ................
	0x0520 e0 78 00 06 00 00 00 00 00 00 00 00 00 00 00 00  .x..............
	0x0530 00 00 00 00 00 00 00 00 00 00 00 00 d9 00 00 00  ................
	0x0540 12 00 00 00 00 03 91 a0 79 00 06 00 00 00 00 00  ........y.......
	0x0550 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0560 00 00 00 da 00 00 00 12 00 00 00 00 03 91 a8 79  ...............y
	0x0570 00 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0580 00 00 00 00 00 00 00 00 00 00 db 00 00 00 12 00  ................
	0x0590 00 00 00 03 91 98 79 00 06 00 00 00 00 00 00 00  ......y.........
	0x05a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x05b0 00 dc 00 00 00 12 00 00 00 00 03 91 88 79 00 00  .............y..
	rel 15+8 t=1 "".createMega+0
	rel 23+8 t=1 "".createMega+3459
	rel 33+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 45+4 t=28 go.info.int64+0
	rel 60+4 t=28 go.info.int64+0
	rel 75+4 t=28 go.info.int64+0
	rel 90+4 t=28 go.info.int64+0
	rel 105+4 t=28 go.info.int64+0
	rel 120+4 t=28 go.info.int64+0
	rel 135+4 t=28 go.info.int64+0
	rel 150+4 t=28 go.info.int64+0
	rel 165+4 t=28 go.info.int64+0
	rel 180+4 t=28 go.info.int64+0
	rel 195+4 t=28 go.info.int64+0
	rel 210+4 t=28 go.info.int64+0
	rel 225+4 t=28 go.info.int64+0
	rel 240+4 t=28 go.info.int64+0
	rel 255+4 t=28 go.info.int64+0
	rel 270+4 t=28 go.info.int64+0
	rel 285+4 t=28 go.info.int64+0
	rel 300+4 t=28 go.info.int64+0
	rel 315+4 t=28 go.info.int64+0
	rel 330+4 t=28 go.info.int64+0
	rel 345+4 t=28 go.info.int64+0
	rel 360+4 t=28 go.info.int64+0
	rel 375+4 t=28 go.info.string+0
	rel 390+4 t=28 go.info.string+0
	rel 405+4 t=28 go.info.string+0
	rel 420+4 t=28 go.info.string+0
	rel 435+4 t=28 go.info.string+0
	rel 450+4 t=28 go.info.string+0
	rel 465+4 t=28 go.info.string+0
	rel 480+4 t=28 go.info.string+0
	rel 495+4 t=28 go.info.string+0
	rel 510+4 t=28 go.info.string+0
	rel 525+4 t=28 go.info.string+0
	rel 541+4 t=28 go.info."".mega+0
	rel 548+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 552+4 t=28 go.range."".createMega+0
	rel 556+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 565+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 569+4 t=28 go.range."".createMega+48
	rel 573+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 582+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 593+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 597+4 t=28 go.range."".createMega+96
	rel 601+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 610+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 614+4 t=28 go.range."".createMega+144
	rel 618+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 627+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 638+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 642+4 t=28 go.range."".createMega+192
	rel 646+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 655+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 659+4 t=28 go.range."".createMega+240
	rel 663+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 672+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 683+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 687+4 t=28 go.range."".createMega+288
	rel 691+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 700+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 704+4 t=28 go.range."".createMega+336
	rel 708+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 717+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 728+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 732+4 t=28 go.range."".createMega+384
	rel 736+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 745+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 749+4 t=28 go.range."".createMega+432
	rel 753+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 762+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 773+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 777+4 t=28 go.range."".createMega+480
	rel 781+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 790+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 794+4 t=28 go.range."".createMega+528
	rel 798+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 807+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 818+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 822+4 t=28 go.range."".createMega+576
	rel 826+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 835+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 839+4 t=28 go.range."".createMega+624
	rel 843+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 852+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 863+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 867+4 t=28 go.range."".createMega+672
	rel 871+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 880+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 884+4 t=28 go.range."".createMega+720
	rel 888+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 897+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 908+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 912+4 t=28 go.range."".createMega+768
	rel 916+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 925+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 929+4 t=28 go.range."".createMega+816
	rel 933+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 942+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 953+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 957+4 t=28 go.range."".createMega+864
	rel 961+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 970+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 974+4 t=28 go.range."".createMega+912
	rel 978+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 987+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 998+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1002+4 t=28 go.range."".createMega+960
	rel 1006+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1015+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1019+4 t=28 go.range."".createMega+1008
	rel 1023+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1032+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1043+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 1047+8 t=1 "".createMega+1526
	rel 1055+8 t=1 "".createMega+1578
	rel 1063+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1072+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 1082+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 1086+8 t=1 "".createMega+1632
	rel 1094+8 t=1 "".createMega+1684
	rel 1102+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1111+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 1121+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 1125+8 t=1 "".createMega+1738
	rel 1133+8 t=1 "".createMega+1790
	rel 1141+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1150+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 1160+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 1164+8 t=1 "".createMega+1844
	rel 1172+8 t=1 "".createMega+1896
	rel 1180+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1189+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 1199+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 1203+8 t=1 "".createMega+1950
	rel 1211+8 t=1 "".createMega+2002
	rel 1219+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1228+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 1238+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 1242+8 t=1 "".createMega+2056
	rel 1250+8 t=1 "".createMega+2108
	rel 1258+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1267+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 1277+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 1281+8 t=1 "".createMega+2162
	rel 1289+8 t=1 "".createMega+2214
	rel 1297+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1306+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 1316+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 1320+8 t=1 "".createMega+2268
	rel 1328+8 t=1 "".createMega+2320
	rel 1336+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1345+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 1355+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 1359+8 t=1 "".createMega+2374
	rel 1367+8 t=1 "".createMega+2426
	rel 1375+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1384+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 1394+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 1398+8 t=1 "".createMega+2480
	rel 1406+8 t=1 "".createMega+2532
	rel 1414+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1423+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 1433+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 1437+8 t=1 "".createMega+2586
	rel 1445+8 t=1 "".createMega+2638
	rel 1453+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1462+4 t=28 go.info.strconv.Itoa$abstract+16
go.range."".createMega SDWARFRANGE size=1056
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0120 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0130 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0140 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0150 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0160 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0170 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0180 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0190 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0200 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0210 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0220 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0230 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0240 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0250 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0260 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0270 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0280 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0290 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0300 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0310 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0320 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0330 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0340 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0350 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0360 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0370 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0380 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0390 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0400 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0410 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".createMega+93
	rel 8+8 t=50 "".createMega+120
	rel 16+8 t=50 "".createMega+162
	rel 24+8 t=50 "".createMega+172
	rel 48+8 t=50 "".createMega+120
	rel 56+8 t=50 "".createMega+135
	rel 64+8 t=50 "".createMega+135
	rel 72+8 t=50 "".createMega+162
	rel 96+8 t=50 "".createMega+207
	rel 104+8 t=50 "".createMega+234
	rel 112+8 t=50 "".createMega+276
	rel 120+8 t=50 "".createMega+286
	rel 144+8 t=50 "".createMega+234
	rel 152+8 t=50 "".createMega+249
	rel 160+8 t=50 "".createMega+249
	rel 168+8 t=50 "".createMega+276
	rel 192+8 t=50 "".createMega+324
	rel 200+8 t=50 "".createMega+351
	rel 208+8 t=50 "".createMega+393
	rel 216+8 t=50 "".createMega+403
	rel 240+8 t=50 "".createMega+351
	rel 248+8 t=50 "".createMega+366
	rel 256+8 t=50 "".createMega+366
	rel 264+8 t=50 "".createMega+393
	rel 288+8 t=50 "".createMega+438
	rel 296+8 t=50 "".createMega+465
	rel 304+8 t=50 "".createMega+507
	rel 312+8 t=50 "".createMega+517
	rel 336+8 t=50 "".createMega+465
	rel 344+8 t=50 "".createMega+480
	rel 352+8 t=50 "".createMega+480
	rel 360+8 t=50 "".createMega+507
	rel 384+8 t=50 "".createMega+552
	rel 392+8 t=50 "".createMega+579
	rel 400+8 t=50 "".createMega+621
	rel 408+8 t=50 "".createMega+631
	rel 432+8 t=50 "".createMega+579
	rel 440+8 t=50 "".createMega+594
	rel 448+8 t=50 "".createMega+594
	rel 456+8 t=50 "".createMega+621
	rel 480+8 t=50 "".createMega+669
	rel 488+8 t=50 "".createMega+693
	rel 496+8 t=50 "".createMega+735
	rel 504+8 t=50 "".createMega+742
	rel 528+8 t=50 "".createMega+693
	rel 536+8 t=50 "".createMega+708
	rel 544+8 t=50 "".createMega+708
	rel 552+8 t=50 "".createMega+735
	rel 576+8 t=50 "".createMega+774
	rel 584+8 t=50 "".createMega+798
	rel 592+8 t=50 "".createMega+840
	rel 600+8 t=50 "".createMega+847
	rel 624+8 t=50 "".createMega+798
	rel 632+8 t=50 "".createMega+813
	rel 640+8 t=50 "".createMega+813
	rel 648+8 t=50 "".createMega+840
	rel 672+8 t=50 "".createMega+876
	rel 680+8 t=50 "".createMega+900
	rel 688+8 t=50 "".createMega+942
	rel 696+8 t=50 "".createMega+949
	rel 720+8 t=50 "".createMega+900
	rel 728+8 t=50 "".createMega+915
	rel 736+8 t=50 "".createMega+915
	rel 744+8 t=50 "".createMega+942
	rel 768+8 t=50 "".createMega+978
	rel 776+8 t=50 "".createMega+1002
	rel 784+8 t=50 "".createMega+1044
	rel 792+8 t=50 "".createMega+1051
	rel 816+8 t=50 "".createMega+1002
	rel 824+8 t=50 "".createMega+1017
	rel 832+8 t=50 "".createMega+1017
	rel 840+8 t=50 "".createMega+1044
	rel 864+8 t=50 "".createMega+1080
	rel 872+8 t=50 "".createMega+1104
	rel 880+8 t=50 "".createMega+1146
	rel 888+8 t=50 "".createMega+1153
	rel 912+8 t=50 "".createMega+1104
	rel 920+8 t=50 "".createMega+1119
	rel 928+8 t=50 "".createMega+1119
	rel 936+8 t=50 "".createMega+1146
	rel 960+8 t=50 "".createMega+1185
	rel 968+8 t=50 "".createMega+1209
	rel 976+8 t=50 "".createMega+1251
	rel 984+8 t=50 "".createMega+1258
	rel 1008+8 t=50 "".createMega+1209
	rel 1016+8 t=50 "".createMega+1224
	rel 1024+8 t=50 "".createMega+1224
	rel 1032+8 t=50 "".createMega+1251
go.isstmt."".createMega SDWARFMISC size=0
	0x0000 04 1b 04 17 03 08 01 1a 02 10 01 14 02 08 01 13  ................
	0x0010 02 02 01 0d 02 08 01 02 02 08 01 0f 02 13 01 14  ................
	0x0020 02 08 01 13 02 02 01 0d 02 08 01 02 02 08 01 12  ................
	0x0030 02 13 01 14 02 08 01 13 02 02 01 0d 02 08 01 02  ................
	0x0040 02 08 01 12 02 10 01 14 02 08 01 13 02 02 01 0d  ................
	0x0050 02 08 01 02 02 08 01 0f 02 13 01 14 02 08 01 13  ................
	0x0060 02 02 01 0d 02 08 01 02 02 08 01 12 02 13 01 11  ................
	0x0070 02 08 01 13 02 02 01 0d 02 05 01 02 02 05 01 12  ................
	0x0080 02 10 01 11 02 08 01 13 02 02 01 0d 02 05 01 02  ................
	0x0090 02 05 01 0f 02 10 01 11 02 08 01 13 02 02 01 0d  ................
	0x00a0 02 05 01 02 02 05 01 0f 02 10 01 11 02 08 01 13  ................
	0x00b0 02 02 01 0d 02 05 01 02 02 05 01 0f 02 10 01 11  ................
	0x00c0 02 08 01 13 02 02 01 0d 02 05 01 02 02 05 01 0f  ................
	0x00d0 02 13 01 11 02 08 01 13 02 02 01 0d 02 05 01 02  ................
	0x00e0 02 05 01 12 02 05 01 0e 02 05 01 0e 02 05 01 0e  ................
	0x00f0 02 05 01 0e 02 05 01 0e 02 05 01 0e 02 05 01 0e  ................
	0x0100 02 05 01 0e 02 05 01 0e 02 05 01 0e 02 05 01 0e  ................
	0x0110 02 05 01 1f 02 08 01 0d 02 05 01 1a 02 08 01 0a  ................
	0x0120 02 05 01 1f 02 08 01 0d 02 05 01 1a 02 08 01 0a  ................
	0x0130 02 05 01 1f 02 08 01 0d 02 05 01 1a 02 08 01 0a  ................
	0x0140 02 05 01 1f 02 08 01 0d 02 05 01 1a 02 08 01 0a  ................
	0x0150 02 05 01 1f 02 08 01 0d 02 05 01 1a 02 08 01 0a  ................
	0x0160 02 05 01 1f 02 08 01 0d 02 05 01 1a 02 08 01 0a  ................
	0x0170 02 05 01 1f 02 08 01 0d 02 05 01 1a 02 08 01 0a  ................
	0x0180 02 05 01 1f 02 08 01 0d 02 05 01 1a 02 08 01 0a  ................
	0x0190 02 05 01 1f 02 08 01 0d 02 05 01 1a 02 08 01 0a  ................
	0x01a0 02 05 01 1f 02 08 01 0d 02 05 01 1a 02 08 01 0a  ................
	0x01b0 02 05 01 1f 02 08 01 0d 02 05 01 1a 02 08 01 0a  ................
	0x01c0 02 08 01 1a 02 05 01 08 02 08 01 08 02 08 01 08  ................
	0x01d0 02 05 01 08 02 08 01 08 02 08 01 08 02 05 01 08  ................
	0x01e0 02 05 01 08 02 05 01 08 02 05 01 08 02 08 01 08  ................
	0x01f0 02 09 01 09 02 09 01 09 02 09 01 09 02 09 01 09  ................
	0x0200 02 09 01 09 02 09 01 09 02 09 01 09 02 09 01 09  ................
	0x0210 02 09 01 09 02 09 01 09 02 09 01 09 02 08 01 18  ................
	0x0220 02 08 01 18 02 08 01 18 02 08 01 18 02 08 01 18  ................
	0x0230 02 08 01 18 02 08 01 18 02 08 01 18 02 08 01 18  ................
	0x0240 02 08 01 18 02 08 01 18 02 08 01 2b 02 0a 00     ...........+...
go.loc."".createTera SDWARFLOC size=0
go.info."".createTera SDWARFINFO size=3407
	0x0000 03 22 22 2e 63 72 65 61 74 65 54 65 72 61 00 00  ."".createTera..
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01  ................
	0x0020 9c 00 00 00 00 01 0a 7e 52 30 00 f4 01 00 00 00  .......~R0......
	0x0030 00 03 91 90 6c 0a 7e 52 30 00 ab 02 00 00 00 00  ....l.~R0.......
	0x0040 03 91 98 6c 0a 7e 52 30 00 f8 01 00 00 00 00 03  ...l.~R0........
	0x0050 91 a0 6c 0a 7e 52 30 00 ab 02 00 00 00 00 03 91  ..l.~R0.........
	0x0060 a8 6c 0a 7e 52 30 00 ab 02 00 00 00 00 03 91 b0  .l.~R0..........
	0x0070 6c 0a 7e 52 30 00 f6 01 00 00 00 00 03 91 b8 6c  l.~R0..........l
	0x0080 0a 7e 52 30 00 ab 02 00 00 00 00 03 91 c0 6c 0a  .~R0..........l.
	0x0090 7e 52 30 00 ab 02 00 00 00 00 03 91 c8 6c 0a 7e  ~R0..........l.~
	0x00a0 52 30 00 fa 01 00 00 00 00 03 91 d0 6c 0a 7e 52  R0..........l.~R
	0x00b0 30 00 f5 01 00 00 00 00 03 91 d8 6c 0a 7e 52 30  0..........l.~R0
	0x00c0 00 ab 02 00 00 00 00 03 91 e0 6c 0a 7e 52 30 00  ..........l.~R0.
	0x00d0 fb 01 00 00 00 00 03 91 e8 6c 0a 7e 52 30 00 ab  .........l.~R0..
	0x00e0 02 00 00 00 00 03 91 f0 6c 0a 7e 52 30 00 ab 02  ........l.~R0...
	0x00f0 00 00 00 00 03 91 f8 6c 0a 7e 52 30 00 ab 02 00  .......l.~R0....
	0x0100 00 00 00 03 91 80 6d 0a 7e 52 30 00 f3 01 00 00  ......m.~R0.....
	0x0110 00 00 03 91 88 6d 0a 7e 52 30 00 ab 02 00 00 00  .....m.~R0......
	0x0120 00 03 91 90 6d 0a 7e 52 30 00 f2 01 00 00 00 00  ....m.~R0.......
	0x0130 03 91 98 6d 0a 7e 52 30 00 ab 02 00 00 00 00 03  ...m.~R0........
	0x0140 91 a0 6d 0a 7e 52 30 00 f1 01 00 00 00 00 03 91  ..m.~R0.........
	0x0150 a8 6d 0a 7e 52 30 00 ab 02 00 00 00 00 03 91 b0  .m.~R0..........
	0x0160 6d 0a 7e 52 30 00 f0 01 00 00 00 00 03 91 b8 6d  m.~R0..........m
	0x0170 0a 7e 52 30 00 f7 01 00 00 00 00 03 91 c0 6d 0a  .~R0..........m.
	0x0180 7e 52 30 00 e2 01 00 00 00 00 03 91 c8 6d 0a 7e  ~R0..........m.~
	0x0190 52 30 00 ab 02 00 00 00 00 03 91 d0 6d 0a 7e 52  R0..........m.~R
	0x01a0 30 00 ef 01 00 00 00 00 03 91 d8 6d 0a 7e 52 30  0..........m.~R0
	0x01b0 00 ab 02 00 00 00 00 03 91 e0 6d 0a 7e 52 30 00  ..........m.~R0.
	0x01c0 ab 02 00 00 00 00 03 91 e8 6d 0a 7e 52 30 00 ee  .........m.~R0..
	0x01d0 01 00 00 00 00 03 91 f0 6d 0a 7e 52 30 00 ab 02  ........m.~R0...
	0x01e0 00 00 00 00 03 91 f8 6d 0a 7e 52 30 00 ed 01 00  .......m.~R0....
	0x01f0 00 00 00 03 91 80 6e 0a 7e 52 30 00 ab 02 00 00  ......n.~R0.....
	0x0200 00 00 03 91 88 6e 0a 7e 52 30 00 ec 01 00 00 00  .....n.~R0......
	0x0210 00 03 91 90 6e 0a 7e 52 30 00 ab 02 00 00 00 00  ....n.~R0.......
	0x0220 03 91 98 6e 0a 7e 52 30 00 eb 01 00 00 00 00 03  ...n.~R0........
	0x0230 91 a0 6e 0a 7e 52 30 00 f9 01 00 00 00 00 03 91  ..n.~R0.........
	0x0240 a8 6e 0a 7e 52 30 00 ab 02 00 00 00 00 03 91 b0  .n.~R0..........
	0x0250 6e 0a 7e 52 30 00 ea 01 00 00 00 00 03 91 b8 6e  n.~R0..........n
	0x0260 0a 7e 52 30 00 ab 02 00 00 00 00 03 91 c0 6e 0a  .~R0..........n.
	0x0270 7e 52 30 00 e9 01 00 00 00 00 03 91 c8 6e 0a 7e  ~R0..........n.~
	0x0280 52 30 00 e8 01 00 00 00 00 03 91 d0 6e 0a 7e 52  R0..........n.~R
	0x0290 30 00 ab 02 00 00 00 00 03 91 d8 6e 0a 7e 52 30  0..........n.~R0
	0x02a0 00 e7 01 00 00 00 00 03 91 e0 6e 0a 7e 52 30 00  ..........n.~R0.
	0x02b0 ab 02 00 00 00 00 03 91 e8 6e 0a 7e 52 30 00 e6  .........n.~R0..
	0x02c0 01 00 00 00 00 03 91 f0 6e 0a 7e 52 30 00 ab 02  ........n.~R0...
	0x02d0 00 00 00 00 03 91 f8 6e 0a 7e 52 30 00 ab 02 00  .......n.~R0....
	0x02e0 00 00 00 03 91 80 6f 0a 7e 52 30 00 e3 01 00 00  ......o.~R0.....
	0x02f0 00 00 03 91 88 6f 0a 7e 52 30 00 ab 02 00 00 00  .....o.~R0......
	0x0300 00 03 91 90 6f 0a 7e 52 30 00 e4 01 00 00 00 00  ....o.~R0.......
	0x0310 03 91 98 6f 0a 7e 52 30 00 ab 02 00 00 00 00 03  ...o.~R0........
	0x0320 91 a0 6f 0a 7e 52 30 00 e5 01 00 00 00 00 03 91  ..o.~R0.........
	0x0330 a8 6f 0a 7e 52 30 00 a7 02 00 00 00 00 03 91 80  .o.~R0..........
	0x0340 76 0a 7e 52 30 00 a9 02 00 00 00 00 03 91 90 76  v.~R0..........v
	0x0350 0a 7e 52 30 00 a5 02 00 00 00 00 03 91 a0 76 0a  .~R0..........v.
	0x0360 7e 52 30 00 aa 02 00 00 00 00 03 91 b0 76 0a 7e  ~R0..........v.~
	0x0370 52 30 00 ab 02 00 00 00 00 03 91 c0 76 0a 7e 52  R0..........v.~R
	0x0380 30 00 98 02 00 00 00 00 03 91 d0 76 0a 7e 52 30  0..........v.~R0
	0x0390 00 ac 02 00 00 00 00 03 91 e0 76 0a 7e 52 30 00  ..........v.~R0.
	0x03a0 ad 02 00 00 00 00 03 91 f0 76 0a 7e 52 30 00 9f  .........v.~R0..
	0x03b0 02 00 00 00 00 03 91 80 77 0a 7e 52 30 00 ae 02  ........w.~R0...
	0x03c0 00 00 00 00 03 91 90 77 0a 7e 52 30 00 af 02 00  .......w.~R0....
	0x03d0 00 00 00 03 91 a0 77 0a 7e 52 30 00 a4 02 00 00  ......w.~R0.....
	0x03e0 00 00 03 91 b0 77 0a 7e 52 30 00 97 02 00 00 00  .....w.~R0......
	0x03f0 00 03 91 c0 77 0a 7e 52 30 00 96 02 00 00 00 00  ....w.~R0.......
	0x0400 03 91 d0 77 0a 7e 52 30 00 a3 02 00 00 00 00 03  ...w.~R0........
	0x0410 91 e0 77 0a 7e 52 30 00 a2 02 00 00 00 00 03 91  ..w.~R0.........
	0x0420 f0 77 0a 7e 52 30 00 a1 02 00 00 00 00 03 91 80  .w.~R0..........
	0x0430 78 0a 7e 52 30 00 a0 02 00 00 00 00 03 91 90 78  x.~R0..........x
	0x0440 0a 7e 52 30 00 9e 02 00 00 00 00 03 91 a0 78 0a  .~R0..........x.
	0x0450 7e 52 30 00 9d 02 00 00 00 00 03 91 b0 78 0a 7e  ~R0..........x.~
	0x0460 52 30 00 9c 02 00 00 00 00 03 91 c0 78 0a 7e 52  R0..........x.~R
	0x0470 30 00 9b 02 00 00 00 00 03 91 d0 78 0a 7e 52 30  0..........x.~R0
	0x0480 00 a8 02 00 00 00 00 03 91 e0 78 0a 7e 52 30 00  ..........x.~R0.
	0x0490 9a 02 00 00 00 00 03 91 f0 78 0a 7e 52 30 00 99  .........x.~R0..
	0x04a0 02 00 00 00 00 03 91 80 79 0a 7e 52 30 00 a6 02  ........y.~R0...
	0x04b0 00 00 00 00 03 91 90 79 0f 7e 72 30 00 01 e0 01  .......y.~r0....
	0x04c0 00 00 00 00 01 9c 07 00 00 00 00 00 00 00 00 00  ................
	0x04d0 00 00 00 e2 00 00 00 07 00 00 00 00 00 00 00 00  ................
	0x04e0 00 00 00 00 2b 01 00 00 12 00 00 00 00 03 91 c0  ....+...........
	0x04f0 74 00 00 07 00 00 00 00 00 00 00 00 00 00 00 00  t...............
	0x0500 e3 00 00 00 07 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0510 00 2b 01 00 00 12 00 00 00 00 03 91 d8 74 00 00  .+...........t..
	0x0520 07 00 00 00 00 00 00 00 00 00 00 00 00 e4 00 00  ................
	0x0530 00 07 00 00 00 00 00 00 00 00 00 00 00 00 2b 01  ..............+.
	0x0540 00 00 12 00 00 00 00 03 91 f0 74 00 00 07 00 00  ..........t.....
	0x0550 00 00 00 00 00 00 00 00 00 00 e5 00 00 00 07 00  ................
	0x0560 00 00 00 00 00 00 00 00 00 00 00 2b 01 00 00 12  ...........+....
	0x0570 00 00 00 00 03 91 a8 75 00 00 07 00 00 00 00 00  .......u........
	0x0580 00 00 00 00 00 00 00 e6 00 00 00 07 00 00 00 00  ................
	0x0590 00 00 00 00 00 00 00 00 2b 01 00 00 12 00 00 00  ........+.......
	0x05a0 00 03 91 d0 75 00 00 07 00 00 00 00 00 00 00 00  ....u...........
	0x05b0 00 00 00 00 e7 00 00 00 07 00 00 00 00 00 00 00  ................
	0x05c0 00 00 00 00 00 2b 01 00 00 12 00 00 00 00 03 91  .....+..........
	0x05d0 d8 75 00 00 07 00 00 00 00 00 00 00 00 00 00 00  .u..............
	0x05e0 00 e8 00 00 00 07 00 00 00 00 00 00 00 00 00 00  ................
	0x05f0 00 00 2b 01 00 00 12 00 00 00 00 03 91 e0 75 00  ..+...........u.
	0x0600 00 07 00 00 00 00 00 00 00 00 00 00 00 00 e9 00  ................
	0x0610 00 00 07 00 00 00 00 00 00 00 00 00 00 00 00 2b  ...............+
	0x0620 01 00 00 12 00 00 00 00 03 91 f8 74 00 00 07 00  ...........t....
	0x0630 00 00 00 00 00 00 00 00 00 00 00 ea 00 00 00 07  ................
	0x0640 00 00 00 00 00 00 00 00 00 00 00 00 2b 01 00 00  ............+...
	0x0650 12 00 00 00 00 03 91 e8 75 00 00 07 00 00 00 00  ........u.......
	0x0660 00 00 00 00 00 00 00 00 eb 00 00 00 07 00 00 00  ................
	0x0670 00 00 00 00 00 00 00 00 00 2b 01 00 00 12 00 00  .........+......
	0x0680 00 00 03 91 f0 75 00 00 07 00 00 00 00 00 00 00  .....u..........
	0x0690 00 00 00 00 00 ec 00 00 00 07 00 00 00 00 00 00  ................
	0x06a0 00 00 00 00 00 00 2b 01 00 00 12 00 00 00 00 03  ......+.........
	0x06b0 91 a0 75 00 00 07 00 00 00 00 00 00 00 00 00 00  ..u.............
	0x06c0 00 00 ed 00 00 00 07 00 00 00 00 00 00 00 00 00  ................
	0x06d0 00 00 00 2b 01 00 00 12 00 00 00 00 03 91 c8 75  ...+...........u
	0x06e0 00 00 07 00 00 00 00 00 00 00 00 00 00 00 00 ee  ................
	0x06f0 00 00 00 07 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0700 2b 01 00 00 12 00 00 00 00 03 91 b0 75 00 00 07  +...........u...
	0x0710 00 00 00 00 00 00 00 00 00 00 00 00 ef 00 00 00  ................
	0x0720 07 00 00 00 00 00 00 00 00 00 00 00 00 2b 01 00  .............+..
	0x0730 00 12 00 00 00 00 03 91 98 75 00 00 07 00 00 00  .........u......
	0x0740 00 00 00 00 00 00 00 00 00 f0 00 00 00 07 00 00  ................
	0x0750 00 00 00 00 00 00 00 00 00 00 2b 01 00 00 12 00  ..........+.....
	0x0760 00 00 00 03 91 80 75 00 00 07 00 00 00 00 00 00  ......u.........
	0x0770 00 00 00 00 00 00 f1 00 00 00 07 00 00 00 00 00  ................
	0x0780 00 00 00 00 00 00 00 2b 01 00 00 12 00 00 00 00  .......+........
	0x0790 03 91 e8 74 00 00 07 00 00 00 00 00 00 00 00 00  ...t............
	0x07a0 00 00 00 f2 00 00 00 07 00 00 00 00 00 00 00 00  ................
	0x07b0 00 00 00 00 2b 01 00 00 12 00 00 00 00 03 91 d0  ....+...........
	0x07c0 74 00 00 07 00 00 00 00 00 00 00 00 00 00 00 00  t...............
	0x07d0 f3 00 00 00 07 00 00 00 00 00 00 00 00 00 00 00  ................
	0x07e0 00 2b 01 00 00 12 00 00 00 00 03 91 b8 74 00 00  .+...........t..
	0x07f0 07 00 00 00 00 00 00 00 00 00 00 00 00 f4 00 00  ................
	0x0800 00 07 00 00 00 00 00 00 00 00 00 00 00 00 2b 01  ..............+.
	0x0810 00 00 12 00 00 00 00 03 91 c0 75 00 00 07 00 00  ..........u.....
	0x0820 00 00 00 00 00 00 00 00 00 00 f5 00 00 00 07 00  ................
	0x0830 00 00 00 00 00 00 00 00 00 00 00 2b 01 00 00 12  ...........+....
	0x0840 00 00 00 00 03 91 88 75 00 00 07 00 00 00 00 00  .......u........
	0x0850 00 00 00 00 00 00 00 f6 00 00 00 07 00 00 00 00  ................
	0x0860 00 00 00 00 00 00 00 00 2b 01 00 00 12 00 00 00  ........+.......
	0x0870 00 03 91 c8 74 00 00 07 00 00 00 00 00 00 00 00  ....t...........
	0x0880 00 00 00 00 f7 00 00 00 07 00 00 00 00 00 00 00  ................
	0x0890 00 00 00 00 00 2b 01 00 00 12 00 00 00 00 03 91  .....+..........
	0x08a0 f8 75 00 00 07 00 00 00 00 00 00 00 00 00 00 00  .u..............
	0x08b0 00 f8 00 00 00 07 00 00 00 00 00 00 00 00 00 00  ................
	0x08c0 00 00 2b 01 00 00 12 00 00 00 00 03 91 b0 74 00  ..+...........t.
	0x08d0 00 07 00 00 00 00 00 00 00 00 00 00 00 00 f9 00  ................
	0x08e0 00 00 07 00 00 00 00 00 00 00 00 00 00 00 00 2b  ...............+
	0x08f0 01 00 00 12 00 00 00 00 03 91 e0 74 00 00 07 00  ...........t....
	0x0900 00 00 00 00 00 00 00 00 00 00 00 fa 00 00 00 07  ................
	0x0910 00 00 00 00 00 00 00 00 00 00 00 00 2b 01 00 00  ............+...
	0x0920 12 00 00 00 00 03 91 90 75 00 00 07 00 00 00 00  ........u.......
	0x0930 00 00 00 00 00 00 00 00 fb 00 00 00 07 00 00 00  ................
	0x0940 00 00 00 00 00 00 00 00 00 2b 01 00 00 12 00 00  .........+......
	0x0950 00 00 03 91 b8 75 00 00 06 00 00 00 00 00 00 00  .....u..........
	0x0960 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0970 00 16 01 00 00 12 00 00 00 00 03 91 c0 6f 00 06  .............o..
	0x0980 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0990 00 00 00 00 00 00 00 00 17 01 00 00 12 00 00 00  ................
	0x09a0 00 03 91 d0 6f 00 06 00 00 00 00 00 00 00 00 00  ....o...........
	0x09b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 18  ................
	0x09c0 01 00 00 12 00 00 00 00 03 91 e0 6f 00 06 00 00  ...........o....
	0x09d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x09e0 00 00 00 00 00 00 19 01 00 00 12 00 00 00 00 03  ................
	0x09f0 91 f0 6f 00 06 00 00 00 00 00 00 00 00 00 00 00  ..o.............
	0x0a00 00 00 00 00 00 00 00 00 00 00 00 00 00 1a 01 00  ................
	0x0a10 00 12 00 00 00 00 03 91 f8 6f 00 06 00 00 00 00  .........o......
	0x0a20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0a30 00 00 00 00 1b 01 00 00 12 00 00 00 00 03 91 80  ................
	0x0a40 70 00 06 00 00 00 00 00 00 00 00 00 00 00 00 00  p...............
	0x0a50 00 00 00 00 00 00 00 00 00 00 00 1c 01 00 00 12  ................
	0x0a60 00 00 00 00 03 91 90 70 00 06 00 00 00 00 00 00  .......p........
	0x0a70 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0a80 00 00 1d 01 00 00 12 00 00 00 00 03 91 e0 70 00  ..............p.
	0x0a90 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0aa0 00 00 00 00 00 00 00 00 00 1e 01 00 00 12 00 00  ................
	0x0ab0 00 00 03 91 c8 6f 00 06 00 00 00 00 00 00 00 00  .....o..........
	0x0ac0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0ad0 1f 01 00 00 12 00 00 00 00 03 91 a0 70 00 06 00  ............p...
	0x0ae0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0af0 00 00 00 00 00 00 00 20 01 00 00 12 00 00 00 00  ....... ........
	0x0b00 03 91 f8 70 00 06 00 00 00 00 00 00 00 00 00 00  ...p............
	0x0b10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 21 01  ..............!.
	0x0b20 00 00 12 00 00 00 00 03 91 b0 70 00 06 00 00 00  ..........p.....
	0x0b30 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0b40 00 00 00 00 00 22 01 00 00 12 00 00 00 00 03 91  ....."..........
	0x0b50 c0 70 00 06 00 00 00 00 00 00 00 00 00 00 00 00  .p..............
	0x0b60 00 00 00 00 00 00 00 00 00 00 00 00 23 01 00 00  ............#...
	0x0b70 12 00 00 00 00 03 91 d0 70 00 06 00 00 00 00 00  ........p.......
	0x0b80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0b90 00 00 00 24 01 00 00 12 00 00 00 00 03 91 e8 70  ...$...........p
	0x0ba0 00 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0bb0 00 00 00 00 00 00 00 00 00 00 25 01 00 00 12 00  ..........%.....
	0x0bc0 00 00 00 03 91 f0 70 00 06 00 00 00 00 00 00 00  ......p.........
	0x0bd0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0be0 00 26 01 00 00 12 00 00 00 00 03 91 b0 6f 00 06  .&...........o..
	0x0bf0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0c00 00 00 00 00 00 00 00 00 27 01 00 00 12 00 00 00  ........'.......
	0x0c10 00 03 91 d8 70 00 06 00 00 00 00 00 00 00 00 00  ....p...........
	0x0c20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 28  ...............(
	0x0c30 01 00 00 12 00 00 00 00 03 91 c8 70 00 06 00 00  ...........p....
	0x0c40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0c50 00 00 00 00 00 00 29 01 00 00 12 00 00 00 00 03  ......).........
	0x0c60 91 b8 70 00 06 00 00 00 00 00 00 00 00 00 00 00  ..p.............
	0x0c70 00 00 00 00 00 00 00 00 00 00 00 00 00 2a 01 00  .............*..
	0x0c80 00 12 00 00 00 00 03 91 a8 70 00 06 00 00 00 00  .........p......
	0x0c90 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0ca0 00 00 00 00 2b 01 00 00 12 00 00 00 00 03 91 98  ....+...........
	0x0cb0 70 00 06 00 00 00 00 00 00 00 00 00 00 00 00 00  p...............
	0x0cc0 00 00 00 00 00 00 00 00 00 00 00 2c 01 00 00 12  ...........,....
	0x0cd0 00 00 00 00 03 91 88 70 00 06 00 00 00 00 00 00  .......p........
	0x0ce0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0cf0 00 00 2d 01 00 00 12 00 00 00 00 03 91 b8 6f 00  ..-...........o.
	0x0d00 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0d10 00 00 00 00 00 00 00 00 00 2e 01 00 00 12 00 00  ................
	0x0d20 00 00 03 91 e8 6f 00 06 00 00 00 00 00 00 00 00  .....o..........
	0x0d30 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0d40 2f 01 00 00 12 00 00 00 00 03 91 d8 6f 00 00     /...........o..
	rel 15+8 t=1 "".createTera+0
	rel 23+8 t=1 "".createTera+8075
	rel 33+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 45+4 t=28 go.info.int64+0
	rel 60+4 t=28 go.info.int64+0
	rel 75+4 t=28 go.info.int64+0
	rel 90+4 t=28 go.info.int64+0
	rel 105+4 t=28 go.info.int64+0
	rel 120+4 t=28 go.info.int64+0
	rel 135+4 t=28 go.info.int64+0
	rel 150+4 t=28 go.info.int64+0
	rel 165+4 t=28 go.info.int64+0
	rel 180+4 t=28 go.info.int64+0
	rel 195+4 t=28 go.info.int64+0
	rel 210+4 t=28 go.info.int64+0
	rel 225+4 t=28 go.info.int64+0
	rel 240+4 t=28 go.info.int64+0
	rel 255+4 t=28 go.info.int64+0
	rel 270+4 t=28 go.info.int64+0
	rel 285+4 t=28 go.info.int64+0
	rel 300+4 t=28 go.info.int64+0
	rel 315+4 t=28 go.info.int64+0
	rel 330+4 t=28 go.info.int64+0
	rel 345+4 t=28 go.info.int64+0
	rel 360+4 t=28 go.info.int64+0
	rel 375+4 t=28 go.info.int64+0
	rel 390+4 t=28 go.info.int64+0
	rel 405+4 t=28 go.info.int64+0
	rel 420+4 t=28 go.info.int64+0
	rel 435+4 t=28 go.info.int64+0
	rel 450+4 t=28 go.info.int64+0
	rel 465+4 t=28 go.info.int64+0
	rel 480+4 t=28 go.info.int64+0
	rel 495+4 t=28 go.info.int64+0
	rel 510+4 t=28 go.info.int64+0
	rel 525+4 t=28 go.info.int64+0
	rel 540+4 t=28 go.info.int64+0
	rel 555+4 t=28 go.info.int64+0
	rel 570+4 t=28 go.info.int64+0
	rel 585+4 t=28 go.info.int64+0
	rel 600+4 t=28 go.info.int64+0
	rel 615+4 t=28 go.info.int64+0
	rel 630+4 t=28 go.info.int64+0
	rel 645+4 t=28 go.info.int64+0
	rel 660+4 t=28 go.info.int64+0
	rel 675+4 t=28 go.info.int64+0
	rel 690+4 t=28 go.info.int64+0
	rel 705+4 t=28 go.info.int64+0
	rel 720+4 t=28 go.info.int64+0
	rel 735+4 t=28 go.info.int64+0
	rel 750+4 t=28 go.info.int64+0
	rel 765+4 t=28 go.info.int64+0
	rel 780+4 t=28 go.info.int64+0
	rel 795+4 t=28 go.info.int64+0
	rel 810+4 t=28 go.info.int64+0
	rel 825+4 t=28 go.info.string+0
	rel 840+4 t=28 go.info.string+0
	rel 855+4 t=28 go.info.string+0
	rel 870+4 t=28 go.info.string+0
	rel 885+4 t=28 go.info.string+0
	rel 900+4 t=28 go.info.string+0
	rel 915+4 t=28 go.info.string+0
	rel 930+4 t=28 go.info.string+0
	rel 945+4 t=28 go.info.string+0
	rel 960+4 t=28 go.info.string+0
	rel 975+4 t=28 go.info.string+0
	rel 990+4 t=28 go.info.string+0
	rel 1005+4 t=28 go.info.string+0
	rel 1020+4 t=28 go.info.string+0
	rel 1035+4 t=28 go.info.string+0
	rel 1050+4 t=28 go.info.string+0
	rel 1065+4 t=28 go.info.string+0
	rel 1080+4 t=28 go.info.string+0
	rel 1095+4 t=28 go.info.string+0
	rel 1110+4 t=28 go.info.string+0
	rel 1125+4 t=28 go.info.string+0
	rel 1140+4 t=28 go.info.string+0
	rel 1155+4 t=28 go.info.string+0
	rel 1170+4 t=28 go.info.string+0
	rel 1185+4 t=28 go.info.string+0
	rel 1200+4 t=28 go.info.string+0
	rel 1216+4 t=28 go.info."".tera+0
	rel 1223+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1227+4 t=28 go.range."".createTera+0
	rel 1231+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1240+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1244+4 t=28 go.range."".createTera+48
	rel 1248+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1257+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1268+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1272+4 t=28 go.range."".createTera+96
	rel 1276+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1285+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1289+4 t=28 go.range."".createTera+144
	rel 1293+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1302+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1313+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1317+4 t=28 go.range."".createTera+192
	rel 1321+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1330+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1334+4 t=28 go.range."".createTera+240
	rel 1338+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1347+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1358+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1362+4 t=28 go.range."".createTera+288
	rel 1366+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1375+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1379+4 t=28 go.range."".createTera+336
	rel 1383+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1392+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1403+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1407+4 t=28 go.range."".createTera+384
	rel 1411+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1420+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1424+4 t=28 go.range."".createTera+432
	rel 1428+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1437+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1448+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1452+4 t=28 go.range."".createTera+480
	rel 1456+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1465+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1469+4 t=28 go.range."".createTera+528
	rel 1473+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1482+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1493+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1497+4 t=28 go.range."".createTera+576
	rel 1501+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1510+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1514+4 t=28 go.range."".createTera+624
	rel 1518+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1527+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1538+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1542+4 t=28 go.range."".createTera+672
	rel 1546+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1555+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1559+4 t=28 go.range."".createTera+720
	rel 1563+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1572+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1583+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1587+4 t=28 go.range."".createTera+768
	rel 1591+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1600+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1604+4 t=28 go.range."".createTera+816
	rel 1608+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1617+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1628+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1632+4 t=28 go.range."".createTera+864
	rel 1636+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1645+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1649+4 t=28 go.range."".createTera+912
	rel 1653+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1662+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1673+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1677+4 t=28 go.range."".createTera+960
	rel 1681+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1690+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1694+4 t=28 go.range."".createTera+1008
	rel 1698+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1707+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1718+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1722+4 t=28 go.range."".createTera+1056
	rel 1726+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1735+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1739+4 t=28 go.range."".createTera+1104
	rel 1743+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1752+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1763+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1767+4 t=28 go.range."".createTera+1152
	rel 1771+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1780+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1784+4 t=28 go.range."".createTera+1200
	rel 1788+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1797+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1808+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1812+4 t=28 go.range."".createTera+1248
	rel 1816+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1825+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1829+4 t=28 go.range."".createTera+1296
	rel 1833+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1842+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1853+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1857+4 t=28 go.range."".createTera+1344
	rel 1861+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1870+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1874+4 t=28 go.range."".createTera+1392
	rel 1878+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1887+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1898+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1902+4 t=28 go.range."".createTera+1440
	rel 1906+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1915+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1919+4 t=28 go.range."".createTera+1488
	rel 1923+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1932+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1943+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1947+4 t=28 go.range."".createTera+1536
	rel 1951+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1960+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1964+4 t=28 go.range."".createTera+1584
	rel 1968+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1977+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1988+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1992+4 t=28 go.range."".createTera+1632
	rel 1996+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 2005+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 2009+4 t=28 go.range."".createTera+1680
	rel 2013+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 2022+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 2033+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 2037+4 t=28 go.range."".createTera+1728
	rel 2041+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 2050+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 2054+4 t=28 go.range."".createTera+1776
	rel 2058+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 2067+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 2078+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 2082+4 t=28 go.range."".createTera+1824
	rel 2086+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 2095+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 2099+4 t=28 go.range."".createTera+1872
	rel 2103+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 2112+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 2123+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 2127+4 t=28 go.range."".createTera+1920
	rel 2131+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 2140+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 2144+4 t=28 go.range."".createTera+1968
	rel 2148+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 2157+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 2168+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 2172+4 t=28 go.range."".createTera+2016
	rel 2176+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 2185+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 2189+4 t=28 go.range."".createTera+2064
	rel 2193+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 2202+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 2213+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 2217+4 t=28 go.range."".createTera+2112
	rel 2221+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 2230+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 2234+4 t=28 go.range."".createTera+2160
	rel 2238+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 2247+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 2258+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 2262+4 t=28 go.range."".createTera+2208
	rel 2266+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 2275+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 2279+4 t=28 go.range."".createTera+2256
	rel 2283+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 2292+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 2303+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 2307+4 t=28 go.range."".createTera+2304
	rel 2311+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 2320+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 2324+4 t=28 go.range."".createTera+2352
	rel 2328+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 2337+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 2348+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 2352+4 t=28 go.range."".createTera+2400
	rel 2356+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 2365+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 2369+4 t=28 go.range."".createTera+2448
	rel 2373+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 2382+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 2393+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 2397+8 t=1 "".createTera+3562
	rel 2405+8 t=1 "".createTera+3614
	rel 2413+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 2422+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 2432+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 2436+8 t=1 "".createTera+3668
	rel 2444+8 t=1 "".createTera+3720
	rel 2452+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 2461+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 2471+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 2475+8 t=1 "".createTera+3774
	rel 2483+8 t=1 "".createTera+3826
	rel 2491+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 2500+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 2510+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 2514+8 t=1 "".createTera+3880
	rel 2522+8 t=1 "".createTera+3932
	rel 2530+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 2539+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 2549+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 2553+8 t=1 "".createTera+3986
	rel 2561+8 t=1 "".createTera+4038
	rel 2569+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 2578+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 2588+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 2592+8 t=1 "".createTera+4092
	rel 2600+8 t=1 "".createTera+4144
	rel 2608+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 2617+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 2627+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 2631+8 t=1 "".createTera+4198
	rel 2639+8 t=1 "".createTera+4250
	rel 2647+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 2656+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 2666+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 2670+8 t=1 "".createTera+4304
	rel 2678+8 t=1 "".createTera+4356
	rel 2686+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 2695+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 2705+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 2709+8 t=1 "".createTera+4410
	rel 2717+8 t=1 "".createTera+4462
	rel 2725+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 2734+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 2744+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 2748+8 t=1 "".createTera+4516
	rel 2756+8 t=1 "".createTera+4568
	rel 2764+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 2773+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 2783+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 2787+8 t=1 "".createTera+4622
	rel 2795+8 t=1 "".createTera+4674
	rel 2803+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 2812+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 2822+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 2826+8 t=1 "".createTera+4728
	rel 2834+8 t=1 "".createTera+4780
	rel 2842+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 2851+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 2861+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 2865+8 t=1 "".createTera+4834
	rel 2873+8 t=1 "".createTera+4886
	rel 2881+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 2890+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 2900+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 2904+8 t=1 "".createTera+4940
	rel 2912+8 t=1 "".createTera+4992
	rel 2920+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 2929+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 2939+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 2943+8 t=1 "".createTera+5046
	rel 2951+8 t=1 "".createTera+5098
	rel 2959+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 2968+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 2978+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 2982+8 t=1 "".createTera+5152
	rel 2990+8 t=1 "".createTera+5204
	rel 2998+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 3007+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 3017+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 3021+8 t=1 "".createTera+5258
	rel 3029+8 t=1 "".createTera+5310
	rel 3037+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 3046+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 3056+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 3060+8 t=1 "".createTera+5364
	rel 3068+8 t=1 "".createTera+5416
	rel 3076+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 3085+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 3095+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 3099+8 t=1 "".createTera+5470
	rel 3107+8 t=1 "".createTera+5522
	rel 3115+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 3124+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 3134+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 3138+8 t=1 "".createTera+5576
	rel 3146+8 t=1 "".createTera+5628
	rel 3154+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 3163+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 3173+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 3177+8 t=1 "".createTera+5682
	rel 3185+8 t=1 "".createTera+5734
	rel 3193+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 3202+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 3212+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 3216+8 t=1 "".createTera+5788
	rel 3224+8 t=1 "".createTera+5840
	rel 3232+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 3241+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 3251+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 3255+8 t=1 "".createTera+5894
	rel 3263+8 t=1 "".createTera+5946
	rel 3271+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 3280+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 3290+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 3294+8 t=1 "".createTera+6000
	rel 3302+8 t=1 "".createTera+6052
	rel 3310+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 3319+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 3329+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 3333+8 t=1 "".createTera+6106
	rel 3341+8 t=1 "".createTera+6158
	rel 3349+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 3358+4 t=28 go.info.strconv.Itoa$abstract+16
	rel 3368+4 t=28 go.info.strconv.Itoa$abstract+0
	rel 3372+8 t=1 "".createTera+6212
	rel 3380+8 t=1 "".createTera+6264
	rel 3388+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 3397+4 t=28 go.info.strconv.Itoa$abstract+16
go.range."".createTera SDWARFRANGE size=2496
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0120 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0130 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0140 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0150 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0160 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0170 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0180 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0190 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0200 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0210 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0220 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0230 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0240 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0250 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0260 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0270 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0280 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0290 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0300 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0310 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0320 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0330 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0340 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0350 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0360 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0370 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0380 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0390 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0400 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0410 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0420 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0430 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0440 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0450 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0460 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0470 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0480 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0490 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x04a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x04b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x04c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x04d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x04e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x04f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0500 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0510 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0520 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0530 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0540 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0550 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0560 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0570 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0580 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0590 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x05a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x05b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x05c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x05d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x05e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x05f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0600 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0610 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0620 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0630 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0640 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0650 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0660 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0670 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0680 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0690 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x06a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x06b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x06c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x06d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x06e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x06f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0700 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0710 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0720 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0730 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0740 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0750 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0760 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0770 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0780 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0790 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x07a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x07b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x07c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x07d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x07e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x07f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0800 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0810 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0820 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0830 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0840 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0850 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0860 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0870 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0880 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0890 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x08a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x08b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x08c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x08d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x08e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x08f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0900 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0910 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0920 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0930 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0940 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0950 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0960 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0970 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0980 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0990 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x09a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x09b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".createTera+92
	rel 8+8 t=50 "".createTera+119
	rel 16+8 t=50 "".createTera+161
	rel 24+8 t=50 "".createTera+171
	rel 48+8 t=50 "".createTera+119
	rel 56+8 t=50 "".createTera+134
	rel 64+8 t=50 "".createTera+134
	rel 72+8 t=50 "".createTera+161
	rel 96+8 t=50 "".createTera+209
	rel 104+8 t=50 "".createTera+236
	rel 112+8 t=50 "".createTera+278
	rel 120+8 t=50 "".createTera+288
	rel 144+8 t=50 "".createTera+236
	rel 152+8 t=50 "".createTera+251
	rel 160+8 t=50 "".createTera+251
	rel 168+8 t=50 "".createTera+278
	rel 192+8 t=50 "".createTera+326
	rel 200+8 t=50 "".createTera+353
	rel 208+8 t=50 "".createTera+395
	rel 216+8 t=50 "".createTera+405
	rel 240+8 t=50 "".createTera+353
	rel 248+8 t=50 "".createTera+368
	rel 256+8 t=50 "".createTera+368
	rel 264+8 t=50 "".createTera+395
	rel 288+8 t=50 "".createTera+443
	rel 296+8 t=50 "".createTera+470
	rel 304+8 t=50 "".createTera+512
	rel 312+8 t=50 "".createTera+522
	rel 336+8 t=50 "".createTera+470
	rel 344+8 t=50 "".createTera+485
	rel 352+8 t=50 "".createTera+485
	rel 360+8 t=50 "".createTera+512
	rel 384+8 t=50 "".createTera+560
	rel 392+8 t=50 "".createTera+587
	rel 400+8 t=50 "".createTera+629
	rel 408+8 t=50 "".createTera+639
	rel 432+8 t=50 "".createTera+587
	rel 440+8 t=50 "".createTera+602
	rel 448+8 t=50 "".createTera+602
	rel 456+8 t=50 "".createTera+629
	rel 480+8 t=50 "".createTera+677
	rel 488+8 t=50 "".createTera+704
	rel 496+8 t=50 "".createTera+746
	rel 504+8 t=50 "".createTera+756
	rel 528+8 t=50 "".createTera+704
	rel 536+8 t=50 "".createTera+719
	rel 544+8 t=50 "".createTera+719
	rel 552+8 t=50 "".createTera+746
	rel 576+8 t=50 "".createTera+794
	rel 584+8 t=50 "".createTera+821
	rel 592+8 t=50 "".createTera+863
	rel 600+8 t=50 "".createTera+873
	rel 624+8 t=50 "".createTera+821
	rel 632+8 t=50 "".createTera+836
	rel 640+8 t=50 "".createTera+836
	rel 648+8 t=50 "".createTera+863
	rel 672+8 t=50 "".createTera+911
	rel 680+8 t=50 "".createTera+938
	rel 688+8 t=50 "".createTera+980
	rel 696+8 t=50 "".createTera+990
	rel 720+8 t=50 "".createTera+938
	rel 728+8 t=50 "".createTera+953
	rel 736+8 t=50 "".createTera+953
	rel 744+8 t=50 "".createTera+980
	rel 768+8 t=50 "".createTera+1028
	rel 776+8 t=50 "".createTera+1055
	rel 784+8 t=50 "".createTera+1097
	rel 792+8 t=50 "".createTera+1107
	rel 816+8 t=50 "".createTera+1055
	rel 824+8 t=50 "".createTera+1070
	rel 832+8 t=50 "".createTera+1070
	rel 840+8 t=50 "".createTera+1097
	rel 864+8 t=50 "".createTera+1145
	rel 872+8 t=50 "".createTera+1172
	rel 880+8 t=50 "".createTera+1214
	rel 888+8 t=50 "".createTera+1224
	rel 912+8 t=50 "".createTera+1172
	rel 920+8 t=50 "".createTera+1187
	rel 928+8 t=50 "".createTera+1187
	rel 936+8 t=50 "".createTera+1214
	rel 960+8 t=50 "".createTera+1262
	rel 968+8 t=50 "".createTera+1289
	rel 976+8 t=50 "".createTera+1331
	rel 984+8 t=50 "".createTera+1341
	rel 1008+8 t=50 "".createTera+1289
	rel 1016+8 t=50 "".createTera+1304
	rel 1024+8 t=50 "".createTera+1304
	rel 1032+8 t=50 "".createTera+1331
	rel 1056+8 t=50 "".createTera+1379
	rel 1064+8 t=50 "".createTera+1406
	rel 1072+8 t=50 "".createTera+1448
	rel 1080+8 t=50 "".createTera+1458
	rel 1104+8 t=50 "".createTera+1406
	rel 1112+8 t=50 "".createTera+1421
	rel 1120+8 t=50 "".createTera+1421
	rel 1128+8 t=50 "".createTera+1448
	rel 1152+8 t=50 "".createTera+1496
	rel 1160+8 t=50 "".createTera+1523
	rel 1168+8 t=50 "".createTera+1565
	rel 1176+8 t=50 "".createTera+1575
	rel 1200+8 t=50 "".createTera+1523
	rel 1208+8 t=50 "".createTera+1538
	rel 1216+8 t=50 "".createTera+1538
	rel 1224+8 t=50 "".createTera+1565
	rel 1248+8 t=50 "".createTera+1613
	rel 1256+8 t=50 "".createTera+1640
	rel 1264+8 t=50 "".createTera+1682
	rel 1272+8 t=50 "".createTera+1692
	rel 1296+8 t=50 "".createTera+1640
	rel 1304+8 t=50 "".createTera+1655
	rel 1312+8 t=50 "".createTera+1655
	rel 1320+8 t=50 "".createTera+1682
	rel 1344+8 t=50 "".createTera+1730
	rel 1352+8 t=50 "".createTera+1757
	rel 1360+8 t=50 "".createTera+1799
	rel 1368+8 t=50 "".createTera+1809
	rel 1392+8 t=50 "".createTera+1757
	rel 1400+8 t=50 "".createTera+1772
	rel 1408+8 t=50 "".createTera+1772
	rel 1416+8 t=50 "".createTera+1799
	rel 1440+8 t=50 "".createTera+1847
	rel 1448+8 t=50 "".createTera+1874
	rel 1456+8 t=50 "".createTera+1916
	rel 1464+8 t=50 "".createTera+1926
	rel 1488+8 t=50 "".createTera+1874
	rel 1496+8 t=50 "".createTera+1889
	rel 1504+8 t=50 "".createTera+1889
	rel 1512+8 t=50 "".createTera+1916
	rel 1536+8 t=50 "".createTera+1964
	rel 1544+8 t=50 "".createTera+1991
	rel 1552+8 t=50 "".createTera+2033
	rel 1560+8 t=50 "".createTera+2043
	rel 1584+8 t=50 "".createTera+1991
	rel 1592+8 t=50 "".createTera+2006
	rel 1600+8 t=50 "".createTera+2006
	rel 1608+8 t=50 "".createTera+2033
	rel 1632+8 t=50 "".createTera+2081
	rel 1640+8 t=50 "".createTera+2108
	rel 1648+8 t=50 "".createTera+2150
	rel 1656+8 t=50 "".createTera+2160
	rel 1680+8 t=50 "".createTera+2108
	rel 1688+8 t=50 "".createTera+2123
	rel 1696+8 t=50 "".createTera+2123
	rel 1704+8 t=50 "".createTera+2150
	rel 1728+8 t=50 "".createTera+2195
	rel 1736+8 t=50 "".createTera+2222
	rel 1744+8 t=50 "".createTera+2264
	rel 1752+8 t=50 "".createTera+2274
	rel 1776+8 t=50 "".createTera+2222
	rel 1784+8 t=50 "".createTera+2237
	rel 1792+8 t=50 "".createTera+2237
	rel 1800+8 t=50 "".createTera+2264
	rel 1824+8 t=50 "".createTera+2306
	rel 1832+8 t=50 "".createTera+2330
	rel 1840+8 t=50 "".createTera+2372
	rel 1848+8 t=50 "".createTera+2379
	rel 1872+8 t=50 "".createTera+2330
	rel 1880+8 t=50 "".createTera+2345
	rel 1888+8 t=50 "".createTera+2345
	rel 1896+8 t=50 "".createTera+2372
	rel 1920+8 t=50 "".createTera+2408
	rel 1928+8 t=50 "".createTera+2432
	rel 1936+8 t=50 "".createTera+2474
	rel 1944+8 t=50 "".createTera+2481
	rel 1968+8 t=50 "".createTera+2432
	rel 1976+8 t=50 "".createTera+2447
	rel 1984+8 t=50 "".createTera+2447
	rel 1992+8 t=50 "".createTera+2474
	rel 2016+8 t=50 "".createTera+2513
	rel 2024+8 t=50 "".createTera+2537
	rel 2032+8 t=50 "".createTera+2579
	rel 2040+8 t=50 "".createTera+2586
	rel 2064+8 t=50 "".createTera+2537
	rel 2072+8 t=50 "".createTera+2552
	rel 2080+8 t=50 "".createTera+2552
	rel 2088+8 t=50 "".createTera+2579
	rel 2112+8 t=50 "".createTera+2618
	rel 2120+8 t=50 "".createTera+2642
	rel 2128+8 t=50 "".createTera+2684
	rel 2136+8 t=50 "".createTera+2691
	rel 2160+8 t=50 "".createTera+2642
	rel 2168+8 t=50 "".createTera+2657
	rel 2176+8 t=50 "".createTera+2657
	rel 2184+8 t=50 "".createTera+2684
	rel 2208+8 t=50 "".createTera+2723
	rel 2216+8 t=50 "".createTera+2747
	rel 2224+8 t=50 "".createTera+2789
	rel 2232+8 t=50 "".createTera+2796
	rel 2256+8 t=50 "".createTera+2747
	rel 2264+8 t=50 "".createTera+2762
	rel 2272+8 t=50 "".createTera+2762
	rel 2280+8 t=50 "".createTera+2789
	rel 2304+8 t=50 "".createTera+2828
	rel 2312+8 t=50 "".createTera+2852
	rel 2320+8 t=50 "".createTera+2894
	rel 2328+8 t=50 "".createTera+2901
	rel 2352+8 t=50 "".createTera+2852
	rel 2360+8 t=50 "".createTera+2867
	rel 2368+8 t=50 "".createTera+2867
	rel 2376+8 t=50 "".createTera+2894
	rel 2400+8 t=50 "".createTera+2930
	rel 2408+8 t=50 "".createTera+2957
	rel 2416+8 t=50 "".createTera+2999
	rel 2424+8 t=50 "".createTera+3009
	rel 2448+8 t=50 "".createTera+2957
	rel 2456+8 t=50 "".createTera+2972
	rel 2464+8 t=50 "".createTera+2972
	rel 2472+8 t=50 "".createTera+2999
go.isstmt."".createTera SDWARFMISC size=0
	0x0000 04 1b 04 17 03 08 01 16 02 13 01 14 02 08 01 13  ................
	0x0010 02 02 01 0d 02 08 01 02 02 08 01 12 02 13 01 14  ................
	0x0020 02 08 01 13 02 02 01 0d 02 08 01 02 02 08 01 12  ................
	0x0030 02 13 01 14 02 08 01 13 02 02 01 0d 02 08 01 02  ................
	0x0040 02 08 01 12 02 13 01 14 02 08 01 13 02 02 01 0d  ................
	0x0050 02 08 01 02 02 08 01 12 02 13 01 14 02 08 01 13  ................
	0x0060 02 02 01 0d 02 08 01 02 02 08 01 12 02 13 01 14  ................
	0x0070 02 08 01 13 02 02 01 0d 02 08 01 02 02 08 01 12  ................
	0x0080 02 13 01 14 02 08 01 13 02 02 01 0d 02 08 01 02  ................
	0x0090 02 08 01 12 02 13 01 14 02 08 01 13 02 02 01 0d  ................
	0x00a0 02 08 01 02 02 08 01 12 02 13 01 14 02 08 01 13  ................
	0x00b0 02 02 01 0d 02 08 01 02 02 08 01 12 02 13 01 14  ................
	0x00c0 02 08 01 13 02 02 01 0d 02 08 01 02 02 08 01 12  ................
	0x00d0 02 13 01 14 02 08 01 13 02 02 01 0d 02 08 01 02  ................
	0x00e0 02 08 01 12 02 13 01 14 02 08 01 13 02 02 01 0d  ................
	0x00f0 02 08 01 02 02 08 01 12 02 13 01 14 02 08 01 13  ................
	0x0100 02 02 01 0d 02 08 01 02 02 08 01 12 02 13 01 14  ................
	0x0110 02 08 01 13 02 02 01 0d 02 08 01 02 02 08 01 12  ................
	0x0120 02 13 01 14 02 08 01 13 02 02 01 0d 02 08 01 02  ................
	0x0130 02 08 01 12 02 13 01 14 02 08 01 13 02 02 01 0d  ................
	0x0140 02 08 01 02 02 08 01 12 02 13 01 14 02 08 01 13  ................
	0x0150 02 02 01 0d 02 08 01 02 02 08 01 12 02 13 01 14  ................
	0x0160 02 08 01 13 02 02 01 0d 02 08 01 02 02 08 01 12  ................
	0x0170 02 10 01 14 02 08 01 13 02 02 01 0d 02 08 01 02  ................
	0x0180 02 08 01 0f 02 10 01 11 02 08 01 13 02 02 01 0d  ................
	0x0190 02 05 01 02 02 05 01 0f 02 10 01 11 02 08 01 13  ................
	0x01a0 02 02 01 0d 02 05 01 02 02 05 01 0f 02 13 01 11  ................
	0x01b0 02 08 01 13 02 02 01 0d 02 05 01 02 02 05 01 12  ................
	0x01c0 02 10 01 11 02 08 01 13 02 02 01 0d 02 05 01 02  ................
	0x01d0 02 05 01 0f 02 13 01 11 02 08 01 13 02 02 01 0d  ................
	0x01e0 02 05 01 02 02 05 01 12 02 10 01 11 02 08 01 13  ................
	0x01f0 02 02 01 0d 02 05 01 02 02 05 01 0f 02 10 01 14  ................
	0x0200 02 08 01 13 02 02 01 0d 02 08 01 02 02 08 01 0f  ................
	0x0210 02 05 01 0e 02 05 01 0e 02 05 01 0e 02 05 01 0e  ................
	0x0220 02 05 01 0e 02 05 01 0e 02 05 01 0e 02 05 01 0e  ................
	0x0230 02 05 01 0e 02 05 01 0e 02 05 01 0e 02 05 01 0e  ................
	0x0240 02 05 01 0e 02 05 01 0e 02 05 01 0e 02 05 01 0e  ................
	0x0250 02 05 01 0e 02 05 01 0e 02 05 01 0e 02 05 01 0e  ................
	0x0260 02 05 01 0e 02 05 01 0e 02 05 01 0e 02 05 01 0e  ................
	0x0270 02 05 01 0e 02 05 01 0e 02 05 01 1f 02 08 01 0d  ................
	0x0280 02 05 01 1a 02 08 01 0a 02 05 01 1f 02 08 01 0d  ................
	0x0290 02 05 01 1a 02 08 01 0a 02 05 01 1f 02 08 01 0d  ................
	0x02a0 02 05 01 1a 02 08 01 0a 02 05 01 1f 02 08 01 0d  ................
	0x02b0 02 05 01 1a 02 08 01 0a 02 05 01 1f 02 08 01 0d  ................
	0x02c0 02 05 01 1a 02 08 01 0a 02 05 01 1f 02 08 01 0d  ................
	0x02d0 02 05 01 1a 02 08 01 0a 02 05 01 1f 02 08 01 0d  ................
	0x02e0 02 05 01 1a 02 08 01 0a 02 05 01 1f 02 08 01 0d  ................
	0x02f0 02 05 01 1a 02 08 01 0a 02 05 01 1f 02 08 01 0d  ................
	0x0300 02 05 01 1a 02 08 01 0a 02 05 01 1f 02 08 01 0d  ................
	0x0310 02 05 01 1a 02 08 01 0a 02 05 01 1f 02 08 01 0d  ................
	0x0320 02 05 01 1a 02 08 01 0a 02 05 01 1f 02 08 01 0d  ................
	0x0330 02 05 01 1a 02 08 01 0a 02 05 01 1f 02 08 01 0d  ................
	0x0340 02 05 01 1a 02 08 01 0a 02 05 01 1f 02 08 01 0d  ................
	0x0350 02 05 01 1a 02 08 01 0a 02 05 01 1f 02 08 01 0d  ................
	0x0360 02 05 01 1a 02 08 01 0a 02 05 01 1f 02 08 01 0d  ................
	0x0370 02 05 01 1a 02 08 01 0a 02 05 01 1f 02 08 01 0d  ................
	0x0380 02 05 01 1a 02 08 01 0a 02 05 01 1f 02 08 01 0d  ................
	0x0390 02 05 01 1a 02 08 01 0a 02 05 01 1f 02 08 01 0d  ................
	0x03a0 02 05 01 1a 02 08 01 0a 02 05 01 1f 02 08 01 0d  ................
	0x03b0 02 05 01 1a 02 08 01 0a 02 05 01 1f 02 08 01 0d  ................
	0x03c0 02 05 01 1a 02 08 01 0a 02 05 01 1f 02 08 01 0d  ................
	0x03d0 02 05 01 1a 02 08 01 0a 02 05 01 1f 02 08 01 0d  ................
	0x03e0 02 05 01 1a 02 08 01 0a 02 05 01 1f 02 08 01 0d  ................
	0x03f0 02 05 01 1a 02 08 01 0a 02 05 01 1f 02 08 01 0d  ................
	0x0400 02 05 01 1a 02 08 01 0a 02 05 01 1f 02 08 01 0d  ................
	0x0410 02 05 01 1a 02 08 01 0a 02 08 01 1a 02 08 01 08  ................
	0x0420 02 08 01 08 02 08 01 08 02 08 01 08 02 08 01 08  ................
	0x0430 02 08 01 08 02 08 01 08 02 08 01 08 02 08 01 08  ................
	0x0440 02 08 01 08 02 08 01 08 02 08 01 08 02 08 01 08  ................
	0x0450 02 08 01 08 02 08 01 08 02 08 01 08 02 08 01 08  ................
	0x0460 02 08 01 08 02 05 01 08 02 05 01 08 02 05 01 08  ................
	0x0470 02 08 01 08 02 05 01 08 02 08 01 08 02 05 01 08  ................
	0x0480 02 05 01 08 02 09 01 09 02 09 01 09 02 09 01 09  ................
	0x0490 02 09 01 09 02 09 01 09 02 09 01 09 02 09 01 09  ................
	0x04a0 02 09 01 09 02 09 01 09 02 09 01 09 02 09 01 09  ................
	0x04b0 02 09 01 09 02 09 01 09 02 09 01 09 02 09 01 09  ................
	0x04c0 02 09 01 09 02 09 01 09 02 09 01 09 02 09 01 09  ................
	0x04d0 02 09 01 09 02 09 01 09 02 09 01 09 02 09 01 09  ................
	0x04e0 02 09 01 09 02 09 01 09 02 09 01 09 02 08 01 18  ................
	0x04f0 02 08 01 18 02 08 01 18 02 08 01 18 02 08 01 18  ................
	0x0500 02 08 01 18 02 08 01 18 02 08 01 18 02 08 01 18  ................
	0x0510 02 08 01 18 02 08 01 18 02 08 01 18 02 08 01 18  ................
	0x0520 02 08 01 18 02 08 01 18 02 08 01 18 02 08 01 18  ................
	0x0530 02 08 01 18 02 08 01 18 02 08 01 18 02 08 01 18  ................
	0x0540 02 08 01 18 02 08 01 18 02 08 01 18 02 08 01 18  ................
	0x0550 02 08 01 18 02 08 01 2b 02 0a 00                 .......+...
go.loc."".createGiga SDWARFLOC size=0
go.info."".createGiga SDWARFINFO size=1997
	0x0000 03 22 22 2e 63 72 65 61 74 65 47 69 67 61 00 00  ."".createGiga..
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01  ................
	0x0020 9c 00 00 00 00 01 0a 7e 52 30 00 bf 02 00 00 00  .......~R0......
	0x0030 00 03 91 b8 74 0a 7e 52 30 00 ab 02 00 00 00 00  ....t.~R0.......
	0x0040 03 91 c0 74 0a 7e 52 30 00 c0 02 00 00 00 00 03  ...t.~R0........
	0x0050 91 c8 74 0a 7e 52 30 00 bb 02 00 00 00 00 03 91  ..t.~R0.........
	0x0060 d0 74 0a 7e 52 30 00 ab 02 00 00 00 00 03 91 d8  .t.~R0..........
	0x0070 74 0a 7e 52 30 00 c1 02 00 00 00 00 03 91 e0 74  t.~R0..........t
	0x0080 0a 7e 52 30 00 ab 02 00 00 00 00 03 91 e8 74 0a  .~R0..........t.
	0x0090 7e 52 30 00 ab 02 00 00 00 00 03 91 f0 74 0a 7e  ~R0..........t.~
	0x00a0 52 30 00 c2 02 00 00 00 00 03 91 f8 74 0a 7e 52  R0..........t.~R
	0x00b0 30 00 be 02 00 00 00 00 03 91 80 75 0a 7e 52 30  0..........u.~R0
	0x00c0 00 ab 02 00 00 00 00 03 91 88 75 0a 7e 52 30 00  ..........u.~R0.
	0x00d0 c3 02 00 00 00 00 03 91 90 75 0a 7e 52 30 00 ab  .........u.~R0..
	0x00e0 02 00 00 00 00 03 91 98 75 0a 7e 52 30 00 ab 02  ........u.~R0...
	0x00f0 00 00 00 00 03 91 a0 75 0a 7e 52 30 00 c4 02 00  .......u.~R0....
	0x0100 00 00 00 03 91 a8 75 0a 7e 52 30 00 bd 02 00 00  ......u.~R0.....
	0x0110 00 00 03 91 b0 75 0a 7e 52 30 00 b6 02 00 00 00  .....u.~R0......
	0x0120 00 03 91 b8 75 0a 7e 52 30 00 ab 02 00 00 00 00  ....u.~R0.......
	0x0130 03 91 c0 75 0a 7e 52 30 00 c5 02 00 00 00 00 03  ...u.~R0........
	0x0140 91 c8 75 0a 7e 52 30 00 ab 02 00 00 00 00 03 91  ..u.~R0.........
	0x0150 d0 75 0a 7e 52 30 00 ab 02 00 00 00 00 03 91 d8  .u.~R0..........
	0x0160 75 0a 7e 52 30 00 c6 02 00 00 00 00 03 91 e0 75  u.~R0..........u
	0x0170 0a 7e 52 30 00 bc 02 00 00 00 00 03 91 e8 75 0a  .~R0..........u.
	0x0180 7e 52 30 00 ab 02 00 00 00 00 03 91 f0 75 0a 7e  ~R0..........u.~
	0x0190 52 30 00 c7 02 00 00 00 00 03 91 f8 75 0a 7e 52  R0..........u.~R
	0x01a0 30 00 ab 02 00 00 00 00 03 91 80 76 0a 7e 52 30  0..........v.~R0
	0x01b0 00 ab 02 00 00 00 00 03 91 88 76 0a 7e 52 30 00  ..........v.~R0.
	0x01c0 c8 02 00 00 00 00 03 91 90 76 0a 7e 52 30 00 ab  .........v.~R0..
	0x01d0 02 00 00 00 00 03 91 98 76 0a 7e 52 30 00 ab 02  ........v.~R0...
	0x01e0 00 00 00 00 03 91 a0 76 0a 7e 52 30 00 c9 02 00  .......v.~R0....
	0x01f0 00 00 00 03 91 a8 76 0a 7e 52 30 00 ba 02 00 00  ......v.~R0.....
	0x0200 00 00 03 91 b0 76 0a 7e 52 30 00 ab 02 00 00 00  .....v.~R0......
	0x0210 00 03 91 b8 76 0a 7e 52 30 00 ab 02 00 00 00 00  ....v.~R0.......
	0x0220 03 91 c0 76 0a 7e 52 30 00 ab 02 00 00 00 00 03  ...v.~R0........
	0x0230 91 c8 76 0a 7e 52 30 00 ab 02 00 00 00 00 03 91  ..v.~R0.........
	0x0240 d0 76 0a 7e 52 30 00 b7 02 00 00 00 00 03 91 d8  .v.~R0..........
	0x0250 76 0a 7e 52 30 00 ce 02 00 00 00 00 03 91 e0 76  v.~R0..........v
	0x0260 0a 7e 52 30 00 b8 02 00 00 00 00 03 91 e8 76 0a  .~R0..........v.
	0x0270 7e 52 30 00 ca 02 00 00 00 00 03 91 f0 76 0a 7e  ~R0..........v.~
	0x0280 52 30 00 ab 02 00 00 00 00 03 91 f8 76 0a 7e 52  R0..........v.~R
	0x0290 30 00 ab 02 00 00 00 00 03 91 80 77 0a 7e 52 30  0..........w.~R0
	0x02a0 00 cb 02 00 00 00 00 03 91 88 77 0a 7e 52 30 00  ..........w.~R0.
	0x02b0 b9 02 00 00 00 00 03 91 90 77 0a 7e 52 30 00 ab  .........w.~R0..
	0x02c0 02 00 00 00 00 03 91 98 77 0a 7e 52 30 00 cc 02  ........w.~R0...
	0x02d0 00 00 00 00 03 91 a0 77 0a 7e 52 30 00 ab 02 00  .......w.~R0....
	0x02e0 00 00 00 03 91 a8 77 0a 7e 52 30 00 cd 02 00 00  ......w.~R0.....
	0x02f0 00 00 03 91 b0 77 0a 7e 52 30 00 ab 02 00 00 00  .....w.~R0......
	0x0300 00 03 91 b8 77 0a 7e 52 30 00 ab 02 00 00 00 00  ....w.~R0.......
	0x0310 03 91 c0 77 0a 7e 52 30 00 ab 02 00 00 00 00 03  ...w.~R0........
	0x0320 91 c8 77 0a 7e 52 30 00 cf 02 00 00 00 00 03 91  ..w.~R0.........
	0x0330 d0 77 0f 7e 72 30 00 01 b4 02 00 00 00 00 01 9c  .w.~r0..........
	0x0340 07 00 00 00 00 00 00 00 00 00 00 00 00 36 01 00  .............6..
	0x0350 00 07 00 00 00 00 00 00 00 00 00 00 00 00 2b 01  ..............+.
	0x0360 00 00 12 00 00 00 00 02 91 60 00 00 07 00 00 00  .........`......
	0x0370 00 00 00 00 00 00 00 00 00 37 01 00 00 07 00 00  .........7......
	0x0380 00 00 00 00 00 00 00 00 00 00 2b 01 00 00 12 00  ..........+.....
	0x0390 00 00 00 02 91 48 00 00 07 00 00 00 00 00 00 00  .....H..........
	0x03a0 00 00 00 00 00 38 01 00 00 07 00 00 00 00 00 00  .....8..........
	0x03b0 00 00 00 00 00 00 2b 01 00 00 12 00 00 00 00 03  ......+.........
	0x03c0 91 b0 7f 00 00 07 00 00 00 00 00 00 00 00 00 00  ................
	0x03d0 00 00 39 01 00 00 07 00 00 00 00 00 00 00 00 00  ..9.............
	0x03e0 00 00 00 2b 01 00 00 12 00 00 00 00 03 91 98 7f  ...+............
	0x03f0 00 00 07 00 00 00 00 00 00 00 00 00 00 00 00 3a  ...............:
	0x0400 01 00 00 07 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0410 2b 01 00 00 12 00 00 00 00 03 91 80 7f 00 00 07  +...............
	0x0420 00 00 00 00 00 00 00 00 00 00 00 00 3b 01 00 00  ............;...
	0x0430 07 00 00 00 00 00 00 00 00 00 00 00 00 2b 01 00  .............+..
	0x0440 00 12 00 00 00 00 03 91 e8 7e 00 00 07 00 00 00  .........~......
	0x0450 00 00 00 00 00 00 00 00 00 3c 01 00 00 07 00 00  .........<......
	0x0460 00 00 00 00 00 00 00 00 00 00 2b 01 00 00 12 00  ..........+.....
	0x0470 00 00 00 03 91 d0 7e 00 00 07 00 00 00 00 00 00  ......~.........
	0x0480 00 00 00 00 00 00 3d 01 00 00 07 00 00 00 00 00  ......=.........
	0x0490 00 00 00 00 00 00 00 2b 01 00 00 12 00 00 00 00  .......+........
	0x04a0 03 91 b8 7e 00 00 07 00 00 00 00 00 00 00 00 00  ...~............
	0x04b0 00 00 00 3e 01 00 00 07 00 00 00 00 00 00 00 00  ...>............
	0x04c0 00 00 00 00 2b 01 00 00 12 00 00 00 00 03 91 f0  ....+...........
	0x04d0 7e 00 00 07 00 00 00 00 00 00 00 00 00 00 00 00  ~...............
	0x04e0 3f 01 00 00 07 00 00 00 00 00 00 00 00 00 00 00  ?...............
	0x04f0 00 2b 01 00 00 12 00 00 00 00 02 91 68 00 00 07  .+..........h...
	0x0500 00 00 00 00 00 00 00 00 00 00 00 00 40 01 00 00  ............@...
	0x0510 07 00 00 00 00 00 00 00 00 00 00 00 00 2b 01 00  .............+..
	0x0520 00 12 00 00 00 00 03 91 a8 7f 00 00 07 00 00 00  ................
	0x0530 00 00 00 00 00 00 00 00 00 41 01 00 00 07 00 00  .........A......
	0x0540 00 00 00 00 00 00 00 00 00 00 2b 01 00 00 12 00  ..........+.....
	0x0550 00 00 00 03 91 a0 7e 00 00 07 00 00 00 00 00 00  ......~.........
	0x0560 00 00 00 00 00 00 42 01 00 00 07 00 00 00 00 00  ......B.........
	0x0570 00 00 00 00 00 00 00 2b 01 00 00 12 00 00 00 00  .......+........
	0x0580 03 91 a8 7e 00 00 07 00 00 00 00 00 00 00 00 00  ...~............
	0x0590 00 00 00 43 01 00 00 07 00 00 00 00 00 00 00 00  ...C............
	0x05a0 00 00 00 00 2b 01 00 00 12 00 00 00 00 03 91 b0  ....+...........
	0x05b0 7e 00 00 07 00 00 00 00 00 00 00 00 00 00 00 00  ~...............
	0x05c0 44 01 00 00 07 00 00 00 00 00 00 00 00 00 00 00  D...............
	0x05d0 00 2b 01 00 00 12 00 00 00 00 03 91 c0 7e 00 00  .+...........~..
	0x05e0 07 00 00 00 00 00 00 00 00 00 00 00 00 45 01 00  .............E..
	0x05f0 00 07 00 00 00 00 00 00 00 00 00 00 00 00 2b 01  ..............+.
	0x0600 00 00 12 00 00 00 00 03 91 c8 7e 00 00 07 00 00  ..........~.....
	0x0610 00 00 00 00 00 00 00 00 00 00 46 01 00 00 07 00  ..........F.....
	0x0620 00 00 00 00 00 00 00 00 00 00 00 2b 01 00 00 12  ...........+....
	0x0630 00 00 00 00 03 91 d8 7e 00 00 07 00 00 00 00 00  .......~........
	0x0640 00 00 00 00 00 00 00 47 01 00 00 07 00 00 00 00  .......G........
	0x0650 00 00 00 00 00 00 00 00 2b 01 00 00 12 00 00 00  ........+.......
	0x0660 00 03 91 e0 7e 00 00 07 00 00 00 00 00 00 00 00  ....~...........
	0x0670 00 00 00 00 48 01 00 00 07 00 00 00 00 00 00 00  ....H...........
	0x0680 00 00 00 00 00 2b 01 00 00 12 00 00 00 00 03 91  .....+..........
	0x0690 f8 7e 00 00 07 00 00 00 00 00 00 00 00 00 00 00  .~..............
	0x06a0 00 49 01 00 00 07 00 00 00 00 00 00 00 00 00 00  .I..............
	0x06b0 00 00 2b 01 00 00 12 00 00 00 00 03 91 88 7f 00  ..+.............
	0x06c0 00 07 00 00 00 00 00 00 00 00 00 00 00 00 4a 01  ..............J.
	0x06d0 00 00 07 00 00 00 00 00 00 00 00 00 00 00 00 2b  ...............+
	0x06e0 01 00 00 12 00 00 00 00 03 91 90 7f 00 00 07 00  ................
	0x06f0 00 00 00 00 00 00 00 00 00 00 00 4b 01 00 00 07  ...........K....
	0x0700 00 00 00 00 00 00 00 00 00 00 00 00 2b 01 00 00  ............+...
	0x0710 12 00 00 00 00 03 91 a0 7f 00 00 07 00 00 00 00  ................
	0x0720 00 00 00 00 00 00 00 00 4c 01 00 00 07 00 00 00  ........L.......
	0x0730 00 00 00 00 00 00 00 00 00 2b 01 00 00 12 00 00  .........+......
	0x0740 00 00 03 91 b8 7f 00 00 07 00 00 00 00 00 00 00  ................
	0x0750 00 00 00 00 00 4d 01 00 00 07 00 00 00 00 00 00  .....M..........
	0x0760 00 00 00 00 00 00 2b 01 00 00 12 00 00 00 00 02  ......+.........
	0x0770 91 40 00 00 07 00 00 00 00 00 00 00 00 00 00 00  .@..............
	0x0780 00 4e 01 00 00 07 00 00 00 00 00 00 00 00 00 00  .N..............
	0x0790 00 00 2b 01 00 00 12 00 00 00 00 02 91 50 00 00  ..+..........P..
	0x07a0 07 00 00 00 00 00 00 00 00 00 00 00 00 4f 01 00  .............O..
	0x07b0 00 07 00 00 00 00 00 00 00 00 00 00 00 00 2b 01  ..............+.
	0x07c0 00 00 12 00 00 00 00 02 91 58 00 00 00           .........X...
	rel 15+8 t=1 "".createGiga+0
	rel 23+8 t=1 "".createGiga+4473
	rel 33+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 45+4 t=28 go.info.int64+0
	rel 60+4 t=28 go.info.int64+0
	rel 75+4 t=28 go.info.int64+0
	rel 90+4 t=28 go.info.int64+0
	rel 105+4 t=28 go.info.int64+0
	rel 120+4 t=28 go.info.int64+0
	rel 135+4 t=28 go.info.int64+0
	rel 150+4 t=28 go.info.int64+0
	rel 165+4 t=28 go.info.int64+0
	rel 180+4 t=28 go.info.int64+0
	rel 195+4 t=28 go.info.int64+0
	rel 210+4 t=28 go.info.int64+0
	rel 225+4 t=28 go.info.int64+0
	rel 240+4 t=28 go.info.int64+0
	rel 255+4 t=28 go.info.int64+0
	rel 270+4 t=28 go.info.int64+0
	rel 285+4 t=28 go.info.int64+0
	rel 300+4 t=28 go.info.int64+0
	rel 315+4 t=28 go.info.int64+0
	rel 330+4 t=28 go.info.int64+0
	rel 345+4 t=28 go.info.int64+0
	rel 360+4 t=28 go.info.int64+0
	rel 375+4 t=28 go.info.int64+0
	rel 390+4 t=28 go.info.int64+0
	rel 405+4 t=28 go.info.int64+0
	rel 420+4 t=28 go.info.int64+0
	rel 435+4 t=28 go.info.int64+0
	rel 450+4 t=28 go.info.int64+0
	rel 465+4 t=28 go.info.int64+0
	rel 480+4 t=28 go.info.int64+0
	rel 495+4 t=28 go.info.int64+0
	rel 510+4 t=28 go.info.int64+0
	rel 525+4 t=28 go.info.int64+0
	rel 540+4 t=28 go.info.int64+0
	rel 555+4 t=28 go.info.int64+0
	rel 570+4 t=28 go.info.int64+0
	rel 585+4 t=28 go.info.int64+0
	rel 600+4 t=28 go.info.int64+0
	rel 615+4 t=28 go.info.int64+0
	rel 630+4 t=28 go.info.int64+0
	rel 645+4 t=28 go.info.int64+0
	rel 660+4 t=28 go.info.int64+0
	rel 675+4 t=28 go.info.int64+0
	rel 690+4 t=28 go.info.int64+0
	rel 705+4 t=28 go.info.int64+0
	rel 720+4 t=28 go.info.int64+0
	rel 735+4 t=28 go.info.int64+0
	rel 750+4 t=28 go.info.int64+0
	rel 765+4 t=28 go.info.int64+0
	rel 780+4 t=28 go.info.int64+0
	rel 795+4 t=28 go.info.int64+0
	rel 810+4 t=28 go.info.int64+0
	rel 826+4 t=28 go.info."".giga+0
	rel 833+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 837+4 t=28 go.range."".createGiga+0
	rel 841+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 850+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 854+4 t=28 go.range."".createGiga+48
	rel 858+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 867+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 877+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 881+4 t=28 go.range."".createGiga+96
	rel 885+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 894+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 898+4 t=28 go.range."".createGiga+144
	rel 902+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 911+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 921+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 925+4 t=28 go.range."".createGiga+192
	rel 929+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 938+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 942+4 t=28 go.range."".createGiga+240
	rel 946+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 955+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 966+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 970+4 t=28 go.range."".createGiga+288
	rel 974+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 983+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 987+4 t=28 go.range."".createGiga+336
	rel 991+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1000+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1011+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1015+4 t=28 go.range."".createGiga+384
	rel 1019+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1028+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1032+4 t=28 go.range."".createGiga+432
	rel 1036+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1045+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1056+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1060+4 t=28 go.range."".createGiga+480
	rel 1064+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1073+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1077+4 t=28 go.range."".createGiga+528
	rel 1081+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1090+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1101+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1105+4 t=28 go.range."".createGiga+576
	rel 1109+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1118+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1122+4 t=28 go.range."".createGiga+624
	rel 1126+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1135+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1146+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1150+4 t=28 go.range."".createGiga+672
	rel 1154+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1163+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1167+4 t=28 go.range."".createGiga+720
	rel 1171+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1180+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1191+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1195+4 t=28 go.range."".createGiga+768
	rel 1199+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1208+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1212+4 t=28 go.range."".createGiga+816
	rel 1216+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1225+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1236+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1240+4 t=28 go.range."".createGiga+864
	rel 1244+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1253+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1257+4 t=28 go.range."".createGiga+912
	rel 1261+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1270+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1280+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1284+4 t=28 go.range."".createGiga+960
	rel 1288+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1297+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1301+4 t=28 go.range."".createGiga+1008
	rel 1305+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1314+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1325+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1329+4 t=28 go.range."".createGiga+1056
	rel 1333+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1342+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1346+4 t=28 go.range."".createGiga+1104
	rel 1350+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1359+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1370+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1374+4 t=28 go.range."".createGiga+1152
	rel 1378+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1387+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1391+4 t=28 go.range."".createGiga+1200
	rel 1395+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1404+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1415+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1419+4 t=28 go.range."".createGiga+1248
	rel 1423+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1432+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1436+4 t=28 go.range."".createGiga+1296
	rel 1440+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1449+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1460+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1464+4 t=28 go.range."".createGiga+1344
	rel 1468+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1477+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1481+4 t=28 go.range."".createGiga+1392
	rel 1485+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1494+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1505+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1509+4 t=28 go.range."".createGiga+1440
	rel 1513+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1522+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1526+4 t=28 go.range."".createGiga+1488
	rel 1530+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1539+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1550+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1554+4 t=28 go.range."".createGiga+1536
	rel 1558+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1567+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1571+4 t=28 go.range."".createGiga+1584
	rel 1575+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1584+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1595+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1599+4 t=28 go.range."".createGiga+1632
	rel 1603+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1612+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1616+4 t=28 go.range."".createGiga+1680
	rel 1620+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1629+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1640+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1644+4 t=28 go.range."".createGiga+1728
	rel 1648+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1657+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1661+4 t=28 go.range."".createGiga+1776
	rel 1665+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1674+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1685+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1689+4 t=28 go.range."".createGiga+1824
	rel 1693+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1702+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1706+4 t=28 go.range."".createGiga+1872
	rel 1710+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1719+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1730+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1734+4 t=28 go.range."".createGiga+1920
	rel 1738+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1747+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1751+4 t=28 go.range."".createGiga+1968
	rel 1755+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1764+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1775+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1779+4 t=28 go.range."".createGiga+2016
	rel 1783+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1792+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1796+4 t=28 go.range."".createGiga+2064
	rel 1800+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1809+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1820+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1824+4 t=28 go.range."".createGiga+2112
	rel 1828+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1837+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1841+4 t=28 go.range."".createGiga+2160
	rel 1845+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1854+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1865+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1869+4 t=28 go.range."".createGiga+2208
	rel 1873+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1882+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1886+4 t=28 go.range."".createGiga+2256
	rel 1890+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1899+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1909+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1913+4 t=28 go.range."".createGiga+2304
	rel 1917+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1926+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1930+4 t=28 go.range."".createGiga+2352
	rel 1934+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1943+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
	rel 1953+4 t=28 go.info.math/rand.Int63$abstract+0
	rel 1957+4 t=28 go.range."".createGiga+2400
	rel 1961+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_invocation_test.go+0
	rel 1970+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+0
	rel 1974+4 t=28 go.range."".createGiga+2448
	rel 1978+4 t=29 gofile..$GOROOT/src/math/rand/rand.go+0
	rel 1987+4 t=28 go.info.math/rand.(*Rand).Int63$abstract+27
go.range."".createGiga SDWARFRANGE size=2496
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0120 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0130 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0140 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0150 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0160 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0170 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0180 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0190 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0200 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0210 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0220 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0230 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0240 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0250 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0260 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0270 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0280 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0290 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0300 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0310 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0320 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0330 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0340 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0350 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0360 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0370 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0380 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0390 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0400 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0410 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0420 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0430 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0440 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0450 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0460 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0470 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0480 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0490 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x04a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x04b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x04c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x04d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x04e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x04f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0500 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0510 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0520 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0530 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0540 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0550 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0560 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0570 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0580 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0590 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x05a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x05b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x05c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x05d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x05e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x05f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0600 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0610 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0620 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0630 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0640 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0650 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0660 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0670 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0680 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0690 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x06a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x06b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x06c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x06d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x06e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x06f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0700 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0710 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0720 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0730 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0740 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0750 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0760 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0770 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0780 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0790 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x07a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x07b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x07c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x07d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x07e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x07f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0800 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0810 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0820 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0830 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0840 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0850 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0860 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0870 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0880 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0890 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x08a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x08b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x08c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x08d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x08e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x08f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0900 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0910 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0920 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0930 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0940 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0950 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0960 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0970 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0980 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0990 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x09a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x09b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".createGiga+96
	rel 8+8 t=50 "".createGiga+123
	rel 16+8 t=50 "".createGiga+165
	rel 24+8 t=50 "".createGiga+175
	rel 48+8 t=50 "".createGiga+123
	rel 56+8 t=50 "".createGiga+138
	rel 64+8 t=50 "".createGiga+138
	rel 72+8 t=50 "".createGiga+165
	rel 96+8 t=50 "".createGiga+213
	rel 104+8 t=50 "".createGiga+240
	rel 112+8 t=50 "".createGiga+282
	rel 120+8 t=50 "".createGiga+292
	rel 144+8 t=50 "".createGiga+240
	rel 152+8 t=50 "".createGiga+255
	rel 160+8 t=50 "".createGiga+255
	rel 168+8 t=50 "".createGiga+282
	rel 192+8 t=50 "".createGiga+330
	rel 200+8 t=50 "".createGiga+357
	rel 208+8 t=50 "".createGiga+399
	rel 216+8 t=50 "".createGiga+409
	rel 240+8 t=50 "".createGiga+357
	rel 248+8 t=50 "".createGiga+372
	rel 256+8 t=50 "".createGiga+372
	rel 264+8 t=50 "".createGiga+399
	rel 288+8 t=50 "".createGiga+447
	rel 296+8 t=50 "".createGiga+474
	rel 304+8 t=50 "".createGiga+516
	rel 312+8 t=50 "".createGiga+526
	rel 336+8 t=50 "".createGiga+474
	rel 344+8 t=50 "".createGiga+489
	rel 352+8 t=50 "".createGiga+489
	rel 360+8 t=50 "".createGiga+516
	rel 384+8 t=50 "".createGiga+564
	rel 392+8 t=50 "".createGiga+591
	rel 400+8 t=50 "".createGiga+633
	rel 408+8 t=50 "".createGiga+643
	rel 432+8 t=50 "".createGiga+591
	rel 440+8 t=50 "".createGiga+606
	rel 448+8 t=50 "".createGiga+606
	rel 456+8 t=50 "".createGiga+633
	rel 480+8 t=50 "".createGiga+678
	rel 488+8 t=50 "".createGiga+705
	rel 496+8 t=50 "".createGiga+747
	rel 504+8 t=50 "".createGiga+757
	rel 528+8 t=50 "".createGiga+705
	rel 536+8 t=50 "".createGiga+720
	rel 544+8 t=50 "".createGiga+720
	rel 552+8 t=50 "".createGiga+747
	rel 576+8 t=50 "".createGiga+792
	rel 584+8 t=50 "".createGiga+819
	rel 592+8 t=50 "".createGiga+861
	rel 600+8 t=50 "".createGiga+871
	rel 624+8 t=50 "".createGiga+819
	rel 632+8 t=50 "".createGiga+834
	rel 640+8 t=50 "".createGiga+834
	rel 648+8 t=50 "".createGiga+861
	rel 672+8 t=50 "".createGiga+909
	rel 680+8 t=50 "".createGiga+933
	rel 688+8 t=50 "".createGiga+975
	rel 696+8 t=50 "".createGiga+982
	rel 720+8 t=50 "".createGiga+933
	rel 728+8 t=50 "".createGiga+948
	rel 736+8 t=50 "".createGiga+948
	rel 744+8 t=50 "".createGiga+975
	rel 768+8 t=50 "".createGiga+1014
	rel 776+8 t=50 "".createGiga+1038
	rel 784+8 t=50 "".createGiga+1080
	rel 792+8 t=50 "".createGiga+1087
	rel 816+8 t=50 "".createGiga+1038
	rel 824+8 t=50 "".createGiga+1053
	rel 832+8 t=50 "".createGiga+1053
	rel 840+8 t=50 "".createGiga+1080
	rel 864+8 t=50 "".createGiga+1116
	rel 872+8 t=50 "".createGiga+1140
	rel 880+8 t=50 "".createGiga+1182
	rel 888+8 t=50 "".createGiga+1189
	rel 912+8 t=50 "".createGiga+1140
	rel 920+8 t=50 "".createGiga+1155
	rel 928+8 t=50 "".createGiga+1155
	rel 936+8 t=50 "".createGiga+1182
	rel 960+8 t=50 "".createGiga+1218
	rel 968+8 t=50 "".createGiga+1242
	rel 976+8 t=50 "".createGiga+1284
	rel 984+8 t=50 "".createGiga+1291
	rel 1008+8 t=50 "".createGiga+1242
	rel 1016+8 t=50 "".createGiga+1257
	rel 1024+8 t=50 "".createGiga+1257
	rel 1032+8 t=50 "".createGiga+1284
	rel 1056+8 t=50 "".createGiga+1320
	rel 1064+8 t=50 "".createGiga+1344
	rel 1072+8 t=50 "".createGiga+1386
	rel 1080+8 t=50 "".createGiga+1393
	rel 1104+8 t=50 "".createGiga+1344
	rel 1112+8 t=50 "".createGiga+1359
	rel 1120+8 t=50 "".createGiga+1359
	rel 1128+8 t=50 "".createGiga+1386
	rel 1152+8 t=50 "".createGiga+1422
	rel 1160+8 t=50 "".createGiga+1446
	rel 1168+8 t=50 "".createGiga+1488
	rel 1176+8 t=50 "".createGiga+1495
	rel 1200+8 t=50 "".createGiga+1446
	rel 1208+8 t=50 "".createGiga+1461
	rel 1216+8 t=50 "".createGiga+1461
	rel 1224+8 t=50 "".createGiga+1488
	rel 1248+8 t=50 "".createGiga+1524
	rel 1256+8 t=50 "".createGiga+1548
	rel 1264+8 t=50 "".createGiga+1590
	rel 1272+8 t=50 "".createGiga+1597
	rel 1296+8 t=50 "".createGiga+1548
	rel 1304+8 t=50 "".createGiga+1563
	rel 1312+8 t=50 "".createGiga+1563
	rel 1320+8 t=50 "".createGiga+1590
	rel 1344+8 t=50 "".createGiga+1629
	rel 1352+8 t=50 "".createGiga+1656
	rel 1360+8 t=50 "".createGiga+1698
	rel 1368+8 t=50 "".createGiga+1708
	rel 1392+8 t=50 "".createGiga+1656
	rel 1400+8 t=50 "".createGiga+1671
	rel 1408+8 t=50 "".createGiga+1671
	rel 1416+8 t=50 "".createGiga+1698
	rel 1440+8 t=50 "".createGiga+1746
	rel 1448+8 t=50 "".createGiga+1773
	rel 1456+8 t=50 "".createGiga+1815
	rel 1464+8 t=50 "".createGiga+1825
	rel 1488+8 t=50 "".createGiga+1773
	rel 1496+8 t=50 "".createGiga+1788
	rel 1504+8 t=50 "".createGiga+1788
	rel 1512+8 t=50 "".createGiga+1815
	rel 1536+8 t=50 "".createGiga+1863
	rel 1544+8 t=50 "".createGiga+1890
	rel 1552+8 t=50 "".createGiga+1932
	rel 1560+8 t=50 "".createGiga+1942
	rel 1584+8 t=50 "".createGiga+1890
	rel 1592+8 t=50 "".createGiga+1905
	rel 1600+8 t=50 "".createGiga+1905
	rel 1608+8 t=50 "".createGiga+1932
	rel 1632+8 t=50 "".createGiga+1980
	rel 1640+8 t=50 "".createGiga+2007
	rel 1648+8 t=50 "".createGiga+2049
	rel 1656+8 t=50 "".createGiga+2059
	rel 1680+8 t=50 "".createGiga+2007
	rel 1688+8 t=50 "".createGiga+2022
	rel 1696+8 t=50 "".createGiga+2022
	rel 1704+8 t=50 "".createGiga+2049
	rel 1728+8 t=50 "".createGiga+2097
	rel 1736+8 t=50 "".createGiga+2124
	rel 1744+8 t=50 "".createGiga+2166
	rel 1752+8 t=50 "".createGiga+2176
	rel 1776+8 t=50 "".createGiga+2124
	rel 1784+8 t=50 "".createGiga+2139
	rel 1792+8 t=50 "".createGiga+2139
	rel 1800+8 t=50 "".createGiga+2166
	rel 1824+8 t=50 "".createGiga+2214
	rel 1832+8 t=50 "".createGiga+2241
	rel 1840+8 t=50 "".createGiga+2283
	rel 1848+8 t=50 "".createGiga+2293
	rel 1872+8 t=50 "".createGiga+2241
	rel 1880+8 t=50 "".createGiga+2256
	rel 1888+8 t=50 "".createGiga+2256
	rel 1896+8 t=50 "".createGiga+2283
	rel 1920+8 t=50 "".createGiga+2331
	rel 1928+8 t=50 "".createGiga+2358
	rel 1936+8 t=50 "".createGiga+2400
	rel 1944+8 t=50 "".createGiga+2410
	rel 1968+8 t=50 "".createGiga+2358
	rel 1976+8 t=50 "".createGiga+2373
	rel 1984+8 t=50 "".createGiga+2373
	rel 1992+8 t=50 "".createGiga+2400
	rel 2016+8 t=50 "".createGiga+2448
	rel 2024+8 t=50 "".createGiga+2475
	rel 2032+8 t=50 "".createGiga+2517
	rel 2040+8 t=50 "".createGiga+2527
	rel 2064+8 t=50 "".createGiga+2475
	rel 2072+8 t=50 "".createGiga+2490
	rel 2080+8 t=50 "".createGiga+2490
	rel 2088+8 t=50 "".createGiga+2517
	rel 2112+8 t=50 "".createGiga+2565
	rel 2120+8 t=50 "".createGiga+2592
	rel 2128+8 t=50 "".createGiga+2634
	rel 2136+8 t=50 "".createGiga+2644
	rel 2160+8 t=50 "".createGiga+2592
	rel 2168+8 t=50 "".createGiga+2607
	rel 2176+8 t=50 "".createGiga+2607
	rel 2184+8 t=50 "".createGiga+2634
	rel 2208+8 t=50 "".createGiga+2682
	rel 2216+8 t=50 "".createGiga+2709
	rel 2224+8 t=50 "".createGiga+2751
	rel 2232+8 t=50 "".createGiga+2761
	rel 2256+8 t=50 "".createGiga+2709
	rel 2264+8 t=50 "".createGiga+2724
	rel 2272+8 t=50 "".createGiga+2724
	rel 2280+8 t=50 "".createGiga+2751
	rel 2304+8 t=50 "".createGiga+2799
	rel 2312+8 t=50 "".createGiga+2826
	rel 2320+8 t=50 "".createGiga+2868
	rel 2328+8 t=50 "".createGiga+2878
	rel 2352+8 t=50 "".createGiga+2826
	rel 2360+8 t=50 "".createGiga+2841
	rel 2368+8 t=50 "".createGiga+2841
	rel 2376+8 t=50 "".createGiga+2868
	rel 2400+8 t=50 "".createGiga+2916
	rel 2408+8 t=50 "".createGiga+2943
	rel 2416+8 t=50 "".createGiga+2985
	rel 2424+8 t=50 "".createGiga+2995
	rel 2448+8 t=50 "".createGiga+2943
	rel 2456+8 t=50 "".createGiga+2958
	rel 2464+8 t=50 "".createGiga+2958
	rel 2472+8 t=50 "".createGiga+2985
go.isstmt."".createGiga SDWARFMISC size=0
	0x0000 04 1b 04 17 03 08 01 1a 02 13 01 14 02 08 01 13  ................
	0x0010 02 02 01 0d 02 08 01 02 02 08 01 12 02 13 01 14  ................
	0x0020 02 08 01 13 02 02 01 0d 02 08 01 02 02 08 01 12  ................
	0x0030 02 13 01 14 02 08 01 13 02 02 01 0d 02 08 01 02  ................
	0x0040 02 08 01 12 02 13 01 14 02 08 01 13 02 02 01 0d  ................
	0x0050 02 08 01 02 02 08 01 12 02 13 01 14 02 08 01 13  ................
	0x0060 02 02 01 0d 02 08 01 02 02 08 01 12 02 10 01 14  ................
	0x0070 02 08 01 13 02 02 01 0d 02 08 01 02 02 08 01 0f  ................
	0x0080 02 13 01 14 02 08 01 13 02 02 01 0d 02 08 01 02  ................
	0x0090 02 08 01 12 02 13 01 11 02 08 01 13 02 02 01 0d  ................
	0x00a0 02 05 01 02 02 05 01 12 02 10 01 11 02 08 01 13  ................
	0x00b0 02 02 01 0d 02 05 01 02 02 05 01 0f 02 10 01 11  ................
	0x00c0 02 08 01 13 02 02 01 0d 02 05 01 02 02 05 01 0f  ................
	0x00d0 02 10 01 11 02 08 01 13 02 02 01 0d 02 05 01 02  ................
	0x00e0 02 05 01 0f 02 10 01 11 02 08 01 13 02 02 01 0d  ................
	0x00f0 02 05 01 02 02 05 01 0f 02 10 01 11 02 08 01 13  ................
	0x0100 02 02 01 0d 02 05 01 02 02 05 01 0f 02 10 01 11  ................
	0x0110 02 08 01 13 02 02 01 0d 02 05 01 02 02 05 01 0f  ................
	0x0120 02 13 01 14 02 08 01 13 02 02 01 0d 02 08 01 02  ................
	0x0130 02 08 01 12 02 13 01 14 02 08 01 13 02 02 01 0d  ................
	0x0140 02 08 01 02 02 08 01 12 02 13 01 14 02 08 01 13  ................
	0x0150 02 02 01 0d 02 08 01 02 02 08 01 12 02 13 01 14  ................
	0x0160 02 08 01 13 02 02 01 0d 02 08 01 02 02 08 01 12  ................
	0x0170 02 13 01 14 02 08 01 13 02 02 01 0d 02 08 01 02  ................
	0x0180 02 08 01 12 02 13 01 14 02 08 01 13 02 02 01 0d  ................
	0x0190 02 08 01 02 02 08 01 12 02 13 01 14 02 08 01 13  ................
	0x01a0 02 02 01 0d 02 08 01 02 02 08 01 12 02 13 01 14  ................
	0x01b0 02 08 01 13 02 02 01 0d 02 08 01 02 02 08 01 12  ................
	0x01c0 02 13 01 14 02 08 01 13 02 02 01 0d 02 08 01 02  ................
	0x01d0 02 08 01 12 02 13 01 14 02 08 01 13 02 02 01 0d  ................
	0x01e0 02 08 01 02 02 08 01 12 02 13 01 14 02 08 01 13  ................
	0x01f0 02 02 01 0d 02 08 01 02 02 08 01 12 02 13 01 14  ................
	0x0200 02 08 01 13 02 02 01 0d 02 08 01 02 02 08 01 12  ................
	0x0210 02 05 01 0e 02 05 01 0e 02 05 01 0e 02 05 01 0e  ................
	0x0220 02 05 01 0e 02 05 01 0e 02 05 01 0e 02 05 01 0e  ................
	0x0230 02 05 01 0e 02 05 01 0e 02 05 01 0e 02 05 01 0e  ................
	0x0240 02 05 01 0e 02 05 01 0e 02 05 01 0e 02 05 01 0e  ................
	0x0250 02 05 01 0e 02 05 01 0e 02 05 01 0e 02 05 01 0e  ................
	0x0260 02 05 01 0e 02 05 01 0e 02 05 01 0e 02 05 01 0e  ................
	0x0270 02 05 01 0e 02 05 01 30 02 08 01 08 02 08 01 08  .......0........
	0x0280 02 08 01 08 02 08 01 08 02 08 01 08 02 05 01 08  ................
	0x0290 02 08 01 08 02 08 01 08 02 05 01 08 02 05 01 08  ................
	0x02a0 02 05 01 08 02 05 01 08 02 05 01 08 02 05 01 08  ................
	0x02b0 02 08 01 08 02 08 01 08 02 08 01 08 02 08 01 08  ................
	0x02c0 02 08 01 08 02 08 01 08 02 08 01 08 02 08 01 08  ................
	0x02d0 02 08 01 08 02 08 01 08 02 08 01 08 02 08 01 08  ................
	0x02e0 02 09 01 09 02 09 01 09 02 09 01 09 02 09 01 09  ................
	0x02f0 02 09 01 09 02 09 01 09 02 09 01 09 02 09 01 09  ................
	0x0300 02 09 01 09 02 09 01 09 02 09 01 09 02 09 01 09  ................
	0x0310 02 09 01 09 02 09 01 09 02 09 01 09 02 09 01 09  ................
	0x0320 02 09 01 09 02 09 01 09 02 09 01 09 02 09 01 09  ................
	0x0330 02 09 01 09 02 09 01 09 02 09 01 09 02 09 01 09  ................
	0x0340 02 09 01 09 02 09 01 09 02 08 01 2b 02 0a 00     ...........+...
go.loc."".BenchmarkMicro_Iter SDWARFLOC size=0
go.info."".BenchmarkMicro_Iter SDWARFINFO size=223
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 4d 69 63  ."".BenchmarkMic
	0x0010 72 6f 5f 49 74 65 72 00 00 00 00 00 00 00 00 00  ro_Iter.........
	0x0020 00 00 00 00 00 00 00 00 01 9c 00 00 00 00 01 0a  ................
	0x0030 6f 00 0b 00 00 00 00 03 91 90 7e 0a 7e 52 30 00  o.........~.~R0.
	0x0040 09 00 00 00 00 03 91 d8 7e 0f 62 00 00 09 00 00  ........~.b.....
	0x0050 00 00 01 9c 14 00 00 00 00 0a 69 00 0d 00 00 00  ..........i.....
	0x0060 00 03 91 e0 7d 14 00 00 00 00 0a 61 00 0e 00 00  ....}......a....
	0x0070 00 00 03 91 f0 7d 00 00 07 00 00 00 00 00 00 00  .....}..........
	0x0080 00 00 00 00 00 0f 00 00 00 12 00 00 00 00 03 91  ................
	0x0090 a0 7e 06 00 00 00 00 00 00 00 00 00 00 00 00 00  .~..............
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 09 00 00 00 12  ................
	0x00b0 00 00 00 00 03 91 e8 7e 00 00 07 00 00 00 00 00  .......~........
	0x00c0 00 00 00 00 00 00 00 0f 00 00 00 12 00 00 00 00  ................
	0x00d0 03 91 e8 7d 12 00 00 00 00 03 91 f8 7e 00 00     ...}........~..
	rel 24+8 t=1 "".BenchmarkMicro_Iter+0
	rel 32+8 t=1 "".BenchmarkMicro_Iter+803
	rel 42+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 51+4 t=28 go.info."".micro+0
	rel 65+4 t=28 go.info.error+0
	rel 78+4 t=28 go.info.*testing.B+0
	rel 85+4 t=28 go.range."".BenchmarkMicro_Iter+0
	rel 93+4 t=28 go.info.int+0
	rel 102+4 t=28 go.range."".BenchmarkMicro_Iter+80
	rel 110+4 t=28 go.info.int+0
	rel 121+4 t=28 go.info."".calcMicro$abstract+0
	rel 125+4 t=28 go.range."".BenchmarkMicro_Iter+160
	rel 129+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 138+4 t=28 go.info."".calcMicro$abstract+14
	rel 147+4 t=28 go.info.errors.New$abstract+0
	rel 151+8 t=1 "".BenchmarkMicro_Iter+246
	rel 159+8 t=1 "".BenchmarkMicro_Iter+312
	rel 167+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 176+4 t=28 go.info.errors.New$abstract+14
	rel 187+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 191+4 t=28 go.range."".BenchmarkMicro_Iter+224
	rel 195+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 204+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 213+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkMicro_Iter SDWARFRANGE size=272
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkMicro_Iter+76
	rel 8+8 t=50 "".BenchmarkMicro_Iter+185
	rel 16+8 t=50 "".BenchmarkMicro_Iter+353
	rel 24+8 t=50 "".BenchmarkMicro_Iter+519
	rel 32+8 t=50 "".BenchmarkMicro_Iter+672
	rel 40+8 t=50 "".BenchmarkMicro_Iter+694
	rel 48+8 t=50 "".BenchmarkMicro_Iter+715
	rel 56+8 t=50 "".BenchmarkMicro_Iter+777
	rel 80+8 t=50 "".BenchmarkMicro_Iter+116
	rel 88+8 t=50 "".BenchmarkMicro_Iter+185
	rel 96+8 t=50 "".BenchmarkMicro_Iter+353
	rel 104+8 t=50 "".BenchmarkMicro_Iter+519
	rel 112+8 t=50 "".BenchmarkMicro_Iter+672
	rel 120+8 t=50 "".BenchmarkMicro_Iter+694
	rel 128+8 t=50 "".BenchmarkMicro_Iter+715
	rel 136+8 t=50 "".BenchmarkMicro_Iter+757
	rel 160+8 t=50 "".BenchmarkMicro_Iter+185
	rel 168+8 t=50 "".BenchmarkMicro_Iter+246
	rel 176+8 t=50 "".BenchmarkMicro_Iter+312
	rel 184+8 t=50 "".BenchmarkMicro_Iter+353
	rel 192+8 t=50 "".BenchmarkMicro_Iter+696
	rel 200+8 t=50 "".BenchmarkMicro_Iter+715
	rel 224+8 t=50 "".BenchmarkMicro_Iter+519
	rel 232+8 t=50 "".BenchmarkMicro_Iter+672
	rel 240+8 t=50 "".BenchmarkMicro_Iter+694
	rel 248+8 t=50 "".BenchmarkMicro_Iter+696
go.isstmt."".BenchmarkMicro_Iter SDWARFMISC size=0
	0x0000 04 1b 04 17 03 05 01 15 02 09 01 02 02 08 01 15  ................
	0x0010 02 09 01 02 02 09 01 07 02 05 01 25 02 06 01 11  ...........%....
	0x0020 02 07 01 1f 02 03 01 3f 02 07 01 22 02 08 01 9e  .......?..."....
	0x0030 01 02 03 01 07 02 03 01 6f 02 05 01 02 02 08 01  ........o.......
	0x0040 0e 02 04 01 14 02 05 01 0e 02 06 01 24 02 02 01  ............$...
	0x0050 22 02 0a 00                                      "...
go.loc."".BenchmarkMicroP_Iter SDWARFLOC size=0
go.info."".BenchmarkMicroP_Iter SDWARFINFO size=224
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 4d 69 63  ."".BenchmarkMic
	0x0010 72 6f 50 5f 49 74 65 72 00 00 00 00 00 00 00 00  roP_Iter........
	0x0020 00 00 00 00 00 00 00 00 00 01 9c 00 00 00 00 01  ................
	0x0030 0a 6f 00 17 00 00 00 00 03 91 90 7e 0a 7e 52 30  .o.........~.~R0
	0x0040 00 35 00 00 00 00 03 91 d8 7e 0f 62 00 00 15 00  .5.......~.b....
	0x0050 00 00 00 01 9c 14 00 00 00 00 0a 69 00 19 00 00  ...........i....
	0x0060 00 00 03 91 e0 7d 14 00 00 00 00 0a 61 00 1a 00  .....}......a...
	0x0070 00 00 00 03 91 f0 7d 00 00 07 00 00 00 00 00 00  ......}.........
	0x0080 00 00 00 00 00 00 1b 00 00 00 12 00 00 00 00 03  ................
	0x0090 91 a0 7e 06 00 00 00 00 00 00 00 00 00 00 00 00  ..~.............
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 35 00 00 00  ............5...
	0x00b0 12 00 00 00 00 03 91 e8 7e 00 00 07 00 00 00 00  ........~.......
	0x00c0 00 00 00 00 00 00 00 00 1b 00 00 00 12 00 00 00  ................
	0x00d0 00 03 91 e8 7d 12 00 00 00 00 03 91 f8 7e 00 00  ....}........~..
	rel 25+8 t=1 "".BenchmarkMicroP_Iter+0
	rel 33+8 t=1 "".BenchmarkMicroP_Iter+813
	rel 43+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 52+4 t=28 go.info."".micro+0
	rel 66+4 t=28 go.info.error+0
	rel 79+4 t=28 go.info.*testing.B+0
	rel 86+4 t=28 go.range."".BenchmarkMicroP_Iter+0
	rel 94+4 t=28 go.info.int+0
	rel 103+4 t=28 go.range."".BenchmarkMicroP_Iter+80
	rel 111+4 t=28 go.info.int+0
	rel 122+4 t=28 go.info."".calcMicroP$abstract+0
	rel 126+4 t=28 go.range."".BenchmarkMicroP_Iter+160
	rel 130+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 139+4 t=28 go.info."".calcMicroP$abstract+15
	rel 148+4 t=28 go.info.errors.New$abstract+0
	rel 152+8 t=1 "".BenchmarkMicroP_Iter+245
	rel 160+8 t=1 "".BenchmarkMicroP_Iter+311
	rel 168+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 177+4 t=28 go.info.errors.New$abstract+14
	rel 188+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 192+4 t=28 go.range."".BenchmarkMicroP_Iter+240
	rel 196+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 205+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 214+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkMicroP_Iter SDWARFRANGE size=288
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkMicroP_Iter+76
	rel 8+8 t=50 "".BenchmarkMicroP_Iter+178
	rel 16+8 t=50 "".BenchmarkMicroP_Iter+352
	rel 24+8 t=50 "".BenchmarkMicroP_Iter+518
	rel 32+8 t=50 "".BenchmarkMicroP_Iter+671
	rel 40+8 t=50 "".BenchmarkMicroP_Iter+693
	rel 48+8 t=50 "".BenchmarkMicroP_Iter+725
	rel 56+8 t=50 "".BenchmarkMicroP_Iter+787
	rel 80+8 t=50 "".BenchmarkMicroP_Iter+116
	rel 88+8 t=50 "".BenchmarkMicroP_Iter+178
	rel 96+8 t=50 "".BenchmarkMicroP_Iter+352
	rel 104+8 t=50 "".BenchmarkMicroP_Iter+518
	rel 112+8 t=50 "".BenchmarkMicroP_Iter+671
	rel 120+8 t=50 "".BenchmarkMicroP_Iter+693
	rel 128+8 t=50 "".BenchmarkMicroP_Iter+725
	rel 136+8 t=50 "".BenchmarkMicroP_Iter+767
	rel 160+8 t=50 "".BenchmarkMicroP_Iter+178
	rel 168+8 t=50 "".BenchmarkMicroP_Iter+185
	rel 176+8 t=50 "".BenchmarkMicroP_Iter+185
	rel 184+8 t=50 "".BenchmarkMicroP_Iter+245
	rel 192+8 t=50 "".BenchmarkMicroP_Iter+311
	rel 200+8 t=50 "".BenchmarkMicroP_Iter+352
	rel 208+8 t=50 "".BenchmarkMicroP_Iter+695
	rel 216+8 t=50 "".BenchmarkMicroP_Iter+725
	rel 240+8 t=50 "".BenchmarkMicroP_Iter+518
	rel 248+8 t=50 "".BenchmarkMicroP_Iter+671
	rel 256+8 t=50 "".BenchmarkMicroP_Iter+693
	rel 264+8 t=50 "".BenchmarkMicroP_Iter+695
go.isstmt."".BenchmarkMicroP_Iter SDWARFMISC size=0
	0x0000 04 1b 04 17 03 05 01 15 02 09 01 02 02 08 01 15  ................
	0x0010 02 09 01 02 02 09 01 07 02 05 01 1e 02 05 01 18  ................
	0x0020 02 07 01 1f 02 03 01 3f 02 07 01 22 02 08 01 9e  .......?..."....
	0x0030 01 02 03 01 07 02 03 01 6f 02 05 01 02 02 08 01  ........o.......
	0x0040 0e 02 04 01 14 02 05 01 19 02 06 01 24 02 02 01  ............$...
	0x0050 22 02 0a 00                                      "...
go.loc."".BenchmarkMicroIfc_Iter SDWARFLOC size=0
go.info."".BenchmarkMicroIfc_Iter SDWARFINFO size=147
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 4d 69 63  ."".BenchmarkMic
	0x0010 72 6f 49 66 63 5f 49 74 65 72 00 00 00 00 00 00  roIfc_Iter......
	0x0020 00 00 00 00 00 00 00 00 00 00 00 01 9c 00 00 00  ................
	0x0030 00 01 0a 26 6f 00 23 00 00 00 00 03 91 90 7f 0f  ...&o.#.........
	0x0040 62 00 00 21 00 00 00 00 01 9c 14 00 00 00 00 0a  b..!............
	0x0050 69 00 25 00 00 00 00 03 91 d8 7e 14 00 00 00 00  i.%.......~.....
	0x0060 0a 61 00 26 00 00 00 00 03 91 e8 7e 00 00 07 00  .a.&.......~....
	0x0070 00 00 00 00 00 00 00 00 00 00 00 27 00 00 00 12  ...........'....
	0x0080 00 00 00 00 03 91 e0 7e 12 00 00 00 00 03 91 98  .......~........
	0x0090 7f 00 00                                         ...
	rel 27+8 t=1 "".BenchmarkMicroIfc_Iter+0
	rel 35+8 t=1 "".BenchmarkMicroIfc_Iter+552
	rel 45+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 55+4 t=28 go.info.*"".micro+0
	rel 68+4 t=28 go.info.*testing.B+0
	rel 75+4 t=28 go.range."".BenchmarkMicroIfc_Iter+0
	rel 83+4 t=28 go.info.int+0
	rel 92+4 t=28 go.range."".BenchmarkMicroIfc_Iter+64
	rel 100+4 t=28 go.info.int+0
	rel 111+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 115+4 t=28 go.range."".BenchmarkMicroIfc_Iter+112
	rel 119+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 128+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 137+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkMicroIfc_Iter SDWARFRANGE size=160
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkMicroIfc_Iter+101
	rel 8+8 t=50 "".BenchmarkMicroIfc_Iter+329
	rel 16+8 t=50 "".BenchmarkMicroIfc_Iter+482
	rel 24+8 t=50 "".BenchmarkMicroIfc_Iter+504
	rel 32+8 t=50 "".BenchmarkMicroIfc_Iter+506
	rel 40+8 t=50 "".BenchmarkMicroIfc_Iter+526
	rel 64+8 t=50 "".BenchmarkMicroIfc_Iter+141
	rel 72+8 t=50 "".BenchmarkMicroIfc_Iter+329
	rel 80+8 t=50 "".BenchmarkMicroIfc_Iter+482
	rel 88+8 t=50 "".BenchmarkMicroIfc_Iter+504
	rel 112+8 t=50 "".BenchmarkMicroIfc_Iter+329
	rel 120+8 t=50 "".BenchmarkMicroIfc_Iter+482
	rel 128+8 t=50 "".BenchmarkMicroIfc_Iter+504
	rel 136+8 t=50 "".BenchmarkMicroIfc_Iter+506
go.isstmt."".BenchmarkMicroIfc_Iter SDWARFMISC size=0
	0x0000 04 18 04 17 03 07 01 04 02 05 01 0a 02 05 01 17  ................
	0x0010 02 09 01 02 02 08 01 15 02 09 01 02 02 09 01 07  ................
	0x0020 02 05 01 25 02 05 01 72 02 03 01 07 02 03 01 6f  ...%...r.......o
	0x0030 02 05 01 02 02 08 01 0e 02 04 01 14 02 02 01 22  ..............."
	0x0040 02 0a 00                                         ...
go.loc."".BenchmarkTiny_Iter SDWARFLOC size=0
go.info."".BenchmarkTiny_Iter SDWARFINFO size=221
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 54 69 6e  ."".BenchmarkTin
	0x0010 79 5f 49 74 65 72 00 00 00 00 00 00 00 00 00 00  y_Iter..........
	0x0020 00 00 00 00 00 00 00 01 9c 00 00 00 00 01 0a 7e  ...............~
	0x0030 52 30 00 10 00 00 00 00 03 91 98 7e 0a 6f 00 2f  R0.........~.o./
	0x0040 00 00 00 00 03 91 b0 7f 0f 62 00 00 2d 00 00 00  .........b..-...
	0x0050 00 01 9c 14 00 00 00 00 0a 69 00 31 00 00 00 00  .........i.1....
	0x0060 03 91 c0 7d 14 00 00 00 00 0a 61 00 32 00 00 00  ...}......a.2...
	0x0070 00 03 91 d0 7d 00 00 07 00 00 00 00 00 00 00 00  ....}...........
	0x0080 00 00 00 00 33 00 00 00 12 00 00 00 00 02 91 50  ....3..........P
	0x0090 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 10 00 00 00 12 00 00  ................
	0x00b0 00 00 03 91 a8 7e 00 00 07 00 00 00 00 00 00 00  .....~..........
	0x00c0 00 00 00 00 00 33 00 00 00 12 00 00 00 00 03 91  .....3..........
	0x00d0 c8 7d 12 00 00 00 00 03 91 b8 7e 00 00           .}........~..
	rel 23+8 t=1 "".BenchmarkTiny_Iter+0
	rel 31+8 t=1 "".BenchmarkTiny_Iter+867
	rel 41+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 52+4 t=28 go.info.error+0
	rel 64+4 t=28 go.info."".tiny+0
	rel 77+4 t=28 go.info.*testing.B+0
	rel 84+4 t=28 go.range."".BenchmarkTiny_Iter+0
	rel 92+4 t=28 go.info.int+0
	rel 101+4 t=28 go.range."".BenchmarkTiny_Iter+80
	rel 109+4 t=28 go.info.int+0
	rel 120+4 t=28 go.info."".calcTiny$abstract+0
	rel 124+4 t=28 go.range."".BenchmarkTiny_Iter+160
	rel 128+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 137+4 t=28 go.info."".calcTiny$abstract+13
	rel 145+4 t=28 go.info.errors.New$abstract+0
	rel 149+8 t=1 "".BenchmarkTiny_Iter+322
	rel 157+8 t=1 "".BenchmarkTiny_Iter+385
	rel 165+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 174+4 t=28 go.info.errors.New$abstract+14
	rel 185+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 189+4 t=28 go.range."".BenchmarkTiny_Iter+224
	rel 193+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 202+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 211+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkTiny_Iter SDWARFRANGE size=272
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkTiny_Iter+108
	rel 8+8 t=50 "".BenchmarkTiny_Iter+258
	rel 16+8 t=50 "".BenchmarkTiny_Iter+426
	rel 24+8 t=50 "".BenchmarkTiny_Iter+580
	rel 32+8 t=50 "".BenchmarkTiny_Iter+733
	rel 40+8 t=50 "".BenchmarkTiny_Iter+755
	rel 48+8 t=50 "".BenchmarkTiny_Iter+782
	rel 56+8 t=50 "".BenchmarkTiny_Iter+841
	rel 80+8 t=50 "".BenchmarkTiny_Iter+148
	rel 88+8 t=50 "".BenchmarkTiny_Iter+258
	rel 96+8 t=50 "".BenchmarkTiny_Iter+426
	rel 104+8 t=50 "".BenchmarkTiny_Iter+580
	rel 112+8 t=50 "".BenchmarkTiny_Iter+733
	rel 120+8 t=50 "".BenchmarkTiny_Iter+755
	rel 128+8 t=50 "".BenchmarkTiny_Iter+782
	rel 136+8 t=50 "".BenchmarkTiny_Iter+821
	rel 160+8 t=50 "".BenchmarkTiny_Iter+258
	rel 168+8 t=50 "".BenchmarkTiny_Iter+322
	rel 176+8 t=50 "".BenchmarkTiny_Iter+385
	rel 184+8 t=50 "".BenchmarkTiny_Iter+426
	rel 192+8 t=50 "".BenchmarkTiny_Iter+757
	rel 200+8 t=50 "".BenchmarkTiny_Iter+782
	rel 224+8 t=50 "".BenchmarkTiny_Iter+580
	rel 232+8 t=50 "".BenchmarkTiny_Iter+733
	rel 240+8 t=50 "".BenchmarkTiny_Iter+755
	rel 248+8 t=50 "".BenchmarkTiny_Iter+757
go.isstmt."".BenchmarkTiny_Iter SDWARFMISC size=0
	0x0000 04 1b 04 17 03 05 01 35 02 09 01 02 02 08 01 15  .......5........
	0x0010 02 09 01 02 02 09 01 07 02 08 01 4b 02 09 01 11  ...........K....
	0x0020 02 07 01 1f 02 03 01 3c 02 07 01 22 02 08 01 92  .......<..."....
	0x0030 01 02 03 01 07 02 03 01 6f 02 05 01 02 02 08 01  ........o.......
	0x0040 0e 02 04 01 14 02 08 01 11 02 06 01 21 02 02 01  ............!...
	0x0050 22 02 0a 00                                      "...
go.loc."".BenchmarkTinyP_Iter SDWARFLOC size=0
go.info."".BenchmarkTinyP_Iter SDWARFINFO size=222
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 54 69 6e  ."".BenchmarkTin
	0x0010 79 50 5f 49 74 65 72 00 00 00 00 00 00 00 00 00  yP_Iter.........
	0x0020 00 00 00 00 00 00 00 00 01 9c 00 00 00 00 01 0a  ................
	0x0030 7e 52 30 00 3c 00 00 00 00 03 91 b8 7e 0a 6f 00  ~R0.<.......~.o.
	0x0040 3b 00 00 00 00 02 91 50 0f 62 00 00 39 00 00 00  ;......P.b..9...
	0x0050 00 01 9c 14 00 00 00 00 0a 69 00 3d 00 00 00 00  .........i.=....
	0x0060 03 91 d0 7d 14 00 00 00 00 0a 61 00 3e 00 00 00  ...}......a.>...
	0x0070 00 03 91 e0 7d 00 00 07 00 00 00 00 00 00 00 00  ....}...........
	0x0080 00 00 00 00 3f 00 00 00 12 00 00 00 00 03 91 80  ....?...........
	0x0090 7e 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ~...............
	0x00a0 00 00 00 00 00 00 00 00 00 00 3c 00 00 00 12 00  ..........<.....
	0x00b0 00 00 00 03 91 c8 7e 00 00 07 00 00 00 00 00 00  ......~.........
	0x00c0 00 00 00 00 00 00 3f 00 00 00 12 00 00 00 00 03  ......?.........
	0x00d0 91 d8 7d 12 00 00 00 00 03 91 d8 7e 00 00        ..}........~..
	rel 24+8 t=1 "".BenchmarkTinyP_Iter+0
	rel 32+8 t=1 "".BenchmarkTinyP_Iter+845
	rel 42+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 53+4 t=28 go.info.error+0
	rel 65+4 t=28 go.info."".tiny+0
	rel 77+4 t=28 go.info.*testing.B+0
	rel 84+4 t=28 go.range."".BenchmarkTinyP_Iter+0
	rel 92+4 t=28 go.info.int+0
	rel 101+4 t=28 go.range."".BenchmarkTinyP_Iter+80
	rel 109+4 t=28 go.info.int+0
	rel 120+4 t=28 go.info."".calcTinyP$abstract+0
	rel 124+4 t=28 go.range."".BenchmarkTinyP_Iter+160
	rel 128+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 137+4 t=28 go.info."".calcTinyP$abstract+14
	rel 146+4 t=28 go.info.errors.New$abstract+0
	rel 150+8 t=1 "".BenchmarkTinyP_Iter+280
	rel 158+8 t=1 "".BenchmarkTinyP_Iter+343
	rel 166+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 175+4 t=28 go.info.errors.New$abstract+14
	rel 186+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 190+4 t=28 go.range."".BenchmarkTinyP_Iter+240
	rel 194+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 203+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 212+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkTinyP_Iter SDWARFRANGE size=288
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkTinyP_Iter+108
	rel 8+8 t=50 "".BenchmarkTinyP_Iter+213
	rel 16+8 t=50 "".BenchmarkTinyP_Iter+384
	rel 24+8 t=50 "".BenchmarkTinyP_Iter+550
	rel 32+8 t=50 "".BenchmarkTinyP_Iter+703
	rel 40+8 t=50 "".BenchmarkTinyP_Iter+725
	rel 48+8 t=50 "".BenchmarkTinyP_Iter+757
	rel 56+8 t=50 "".BenchmarkTinyP_Iter+819
	rel 80+8 t=50 "".BenchmarkTinyP_Iter+148
	rel 88+8 t=50 "".BenchmarkTinyP_Iter+213
	rel 96+8 t=50 "".BenchmarkTinyP_Iter+384
	rel 104+8 t=50 "".BenchmarkTinyP_Iter+550
	rel 112+8 t=50 "".BenchmarkTinyP_Iter+703
	rel 120+8 t=50 "".BenchmarkTinyP_Iter+725
	rel 128+8 t=50 "".BenchmarkTinyP_Iter+757
	rel 136+8 t=50 "".BenchmarkTinyP_Iter+799
	rel 160+8 t=50 "".BenchmarkTinyP_Iter+213
	rel 168+8 t=50 "".BenchmarkTinyP_Iter+220
	rel 176+8 t=50 "".BenchmarkTinyP_Iter+220
	rel 184+8 t=50 "".BenchmarkTinyP_Iter+280
	rel 192+8 t=50 "".BenchmarkTinyP_Iter+343
	rel 200+8 t=50 "".BenchmarkTinyP_Iter+384
	rel 208+8 t=50 "".BenchmarkTinyP_Iter+727
	rel 216+8 t=50 "".BenchmarkTinyP_Iter+757
	rel 240+8 t=50 "".BenchmarkTinyP_Iter+550
	rel 248+8 t=50 "".BenchmarkTinyP_Iter+703
	rel 256+8 t=50 "".BenchmarkTinyP_Iter+725
	rel 264+8 t=50 "".BenchmarkTinyP_Iter+727
go.isstmt."".BenchmarkTinyP_Iter SDWARFMISC size=0
	0x0000 04 1b 04 17 03 05 01 35 02 09 01 02 02 08 01 15  .......5........
	0x0010 02 09 01 02 02 09 01 07 02 08 01 1e 02 05 01 18  ................
	0x0020 02 07 01 1f 02 03 01 3c 02 07 01 22 02 08 01 9e  .......<..."....
	0x0030 01 02 03 01 07 02 03 01 6f 02 05 01 02 02 08 01  ........o.......
	0x0040 0e 02 04 01 14 02 05 01 19 02 06 01 24 02 02 01  ............$...
	0x0050 22 02 0a 00                                      "...
go.loc."".BenchmarkTinyIfc_Iter SDWARFLOC size=0
go.info."".BenchmarkTinyIfc_Iter SDWARFINFO size=146
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 54 69 6e  ."".BenchmarkTin
	0x0010 79 49 66 63 5f 49 74 65 72 00 00 00 00 00 00 00  yIfc_Iter.......
	0x0020 00 00 00 00 00 00 00 00 00 00 01 9c 00 00 00 00  ................
	0x0030 01 0a 26 6f 00 47 00 00 00 00 03 91 90 7f 0f 62  ..&o.G.........b
	0x0040 00 00 45 00 00 00 00 01 9c 14 00 00 00 00 0a 69  ..E............i
	0x0050 00 49 00 00 00 00 03 91 d8 7e 14 00 00 00 00 0a  .I.......~......
	0x0060 61 00 4a 00 00 00 00 03 91 e8 7e 00 00 07 00 00  a.J.......~.....
	0x0070 00 00 00 00 00 00 00 00 00 00 4b 00 00 00 12 00  ..........K.....
	0x0080 00 00 00 03 91 e0 7e 12 00 00 00 00 03 91 98 7f  ......~.........
	0x0090 00 00                                            ..
	rel 26+8 t=1 "".BenchmarkTinyIfc_Iter+0
	rel 34+8 t=1 "".BenchmarkTinyIfc_Iter+603
	rel 44+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 54+4 t=28 go.info.*"".tiny+0
	rel 67+4 t=28 go.info.*testing.B+0
	rel 74+4 t=28 go.range."".BenchmarkTinyIfc_Iter+0
	rel 82+4 t=28 go.info.int+0
	rel 91+4 t=28 go.range."".BenchmarkTinyIfc_Iter+64
	rel 99+4 t=28 go.info.int+0
	rel 110+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 114+4 t=28 go.range."".BenchmarkTinyIfc_Iter+112
	rel 118+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 127+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 136+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkTinyIfc_Iter SDWARFRANGE size=160
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkTinyIfc_Iter+139
	rel 8+8 t=50 "".BenchmarkTinyIfc_Iter+367
	rel 16+8 t=50 "".BenchmarkTinyIfc_Iter+520
	rel 24+8 t=50 "".BenchmarkTinyIfc_Iter+542
	rel 32+8 t=50 "".BenchmarkTinyIfc_Iter+544
	rel 40+8 t=50 "".BenchmarkTinyIfc_Iter+564
	rel 64+8 t=50 "".BenchmarkTinyIfc_Iter+179
	rel 72+8 t=50 "".BenchmarkTinyIfc_Iter+367
	rel 80+8 t=50 "".BenchmarkTinyIfc_Iter+520
	rel 88+8 t=50 "".BenchmarkTinyIfc_Iter+542
	rel 112+8 t=50 "".BenchmarkTinyIfc_Iter+367
	rel 120+8 t=50 "".BenchmarkTinyIfc_Iter+520
	rel 128+8 t=50 "".BenchmarkTinyIfc_Iter+542
	rel 136+8 t=50 "".BenchmarkTinyIfc_Iter+544
go.isstmt."".BenchmarkTinyIfc_Iter SDWARFMISC size=0
	0x0000 04 18 04 17 03 07 01 04 02 05 01 0a 02 05 01 3d  ...............=
	0x0010 02 09 01 02 02 08 01 15 02 09 01 02 02 09 01 07  ................
	0x0020 02 05 01 25 02 05 01 72 02 03 01 07 02 03 01 6f  ...%...r.......o
	0x0030 02 05 01 02 02 08 01 0e 02 04 01 14 02 02 01 2f  .............../
	0x0040 02 0a 00                                         ...
go.loc."".BenchmarkMini_Iter SDWARFLOC size=0
go.info."".BenchmarkMini_Iter SDWARFINFO size=222
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 4d 69 6e  ."".BenchmarkMin
	0x0010 69 5f 49 74 65 72 00 00 00 00 00 00 00 00 00 00  i_Iter..........
	0x0020 00 00 00 00 00 00 00 01 9c 00 00 00 00 01 0a 7e  ...............~
	0x0030 52 30 00 17 00 00 00 00 03 91 98 7d 0a 6f 00 53  R0.........}.o.S
	0x0040 00 00 00 00 03 91 b0 7e 0f 62 00 00 51 00 00 00  .......~.b..Q...
	0x0050 00 01 9c 14 00 00 00 00 0a 69 00 55 00 00 00 00  .........i.U....
	0x0060 03 91 c0 7c 14 00 00 00 00 0a 61 00 56 00 00 00  ...|......a.V...
	0x0070 00 03 91 d0 7c 00 00 07 00 00 00 00 00 00 00 00  ....|...........
	0x0080 00 00 00 00 57 00 00 00 12 00 00 00 00 03 91 90  ....W...........
	0x0090 7f 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 17 00 00 00 12 00  ................
	0x00b0 00 00 00 03 91 a8 7d 00 00 07 00 00 00 00 00 00  ......}.........
	0x00c0 00 00 00 00 00 00 57 00 00 00 12 00 00 00 00 03  ......W.........
	0x00d0 91 c8 7c 12 00 00 00 00 03 91 b8 7d 00 00        ..|........}..
	rel 23+8 t=1 "".BenchmarkMini_Iter+0
	rel 31+8 t=1 "".BenchmarkMini_Iter+852
	rel 41+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 52+4 t=28 go.info.error+0
	rel 64+4 t=28 go.info."".mini+0
	rel 77+4 t=28 go.info.*testing.B+0
	rel 84+4 t=28 go.range."".BenchmarkMini_Iter+0
	rel 92+4 t=28 go.info.int+0
	rel 101+4 t=28 go.range."".BenchmarkMini_Iter+80
	rel 109+4 t=28 go.info.int+0
	rel 120+4 t=28 go.info."".calcMini$abstract+0
	rel 124+4 t=28 go.range."".BenchmarkMini_Iter+160
	rel 128+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 137+4 t=28 go.info."".calcMini$abstract+13
	rel 146+4 t=28 go.info.errors.New$abstract+0
	rel 150+8 t=1 "".BenchmarkMini_Iter+271
	rel 158+8 t=1 "".BenchmarkMini_Iter+340
	rel 166+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 175+4 t=28 go.info.errors.New$abstract+14
	rel 186+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 190+4 t=28 go.range."".BenchmarkMini_Iter+224
	rel 194+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 203+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 212+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkMini_Iter SDWARFRANGE size=272
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkMini_Iter+85
	rel 8+8 t=50 "".BenchmarkMini_Iter+207
	rel 16+8 t=50 "".BenchmarkMini_Iter+381
	rel 24+8 t=50 "".BenchmarkMini_Iter+556
	rel 32+8 t=50 "".BenchmarkMini_Iter+712
	rel 40+8 t=50 "".BenchmarkMini_Iter+734
	rel 48+8 t=50 "".BenchmarkMini_Iter+761
	rel 56+8 t=50 "".BenchmarkMini_Iter+826
	rel 80+8 t=50 "".BenchmarkMini_Iter+125
	rel 88+8 t=50 "".BenchmarkMini_Iter+207
	rel 96+8 t=50 "".BenchmarkMini_Iter+381
	rel 104+8 t=50 "".BenchmarkMini_Iter+556
	rel 112+8 t=50 "".BenchmarkMini_Iter+712
	rel 120+8 t=50 "".BenchmarkMini_Iter+734
	rel 128+8 t=50 "".BenchmarkMini_Iter+761
	rel 136+8 t=50 "".BenchmarkMini_Iter+806
	rel 160+8 t=50 "".BenchmarkMini_Iter+207
	rel 168+8 t=50 "".BenchmarkMini_Iter+271
	rel 176+8 t=50 "".BenchmarkMini_Iter+340
	rel 184+8 t=50 "".BenchmarkMini_Iter+381
	rel 192+8 t=50 "".BenchmarkMini_Iter+736
	rel 200+8 t=50 "".BenchmarkMini_Iter+761
	rel 224+8 t=50 "".BenchmarkMini_Iter+556
	rel 232+8 t=50 "".BenchmarkMini_Iter+712
	rel 240+8 t=50 "".BenchmarkMini_Iter+734
	rel 248+8 t=50 "".BenchmarkMini_Iter+736
go.isstmt."".BenchmarkMini_Iter SDWARFMISC size=0
	0x0000 04 1b 04 17 03 05 01 1e 02 09 01 02 02 08 01 15  ................
	0x0010 02 09 01 02 02 09 01 07 02 08 01 2f 02 09 01 11  .........../....
	0x0020 02 07 01 1f 02 03 01 42 02 07 01 22 02 08 01 a7  .......B..."....
	0x0030 01 02 03 01 07 02 03 01 72 02 05 01 02 02 08 01  ........r.......
	0x0040 0e 02 04 01 14 02 08 01 11 02 09 01 24 02 02 01  ............$...
	0x0050 22 02 0a 00                                      "...
go.loc."".BenchmarkMiniP_Iter SDWARFLOC size=0
go.info."".BenchmarkMiniP_Iter SDWARFINFO size=223
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 4d 69 6e  ."".BenchmarkMin
	0x0010 69 50 5f 49 74 65 72 00 00 00 00 00 00 00 00 00  iP_Iter.........
	0x0020 00 00 00 00 00 00 00 00 01 9c 00 00 00 00 01 0a  ................
	0x0030 7e 52 30 00 43 00 00 00 00 03 91 f8 7d 0a 6f 00  ~R0.C.......}.o.
	0x0040 5f 00 00 00 00 03 91 90 7f 0f 62 00 00 5d 00 00  _.........b..]..
	0x0050 00 00 01 9c 14 00 00 00 00 0a 69 00 61 00 00 00  ..........i.a...
	0x0060 00 03 91 90 7d 14 00 00 00 00 0a 61 00 62 00 00  ....}......a.b..
	0x0070 00 00 03 91 a0 7d 00 00 07 00 00 00 00 00 00 00  .....}..........
	0x0080 00 00 00 00 00 63 00 00 00 12 00 00 00 00 03 91  .....c..........
	0x0090 c0 7d 06 00 00 00 00 00 00 00 00 00 00 00 00 00  .}..............
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 43 00 00 00 12  ...........C....
	0x00b0 00 00 00 00 03 91 88 7e 00 00 07 00 00 00 00 00  .......~........
	0x00c0 00 00 00 00 00 00 00 63 00 00 00 12 00 00 00 00  .......c........
	0x00d0 03 91 98 7d 12 00 00 00 00 03 91 98 7e 00 00     ...}........~..
	rel 24+8 t=1 "".BenchmarkMiniP_Iter+0
	rel 32+8 t=1 "".BenchmarkMiniP_Iter+858
	rel 42+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 53+4 t=28 go.info.error+0
	rel 65+4 t=28 go.info."".mini+0
	rel 78+4 t=28 go.info.*testing.B+0
	rel 85+4 t=28 go.range."".BenchmarkMiniP_Iter+0
	rel 93+4 t=28 go.info.int+0
	rel 102+4 t=28 go.range."".BenchmarkMiniP_Iter+80
	rel 110+4 t=28 go.info.int+0
	rel 121+4 t=28 go.info."".calcMiniP$abstract+0
	rel 125+4 t=28 go.range."".BenchmarkMiniP_Iter+160
	rel 129+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 138+4 t=28 go.info."".calcMiniP$abstract+14
	rel 147+4 t=28 go.info.errors.New$abstract+0
	rel 151+8 t=1 "".BenchmarkMiniP_Iter+266
	rel 159+8 t=1 "".BenchmarkMiniP_Iter+335
	rel 167+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 176+4 t=28 go.info.errors.New$abstract+14
	rel 187+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 191+4 t=28 go.range."".BenchmarkMiniP_Iter+240
	rel 195+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 204+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 213+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkMiniP_Iter SDWARFRANGE size=288
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkMiniP_Iter+85
	rel 8+8 t=50 "".BenchmarkMiniP_Iter+196
	rel 16+8 t=50 "".BenchmarkMiniP_Iter+376
	rel 24+8 t=50 "".BenchmarkMiniP_Iter+551
	rel 32+8 t=50 "".BenchmarkMiniP_Iter+707
	rel 40+8 t=50 "".BenchmarkMiniP_Iter+729
	rel 48+8 t=50 "".BenchmarkMiniP_Iter+767
	rel 56+8 t=50 "".BenchmarkMiniP_Iter+832
	rel 80+8 t=50 "".BenchmarkMiniP_Iter+125
	rel 88+8 t=50 "".BenchmarkMiniP_Iter+196
	rel 96+8 t=50 "".BenchmarkMiniP_Iter+376
	rel 104+8 t=50 "".BenchmarkMiniP_Iter+551
	rel 112+8 t=50 "".BenchmarkMiniP_Iter+707
	rel 120+8 t=50 "".BenchmarkMiniP_Iter+729
	rel 128+8 t=50 "".BenchmarkMiniP_Iter+767
	rel 136+8 t=50 "".BenchmarkMiniP_Iter+812
	rel 160+8 t=50 "".BenchmarkMiniP_Iter+196
	rel 168+8 t=50 "".BenchmarkMiniP_Iter+206
	rel 176+8 t=50 "".BenchmarkMiniP_Iter+206
	rel 184+8 t=50 "".BenchmarkMiniP_Iter+266
	rel 192+8 t=50 "".BenchmarkMiniP_Iter+335
	rel 200+8 t=50 "".BenchmarkMiniP_Iter+376
	rel 208+8 t=50 "".BenchmarkMiniP_Iter+731
	rel 216+8 t=50 "".BenchmarkMiniP_Iter+767
	rel 240+8 t=50 "".BenchmarkMiniP_Iter+551
	rel 248+8 t=50 "".BenchmarkMiniP_Iter+707
	rel 256+8 t=50 "".BenchmarkMiniP_Iter+729
	rel 264+8 t=50 "".BenchmarkMiniP_Iter+731
go.isstmt."".BenchmarkMiniP_Iter SDWARFMISC size=0
	0x0000 04 1b 04 17 03 05 01 1e 02 09 01 02 02 08 01 15  ................
	0x0010 02 09 01 02 02 09 01 07 02 08 01 24 02 08 01 18  ...........$....
	0x0020 02 07 01 1f 02 03 01 42 02 07 01 22 02 08 01 a7  .......B..."....
	0x0030 01 02 03 01 07 02 03 01 72 02 05 01 02 02 08 01  ........r.......
	0x0040 0e 02 04 01 14 02 08 01 1c 02 09 01 24 02 02 01  ............$...
	0x0050 22 02 0a 00                                      "...
go.loc."".BenchmarkMiniIfc_Iter SDWARFLOC size=0
go.info."".BenchmarkMiniIfc_Iter SDWARFINFO size=146
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 4d 69 6e  ."".BenchmarkMin
	0x0010 69 49 66 63 5f 49 74 65 72 00 00 00 00 00 00 00  iIfc_Iter.......
	0x0020 00 00 00 00 00 00 00 00 00 00 01 9c 00 00 00 00  ................
	0x0030 01 0a 26 6f 00 6b 00 00 00 00 03 91 b0 7e 0f 62  ..&o.k.......~.b
	0x0040 00 00 69 00 00 00 00 01 9c 14 00 00 00 00 0a 69  ..i............i
	0x0050 00 6d 00 00 00 00 03 91 f8 7d 14 00 00 00 00 0a  .m.......}......
	0x0060 61 00 6e 00 00 00 00 03 91 88 7e 00 00 07 00 00  a.n.......~.....
	0x0070 00 00 00 00 00 00 00 00 00 00 6f 00 00 00 12 00  ..........o.....
	0x0080 00 00 00 03 91 80 7e 12 00 00 00 00 03 91 b8 7e  ......~........~
	0x0090 00 00                                            ..
	rel 26+8 t=1 "".BenchmarkMiniIfc_Iter+0
	rel 34+8 t=1 "".BenchmarkMiniIfc_Iter+683
	rel 44+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 54+4 t=28 go.info.*"".mini+0
	rel 67+4 t=28 go.info.*testing.B+0
	rel 74+4 t=28 go.range."".BenchmarkMiniIfc_Iter+0
	rel 82+4 t=28 go.info.int+0
	rel 91+4 t=28 go.range."".BenchmarkMiniIfc_Iter+64
	rel 99+4 t=28 go.info.int+0
	rel 110+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 114+4 t=28 go.range."".BenchmarkMiniIfc_Iter+112
	rel 118+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 127+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 136+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkMiniIfc_Iter SDWARFRANGE size=160
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkMiniIfc_Iter+130
	rel 8+8 t=50 "".BenchmarkMiniIfc_Iter+385
	rel 16+8 t=50 "".BenchmarkMiniIfc_Iter+541
	rel 24+8 t=50 "".BenchmarkMiniIfc_Iter+563
	rel 32+8 t=50 "".BenchmarkMiniIfc_Iter+565
	rel 40+8 t=50 "".BenchmarkMiniIfc_Iter+585
	rel 64+8 t=50 "".BenchmarkMiniIfc_Iter+170
	rel 72+8 t=50 "".BenchmarkMiniIfc_Iter+385
	rel 80+8 t=50 "".BenchmarkMiniIfc_Iter+541
	rel 88+8 t=50 "".BenchmarkMiniIfc_Iter+563
	rel 112+8 t=50 "".BenchmarkMiniIfc_Iter+385
	rel 120+8 t=50 "".BenchmarkMiniIfc_Iter+541
	rel 128+8 t=50 "".BenchmarkMiniIfc_Iter+563
	rel 136+8 t=50 "".BenchmarkMiniIfc_Iter+565
go.isstmt."".BenchmarkMiniIfc_Iter SDWARFMISC size=0
	0x0000 04 1b 04 17 03 07 01 04 02 05 01 0d 02 05 01 2e  ................
	0x0010 02 09 01 02 02 08 01 15 02 09 01 02 02 09 01 07  ................
	0x0020 02 08 01 2b 02 05 01 84 01 02 03 01 07 02 03 01  ...+............
	0x0030 72 02 05 01 02 02 08 01 0e 02 04 01 14 02 02 01  r...............
	0x0040 60 02 05 01 05 02 0a 00                          `.......
go.loc."".BenchmarkMega_Iter SDWARFLOC size=0
go.info."".BenchmarkMega_Iter SDWARFINFO size=222
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 4d 65 67  ."".BenchmarkMeg
	0x0010 61 5f 49 74 65 72 00 00 00 00 00 00 00 00 00 00  a_Iter..........
	0x0020 00 00 00 00 00 00 00 01 9c 00 00 00 00 01 0a 7e  ...............~
	0x0030 52 30 00 1e 00 00 00 00 03 91 98 79 0a 6f 00 77  R0.........y.o.w
	0x0040 00 00 00 00 03 91 b0 7a 0f 62 00 00 75 00 00 00  .......z.b..u...
	0x0050 00 01 9c 14 00 00 00 00 0a 69 00 79 00 00 00 00  .........i.y....
	0x0060 03 91 c0 78 14 00 00 00 00 0a 61 00 7a 00 00 00  ...x......a.z...
	0x0070 00 03 91 d0 78 00 00 07 00 00 00 00 00 00 00 00  ....x...........
	0x0080 00 00 00 00 7b 00 00 00 12 00 00 00 00 03 91 90  ....{...........
	0x0090 7d 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00  }...............
	0x00a0 00 00 00 00 00 00 00 00 00 00 1e 00 00 00 12 00  ................
	0x00b0 00 00 00 03 91 a8 79 00 00 07 00 00 00 00 00 00  ......y.........
	0x00c0 00 00 00 00 00 00 7b 00 00 00 12 00 00 00 00 03  ......{.........
	0x00d0 91 c8 78 12 00 00 00 00 03 91 b8 79 00 00        ..x........y..
	rel 23+8 t=1 "".BenchmarkMega_Iter+0
	rel 31+8 t=1 "".BenchmarkMega_Iter+894
	rel 41+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 52+4 t=28 go.info.error+0
	rel 64+4 t=28 go.info."".mega+0
	rel 77+4 t=28 go.info.*testing.B+0
	rel 84+4 t=28 go.range."".BenchmarkMega_Iter+0
	rel 92+4 t=28 go.info.int+0
	rel 101+4 t=28 go.range."".BenchmarkMega_Iter+80
	rel 109+4 t=28 go.info.int+0
	rel 120+4 t=28 go.info."".calcMega$abstract+0
	rel 124+4 t=28 go.range."".BenchmarkMega_Iter+160
	rel 128+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 137+4 t=28 go.info."".calcMega$abstract+13
	rel 146+4 t=28 go.info.errors.New$abstract+0
	rel 150+8 t=1 "".BenchmarkMega_Iter+286
	rel 158+8 t=1 "".BenchmarkMega_Iter+355
	rel 166+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 175+4 t=28 go.info.errors.New$abstract+14
	rel 186+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 190+4 t=28 go.range."".BenchmarkMega_Iter+224
	rel 194+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 203+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 212+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkMega_Iter SDWARFRANGE size=272
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkMega_Iter+85
	rel 8+8 t=50 "".BenchmarkMega_Iter+222
	rel 16+8 t=50 "".BenchmarkMega_Iter+396
	rel 24+8 t=50 "".BenchmarkMega_Iter+580
	rel 32+8 t=50 "".BenchmarkMega_Iter+739
	rel 40+8 t=50 "".BenchmarkMega_Iter+767
	rel 48+8 t=50 "".BenchmarkMega_Iter+794
	rel 56+8 t=50 "".BenchmarkMega_Iter+868
	rel 80+8 t=50 "".BenchmarkMega_Iter+131
	rel 88+8 t=50 "".BenchmarkMega_Iter+222
	rel 96+8 t=50 "".BenchmarkMega_Iter+396
	rel 104+8 t=50 "".BenchmarkMega_Iter+580
	rel 112+8 t=50 "".BenchmarkMega_Iter+739
	rel 120+8 t=50 "".BenchmarkMega_Iter+767
	rel 128+8 t=50 "".BenchmarkMega_Iter+794
	rel 136+8 t=50 "".BenchmarkMega_Iter+842
	rel 160+8 t=50 "".BenchmarkMega_Iter+222
	rel 168+8 t=50 "".BenchmarkMega_Iter+286
	rel 176+8 t=50 "".BenchmarkMega_Iter+355
	rel 184+8 t=50 "".BenchmarkMega_Iter+396
	rel 192+8 t=50 "".BenchmarkMega_Iter+769
	rel 200+8 t=50 "".BenchmarkMega_Iter+794
	rel 224+8 t=50 "".BenchmarkMega_Iter+580
	rel 232+8 t=50 "".BenchmarkMega_Iter+739
	rel 240+8 t=50 "".BenchmarkMega_Iter+767
	rel 248+8 t=50 "".BenchmarkMega_Iter+769
go.isstmt."".BenchmarkMega_Iter SDWARFMISC size=0
	0x0000 04 1b 04 17 03 05 01 1e 02 0c 01 02 02 08 01 18  ................
	0x0010 02 0c 01 02 02 0c 01 07 02 08 01 32 02 09 01 11  ...........2....
	0x0020 02 07 01 1f 02 03 01 42 02 07 01 22 02 08 01 b0  .......B..."....
	0x0030 01 02 03 01 07 02 03 01 72 02 05 01 02 02 08 01  ........r.......
	0x0040 11 02 04 01 1a 02 08 01 11 02 09 01 27 02 02 01  ............'...
	0x0050 28 02 0a 00                                      (...
go.loc."".BenchmarkMegaP_Iter SDWARFLOC size=0
go.info."".BenchmarkMegaP_Iter SDWARFINFO size=227
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 4d 65 67  ."".BenchmarkMeg
	0x0010 61 50 5f 49 74 65 72 00 00 00 00 00 00 00 00 00  aP_Iter.........
	0x0020 00 00 00 00 00 00 00 00 01 9c 00 00 00 00 01 0a  ................
	0x0030 7e 52 30 00 4a 00 00 00 00 03 91 f8 7b 0a 6f 00  ~R0.J.......{.o.
	0x0040 83 01 00 00 00 00 03 91 90 7d 0f 62 00 00 81 01  .........}.b....
	0x0050 00 00 00 00 01 9c 14 00 00 00 00 0a 69 00 85 01  ............i...
	0x0060 00 00 00 00 03 91 90 7b 14 00 00 00 00 0a 61 00  .......{......a.
	0x0070 86 01 00 00 00 00 03 91 a0 7b 00 00 07 00 00 00  .........{......
	0x0080 00 00 00 00 00 00 00 00 00 87 00 00 00 12 00 00  ................
	0x0090 00 00 03 91 c0 7b 06 00 00 00 00 00 00 00 00 00  .....{..........
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 4a  ...............J
	0x00b0 00 00 00 12 00 00 00 00 03 91 88 7c 00 00 07 00  ...........|....
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 87 00 00 00 12  ................
	0x00d0 00 00 00 00 03 91 98 7b 12 00 00 00 00 03 91 98  .......{........
	0x00e0 7c 00 00                                         |..
	rel 24+8 t=1 "".BenchmarkMegaP_Iter+0
	rel 32+8 t=1 "".BenchmarkMegaP_Iter+900
	rel 42+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 53+4 t=28 go.info.error+0
	rel 66+4 t=28 go.info."".mega+0
	rel 80+4 t=28 go.info.*testing.B+0
	rel 87+4 t=28 go.range."".BenchmarkMegaP_Iter+0
	rel 96+4 t=28 go.info.int+0
	rel 105+4 t=28 go.range."".BenchmarkMegaP_Iter+80
	rel 114+4 t=28 go.info.int+0
	rel 125+4 t=28 go.info."".calcMegaP$abstract+0
	rel 129+4 t=28 go.range."".BenchmarkMegaP_Iter+160
	rel 133+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 142+4 t=28 go.info."".calcMegaP$abstract+14
	rel 151+4 t=28 go.info.errors.New$abstract+0
	rel 155+8 t=1 "".BenchmarkMegaP_Iter+281
	rel 163+8 t=1 "".BenchmarkMegaP_Iter+350
	rel 171+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 180+4 t=28 go.info.errors.New$abstract+14
	rel 191+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 195+4 t=28 go.range."".BenchmarkMegaP_Iter+240
	rel 199+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 208+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 217+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkMegaP_Iter SDWARFRANGE size=288
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkMegaP_Iter+85
	rel 8+8 t=50 "".BenchmarkMegaP_Iter+211
	rel 16+8 t=50 "".BenchmarkMegaP_Iter+391
	rel 24+8 t=50 "".BenchmarkMegaP_Iter+575
	rel 32+8 t=50 "".BenchmarkMegaP_Iter+734
	rel 40+8 t=50 "".BenchmarkMegaP_Iter+762
	rel 48+8 t=50 "".BenchmarkMegaP_Iter+800
	rel 56+8 t=50 "".BenchmarkMegaP_Iter+874
	rel 80+8 t=50 "".BenchmarkMegaP_Iter+131
	rel 88+8 t=50 "".BenchmarkMegaP_Iter+211
	rel 96+8 t=50 "".BenchmarkMegaP_Iter+391
	rel 104+8 t=50 "".BenchmarkMegaP_Iter+575
	rel 112+8 t=50 "".BenchmarkMegaP_Iter+734
	rel 120+8 t=50 "".BenchmarkMegaP_Iter+762
	rel 128+8 t=50 "".BenchmarkMegaP_Iter+800
	rel 136+8 t=50 "".BenchmarkMegaP_Iter+848
	rel 160+8 t=50 "".BenchmarkMegaP_Iter+211
	rel 168+8 t=50 "".BenchmarkMegaP_Iter+221
	rel 176+8 t=50 "".BenchmarkMegaP_Iter+221
	rel 184+8 t=50 "".BenchmarkMegaP_Iter+281
	rel 192+8 t=50 "".BenchmarkMegaP_Iter+350
	rel 200+8 t=50 "".BenchmarkMegaP_Iter+391
	rel 208+8 t=50 "".BenchmarkMegaP_Iter+764
	rel 216+8 t=50 "".BenchmarkMegaP_Iter+800
	rel 240+8 t=50 "".BenchmarkMegaP_Iter+575
	rel 248+8 t=50 "".BenchmarkMegaP_Iter+734
	rel 256+8 t=50 "".BenchmarkMegaP_Iter+762
	rel 264+8 t=50 "".BenchmarkMegaP_Iter+764
go.isstmt."".BenchmarkMegaP_Iter SDWARFMISC size=0
	0x0000 04 1b 04 17 03 05 01 1e 02 0c 01 02 02 08 01 18  ................
	0x0010 02 0c 01 02 02 0c 01 07 02 08 01 27 02 08 01 18  ...........'....
	0x0020 02 07 01 1f 02 03 01 42 02 07 01 22 02 08 01 b0  .......B..."....
	0x0030 01 02 03 01 07 02 03 01 72 02 05 01 02 02 08 01  ........r.......
	0x0040 11 02 04 01 1a 02 08 01 1c 02 09 01 27 02 02 01  ............'...
	0x0050 28 02 0a 00                                      (...
go.loc."".BenchmarkMegaIfc_Iter SDWARFLOC size=0
go.info."".BenchmarkMegaIfc_Iter SDWARFINFO size=150
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 4d 65 67  ."".BenchmarkMeg
	0x0010 61 49 66 63 5f 49 74 65 72 00 00 00 00 00 00 00  aIfc_Iter.......
	0x0020 00 00 00 00 00 00 00 00 00 00 01 9c 00 00 00 00  ................
	0x0030 01 0a 26 6f 00 8f 01 00 00 00 00 03 91 b0 7c 0f  ..&o..........|.
	0x0040 62 00 00 8d 01 00 00 00 00 01 9c 14 00 00 00 00  b...............
	0x0050 0a 69 00 91 01 00 00 00 00 03 91 f8 7b 14 00 00  .i..........{...
	0x0060 00 00 0a 61 00 92 01 00 00 00 00 03 91 88 7c 00  ...a..........|.
	0x0070 00 07 00 00 00 00 00 00 00 00 00 00 00 00 93 00  ................
	0x0080 00 00 12 00 00 00 00 03 91 80 7c 12 00 00 00 00  ..........|.....
	0x0090 03 91 b8 7c 00 00                                ...|..
	rel 26+8 t=1 "".BenchmarkMegaIfc_Iter+0
	rel 34+8 t=1 "".BenchmarkMegaIfc_Iter+719
	rel 44+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 55+4 t=28 go.info.*"".mega+0
	rel 69+4 t=28 go.info.*testing.B+0
	rel 76+4 t=28 go.range."".BenchmarkMegaIfc_Iter+0
	rel 85+4 t=28 go.info.int+0
	rel 94+4 t=28 go.range."".BenchmarkMegaIfc_Iter+64
	rel 103+4 t=28 go.info.int+0
	rel 114+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 118+4 t=28 go.range."".BenchmarkMegaIfc_Iter+112
	rel 122+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 131+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 140+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkMegaIfc_Iter SDWARFRANGE size=160
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkMegaIfc_Iter+130
	rel 8+8 t=50 "".BenchmarkMegaIfc_Iter+406
	rel 16+8 t=50 "".BenchmarkMegaIfc_Iter+565
	rel 24+8 t=50 "".BenchmarkMegaIfc_Iter+593
	rel 32+8 t=50 "".BenchmarkMegaIfc_Iter+595
	rel 40+8 t=50 "".BenchmarkMegaIfc_Iter+621
	rel 64+8 t=50 "".BenchmarkMegaIfc_Iter+176
	rel 72+8 t=50 "".BenchmarkMegaIfc_Iter+406
	rel 80+8 t=50 "".BenchmarkMegaIfc_Iter+565
	rel 88+8 t=50 "".BenchmarkMegaIfc_Iter+593
	rel 112+8 t=50 "".BenchmarkMegaIfc_Iter+406
	rel 120+8 t=50 "".BenchmarkMegaIfc_Iter+565
	rel 128+8 t=50 "".BenchmarkMegaIfc_Iter+593
	rel 136+8 t=50 "".BenchmarkMegaIfc_Iter+595
go.isstmt."".BenchmarkMegaIfc_Iter SDWARFMISC size=0
	0x0000 04 1b 04 17 03 07 01 04 02 05 01 0d 02 05 01 2e  ................
	0x0010 02 0c 01 02 02 08 01 18 02 0c 01 02 02 0c 01 07  ................
	0x0020 02 08 01 2b 02 05 01 8d 01 02 03 01 07 02 03 01  ...+............
	0x0030 72 02 05 01 02 02 08 01 11 02 04 01 1a 02 02 01  r...............
	0x0040 66 02 05 01 05 02 0a 00                          f.......
go.loc."".BenchmarkTera_Iter SDWARFLOC size=0
go.info."".BenchmarkTera_Iter SDWARFINFO size=226
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 54 65 72  ."".BenchmarkTer
	0x0010 61 5f 49 74 65 72 00 00 00 00 00 00 00 00 00 00  a_Iter..........
	0x0020 00 00 00 00 00 00 00 01 9c 00 00 00 00 01 0a 7e  ...............~
	0x0030 52 30 00 25 00 00 00 00 03 91 d8 71 0a 6f 00 9b  R0.%.......q.o..
	0x0040 01 00 00 00 00 03 91 f0 72 0f 62 00 00 99 01 00  ........r.b.....
	0x0050 00 00 00 01 9c 14 00 00 00 00 0a 69 00 9d 01 00  ...........i....
	0x0060 00 00 00 03 91 80 71 14 00 00 00 00 0a 61 00 9e  ......q......a..
	0x0070 01 00 00 00 00 03 91 90 71 00 00 07 00 00 00 00  ........q.......
	0x0080 00 00 00 00 00 00 00 00 9f 00 00 00 12 00 00 00  ................
	0x0090 00 03 91 b0 79 06 00 00 00 00 00 00 00 00 00 00  ....y...........
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 25 00  ..............%.
	0x00b0 00 00 12 00 00 00 00 03 91 e8 71 00 00 07 00 00  ..........q.....
	0x00c0 00 00 00 00 00 00 00 00 00 00 9f 00 00 00 12 00  ................
	0x00d0 00 00 00 03 91 88 71 12 00 00 00 00 03 91 f8 71  ......q........q
	0x00e0 00 00                                            ..
	rel 23+8 t=1 "".BenchmarkTera_Iter+0
	rel 31+8 t=1 "".BenchmarkTera_Iter+894
	rel 41+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 52+4 t=28 go.info.error+0
	rel 65+4 t=28 go.info."".tera+0
	rel 79+4 t=28 go.info.*testing.B+0
	rel 86+4 t=28 go.range."".BenchmarkTera_Iter+0
	rel 95+4 t=28 go.info.int+0
	rel 104+4 t=28 go.range."".BenchmarkTera_Iter+80
	rel 113+4 t=28 go.info.int+0
	rel 124+4 t=28 go.info."".calcTera$abstract+0
	rel 128+4 t=28 go.range."".BenchmarkTera_Iter+160
	rel 132+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 141+4 t=28 go.info."".calcTera$abstract+13
	rel 150+4 t=28 go.info.errors.New$abstract+0
	rel 154+8 t=1 "".BenchmarkTera_Iter+286
	rel 162+8 t=1 "".BenchmarkTera_Iter+355
	rel 170+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 179+4 t=28 go.info.errors.New$abstract+14
	rel 190+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 194+4 t=28 go.range."".BenchmarkTera_Iter+224
	rel 198+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 207+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 216+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkTera_Iter SDWARFRANGE size=272
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkTera_Iter+85
	rel 8+8 t=50 "".BenchmarkTera_Iter+222
	rel 16+8 t=50 "".BenchmarkTera_Iter+396
	rel 24+8 t=50 "".BenchmarkTera_Iter+580
	rel 32+8 t=50 "".BenchmarkTera_Iter+739
	rel 40+8 t=50 "".BenchmarkTera_Iter+767
	rel 48+8 t=50 "".BenchmarkTera_Iter+794
	rel 56+8 t=50 "".BenchmarkTera_Iter+868
	rel 80+8 t=50 "".BenchmarkTera_Iter+131
	rel 88+8 t=50 "".BenchmarkTera_Iter+222
	rel 96+8 t=50 "".BenchmarkTera_Iter+396
	rel 104+8 t=50 "".BenchmarkTera_Iter+580
	rel 112+8 t=50 "".BenchmarkTera_Iter+739
	rel 120+8 t=50 "".BenchmarkTera_Iter+767
	rel 128+8 t=50 "".BenchmarkTera_Iter+794
	rel 136+8 t=50 "".BenchmarkTera_Iter+842
	rel 160+8 t=50 "".BenchmarkTera_Iter+222
	rel 168+8 t=50 "".BenchmarkTera_Iter+286
	rel 176+8 t=50 "".BenchmarkTera_Iter+355
	rel 184+8 t=50 "".BenchmarkTera_Iter+396
	rel 192+8 t=50 "".BenchmarkTera_Iter+769
	rel 200+8 t=50 "".BenchmarkTera_Iter+794
	rel 224+8 t=50 "".BenchmarkTera_Iter+580
	rel 232+8 t=50 "".BenchmarkTera_Iter+739
	rel 240+8 t=50 "".BenchmarkTera_Iter+767
	rel 248+8 t=50 "".BenchmarkTera_Iter+769
go.isstmt."".BenchmarkTera_Iter SDWARFMISC size=0
	0x0000 04 1b 04 17 03 05 01 1e 02 0c 01 02 02 08 01 18  ................
	0x0010 02 0c 01 02 02 0c 01 07 02 08 01 32 02 09 01 11  ...........2....
	0x0020 02 07 01 1f 02 03 01 42 02 07 01 22 02 08 01 b0  .......B..."....
	0x0030 01 02 03 01 07 02 03 01 72 02 05 01 02 02 08 01  ........r.......
	0x0040 11 02 04 01 1a 02 08 01 11 02 09 01 27 02 02 01  ............'...
	0x0050 28 02 0a 00                                      (...
go.loc."".BenchmarkTeraP_Iter SDWARFLOC size=0
go.info."".BenchmarkTeraP_Iter SDWARFINFO size=227
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 54 65 72  ."".BenchmarkTer
	0x0010 61 50 5f 49 74 65 72 00 00 00 00 00 00 00 00 00  aP_Iter.........
	0x0020 00 00 00 00 00 00 00 00 01 9c 00 00 00 00 01 0a  ................
	0x0030 7e 52 30 00 51 00 00 00 00 03 91 98 78 0a 6f 00  ~R0.Q.......x.o.
	0x0040 a7 01 00 00 00 00 03 91 b0 79 0f 62 00 00 a5 01  .........y.b....
	0x0050 00 00 00 00 01 9c 14 00 00 00 00 0a 69 00 a9 01  ............i...
	0x0060 00 00 00 00 03 91 b0 77 14 00 00 00 00 0a 61 00  .......w......a.
	0x0070 aa 01 00 00 00 00 03 91 c0 77 00 00 07 00 00 00  .........w......
	0x0080 00 00 00 00 00 00 00 00 00 ab 00 00 00 12 00 00  ................
	0x0090 00 00 03 91 e0 77 06 00 00 00 00 00 00 00 00 00  .....w..........
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 51  ...............Q
	0x00b0 00 00 00 12 00 00 00 00 03 91 a8 78 00 00 07 00  ...........x....
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 ab 00 00 00 12  ................
	0x00d0 00 00 00 00 03 91 b8 77 12 00 00 00 00 03 91 b8  .......w........
	0x00e0 78 00 00                                         x..
	rel 24+8 t=1 "".BenchmarkTeraP_Iter+0
	rel 32+8 t=1 "".BenchmarkTeraP_Iter+906
	rel 42+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 53+4 t=28 go.info.error+0
	rel 66+4 t=28 go.info."".tera+0
	rel 80+4 t=28 go.info.*testing.B+0
	rel 87+4 t=28 go.range."".BenchmarkTeraP_Iter+0
	rel 96+4 t=28 go.info.int+0
	rel 105+4 t=28 go.range."".BenchmarkTeraP_Iter+80
	rel 114+4 t=28 go.info.int+0
	rel 125+4 t=28 go.info."".calcTeraP$abstract+0
	rel 129+4 t=28 go.range."".BenchmarkTeraP_Iter+160
	rel 133+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 142+4 t=28 go.info."".calcTeraP$abstract+14
	rel 151+4 t=28 go.info.errors.New$abstract+0
	rel 155+8 t=1 "".BenchmarkTeraP_Iter+284
	rel 163+8 t=1 "".BenchmarkTeraP_Iter+353
	rel 171+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 180+4 t=28 go.info.errors.New$abstract+14
	rel 191+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 195+4 t=28 go.range."".BenchmarkTeraP_Iter+240
	rel 199+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 208+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 217+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkTeraP_Iter SDWARFRANGE size=288
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkTeraP_Iter+85
	rel 8+8 t=50 "".BenchmarkTeraP_Iter+211
	rel 16+8 t=50 "".BenchmarkTeraP_Iter+394
	rel 24+8 t=50 "".BenchmarkTeraP_Iter+578
	rel 32+8 t=50 "".BenchmarkTeraP_Iter+737
	rel 40+8 t=50 "".BenchmarkTeraP_Iter+765
	rel 48+8 t=50 "".BenchmarkTeraP_Iter+806
	rel 56+8 t=50 "".BenchmarkTeraP_Iter+880
	rel 80+8 t=50 "".BenchmarkTeraP_Iter+131
	rel 88+8 t=50 "".BenchmarkTeraP_Iter+211
	rel 96+8 t=50 "".BenchmarkTeraP_Iter+394
	rel 104+8 t=50 "".BenchmarkTeraP_Iter+578
	rel 112+8 t=50 "".BenchmarkTeraP_Iter+737
	rel 120+8 t=50 "".BenchmarkTeraP_Iter+765
	rel 128+8 t=50 "".BenchmarkTeraP_Iter+806
	rel 136+8 t=50 "".BenchmarkTeraP_Iter+854
	rel 160+8 t=50 "".BenchmarkTeraP_Iter+211
	rel 168+8 t=50 "".BenchmarkTeraP_Iter+221
	rel 176+8 t=50 "".BenchmarkTeraP_Iter+221
	rel 184+8 t=50 "".BenchmarkTeraP_Iter+284
	rel 192+8 t=50 "".BenchmarkTeraP_Iter+353
	rel 200+8 t=50 "".BenchmarkTeraP_Iter+394
	rel 208+8 t=50 "".BenchmarkTeraP_Iter+767
	rel 216+8 t=50 "".BenchmarkTeraP_Iter+806
	rel 240+8 t=50 "".BenchmarkTeraP_Iter+578
	rel 248+8 t=50 "".BenchmarkTeraP_Iter+737
	rel 256+8 t=50 "".BenchmarkTeraP_Iter+765
	rel 264+8 t=50 "".BenchmarkTeraP_Iter+767
go.isstmt."".BenchmarkTeraP_Iter SDWARFMISC size=0
	0x0000 04 1b 04 17 03 05 01 1e 02 0c 01 02 02 08 01 18  ................
	0x0010 02 0c 01 02 02 0c 01 07 02 08 01 27 02 08 01 1b  ...........'....
	0x0020 02 07 01 1f 02 03 01 42 02 07 01 22 02 08 01 b0  .......B..."....
	0x0030 01 02 03 01 07 02 03 01 72 02 05 01 02 02 08 01  ........r.......
	0x0040 11 02 04 01 1a 02 08 01 1f 02 09 01 27 02 02 01  ............'...
	0x0050 28 02 0a 00                                      (...
go.loc."".BenchmarkTeraIfc_Iter SDWARFLOC size=0
go.info."".BenchmarkTeraIfc_Iter SDWARFINFO size=150
	0x0000 03 22 22 2e 42 65 6e 63 68 6d 61 72 6b 54 65 72  ."".BenchmarkTer
	0x0010 61 49 66 63 5f 49 74 65 72 00 00 00 00 00 00 00  aIfc_Iter.......
	0x0020 00 00 00 00 00 00 00 00 00 00 01 9c 00 00 00 00  ................
	0x0030 01 0a 26 6f 00 b3 01 00 00 00 00 03 91 d0 78 0f  ..&o..........x.
	0x0040 62 00 00 b1 01 00 00 00 00 01 9c 14 00 00 00 00  b...............
	0x0050 0a 69 00 b5 01 00 00 00 00 03 91 98 78 14 00 00  .i..........x...
	0x0060 00 00 0a 61 00 b6 01 00 00 00 00 03 91 a8 78 00  ...a..........x.
	0x0070 00 07 00 00 00 00 00 00 00 00 00 00 00 00 b7 00  ................
	0x0080 00 00 12 00 00 00 00 03 91 a0 78 12 00 00 00 00  ..........x.....
	0x0090 03 91 d8 78 00 00                                ...x..
	rel 26+8 t=1 "".BenchmarkTeraIfc_Iter+0
	rel 34+8 t=1 "".BenchmarkTeraIfc_Iter+719
	rel 44+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 55+4 t=28 go.info.*"".tera+0
	rel 69+4 t=28 go.info.*testing.B+0
	rel 76+4 t=28 go.range."".BenchmarkTeraIfc_Iter+0
	rel 85+4 t=28 go.info.int+0
	rel 94+4 t=28 go.range."".BenchmarkTeraIfc_Iter+64
	rel 103+4 t=28 go.info.int+0
	rel 114+4 t=28 go.info."".avoidCompilerOptimisation$abstract+0
	rel 118+4 t=28 go.range."".BenchmarkTeraIfc_Iter+112
	rel 122+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/benchmark_iter_test.go+0
	rel 131+4 t=28 go.info."".avoidCompilerOptimisation$abstract+30
	rel 140+4 t=28 go.info."".avoidCompilerOptimisation$abstract+38
go.range."".BenchmarkTeraIfc_Iter SDWARFRANGE size=160
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".BenchmarkTeraIfc_Iter+130
	rel 8+8 t=50 "".BenchmarkTeraIfc_Iter+406
	rel 16+8 t=50 "".BenchmarkTeraIfc_Iter+565
	rel 24+8 t=50 "".BenchmarkTeraIfc_Iter+593
	rel 32+8 t=50 "".BenchmarkTeraIfc_Iter+595
	rel 40+8 t=50 "".BenchmarkTeraIfc_Iter+621
	rel 64+8 t=50 "".BenchmarkTeraIfc_Iter+176
	rel 72+8 t=50 "".BenchmarkTeraIfc_Iter+406
	rel 80+8 t=50 "".BenchmarkTeraIfc_Iter+565
	rel 88+8 t=50 "".BenchmarkTeraIfc_Iter+593
	rel 112+8 t=50 "".BenchmarkTeraIfc_Iter+406
	rel 120+8 t=50 "".BenchmarkTeraIfc_Iter+565
	rel 128+8 t=50 "".BenchmarkTeraIfc_Iter+593
	rel 136+8 t=50 "".BenchmarkTeraIfc_Iter+595
go.isstmt."".BenchmarkTeraIfc_Iter SDWARFMISC size=0
	0x0000 04 1b 04 17 03 07 01 04 02 05 01 0d 02 05 01 2e  ................
	0x0010 02 0c 01 02 02 08 01 18 02 0c 01 02 02 0c 01 07  ................
	0x0020 02 08 01 2b 02 05 01 8d 01 02 03 01 07 02 03 01  ...+............
	0x0030 72 02 05 01 02 02 08 01 11 02 04 01 1a 02 02 01  r...............
	0x0040 66 02 05 01 05 02 0a 00                          f.......
go.loc."".calcMicro SDWARFLOC size=0
go.info."".calcMicro SDWARFINFO size=98
	0x0000 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 01 9c 12 00 00 00 00 01 9c 0f 7e  ...............~
	0x0020 72 31 00 01 07 00 00 00 00 02 91 10 0f 7e 72 32  r1...........~r2
	0x0030 00 01 07 00 00 00 00 02 91 18 0a 7e 52 30 00 09  ...........~R0..
	0x0040 00 00 00 00 02 91 40 07 00 00 00 00 00 00 00 00  ......@.........
	0x0050 00 00 00 00 09 00 00 00 12 00 00 00 00 02 91 50  ...............P
	0x0060 00 00                                            ..
	rel 1+4 t=28 go.info."".calcMicro$abstract+0
	rel 5+8 t=1 "".calcMicro+0
	rel 13+8 t=1 "".calcMicro+302
	rel 24+4 t=28 go.info."".calcMicro$abstract+14
	rel 37+4 t=28 go.info.float64+0
	rel 51+4 t=28 go.info.error+0
	rel 64+4 t=28 go.info.error+0
	rel 72+4 t=28 go.info.errors.New$abstract+0
	rel 76+4 t=28 go.range."".calcMicro+0
	rel 80+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 89+4 t=28 go.info.errors.New$abstract+14
go.range."".calcMicro SDWARFRANGE size=48
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".calcMicro+102
	rel 8+8 t=50 "".calcMicro+168
	rel 16+8 t=50 "".calcMicro+239
	rel 24+8 t=50 "".calcMicro+249
go.isstmt."".calcMicro SDWARFMISC size=0
	0x0000 04 13 04 0e 03 03 01 0e 02 06 01 11 02 07 01 16  ................
	0x0010 02 07 01 04 02 05 01 32 02 07 01 16 02 03 01 31  .......2.......1
	0x0020 02 05 01 26 02 0a 00                             ...&...
go.loc."".calcTiny SDWARFLOC size=0
go.info."".calcTiny SDWARFINFO size=98
	0x0000 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 01 9c 12 00 00 00 00 01 9c 0f 7e  ...............~
	0x0020 72 31 00 01 0e 00 00 00 00 02 91 20 0f 7e 72 32  r1......... .~r2
	0x0030 00 01 0e 00 00 00 00 02 91 28 0a 7e 52 30 00 10  .........(.~R0..
	0x0040 00 00 00 00 02 91 40 07 00 00 00 00 00 00 00 00  ......@.........
	0x0050 00 00 00 00 10 00 00 00 12 00 00 00 00 02 91 50  ...............P
	0x0060 00 00                                            ..
	rel 1+4 t=28 go.info."".calcTiny$abstract+0
	rel 5+8 t=1 "".calcTiny+0
	rel 13+8 t=1 "".calcTiny+320
	rel 24+4 t=28 go.info."".calcTiny$abstract+13
	rel 37+4 t=28 go.info.float64+0
	rel 51+4 t=28 go.info.error+0
	rel 64+4 t=28 go.info.error+0
	rel 72+4 t=28 go.info.errors.New$abstract+0
	rel 76+4 t=28 go.range."".calcTiny+0
	rel 80+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 89+4 t=28 go.info.errors.New$abstract+14
go.range."".calcTiny SDWARFRANGE size=48
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".calcTiny+108
	rel 8+8 t=50 "".calcTiny+174
	rel 16+8 t=50 "".calcTiny+251
	rel 24+8 t=50 "".calcTiny+261
go.isstmt."".calcTiny SDWARFMISC size=0
	0x0000 04 13 04 0e 03 03 01 14 02 06 01 11 02 07 01 16  ................
	0x0010 02 07 01 04 02 05 01 32 02 07 01 16 02 03 01 37  .......2.......7
	0x0020 02 05 01 2c 02 0a 00                             ...,...
go.loc."".calcMini SDWARFLOC size=0
go.info."".calcMini SDWARFINFO size=100
	0x0000 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 01 9c 12 00 00 00 00 01 9c 0f 7e  ...............~
	0x0020 72 31 00 01 15 00 00 00 00 03 91 e0 00 0f 7e 72  r1............~r
	0x0030 32 00 01 15 00 00 00 00 03 91 e8 00 0a 7e 52 30  2............~R0
	0x0040 00 17 00 00 00 00 02 91 40 07 00 00 00 00 00 00  ........@.......
	0x0050 00 00 00 00 00 00 17 00 00 00 12 00 00 00 00 02  ................
	0x0060 91 50 00 00                                      .P..
	rel 1+4 t=28 go.info."".calcMini$abstract+0
	rel 5+8 t=1 "".calcMini+0
	rel 13+8 t=1 "".calcMini+320
	rel 24+4 t=28 go.info."".calcMini$abstract+13
	rel 37+4 t=28 go.info.float64+0
	rel 52+4 t=28 go.info.error+0
	rel 66+4 t=28 go.info.error+0
	rel 74+4 t=28 go.info.errors.New$abstract+0
	rel 78+4 t=28 go.range."".calcMini+0
	rel 82+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 91+4 t=28 go.info.errors.New$abstract+14
go.range."".calcMini SDWARFRANGE size=48
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".calcMini+108
	rel 8+8 t=50 "".calcMini+174
	rel 16+8 t=50 "".calcMini+251
	rel 24+8 t=50 "".calcMini+261
go.isstmt."".calcMini SDWARFMISC size=0
	0x0000 04 13 04 0e 03 03 01 14 02 06 01 11 02 07 01 16  ................
	0x0010 02 07 01 04 02 05 01 32 02 07 01 16 02 03 01 37  .......2.......7
	0x0020 02 05 01 2c 02 0a 00                             ...,...
go.loc."".calcMega SDWARFLOC size=0
go.info."".calcMega SDWARFINFO size=100
	0x0000 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 01 9c 12 00 00 00 00 01 9c 0f 7e  ...............~
	0x0020 72 31 00 01 1c 00 00 00 00 03 91 e0 02 0f 7e 72  r1............~r
	0x0030 32 00 01 1c 00 00 00 00 03 91 e8 02 0a 7e 52 30  2............~R0
	0x0040 00 1e 00 00 00 00 02 91 40 07 00 00 00 00 00 00  ........@.......
	0x0050 00 00 00 00 00 00 1e 00 00 00 12 00 00 00 00 02  ................
	0x0060 91 50 00 00                                      .P..
	rel 1+4 t=28 go.info."".calcMega$abstract+0
	rel 5+8 t=1 "".calcMega+0
	rel 13+8 t=1 "".calcMega+326
	rel 24+4 t=28 go.info."".calcMega$abstract+13
	rel 37+4 t=28 go.info.float64+0
	rel 52+4 t=28 go.info.error+0
	rel 66+4 t=28 go.info.error+0
	rel 74+4 t=28 go.info.errors.New$abstract+0
	rel 78+4 t=28 go.range."".calcMega+0
	rel 82+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 91+4 t=28 go.info.errors.New$abstract+14
go.range."".calcMega SDWARFRANGE size=48
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".calcMega+111
	rel 8+8 t=50 "".calcMega+177
	rel 16+8 t=50 "".calcMega+254
	rel 24+8 t=50 "".calcMega+264
go.isstmt."".calcMega SDWARFMISC size=0
	0x0000 04 13 04 0e 03 03 01 14 02 09 01 11 02 07 01 16  ................
	0x0010 02 07 01 04 02 05 01 32 02 07 01 16 02 03 01 37  .......2.......7
	0x0020 02 05 01 2f 02 0a 00                             .../...
go.loc."".calcTera SDWARFLOC size=0
go.info."".calcTera SDWARFINFO size=100
	0x0000 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 01 9c 12 00 00 00 00 01 9c 0f 7e  ...............~
	0x0020 72 31 00 01 23 00 00 00 00 03 91 c0 06 0f 7e 72  r1..#.........~r
	0x0030 32 00 01 23 00 00 00 00 03 91 c8 06 0a 7e 52 30  2..#.........~R0
	0x0040 00 25 00 00 00 00 02 91 40 07 00 00 00 00 00 00  .%......@.......
	0x0050 00 00 00 00 00 00 25 00 00 00 12 00 00 00 00 02  ......%.........
	0x0060 91 50 00 00                                      .P..
	rel 1+4 t=28 go.info."".calcTera$abstract+0
	rel 5+8 t=1 "".calcTera+0
	rel 13+8 t=1 "".calcTera+326
	rel 24+4 t=28 go.info."".calcTera$abstract+13
	rel 37+4 t=28 go.info.float64+0
	rel 52+4 t=28 go.info.error+0
	rel 66+4 t=28 go.info.error+0
	rel 74+4 t=28 go.info.errors.New$abstract+0
	rel 78+4 t=28 go.range."".calcTera+0
	rel 82+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 91+4 t=28 go.info.errors.New$abstract+14
go.range."".calcTera SDWARFRANGE size=48
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".calcTera+111
	rel 8+8 t=50 "".calcTera+177
	rel 16+8 t=50 "".calcTera+254
	rel 24+8 t=50 "".calcTera+264
go.isstmt."".calcTera SDWARFMISC size=0
	0x0000 04 13 04 0e 03 03 01 14 02 09 01 11 02 07 01 16  ................
	0x0010 02 07 01 04 02 05 01 32 02 07 01 16 02 03 01 37  .......2.......7
	0x0020 02 05 01 2f 02 0a 00                             .../...
go.loc."".calcIfc SDWARFLOC size=0
go.info."".calcIfc SDWARFINFO size=114
	0x0000 03 22 22 2e 63 61 6c 63 49 66 63 00 00 00 00 00  ."".calcIfc.....
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 00 00  ................
	0x0020 00 00 01 0a 7e 52 30 00 2e 00 00 00 00 02 91 40  ....~R0........@
	0x0030 0f 6f 00 00 2c 00 00 00 00 01 9c 0f 7e 72 31 00  .o..,.......~r1.
	0x0040 01 2c 00 00 00 00 02 91 10 0f 7e 72 32 00 01 2c  .,........~r2..,
	0x0050 00 00 00 00 02 91 18 07 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 2e 00 00 00 12 00 00 00 00 02 91 50  ...............P
	0x0070 00 00                                            ..
	rel 12+8 t=1 "".calcIfc+0
	rel 20+8 t=1 "".calcIfc+414
	rel 30+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 41+4 t=28 go.info.error+0
	rel 53+4 t=28 go.info."".obj+0
	rel 66+4 t=28 go.info.float64+0
	rel 80+4 t=28 go.info.error+0
	rel 88+4 t=28 go.info.errors.New$abstract+0
	rel 92+4 t=28 go.range."".calcIfc+0
	rel 96+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 105+4 t=28 go.info.errors.New$abstract+14
go.range."".calcIfc SDWARFRANGE size=48
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".calcIfc+139
	rel 8+8 t=50 "".calcIfc+205
	rel 16+8 t=50 "".calcIfc+282
	rel 24+8 t=50 "".calcIfc+289
go.isstmt."".calcIfc SDWARFMISC size=0
	0x0000 04 13 04 0e 03 03 01 14 02 05 01 0f 02 02 01 20  ............... 
	0x0010 02 07 01 16 02 07 01 04 02 05 01 32 02 07 01 16  ...........2....
	0x0020 02 03 01 34 02 07 01 0f 02 02 01 1e 02 02 01 3b  ...4...........;
	0x0030 02 0a 00                                         ...
go.loc."".calcMicroP SDWARFLOC size=0
go.info."".calcMicroP SDWARFINFO size=98
	0x0000 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 01 9c 12 00 00 00 00 01 9c 0f 7e  ...............~
	0x0020 72 31 00 01 33 00 00 00 00 02 91 08 0f 7e 72 32  r1..3........~r2
	0x0030 00 01 33 00 00 00 00 02 91 10 0a 7e 52 30 00 35  ..3........~R0.5
	0x0040 00 00 00 00 02 91 40 07 00 00 00 00 00 00 00 00  ......@.........
	0x0050 00 00 00 00 35 00 00 00 12 00 00 00 00 02 91 50  ....5..........P
	0x0060 00 00                                            ..
	rel 1+4 t=28 go.info."".calcMicroP$abstract+0
	rel 5+8 t=1 "".calcMicroP+0
	rel 13+8 t=1 "".calcMicroP+316
	rel 24+4 t=28 go.info."".calcMicroP$abstract+15
	rel 37+4 t=28 go.info.float64+0
	rel 51+4 t=28 go.info.error+0
	rel 64+4 t=28 go.info.error+0
	rel 72+4 t=28 go.info.errors.New$abstract+0
	rel 76+4 t=28 go.range."".calcMicroP+0
	rel 80+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 89+4 t=28 go.info.errors.New$abstract+14
go.range."".calcMicroP SDWARFRANGE size=48
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".calcMicroP+108
	rel 8+8 t=50 "".calcMicroP+174
	rel 16+8 t=50 "".calcMicroP+242
	rel 24+8 t=50 "".calcMicroP+252
go.isstmt."".calcMicroP SDWARFMISC size=0
	0x0000 04 13 04 0e 03 03 01 0e 02 05 01 18 02 07 01 16  ................
	0x0010 02 07 01 04 02 05 01 32 02 07 01 16 02 03 01 2e  .......2........
	0x0020 02 05 01 31 02 0a 00                             ...1...
go.loc."".calcTinyP SDWARFLOC size=0
go.info."".calcTinyP SDWARFINFO size=98
	0x0000 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 01 9c 12 00 00 00 00 01 9c 0f 7e  ...............~
	0x0020 72 31 00 01 3a 00 00 00 00 02 91 08 0f 7e 72 32  r1..:........~r2
	0x0030 00 01 3a 00 00 00 00 02 91 10 0a 7e 52 30 00 3c  ..:........~R0.<
	0x0040 00 00 00 00 02 91 40 07 00 00 00 00 00 00 00 00  ......@.........
	0x0050 00 00 00 00 3c 00 00 00 12 00 00 00 00 02 91 50  ....<..........P
	0x0060 00 00                                            ..
	rel 1+4 t=28 go.info."".calcTinyP$abstract+0
	rel 5+8 t=1 "".calcTinyP+0
	rel 13+8 t=1 "".calcTinyP+316
	rel 24+4 t=28 go.info."".calcTinyP$abstract+14
	rel 37+4 t=28 go.info.float64+0
	rel 51+4 t=28 go.info.error+0
	rel 64+4 t=28 go.info.error+0
	rel 72+4 t=28 go.info.errors.New$abstract+0
	rel 76+4 t=28 go.range."".calcTinyP+0
	rel 80+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 89+4 t=28 go.info.errors.New$abstract+14
go.range."".calcTinyP SDWARFRANGE size=48
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".calcTinyP+108
	rel 8+8 t=50 "".calcTinyP+174
	rel 16+8 t=50 "".calcTinyP+242
	rel 24+8 t=50 "".calcTinyP+252
go.isstmt."".calcTinyP SDWARFMISC size=0
	0x0000 04 13 04 0e 03 03 01 0e 02 05 01 18 02 07 01 16  ................
	0x0010 02 07 01 04 02 05 01 32 02 07 01 16 02 03 01 2e  .......2........
	0x0020 02 05 01 31 02 0a 00                             ...1...
go.loc."".calcMiniP SDWARFLOC size=0
go.info."".calcMiniP SDWARFINFO size=98
	0x0000 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 01 9c 12 00 00 00 00 01 9c 0f 7e  ...............~
	0x0020 72 31 00 01 41 00 00 00 00 02 91 08 0f 7e 72 32  r1..A........~r2
	0x0030 00 01 41 00 00 00 00 02 91 10 0a 7e 52 30 00 43  ..A........~R0.C
	0x0040 00 00 00 00 02 91 40 07 00 00 00 00 00 00 00 00  ......@.........
	0x0050 00 00 00 00 43 00 00 00 12 00 00 00 00 02 91 50  ....C..........P
	0x0060 00 00                                            ..
	rel 1+4 t=28 go.info."".calcMiniP$abstract+0
	rel 5+8 t=1 "".calcMiniP+0
	rel 13+8 t=1 "".calcMiniP+316
	rel 24+4 t=28 go.info."".calcMiniP$abstract+14
	rel 37+4 t=28 go.info.float64+0
	rel 51+4 t=28 go.info.error+0
	rel 64+4 t=28 go.info.error+0
	rel 72+4 t=28 go.info.errors.New$abstract+0
	rel 76+4 t=28 go.range."".calcMiniP+0
	rel 80+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 89+4 t=28 go.info.errors.New$abstract+14
go.range."".calcMiniP SDWARFRANGE size=48
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".calcMiniP+108
	rel 8+8 t=50 "".calcMiniP+174
	rel 16+8 t=50 "".calcMiniP+242
	rel 24+8 t=50 "".calcMiniP+252
go.isstmt."".calcMiniP SDWARFMISC size=0
	0x0000 04 13 04 0e 03 03 01 0e 02 05 01 18 02 07 01 16  ................
	0x0010 02 07 01 04 02 05 01 32 02 07 01 16 02 03 01 2e  .......2........
	0x0020 02 05 01 31 02 0a 00                             ...1...
go.loc."".calcMegaP SDWARFLOC size=0
go.info."".calcMegaP SDWARFINFO size=98
	0x0000 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 01 9c 12 00 00 00 00 01 9c 0f 7e  ...............~
	0x0020 72 31 00 01 48 00 00 00 00 02 91 08 0f 7e 72 32  r1..H........~r2
	0x0030 00 01 48 00 00 00 00 02 91 10 0a 7e 52 30 00 4a  ..H........~R0.J
	0x0040 00 00 00 00 02 91 40 07 00 00 00 00 00 00 00 00  ......@.........
	0x0050 00 00 00 00 4a 00 00 00 12 00 00 00 00 02 91 50  ....J..........P
	0x0060 00 00                                            ..
	rel 1+4 t=28 go.info."".calcMegaP$abstract+0
	rel 5+8 t=1 "".calcMegaP+0
	rel 13+8 t=1 "".calcMegaP+316
	rel 24+4 t=28 go.info."".calcMegaP$abstract+14
	rel 37+4 t=28 go.info.float64+0
	rel 51+4 t=28 go.info.error+0
	rel 64+4 t=28 go.info.error+0
	rel 72+4 t=28 go.info.errors.New$abstract+0
	rel 76+4 t=28 go.range."".calcMegaP+0
	rel 80+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 89+4 t=28 go.info.errors.New$abstract+14
go.range."".calcMegaP SDWARFRANGE size=48
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".calcMegaP+108
	rel 8+8 t=50 "".calcMegaP+174
	rel 16+8 t=50 "".calcMegaP+242
	rel 24+8 t=50 "".calcMegaP+252
go.isstmt."".calcMegaP SDWARFMISC size=0
	0x0000 04 13 04 0e 03 03 01 0e 02 05 01 18 02 07 01 16  ................
	0x0010 02 07 01 04 02 05 01 32 02 07 01 16 02 03 01 2e  .......2........
	0x0020 02 05 01 31 02 0a 00                             ...1...
go.loc."".calcTeraP SDWARFLOC size=0
go.info."".calcTeraP SDWARFINFO size=98
	0x0000 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 01 9c 12 00 00 00 00 01 9c 0f 7e  ...............~
	0x0020 72 31 00 01 4f 00 00 00 00 02 91 08 0f 7e 72 32  r1..O........~r2
	0x0030 00 01 4f 00 00 00 00 02 91 10 0a 7e 52 30 00 51  ..O........~R0.Q
	0x0040 00 00 00 00 02 91 40 07 00 00 00 00 00 00 00 00  ......@.........
	0x0050 00 00 00 00 51 00 00 00 12 00 00 00 00 02 91 50  ....Q..........P
	0x0060 00 00                                            ..
	rel 1+4 t=28 go.info."".calcTeraP$abstract+0
	rel 5+8 t=1 "".calcTeraP+0
	rel 13+8 t=1 "".calcTeraP+322
	rel 24+4 t=28 go.info."".calcTeraP$abstract+14
	rel 37+4 t=28 go.info.float64+0
	rel 51+4 t=28 go.info.error+0
	rel 64+4 t=28 go.info.error+0
	rel 72+4 t=28 go.info.errors.New$abstract+0
	rel 76+4 t=28 go.range."".calcTeraP+0
	rel 80+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 89+4 t=28 go.info.errors.New$abstract+14
go.range."".calcTeraP SDWARFRANGE size=48
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".calcTeraP+111
	rel 8+8 t=50 "".calcTeraP+177
	rel 16+8 t=50 "".calcTeraP+245
	rel 24+8 t=50 "".calcTeraP+255
go.isstmt."".calcTeraP SDWARFMISC size=0
	0x0000 04 13 04 0e 03 03 01 0e 02 05 01 1b 02 07 01 16  ................
	0x0010 02 07 01 04 02 05 01 32 02 07 01 16 02 03 01 2e  .......2........
	0x0020 02 05 01 34 02 0a 00                             ...4...
go.loc."".calcGiga SDWARFLOC size=0
go.info."".calcGiga SDWARFINFO size=78
	0x0000 03 22 22 2e 63 61 6c 63 47 69 67 61 00 00 00 00  ."".calcGiga....
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 00  ................
	0x0020 00 00 00 01 0f 6f 00 00 57 00 00 00 00 01 9c 0f  .....o..W.......
	0x0030 7e 72 31 00 01 57 00 00 00 00 03 91 a0 03 0f 7e  ~r1..W.........~
	0x0040 72 32 00 01 57 00 00 00 00 03 91 a8 03 00        r2..W.........
	rel 13+8 t=1 "".calcGiga+0
	rel 21+8 t=1 "".calcGiga+453
	rel 31+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 41+4 t=28 go.info."".giga+0
	rel 54+4 t=28 go.info.float64+0
	rel 69+4 t=28 go.info.error+0
go.range."".calcGiga SDWARFRANGE size=0
go.isstmt."".calcGiga SDWARFMISC size=0
	0x0000 04 03 01 14 02 05 01 2d 02 05 01 2c 02 08 01 38  .......-...,...8
	0x0010 02 09 01 51 02 09 01 3f 02 09 01 3f 02 03 01 05  ...Q...?...?....
	0x0020 02 0d 01 0c 00                                   .....
go.loc."".calcGigaP SDWARFLOC size=0
go.info."".calcGigaP SDWARFINFO size=77
	0x0000 03 22 22 2e 63 61 6c 63 47 69 67 61 50 00 00 00  ."".calcGigaP...
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c  ................
	0x0020 00 00 00 00 01 0f 6f 00 00 62 00 00 00 00 01 9c  ......o..b......
	0x0030 0f 7e 72 31 00 01 62 00 00 00 00 02 91 08 0f 7e  .~r1..b........~
	0x0040 72 32 00 01 62 00 00 00 00 02 91 10 00           r2..b........
	rel 14+8 t=1 "".calcGigaP+0
	rel 22+8 t=1 "".calcGigaP+1552
	rel 32+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 42+4 t=28 go.info.*"".giga+0
	rel 55+4 t=28 go.info.float64+0
	rel 69+4 t=28 go.info.error+0
go.range."".calcGigaP SDWARFRANGE size=0
go.isstmt."".calcGigaP SDWARFMISC size=0
	0x0000 04 1b 04 17 03 03 01 14 02 08 01 55 02 08 01 69  ...........U...i
	0x0010 02 08 01 99 01 02 08 01 a3 01 02 08 01 8a 01 02  ................
	0x0020 08 01 83 01 02 03 01 24 02 05 01 af 01 02 08 01  .......$........
	0x0030 98 01 02 08 01 d3 01 02 03 01 05 02 0d 01 1b 02  ................
	0x0040 0a 00                                            ..
go.loc."".calcGigaWithInterface SDWARFLOC size=0
go.info."".calcGigaWithInterface SDWARFINFO size=89
	0x0000 03 22 22 2e 63 61 6c 63 47 69 67 61 57 69 74 68  ."".calcGigaWith
	0x0010 49 6e 74 65 72 66 61 63 65 00 00 00 00 00 00 00  Interface.......
	0x0020 00 00 00 00 00 00 00 00 00 00 01 9c 00 00 00 00  ................
	0x0030 01 0f 6f 00 00 6d 00 00 00 00 01 9c 0f 7e 72 31  ..o..m.......~r1
	0x0040 00 01 6d 00 00 00 00 02 91 10 0f 7e 72 32 00 01  ..m........~r2..
	0x0050 6d 00 00 00 00 02 91 18 00                       m........
	rel 26+8 t=1 "".calcGigaWithInterface+0
	rel 34+8 t=1 "".calcGigaWithInterface+2788
	rel 44+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 54+4 t=28 go.info."".gigantic+0
	rel 67+4 t=28 go.info.float64+0
	rel 81+4 t=28 go.info.error+0
go.range."".calcGigaWithInterface SDWARFRANGE size=0
go.isstmt."".calcGigaWithInterface SDWARFMISC size=0
	0x0000 04 1b 04 17 03 03 01 14 02 08 01 12 02 02 01 27  ...............'
	0x0010 02 02 01 27 02 02 01 24 02 02 01 24 02 02 01 24  ...'...$...$...$
	0x0020 02 02 01 24 02 02 01 27 02 02 01 2a 02 02 01 0d  ...$...'...*....
	0x0030 02 08 01 15 02 02 01 2a 02 02 01 2a 02 02 01 2a  .......*...*...*
	0x0040 02 02 01 2a 02 02 01 2a 02 02 01 2a 02 02 01 2a  ...*...*...*...*
	0x0050 02 02 01 0d 02 08 01 15 02 02 01 2a 02 02 01 2a  ...........*...*
	0x0060 02 02 01 2a 02 02 01 2a 02 02 01 2a 02 02 01 2a  ...*...*...*...*
	0x0070 02 02 01 2a 02 02 01 2a 02 02 01 0d 02 08 01 12  ...*...*........
	0x0080 02 02 01 29 02 02 01 29 02 02 01 29 02 02 01 29  ...)...)...)...)
	0x0090 02 02 01 29 02 02 01 2c 02 02 01 2c 02 02 01 2c  ...)...,...,...,
	0x00a0 02 02 01 0f 02 08 01 15 02 02 01 2c 02 02 01 2c  ...........,...,
	0x00b0 02 02 01 2c 02 02 01 2c 02 02 01 2c 02 02 01 2c  ...,...,...,...,
	0x00c0 02 02 01 2c 02 02 01 0f 02 08 01 15 02 02 01 29  ...,...........)
	0x00d0 02 02 01 29 02 02 01 29 02 02 01 29 02 02 01 29  ...)...)...)...)
	0x00e0 02 02 01 29 02 02 01 29 02 02 01 29 02 02 01 0c  ...)...)...)....
	0x00f0 02 08 01 39 02 08 01 38 02 08 01 38 02 09 01 51  ...9...8...8...Q
	0x0100 02 09 01 3c 02 06 01 24 02 03 01 09 02 0d 01 1b  ...<...$........
	0x0110 02 0a 00                                         ...
go.string."TestTeraValueReceiverRoutine" SRODATA dupok size=28
	0x0000 54 65 73 74 54 65 72 61 56 61 6c 75 65 52 65 63  TestTeraValueRec
	0x0010 65 69 76 65 72 52 6f 75 74 69 6e 65              eiverRoutine
go.loc."".TestTeraValueReceiverRoutine SDWARFLOC size=0
go.info."".TestTeraValueReceiverRoutine SDWARFINFO size=68
	0x0000 03 22 22 2e 54 65 73 74 54 65 72 61 56 61 6c 75  ."".TestTeraValu
	0x0010 65 52 65 63 65 69 76 65 72 52 6f 75 74 69 6e 65  eReceiverRoutine
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 01 9c 00 00 00 00 01 0f 74 00 00 0f 00 00 00  .........t......
	0x0040 00 01 9c 00                                      ....
	rel 33+8 t=1 "".TestTeraValueReceiverRoutine+0
	rel 41+8 t=1 "".TestTeraValueReceiverRoutine+83
	rel 51+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 61+4 t=28 go.info.*testing.T+0
go.range."".TestTeraValueReceiverRoutine SDWARFRANGE size=0
go.isstmt."".TestTeraValueReceiverRoutine SDWARFMISC size=0
	0x0000 04 0f 04 0e 03 07 01 19 02 16 00                 ...........
go.string."TestTeraPointerReceiverRoutine" SRODATA dupok size=30
	0x0000 54 65 73 74 54 65 72 61 50 6f 69 6e 74 65 72 52  TestTeraPointerR
	0x0010 65 63 65 69 76 65 72 52 6f 75 74 69 6e 65        eceiverRoutine
go.loc."".TestTeraPointerReceiverRoutine SDWARFLOC size=0
go.info."".TestTeraPointerReceiverRoutine SDWARFINFO size=70
	0x0000 03 22 22 2e 54 65 73 74 54 65 72 61 50 6f 69 6e  ."".TestTeraPoin
	0x0010 74 65 72 52 65 63 65 69 76 65 72 52 6f 75 74 69  terReceiverRouti
	0x0020 6e 65 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ne..............
	0x0030 00 00 00 01 9c 00 00 00 00 01 0f 74 00 00 16 00  ...........t....
	0x0040 00 00 00 01 9c 00                                ......
	rel 35+8 t=1 "".TestTeraPointerReceiverRoutine+0
	rel 43+8 t=1 "".TestTeraPointerReceiverRoutine+83
	rel 53+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 63+4 t=28 go.info.*testing.T+0
go.range."".TestTeraPointerReceiverRoutine SDWARFRANGE size=0
go.isstmt."".TestTeraPointerReceiverRoutine SDWARFMISC size=0
	0x0000 04 0f 04 0e 03 07 01 19 02 16 00                 ...........
go.string."TestTeraInterfaceReceiverRoutine" SRODATA dupok size=32
	0x0000 54 65 73 74 54 65 72 61 49 6e 74 65 72 66 61 63  TestTeraInterfac
	0x0010 65 52 65 63 65 69 76 65 72 52 6f 75 74 69 6e 65  eReceiverRoutine
go.loc."".TestTeraInterfaceReceiverRoutine SDWARFLOC size=0
go.info."".TestTeraInterfaceReceiverRoutine SDWARFINFO size=72
	0x0000 03 22 22 2e 54 65 73 74 54 65 72 61 49 6e 74 65  ."".TestTeraInte
	0x0010 72 66 61 63 65 52 65 63 65 69 76 65 72 52 6f 75  rfaceReceiverRou
	0x0020 74 69 6e 65 00 00 00 00 00 00 00 00 00 00 00 00  tine............
	0x0030 00 00 00 00 00 01 9c 00 00 00 00 01 0f 74 00 00  .............t..
	0x0040 1e 00 00 00 00 01 9c 00                          ........
	rel 37+8 t=1 "".TestTeraInterfaceReceiverRoutine+0
	rel 45+8 t=1 "".TestTeraInterfaceReceiverRoutine+83
	rel 55+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 65+4 t=28 go.info.*testing.T+0
go.range."".TestTeraInterfaceReceiverRoutine SDWARFRANGE size=0
go.isstmt."".TestTeraInterfaceReceiverRoutine SDWARFMISC size=0
	0x0000 04 0f 04 0e 03 07 01 19 02 16 00                 ...........
go.string."TestTeraValueReceiverNative" SRODATA dupok size=27
	0x0000 54 65 73 74 54 65 72 61 56 61 6c 75 65 52 65 63  TestTeraValueRec
	0x0010 65 69 76 65 72 4e 61 74 69 76 65                 eiverNative
go.loc."".TestTeraValueReceiverNative SDWARFLOC size=0
go.info."".TestTeraValueReceiverNative SDWARFINFO size=67
	0x0000 03 22 22 2e 54 65 73 74 54 65 72 61 56 61 6c 75  ."".TestTeraValu
	0x0010 65 52 65 63 65 69 76 65 72 4e 61 74 69 76 65 00  eReceiverNative.
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 9c 00 00 00 00 01 0f 74 00 00 26 00 00 00 00  ........t..&....
	0x0040 01 9c 00                                         ...
	rel 32+8 t=1 "".TestTeraValueReceiverNative+0
	rel 40+8 t=1 "".TestTeraValueReceiverNative+83
	rel 50+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 60+4 t=28 go.info.*testing.T+0
go.range."".TestTeraValueReceiverNative SDWARFRANGE size=0
go.isstmt."".TestTeraValueReceiverNative SDWARFMISC size=0
	0x0000 04 0f 04 0e 03 07 01 19 02 16 00                 ...........
go.string."TestTeraPointerReceiverNative" SRODATA dupok size=29
	0x0000 54 65 73 74 54 65 72 61 50 6f 69 6e 74 65 72 52  TestTeraPointerR
	0x0010 65 63 65 69 76 65 72 4e 61 74 69 76 65           eceiverNative
go.loc."".TestTeraPointerReceiverNative SDWARFLOC size=0
go.info."".TestTeraPointerReceiverNative SDWARFINFO size=69
	0x0000 03 22 22 2e 54 65 73 74 54 65 72 61 50 6f 69 6e  ."".TestTeraPoin
	0x0010 74 65 72 52 65 63 65 69 76 65 72 4e 61 74 69 76  terReceiverNativ
	0x0020 65 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  e...............
	0x0030 00 00 01 9c 00 00 00 00 01 0f 74 00 00 2d 00 00  ..........t..-..
	0x0040 00 00 01 9c 00                                   .....
	rel 34+8 t=1 "".TestTeraPointerReceiverNative+0
	rel 42+8 t=1 "".TestTeraPointerReceiverNative+83
	rel 52+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 62+4 t=28 go.info.*testing.T+0
go.range."".TestTeraPointerReceiverNative SDWARFRANGE size=0
go.isstmt."".TestTeraPointerReceiverNative SDWARFMISC size=0
	0x0000 04 0f 04 0e 03 07 01 19 02 16 00                 ...........
go.string."TestTeraInterfaceReceiverNative" SRODATA dupok size=31
	0x0000 54 65 73 74 54 65 72 61 49 6e 74 65 72 66 61 63  TestTeraInterfac
	0x0010 65 52 65 63 65 69 76 65 72 4e 61 74 69 76 65     eReceiverNative
go.loc."".TestTeraInterfaceReceiverNative SDWARFLOC size=0
go.info."".TestTeraInterfaceReceiverNative SDWARFINFO size=71
	0x0000 03 22 22 2e 54 65 73 74 54 65 72 61 49 6e 74 65  ."".TestTeraInte
	0x0010 72 66 61 63 65 52 65 63 65 69 76 65 72 4e 61 74  rfaceReceiverNat
	0x0020 69 76 65 00 00 00 00 00 00 00 00 00 00 00 00 00  ive.............
	0x0030 00 00 00 00 01 9c 00 00 00 00 01 0f 74 00 00 34  ............t..4
	0x0040 00 00 00 00 01 9c 00                             .......
	rel 36+8 t=1 "".TestTeraInterfaceReceiverNative+0
	rel 44+8 t=1 "".TestTeraInterfaceReceiverNative+83
	rel 54+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 64+4 t=28 go.info.*testing.T+0
go.range."".TestTeraInterfaceReceiverNative SDWARFRANGE size=0
go.isstmt."".TestTeraInterfaceReceiverNative SDWARFMISC size=0
	0x0000 04 0f 04 0e 03 07 01 19 02 16 00                 ...........
go.string."invocations = %v" SRODATA dupok size=16
	0x0000 69 6e 76 6f 63 61 74 69 6f 6e 73 20 3d 20 25 76  invocations = %v
go.loc."".runRoutine SDWARFLOC size=0
go.info."".runRoutine SDWARFINFO size=195
	0x0000 03 22 22 2e 72 75 6e 52 6f 75 74 69 6e 65 00 00  ."".runRoutine..
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01  ................
	0x0020 9c 00 00 00 00 01 0a 69 00 55 00 00 00 00 03 91  .......i.U......
	0x0030 c0 71 0a 63 6e 6c 00 3f 00 00 00 00 03 91 c8 71  .q.cnl.?.......q
	0x0040 0a 63 68 00 3d 00 00 00 00 03 91 d0 71 0a 7e 52  .ch.=.......q.~R
	0x0050 30 00 3f 00 00 00 00 03 91 f8 71 0a 63 74 78 00  0.?.......q.ctx.
	0x0060 3f 00 00 00 00 03 91 88 72 0f 65 78 65 63 00 00  ?.......r.exec..
	0x0070 3c 00 00 00 00 01 9c 0f 6e 61 6d 65 00 00 3c 00  <.......name..<.
	0x0080 00 00 00 02 91 08 15 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 0a 6f 00 57 00 00 00 00 03  ........o.W.....
	0x00a0 91 f0 72 00 06 00 00 00 00 00 00 00 00 00 00 00  ..r.............
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 3f 00 00  .............?..
	0x00c0 00 00 00                                         ...
	rel 15+8 t=1 "".runRoutine+0
	rel 23+8 t=1 "".runRoutine+941
	rel 33+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 42+4 t=28 go.info.int+0
	rel 56+4 t=28 go.info.context.CancelFunc+0
	rel 69+4 t=28 go.info.chan "".tera+0
	rel 83+4 t=28 go.info.context.Context+0
	rel 97+4 t=28 go.info.context.Context+0
	rel 113+4 t=28 go.info.func("".tera)+0
	rel 127+4 t=28 go.info.string+0
	rel 135+8 t=1 "".runRoutine+399
	rel 143+8 t=1 "".runRoutine+632
	rel 155+4 t=28 go.info."".tera+0
	rel 165+4 t=28 go.info.context.Background$abstract+0
	rel 169+8 t=1 "".runRoutine+99
	rel 177+8 t=1 "".runRoutine+106
	rel 185+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
go.range."".runRoutine SDWARFRANGE size=0
go.isstmt."".runRoutine SDWARFMISC size=0
	0x0000 04 1b 04 17 03 07 01 0d 02 05 01 0d 02 03 01 08  ................
	0x0010 02 0e 01 52 02 05 01 57 02 07 01 19 02 0c 01 33  ...R...W.......3
	0x0020 02 19 01 28 02 08 01 11 02 05 01 56 02 08 01 21  ...(.......V...!
	0x0030 02 0a 01 12 02 08 01 04 02 05 01 a0 01 02 05 01  ................
	0x0040 1a 02 05 01 19 02 17 01 11 02 1f 00              ............
go.string."Time passed [%v]" SRODATA dupok size=16
	0x0000 54 69 6d 65 20 70 61 73 73 65 64 20 5b 25 76 5d  Time passed [%v]
go.loc."".runNative SDWARFLOC size=0
go.info."".runNative SDWARFINFO size=446
	0x0000 03 22 22 2e 72 75 6e 4e 61 74 69 76 65 00 00 00  ."".runNative...
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 9c  ................
	0x0020 00 00 00 00 01 0a 69 00 6b 00 00 00 00 03 91 b0  ......i.k.......
	0x0030 74 0a 63 6e 6c 00 64 00 00 00 00 03 91 f8 74 0a  t.cnl.d.......t.
	0x0040 7e 52 30 00 64 00 00 00 00 03 91 f8 75 0a 63 74  ~R0.d.......u.ct
	0x0050 78 00 64 00 00 00 00 03 91 b8 76 0a 73 74 61 72  x.d.......v.star
	0x0060 74 00 6d 00 00 00 00 03 91 98 78 0f 65 78 65 63  t.m.......x.exec
	0x0070 00 00 62 00 00 00 00 01 9c 0f 6e 61 6d 65 00 00  ..b.......name..
	0x0080 62 00 00 00 00 02 91 08 14 00 00 00 00 0a 7e 52  b.............~R
	0x0090 30 00 71 00 00 00 00 03 91 98 74 0a 64 75 72 61  0.q.......t.dura
	0x00a0 74 69 6f 6e 00 71 00 00 00 00 03 91 b8 74 0a 7e  tion.q.......t.~
	0x00b0 61 72 67 31 00 72 00 00 00 00 03 91 c8 75 0a 7e  arg1.r.......u.~
	0x00c0 61 72 67 31 00 72 00 00 00 00 03 91 d8 75 0a 7e  arg1.r.......u.~
	0x00d0 61 72 67 30 00 72 00 00 00 00 03 91 e8 75 00 15  arg0.r.......u..
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 0a 6f 00 77 00 00 00 00 03 91 b0 79 00 06 00 00  .o.w.......y....
	0x0100 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0110 00 00 00 00 00 00 64 00 00 00 00 06 00 00 00 00  ......d.........
	0x0120 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0130 00 00 00 00 71 00 00 00 12 00 00 00 00 03 91 c0  ....q...........
	0x0140 74 00 06 00 00 00 00 00 00 00 00 00 00 00 00 00  t...............
	0x0150 00 00 00 00 00 00 00 00 00 00 00 72 00 00 00 12  ...........r....
	0x0160 00 00 00 00 03 91 88 76 12 00 00 00 00 03 91 b0  .......v........
	0x0170 78 12 00 00 00 00 03 91 a8 74 12 00 00 00 00 03  x........t......
	0x0180 91 a8 76 00 06 00 00 00 00 00 00 00 00 00 00 00  ..v.............
	0x0190 00 00 00 00 00 00 00 00 00 00 00 00 00 72 00 00  .............r..
	0x01a0 00 12 00 00 00 00 03 91 c8 78 12 00 00 00 00 03  .........x......
	0x01b0 91 a0 74 12 00 00 00 00 03 91 98 76 00 00        ..t........v..
	rel 14+8 t=1 "".runNative+0
	rel 22+8 t=1 "".runNative+2201
	rel 32+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 41+4 t=28 go.info.int+0
	rel 55+4 t=28 go.info.context.CancelFunc+0
	rel 69+4 t=28 go.info.context.Context+0
	rel 83+4 t=28 go.info.context.Context+0
	rel 99+4 t=28 go.info.time.Time+0
	rel 115+4 t=28 go.info.func("".tera)+0
	rel 129+4 t=28 go.info.string+0
	rel 137+4 t=28 go.range."".runNative+0
	rel 147+4 t=28 go.info.int64+0
	rel 166+4 t=28 go.info.int64+0
	rel 182+4 t=28 go.info.interface {}+0
	rel 198+4 t=28 go.info.interface {}+0
	rel 214+4 t=28 go.info.interface {}+0
	rel 224+8 t=1 "".runNative+2083
	rel 232+8 t=1 "".runNative+2182
	rel 244+4 t=28 go.info."".tera+0
	rel 254+4 t=28 go.info.context.Background$abstract+0
	rel 258+8 t=1 "".runNative+61
	rel 266+8 t=1 "".runNative+68
	rel 274+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 284+4 t=28 go.info.time.Duration.Milliseconds$abstract+0
	rel 288+8 t=1 "".runNative+542
	rel 296+8 t=1 "".runNative+577
	rel 304+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 313+4 t=28 go.info.time.Duration.Milliseconds$abstract+30
	rel 323+4 t=28 go.info.fmt.Printf$abstract+0
	rel 327+8 t=1 "".runNative+827
	rel 335+8 t=1 "".runNative+1041
	rel 343+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 352+4 t=28 go.info.fmt.Printf$abstract+14
	rel 361+4 t=28 go.info.fmt.Printf$abstract+27
	rel 370+4 t=28 go.info.fmt.Printf$abstract+35
	rel 379+4 t=28 go.info.fmt.Printf$abstract+43
	rel 389+4 t=28 go.info.fmt.Println$abstract+0
	rel 393+8 t=1 "".runNative+1541
	rel 401+8 t=1 "".runNative+1729
	rel 409+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 418+4 t=28 go.info.fmt.Println$abstract+15
	rel 427+4 t=28 go.info.fmt.Println$abstract+23
	rel 436+4 t=28 go.info.fmt.Println$abstract+31
go.range."".runNative SDWARFRANGE size=96
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".runNative+343
	rel 8+8 t=50 "".runNative+542
	rel 16+8 t=50 "".runNative+577
	rel 24+8 t=50 "".runNative+827
	rel 32+8 t=50 "".runNative+1041
	rel 40+8 t=50 "".runNative+1541
	rel 48+8 t=50 "".runNative+1729
	rel 56+8 t=50 "".runNative+2083
	rel 64+8 t=50 "".runNative+2182
	rel 72+8 t=50 "".runNative+2191
go.isstmt."".runNative SDWARFMISC size=0
	0x0000 04 1b 04 17 03 03 01 08 02 0e 01 52 02 05 01 57  ...........R...W
	0x0010 02 07 01 19 02 16 01 26 02 04 01 1a 02 02 01 1a  .......&........
	0x0020 02 05 01 0c 02 05 01 5b 02 05 01 19 02 08 01 1b  .......[........
	0x0030 02 08 01 12 02 09 01 d7 01 02 0c 01 0b 02 03 01  ................
	0x0040 60 02 05 01 57 02 08 01 6e 02 05 01 f9 02 02 0c  `...W...n.......
	0x0050 01 0b 02 03 01 46 02 05 01 57 02 08 01 2a 02 08  .....F...W...*..
	0x0060 01 04 02 05 01 a0 01 02 05 01 1a 02 05 01 19 02  ................
	0x0070 17 01 11 02 15 01 05 02 05 01 1e 02 08 01 21 02  ..............!.
	0x0080 0a 01 0d 02 13 00                                ......
go.loc.type..hash.[2]interface {} SDWARFLOC dupok size=0
go.info.type..hash.[2]interface {} SDWARFINFO dupok size=100
	0x0000 03 74 79 70 65 2e 2e 68 61 73 68 2e 5b 32 5d 69  .type..hash.[2]i
	0x0010 6e 74 65 72 66 61 63 65 20 7b 7d 00 00 00 00 00  nterface {}.....
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 00 00  ................
	0x0030 00 00 01 0a 69 00 01 00 00 00 00 02 91 50 0f 70  ....i........P.p
	0x0040 00 00 01 00 00 00 00 01 9c 0f 68 00 00 01 00 00  ..........h.....
	0x0050 00 00 02 91 08 0f 7e 72 32 00 01 01 00 00 00 00  ......~r2.......
	0x0060 02 91 10 00                                      ....
	rel 28+8 t=1 type..hash.[2]interface {}+0
	rel 36+8 t=1 type..hash.[2]interface {}+176
	rel 46+4 t=29 gofile..<autogenerated>+0
	rel 55+4 t=28 go.info.int+0
	rel 67+4 t=28 go.info.*[2]interface {}+0
	rel 78+4 t=28 go.info.uintptr+0
	rel 92+4 t=28 go.info.uintptr+0
go.range.type..hash.[2]interface {} SDWARFRANGE dupok size=0
go.isstmt.type..hash.[2]interface {} SDWARFMISC dupok size=0
	0x0000 04 13 04 0e 03 09 01 14 02 05 01 2f 02 05 01 1b  .........../....
	0x0010 02 05 01 0f 02 0a 00                             .......
go.loc.type..eq.[2]interface {} SDWARFLOC dupok size=0
go.info.type..eq.[2]interface {} SDWARFINFO dupok size=99
	0x0000 03 74 79 70 65 2e 2e 65 71 2e 5b 32 5d 69 6e 74  .type..eq.[2]int
	0x0010 65 72 66 61 63 65 20 7b 7d 00 00 00 00 00 00 00  erface {}.......
	0x0020 00 00 00 00 00 00 00 00 00 00 01 9c 00 00 00 00  ................
	0x0030 01 0a 69 00 01 00 00 00 00 03 91 b8 7f 0f 70 00  ..i...........p.
	0x0040 00 01 00 00 00 00 01 9c 0f 71 00 00 01 00 00 00  .........q......
	0x0050 00 02 91 08 0f 7e 72 32 00 01 01 00 00 00 00 02  .....~r2........
	0x0060 91 10 00                                         ...
	rel 26+8 t=1 type..eq.[2]interface {}+0
	rel 34+8 t=1 type..eq.[2]interface {}+248
	rel 44+4 t=29 gofile..<autogenerated>+0
	rel 53+4 t=28 go.info.int+0
	rel 66+4 t=28 go.info.*[2]interface {}+0
	rel 77+4 t=28 go.info.*[2]interface {}+0
	rel 91+4 t=28 go.info.bool+0
go.range.type..eq.[2]interface {} SDWARFRANGE dupok size=0
go.isstmt.type..eq.[2]interface {} SDWARFMISC dupok size=0
	0x0000 04 13 04 0e 03 05 01 14 02 05 01 5a 02 05 01 1d  ...........Z....
	0x0010 02 05 01 1f 02 05 01 0a 02 0a 00                 ...........
type..hashfunc.[2]interface {} SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type..hash.[2]interface {}+0
type..eqfunc.[2]interface {} SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type..eq.[2]interface {}+0
type..alg.[2]interface {} SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 type..hashfunc.[2]interface {}+0
	rel 8+8 t=1 type..eqfunc.[2]interface {}+0
type..namedata.*[2]interface {}- SRODATA dupok size=19
	0x0000 00 00 10 2a 5b 32 5d 69 6e 74 65 72 66 61 63 65  ...*[2]interface
	0x0010 20 7b 7d                                          {}
type.*[2]interface {} SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 be 73 2d 71 00 08 08 36 00 00 00 00 00 00 00 00  .s-q...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[2]interface {}-+0
	rel 48+8 t=1 type.[2]interface {}+0
runtime.gcbits.0a SRODATA dupok size=1
	0x0000 0a                                               .
type.[2]interface {} SRODATA dupok size=72
	0x0000 20 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00   ....... .......
	0x0010 2c 59 a4 f1 02 08 08 11 00 00 00 00 00 00 00 00  ,Y..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 02 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 type..alg.[2]interface {}+0
	rel 32+8 t=1 runtime.gcbits.0a+0
	rel 40+4 t=5 type..namedata.*[2]interface {}-+0
	rel 44+4 t=6 type.*[2]interface {}+0
	rel 48+8 t=1 type.interface {}+0
	rel 56+8 t=1 type.[]interface {}+0
go.string."\n%s , %v , %v , %v , %v\n" SRODATA dupok size=24
	0x0000 0a 25 73 20 2c 20 25 76 20 2c 20 25 76 20 2c 20  .%s , %v , %v , 
	0x0010 25 76 20 2c 20 25 76 0a                          %v , %v.
go.loc."".trackGC SDWARFLOC size=0
go.info."".trackGC SDWARFINFO size=71
	0x0000 03 22 22 2e 74 72 61 63 6b 47 43 00 00 00 00 00  ."".trackGC.....
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 00 00  ................
	0x0020 00 00 01 0a 26 73 74 61 74 73 00 83 01 00 00 00  ....&stats......
	0x0030 00 03 91 c0 7e 0f 63 61 6c 6c 65 72 00 00 80 01  ....~.caller....
	0x0040 00 00 00 00 01 9c 00                             .......
	rel 12+8 t=1 "".trackGC+0
	rel 20+8 t=1 "".trackGC+942
	rel 30+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 45+4 t=28 go.info.*runtime/debug.GCStats+0
	rel 64+4 t=28 go.info.string+0
go.range."".trackGC SDWARFRANGE size=0
go.isstmt."".trackGC SDWARFMISC size=0
	0x0000 04 1b 04 17 03 11 01 04 02 05 01 37 02 08 01 09  ...........7....
	0x0010 02 0d 01 32 02 05 01 23 02 05 01 1f 02 05 01 16  ...2...#........
	0x0020 02 05 01 44 02 05 01 1f 02 05 01 e1 02 02 05 01  ...D............
	0x0030 1a 02 05 01 19 02 1f 01 31 02 05 01 05 02 0a 00  ........1.......
go.loc.type..hash.[5]interface {} SDWARFLOC dupok size=0
go.info.type..hash.[5]interface {} SDWARFINFO dupok size=100
	0x0000 03 74 79 70 65 2e 2e 68 61 73 68 2e 5b 35 5d 69  .type..hash.[5]i
	0x0010 6e 74 65 72 66 61 63 65 20 7b 7d 00 00 00 00 00  nterface {}.....
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 01 9c 00 00  ................
	0x0030 00 00 01 0a 69 00 01 00 00 00 00 02 91 50 0f 70  ....i........P.p
	0x0040 00 00 01 00 00 00 00 01 9c 0f 68 00 00 01 00 00  ..........h.....
	0x0050 00 00 02 91 08 0f 7e 72 32 00 01 01 00 00 00 00  ......~r2.......
	0x0060 02 91 10 00                                      ....
	rel 28+8 t=1 type..hash.[5]interface {}+0
	rel 36+8 t=1 type..hash.[5]interface {}+176
	rel 46+4 t=29 gofile..<autogenerated>+0
	rel 55+4 t=28 go.info.int+0
	rel 67+4 t=28 go.info.*[5]interface {}+0
	rel 78+4 t=28 go.info.uintptr+0
	rel 92+4 t=28 go.info.uintptr+0
go.range.type..hash.[5]interface {} SDWARFRANGE dupok size=0
go.isstmt.type..hash.[5]interface {} SDWARFMISC dupok size=0
	0x0000 04 13 04 0e 03 09 01 14 02 05 01 2f 02 05 01 1b  .........../....
	0x0010 02 05 01 0f 02 0a 00                             .......
go.loc.type..eq.[5]interface {} SDWARFLOC dupok size=0
go.info.type..eq.[5]interface {} SDWARFINFO dupok size=99
	0x0000 03 74 79 70 65 2e 2e 65 71 2e 5b 35 5d 69 6e 74  .type..eq.[5]int
	0x0010 65 72 66 61 63 65 20 7b 7d 00 00 00 00 00 00 00  erface {}.......
	0x0020 00 00 00 00 00 00 00 00 00 00 01 9c 00 00 00 00  ................
	0x0030 01 0a 69 00 01 00 00 00 00 03 91 b8 7f 0f 70 00  ..i...........p.
	0x0040 00 01 00 00 00 00 01 9c 0f 71 00 00 01 00 00 00  .........q......
	0x0050 00 02 91 08 0f 7e 72 32 00 01 01 00 00 00 00 02  .....~r2........
	0x0060 91 10 00                                         ...
	rel 26+8 t=1 type..eq.[5]interface {}+0
	rel 34+8 t=1 type..eq.[5]interface {}+248
	rel 44+4 t=29 gofile..<autogenerated>+0
	rel 53+4 t=28 go.info.int+0
	rel 66+4 t=28 go.info.*[5]interface {}+0
	rel 77+4 t=28 go.info.*[5]interface {}+0
	rel 91+4 t=28 go.info.bool+0
go.range.type..eq.[5]interface {} SDWARFRANGE dupok size=0
go.isstmt.type..eq.[5]interface {} SDWARFMISC dupok size=0
	0x0000 04 13 04 0e 03 05 01 14 02 05 01 5a 02 05 01 1d  ...........Z....
	0x0010 02 05 01 1f 02 05 01 0a 02 0a 00                 ...........
type..hashfunc.[5]interface {} SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type..hash.[5]interface {}+0
type..eqfunc.[5]interface {} SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type..eq.[5]interface {}+0
type..alg.[5]interface {} SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 type..hashfunc.[5]interface {}+0
	rel 8+8 t=1 type..eqfunc.[5]interface {}+0
type..namedata.*[5]interface {}- SRODATA dupok size=19
	0x0000 00 00 10 2a 5b 35 5d 69 6e 74 65 72 66 61 63 65  ...*[5]interface
	0x0010 20 7b 7d                                          {}
type.*[5]interface {} SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 9d 3f 40 11 00 08 08 36 00 00 00 00 00 00 00 00  .?@....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[5]interface {}-+0
	rel 48+8 t=1 type.[5]interface {}+0
runtime.gcbits.aa02 SRODATA dupok size=2
	0x0000 aa 02                                            ..
type.[5]interface {} SRODATA dupok size=72
	0x0000 50 00 00 00 00 00 00 00 50 00 00 00 00 00 00 00  P.......P.......
	0x0010 d5 23 e7 f2 02 08 08 11 00 00 00 00 00 00 00 00  .#..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 05 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 type..alg.[5]interface {}+0
	rel 32+8 t=1 runtime.gcbits.aa02+0
	rel 40+4 t=5 type..namedata.*[5]interface {}-+0
	rel 44+4 t=6 type.*[5]interface {}+0
	rel 48+8 t=1 type.interface {}+0
	rel 56+8 t=1 type.[]interface {}+0
go.loc."".sum SDWARFLOC size=0
go.info."".sum SDWARFINFO size=153
	0x0000 03 22 22 2e 73 75 6d 00 00 00 00 00 00 00 00 00  ."".sum.........
	0x0010 00 00 00 00 00 00 00 00 01 9c 00 00 00 00 01 0a  ................
	0x0020 66 00 8a 01 00 00 00 00 03 91 a0 7f 0f 64 75 72  f............dur
	0x0030 61 74 69 6f 6e 73 00 00 89 01 00 00 00 00 01 9c  ations..........
	0x0040 0f 7e 72 31 00 01 89 01 00 00 00 00 02 91 18 14  .~r1............
	0x0050 00 00 00 00 0a 7e 52 30 00 8c 01 00 00 00 00 03  .....~R0........
	0x0060 91 98 7f 0a 64 00 8b 01 00 00 00 00 03 91 b0 7f  ....d...........
	0x0070 00 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 8c 00 00 00 12 00  ................
	0x0090 00 00 00 03 91 a8 7f 00 00                       .........
	rel 8+8 t=1 "".sum+0
	rel 16+8 t=1 "".sum+233
	rel 26+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 36+4 t=28 go.info.int64+0
	rel 58+4 t=28 go.info.[]time.Duration+0
	rel 72+4 t=28 go.info.int64+0
	rel 80+4 t=28 go.range."".sum+0
	rel 91+4 t=28 go.info.int64+0
	rel 104+4 t=28 go.info.time.Duration+0
	rel 114+4 t=28 go.info.time.Duration.Microseconds$abstract+0
	rel 118+8 t=1 "".sum+140
	rel 126+8 t=1 "".sum+169
	rel 134+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 143+4 t=28 go.info.time.Duration.Microseconds$abstract+30
go.range."".sum SDWARFRANGE size=48
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".sum+35
	rel 8+8 t=50 "".sum+140
	rel 16+8 t=50 "".sum+169
	rel 24+8 t=50 "".sum+210
go.isstmt."".sum SDWARFMISC size=0
	0x0000 08 0e 03 1a 01 2e 02 05 01 24 02 05 01 08 02 05  .........$......
	0x0010 01 18 02 05 01 15 02 05 01 0a 02 05 01 12 00     ...............
go.loc."".(*micro).GetI SDWARFLOC size=0
go.info."".(*micro).GetI SDWARFINFO size=67
	0x0000 03 22 22 2e 28 2a 6d 69 63 72 6f 29 2e 47 65 74  ."".(*micro).Get
	0x0010 49 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  I...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 73 00 00 0d 00 00  ..........s.....
	0x0030 00 00 01 9c 0f 7e 72 30 00 01 0d 00 00 00 00 02  .....~r0........
	0x0040 91 08 00                                         ...
	rel 18+8 t=1 "".(*micro).GetI+0
	rel 26+8 t=1 "".(*micro).GetI+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 46+4 t=28 go.info.*"".micro+0
	rel 59+4 t=28 go.info.int64+0
go.range."".(*micro).GetI SDWARFRANGE size=0
go.isstmt."".(*micro).GetI SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*micro).GetF SDWARFLOC size=0
go.info."".(*micro).GetF SDWARFINFO size=67
	0x0000 03 22 22 2e 28 2a 6d 69 63 72 6f 29 2e 47 65 74  ."".(*micro).Get
	0x0010 46 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  F...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 73 00 00 11 00 00  ..........s.....
	0x0030 00 00 01 9c 0f 7e 72 30 00 01 11 00 00 00 00 02  .....~r0........
	0x0040 91 08 00                                         ...
	rel 18+8 t=1 "".(*micro).GetF+0
	rel 26+8 t=1 "".(*micro).GetF+28
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 46+4 t=28 go.info.*"".micro+0
	rel 59+4 t=28 go.info.float64+0
go.range."".(*micro).GetF SDWARFRANGE size=0
go.isstmt."".(*micro).GetF SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 0e 00                       .........
go.loc."".(*tiny).GetI SDWARFLOC size=0
go.info."".(*tiny).GetI SDWARFINFO size=66
	0x0000 03 22 22 2e 28 2a 74 69 6e 79 29 2e 47 65 74 49  ."".(*tiny).GetI
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 01 9c 00 00 00 00 01 0f 73 00 00 1b 00 00 00  .........s......
	0x0030 00 01 9c 0f 7e 72 30 00 01 1b 00 00 00 00 02 91  ....~r0.........
	0x0040 08 00                                            ..
	rel 17+8 t=1 "".(*tiny).GetI+0
	rel 25+8 t=1 "".(*tiny).GetI+25
	rel 35+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 45+4 t=28 go.info.*"".tiny+0
	rel 58+4 t=28 go.info.int64+0
go.range."".(*tiny).GetI SDWARFRANGE size=0
go.isstmt."".(*tiny).GetI SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*tiny).GetF SDWARFLOC size=0
go.info."".(*tiny).GetF SDWARFINFO size=66
	0x0000 03 22 22 2e 28 2a 74 69 6e 79 29 2e 47 65 74 46  ."".(*tiny).GetF
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 01 9c 00 00 00 00 01 0f 73 00 00 1f 00 00 00  .........s......
	0x0030 00 01 9c 0f 7e 72 30 00 01 1f 00 00 00 00 02 91  ....~r0.........
	0x0040 08 00                                            ..
	rel 17+8 t=1 "".(*tiny).GetF+0
	rel 25+8 t=1 "".(*tiny).GetF+28
	rel 35+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 45+4 t=28 go.info.*"".tiny+0
	rel 58+4 t=28 go.info.float64+0
go.range."".(*tiny).GetF SDWARFRANGE size=0
go.isstmt."".(*tiny).GetF SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 0e 00                       .........
go.loc."".(*mini).GetI SDWARFLOC size=0
go.info."".(*mini).GetI SDWARFINFO size=66
	0x0000 03 22 22 2e 28 2a 6d 69 6e 69 29 2e 47 65 74 49  ."".(*mini).GetI
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 01 9c 00 00 00 00 01 0f 73 00 00 2f 00 00 00  .........s../...
	0x0030 00 01 9c 0f 7e 72 30 00 01 2f 00 00 00 00 02 91  ....~r0../......
	0x0040 08 00                                            ..
	rel 17+8 t=1 "".(*mini).GetI+0
	rel 25+8 t=1 "".(*mini).GetI+25
	rel 35+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 45+4 t=28 go.info.*"".mini+0
	rel 58+4 t=28 go.info.int64+0
go.range."".(*mini).GetI SDWARFRANGE size=0
go.isstmt."".(*mini).GetI SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*mini).GetF SDWARFLOC size=0
go.info."".(*mini).GetF SDWARFINFO size=66
	0x0000 03 22 22 2e 28 2a 6d 69 6e 69 29 2e 47 65 74 46  ."".(*mini).GetF
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 01 9c 00 00 00 00 01 0f 73 00 00 33 00 00 00  .........s..3...
	0x0030 00 01 9c 0f 7e 72 30 00 01 33 00 00 00 00 02 91  ....~r0..3......
	0x0040 08 00                                            ..
	rel 17+8 t=1 "".(*mini).GetF+0
	rel 25+8 t=1 "".(*mini).GetF+28
	rel 35+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 45+4 t=28 go.info.*"".mini+0
	rel 58+4 t=28 go.info.float64+0
go.range."".(*mini).GetF SDWARFRANGE size=0
go.isstmt."".(*mini).GetF SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 0e 00                       .........
go.loc."".(*mega).GetI SDWARFLOC size=0
go.info."".(*mega).GetI SDWARFINFO size=66
	0x0000 03 22 22 2e 28 2a 6d 65 67 61 29 2e 47 65 74 49  ."".(*mega).GetI
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 01 9c 00 00 00 00 01 0f 73 00 00 5b 00 00 00  .........s..[...
	0x0030 00 01 9c 0f 7e 72 30 00 01 5b 00 00 00 00 02 91  ....~r0..[......
	0x0040 08 00                                            ..
	rel 17+8 t=1 "".(*mega).GetI+0
	rel 25+8 t=1 "".(*mega).GetI+25
	rel 35+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 45+4 t=28 go.info.*"".mega+0
	rel 58+4 t=28 go.info.int64+0
go.range."".(*mega).GetI SDWARFRANGE size=0
go.isstmt."".(*mega).GetI SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*mega).GetF SDWARFLOC size=0
go.info."".(*mega).GetF SDWARFINFO size=66
	0x0000 03 22 22 2e 28 2a 6d 65 67 61 29 2e 47 65 74 46  ."".(*mega).GetF
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 01 9c 00 00 00 00 01 0f 73 00 00 5f 00 00 00  .........s.._...
	0x0030 00 01 9c 0f 7e 72 30 00 01 5f 00 00 00 00 02 91  ....~r0.._......
	0x0040 08 00                                            ..
	rel 17+8 t=1 "".(*mega).GetF+0
	rel 25+8 t=1 "".(*mega).GetF+28
	rel 35+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 45+4 t=28 go.info.*"".mega+0
	rel 58+4 t=28 go.info.float64+0
go.range."".(*mega).GetF SDWARFRANGE size=0
go.isstmt."".(*mega).GetF SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 0e 00                       .........
go.loc."".(*tera).GetI SDWARFLOC size=0
go.info."".(*tera).GetI SDWARFINFO size=68
	0x0000 03 22 22 2e 28 2a 74 65 72 61 29 2e 47 65 74 49  ."".(*tera).GetI
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 01 9c 00 00 00 00 01 0f 73 00 00 eb 01 00 00  .........s......
	0x0030 00 00 01 9c 0f 7e 72 30 00 01 eb 01 00 00 00 00  .....~r0........
	0x0040 02 91 08 00                                      ....
	rel 17+8 t=1 "".(*tera).GetI+0
	rel 25+8 t=1 "".(*tera).GetI+25
	rel 35+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 46+4 t=28 go.info.*"".tera+0
	rel 60+4 t=28 go.info.int64+0
go.range."".(*tera).GetI SDWARFRANGE size=0
go.isstmt."".(*tera).GetI SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*tera).GetF SDWARFLOC size=0
go.info."".(*tera).GetF SDWARFINFO size=68
	0x0000 03 22 22 2e 28 2a 74 65 72 61 29 2e 47 65 74 46  ."".(*tera).GetF
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 01 9c 00 00 00 00 01 0f 73 00 00 ef 01 00 00  .........s......
	0x0030 00 00 01 9c 0f 7e 72 30 00 01 ef 01 00 00 00 00  .....~r0........
	0x0040 02 91 08 00                                      ....
	rel 17+8 t=1 "".(*tera).GetF+0
	rel 25+8 t=1 "".(*tera).GetF+31
	rel 35+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 46+4 t=28 go.info.*"".tera+0
	rel 60+4 t=28 go.info.float64+0
go.range."".(*tera).GetF SDWARFRANGE size=0
go.isstmt."".(*tera).GetF SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_a SDWARFLOC size=0
go.info."".(*giga).get_a SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 61 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  a...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 aa 02 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 aa 02 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_a+0
	rel 26+8 t=1 "".(*giga).get_a+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_a SDWARFRANGE size=0
go.isstmt."".(*giga).get_a SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_b SDWARFLOC size=0
go.info."".(*giga).get_b SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 62 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  b...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 ae 02 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 ae 02 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_b+0
	rel 26+8 t=1 "".(*giga).get_b+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_b SDWARFRANGE size=0
go.isstmt."".(*giga).get_b SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_c SDWARFLOC size=0
go.info."".(*giga).get_c SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 63 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  c...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 b2 02 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 b2 02 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_c+0
	rel 26+8 t=1 "".(*giga).get_c+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_c SDWARFRANGE size=0
go.isstmt."".(*giga).get_c SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_d SDWARFLOC size=0
go.info."".(*giga).get_d SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 64 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  d...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 b6 02 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 b6 02 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_d+0
	rel 26+8 t=1 "".(*giga).get_d+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_d SDWARFRANGE size=0
go.isstmt."".(*giga).get_d SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_e SDWARFLOC size=0
go.info."".(*giga).get_e SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 65 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  e...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 ba 02 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 ba 02 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_e+0
	rel 26+8 t=1 "".(*giga).get_e+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_e SDWARFRANGE size=0
go.isstmt."".(*giga).get_e SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_f SDWARFLOC size=0
go.info."".(*giga).get_f SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 66 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  f...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 be 02 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 be 02 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_f+0
	rel 26+8 t=1 "".(*giga).get_f+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_f SDWARFRANGE size=0
go.isstmt."".(*giga).get_f SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_g SDWARFLOC size=0
go.info."".(*giga).get_g SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 67 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  g...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 c2 02 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 c2 02 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_g+0
	rel 26+8 t=1 "".(*giga).get_g+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_g SDWARFRANGE size=0
go.isstmt."".(*giga).get_g SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_h SDWARFLOC size=0
go.info."".(*giga).get_h SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 68 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  h...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 c6 02 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 c6 02 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_h+0
	rel 26+8 t=1 "".(*giga).get_h+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_h SDWARFRANGE size=0
go.isstmt."".(*giga).get_h SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_i SDWARFLOC size=0
go.info."".(*giga).get_i SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 69 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  i...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 ca 02 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 ca 02 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_i+0
	rel 26+8 t=1 "".(*giga).get_i+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_i SDWARFRANGE size=0
go.isstmt."".(*giga).get_i SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_j SDWARFLOC size=0
go.info."".(*giga).get_j SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 6a 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  j...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 ce 02 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 ce 02 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_j+0
	rel 26+8 t=1 "".(*giga).get_j+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_j SDWARFRANGE size=0
go.isstmt."".(*giga).get_j SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_k SDWARFLOC size=0
go.info."".(*giga).get_k SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 6b 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  k...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 d2 02 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 d2 02 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_k+0
	rel 26+8 t=1 "".(*giga).get_k+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_k SDWARFRANGE size=0
go.isstmt."".(*giga).get_k SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_l SDWARFLOC size=0
go.info."".(*giga).get_l SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 6c 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  l...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 d6 02 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 d6 02 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_l+0
	rel 26+8 t=1 "".(*giga).get_l+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_l SDWARFRANGE size=0
go.isstmt."".(*giga).get_l SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_m SDWARFLOC size=0
go.info."".(*giga).get_m SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 6d 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  m...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 da 02 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 da 02 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_m+0
	rel 26+8 t=1 "".(*giga).get_m+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_m SDWARFRANGE size=0
go.isstmt."".(*giga).get_m SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_n SDWARFLOC size=0
go.info."".(*giga).get_n SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 6e 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  n...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 de 02 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 de 02 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_n+0
	rel 26+8 t=1 "".(*giga).get_n+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_n SDWARFRANGE size=0
go.isstmt."".(*giga).get_n SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_o SDWARFLOC size=0
go.info."".(*giga).get_o SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 6f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  o...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 e2 02 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 e2 02 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_o+0
	rel 26+8 t=1 "".(*giga).get_o+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_o SDWARFRANGE size=0
go.isstmt."".(*giga).get_o SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_p SDWARFLOC size=0
go.info."".(*giga).get_p SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 70 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  p...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 e6 02 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 e6 02 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_p+0
	rel 26+8 t=1 "".(*giga).get_p+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_p SDWARFRANGE size=0
go.isstmt."".(*giga).get_p SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_q SDWARFLOC size=0
go.info."".(*giga).get_q SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 71 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  q...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 ea 02 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 ea 02 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_q+0
	rel 26+8 t=1 "".(*giga).get_q+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_q SDWARFRANGE size=0
go.isstmt."".(*giga).get_q SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_r SDWARFLOC size=0
go.info."".(*giga).get_r SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 72 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  r...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 ee 02 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 ee 02 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_r+0
	rel 26+8 t=1 "".(*giga).get_r+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_r SDWARFRANGE size=0
go.isstmt."".(*giga).get_r SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_s SDWARFLOC size=0
go.info."".(*giga).get_s SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 73 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  s...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 f2 02 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 f2 02 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_s+0
	rel 26+8 t=1 "".(*giga).get_s+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_s SDWARFRANGE size=0
go.isstmt."".(*giga).get_s SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_t SDWARFLOC size=0
go.info."".(*giga).get_t SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 74 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  t...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 f6 02 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 f6 02 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_t+0
	rel 26+8 t=1 "".(*giga).get_t+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_t SDWARFRANGE size=0
go.isstmt."".(*giga).get_t SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_u SDWARFLOC size=0
go.info."".(*giga).get_u SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 75 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  u...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 fa 02 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 fa 02 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_u+0
	rel 26+8 t=1 "".(*giga).get_u+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_u SDWARFRANGE size=0
go.isstmt."".(*giga).get_u SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_v SDWARFLOC size=0
go.info."".(*giga).get_v SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 76 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  v...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 fe 02 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 fe 02 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_v+0
	rel 26+8 t=1 "".(*giga).get_v+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_v SDWARFRANGE size=0
go.isstmt."".(*giga).get_v SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_x SDWARFLOC size=0
go.info."".(*giga).get_x SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 78 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  x...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 82 03 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 82 03 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_x+0
	rel 26+8 t=1 "".(*giga).get_x+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_x SDWARFRANGE size=0
go.isstmt."".(*giga).get_x SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_y SDWARFLOC size=0
go.info."".(*giga).get_y SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 79 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  y...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 86 03 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 86 03 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_y+0
	rel 26+8 t=1 "".(*giga).get_y+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_y SDWARFRANGE size=0
go.isstmt."".(*giga).get_y SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_w SDWARFLOC size=0
go.info."".(*giga).get_w SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 77 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  w...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 8a 03 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 8a 03 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_w+0
	rel 26+8 t=1 "".(*giga).get_w+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_w SDWARFRANGE size=0
go.isstmt."".(*giga).get_w SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_z SDWARFLOC size=0
go.info."".(*giga).get_z SDWARFINFO size=69
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 7a 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  z...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 8e 03 00  ..........o.....
	0x0030 00 00 00 01 9c 0f 7e 72 30 00 01 8e 03 00 00 00  ......~r0.......
	0x0040 00 02 91 08 00                                   .....
	rel 18+8 t=1 "".(*giga).get_z+0
	rel 26+8 t=1 "".(*giga).get_z+25
	rel 36+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 47+4 t=28 go.info.*"".giga+0
	rel 61+4 t=28 go.info.int64+0
go.range."".(*giga).get_z SDWARFRANGE size=0
go.isstmt."".(*giga).get_z SDWARFMISC size=0
	0x0000 04 0e 01 0b 00                                   .....
go.loc."".(*giga).get_aa SDWARFLOC size=0
go.info."".(*giga).get_aa SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 61 61 00 00 00 00 00 00 00 00 00 00 00 00 00 00  aa..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 93 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 93 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_aa+0
	rel 27+8 t=1 "".(*giga).get_aa+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_aa SDWARFRANGE size=0
go.isstmt."".(*giga).get_aa SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_bb SDWARFLOC size=0
go.info."".(*giga).get_bb SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 62 62 00 00 00 00 00 00 00 00 00 00 00 00 00 00  bb..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 97 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 97 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_bb+0
	rel 27+8 t=1 "".(*giga).get_bb+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_bb SDWARFRANGE size=0
go.isstmt."".(*giga).get_bb SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_cc SDWARFLOC size=0
go.info."".(*giga).get_cc SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 63 63 00 00 00 00 00 00 00 00 00 00 00 00 00 00  cc..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 9b 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 9b 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_cc+0
	rel 27+8 t=1 "".(*giga).get_cc+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_cc SDWARFRANGE size=0
go.isstmt."".(*giga).get_cc SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_dd SDWARFLOC size=0
go.info."".(*giga).get_dd SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 64 64 00 00 00 00 00 00 00 00 00 00 00 00 00 00  dd..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 9f 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 9f 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_dd+0
	rel 27+8 t=1 "".(*giga).get_dd+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_dd SDWARFRANGE size=0
go.isstmt."".(*giga).get_dd SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_ee SDWARFLOC size=0
go.info."".(*giga).get_ee SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 65 65 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ee..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 a3 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 a3 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_ee+0
	rel 27+8 t=1 "".(*giga).get_ee+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_ee SDWARFRANGE size=0
go.isstmt."".(*giga).get_ee SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_ff SDWARFLOC size=0
go.info."".(*giga).get_ff SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 66 66 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ff..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 a7 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 a7 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_ff+0
	rel 27+8 t=1 "".(*giga).get_ff+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_ff SDWARFRANGE size=0
go.isstmt."".(*giga).get_ff SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_gg SDWARFLOC size=0
go.info."".(*giga).get_gg SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 67 67 00 00 00 00 00 00 00 00 00 00 00 00 00 00  gg..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 ab 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 ab 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_gg+0
	rel 27+8 t=1 "".(*giga).get_gg+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_gg SDWARFRANGE size=0
go.isstmt."".(*giga).get_gg SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_hh SDWARFLOC size=0
go.info."".(*giga).get_hh SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 68 68 00 00 00 00 00 00 00 00 00 00 00 00 00 00  hh..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 af 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 af 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_hh+0
	rel 27+8 t=1 "".(*giga).get_hh+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_hh SDWARFRANGE size=0
go.isstmt."".(*giga).get_hh SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_ii SDWARFLOC size=0
go.info."".(*giga).get_ii SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 69 69 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ii..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 b3 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 b3 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_ii+0
	rel 27+8 t=1 "".(*giga).get_ii+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_ii SDWARFRANGE size=0
go.isstmt."".(*giga).get_ii SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_jj SDWARFLOC size=0
go.info."".(*giga).get_jj SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 6a 6a 00 00 00 00 00 00 00 00 00 00 00 00 00 00  jj..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 b7 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 b7 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_jj+0
	rel 27+8 t=1 "".(*giga).get_jj+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_jj SDWARFRANGE size=0
go.isstmt."".(*giga).get_jj SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_kk SDWARFLOC size=0
go.info."".(*giga).get_kk SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 6b 6b 00 00 00 00 00 00 00 00 00 00 00 00 00 00  kk..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 bb 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 bb 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_kk+0
	rel 27+8 t=1 "".(*giga).get_kk+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_kk SDWARFRANGE size=0
go.isstmt."".(*giga).get_kk SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_ll SDWARFLOC size=0
go.info."".(*giga).get_ll SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 6c 6c 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ll..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 bf 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 bf 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_ll+0
	rel 27+8 t=1 "".(*giga).get_ll+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_ll SDWARFRANGE size=0
go.isstmt."".(*giga).get_ll SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_mm SDWARFLOC size=0
go.info."".(*giga).get_mm SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 6d 6d 00 00 00 00 00 00 00 00 00 00 00 00 00 00  mm..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 c3 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 c3 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_mm+0
	rel 27+8 t=1 "".(*giga).get_mm+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_mm SDWARFRANGE size=0
go.isstmt."".(*giga).get_mm SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_nn SDWARFLOC size=0
go.info."".(*giga).get_nn SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 6e 6e 00 00 00 00 00 00 00 00 00 00 00 00 00 00  nn..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 c7 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 c7 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_nn+0
	rel 27+8 t=1 "".(*giga).get_nn+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_nn SDWARFRANGE size=0
go.isstmt."".(*giga).get_nn SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_oo SDWARFLOC size=0
go.info."".(*giga).get_oo SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 6f 6f 00 00 00 00 00 00 00 00 00 00 00 00 00 00  oo..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 cb 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 cb 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_oo+0
	rel 27+8 t=1 "".(*giga).get_oo+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_oo SDWARFRANGE size=0
go.isstmt."".(*giga).get_oo SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_pp SDWARFLOC size=0
go.info."".(*giga).get_pp SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 70 70 00 00 00 00 00 00 00 00 00 00 00 00 00 00  pp..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 cf 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 cf 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_pp+0
	rel 27+8 t=1 "".(*giga).get_pp+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_pp SDWARFRANGE size=0
go.isstmt."".(*giga).get_pp SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_qq SDWARFLOC size=0
go.info."".(*giga).get_qq SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 71 71 00 00 00 00 00 00 00 00 00 00 00 00 00 00  qq..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 d3 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 d3 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_qq+0
	rel 27+8 t=1 "".(*giga).get_qq+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_qq SDWARFRANGE size=0
go.isstmt."".(*giga).get_qq SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_rr SDWARFLOC size=0
go.info."".(*giga).get_rr SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 72 72 00 00 00 00 00 00 00 00 00 00 00 00 00 00  rr..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 d7 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 d7 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_rr+0
	rel 27+8 t=1 "".(*giga).get_rr+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_rr SDWARFRANGE size=0
go.isstmt."".(*giga).get_rr SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_ss SDWARFLOC size=0
go.info."".(*giga).get_ss SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 73 73 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ss..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 db 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 db 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_ss+0
	rel 27+8 t=1 "".(*giga).get_ss+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_ss SDWARFRANGE size=0
go.isstmt."".(*giga).get_ss SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_tt SDWARFLOC size=0
go.info."".(*giga).get_tt SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 74 74 00 00 00 00 00 00 00 00 00 00 00 00 00 00  tt..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 df 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 df 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_tt+0
	rel 27+8 t=1 "".(*giga).get_tt+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_tt SDWARFRANGE size=0
go.isstmt."".(*giga).get_tt SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_uu SDWARFLOC size=0
go.info."".(*giga).get_uu SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 75 75 00 00 00 00 00 00 00 00 00 00 00 00 00 00  uu..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 e3 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 e3 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_uu+0
	rel 27+8 t=1 "".(*giga).get_uu+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_uu SDWARFRANGE size=0
go.isstmt."".(*giga).get_uu SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_vv SDWARFLOC size=0
go.info."".(*giga).get_vv SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 76 76 00 00 00 00 00 00 00 00 00 00 00 00 00 00  vv..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 e7 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 e7 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_vv+0
	rel 27+8 t=1 "".(*giga).get_vv+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_vv SDWARFRANGE size=0
go.isstmt."".(*giga).get_vv SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_xx SDWARFLOC size=0
go.info."".(*giga).get_xx SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 78 78 00 00 00 00 00 00 00 00 00 00 00 00 00 00  xx..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 eb 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 eb 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_xx+0
	rel 27+8 t=1 "".(*giga).get_xx+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_xx SDWARFRANGE size=0
go.isstmt."".(*giga).get_xx SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_yy SDWARFLOC size=0
go.info."".(*giga).get_yy SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 79 79 00 00 00 00 00 00 00 00 00 00 00 00 00 00  yy..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 ef 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 ef 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_yy+0
	rel 27+8 t=1 "".(*giga).get_yy+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_yy SDWARFRANGE size=0
go.isstmt."".(*giga).get_yy SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_ww SDWARFLOC size=0
go.info."".(*giga).get_ww SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 77 77 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ww..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 f3 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 f3 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_ww+0
	rel 27+8 t=1 "".(*giga).get_ww+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_ww SDWARFRANGE size=0
go.isstmt."".(*giga).get_ww SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".(*giga).get_zz SDWARFLOC size=0
go.info."".(*giga).get_zz SDWARFINFO size=70
	0x0000 03 22 22 2e 28 2a 67 69 67 61 29 2e 67 65 74 5f  ."".(*giga).get_
	0x0010 7a 7a 00 00 00 00 00 00 00 00 00 00 00 00 00 00  zz..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 6f 00 00 f7 03  ...........o....
	0x0030 00 00 00 00 01 9c 0f 7e 72 30 00 01 f7 03 00 00  .......~r0......
	0x0040 00 00 02 91 08 00                                ......
	rel 19+8 t=1 "".(*giga).get_zz+0
	rel 27+8 t=1 "".(*giga).get_zz+31
	rel 37+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/model.go+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 62+4 t=28 go.info.float64+0
go.range."".(*giga).get_zz SDWARFRANGE size=0
go.isstmt."".(*giga).get_zz SDWARFMISC size=0
	0x0000 04 03 01 06 02 05 01 11 00                       .........
go.loc."".TestTeraValueReceiverRoutine.func1 SDWARFLOC size=0
go.info."".TestTeraValueReceiverRoutine.func1 SDWARFINFO size=154
	0x0000 03 22 22 2e 54 65 73 74 54 65 72 61 56 61 6c 75  ."".TestTeraValu
	0x0010 65 52 65 63 65 69 76 65 72 52 6f 75 74 69 6e 65  eReceiverRoutine
	0x0020 2e 66 75 6e 63 31 00 00 00 00 00 00 00 00 00 00  .func1..........
	0x0030 00 00 00 00 00 00 00 01 9c 00 00 00 00 01 0a 7e  ...............~
	0x0040 52 30 00 25 00 00 00 00 03 91 e0 78 0f 6f 00 00  R0.%.......x.o..
	0x0050 11 00 00 00 00 01 9c 07 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 12 00 00 00 12 00 00 00 00 03 91 b0  ................
	0x0070 79 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00  y...............
	0x0080 00 00 00 00 00 00 00 00 00 00 25 00 00 00 12 00  ..........%.....
	0x0090 00 00 00 03 91 f0 78 00 00 00                    ......x...
	rel 39+8 t=1 "".TestTeraValueReceiverRoutine.func1+0
	rel 47+8 t=1 "".TestTeraValueReceiverRoutine.func1+349
	rel 57+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 68+4 t=28 go.info.error+0
	rel 81+4 t=28 go.info."".tera+0
	rel 88+4 t=28 go.info."".calcTera$abstract+0
	rel 92+4 t=28 go.range."".TestTeraValueReceiverRoutine.func1+0
	rel 96+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 105+4 t=28 go.info."".calcTera$abstract+13
	rel 114+4 t=28 go.info.errors.New$abstract+0
	rel 118+8 t=1 "".TestTeraValueReceiverRoutine.func1+156
	rel 126+8 t=1 "".TestTeraValueReceiverRoutine.func1+201
	rel 134+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 143+4 t=28 go.info.errors.New$abstract+14
go.range."".TestTeraValueReceiverRoutine.func1 SDWARFRANGE size=64
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".TestTeraValueReceiverRoutine.func1+101
	rel 8+8 t=50 "".TestTeraValueReceiverRoutine.func1+156
	rel 16+8 t=50 "".TestTeraValueReceiverRoutine.func1+201
	rel 24+8 t=50 "".TestTeraValueReceiverRoutine.func1+230
	rel 32+8 t=50 "".TestTeraValueReceiverRoutine.func1+293
	rel 40+8 t=50 "".TestTeraValueReceiverRoutine.func1+318
go.isstmt."".TestTeraValueReceiverRoutine.func1 SDWARFMISC size=0
	0x0000 04 1b 04 17 03 08 01 2b 02 09 01 11 02 07 01 16  .......+........
	0x0010 02 03 01 2a 02 07 01 16 02 05 01 3a 02 08 01 11  ...*.......:....
	0x0020 02 06 01 0f 02 0a 00                             .......
go.loc."".TestTeraPointerReceiverRoutine.func1 SDWARFLOC size=0
go.info."".TestTeraPointerReceiverRoutine.func1 SDWARFINFO size=156
	0x0000 03 22 22 2e 54 65 73 74 54 65 72 61 50 6f 69 6e  ."".TestTeraPoin
	0x0010 74 65 72 52 65 63 65 69 76 65 72 52 6f 75 74 69  terReceiverRouti
	0x0020 6e 65 2e 66 75 6e 63 31 00 00 00 00 00 00 00 00  ne.func1........
	0x0030 00 00 00 00 00 00 00 00 00 01 9c 00 00 00 00 01  ................
	0x0040 0a 7e 52 30 00 51 00 00 00 00 03 91 a0 7f 0f 6f  .~R0.Q.........o
	0x0050 00 00 18 00 00 00 00 01 9c 07 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 19 00 00 00 12 00 00 00 00 03  ................
	0x0070 91 f0 7e 06 00 00 00 00 00 00 00 00 00 00 00 00  ..~.............
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 51 00 00 00  ............Q...
	0x0090 12 00 00 00 00 03 91 b0 7f 00 00 00              ............
	rel 41+8 t=1 "".TestTeraPointerReceiverRoutine.func1+0
	rel 49+8 t=1 "".TestTeraPointerReceiverRoutine.func1+349
	rel 59+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 70+4 t=28 go.info.error+0
	rel 83+4 t=28 go.info."".tera+0
	rel 90+4 t=28 go.info."".calcTeraP$abstract+0
	rel 94+4 t=28 go.range."".TestTeraPointerReceiverRoutine.func1+0
	rel 98+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 107+4 t=28 go.info."".calcTeraP$abstract+14
	rel 116+4 t=28 go.info.errors.New$abstract+0
	rel 120+8 t=1 "".TestTeraPointerReceiverRoutine.func1+142
	rel 128+8 t=1 "".TestTeraPointerReceiverRoutine.func1+187
	rel 136+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 145+4 t=28 go.info.errors.New$abstract+14
go.range."".TestTeraPointerReceiverRoutine.func1 SDWARFRANGE size=80
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".TestTeraPointerReceiverRoutine.func1+81
	rel 8+8 t=50 "".TestTeraPointerReceiverRoutine.func1+88
	rel 16+8 t=50 "".TestTeraPointerReceiverRoutine.func1+88
	rel 24+8 t=50 "".TestTeraPointerReceiverRoutine.func1+142
	rel 32+8 t=50 "".TestTeraPointerReceiverRoutine.func1+187
	rel 40+8 t=50 "".TestTeraPointerReceiverRoutine.func1+222
	rel 48+8 t=50 "".TestTeraPointerReceiverRoutine.func1+285
	rel 56+8 t=50 "".TestTeraPointerReceiverRoutine.func1+318
go.isstmt."".TestTeraPointerReceiverRoutine.func1 SDWARFMISC size=0
	0x0000 04 18 04 17 03 08 01 1a 02 05 01 1b 02 07 01 16  ................
	0x0010 02 03 01 2a 02 07 01 1c 02 05 01 3a 02 05 01 1c  ...*.......:....
	0x0020 02 06 01 0f 02 0a 00                             .......
go.loc."".TestTeraInterfaceReceiverRoutine.func1 SDWARFLOC size=0
go.info."".TestTeraInterfaceReceiverRoutine.func1 SDWARFINFO size=90
	0x0000 03 22 22 2e 54 65 73 74 54 65 72 61 49 6e 74 65  ."".TestTeraInte
	0x0010 72 66 61 63 65 52 65 63 65 69 76 65 72 52 6f 75  rfaceReceiverRou
	0x0020 74 69 6e 65 2e 66 75 6e 63 31 00 00 00 00 00 00  tine.func1......
	0x0030 00 00 00 00 00 00 00 00 00 00 00 01 9c 00 00 00  ................
	0x0040 00 01 0a 26 6f 00 20 00 00 00 00 02 91 68 0f 6f  ...&o. ......h.o
	0x0050 00 00 20 00 00 00 00 01 9c 00                    .. .......
	rel 43+8 t=1 "".TestTeraInterfaceReceiverRoutine.func1+0
	rel 51+8 t=1 "".TestTeraInterfaceReceiverRoutine.func1+180
	rel 61+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 71+4 t=28 go.info.*"".tera+0
	rel 83+4 t=28 go.info."".tera+0
go.range."".TestTeraInterfaceReceiverRoutine.func1 SDWARFRANGE size=0
go.isstmt."".TestTeraInterfaceReceiverRoutine.func1 SDWARFMISC size=0
	0x0000 04 13 04 0e 03 07 01 04 02 05 01 2f 02 05 01 15  .........../....
	0x0010 02 0f 01 1a 02 05 01 02 02 0a 00                 ...........
go.loc."".TestTeraValueReceiverNative.func1 SDWARFLOC size=0
go.info."".TestTeraValueReceiverNative.func1 SDWARFINFO size=153
	0x0000 03 22 22 2e 54 65 73 74 54 65 72 61 56 61 6c 75  ."".TestTeraValu
	0x0010 65 52 65 63 65 69 76 65 72 4e 61 74 69 76 65 2e  eReceiverNative.
	0x0020 66 75 6e 63 31 00 00 00 00 00 00 00 00 00 00 00  func1...........
	0x0030 00 00 00 00 00 00 01 9c 00 00 00 00 01 0a 7e 52  ..............~R
	0x0040 30 00 25 00 00 00 00 03 91 e0 78 0f 6f 00 00 28  0.%.......x.o..(
	0x0050 00 00 00 00 01 9c 07 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 29 00 00 00 12 00 00 00 00 03 91 b0 79  ...)...........y
	0x0070 06 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 25 00 00 00 12 00 00  .........%......
	0x0090 00 00 03 91 f0 78 00 00 00                       .....x...
	rel 38+8 t=1 "".TestTeraValueReceiverNative.func1+0
	rel 46+8 t=1 "".TestTeraValueReceiverNative.func1+349
	rel 56+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 67+4 t=28 go.info.error+0
	rel 80+4 t=28 go.info."".tera+0
	rel 87+4 t=28 go.info."".calcTera$abstract+0
	rel 91+4 t=28 go.range."".TestTeraValueReceiverNative.func1+0
	rel 95+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 104+4 t=28 go.info."".calcTera$abstract+13
	rel 113+4 t=28 go.info.errors.New$abstract+0
	rel 117+8 t=1 "".TestTeraValueReceiverNative.func1+156
	rel 125+8 t=1 "".TestTeraValueReceiverNative.func1+201
	rel 133+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 142+4 t=28 go.info.errors.New$abstract+14
go.range."".TestTeraValueReceiverNative.func1 SDWARFRANGE size=64
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".TestTeraValueReceiverNative.func1+101
	rel 8+8 t=50 "".TestTeraValueReceiverNative.func1+156
	rel 16+8 t=50 "".TestTeraValueReceiverNative.func1+201
	rel 24+8 t=50 "".TestTeraValueReceiverNative.func1+230
	rel 32+8 t=50 "".TestTeraValueReceiverNative.func1+293
	rel 40+8 t=50 "".TestTeraValueReceiverNative.func1+318
go.isstmt."".TestTeraValueReceiverNative.func1 SDWARFMISC size=0
	0x0000 04 1b 04 17 03 08 01 2b 02 09 01 11 02 07 01 16  .......+........
	0x0010 02 03 01 2a 02 07 01 16 02 05 01 3a 02 08 01 11  ...*.......:....
	0x0020 02 06 01 0f 02 0a 00                             .......
go.loc."".TestTeraPointerReceiverNative.func1 SDWARFLOC size=0
go.info."".TestTeraPointerReceiverNative.func1 SDWARFINFO size=155
	0x0000 03 22 22 2e 54 65 73 74 54 65 72 61 50 6f 69 6e  ."".TestTeraPoin
	0x0010 74 65 72 52 65 63 65 69 76 65 72 4e 61 74 69 76  terReceiverNativ
	0x0020 65 2e 66 75 6e 63 31 00 00 00 00 00 00 00 00 00  e.func1.........
	0x0030 00 00 00 00 00 00 00 00 01 9c 00 00 00 00 01 0a  ................
	0x0040 7e 52 30 00 51 00 00 00 00 03 91 a0 7f 0f 6f 00  ~R0.Q.........o.
	0x0050 00 2f 00 00 00 00 01 9c 07 00 00 00 00 00 00 00  ./..............
	0x0060 00 00 00 00 00 30 00 00 00 12 00 00 00 00 03 91  .....0..........
	0x0070 f0 7e 06 00 00 00 00 00 00 00 00 00 00 00 00 00  .~..............
	0x0080 00 00 00 00 00 00 00 00 00 00 00 51 00 00 00 12  ...........Q....
	0x0090 00 00 00 00 03 91 b0 7f 00 00 00                 ...........
	rel 40+8 t=1 "".TestTeraPointerReceiverNative.func1+0
	rel 48+8 t=1 "".TestTeraPointerReceiverNative.func1+349
	rel 58+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 69+4 t=28 go.info.error+0
	rel 82+4 t=28 go.info."".tera+0
	rel 89+4 t=28 go.info."".calcTeraP$abstract+0
	rel 93+4 t=28 go.range."".TestTeraPointerReceiverNative.func1+0
	rel 97+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 106+4 t=28 go.info."".calcTeraP$abstract+14
	rel 115+4 t=28 go.info.errors.New$abstract+0
	rel 119+8 t=1 "".TestTeraPointerReceiverNative.func1+142
	rel 127+8 t=1 "".TestTeraPointerReceiverNative.func1+187
	rel 135+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/func.go+0
	rel 144+4 t=28 go.info.errors.New$abstract+14
go.range."".TestTeraPointerReceiverNative.func1 SDWARFRANGE size=80
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".TestTeraPointerReceiverNative.func1+81
	rel 8+8 t=50 "".TestTeraPointerReceiverNative.func1+88
	rel 16+8 t=50 "".TestTeraPointerReceiverNative.func1+88
	rel 24+8 t=50 "".TestTeraPointerReceiverNative.func1+142
	rel 32+8 t=50 "".TestTeraPointerReceiverNative.func1+187
	rel 40+8 t=50 "".TestTeraPointerReceiverNative.func1+222
	rel 48+8 t=50 "".TestTeraPointerReceiverNative.func1+285
	rel 56+8 t=50 "".TestTeraPointerReceiverNative.func1+318
go.isstmt."".TestTeraPointerReceiverNative.func1 SDWARFMISC size=0
	0x0000 04 18 04 17 03 08 01 1a 02 05 01 1b 02 07 01 16  ................
	0x0010 02 03 01 2a 02 07 01 1c 02 05 01 3a 02 05 01 1c  ...*.......:....
	0x0020 02 06 01 0f 02 0a 00                             .......
go.loc."".TestTeraInterfaceReceiverNative.func1 SDWARFLOC size=0
go.info."".TestTeraInterfaceReceiverNative.func1 SDWARFINFO size=89
	0x0000 03 22 22 2e 54 65 73 74 54 65 72 61 49 6e 74 65  ."".TestTeraInte
	0x0010 72 66 61 63 65 52 65 63 65 69 76 65 72 4e 61 74  rfaceReceiverNat
	0x0020 69 76 65 2e 66 75 6e 63 31 00 00 00 00 00 00 00  ive.func1.......
	0x0030 00 00 00 00 00 00 00 00 00 00 01 9c 00 00 00 00  ................
	0x0040 01 0a 26 6f 00 36 00 00 00 00 02 91 68 0f 6f 00  ..&o.6......h.o.
	0x0050 00 36 00 00 00 00 01 9c 00                       .6.......
	rel 42+8 t=1 "".TestTeraInterfaceReceiverNative.func1+0
	rel 50+8 t=1 "".TestTeraInterfaceReceiverNative.func1+180
	rel 60+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 70+4 t=28 go.info.*"".tera+0
	rel 82+4 t=28 go.info."".tera+0
go.range."".TestTeraInterfaceReceiverNative.func1 SDWARFRANGE size=0
go.isstmt."".TestTeraInterfaceReceiverNative.func1 SDWARFMISC size=0
	0x0000 04 13 04 0e 03 07 01 04 02 05 01 2f 02 05 01 15  .........../....
	0x0010 02 0f 01 1a 02 05 01 02 02 0a 00                 ...........
go.loc."".runRoutine.func1 SDWARFLOC size=0
go.info."".runRoutine.func1 SDWARFINFO size=109
	0x0000 03 22 22 2e 72 75 6e 52 6f 75 74 69 6e 65 2e 66  ."".runRoutine.f
	0x0010 75 6e 63 31 00 00 00 00 00 00 00 00 00 00 00 00  unc1............
	0x0020 00 00 00 00 00 01 9c 00 00 00 00 01 0a 7e 52 30  .............~R0
	0x0030 00 42 00 00 00 00 02 91 60 0f 63 6e 6c 00 00 43  .B......`.cnl..C
	0x0040 00 00 00 00 01 9c 06 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 42  ...............B
	0x0060 00 00 00 12 00 00 00 00 02 91 58 00 00           ..........X..
	rel 21+8 t=1 "".runRoutine.func1+0
	rel 29+8 t=1 "".runRoutine.func1+142
	rel 39+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 50+4 t=28 go.info.<-chan time.Time+0
	rel 64+4 t=28 go.info.context.CancelFunc+0
	rel 71+4 t=28 go.info.time.After$abstract+0
	rel 75+8 t=1 "".runRoutine.func1+53
	rel 83+8 t=1 "".runRoutine.func1+82
	rel 91+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 100+4 t=28 go.info.time.After$abstract+14
go.range."".runRoutine.func1 SDWARFRANGE size=0
go.isstmt."".runRoutine.func1 SDWARFMISC size=0
	0x0000 04 0f 04 0e 03 0a 01 0e 02 05 01 04 02 05 01 0f  ................
	0x0010 02 05 01 14 02 0a 01 03 02 16 00                 ...........
go.loc."".runRoutine.func2 SDWARFLOC size=0
go.info."".runRoutine.func2 SDWARFINFO size=336
	0x0000 03 22 22 2e 72 75 6e 52 6f 75 74 69 6e 65 2e 66  ."".runRoutine.f
	0x0010 75 6e 63 32 00 00 00 00 00 00 00 00 00 00 00 00  unc2............
	0x0020 00 00 00 00 00 01 9c 00 00 00 00 01 0a 73 74 61  .............sta
	0x0030 72 74 00 47 00 00 00 00 03 91 b0 78 0f 63 74 78  rt.G.......x.ctx
	0x0040 00 00 4a 00 00 00 00 01 9c 0f 63 68 00 00 4d 00  ..J.......ch..M.
	0x0050 00 00 00 02 91 10 14 00 00 00 00 0a 7e 52 30 00  ............~R0.
	0x0060 4b 00 00 00 00 03 91 b8 75 0a 64 75 72 61 74 69  K.......u.durati
	0x0070 6f 6e 00 4b 00 00 00 00 03 91 d0 75 0a 7e 61 72  on.K.......u.~ar
	0x0080 67 31 00 4c 00 00 00 00 03 91 c0 76 0a 7e 61 72  g1.L.......v.~ar
	0x0090 67 31 00 4c 00 00 00 00 03 91 d0 76 0a 7e 61 72  g1.L.......v.~ar
	0x00a0 67 30 00 4c 00 00 00 00 03 91 e0 76 00 06 00 00  g0.L.......v....
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 4b 00 00 00 12 00 00 00 00 03  ......K.........
	0x00d0 91 d8 75 00 06 00 00 00 00 00 00 00 00 00 00 00  ..u.............
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 4c 00 00  .............L..
	0x00f0 00 12 00 00 00 00 03 91 f0 76 12 00 00 00 00 03  .........v......
	0x0100 91 e0 78 12 00 00 00 00 03 91 c8 75 12 00 00 00  ..x........u....
	0x0110 00 03 91 80 77 00 06 00 00 00 00 00 00 00 00 00  ....w...........
	0x0120 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 4c  ...............L
	0x0130 00 00 00 12 00 00 00 00 03 91 c8 78 12 00 00 00  ...........x....
	0x0140 00 03 91 c0 75 12 00 00 00 00 03 91 90 77 00 00  ....u........w..
	rel 21+8 t=1 "".runRoutine.func2+0
	rel 29+8 t=1 "".runRoutine.func2+1655
	rel 39+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 52+4 t=28 go.info.time.Time+0
	rel 67+4 t=28 go.info.context.Context+0
	rel 79+4 t=28 go.info.chan "".tera+0
	rel 87+4 t=28 go.range."".runRoutine.func2+0
	rel 97+4 t=28 go.info.int64+0
	rel 116+4 t=28 go.info.int64+0
	rel 132+4 t=28 go.info.interface {}+0
	rel 148+4 t=28 go.info.interface {}+0
	rel 164+4 t=28 go.info.interface {}+0
	rel 174+4 t=28 go.info.time.Duration.Milliseconds$abstract+0
	rel 178+8 t=1 "".runRoutine.func2+294
	rel 186+8 t=1 "".runRoutine.func2+329
	rel 194+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 203+4 t=28 go.info.time.Duration.Milliseconds$abstract+30
	rel 213+4 t=28 go.info.fmt.Printf$abstract+0
	rel 217+8 t=1 "".runRoutine.func2+579
	rel 225+8 t=1 "".runRoutine.func2+793
	rel 233+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 242+4 t=28 go.info.fmt.Printf$abstract+14
	rel 251+4 t=28 go.info.fmt.Printf$abstract+27
	rel 260+4 t=28 go.info.fmt.Printf$abstract+35
	rel 269+4 t=28 go.info.fmt.Printf$abstract+43
	rel 279+4 t=28 go.info.fmt.Println$abstract+0
	rel 283+8 t=1 "".runRoutine.func2+1293
	rel 291+8 t=1 "".runRoutine.func2+1481
	rel 299+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 308+4 t=28 go.info.fmt.Println$abstract+15
	rel 317+4 t=28 go.info.fmt.Println$abstract+23
	rel 326+4 t=28 go.info.fmt.Println$abstract+31
go.range."".runRoutine.func2 SDWARFRANGE size=96
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=50 "".runRoutine.func2+95
	rel 8+8 t=50 "".runRoutine.func2+294
	rel 16+8 t=50 "".runRoutine.func2+329
	rel 24+8 t=50 "".runRoutine.func2+602
	rel 32+8 t=50 "".runRoutine.func2+793
	rel 40+8 t=50 "".runRoutine.func2+1316
	rel 48+8 t=50 "".runRoutine.func2+1481
	rel 56+8 t=50 "".runRoutine.func2+1569
	rel 64+8 t=50 "".runRoutine.func2+1636
	rel 72+8 t=50 "".runRoutine.func2+1645
go.isstmt."".runRoutine.func2 SDWARFMISC size=0
	0x0000 04 1b 04 17 03 05 01 26 02 04 01 1a 02 02 01 1a  .......&........
	0x0010 02 05 01 0c 02 05 01 5b 02 05 01 19 02 08 01 1b  .......[........
	0x0020 02 08 01 12 02 09 01 a0 01 02 08 01 46 02 03 01  ............F...
	0x0030 60 02 05 01 57 02 08 01 6e 02 05 01 c2 02 02 08  `...W...n.......
	0x0040 01 46 02 03 01 46 02 05 01 57 02 08 01 2a 02 08  .F...F...W...*..
	0x0050 01 04 02 15 01 05 02 05 01 37 02 05 01 02 02 13  .........7......
	0x0060 00                                               .
go.loc."".runNative.func1 SDWARFLOC size=0
go.info."".runNative.func1 SDWARFINFO size=108
	0x0000 03 22 22 2e 72 75 6e 4e 61 74 69 76 65 2e 66 75  ."".runNative.fu
	0x0010 6e 63 31 00 00 00 00 00 00 00 00 00 00 00 00 00  nc1.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0a 7e 52 30 00  ............~R0.
	0x0030 67 00 00 00 00 02 91 60 0f 63 6e 6c 00 00 68 00  g......`.cnl..h.
	0x0040 00 00 00 01 9c 06 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 67 00  ..............g.
	0x0060 00 00 12 00 00 00 00 02 91 58 00 00              .........X..
	rel 20+8 t=1 "".runNative.func1+0
	rel 28+8 t=1 "".runNative.func1+142
	rel 38+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 49+4 t=28 go.info.<-chan time.Time+0
	rel 63+4 t=28 go.info.context.CancelFunc+0
	rel 70+4 t=28 go.info.time.After$abstract+0
	rel 74+8 t=1 "".runNative.func1+53
	rel 82+8 t=1 "".runNative.func1+82
	rel 90+4 t=29 gofile../Users/vangeliskatikaridis/DEV/go-bench/pointer_vs_value/code/gc_test.go+0
	rel 99+4 t=28 go.info.time.After$abstract+14
go.range."".runNative.func1 SDWARFRANGE size=0
go.isstmt."".runNative.func1 SDWARFMISC size=0
	0x0000 04 0f 04 0e 03 0a 01 0e 02 05 01 04 02 05 01 0f  ................
	0x0010 02 05 01 14 02 0a 01 03 02 16 00                 ...........
""..inittask SNOPTRDATA size=104
	0x0000 00 00 00 00 00 00 00 00 0a 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 testing..inittask+0
	rel 32+8 t=1 log..inittask+0
	rel 40+8 t=1 math/rand..inittask+0
	rel 48+8 t=1 strconv..inittask+0
	rel 56+8 t=1 errors..inittask+0
	rel 64+8 t=1 context..inittask+0
	rel 72+8 t=1 fmt..inittask+0
	rel 80+8 t=1 runtime..inittask+0
	rel 88+8 t=1 runtime/debug..inittask+0
	rel 96+8 t=1 time..inittask+0
"".F SNOPTRBSS size=8
""..stmp_0 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_1 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_2 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_3 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_4 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_5 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_6 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_7 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_8 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_9 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_10 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_11 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_12 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_13 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_14 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_15 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_16 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_17 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_18 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_19 SRODATA size=96
""..stmp_20 SRODATA size=352
""..stmp_21 SRODATA size=832
""..stmp_22 SRODATA size=416
""..stmp_23 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_24 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_25 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_26 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_27 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_28 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_29 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_30 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_31 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_32 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_33 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_34 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_35 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_36 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
""..stmp_37 SRODATA size=16
	0x0000 00 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 go.string."Error"+0
"".TestTeraInterfaceReceiverNative.func1·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 "".TestTeraInterfaceReceiverNative.func1+0
"".TestTeraInterfaceReceiverRoutine.func1·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 "".TestTeraInterfaceReceiverRoutine.func1+0
"".TestTeraPointerReceiverNative.func1·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 "".TestTeraPointerReceiverNative.func1+0
"".TestTeraPointerReceiverRoutine.func1·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 "".TestTeraPointerReceiverRoutine.func1+0
"".TestTeraValueReceiverNative.func1·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 "".TestTeraValueReceiverNative.func1+0
"".TestTeraValueReceiverRoutine.func1·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 "".TestTeraValueReceiverRoutine.func1+0
"".runNative.func1·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 "".runNative.func1+0
"".runRoutine.func1·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 "".runRoutine.func1+0
"".runRoutine.func2·f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 "".runRoutine.func2+0
go.loc.type..hash."".giga SDWARFLOC dupok size=0
go.info.type..hash."".giga SDWARFINFO dupok size=81
	0x0000 03 74 79 70 65 2e 2e 68 61 73 68 2e 22 22 2e 67  .type..hash."".g
	0x0010 69 67 61 00 00 00 00 00 00 00 00 00 00 00 00 00  iga.............
	0x0020 00 00 00 00 01 9c 00 00 00 00 01 0f 70 00 00 01  ............p...
	0x0030 00 00 00 00 01 9c 0f 68 00 00 01 00 00 00 00 02  .......h........
	0x0040 91 08 0f 7e 72 32 00 01 01 00 00 00 00 02 91 10  ...~r2..........
	0x0050 00                                               .
	rel 20+8 t=1 type..hash."".giga+0
	rel 28+8 t=1 type..hash."".giga+1599
	rel 38+4 t=29 gofile..<autogenerated>+0
	rel 48+4 t=28 go.info.*"".giga+0
	rel 59+4 t=28 go.info.uintptr+0
	rel 73+4 t=28 go.info.uintptr+0
go.range.type..hash."".giga SDWARFRANGE dupok size=0
go.isstmt.type..hash."".giga SDWARFMISC dupok size=0
	0x0000 04 18 04 17 03 0c 01 27 02 05 01 31 02 05 01 31  .......'...1...1
	0x0010 02 05 01 31 02 05 01 31 02 05 01 31 02 05 01 31  ...1...1...1...1
	0x0020 02 05 01 34 02 05 01 34 02 05 01 34 02 05 01 34  ...4...4...4...4
	0x0030 02 05 01 34 02 05 01 34 02 05 01 34 02 05 01 34  ...4...4...4...4
	0x0040 02 05 01 34 02 05 01 34 02 05 01 34 02 05 01 34  ...4...4...4...4
	0x0050 02 05 01 34 02 05 01 34 02 05 01 34 02 05 01 31  ...4...4...4...1
	0x0060 02 05 01 31 02 05 01 31 02 05 01 31 02 05 01 31  ...1...1...1...1
	0x0070 02 05 01 25 02 0a 00                             ...%...
go.loc.type..eq."".giga SDWARFLOC dupok size=0
go.info.type..eq."".giga SDWARFINFO dupok size=79
	0x0000 03 74 79 70 65 2e 2e 65 71 2e 22 22 2e 67 69 67  .type..eq."".gig
	0x0010 61 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  a...............
	0x0020 00 00 01 9c 00 00 00 00 01 0f 70 00 00 01 00 00  ..........p.....
	0x0030 00 00 01 9c 0f 71 00 00 01 00 00 00 00 02 91 08  .....q..........
	0x0040 0f 7e 72 32 00 01 01 00 00 00 00 02 91 10 00     .~r2...........
	rel 18+8 t=1 type..eq."".giga+0
	rel 26+8 t=1 type..eq."".giga+1849
	rel 36+4 t=29 gofile..<autogenerated>+0
	rel 46+4 t=28 go.info.*"".giga+0
	rel 57+4 t=28 go.info.*"".giga+0
	rel 71+4 t=28 go.info.bool+0
go.range.type..eq."".giga SDWARFRANGE dupok size=0
go.isstmt.type..eq."".giga SDWARFMISC dupok size=0
	0x0000 04 13 04 0e 03 05 01 2b 02 05 01 ca 0c 02 05 01  .......+........
	0x0010 8a 01 02 0a 00                                   .....
type..hashfunc."".giga SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type..hash."".giga+0
type..eqfunc."".giga SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type..eq."".giga+0
type..alg."".giga SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 type..hashfunc."".giga+0
	rel 8+8 t=1 type..eqfunc."".giga+0
type..namedata.*code.giga- SRODATA dupok size=13
	0x0000 00 00 0a 2a 63 6f 64 65 2e 67 69 67 61           ...*code.giga
type..namedata.*func(*code.giga) int64- SRODATA dupok size=26
	0x0000 00 00 17 2a 66 75 6e 63 28 2a 63 6f 64 65 2e 67  ...*func(*code.g
	0x0010 69 67 61 29 20 69 6e 74 36 34                    iga) int64
type.*func(*"".giga) int64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 d8 d3 33 61 00 08 08 36 00 00 00 00 00 00 00 00  ..3a...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(*code.giga) int64-+0
	rel 48+8 t=1 type.func(*"".giga) int64+0
type.func(*"".giga) int64 SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 b1 ab 5b 9a 02 08 08 33 00 00 00 00 00 00 00 00  ..[....3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(*code.giga) int64-+0
	rel 44+4 t=6 type.*func(*"".giga) int64+0
	rel 56+8 t=1 type.*"".giga+0
	rel 64+8 t=1 type.int64+0
type..namedata.*func(*code.giga) float64- SRODATA dupok size=28
	0x0000 00 00 19 2a 66 75 6e 63 28 2a 63 6f 64 65 2e 67  ...*func(*code.g
	0x0010 69 67 61 29 20 66 6c 6f 61 74 36 34              iga) float64
type.*func(*"".giga) float64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 af db a2 ee 00 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(*code.giga) float64-+0
	rel 48+8 t=1 type.func(*"".giga) float64+0
type.func(*"".giga) float64 SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 9d 94 4a 69 02 08 08 33 00 00 00 00 00 00 00 00  ..Ji...3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(*code.giga) float64-+0
	rel 44+4 t=6 type.*func(*"".giga) float64+0
	rel 56+8 t=1 type.*"".giga+0
	rel 64+8 t=1 type.float64+0
type..namedata.get_a- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 61                          ...get_a
type..namedata.get_aa- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 61 61                       ...get_aa
type..namedata.get_b- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 62                          ...get_b
type..namedata.get_bb- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 62 62                       ...get_bb
type..namedata.get_c- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 63                          ...get_c
type..namedata.get_cc- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 63 63                       ...get_cc
type..namedata.get_d- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 64                          ...get_d
type..namedata.get_dd- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 64 64                       ...get_dd
type..namedata.get_e- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 65                          ...get_e
type..namedata.get_ee- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 65 65                       ...get_ee
type..namedata.get_f- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 66                          ...get_f
type..namedata.get_ff- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 66 66                       ...get_ff
type..namedata.get_g- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 67                          ...get_g
type..namedata.get_gg- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 67 67                       ...get_gg
type..namedata.get_h- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 68                          ...get_h
type..namedata.get_hh- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 68 68                       ...get_hh
type..namedata.get_i- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 69                          ...get_i
type..namedata.get_ii- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 69 69                       ...get_ii
type..namedata.get_j- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 6a                          ...get_j
type..namedata.get_jj- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 6a 6a                       ...get_jj
type..namedata.get_k- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 6b                          ...get_k
type..namedata.get_kk- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 6b 6b                       ...get_kk
type..namedata.get_l- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 6c                          ...get_l
type..namedata.get_ll- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 6c 6c                       ...get_ll
type..namedata.get_m- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 6d                          ...get_m
type..namedata.get_mm- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 6d 6d                       ...get_mm
type..namedata.get_n- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 6e                          ...get_n
type..namedata.get_nn- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 6e 6e                       ...get_nn
type..namedata.get_o- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 6f                          ...get_o
type..namedata.get_oo- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 6f 6f                       ...get_oo
type..namedata.get_p- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 70                          ...get_p
type..namedata.get_pp- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 70 70                       ...get_pp
type..namedata.get_q- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 71                          ...get_q
type..namedata.get_qq- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 71 71                       ...get_qq
type..namedata.get_r- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 72                          ...get_r
type..namedata.get_rr- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 72 72                       ...get_rr
type..namedata.get_s- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 73                          ...get_s
type..namedata.get_ss- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 73 73                       ...get_ss
type..namedata.get_t- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 74                          ...get_t
type..namedata.get_tt- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 74 74                       ...get_tt
type..namedata.get_u- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 75                          ...get_u
type..namedata.get_uu- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 75 75                       ...get_uu
type..namedata.get_v- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 76                          ...get_v
type..namedata.get_vv- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 76 76                       ...get_vv
type..namedata.get_w- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 77                          ...get_w
type..namedata.get_ww- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 77 77                       ...get_ww
type..namedata.get_x- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 78                          ...get_x
type..namedata.get_xx- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 78 78                       ...get_xx
type..namedata.get_y- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 79                          ...get_y
type..namedata.get_yy- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 79 79                       ...get_yy
type..namedata.get_z- SRODATA dupok size=8
	0x0000 00 00 05 67 65 74 5f 7a                          ...get_z
type..namedata.get_zz- SRODATA dupok size=9
	0x0000 00 00 06 67 65 74 5f 7a 7a                       ...get_zz
type.*"".giga SRODATA size=904
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 7a 0a 29 6b 01 08 08 36 00 00 00 00 00 00 00 00  z.)k...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 34 00 00 00  ............4...
	0x0040 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0120 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0130 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0140 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0150 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0160 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0170 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0180 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0190 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0200 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0210 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0220 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0230 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0240 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0250 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0260 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0270 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0280 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0290 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0300 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0310 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0320 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0330 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0340 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0350 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0360 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0370 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0380 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*code.giga-+0
	rel 48+8 t=1 type."".giga+0
	rel 56+4 t=5 type..importpath."".+0
	rel 72+4 t=5 type..namedata.get_a-+0
	rel 76+4 t=24 type.func() int64+0
	rel 80+4 t=24 "".(*giga).get_a+0
	rel 84+4 t=24 "".(*giga).get_a+0
	rel 88+4 t=5 type..namedata.get_aa-+0
	rel 92+4 t=24 type.func() float64+0
	rel 96+4 t=24 "".(*giga).get_aa+0
	rel 100+4 t=24 "".(*giga).get_aa+0
	rel 104+4 t=5 type..namedata.get_b-+0
	rel 108+4 t=24 type.func() int64+0
	rel 112+4 t=24 "".(*giga).get_b+0
	rel 116+4 t=24 "".(*giga).get_b+0
	rel 120+4 t=5 type..namedata.get_bb-+0
	rel 124+4 t=24 type.func() float64+0
	rel 128+4 t=24 "".(*giga).get_bb+0
	rel 132+4 t=24 "".(*giga).get_bb+0
	rel 136+4 t=5 type..namedata.get_c-+0
	rel 140+4 t=24 type.func() int64+0
	rel 144+4 t=24 "".(*giga).get_c+0
	rel 148+4 t=24 "".(*giga).get_c+0
	rel 152+4 t=5 type..namedata.get_cc-+0
	rel 156+4 t=24 type.func() float64+0
	rel 160+4 t=24 "".(*giga).get_cc+0
	rel 164+4 t=24 "".(*giga).get_cc+0
	rel 168+4 t=5 type..namedata.get_d-+0
	rel 172+4 t=24 type.func() int64+0
	rel 176+4 t=24 "".(*giga).get_d+0
	rel 180+4 t=24 "".(*giga).get_d+0
	rel 184+4 t=5 type..namedata.get_dd-+0
	rel 188+4 t=24 type.func() float64+0
	rel 192+4 t=24 "".(*giga).get_dd+0
	rel 196+4 t=24 "".(*giga).get_dd+0
	rel 200+4 t=5 type..namedata.get_e-+0
	rel 204+4 t=24 type.func() int64+0
	rel 208+4 t=24 "".(*giga).get_e+0
	rel 212+4 t=24 "".(*giga).get_e+0
	rel 216+4 t=5 type..namedata.get_ee-+0
	rel 220+4 t=24 type.func() float64+0
	rel 224+4 t=24 "".(*giga).get_ee+0
	rel 228+4 t=24 "".(*giga).get_ee+0
	rel 232+4 t=5 type..namedata.get_f-+0
	rel 236+4 t=24 type.func() int64+0
	rel 240+4 t=24 "".(*giga).get_f+0
	rel 244+4 t=24 "".(*giga).get_f+0
	rel 248+4 t=5 type..namedata.get_ff-+0
	rel 252+4 t=24 type.func() float64+0
	rel 256+4 t=24 "".(*giga).get_ff+0
	rel 260+4 t=24 "".(*giga).get_ff+0
	rel 264+4 t=5 type..namedata.get_g-+0
	rel 268+4 t=24 type.func() int64+0
	rel 272+4 t=24 "".(*giga).get_g+0
	rel 276+4 t=24 "".(*giga).get_g+0
	rel 280+4 t=5 type..namedata.get_gg-+0
	rel 284+4 t=24 type.func() float64+0
	rel 288+4 t=24 "".(*giga).get_gg+0
	rel 292+4 t=24 "".(*giga).get_gg+0
	rel 296+4 t=5 type..namedata.get_h-+0
	rel 300+4 t=24 type.func() int64+0
	rel 304+4 t=24 "".(*giga).get_h+0
	rel 308+4 t=24 "".(*giga).get_h+0
	rel 312+4 t=5 type..namedata.get_hh-+0
	rel 316+4 t=24 type.func() float64+0
	rel 320+4 t=24 "".(*giga).get_hh+0
	rel 324+4 t=24 "".(*giga).get_hh+0
	rel 328+4 t=5 type..namedata.get_i-+0
	rel 332+4 t=24 type.func() int64+0
	rel 336+4 t=24 "".(*giga).get_i+0
	rel 340+4 t=24 "".(*giga).get_i+0
	rel 344+4 t=5 type..namedata.get_ii-+0
	rel 348+4 t=24 type.func() float64+0
	rel 352+4 t=24 "".(*giga).get_ii+0
	rel 356+4 t=24 "".(*giga).get_ii+0
	rel 360+4 t=5 type..namedata.get_j-+0
	rel 364+4 t=24 type.func() int64+0
	rel 368+4 t=24 "".(*giga).get_j+0
	rel 372+4 t=24 "".(*giga).get_j+0
	rel 376+4 t=5 type..namedata.get_jj-+0
	rel 380+4 t=24 type.func() float64+0
	rel 384+4 t=24 "".(*giga).get_jj+0
	rel 388+4 t=24 "".(*giga).get_jj+0
	rel 392+4 t=5 type..namedata.get_k-+0
	rel 396+4 t=24 type.func() int64+0
	rel 400+4 t=24 "".(*giga).get_k+0
	rel 404+4 t=24 "".(*giga).get_k+0
	rel 408+4 t=5 type..namedata.get_kk-+0
	rel 412+4 t=24 type.func() float64+0
	rel 416+4 t=24 "".(*giga).get_kk+0
	rel 420+4 t=24 "".(*giga).get_kk+0
	rel 424+4 t=5 type..namedata.get_l-+0
	rel 428+4 t=24 type.func() int64+0
	rel 432+4 t=24 "".(*giga).get_l+0
	rel 436+4 t=24 "".(*giga).get_l+0
	rel 440+4 t=5 type..namedata.get_ll-+0
	rel 444+4 t=24 type.func() float64+0
	rel 448+4 t=24 "".(*giga).get_ll+0
	rel 452+4 t=24 "".(*giga).get_ll+0
	rel 456+4 t=5 type..namedata.get_m-+0
	rel 460+4 t=24 type.func() int64+0
	rel 464+4 t=24 "".(*giga).get_m+0
	rel 468+4 t=24 "".(*giga).get_m+0
	rel 472+4 t=5 type..namedata.get_mm-+0
	rel 476+4 t=24 type.func() float64+0
	rel 480+4 t=24 "".(*giga).get_mm+0
	rel 484+4 t=24 "".(*giga).get_mm+0
	rel 488+4 t=5 type..namedata.get_n-+0
	rel 492+4 t=24 type.func() int64+0
	rel 496+4 t=24 "".(*giga).get_n+0
	rel 500+4 t=24 "".(*giga).get_n+0
	rel 504+4 t=5 type..namedata.get_nn-+0
	rel 508+4 t=24 type.func() float64+0
	rel 512+4 t=24 "".(*giga).get_nn+0
	rel 516+4 t=24 "".(*giga).get_nn+0
	rel 520+4 t=5 type..namedata.get_o-+0
	rel 524+4 t=24 type.func() int64+0
	rel 528+4 t=24 "".(*giga).get_o+0
	rel 532+4 t=24 "".(*giga).get_o+0
	rel 536+4 t=5 type..namedata.get_oo-+0
	rel 540+4 t=24 type.func() float64+0
	rel 544+4 t=24 "".(*giga).get_oo+0
	rel 548+4 t=24 "".(*giga).get_oo+0
	rel 552+4 t=5 type..namedata.get_p-+0
	rel 556+4 t=24 type.func() int64+0
	rel 560+4 t=24 "".(*giga).get_p+0
	rel 564+4 t=24 "".(*giga).get_p+0
	rel 568+4 t=5 type..namedata.get_pp-+0
	rel 572+4 t=24 type.func() float64+0
	rel 576+4 t=24 "".(*giga).get_pp+0
	rel 580+4 t=24 "".(*giga).get_pp+0
	rel 584+4 t=5 type..namedata.get_q-+0
	rel 588+4 t=24 type.func() int64+0
	rel 592+4 t=24 "".(*giga).get_q+0
	rel 596+4 t=24 "".(*giga).get_q+0
	rel 600+4 t=5 type..namedata.get_qq-+0
	rel 604+4 t=24 type.func() float64+0
	rel 608+4 t=24 "".(*giga).get_qq+0
	rel 612+4 t=24 "".(*giga).get_qq+0
	rel 616+4 t=5 type..namedata.get_r-+0
	rel 620+4 t=24 type.func() int64+0
	rel 624+4 t=24 "".(*giga).get_r+0
	rel 628+4 t=24 "".(*giga).get_r+0
	rel 632+4 t=5 type..namedata.get_rr-+0
	rel 636+4 t=24 type.func() float64+0
	rel 640+4 t=24 "".(*giga).get_rr+0
	rel 644+4 t=24 "".(*giga).get_rr+0
	rel 648+4 t=5 type..namedata.get_s-+0
	rel 652+4 t=24 type.func() int64+0
	rel 656+4 t=24 "".(*giga).get_s+0
	rel 660+4 t=24 "".(*giga).get_s+0
	rel 664+4 t=5 type..namedata.get_ss-+0
	rel 668+4 t=24 type.func() float64+0
	rel 672+4 t=24 "".(*giga).get_ss+0
	rel 676+4 t=24 "".(*giga).get_ss+0
	rel 680+4 t=5 type..namedata.get_t-+0
	rel 684+4 t=24 type.func() int64+0
	rel 688+4 t=24 "".(*giga).get_t+0
	rel 692+4 t=24 "".(*giga).get_t+0
	rel 696+4 t=5 type..namedata.get_tt-+0
	rel 700+4 t=24 type.func() float64+0
	rel 704+4 t=24 "".(*giga).get_tt+0
	rel 708+4 t=24 "".(*giga).get_tt+0
	rel 712+4 t=5 type..namedata.get_u-+0
	rel 716+4 t=24 type.func() int64+0
	rel 720+4 t=24 "".(*giga).get_u+0
	rel 724+4 t=24 "".(*giga).get_u+0
	rel 728+4 t=5 type..namedata.get_uu-+0
	rel 732+4 t=24 type.func() float64+0
	rel 736+4 t=24 "".(*giga).get_uu+0
	rel 740+4 t=24 "".(*giga).get_uu+0
	rel 744+4 t=5 type..namedata.get_v-+0
	rel 748+4 t=24 type.func() int64+0
	rel 752+4 t=24 "".(*giga).get_v+0
	rel 756+4 t=24 "".(*giga).get_v+0
	rel 760+4 t=5 type..namedata.get_vv-+0
	rel 764+4 t=24 type.func() float64+0
	rel 768+4 t=24 "".(*giga).get_vv+0
	rel 772+4 t=24 "".(*giga).get_vv+0
	rel 776+4 t=5 type..namedata.get_w-+0
	rel 780+4 t=24 type.func() int64+0
	rel 784+4 t=24 "".(*giga).get_w+0
	rel 788+4 t=24 "".(*giga).get_w+0
	rel 792+4 t=5 type..namedata.get_ww-+0
	rel 796+4 t=24 type.func() float64+0
	rel 800+4 t=24 "".(*giga).get_ww+0
	rel 804+4 t=24 "".(*giga).get_ww+0
	rel 808+4 t=5 type..namedata.get_x-+0
	rel 812+4 t=24 type.func() int64+0
	rel 816+4 t=24 "".(*giga).get_x+0
	rel 820+4 t=24 "".(*giga).get_x+0
	rel 824+4 t=5 type..namedata.get_xx-+0
	rel 828+4 t=24 type.func() float64+0
	rel 832+4 t=24 "".(*giga).get_xx+0
	rel 836+4 t=24 "".(*giga).get_xx+0
	rel 840+4 t=5 type..namedata.get_y-+0
	rel 844+4 t=24 type.func() int64+0
	rel 848+4 t=24 "".(*giga).get_y+0
	rel 852+4 t=24 "".(*giga).get_y+0
	rel 856+4 t=5 type..namedata.get_yy-+0
	rel 860+4 t=24 type.func() float64+0
	rel 864+4 t=24 "".(*giga).get_yy+0
	rel 868+4 t=24 "".(*giga).get_yy+0
	rel 872+4 t=5 type..namedata.get_z-+0
	rel 876+4 t=24 type.func() int64+0
	rel 880+4 t=24 "".(*giga).get_z+0
	rel 884+4 t=24 "".(*giga).get_z+0
	rel 888+4 t=5 type..namedata.get_zz-+0
	rel 892+4 t=24 type.func() float64+0
	rel 896+4 t=24 "".(*giga).get_zz+0
	rel 900+4 t=24 "".(*giga).get_zz+0
runtime.gcbits. SRODATA dupok size=0
type."".giga SRODATA size=1344
	0x0000 a0 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 e3 89 52 01 07 08 08 19 00 00 00 00 00 00 00 00  ..R.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 34 00 00 00 00 00 00 00 34 00 00 00 00 00 00 00  4.......4.......
	0x0050 00 00 00 00 00 00 00 00 f0 04 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x00b0 00 00 00 00 00 00 00 00 30 00 00 00 00 00 00 00  ........0.......
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x00e0 00 00 00 00 00 00 00 00 50 00 00 00 00 00 00 00  ........P.......
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 60 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  `...............
	0x0110 00 00 00 00 00 00 00 00 70 00 00 00 00 00 00 00  ........p.......
	0x0120 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0130 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0140 00 00 00 00 00 00 00 00 90 00 00 00 00 00 00 00  ................
	0x0150 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0160 a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0170 00 00 00 00 00 00 00 00 b0 00 00 00 00 00 00 00  ................
	0x0180 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0190 c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01a0 00 00 00 00 00 00 00 00 d0 00 00 00 00 00 00 00  ................
	0x01b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01c0 e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01d0 00 00 00 00 00 00 00 00 f0 00 00 00 00 00 00 00  ................
	0x01e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01f0 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0200 00 00 00 00 00 00 00 00 10 01 00 00 00 00 00 00  ................
	0x0210 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0220 20 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x0230 00 00 00 00 00 00 00 00 30 01 00 00 00 00 00 00  ........0.......
	0x0240 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0250 40 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x0260 00 00 00 00 00 00 00 00 50 01 00 00 00 00 00 00  ........P.......
	0x0270 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0280 60 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  `...............
	0x0290 00 00 00 00 00 00 00 00 70 01 00 00 00 00 00 00  ........p.......
	0x02a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02b0 80 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02c0 00 00 00 00 00 00 00 00 90 01 00 00 00 00 00 00  ................
	0x02d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02e0 a0 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02f0 00 00 00 00 00 00 00 00 b0 01 00 00 00 00 00 00  ................
	0x0300 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0310 c0 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0320 00 00 00 00 00 00 00 00 d0 01 00 00 00 00 00 00  ................
	0x0330 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0340 e0 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0350 00 00 00 00 00 00 00 00 f0 01 00 00 00 00 00 00  ................
	0x0360 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0370 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0380 00 00 00 00 00 00 00 00 10 02 00 00 00 00 00 00  ................
	0x0390 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03a0 20 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x03b0 00 00 00 00 00 00 00 00 30 02 00 00 00 00 00 00  ........0.......
	0x03c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03d0 40 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x03e0 00 00 00 00 00 00 00 00 50 02 00 00 00 00 00 00  ........P.......
	0x03f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0400 60 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00  `...............
	0x0410 00 00 00 00 00 00 00 00 70 02 00 00 00 00 00 00  ........p.......
	0x0420 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0430 80 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0440 00 00 00 00 00 00 00 00 90 02 00 00 00 00 00 00  ................
	0x0450 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0460 a0 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0470 00 00 00 00 00 00 00 00 b0 02 00 00 00 00 00 00  ................
	0x0480 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0490 c0 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x04a0 00 00 00 00 00 00 00 00 d0 02 00 00 00 00 00 00  ................
	0x04b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x04c0 e0 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x04d0 00 00 00 00 00 00 00 00 f0 02 00 00 00 00 00 00  ................
	0x04e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x04f0 00 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0500 00 00 00 00 00 00 00 00 10 03 00 00 00 00 00 00  ................
	0x0510 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0520 20 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x0530 00 00 00 00 00 00 00 00 30 03 00 00 00 00 00 00  ........0.......
	rel 24+8 t=1 type..alg."".giga+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type..namedata.*code.giga-+0
	rel 44+4 t=5 type.*"".giga+0
	rel 48+8 t=1 type..importpath."".+0
	rel 56+8 t=1 type."".giga+96
	rel 80+4 t=5 type..importpath."".+0
	rel 96+8 t=1 type..namedata.a-+0
	rel 104+8 t=1 type.int64+0
	rel 120+8 t=1 type..namedata.b-+0
	rel 128+8 t=1 type.int64+0
	rel 144+8 t=1 type..namedata.c-+0
	rel 152+8 t=1 type.int64+0
	rel 168+8 t=1 type..namedata.d-+0
	rel 176+8 t=1 type.int64+0
	rel 192+8 t=1 type..namedata.e-+0
	rel 200+8 t=1 type.int64+0
	rel 216+8 t=1 type..namedata.f-+0
	rel 224+8 t=1 type.int64+0
	rel 240+8 t=1 type..namedata.g-+0
	rel 248+8 t=1 type.int64+0
	rel 264+8 t=1 type..namedata.h-+0
	rel 272+8 t=1 type.int64+0
	rel 288+8 t=1 type..namedata.i-+0
	rel 296+8 t=1 type.int64+0
	rel 312+8 t=1 type..namedata.j-+0
	rel 320+8 t=1 type.int64+0
	rel 336+8 t=1 type..namedata.k-+0
	rel 344+8 t=1 type.int64+0
	rel 360+8 t=1 type..namedata.l-+0
	rel 368+8 t=1 type.int64+0
	rel 384+8 t=1 type..namedata.m-+0
	rel 392+8 t=1 type.int64+0
	rel 408+8 t=1 type..namedata.n-+0
	rel 416+8 t=1 type.int64+0
	rel 432+8 t=1 type..namedata.o-+0
	rel 440+8 t=1 type.int64+0
	rel 456+8 t=1 type..namedata.p-+0
	rel 464+8 t=1 type.int64+0
	rel 480+8 t=1 type..namedata.q-+0
	rel 488+8 t=1 type.int64+0
	rel 504+8 t=1 type..namedata.r-+0
	rel 512+8 t=1 type.int64+0
	rel 528+8 t=1 type..namedata.s-+0
	rel 536+8 t=1 type.int64+0
	rel 552+8 t=1 type..namedata.t-+0
	rel 560+8 t=1 type.int64+0
	rel 576+8 t=1 type..namedata.u-+0
	rel 584+8 t=1 type.int64+0
	rel 600+8 t=1 type..namedata.v-+0
	rel 608+8 t=1 type.int64+0
	rel 624+8 t=1 type..namedata.x-+0
	rel 632+8 t=1 type.int64+0
	rel 648+8 t=1 type..namedata.y-+0
	rel 656+8 t=1 type.int64+0
	rel 672+8 t=1 type..namedata.w-+0
	rel 680+8 t=1 type.int64+0
	rel 696+8 t=1 type..namedata.z-+0
	rel 704+8 t=1 type.int64+0
	rel 720+8 t=1 type..namedata.aa-+0
	rel 728+8 t=1 type.float64+0
	rel 744+8 t=1 type..namedata.bb-+0
	rel 752+8 t=1 type.float64+0
	rel 768+8 t=1 type..namedata.cc-+0
	rel 776+8 t=1 type.float64+0
	rel 792+8 t=1 type..namedata.dd-+0
	rel 800+8 t=1 type.float64+0
	rel 816+8 t=1 type..namedata.ee-+0
	rel 824+8 t=1 type.float64+0
	rel 840+8 t=1 type..namedata.ff-+0
	rel 848+8 t=1 type.float64+0
	rel 864+8 t=1 type..namedata.gg-+0
	rel 872+8 t=1 type.float64+0
	rel 888+8 t=1 type..namedata.hh-+0
	rel 896+8 t=1 type.float64+0
	rel 912+8 t=1 type..namedata.ii-+0
	rel 920+8 t=1 type.float64+0
	rel 936+8 t=1 type..namedata.jj-+0
	rel 944+8 t=1 type.float64+0
	rel 960+8 t=1 type..namedata.kk-+0
	rel 968+8 t=1 type.float64+0
	rel 984+8 t=1 type..namedata.ll-+0
	rel 992+8 t=1 type.float64+0
	rel 1008+8 t=1 type..namedata.mm-+0
	rel 1016+8 t=1 type.float64+0
	rel 1032+8 t=1 type..namedata.nn-+0
	rel 1040+8 t=1 type.float64+0
	rel 1056+8 t=1 type..namedata.oo-+0
	rel 1064+8 t=1 type.float64+0
	rel 1080+8 t=1 type..namedata.pp-+0
	rel 1088+8 t=1 type.float64+0
	rel 1104+8 t=1 type..namedata.qq-+0
	rel 1112+8 t=1 type.float64+0
	rel 1128+8 t=1 type..namedata.rr-+0
	rel 1136+8 t=1 type.float64+0
	rel 1152+8 t=1 type..namedata.ss-+0
	rel 1160+8 t=1 type.float64+0
	rel 1176+8 t=1 type..namedata.tt-+0
	rel 1184+8 t=1 type.float64+0
	rel 1200+8 t=1 type..namedata.uu-+0
	rel 1208+8 t=1 type.float64+0
	rel 1224+8 t=1 type..namedata.vv-+0
	rel 1232+8 t=1 type.float64+0
	rel 1248+8 t=1 type..namedata.xx-+0
	rel 1256+8 t=1 type.float64+0
	rel 1272+8 t=1 type..namedata.yy-+0
	rel 1280+8 t=1 type.float64+0
	rel 1296+8 t=1 type..namedata.ww-+0
	rel 1304+8 t=1 type.float64+0
	rel 1320+8 t=1 type..namedata.zz-+0
	rel 1328+8 t=1 type.float64+0
type..namedata.*code.gigantic- SRODATA dupok size=17
	0x0000 00 00 0e 2a 63 6f 64 65 2e 67 69 67 61 6e 74 69  ...*code.giganti
	0x0010 63                                               c
type.*"".gigantic SRODATA size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f5 63 cb d6 00 08 08 36 00 00 00 00 00 00 00 00  .c.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*code.gigantic-+0
	rel 48+8 t=1 type."".gigantic+0
type."".gigantic SRODATA size=512
	0x0000 10 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0010 d3 db 3c 2f 07 08 08 14 00 00 00 00 00 00 00 00  ..</............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 34 00 00 00 00 00 00 00 34 00 00 00 00 00 00 00  4.......4.......
	0x0050 00 00 00 00 00 00 00 00 b0 01 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0120 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0130 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0140 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0150 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0160 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0170 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0180 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0190 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 24+8 t=1 runtime.algarray+128
	rel 32+8 t=1 runtime.gcbits.02+0
	rel 40+4 t=5 type..namedata.*code.gigantic-+0
	rel 44+4 t=5 type.*"".gigantic+0
	rel 48+8 t=1 type..importpath."".+0
	rel 56+8 t=1 type."".gigantic+96
	rel 80+4 t=5 type..importpath."".+0
	rel 96+4 t=5 type..namedata.get_a-+0
	rel 100+4 t=5 type.func() int64+0
	rel 104+4 t=5 type..namedata.get_aa-+0
	rel 108+4 t=5 type.func() float64+0
	rel 112+4 t=5 type..namedata.get_b-+0
	rel 116+4 t=5 type.func() int64+0
	rel 120+4 t=5 type..namedata.get_bb-+0
	rel 124+4 t=5 type.func() float64+0
	rel 128+4 t=5 type..namedata.get_c-+0
	rel 132+4 t=5 type.func() int64+0
	rel 136+4 t=5 type..namedata.get_cc-+0
	rel 140+4 t=5 type.func() float64+0
	rel 144+4 t=5 type..namedata.get_d-+0
	rel 148+4 t=5 type.func() int64+0
	rel 152+4 t=5 type..namedata.get_dd-+0
	rel 156+4 t=5 type.func() float64+0
	rel 160+4 t=5 type..namedata.get_e-+0
	rel 164+4 t=5 type.func() int64+0
	rel 168+4 t=5 type..namedata.get_ee-+0
	rel 172+4 t=5 type.func() float64+0
	rel 176+4 t=5 type..namedata.get_f-+0
	rel 180+4 t=5 type.func() int64+0
	rel 184+4 t=5 type..namedata.get_ff-+0
	rel 188+4 t=5 type.func() float64+0
	rel 192+4 t=5 type..namedata.get_g-+0
	rel 196+4 t=5 type.func() int64+0
	rel 200+4 t=5 type..namedata.get_gg-+0
	rel 204+4 t=5 type.func() float64+0
	rel 208+4 t=5 type..namedata.get_h-+0
	rel 212+4 t=5 type.func() int64+0
	rel 216+4 t=5 type..namedata.get_hh-+0
	rel 220+4 t=5 type.func() float64+0
	rel 224+4 t=5 type..namedata.get_i-+0
	rel 228+4 t=5 type.func() int64+0
	rel 232+4 t=5 type..namedata.get_ii-+0
	rel 236+4 t=5 type.func() float64+0
	rel 240+4 t=5 type..namedata.get_j-+0
	rel 244+4 t=5 type.func() int64+0
	rel 248+4 t=5 type..namedata.get_jj-+0
	rel 252+4 t=5 type.func() float64+0
	rel 256+4 t=5 type..namedata.get_k-+0
	rel 260+4 t=5 type.func() int64+0
	rel 264+4 t=5 type..namedata.get_kk-+0
	rel 268+4 t=5 type.func() float64+0
	rel 272+4 t=5 type..namedata.get_l-+0
	rel 276+4 t=5 type.func() int64+0
	rel 280+4 t=5 type..namedata.get_ll-+0
	rel 284+4 t=5 type.func() float64+0
	rel 288+4 t=5 type..namedata.get_m-+0
	rel 292+4 t=5 type.func() int64+0
	rel 296+4 t=5 type..namedata.get_mm-+0
	rel 300+4 t=5 type.func() float64+0
	rel 304+4 t=5 type..namedata.get_n-+0
	rel 308+4 t=5 type.func() int64+0
	rel 312+4 t=5 type..namedata.get_nn-+0
	rel 316+4 t=5 type.func() float64+0
	rel 320+4 t=5 type..namedata.get_o-+0
	rel 324+4 t=5 type.func() int64+0
	rel 328+4 t=5 type..namedata.get_oo-+0
	rel 332+4 t=5 type.func() float64+0
	rel 336+4 t=5 type..namedata.get_p-+0
	rel 340+4 t=5 type.func() int64+0
	rel 344+4 t=5 type..namedata.get_pp-+0
	rel 348+4 t=5 type.func() float64+0
	rel 352+4 t=5 type..namedata.get_q-+0
	rel 356+4 t=5 type.func() int64+0
	rel 360+4 t=5 type..namedata.get_qq-+0
	rel 364+4 t=5 type.func() float64+0
	rel 368+4 t=5 type..namedata.get_r-+0
	rel 372+4 t=5 type.func() int64+0
	rel 376+4 t=5 type..namedata.get_rr-+0
	rel 380+4 t=5 type.func() float64+0
	rel 384+4 t=5 type..namedata.get_s-+0
	rel 388+4 t=5 type.func() int64+0
	rel 392+4 t=5 type..namedata.get_ss-+0
	rel 396+4 t=5 type.func() float64+0
	rel 400+4 t=5 type..namedata.get_t-+0
	rel 404+4 t=5 type.func() int64+0
	rel 408+4 t=5 type..namedata.get_tt-+0
	rel 412+4 t=5 type.func() float64+0
	rel 416+4 t=5 type..namedata.get_u-+0
	rel 420+4 t=5 type.func() int64+0
	rel 424+4 t=5 type..namedata.get_uu-+0
	rel 428+4 t=5 type.func() float64+0
	rel 432+4 t=5 type..namedata.get_v-+0
	rel 436+4 t=5 type.func() int64+0
	rel 440+4 t=5 type..namedata.get_vv-+0
	rel 444+4 t=5 type.func() float64+0
	rel 448+4 t=5 type..namedata.get_w-+0
	rel 452+4 t=5 type.func() int64+0
	rel 456+4 t=5 type..namedata.get_ww-+0
	rel 460+4 t=5 type.func() float64+0
	rel 464+4 t=5 type..namedata.get_x-+0
	rel 468+4 t=5 type.func() int64+0
	rel 472+4 t=5 type..namedata.get_xx-+0
	rel 476+4 t=5 type.func() float64+0
	rel 480+4 t=5 type..namedata.get_y-+0
	rel 484+4 t=5 type.func() int64+0
	rel 488+4 t=5 type..namedata.get_yy-+0
	rel 492+4 t=5 type.func() float64+0
	rel 496+4 t=5 type..namedata.get_z-+0
	rel 500+4 t=5 type.func() int64+0
	rel 504+4 t=5 type..namedata.get_zz-+0
	rel 508+4 t=5 type.func() float64+0
go.loc.type..hash."".micro SDWARFLOC dupok size=0
go.info.type..hash."".micro SDWARFINFO dupok size=82
	0x0000 03 74 79 70 65 2e 2e 68 61 73 68 2e 22 22 2e 6d  .type..hash."".m
	0x0010 69 63 72 6f 00 00 00 00 00 00 00 00 00 00 00 00  icro............
	0x0020 00 00 00 00 00 01 9c 00 00 00 00 01 0f 70 00 00  .............p..
	0x0030 01 00 00 00 00 01 9c 0f 68 00 00 01 00 00 00 00  ........h.......
	0x0040 02 91 08 0f 7e 72 32 00 01 01 00 00 00 00 02 91  ....~r2.........
	0x0050 10 00                                            ..
	rel 21+8 t=1 type..hash."".micro+0
	rel 29+8 t=1 type..hash."".micro+158
	rel 39+4 t=29 gofile..<autogenerated>+0
	rel 49+4 t=28 go.info.*"".micro+0
	rel 60+4 t=28 go.info.uintptr+0
	rel 74+4 t=28 go.info.uintptr+0
go.range.type..hash."".micro SDWARFRANGE dupok size=0
go.isstmt.type..hash."".micro SDWARFMISC dupok size=0
	0x0000 04 13 04 0e 03 09 01 21 02 05 01 26 02 05 01 19  .......!...&....
	0x0010 02 0a 00                                         ...
go.loc.type..eq."".micro SDWARFLOC dupok size=0
go.info.type..eq."".micro SDWARFINFO dupok size=80
	0x0000 03 74 79 70 65 2e 2e 65 71 2e 22 22 2e 6d 69 63  .type..eq."".mic
	0x0010 72 6f 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ro..............
	0x0020 00 00 00 01 9c 00 00 00 00 01 0f 70 00 00 01 00  ...........p....
	0x0030 00 00 00 01 9c 0f 71 00 00 01 00 00 00 00 02 91  ......q.........
	0x0040 08 0f 7e 72 32 00 01 01 00 00 00 00 02 91 10 00  ..~r2...........
	rel 19+8 t=1 type..eq."".micro+0
	rel 27+8 t=1 type..eq."".micro+105
	rel 37+4 t=29 gofile..<autogenerated>+0
	rel 47+4 t=28 go.info.*"".micro+0
	rel 58+4 t=28 go.info.*"".micro+0
	rel 72+4 t=28 go.info.bool+0
go.range.type..eq."".micro SDWARFRANGE dupok size=0
go.isstmt.type..eq."".micro SDWARFMISC dupok size=0
	0x0000 08 0e 03 05 01 41 02 05 01 10 00                 .....A.....
type..hashfunc."".micro SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type..hash."".micro+0
type..eqfunc."".micro SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type..eq."".micro+0
type..alg."".micro SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 type..hashfunc."".micro+0
	rel 8+8 t=1 type..eqfunc."".micro+0
type..namedata.*code.micro- SRODATA dupok size=14
	0x0000 00 00 0b 2a 63 6f 64 65 2e 6d 69 63 72 6f        ...*code.micro
type..namedata.*func(*code.micro) float64- SRODATA dupok size=29
	0x0000 00 00 1a 2a 66 75 6e 63 28 2a 63 6f 64 65 2e 6d  ...*func(*code.m
	0x0010 69 63 72 6f 29 20 66 6c 6f 61 74 36 34           icro) float64
type.*func(*"".micro) float64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 87 2d 9d 42 00 08 08 36 00 00 00 00 00 00 00 00  .-.B...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(*code.micro) float64-+0
	rel 48+8 t=1 type.func(*"".micro) float64+0
type.func(*"".micro) float64 SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 06 12 fd 81 02 08 08 33 00 00 00 00 00 00 00 00  .......3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(*code.micro) float64-+0
	rel 44+4 t=6 type.*func(*"".micro) float64+0
	rel 56+8 t=1 type.*"".micro+0
	rel 64+8 t=1 type.float64+0
type..namedata.*func(*code.micro) int64- SRODATA dupok size=27
	0x0000 00 00 18 2a 66 75 6e 63 28 2a 63 6f 64 65 2e 6d  ...*func(*code.m
	0x0010 69 63 72 6f 29 20 69 6e 74 36 34                 icro) int64
type.*func(*"".micro) int64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 28 f6 8f f4 00 08 08 36 00 00 00 00 00 00 00 00  (......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(*code.micro) int64-+0
	rel 48+8 t=1 type.func(*"".micro) int64+0
type.func(*"".micro) int64 SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 01 c8 d2 16 02 08 08 33 00 00 00 00 00 00 00 00  .......3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(*code.micro) int64-+0
	rel 44+4 t=6 type.*func(*"".micro) int64+0
	rel 56+8 t=1 type.*"".micro+0
	rel 64+8 t=1 type.int64+0
type.*"".micro SRODATA size=104
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 cb e0 31 e9 01 08 08 36 00 00 00 00 00 00 00 00  ..1....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 02 00 02 00  ................
	0x0040 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*code.micro-+0
	rel 48+8 t=1 type."".micro+0
	rel 56+4 t=5 type..importpath."".+0
	rel 72+4 t=5 type..namedata.GetF.+0
	rel 76+4 t=24 type.func() float64+0
	rel 80+4 t=24 "".(*micro).GetF+0
	rel 84+4 t=24 "".(*micro).GetF+0
	rel 88+4 t=5 type..namedata.GetI.+0
	rel 92+4 t=24 type.func() int64+0
	rel 96+4 t=24 "".(*micro).GetI+0
	rel 100+4 t=24 "".(*micro).GetI+0
type."".micro SRODATA size=144
	0x0000 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 b5 f3 c8 c9 07 08 08 19 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 02 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  ........@.......
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	rel 24+8 t=1 type..alg."".micro+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type..namedata.*code.micro-+0
	rel 44+4 t=5 type.*"".micro+0
	rel 48+8 t=1 type..importpath."".+0
	rel 56+8 t=1 type."".micro+96
	rel 80+4 t=5 type..importpath."".+0
	rel 96+8 t=1 type..namedata.a-+0
	rel 104+8 t=1 type.int64+0
	rel 120+8 t=1 type..namedata.aa-+0
	rel 128+8 t=1 type.float64+0
type..namedata.*code.obj- SRODATA dupok size=12
	0x0000 00 00 09 2a 63 6f 64 65 2e 6f 62 6a              ...*code.obj
type.*"".obj SRODATA size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 92 4b 16 49 00 08 08 36 00 00 00 00 00 00 00 00  .K.I...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*code.obj-+0
	rel 48+8 t=1 type."".obj+0
type."".obj SRODATA size=112
	0x0000 10 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0010 c5 c1 54 fa 07 08 08 14 00 00 00 00 00 00 00 00  ..T.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 02 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00  ........ .......
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 24+8 t=1 runtime.algarray+128
	rel 32+8 t=1 runtime.gcbits.02+0
	rel 40+4 t=5 type..namedata.*code.obj-+0
	rel 44+4 t=5 type.*"".obj+0
	rel 48+8 t=1 type..importpath."".+0
	rel 56+8 t=1 type."".obj+96
	rel 80+4 t=5 type..importpath."".+0
	rel 96+4 t=5 type..namedata.GetF.+0
	rel 100+4 t=5 type.func() float64+0
	rel 104+4 t=5 type..namedata.GetI.+0
	rel 108+4 t=5 type.func() int64+0
type..namedata.*struct {}- SRODATA dupok size=13
	0x0000 00 00 0a 2a 73 74 72 75 63 74 20 7b 7d           ...*struct {}
type.*struct {} SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 4a 24 a9 e5 00 08 08 36 00 00 00 00 00 00 00 00  J$.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*struct {}-+0
	rel 48+8 t=1 type.struct {}+0
type.struct {} SRODATA dupok size=80
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 1b ac f6 27 02 01 01 19 00 00 00 00 00 00 00 00  ...'............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 24+8 t=1 runtime.algarray+16
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type..namedata.*struct {}-+0
	rel 44+4 t=6 type.*struct {}+0
	rel 56+8 t=1 type.struct {}+80
type..namedata.*<-chan struct {}- SRODATA dupok size=20
	0x0000 00 00 11 2a 3c 2d 63 68 61 6e 20 73 74 72 75 63  ...*<-chan struc
	0x0010 74 20 7b 7d                                      t {}
type.*<-chan struct {} SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 ef 34 d7 1e 00 08 08 36 00 00 00 00 00 00 00 00  .4.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*<-chan struct {}-+0
	rel 48+8 t=1 type.<-chan struct {}+0
type.<-chan struct {} SRODATA dupok size=64
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 91 55 a8 81 02 08 08 32 00 00 00 00 00 00 00 00  .U.....2........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*<-chan struct {}-+0
	rel 44+4 t=6 type.*<-chan struct {}+0
	rel 48+8 t=1 type.struct {}+0
type..namedata.*<-chan time.Time- SRODATA dupok size=20
	0x0000 00 00 11 2a 3c 2d 63 68 61 6e 20 74 69 6d 65 2e  ...*<-chan time.
	0x0010 54 69 6d 65                                      Time
type.*<-chan time.Time SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 12 b8 43 32 00 08 08 36 00 00 00 00 00 00 00 00  ..C2...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*<-chan time.Time-+0
	rel 48+8 t=1 type.<-chan time.Time+0
type.<-chan time.Time SRODATA dupok size=64
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 e3 51 65 81 02 08 08 32 00 00 00 00 00 00 00 00  .Qe....2........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*<-chan time.Time-+0
	rel 44+4 t=6 type.*<-chan time.Time+0
	rel 48+8 t=1 type.time.Time+0
type..namedata.*[]time.Duration- SRODATA dupok size=19
	0x0000 00 00 10 2a 5b 5d 74 69 6d 65 2e 44 75 72 61 74  ...*[]time.Durat
	0x0010 69 6f 6e                                         ion
type.*[]time.Duration SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 91 11 3b 6f 00 08 08 36 00 00 00 00 00 00 00 00  ..;o...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]time.Duration-+0
	rel 48+8 t=1 type.[]time.Duration+0
type.[]time.Duration SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 ad 6f e2 f3 02 08 08 17 00 00 00 00 00 00 00 00  .o..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*[]time.Duration-+0
	rel 44+4 t=6 type.*[]time.Duration+0
	rel 48+8 t=1 type.time.Duration+0
type..namedata.*chan code.tera- SRODATA dupok size=18
	0x0000 00 00 0f 2a 63 68 61 6e 20 63 6f 64 65 2e 74 65  ...*chan code.te
	0x0010 72 61                                            ra
type.*chan "".tera SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f9 90 bf d8 00 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*chan code.tera-+0
	rel 48+8 t=1 type.chan "".tera+0
type.chan "".tera SRODATA dupok size=64
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 4c 90 aa e9 02 08 08 32 00 00 00 00 00 00 00 00  L......2........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00  ................
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*chan code.tera-+0
	rel 44+4 t=6 type.*chan "".tera+0
	rel 48+8 t=1 type."".tera+0
type..namedata.*func(code.tera)- SRODATA dupok size=19
	0x0000 00 00 10 2a 66 75 6e 63 28 63 6f 64 65 2e 74 65  ...*func(code.te
	0x0010 72 61 29                                         ra)
type.*func("".tera) SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 6c e3 65 53 00 08 08 36 00 00 00 00 00 00 00 00  l.eS...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.algarray+80
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(code.tera)-+0
	rel 48+8 t=1 type.func("".tera)+0
type.func("".tera) SRODATA dupok size=64
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 10 07 fc e2 02 08 08 33 00 00 00 00 00 00 00 00  .......3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 24+8 t=1 runtime.algarray+0
	rel 32+8 t=1 runtime.gcbits.01+0
	rel 40+4 t=5 type..namedata.*func(code.tera)-+0
	rel 44+4 t=6 type.*func("".tera)+0
	rel 56+8 t=1 type."".tera+0
go.itab.*"".giga,"".gigantic SRODATA dupok size=440
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 7a 0a 29 6b 00 00 00 00 00 00 00 00 00 00 00 00  z.)k............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0120 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0130 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0140 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0150 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0160 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0170 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0180 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0190 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01b0 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type."".gigantic+0
	rel 8+8 t=1 type.*"".giga+0
	rel 24+8 t=1 "".(*giga).get_a+0
	rel 32+8 t=1 "".(*giga).get_aa+0
	rel 40+8 t=1 "".(*giga).get_b+0
	rel 48+8 t=1 "".(*giga).get_bb+0
	rel 56+8 t=1 "".(*giga).get_c+0
	rel 64+8 t=1 "".(*giga).get_cc+0
	rel 72+8 t=1 "".(*giga).get_d+0
	rel 80+8 t=1 "".(*giga).get_dd+0
	rel 88+8 t=1 "".(*giga).get_e+0
	rel 96+8 t=1 "".(*giga).get_ee+0
	rel 104+8 t=1 "".(*giga).get_f+0
	rel 112+8 t=1 "".(*giga).get_ff+0
	rel 120+8 t=1 "".(*giga).get_g+0
	rel 128+8 t=1 "".(*giga).get_gg+0
	rel 136+8 t=1 "".(*giga).get_h+0
	rel 144+8 t=1 "".(*giga).get_hh+0
	rel 152+8 t=1 "".(*giga).get_i+0
	rel 160+8 t=1 "".(*giga).get_ii+0
	rel 168+8 t=1 "".(*giga).get_j+0
	rel 176+8 t=1 "".(*giga).get_jj+0
	rel 184+8 t=1 "".(*giga).get_k+0
	rel 192+8 t=1 "".(*giga).get_kk+0
	rel 200+8 t=1 "".(*giga).get_l+0
	rel 208+8 t=1 "".(*giga).get_ll+0
	rel 216+8 t=1 "".(*giga).get_m+0
	rel 224+8 t=1 "".(*giga).get_mm+0
	rel 232+8 t=1 "".(*giga).get_n+0
	rel 240+8 t=1 "".(*giga).get_nn+0
	rel 248+8 t=1 "".(*giga).get_o+0
	rel 256+8 t=1 "".(*giga).get_oo+0
	rel 264+8 t=1 "".(*giga).get_p+0
	rel 272+8 t=1 "".(*giga).get_pp+0
	rel 280+8 t=1 "".(*giga).get_q+0
	rel 288+8 t=1 "".(*giga).get_qq+0
	rel 296+8 t=1 "".(*giga).get_r+0
	rel 304+8 t=1 "".(*giga).get_rr+0
	rel 312+8 t=1 "".(*giga).get_s+0
	rel 320+8 t=1 "".(*giga).get_ss+0
	rel 328+8 t=1 "".(*giga).get_t+0
	rel 336+8 t=1 "".(*giga).get_tt+0
	rel 344+8 t=1 "".(*giga).get_u+0
	rel 352+8 t=1 "".(*giga).get_uu+0
	rel 360+8 t=1 "".(*giga).get_v+0
	rel 368+8 t=1 "".(*giga).get_vv+0
	rel 376+8 t=1 "".(*giga).get_w+0
	rel 384+8 t=1 "".(*giga).get_ww+0
	rel 392+8 t=1 "".(*giga).get_x+0
	rel 400+8 t=1 "".(*giga).get_xx+0
	rel 408+8 t=1 "".(*giga).get_y+0
	rel 416+8 t=1 "".(*giga).get_yy+0
	rel 424+8 t=1 "".(*giga).get_z+0
	rel 432+8 t=1 "".(*giga).get_zz+0
go.itablink.*"".giga,"".gigantic SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 go.itab.*"".giga,"".gigantic+0
go.itab.*"".micro,"".obj SRODATA dupok size=40
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 cb e0 31 e9 00 00 00 00 00 00 00 00 00 00 00 00  ..1.............
	0x0020 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type."".obj+0
	rel 8+8 t=1 type.*"".micro+0
	rel 24+8 t=1 "".(*micro).GetF+0
	rel 32+8 t=1 "".(*micro).GetI+0
go.itablink.*"".micro,"".obj SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 go.itab.*"".micro,"".obj+0
go.itab.*"".tiny,"".obj SRODATA dupok size=40
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 8c 1a 7b 2f 00 00 00 00 00 00 00 00 00 00 00 00  ..{/............
	0x0020 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type."".obj+0
	rel 8+8 t=1 type.*"".tiny+0
	rel 24+8 t=1 "".(*tiny).GetF+0
	rel 32+8 t=1 "".(*tiny).GetI+0
go.itablink.*"".tiny,"".obj SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 go.itab.*"".tiny,"".obj+0
go.itab.*"".mini,"".obj SRODATA dupok size=40
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 f3 d0 d8 17 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type."".obj+0
	rel 8+8 t=1 type.*"".mini+0
	rel 24+8 t=1 "".(*mini).GetF+0
	rel 32+8 t=1 "".(*mini).GetI+0
go.itablink.*"".mini,"".obj SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 go.itab.*"".mini,"".obj+0
go.itab.*"".mega,"".obj SRODATA dupok size=40
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 5f bf 18 06 00 00 00 00 00 00 00 00 00 00 00 00  _...............
	0x0020 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type."".obj+0
	rel 8+8 t=1 type.*"".mega+0
	rel 24+8 t=1 "".(*mega).GetF+0
	rel 32+8 t=1 "".(*mega).GetI+0
go.itablink.*"".mega,"".obj SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 go.itab.*"".mega,"".obj+0
go.itab.*"".tera,"".obj SRODATA dupok size=40
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 39 6f 60 49 00 00 00 00 00 00 00 00 00 00 00 00  9o`I............
	0x0020 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type."".obj+0
	rel 8+8 t=1 type.*"".tera+0
	rel 24+8 t=1 "".(*tera).GetF+0
	rel 32+8 t=1 "".(*tera).GetI+0
go.itablink.*"".tera,"".obj SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 go.itab.*"".tera,"".obj+0
go.itab.*errors.errorString,error SRODATA dupok size=32
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 14 f4 d0 87 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 type.error+0
	rel 8+8 t=1 type.*errors.errorString+0
	rel 24+8 t=1 errors.(*errorString).Error+0
go.itablink.*errors.errorString,error SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 go.itab.*errors.errorString,error+0
go.itab.*context.emptyCtx,context.Context SRODATA dupok size=56
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 1e 38 3d 9f 00 00 00 00 00 00 00 00 00 00 00 00  .8=.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type.context.Context+0
	rel 8+8 t=1 type.*context.emptyCtx+0
	rel 24+8 t=1 context.(*emptyCtx).Deadline+0
	rel 32+8 t=1 context.(*emptyCtx).Done+0
	rel 40+8 t=1 context.(*emptyCtx).Err+0
	rel 48+8 t=1 context.(*emptyCtx).Value+0
go.itablink.*context.emptyCtx,context.Context SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 go.itab.*context.emptyCtx,context.Context+0
go.itab.*os.File,io.Writer SRODATA dupok size=32
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 44 b5 f3 33 00 00 00 00 00 00 00 00 00 00 00 00  D..3............
	rel 0+8 t=1 type.io.Writer+0
	rel 8+8 t=1 type.*os.File+0
	rel 24+8 t=1 os.(*File).Write+0
go.itablink.*os.File,io.Writer SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 go.itab.*os.File,io.Writer+0
type..importpath.context. SRODATA dupok size=10
	0x0000 00 00 07 63 6f 6e 74 65 78 74                    ...context
type..importpath.errors. SRODATA dupok size=9
	0x0000 00 00 06 65 72 72 6f 72 73                       ...errors
type..importpath.fmt. SRODATA dupok size=6
	0x0000 00 00 03 66 6d 74                                ...fmt
type..importpath.log. SRODATA dupok size=6
	0x0000 00 00 03 6c 6f 67                                ...log
type..importpath.math/rand. SRODATA dupok size=12
	0x0000 00 00 09 6d 61 74 68 2f 72 61 6e 64              ...math/rand
type..importpath.runtime. SRODATA dupok size=10
	0x0000 00 00 07 72 75 6e 74 69 6d 65                    ...runtime
type..importpath.runtime/debug. SRODATA dupok size=16
	0x0000 00 00 0d 72 75 6e 74 69 6d 65 2f 64 65 62 75 67  ...runtime/debug
type..importpath.strconv. SRODATA dupok size=10
	0x0000 00 00 07 73 74 72 63 6f 6e 76                    ...strconv
type..importpath.testing. SRODATA dupok size=10
	0x0000 00 00 07 74 65 73 74 69 6e 67                    ...testing
type..importpath.time. SRODATA dupok size=7
	0x0000 00 00 04 74 69 6d 65                             ...time
gclocals·09cf9819fc716118c209c2d2155a3632 SRODATA dupok size=10
	0x0000 02 00 00 00 02 00 00 00 02 00                    ..........
gclocals·69c1753bd5f81501d95132d08af04464 SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
gclocals·568470801006e5c0dc3947ea998fe279 SRODATA dupok size=10
	0x0000 02 00 00 00 02 00 00 00 00 02                    ..........
gclocals·e0f6dd6ffe13df6eefebd78fb394216d SRODATA dupok size=11
	0x0000 03 00 00 00 03 00 00 00 02 00 04                 ...........
gclocals·d8b28f51bb91e05d264803f0f600a200 SRODATA dupok size=11
	0x0000 03 00 00 00 02 00 00 00 00 00 00                 ...........
gclocals·e6397a44f8e1b6e77d0f200b4fba5269 SRODATA dupok size=10
	0x0000 02 00 00 00 03 00 00 00 01 00                    ..........
gclocals·9fb7f0986f647f17cb53dda1484e0f7a SRODATA dupok size=10
	0x0000 02 00 00 00 01 00 00 00 00 01                    ..........
gclocals·69a9291448fa273f79569cb593f615b2 SRODATA dupok size=12
	0x0000 04 00 00 00 01 00 00 00 01 01 01 01              ............
gclocals·c753f437677afcc953b27443e88e9be4 SRODATA dupok size=16
	0x0000 04 00 00 00 0c 00 00 00 00 00 40 00 00 01 10 00  ..........@.....
gclocals·4fe7a0c8fa0ed5970e514f86b26cf9ae SRODATA dupok size=15
	0x0000 07 00 00 00 07 00 00 00 00 40 01 20 02 03 05     .........@. ...
"".BenchmarkGigaObject_Calc.stkobj SRODATA dupok size=24
	0x0000 01 00 00 00 00 00 00 00 b8 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.[1]interface {}+0
gclocals·00eaa93355c8765c23fb807114083c27 SRODATA dupok size=14
	0x0000 06 00 00 00 07 00 00 00 00 40 01 02 03 05        .........@....
"".BenchmarkGigaPObject_Calc.stkobj SRODATA dupok size=24
	0x0000 01 00 00 00 00 00 00 00 b8 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.[1]interface {}+0
gclocals·73de87619823f6747f37fd4c152f5b42 SRODATA dupok size=14
	0x0000 06 00 00 00 01 00 00 00 01 01 01 01 01 01        ..............
gclocals·5656cec2d04c5a84ade886586cb39011 SRODATA dupok size=20
	0x0000 06 00 00 00 0e 00 00 00 00 00 04 00 05 00 04 04  ................
	0x0010 44 00 04 01                                      D...
gclocals·437d171b9e6f84c40356e01ae02b710f SRODATA dupok size=13
	0x0000 05 00 00 00 07 00 00 00 00 01 40 03 05           ..........@..
"".BenchmarkGigaIfcObject_Calc.stkobj SRODATA dupok size=24
	0x0000 01 00 00 00 00 00 00 00 c8 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.[1]interface {}+0
gclocals·280f5f1a80fa13c3d75c87f7c396d461 SRODATA dupok size=16
	0x0000 08 00 00 00 01 00 00 00 01 01 01 01 01 01 01 01  ................
gclocals·2fba0d18e3c0524a612c61a89e5a5d1d SRODATA dupok size=32
	0x0000 08 00 00 00 18 00 00 00 00 00 00 80 00 00 80 00  ................
	0x0010 02 40 00 00 00 40 00 10 00 00 00 10 00 00 00 10  .@...@..........
gclocals·c1ff80de5d851c57919e6de5599e7aaf SRODATA dupok size=14
	0x0000 06 00 00 00 06 00 00 00 00 01 02 0a 06 22        ............."
"".BenchmarkMicro_Calc.stkobj SRODATA dupok size=40
	0x0000 02 00 00 00 00 00 00 00 c8 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00 d8 ff ff ff ff ff ff ff  ................
	0x0020 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.errors.errorString+0
	rel 32+8 t=1 type.[1]interface {}+0
gclocals·bb2ddec3984c001925e1824edd6d6bcf SRODATA dupok size=17
	0x0000 09 00 00 00 01 00 00 00 01 01 01 01 01 01 01 01  ................
	0x0010 01                                               .
gclocals·3add79447fae350bd519a2cf4ce3d6d4 SRODATA dupok size=44
	0x0000 09 00 00 00 1a 00 00 00 00 00 00 00 01 00 00 00  ................
	0x0010 00 02 00 00 00 02 08 00 00 01 00 00 00 00 01 00  ................
	0x0020 40 00 00 00 00 40 00 00 00 00 40 00              @....@....@.
gclocals·461fb64e646d1cd7131d277febeb23b5 SRODATA dupok size=15
	0x0000 07 00 00 00 06 00 00 00 00 01 02 0a 06 22 08     .............".
"".BenchmarkMicroP_Calc.stkobj SRODATA dupok size=40
	0x0000 02 00 00 00 00 00 00 00 c8 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00 d8 ff ff ff ff ff ff ff  ................
	0x0020 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.errors.errorString+0
	rel 32+8 t=1 type.[1]interface {}+0
gclocals·39c35ed93fc31b84b0c48f70fc1139f4 SRODATA dupok size=13
	0x0000 05 00 00 00 03 00 00 00 00 01 03 02 05           .............
"".BenchmarkMicroIfc_Calc.stkobj SRODATA dupok size=24
	0x0000 01 00 00 00 00 00 00 00 c8 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.[1]interface {}+0
gclocals·d1d75e5bd153dd111cd8f1bc3c181073 SRODATA dupok size=18
	0x0000 0a 00 00 00 01 00 00 00 01 01 01 01 01 01 01 01  ................
	0x0010 01 01                                            ..
gclocals·d6f6fd27c9283ce6ba802f34513e6a21 SRODATA dupok size=48
	0x0000 0a 00 00 00 20 00 00 00 00 00 00 00 00 00 00 40  .... ..........@
	0x0010 00 00 00 44 80 00 00 40 80 00 02 40 40 00 00 40  ...D...@...@@..@
	0x0020 00 40 00 40 10 00 00 40 00 10 00 40 00 00 10 40  .@.@...@...@...@
gclocals·bb9a4421951f5635946b6e69c264fd07 SRODATA dupok size=15
	0x0000 07 00 00 00 06 00 00 00 00 02 01 06 08 0a 22     .............."
"".BenchmarkTiny_Calc.stkobj SRODATA dupok size=40
	0x0000 02 00 00 00 00 00 00 00 88 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00 98 ff ff ff ff ff ff ff  ................
	0x0020 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.errors.errorString+0
	rel 32+8 t=1 type.[1]interface {}+0
gclocals·2b79edb639adb9b9ade62f47577a91f4 SRODATA dupok size=48
	0x0000 0a 00 00 00 1e 00 00 00 00 00 00 00 00 00 00 10  ................
	0x0010 01 00 00 10 00 02 00 10 00 02 08 10 00 01 00 10  ................
	0x0020 00 00 01 10 40 00 00 10 00 40 00 10 00 00 40 10  ....@....@....@.
gclocals·dcace91251e98d8716c43fb4823d77dd SRODATA dupok size=15
	0x0000 07 00 00 00 06 00 00 00 00 02 01 0a 06 08 22     .............."
"".BenchmarkTinyP_Calc.stkobj SRODATA dupok size=56
	0x0000 03 00 00 00 00 00 00 00 a8 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00 b8 ff ff ff ff ff ff ff  ................
	0x0020 00 00 00 00 00 00 00 00 e0 ff ff ff ff ff ff ff  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.errors.errorString+0
	rel 32+8 t=1 type.[1]interface {}+0
	rel 48+8 t=1 type."".tiny+0
gclocals·1a65e721a2ccc325b382662e7ffee780 SRODATA dupok size=10
	0x0000 02 00 00 00 01 00 00 00 01 00                    ..........
gclocals·15b76348caca8a511afecadf603e9401 SRODATA dupok size=10
	0x0000 02 00 00 00 03 00 00 00 00 00                    ..........
gclocals·98b3fe0fe486cb80582d9e40e05ed306 SRODATA dupok size=13
	0x0000 05 00 00 00 02 00 00 00 03 02 02 00 00           .............
gclocals·c43b6553139b2dad5540cd03018f0ff6 SRODATA dupok size=13
	0x0000 05 00 00 00 04 00 00 00 00 00 04 04 00           .............
gclocals·bfec7e55b3f043d1941c093912808913 SRODATA dupok size=11
	0x0000 03 00 00 00 02 00 00 00 00 01 03                 ...........
gclocals·ac54cb40544120234c399b823c9a65b5 SRODATA dupok size=14
	0x0000 06 00 00 00 07 00 00 00 00 01 05 45 03 02        ...........E..
"".BenchmarkTinyIfc_Calc.stkobj SRODATA dupok size=24
	0x0000 01 00 00 00 00 00 00 00 c8 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.[1]interface {}+0
gclocals·4b4268936c577e544c51abff96963da5 SRODATA dupok size=68
	0x0000 0a 00 00 00 30 00 00 00 00 00 00 00 00 00 00 00  ....0...........
	0x0010 00 00 00 54 00 00 00 40 05 54 80 00 00 00 00 54  ...T...@.T.....T
	0x0020 80 00 02 00 00 54 40 00 00 00 00 54 00 40 00 00  .....T@....T.@..
	0x0030 00 54 10 00 00 00 00 54 00 10 00 00 00 54 00 00  .T.....T.....T..
	0x0040 10 00 00 54                                      ...T
gclocals·312acb76b4abc33b200226485697de53 SRODATA dupok size=17
	0x0000 09 00 00 00 07 00 00 00 00 40 01 60 02 0a 06 08  .........@.`....
	0x0010 22                                               "
"".BenchmarkMini_Calc.stkobj SRODATA dupok size=40
	0x0000 02 00 00 00 00 00 00 00 08 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00 18 ff ff ff ff ff ff ff  ................
	0x0020 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.errors.errorString+0
	rel 32+8 t=1 type.[1]interface {}+0
gclocals·2d77827c72aac2ee2a2aa6f5489d6f1c SRODATA dupok size=58
	0x0000 0a 00 00 00 26 00 00 00 00 00 00 00 00 00 00 00  ....&...........
	0x0010 00 15 01 00 00 00 15 00 02 00 00 15 00 02 08 00  ................
	0x0020 15 00 01 00 00 15 00 00 01 00 15 40 00 00 00 15  ...........@....
	0x0030 00 40 00 00 15 00 00 40 00 15                    .@.....@..
gclocals·b0e64627e016c4f22ade44055db6bcad SRODATA dupok size=16
	0x0000 08 00 00 00 07 00 00 00 00 40 01 02 0a 06 08 22  .........@....."
"".BenchmarkMiniP_Calc.stkobj SRODATA dupok size=56
	0x0000 03 00 00 00 00 00 00 00 68 ff ff ff ff ff ff ff  ........h.......
	0x0010 00 00 00 00 00 00 00 00 78 ff ff ff ff ff ff ff  ........x.......
	0x0020 00 00 00 00 00 00 00 00 a0 ff ff ff ff ff ff ff  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.errors.errorString+0
	rel 32+8 t=1 type.[1]interface {}+0
	rel 48+8 t=1 type."".mini+0
gclocals·b54c265fcfcc2aae36a147f86c7f459f SRODATA dupok size=10
	0x0000 02 00 00 00 07 00 00 00 00 00                    ..........
gclocals·ddea470032bda55fc25e5a11523bb20c SRODATA dupok size=16
	0x0000 08 00 00 00 02 00 00 00 03 03 03 03 02 02 00 00  ................
gclocals·63b75562f3b670c3090c6571e2389bc2 SRODATA dupok size=24
	0x0000 08 00 00 00 0e 00 00 00 00 00 02 00 00 10 00 01  ................
	0x0010 00 00 10 00 10 00 00 00                          ........
gclocals·6e8d7ea4abad763909b26991048ee1fe SRODATA dupok size=12
	0x0000 04 00 00 00 02 00 00 00 00 01 03 02              ............
gclocals·7bca89e3bb189ba87f0830382ea54ec7 SRODATA dupok size=32
	0x0000 06 00 00 00 1a 00 00 00 00 00 00 00 04 00 00 00  ................
	0x0010 05 00 00 00 04 04 00 00 44 00 00 00 04 01 00 00  ........D.......
"".BenchmarkMiniIfc_Calc.stkobj SRODATA dupok size=24
	0x0000 01 00 00 00 00 00 00 00 68 ff ff ff ff ff ff ff  ........h.......
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.[1]interface {}+0
gclocals·775fae7d6516280f722e86ebbeb2fcfc SRODATA dupok size=148
	0x0000 0a 00 00 00 70 00 00 00 00 00 00 00 00 00 00 00  ....p...........
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 54 55 55 00 00 00 00 00 40 55 55 05 00 00 54  .TUU.....@UU...T
	0x0030 55 55 80 00 00 00 00 00 00 00 00 00 00 54 55 55  UU...........TUU
	0x0040 80 00 02 00 00 00 00 00 00 00 00 54 55 55 40 00  ...........TUU@.
	0x0050 00 00 00 00 00 00 00 00 00 54 55 55 00 40 00 00  .........TUU.@..
	0x0060 00 00 00 00 00 00 00 54 55 55 10 00 00 00 00 00  .......TUU......
	0x0070 00 00 00 00 00 54 55 55 00 10 00 00 00 00 00 00  .....TUU........
	0x0080 00 00 00 54 55 55 00 00 10 00 00 00 00 00 00 00  ...TUU..........
	0x0090 00 54 55 55                                      .TUU
"".BenchmarkMega_Calc.stkobj SRODATA dupok size=40
	0x0000 02 00 00 00 00 00 00 00 08 fd ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00 18 fd ff ff ff ff ff ff  ................
	0x0020 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.errors.errorString+0
	rel 32+8 t=1 type.[1]interface {}+0
gclocals·6b59c8a27568fd049968347912e05aff SRODATA dupok size=98
	0x0000 0a 00 00 00 46 00 00 00 00 00 00 00 00 00 00 00  ....F...........
	0x0010 00 00 00 00 00 00 00 55 55 15 01 00 00 00 00 00  .......UU.......
	0x0020 55 55 15 00 02 00 00 00 00 55 55 15 00 02 08 00  UU.......UU.....
	0x0030 00 00 55 55 15 00 01 00 00 00 00 55 55 15 00 00  ..UU.......UU...
	0x0040 01 00 00 00 55 55 15 40 00 00 00 00 00 55 55 15  ....UU.@.....UU.
	0x0050 00 40 00 00 00 00 55 55 15 00 00 40 00 00 00 55  .@....UU...@...U
	0x0060 55 15                                            U.
"".BenchmarkMegaP_Calc.stkobj SRODATA dupok size=56
	0x0000 03 00 00 00 00 00 00 00 68 fe ff ff ff ff ff ff  ........h.......
	0x0010 00 00 00 00 00 00 00 00 78 fe ff ff ff ff ff ff  ........x.......
	0x0020 00 00 00 00 00 00 00 00 a0 fe ff ff ff ff ff ff  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.errors.errorString+0
	rel 32+8 t=1 type.[1]interface {}+0
	rel 48+8 t=1 type."".mega+0
gclocals·70d35692d895b27cdf4a28bc8dd112fb SRODATA dupok size=14
	0x0000 02 00 00 00 17 00 00 00 00 00 00 00 00 00        ..............
gclocals·6bd658b614c32f65838388fcb3afd1b4 SRODATA dupok size=24
	0x0000 10 00 00 00 02 00 00 00 03 03 03 03 03 03 03 03  ................
	0x0010 03 03 03 03 02 02 00 00                          ........
gclocals·4f4d2614571ad903fd9564f54dbd7b8d SRODATA dupok size=104
	0x0000 10 00 00 00 2e 00 00 00 00 00 00 00 00 00 02 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 10 00 00 00 00 00 01  ................
	0x0020 00 00 00 00 10 00 00 00 00 00 01 00 00 00 00 10  ................
	0x0030 00 00 00 00 00 01 00 00 00 00 10 00 00 00 00 00  ................
	0x0040 01 00 00 00 00 10 00 00 00 00 00 01 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 10 00 00 00 00 00 10 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00                          ........
gclocals·52d62297ee1fe28d67c61808da6a453e SRODATA dupok size=56
	0x0000 06 00 00 00 3a 00 00 00 00 00 00 00 00 00 00 00  ....:...........
	0x0010 04 00 00 00 00 00 00 00 05 00 00 00 00 00 00 00  ................
	0x0020 04 04 00 00 00 00 00 00 44 00 00 00 00 00 00 00  ........D.......
	0x0030 04 01 00 00 00 00 00 00                          ........
"".BenchmarkMegaIfc_Calc.stkobj SRODATA dupok size=24
	0x0000 01 00 00 00 00 00 00 00 68 fe ff ff ff ff ff ff  ........h.......
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.[1]interface {}+0
gclocals·d0177ba0243799d35816ea21eadd74f0 SRODATA dupok size=298
	0x0000 0a 00 00 00 e8 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 50 55 55 55 55  ...........PUUUU
	0x0040 55 55 00 00 00 00 00 00 00 00 00 50 55 55 55 55  UU.........PUUUU
	0x0050 55 55 00 00 00 00 00 00 50 55 55 55 55 55 55 80  UU......PUUUUUU.
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 50 55 55 55 55 55 55 80 00 02 00  .....PUUUUUU....
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 50 55 55 55 55 55 55 40 00 00 00 00 00 00  ..PUUUUUU@......
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 50  ...............P
	0x00b0 55 55 55 55 55 55 00 40 00 00 00 00 00 00 00 00  UUUUUU.@........
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 50 55 55 55  ............PUUU
	0x00d0 55 55 55 10 00 00 00 00 00 00 00 00 00 00 00 00  UUU.............
	0x00e0 00 00 00 00 00 00 00 00 00 50 55 55 55 55 55 55  .........PUUUUUU
	0x00f0 00 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 50 55 55 55 55 55 55 00 00 10  ......PUUUUUU...
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0120 00 00 00 50 55 55 55 55 55 55                    ...PUUUUUU
"".BenchmarkTera_Calc.stkobj SRODATA dupok size=40
	0x0000 02 00 00 00 00 00 00 00 48 f9 ff ff ff ff ff ff  ........H.......
	0x0010 00 00 00 00 00 00 00 00 58 f9 ff ff ff ff ff ff  ........X.......
	0x0020 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.errors.errorString+0
	rel 32+8 t=1 type.[1]interface {}+0
gclocals·23e2d8290dcda2759e89083815bda6b5 SRODATA dupok size=178
	0x0000 0a 00 00 00 82 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 40 55 55 55 55 55 55 01 01 00 00 00 00 00  ..@UUUUUU.......
	0x0030 00 00 00 40 55 55 55 55 55 55 01 00 02 00 00 00  ...@UUUUUU......
	0x0040 00 00 00 00 40 55 55 55 55 55 55 01 00 02 08 00  ....@UUUUUU.....
	0x0050 00 00 00 00 00 40 55 55 55 55 55 55 01 00 01 00  .....@UUUUUU....
	0x0060 00 00 00 00 00 00 40 55 55 55 55 55 55 01 00 00  ......@UUUUUU...
	0x0070 01 00 00 00 00 00 00 40 55 55 55 55 55 55 01 40  .......@UUUUUU.@
	0x0080 00 00 00 00 00 00 00 00 40 55 55 55 55 55 55 01  ........@UUUUUU.
	0x0090 00 40 00 00 00 00 00 00 00 40 55 55 55 55 55 55  .@.......@UUUUUU
	0x00a0 01 00 00 40 00 00 00 00 00 00 40 55 55 55 55 55  ...@......@UUUUU
	0x00b0 55 01                                            U.
"".BenchmarkTeraP_Calc.stkobj SRODATA dupok size=56
	0x0000 03 00 00 00 00 00 00 00 88 fc ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00 98 fc ff ff ff ff ff ff  ................
	0x0020 00 00 00 00 00 00 00 00 c0 fc ff ff ff ff ff ff  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.errors.errorString+0
	rel 32+8 t=1 type.[1]interface {}+0
	rel 48+8 t=1 type."".tera+0
gclocals·2a9f84d4931ab967ba97a36d7dc9d0b9 SRODATA dupok size=22
	0x0000 02 00 00 00 35 00 00 00 00 00 00 00 00 00 00 00  ....5...........
	0x0010 00 00 00 00 00 00                                ......
gclocals·469723812f2fc541579b3e1b9ba2848e SRODATA dupok size=39
	0x0000 1f 00 00 00 02 00 00 00 03 03 03 03 03 03 03 03  ................
	0x0010 03 03 03 03 03 03 03 03 03 03 03 03 03 03 03 03  ................
	0x0020 03 03 03 02 02 00 00                             .......
gclocals·3b2f8cd8aed30a4064f526d5998b67de SRODATA dupok size=442
	0x0000 1f 00 00 00 6a 00 00 00 00 00 00 00 00 00 00 00  ....j...........
	0x0010 00 00 00 00 00 00 02 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 10 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 10  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 10 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 10 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 10 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00  ................
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 10 00 00 00 00  ................
	0x00f0 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 10 00 00 00 00 00 00 00 00 00  ................
	0x0110 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0120 00 10 00 00 00 00 00 00 00 00 00 00 00 00 00 01  ................
	0x0130 00 00 00 00 00 00 00 00 00 00 00 00 10 00 00 00  ................
	0x0140 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0150 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00 00  ................
	0x0160 00 00 00 00 10 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0170 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 10  ................
	0x0180 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0190 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 00  ................
	0x01a0 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00  ................
	0x01b0 00 00 00 00 00 00 00 00 00 00                    ..........
gclocals·75eb9047c64157d7f284fa6df3ad33a3 SRODATA dupok size=98
	0x0000 06 00 00 00 76 00 00 00 00 00 00 00 00 00 00 00  ....v...........
	0x0010 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 05 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 04 04 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 44 00 00 00 00 00 00 00 00 00 00 00  ....D...........
	0x0050 00 00 00 04 01 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00                                            ..
"".BenchmarkTeraIfc_Calc.stkobj SRODATA dupok size=24
	0x0000 01 00 00 00 00 00 00 00 88 fc ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.[1]interface {}+0
gclocals·4265e6d7ebcb59b6281a87814b5591e9 SRODATA dupok size=11
	0x0000 03 00 00 00 03 00 00 00 04 00 00                 ...........
gclocals·f6f4f7a0a474534b4049434f4f261209 SRODATA dupok size=11
	0x0000 03 00 00 00 06 00 00 00 00 00 04                 ...........
"".avoidCompilerOptimisation.stkobj SRODATA dupok size=24
	0x0000 01 00 00 00 00 00 00 00 d8 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.[1]interface {}+0
gclocals·50f70adb88af437fb2798cd6fb0132b3 SRODATA dupok size=12
	0x0000 04 00 00 00 03 00 00 00 00 00 00 04              ............
gclocals·c6f350fd0079e7b679306812507d87b6 SRODATA dupok size=16
	0x0000 04 00 00 00 09 00 00 00 00 00 01 00 02 00 00 00  ................
gclocals·1cf923758aae2e428391d1783fe59973 SRODATA dupok size=11
	0x0000 03 00 00 00 02 00 00 00 00 01 02                 ...........
gclocals·5d32cd9dc3f75c677aaee1719e88e3bd SRODATA dupok size=34
	0x0000 0d 00 00 00 0b 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 40 05  ..............@.
	0x0020 40 05                                            @.
gclocals·5122725819a57f2a39d656e967ea37b3 SRODATA dupok size=47
	0x0000 0d 00 00 00 17 00 00 00 00 00 00 01 00 00 02 00  ................
	0x0010 00 04 00 00 08 00 00 28 00 00 a8 00 00 a8 00 2a  .......(.......*
	0x0020 a0 00 2a 80 00 2a 00 00 2a 00 00 2a 00 00 00     ..*..*..*..*...
gclocals·18fc722f2a78a2e34073064e2f86e2da SRODATA dupok size=13
	0x0000 05 00 00 00 07 00 00 00 00 40 01 02 60           .........@..`
gclocals·c900a01e2adadc4a99f70378674d05bf SRODATA dupok size=230
	0x0000 25 00 00 00 2b 00 00 00 00 00 00 00 00 00 00 00  %...+...........
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 00 00 00 00 40 55 55 05  ............@UU.
	0x00e0 00 00 40 55 55 05                                ..@UU.
gclocals·a9120dbfbb8ec23875e9a9c23c7ec326 SRODATA dupok size=378
	0x0000 25 00 00 00 4f 00 00 00 00 00 00 00 00 00 00 00  %...O...........
	0x0010 00 00 08 00 00 00 00 00 00 00 00 00 20 00 00 00  ............ ...
	0x0020 00 00 00 00 00 00 40 00 00 00 00 00 00 00 00 00  ......@.........
	0x0030 00 01 00 00 00 00 00 00 00 00 00 02 00 00 00 00  ................
	0x0040 00 00 00 00 80 00 00 00 00 00 00 00 00 00 01 00  ................
	0x0050 00 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 04 00 00 00 00 00 00 00 00 04 00 00 00  ................
	0x0070 00 00 00 00 00 00 10 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 08 00 00 00 00 00 00 00 00 20 08 00 00  ............ ...
	0x0090 00 00 00 00 00 80 20 08 00 00 00 00 00 00 00 80  ...... .........
	0x00a0 22 08 00 00 00 00 00 00 00 88 22 08 00 00 00 00  ".........".....
	0x00b0 00 00 00 a8 22 08 00 00 00 00 00 00 00 a8 2a 08  ....".........*.
	0x00c0 00 00 00 00 00 00 00 a8 aa 08 00 00 00 00 00 00  ................
	0x00d0 00 a8 aa 88 00 00 00 00 00 00 00 a8 aa 8a 00 00  ................
	0x00e0 00 00 00 00 00 a8 aa aa 00 00 00 00 00 00 00 a8  ................
	0x00f0 aa aa 00 00 00 aa aa 2a 00 a8 aa a2 00 00 00 aa  .......*........
	0x0100 aa 2a 00 a8 8a a2 00 00 00 aa aa 2a 00 28 8a a2  .*.........*.(..
	0x0110 00 00 00 aa aa 2a 00 28 88 a2 00 00 00 aa aa 2a  .....*.(.......*
	0x0120 00 20 88 a2 00 00 00 aa aa 2a 00 00 88 a2 00 00  . .......*......
	0x0130 00 aa aa 2a 00 00 80 a2 00 00 00 aa aa 2a 00 00  ...*.........*..
	0x0140 00 a2 00 00 00 aa aa 2a 00 00 00 22 00 00 00 aa  .......*..."....
	0x0150 aa 2a 00 00 00 20 00 00 00 aa aa 2a 00 00 00 00  .*... .....*....
	0x0160 00 00 00 aa aa 2a 00 00 00 00 00 00 00 aa aa 2a  .....*.........*
	0x0170 00 00 00 00 00 00 00 00 00 00                    ..........
gclocals·1c8fe45ef447faad72dbd7f762a80c5c SRODATA dupok size=1074
	0x0000 52 00 00 00 67 00 00 00 00 00 00 00 00 00 00 00  R...g...........
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0120 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0130 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0140 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0150 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0160 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0170 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0180 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0190 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0200 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0210 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0220 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0230 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0240 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0250 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0260 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0270 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0280 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0290 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0300 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0310 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0320 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0330 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0340 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0350 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0360 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0370 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0380 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0390 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0400 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0410 00 00 00 00 00 00 00 00 00 00 00 00 00 00 50 55  ..............PU
	0x0420 55 55 55 55 55 00 00 00 00 00 00 50 55 55 55 55  UUUUU......PUUUU
	0x0430 55 55                                            UU
gclocals·6f015bc9cf50ef057e6ca149eea0a2b4 SRODATA dupok size=1894
	0x0000 52 00 00 00 b8 00 00 00 00 00 00 00 00 00 00 00  R...............
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 20 00 00 00 00 00 00 00 00 00  ...... .........
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 80 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 10 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 20 00 00 00 00 00 00 00 00 00 00 00  .... ...........
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 40 00 00 00 00  ...........@....
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 00 80 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 40 00 00 00 00 00 00 00 00 00  ......@.........
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 08 00  ................
	0x0120 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0130 00 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00  ................
	0x0140 00 00 00 00 00 00 00 00 00 00 00 20 00 00 00 00  ........... ....
	0x0150 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0160 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0170 00 00 00 00 00 00 00 00 80 00 00 00 00 00 00 00  ................
	0x0180 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10  ................
	0x0190 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01a0 00 00 00 00 00 00 02 00 00 00 00 00 00 00 00 00  ................
	0x01b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04  ................
	0x01c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01d0 00 00 00 00 00 08 00 00 00 00 00 00 00 00 00 00  ................
	0x01e0 00 00 00 00 00 00 00 00 00 00 00 08 00 00 00 00  ................
	0x01f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0200 00 00 00 00 00 02 00 00 00 00 00 00 00 00 00 00  ................
	0x0210 00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00  ................
	0x0220 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0230 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x0240 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0250 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0260 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0270 00 00 00 00 00 00 00 00 00 00 00 10 00 00 00 00  ................
	0x0280 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0290 00 00 14 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02a0 00 00 00 00 00 00 00 10 00 14 00 00 00 00 00 00  ................
	0x02b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10 00  ................
	0x02c0 14 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02d0 00 00 00 00 00 10 00 14 00 00 05 00 00 00 00 00  ................
	0x02e0 00 00 00 00 00 00 00 00 00 00 00 00 10 00 14 00  ................
	0x02f0 10 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0300 00 00 00 10 00 14 00 14 05 00 00 00 00 00 00 00  ................
	0x0310 00 00 00 00 00 00 00 00 00 00 10 00 14 00 15 05  ................
	0x0320 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0330 00 10 00 14 40 15 05 00 00 00 00 00 00 00 00 00  ....@...........
	0x0340 00 00 00 00 00 00 00 00 10 04 14 40 15 05 00 00  ...........@....
	0x0350 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10  ................
	0x0360 04 14 50 15 05 00 00 00 00 00 00 00 00 00 00 00  ..P.............
	0x0370 00 00 00 00 00 00 10 04 14 54 15 05 00 00 00 00  .........T......
	0x0380 00 00 00 00 00 00 00 00 00 00 00 00 00 10 04 14  ................
	0x0390 55 15 05 00 00 00 00 00 00 00 00 00 00 00 00 00  U...............
	0x03a0 00 00 00 00 10 04 54 55 15 05 00 00 00 00 00 00  ......TU........
	0x03b0 00 00 00 00 00 00 00 00 00 00 00 10 04 55 55 15  .............UU.
	0x03c0 05 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03d0 00 40 10 04 55 55 15 05 00 00 00 00 00 00 00 00  .@..UU..........
	0x03e0 00 00 00 00 00 00 00 00 40 10 04 55 55 15 15 00  ........@..UU...
	0x03f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 44  ...............D
	0x0400 10 04 55 55 15 15 00 00 00 00 00 00 00 00 00 00  ..UU............
	0x0410 00 00 00 00 00 00 44 10 04 55 55 55 15 00 00 00  ......D..UUU....
	0x0420 00 00 00 00 00 00 00 00 00 00 00 00 00 54 10 04  .............T..
	0x0430 55 55 55 15 00 00 00 00 00 00 00 00 00 00 00 00  UUU.............
	0x0440 00 00 00 00 54 11 04 55 55 55 15 00 00 00 00 00  ....T..UUU......
	0x0450 00 00 00 00 00 00 00 00 00 00 00 54 15 04 55 55  ...........T..UU
	0x0460 55 15 00 00 00 00 00 00 00 00 00 00 00 00 00 00  U...............
	0x0470 00 00 54 55 04 55 55 55 15 00 00 00 00 00 00 00  ..TU.UUU........
	0x0480 00 00 00 00 00 00 00 00 00 54 55 05 55 55 55 15  .........TU.UUU.
	0x0490 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x04a0 54 55 15 55 55 55 15 00 00 00 00 00 00 00 00 00  TU.UUU..........
	0x04b0 00 00 00 00 00 00 00 54 55 55 55 55 55 15 00 00  .......TUUUUU...
	0x04c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 54 55  ..............TU
	0x04d0 55 55 55 55 15 00 00 00 00 00 00 50 55 55 55 55  UUUU.......PUUUU
	0x04e0 55 55 00 00 00 54 55 55 45 55 55 15 00 00 00 00  UU...TUUEUU.....
	0x04f0 00 00 50 55 55 55 55 55 55 00 00 00 54 55 55 41  ..PUUUUUU...TUUA
	0x0500 55 55 15 00 00 00 00 00 00 50 55 55 55 55 55 55  UU.......PUUUUUU
	0x0510 00 00 00 54 45 55 41 55 55 15 00 00 00 00 00 00  ...TEUAUU.......
	0x0520 50 55 55 55 55 55 55 00 00 00 54 45 55 41 55 55  PUUUUUU...TEUAUU
	0x0530 11 00 00 00 00 00 00 50 55 55 55 55 55 55 00 00  .......PUUUUUU..
	0x0540 00 54 45 55 41 55 55 10 00 00 00 00 00 00 50 55  .TEUAUU.......PU
	0x0550 55 55 55 55 55 00 00 00 54 45 55 41 55 45 10 00  UUUUU...TEUAUE..
	0x0560 00 00 00 00 00 50 55 55 55 55 55 55 00 00 00 54  .....PUUUUUU...T
	0x0570 45 55 41 55 41 10 00 00 00 00 00 00 50 55 55 55  EUAUA.......PUUU
	0x0580 55 55 55 00 00 00 54 45 55 41 55 40 10 00 00 00  UUU...TEUAU@....
	0x0590 00 00 00 50 55 55 55 55 55 55 00 00 00 54 45 55  ...PUUUUUU...TEU
	0x05a0 41 15 40 10 00 00 00 00 00 00 50 55 55 55 55 55  A.@.......PUUUUU
	0x05b0 55 00 00 00 54 45 51 41 15 40 10 00 00 00 00 00  U...TEQA.@......
	0x05c0 00 50 55 55 55 55 55 55 00 00 00 54 45 51 41 05  .PUUUUUU...TEQA.
	0x05d0 40 10 00 00 00 00 00 00 50 55 55 55 55 55 55 00  @.......PUUUUUU.
	0x05e0 00 00 54 45 51 41 01 40 10 00 00 00 00 00 00 50  ..TEQA.@.......P
	0x05f0 55 55 55 55 55 55 00 00 00 54 45 51 41 00 40 10  UUUUUU...TEQA.@.
	0x0600 00 00 00 00 00 00 50 55 55 55 55 55 55 00 00 00  ......PUUUUUU...
	0x0610 54 45 51 01 00 40 10 00 00 00 00 00 00 50 55 55  TEQ..@.......PUU
	0x0620 55 55 55 55 00 00 00 54 45 51 00 00 40 10 00 00  UUUU...TEQ..@...
	0x0630 00 00 00 00 50 55 55 55 55 55 55 00 00 00 14 45  ....PUUUUUU....E
	0x0640 51 00 00 40 10 00 00 00 00 00 00 50 55 55 55 55  Q..@.......PUUUU
	0x0650 55 55 00 00 00 14 45 51 00 00 40 00 00 00 00 00  UU....EQ..@.....
	0x0660 00 00 50 55 55 55 55 55 55 00 00 00 10 45 51 00  ..PUUUUUU....EQ.
	0x0670 00 40 00 00 00 00 00 00 00 50 55 55 55 55 55 55  .@.......PUUUUUU
	0x0680 00 00 00 10 45 51 00 00 00 00 00 00 00 00 00 00  ....EQ..........
	0x0690 50 55 55 55 55 55 55 00 00 00 00 45 51 00 00 00  PUUUUUU....EQ...
	0x06a0 00 00 00 00 00 00 00 50 55 55 55 55 55 55 00 00  .......PUUUUUU..
	0x06b0 00 00 44 51 00 00 00 00 00 00 00 00 00 00 50 55  ..DQ..........PU
	0x06c0 55 55 55 55 55 00 00 00 00 40 51 00 00 00 00 00  UUUUU....@Q.....
	0x06d0 00 00 00 00 00 50 55 55 55 55 55 55 00 00 00 00  .....PUUUUUU....
	0x06e0 00 51 00 00 00 00 00 00 00 00 00 00 50 55 55 55  .Q..........PUUU
	0x06f0 55 55 55 00 00 00 00 00 50 00 00 00 00 00 00 00  UUU.....P.......
	0x0700 00 00 00 50 55 55 55 55 55 55 00 00 00 00 00 40  ...PUUUUUU.....@
	0x0710 00 00 00 00 00 00 00 00 00 00 50 55 55 55 55 55  ..........PUUUUU
	0x0720 55 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  U...............
	0x0730 00 50 55 55 55 55 55 55 00 00 00 00 00 00 00 00  .PUUUUUU........
	0x0740 00 00 00 00 00 00 00 00 50 55 55 55 55 55 55 00  ........PUUUUUU.
	0x0750 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0760 00 00 00 00 00 00                                ......
gclocals·7310ccec7e54feda87692b3b68b170c3 SRODATA dupok size=8
	0x0000 1b 00 00 00 00 00 00 00                          ........
gclocals·68707b0cf302758be1aae8da24a39ef7 SRODATA dupok size=116
	0x0000 1b 00 00 00 1a 00 00 00 00 00 00 00 00 00 00 01  ................
	0x0010 00 00 20 00 00 00 04 00 00 80 00 00 00 10 00 00  .. .............
	0x0020 00 02 00 00 40 00 00 00 08 00 00 00 00 04 00 00  ....@...........
	0x0030 00 00 00 02 00 00 02 00 01 00 00 00 02 00 00 00  ................
	0x0040 04 00 00 00 10 00 00 00 20 00 00 00 80 00 00 00  ........ .......
	0x0050 00 01 00 00 00 08 00 00 00 20 00 00 00 40 00 00  ......... ...@..
	0x0060 00 00 01 00 00 00 08 00 00 00 10 00 00 00 40 00  ..............@.
	0x0070 00 00 80 00                                      ....
gclocals·64b33842a01c93cba81b20f5248b3185 SRODATA dupok size=12
	0x0000 04 00 00 00 07 00 00 00 00 40 01 60              .........@.`
"".BenchmarkMicro_Iter.stkobj SRODATA dupok size=40
	0x0000 02 00 00 00 00 00 00 00 c8 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00 d8 ff ff ff ff ff ff ff  ................
	0x0020 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.errors.errorString+0
	rel 32+8 t=1 type.[1]interface {}+0
"".BenchmarkMicroP_Iter.stkobj SRODATA dupok size=40
	0x0000 02 00 00 00 00 00 00 00 c8 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00 d8 ff ff ff ff ff ff ff  ................
	0x0020 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.errors.errorString+0
	rel 32+8 t=1 type.[1]interface {}+0
"".BenchmarkMicroIfc_Iter.stkobj SRODATA dupok size=24
	0x0000 01 00 00 00 00 00 00 00 c8 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.[1]interface {}+0
gclocals·30a0f38bf34086f07ba2626f551541f2 SRODATA dupok size=48
	0x0000 0a 00 00 00 20 00 00 00 00 00 00 00 00 00 00 04  .... ...........
	0x0010 00 00 00 44 80 00 00 04 80 00 02 04 40 00 00 04  ...D........@...
	0x0020 00 40 00 04 10 00 00 04 00 10 00 04 00 00 10 04  .@..............
"".BenchmarkTiny_Iter.stkobj SRODATA dupok size=40
	0x0000 02 00 00 00 00 00 00 00 88 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00 98 ff ff ff ff ff ff ff  ................
	0x0020 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.errors.errorString+0
	rel 32+8 t=1 type.[1]interface {}+0
"".BenchmarkTinyP_Iter.stkobj SRODATA dupok size=56
	0x0000 03 00 00 00 00 00 00 00 a8 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00 b8 ff ff ff ff ff ff ff  ................
	0x0020 00 00 00 00 00 00 00 00 e0 ff ff ff ff ff ff ff  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.errors.errorString+0
	rel 32+8 t=1 type.[1]interface {}+0
	rel 48+8 t=1 type."".tiny+0
"".BenchmarkTinyIfc_Iter.stkobj SRODATA dupok size=24
	0x0000 01 00 00 00 00 00 00 00 c8 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.[1]interface {}+0
gclocals·e58ea31edad5aeb6777e10ccbbd72170 SRODATA dupok size=68
	0x0000 0a 00 00 00 30 00 00 00 00 00 00 00 00 00 00 00  ....0...........
	0x0010 00 40 05 00 00 00 00 40 05 54 80 00 00 40 05 00  .@.....@.T...@..
	0x0020 80 00 02 40 05 00 40 00 00 40 05 00 00 40 00 40  ...@..@..@...@.@
	0x0030 05 00 10 00 00 40 05 00 00 10 00 40 05 00 00 00  .....@.....@....
	0x0040 10 40 05 00                                      .@..
"".BenchmarkMini_Iter.stkobj SRODATA dupok size=40
	0x0000 02 00 00 00 00 00 00 00 08 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00 18 ff ff ff ff ff ff ff  ................
	0x0020 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.errors.errorString+0
	rel 32+8 t=1 type.[1]interface {}+0
"".BenchmarkMiniP_Iter.stkobj SRODATA dupok size=56
	0x0000 03 00 00 00 00 00 00 00 68 ff ff ff ff ff ff ff  ........h.......
	0x0010 00 00 00 00 00 00 00 00 78 ff ff ff ff ff ff ff  ........x.......
	0x0020 00 00 00 00 00 00 00 00 a0 ff ff ff ff ff ff ff  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.errors.errorString+0
	rel 32+8 t=1 type.[1]interface {}+0
	rel 48+8 t=1 type."".mini+0
"".BenchmarkMiniIfc_Iter.stkobj SRODATA dupok size=24
	0x0000 01 00 00 00 00 00 00 00 68 ff ff ff ff ff ff ff  ........h.......
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.[1]interface {}+0
gclocals·7f2bfb2f00688c30463a33c8baab9522 SRODATA dupok size=148
	0x0000 0a 00 00 00 70 00 00 00 00 00 00 00 00 00 00 00  ....p...........
	0x0010 00 00 00 00 00 00 00 00 00 00 00 40 55 55 05 00  ...........@UU..
	0x0020 00 00 00 00 00 00 00 00 00 40 55 55 05 00 00 54  .........@UU...T
	0x0030 55 55 80 00 00 00 00 40 55 55 05 00 00 00 00 00  UU.....@UU......
	0x0040 80 00 02 00 00 40 55 55 05 00 00 00 00 00 40 00  .....@UU......@.
	0x0050 00 00 00 40 55 55 05 00 00 00 00 00 00 40 00 00  ...@UU.......@..
	0x0060 00 40 55 55 05 00 00 00 00 00 10 00 00 00 00 40  .@UU...........@
	0x0070 55 55 05 00 00 00 00 00 00 10 00 00 00 40 55 55  UU...........@UU
	0x0080 05 00 00 00 00 00 00 00 10 00 00 40 55 55 05 00  ...........@UU..
	0x0090 00 00 00 00                                      ....
"".BenchmarkMega_Iter.stkobj SRODATA dupok size=40
	0x0000 02 00 00 00 00 00 00 00 08 fd ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00 18 fd ff ff ff ff ff ff  ................
	0x0020 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.errors.errorString+0
	rel 32+8 t=1 type.[1]interface {}+0
"".BenchmarkMegaP_Iter.stkobj SRODATA dupok size=56
	0x0000 03 00 00 00 00 00 00 00 68 fe ff ff ff ff ff ff  ........h.......
	0x0010 00 00 00 00 00 00 00 00 78 fe ff ff ff ff ff ff  ........x.......
	0x0020 00 00 00 00 00 00 00 00 a0 fe ff ff ff ff ff ff  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.errors.errorString+0
	rel 32+8 t=1 type.[1]interface {}+0
	rel 48+8 t=1 type."".mega+0
"".BenchmarkMegaIfc_Iter.stkobj SRODATA dupok size=24
	0x0000 01 00 00 00 00 00 00 00 68 fe ff ff ff ff ff ff  ........h.......
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.[1]interface {}+0
gclocals·3ffc5ed95677960d5151ed06b380c724 SRODATA dupok size=298
	0x0000 0a 00 00 00 e8 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 50 55  ..............PU
	0x0030 55 55 55 55 55 00 00 00 00 00 00 00 00 00 00 00  UUUUU...........
	0x0040 00 00 00 00 00 00 00 00 00 00 00 50 55 55 55 55  ...........PUUUU
	0x0050 55 55 00 00 00 00 00 00 50 55 55 55 55 55 55 80  UU......PUUUUUU.
	0x0060 00 00 00 00 00 00 00 00 50 55 55 55 55 55 55 00  ........PUUUUUU.
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 80 00 02 00  ................
	0x0080 00 00 00 00 00 50 55 55 55 55 55 55 00 00 00 00  .....PUUUUUU....
	0x0090 00 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00  .........@......
	0x00a0 00 00 50 55 55 55 55 55 55 00 00 00 00 00 00 00  ..PUUUUUU.......
	0x00b0 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00 50  .......@.......P
	0x00c0 55 55 55 55 55 55 00 00 00 00 00 00 00 00 00 00  UUUUUU..........
	0x00d0 00 00 00 10 00 00 00 00 00 00 00 00 50 55 55 55  ............PUUU
	0x00e0 55 55 55 00 00 00 00 00 00 00 00 00 00 00 00 00  UUU.............
	0x00f0 00 10 00 00 00 00 00 00 00 50 55 55 55 55 55 55  .........PUUUUUU
	0x0100 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10  ................
	0x0110 00 00 00 00 00 00 50 55 55 55 55 55 55 00 00 00  ......PUUUUUU...
	0x0120 00 00 00 00 00 00 00 00 00 00                    ..........
"".BenchmarkTera_Iter.stkobj SRODATA dupok size=40
	0x0000 02 00 00 00 00 00 00 00 48 f9 ff ff ff ff ff ff  ........H.......
	0x0010 00 00 00 00 00 00 00 00 58 f9 ff ff ff ff ff ff  ........X.......
	0x0020 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.errors.errorString+0
	rel 32+8 t=1 type.[1]interface {}+0
"".BenchmarkTeraP_Iter.stkobj SRODATA dupok size=56
	0x0000 03 00 00 00 00 00 00 00 88 fc ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00 98 fc ff ff ff ff ff ff  ................
	0x0020 00 00 00 00 00 00 00 00 c0 fc ff ff ff ff ff ff  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.errors.errorString+0
	rel 32+8 t=1 type.[1]interface {}+0
	rel 48+8 t=1 type."".tera+0
"".BenchmarkTeraIfc_Iter.stkobj SRODATA dupok size=24
	0x0000 01 00 00 00 00 00 00 00 88 fc ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.[1]interface {}+0
gclocals·93a03b66991fbacd0832258df0b070ca SRODATA dupok size=14
	0x0000 06 00 00 00 05 00 00 00 00 00 00 00 00 10        ..............
gclocals·01e1b63536c25b40df1463d614d33c5c SRODATA dupok size=14
	0x0000 06 00 00 00 08 00 00 00 00 10 11 01 08 00        ..............
gclocals·2a7a16a1870e896beb8f3e3383a645e4 SRODATA dupok size=14
	0x0000 06 00 00 00 07 00 00 00 00 01 40 42 03 02        ..........@B..
gclocals·12675c0b32afa565be5dd9326bfb8b94 SRODATA dupok size=15
	0x0000 07 00 00 00 07 00 00 00 04 00 00 00 00 00 40     ..............@
gclocals·ca4617d647f88ce0ec7dd4d79922985d SRODATA dupok size=15
	0x0000 07 00 00 00 08 00 00 00 00 10 11 01 00 08 00     ...............
gclocals·855e2a05fb21bccb1db92a1d6cfa5452 SRODATA dupok size=22
	0x0000 07 00 00 00 0f 00 00 00 40 05 00 00 00 00 00 00  ........@.......
	0x0010 00 00 00 00 00 40                                .....@
gclocals·a2af2cfb12dc787b391ce2c78f419d87 SRODATA dupok size=50
	0x0000 07 00 00 00 2f 00 00 00 00 00 40 55 55 05 00 00  ..../.....@UU...
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 40                                            .@
gclocals·364c52b22ed9143fe1f71107940cfe00 SRODATA dupok size=106
	0x0000 07 00 00 00 6b 00 00 00 00 00 00 00 00 00 50 55  ....k.........PU
	0x0010 55 55 55 55 55 00 00 00 00 00 00 00 00 00 00 00  UUUUU...........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 04                    ..........
gclocals·e4f415227c8379b30facea9e8ee24e2d SRODATA dupok size=15
	0x0000 07 00 00 00 05 00 00 00 02 00 00 00 00 00 10     ...............
gclocals·de0cd1bd26f978591085f5c78e695bd6 SRODATA dupok size=15
	0x0000 07 00 00 00 08 00 00 00 00 00 10 11 01 08 00     ...............
gclocals·3a085371a6341a1fa06545600518c631 SRODATA dupok size=14
	0x0000 06 00 00 00 07 00 00 00 00 02 01 40 41 03        ...........@A.
gclocals·9f1eb185e5da802c5a4c3f86f3341582 SRODATA dupok size=15
	0x0000 07 00 00 00 04 00 00 00 01 00 00 00 00 00 08     ...............
gclocals·42dd1bc3608cb7c562579c114807c0ab SRODATA dupok size=22
	0x0000 02 00 00 00 37 00 00 00 00 00 00 00 00 00 00 00  ....7...........
	0x0010 00 00 00 00 00 40                                .....@
gclocals·33cdeccccebe80329f1fdbee7f5874cb SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
gclocals·767d1ff6f5a1932f052a9e13faca1605 SRODATA dupok size=87
	0x0000 4f 00 00 00 04 00 00 00 01 01 01 01 01 01 01 01  O...............
	0x0010 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01  ................
	0x0020 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 08                             .......
gclocals·7e76762d733f76bea714d043c48f0bd7 SRODATA dupok size=403
	0x0000 4f 00 00 00 26 00 00 00 00 00 00 00 00 00 00 02  O...&...........
	0x0010 00 00 40 00 02 00 00 50 00 02 00 00 58 00 02 00  ..@....P....X...
	0x0020 00 5c 00 02 00 00 5e 00 02 00 00 5f 00 02 00 00  .\....^...._....
	0x0030 5f 00 02 00 20 5f 00 02 00 30 5f 00 02 00 38 5f  _... _...0_...8_
	0x0040 00 02 00 3c 5f 00 02 00 3e 5f 00 02 00 3f 5f 00  ...<_...>_...?_.
	0x0050 02 80 3f 5f 00 02 c0 3f 5f 00 02 e0 3f 5f 00 02  ..?_...?_...?_..
	0x0060 f0 3f 5f 00 02 f8 3f 5f 00 02 fc 3f 5f 00 02 fe  .?_...?_...?_...
	0x0070 3f 5f 00 02 ff 3f 5f 00 82 ff 3f 5f 00 c2 ff 3f  ?_...?_...?_...?
	0x0080 5f 00 e2 ff 3f 5f 00 f2 ff 3f 5f 00 fa ff 3f 5f  _...?_...?_...?_
	0x0090 00 fe ff 3f 5f 00 ff ff 3f 5f 80 ff ff 3f 5f c0  ...?_...?_...?_.
	0x00a0 ff ff 3f 5f e0 ff ff 3f 5f f0 ff ff 3f 5f f8 ff  ..?_...?_...?_..
	0x00b0 ff 3f 5f fc ff ff 3f 5f fe ff ff 3f 5f ff ff ff  .?_...?_...?_...
	0x00c0 3f df ff ff ff 3f ff ff ff ff 3f ff ff ff ff 3f  ?....?....?....?
	0x00d0 ff ff fd ff 3f bf ff fd ff 3f af ff fd ff 3f a7  ....?....?....?.
	0x00e0 ff fd ff 3f a3 ff fd ff 3f a1 ff fd ff 3f a0 ff  ...?....?....?..
	0x00f0 fd ff 3f a0 ff fd ff 1f a0 ff fd ff 0f a0 ff fd  ..?.............
	0x0100 ff 07 a0 ff fd ff 03 a0 ff fd ff 01 a0 ff fd ff  ................
	0x0110 00 a0 ff fd 7f 00 a0 ff fd 3f 00 a0 ff fd 1f 00  .........?......
	0x0120 a0 ff fd 0f 00 a0 ff fd 07 00 a0 ff fd 03 00 a0  ................
	0x0130 ff fd 01 00 a0 ff fd 00 00 a0 ff 7d 00 00 a0 ff  ...........}....
	0x0140 3d 00 00 a0 ff 1d 00 00 a0 ff 0d 00 00 a0 ff 05  =...............
	0x0150 00 00 a0 ff 01 00 00 a0 ff 00 00 00 a0 7f 00 00  ................
	0x0160 00 a0 3f 00 00 00 a0 1f 00 00 00 a0 0f 00 00 00  ..?.............
	0x0170 a0 07 00 00 00 a0 03 00 00 00 a0 01 00 00 00 a0  ................
	0x0180 00 00 00 00 20 00 00 00 00 00 00 00 00 00 00 00  .... ...........
	0x0190 00 00 00                                         ...
gclocals·0bdf114aa3827f57b753ac60b6cba547 SRODATA dupok size=66
	0x0000 1d 00 00 00 0f 00 00 00 00 00 01 00 03 00 07 00  ................
	0x0010 0f 00 2f 00 6f 00 ef 00 ef 01 ef 03 ef 07 ef 0f  ../.o...........
	0x0020 ef 1f ef 3f ef 7f ee 7f ec 7f e8 7f e0 7f c0 7f  ...?............
	0x0030 80 7f 00 7f 00 7e 00 7c 00 78 00 70 00 60 00 40  .....~.|.x.p.`.@
	0x0040 02 40                                            .@
gclocals·b3e6cef2da4123bb4fb758b92dba3371 SRODATA dupok size=11
	0x0000 03 00 00 00 05 00 00 00 02 00 10                 ...........
gclocals·7d2d5fca80364273fb07d5820a76fef4 SRODATA dupok size=8
	0x0000 03 00 00 00 00 00 00 00                          ........
gclocals·2a5305abe05176240e61b8620e19a815 SRODATA dupok size=9
	0x0000 01 00 00 00 01 00 00 00 00                       .........
gclocals·f9f7ab7ad6fb062a0f5071d66e374c7a SRODATA dupok size=27
	0x0000 13 00 00 00 02 00 00 00 03 03 03 03 03 03 03 03  ................
	0x0010 03 03 03 03 03 02 02 02 02 02 00                 ...........
gclocals·66140cb71a2972658a8a1e26b9e96746 SRODATA dupok size=559
	0x0000 13 00 00 00 e5 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 02 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 82 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 02  ................
	0x0060 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 22 00 02 00  ............"...
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 22 00 00 00 00 00 00  ........."......
	0x00a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 22 02 00 00 00 00 00 00 00 00  ......".........
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 02 02 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 03 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 00 00 00 00 00 00 00 10 00 00  ................
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0120 00 00 00 00 00 00 00 00 00 00 10 00 00 00 00 00  ................
	0x0130 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0140 aa aa aa aa aa aa 0a 10 00 00 00 00 00 00 00 00  ................
	0x0150 aa aa aa aa aa aa 0a 00 00 00 00 00 00 aa aa aa  ................
	0x0160 aa aa aa 0a 10 00 00 00 00 00 00 00 00 aa aa aa  ................
	0x0170 aa aa aa 0a 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0180 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0190 00 00 00 00 00 00 00 00 00 00 00 00 00 00 08 00  ................
	0x01a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01b0 00 00 00 00 00 00 00 00 00 00 00 08 80 00 00 00  ................
	0x01c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01d0 00 00 00 00 00 00 00 00 00 00 04 00 00 00 00 00  ................
	0x01e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01f0 00 00 00 00 00 00 10 00 00 00 00 00 00 00 00 00  ................
	0x0200 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0210 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0220 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ...............
gclocals·0829519d603c6cdd13147779cbc49985 SRODATA dupok size=17
	0x0000 09 00 00 00 07 00 00 00 00 01 03 02 40 60 04 24  ............@`.$
	0x0010 07                                               .
"".runRoutine.stkobj SRODATA dupok size=40
	0x0000 02 00 00 00 00 00 00 00 48 f9 ff ff ff ff ff ff  ........H.......
	0x0010 00 00 00 00 00 00 00 00 c0 fc ff ff ff ff ff ff  ................
	0x0020 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.[1]interface {}+0
	rel 32+8 t=1 type."".tera+0
gclocals·a83a7d8dc33985293a61cbf405370a84 SRODATA dupok size=51
	0x0000 2b 00 00 00 02 00 00 00 03 03 03 03 03 03 03 03  +...............
	0x0010 03 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02  ................
	0x0020 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02 02  ................
	0x0030 02 00 03                                         ...
gclocals·efa989d7313d98ac1fd2a354d97c2544 SRODATA dupok size=954
	0x0000 2b 00 00 00 af 00 00 00 00 00 00 00 00 00 00 00  +...............
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 02 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00 00  ................
	0x0050 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 02 00 02 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 02  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 01 00 00 02 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 02 00 00 40 00  ..............@.
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 40 00 00 00 00 00 00 00 00 00 00 00  ....@...........
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 80 00  ................
	0x0100 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0110 00 00 04 00 80 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0120 00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  ................
	0x0130 00 00 00 00 00 00 00 00 00 00 00 00 00 08 04 00  ................
	0x0140 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0150 00 00 00 08 04 00 08 00 00 00 00 00 00 00 00 00  ................
	0x0160 00 00 00 00 00 00 00 00 00 00 04 00 00 00 80 00  ................
	0x0170 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0180 00 00 00 00 80 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0190 00 00 00 00 00 00 00 00 00 80 00 00 00 00 00 00  ................
	0x01a0 00 00 00 00 00 00 00 00 00 00 00 00 00 08 00 00  ................
	0x01b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01c0 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01d0 00 00 00 00 00 00 00 00 00 00 00 00 08 00 00 00  ................
	0x01e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01f0 02 00 08 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0200 00 00 00 00 00 00 02 00 00 00 00 00 00 00 00 00  ................
	0x0210 00 00 00 00 00 00 00 00 00 00 00 20 02 00 00 00  ........... ....
	0x0220 00 00 00 00 00 00 00 00 00 00 00 00 00 00 10 00  ................
	0x0230 00 20 02 00 00 00 00 00 00 00 00 00 00 00 00 00  . ..............
	0x0240 00 00 00 00 00 00 00 80 02 00 00 00 00 00 00 00  ................
	0x0250 00 00 00 00 00 00 00 00 00 00 00 00 00 80 00 00  ................
	0x0260 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0270 00 80 00 80 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0280 00 00 00 00 00 00 00 80 00 00 00 00 00 00 00 00  ................
	0x0290 00 00 00 00 00 00 00 00 00 00 00 00 00 a0 00 00  ................
	0x02a0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02b0 00 00 00 a0 00 00 00 00 00 00 50 00 00 00 00 00  ..........P.....
	0x02c0 00 00 00 00 00 00 00 00 08 a0 00 00 00 00 00 00  ................
	0x02d0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 08 20  ............... 
	0x02e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x02f0 00 00 00 00 08 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0300 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0310 00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0320 00 00 00 00 20 00 00 00 00 00 00 00 00 00 00 00  .... ...........
	0x0330 00 00 00 00 00 00 04 00 00 00 00 00 00 00 00 00  ................
	0x0340 00 00 00 00 00 00 00 00 00 00 00 00 04 00 00 00  ................
	0x0350 00 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00  . ..............
	0x0360 00 00 00 00 00 00 00 00 00 20 00 00 00 00 00 00  ......... ......
	0x0370 00 00 00 00 00 00 00 00 00 00 00 00 00 04 00 00  ................
	0x0380 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0390 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x03a0 00 00 00 00 00 00 00 02 00 00 40 00 00 00 00 00  ..........@.....
	0x03b0 00 00 00 a8 aa aa aa aa aa 2a                    .........*
gclocals·f8bb915652378d427832a1dec04c2327 SRODATA dupok size=17
	0x0000 09 00 00 00 07 00 00 00 00 01 03 02 04 05 07 40  ...............@
	0x0010 24                                               $
"".runNative.stkobj SRODATA dupok size=56
	0x0000 03 00 00 00 00 00 00 00 98 fb ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00 e8 fb ff ff ff ff ff ff  ................
	0x0020 00 00 00 00 00 00 00 00 a0 fc ff ff ff ff ff ff  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.[1]interface {}+0
	rel 32+8 t=1 type.[1]interface {}+0
	rel 48+8 t=1 type.[2]interface {}+0
gclocals·263043c8f03e3241528dfae4e2812ef4 SRODATA dupok size=10
	0x0000 02 00 00 00 01 00 00 00 00 00                    ..........
gclocals·5e326a2f5498e528ce8fbe7bd86e7d21 SRODATA dupok size=11
	0x0000 03 00 00 00 02 00 00 00 03 03 00                 ...........
gclocals·5363b3e3636eaaac400b9fb2466dc1f5 SRODATA dupok size=11
	0x0000 03 00 00 00 04 00 00 00 00 08 00                 ...........
gclocals·e9f683aa71ab17cad0d785368ee6ad67 SRODATA dupok size=27
	0x0000 13 00 00 00 01 00 00 00 01 01 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00                 ...........
gclocals·e6ee03644b750d8c15b2cb7a39aa82cc SRODATA dupok size=84
	0x0000 13 00 00 00 1d 00 00 00 00 00 00 00 80 00 00 00  ................
	0x0010 80 00 00 00 81 00 00 00 c1 00 00 00 e1 00 00 00  ................
	0x0020 f1 00 00 00 71 00 00 00 79 00 00 00 79 00 50 15  ....q...y...y.P.
	0x0030 7d 00 00 00 7c 00 00 00 3c 00 00 00 1c 00 00 00  }...|...<.......
	0x0040 0c 00 00 00 04 00 00 00 00 00 00 00 00 20 00 00  ............. ..
	0x0050 00 01 00 00                                      ....
gclocals·7f70096d03f846d6675cbfe264db1363 SRODATA dupok size=15
	0x0000 07 00 00 00 07 00 00 00 00 01 40 03 02 07 43     ..........@...C
"".trackGC.stkobj SRODATA dupok size=24
	0x0000 01 00 00 00 00 00 00 00 b0 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.[5]interface {}+0
gclocals·2d7c1615616d4cf40d01b3385155ed6e SRODATA dupok size=11
	0x0000 03 00 00 00 01 00 00 00 01 00 00                 ...........
gclocals·6d81f9fc90b2254ac2f1067a7bf2c67c SRODATA dupok size=11
	0x0000 03 00 00 00 03 00 00 00 00 00 01                 ...........
gclocals·ef22736e31ca7e9ff10587cea75d17ff SRODATA dupok size=11
	0x0000 03 00 00 00 04 00 00 00 00 08 02                 ...........
gclocals·4e929236783764d8eaf7a1af1e905a58 SRODATA dupok size=112
	0x0000 08 00 00 00 67 00 00 00 00 00 00 00 00 00 50 55  ....g.........PU
	0x0010 55 55 55 55 55 00 00 00 00 00 00 50 55 55 55 55  UUUUU......PUUUU
	0x0020 55 55 00 00 00 00 00 00 00 00 00 00 00 00 00 00  UU..............
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
gclocals·51f9bf0db8cfbcf03737255a6302d61d SRODATA dupok size=128
	0x0000 08 00 00 00 76 00 00 00 00 00 00 00 00 00 00 00  ....v...........
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 54  ...............T
	0x0020 55 55 55 55 55 15 00 00 00 00 00 00 00 00 54 55  UUUUU.........TU
	0x0030 55 55 55 55 15 40 00 00 00 00 00 00 00 00 00 00  UUUU.@..........
	0x0040 00 00 00 00 40 04 00 00 00 00 00 00 00 00 00 00  ....@...........
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 20 00 00 00 00 00 00 00 00 00 00 00 00 00  .. .............
	0x0070 00 00 20 00 00 00 00 00 00 00 00 00 00 00 00 00  .. .............
gclocals·8b406b1972bae10652a173e587abd896 SRODATA dupok size=15
	0x0000 07 00 00 00 07 00 00 00 00 40 60 01 05 03 02     .........@`....
"".TestTeraValueReceiverRoutine.func1.stkobj SRODATA dupok size=24
	0x0000 01 00 00 00 00 00 00 00 a0 fc ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.errors.errorString+0
gclocals·e9d96d57d2c3e2899adea7f0ae81d69c SRODATA dupok size=99
	0x0000 07 00 00 00 67 00 00 00 00 00 00 00 00 00 50 55  ....g.........PU
	0x0010 55 55 55 55 55 00 00 00 00 00 00 00 00 00 00 00  UUUUU...........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00                                         ...
gclocals·ddafd53eafbe6cc7d39cba9c5e704644 SRODATA dupok size=22
	0x0000 07 00 00 00 10 00 00 00 00 00 00 00 01 00 00 01  ................
	0x0010 00 05 80 00 00 20                                ..... 
gclocals·e0bce6494600d81ccfe66faf0f0766c3 SRODATA dupok size=13
	0x0000 05 00 00 00 03 00 00 00 00 01 05 03 02           .............
"".TestTeraPointerReceiverRoutine.func1.stkobj SRODATA dupok size=40
	0x0000 02 00 00 00 00 00 00 00 d0 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.errors.errorString+0
	rel 32+8 t=1 type."".tera+0
gclocals·72d3c7b1329acbd336a83b08909ef1b6 SRODATA dupok size=47
	0x0000 03 00 00 00 67 00 00 00 00 00 00 00 00 00 50 55  ....g.........PU
	0x0010 55 55 55 55 55 00 00 00 00 00 00 50 55 55 55 55  UUUUU......PUUUU
	0x0020 55 55 00 00 00 00 00 00 00 00 00 00 00 00 00     UU.............
gclocals·2dd975a5d416a941d0db91113f946ec3 SRODATA dupok size=11
	0x0000 03 00 00 00 02 00 00 00 00 02 00                 ...........
gclocals·afad599a374687002fe037c60f940416 SRODATA dupok size=12
	0x0000 04 00 00 00 07 00 00 00 00 01 40 03              ..........@.
"".TestTeraValueReceiverNative.func1.stkobj SRODATA dupok size=24
	0x0000 01 00 00 00 00 00 00 00 a0 fc ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.errors.errorString+0
"".TestTeraPointerReceiverNative.func1.stkobj SRODATA dupok size=40
	0x0000 02 00 00 00 00 00 00 00 d0 ff ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.errors.errorString+0
	rel 32+8 t=1 type."".tera+0
gclocals·c7c4fc7b12f6707ea74acf7400192967 SRODATA dupok size=11
	0x0000 03 00 00 00 01 00 00 00 01 01 00                 ...........
gclocals·87f6052ef51eed84352c5a7cd7c29d63 SRODATA dupok size=11
	0x0000 03 00 00 00 02 00 00 00 00 01 00                 ...........
gclocals·f921db378992a411b04a03b038505262 SRODATA dupok size=11
	0x0000 03 00 00 00 03 00 00 00 00 01 04                 ...........
gclocals·6df2c81b738e35f9bcc0e336dfc774e0 SRODATA dupok size=40
	0x0000 20 00 00 00 03 00 00 00 06 06 04 04 04 04 04 04   ...............
	0x0010 04 04 04 04 04 04 04 04 04 04 04 04 04 04 04 04  ................
	0x0020 04 04 04 04 04 04 00 06                          ........
gclocals·1521c3d4ce9c7f8618957801866c4c12 SRODATA dupok size=648
	0x0000 20 00 00 00 9c 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x0030 00 00 00 00 40 00 00 00 00 00 00 00 00 00 00 00  ....@...........
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 10 00 00  ................
	0x0070 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 12 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 00 12 00 20 00 00 00 00  ........... ....
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 10 00 00  ................
	0x00c0 00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 04 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x00f0 00 00 00 00 00 00 00 00 00 00 08 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 00 00 00 00 00 00 00 80 00 00  ................
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0120 00 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0130 00 00 00 00 00 00 00 88 00 00 00 00 00 00 00 00  ................
	0x0140 00 00 00 00 00 00 00 00 00 00 00 08 00 00 00 00  ................
	0x0150 00 00 00 00 00 00 00 00 00 00 00 00 00 00 80 08  ................
	0x0160 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0170 02 00 80 08 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0180 00 00 00 00 00 00 00 0a 00 00 00 00 00 00 00 00  ................
	0x0190 00 00 00 00 00 00 00 00 00 00 00 02 00 00 00 00  ................
	0x01a0 00 00 00 00 00 00 00 00 00 00 00 00 00 08 00 02  ................
	0x01b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01c0 00 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x01d0 00 00 00 00 80 08 00 00 00 00 00 00 00 00 00 00  ................
	0x01e0 00 00 00 00 00 00 00 00 80 08 00 00 00 00 0a 00  ................
	0x01f0 00 00 00 00 00 00 00 00 00 00 00 00 81 08 00 00  ................
	0x0200 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0210 81 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0220 00 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0230 00 00 00 00 00 00 00 00 00 00 00 00 80 00 00 00  ................
	0x0240 00 00 00 00 00 00 00 00 00 00 00 00 00 00 20 00  .............. .
	0x0250 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0260 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0270 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  ........@.......
	0x0280 00 55 55 55 55 55 55 05                          .UUUUUU.
gclocals·2d82400d6d45c90d4d230ea371739f22 SRODATA dupok size=15
	0x0000 07 00 00 00 07 00 00 00 00 01 02 04 03 05 40     ..............@
"".runRoutine.func2.stkobj SRODATA dupok size=56
	0x0000 03 00 00 00 00 00 00 00 00 fc ff ff ff ff ff ff  ................
	0x0010 00 00 00 00 00 00 00 00 a0 fc ff ff ff ff ff ff  ................
	0x0020 00 00 00 00 00 00 00 00 c0 fc ff ff ff ff ff ff  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 16+8 t=1 type.[1]interface {}+0
	rel 32+8 t=1 type.[2]interface {}+0
	rel 48+8 t=1 type."".tera+0
gclocals·e8abba548424d9cccb7d8d7be27735c9 SRODATA dupok size=16
	0x0000 02 00 00 00 1b 00 00 00 00 00 00 00 00 00 00 00  ................
gclocals·7e7fcb5c7cd183fbe200fb26b1d44a90 SRODATA dupok size=12
	0x0000 04 00 00 00 02 00 00 00 03 03 02 00              ............
gclocals·4d1b051aa74e541832d091537787462f SRODATA dupok size=12
	0x0000 04 00 00 00 02 00 00 00 00 02 00 00              ............
gclocals·2589ca35330fc0fce83503f4569854a0 SRODATA dupok size=10
	0x0000 02 00 00 00 02 00 00 00 00 00                    ..........
gclocals·fdbf1f5761f6d17e8ae3f0aaecb6a3c5 SRODATA dupok size=11
	0x0000 03 00 00 00 02 00 00 00 03 02 00                 ...........
